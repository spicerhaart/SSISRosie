<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="10/26/2018 4:42:07 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="79000ITD10"
  DTS:CreatorName="SPICERHAART\1901434"
  DTS:DTSID="{1120C239-7CA2-4D21-80DA-CE2EFBD341FA}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:FailParentOnFailure="True"
  DTS:LastModifiedProductVersion="15.0.1301.433"
  DTS:LocaleID="2057"
  DTS:ObjectName="RosieMetricCalendarPull"
  DTS:PackageType="5"
  DTS:ProtectionLevel="2"
  DTS:VersionBuild="752"
  DTS:VersionGUID="{B2C930CE-DDDF-4865-A757-173A2BE3F7EF}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[COLSQLBI01v.Metrics]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{070CE365-EE36-4C7E-9739-3E74E4BAF926}"
      DTS:ObjectName="COLSQLBI01v.Metrics">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=COLSQLBI01v;Initial Catalog=Metrics;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[HTTP 1]"
      DTS:CreationName="ZS-HTTP"
      DTS:DTSID="{56570871-59FE-47B9-87EC-F9383BCD6220}"
      DTS:ObjectName="HTTP 1">
      <DTS:ObjectData>
        <ConnectionManager
          ConnectionString="Url=https://api.rexsoftware.com/rex.php;CredentialType=Notset;UserName=;Timeout=100000;SoapWssPasswordType=Notset;JwtCustomClaims=;RetainCookies=False;UseProxy=False;ProxyUrl=;UseProxyCreds=False;ProxyUserName=;DoNotUseDefaultProxy=False;UseClientCertificate=False;CertificatePath=;CertificateStorageType=CurrentUser;CertificateStoreName=My;CertificateThumbprint=;RetryMode=None;RetryCountMax=3;RetryWaitTimeMs=2000;RetryMultiplyWaitTime=False;RetryMessageList=;RetryStatusCodeList=;AuthScheme=Bearer;TokenAuthHeader=;TokenUrl=;TokenRequestData=;TokenRequestHeaders=Accept:*/*||Cache-Control:no-cache;TokenRequestMethod=;TokenRequestContentType=Default;TokenRequestIsMultiPart=False;TokenResponseContentFilter=;TokenResponseValueExtractMode=Body;TokenResponseCookie=;TokenResponseHeader=;TokenResponseContentType=None;TokenExpirationTimeInSeconds=3600;EnableRequestHashing=False;HashAlgorithm=sha256;HashSignatureFormat=;HashSignatureFormatForLogin=;ExtraHeaders=;ExtraHeadersForLogin=;HashTimestampFormat=;HashTreatSecretAsNonBase64=False;HashSignWithApiKey=False;RetainSameConnection=False" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[RexSync.xml]"
      DTS:CreationName="FILE"
      DTS:DTSID="{FA8FC668-F6D9-487C-98A2-C602DEF06981}"
      DTS:ObjectName="RexSync.xml">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="C:\SSISVariables\RexSync.xml" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[SMTP]"
      DTS:CreationName="ZS-SMTP"
      DTS:DTSID="{6D5AF0B6-32DC-48C6-B9A9-BB486575F8DC}"
      DTS:ObjectName="SMTP">
      <DTS:ObjectData>
        <ConnectionManager
          ConnectionString="SmtpServer=outlookcol;UserName=;Port=25;EnableSsl=False;Timeout=10000;EnableAnonymousAuth=False" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[SMTP Connection Manager]"
      DTS:CreationName="SMTP"
      DTS:DTSID="{B9633C34-FACA-49D8-B63C-47C353A85D8A}"
      DTS:ObjectName="SMTP Connection Manager">
      <DTS:ObjectData>
        <SmtpConnectionManager
          ConnectionString="SmtpServer=outlookcol;UseWindowsAuthentication=False;EnableSsl=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:PackageParameters>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{65BEEA2F-3098-4929-B91C-6A62C9FB57D3}"
      DTS:ObjectName="Partition">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">ALL</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="11"
      DTS:DTSID="{D3F93D17-ED08-47E1-8E5C-90F1067231AD}"
      DTS:ObjectName="ProcessCalendars">
      <DTS:Property
        DTS:DataType="11"
        DTS:Name="ParameterValue">-1</DTS:Property>
    </DTS:PackageParameter>
  </DTS:PackageParameters>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{47BBF7A6-6BAD-4881-A624-66FC968BCD20}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="CalendarObject">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{076A4318-51CE-4903-BF44-F7E8EFDEAA4A}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="ExecutedRecordCount">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{6DBCCFF6-640E-4BAF-B77B-3EB7F714B6BA}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="FailedDMACount">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{70A45D99-E887-4935-94B7-5ABD8B0D626E}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="KCode">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{5F69CAD8-3674-4FAB-BD64-C15A4B3F3687}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="KPIActionedAccountUserID">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{4485CED6-DFA1-48C4-9157-9FC858AD314E}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="KPIList">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{C8322DD9-D782-4F6F-AEFA-361B9984A746}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="KPITime">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{9E5D8463-2235-4A75-98B9-7EFD3BCCFDBA}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="KPIUserID">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B67A9C09-48F9-41C2-A1F2-C419AB69D920}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="KPIValue">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{9FDE07E1-30F7-4FCE-A10C-7E3251B9604D}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="ListingServiceID">
      <DTS:VariableValue
        DTS:DataType="3">1</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{2F203FE9-8E45-4819-8399-32259D61AB02}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="MetricID">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{415A9D31-05B4-44B4-86C5-F2E3163FD684}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="MetricObject">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{4C4F0492-226A-40BF-A701-AA5B2CC21865}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="MetricOrigin">
      <DTS:VariableValue
        DTS:DataType="3">1</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{5E2D6ED9-6F42-4A69-8327-DD600234AADC}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="MetricTotal">
      <DTS:VariableValue
        DTS:DataType="3">-1</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F6131C7F-F1F8-4D08-89ED-94FD20B4DADE}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="MetricUpserted">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{5F547F22-EBCE-4664-A5A2-3A234BAA8D00}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="OfficeList">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{225EDD6B-C0B7-4667-9F26-11FB3E5C4446}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Office_id">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{06A77D0C-38B9-46BD-B8DA-A6B72F477212}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="PackageErrorEmail">
      <DTS:VariableValue
        DTS:DataType="8">keith.mills@spicerhaart.co.uk</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{026C91FD-9205-4635-877C-39E4BB68E2DB}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="PackageExecutionInfo">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{6782CF74-B703-44D2-B3B8-03EE86A40D25}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="PackagePassword">
      <DTS:VariableValue
        DTS:DataType="8">P4ssword</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{449F441E-2469-4EFA-B334-2B84183532A6}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="PackageStartDate">
      <DTS:VariableValue
        DTS:DataType="7">1/1/2020</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B94EC501-8B24-494B-952A-7AC4D1AC650A}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="PackageStartForNextRun">
      <DTS:VariableValue
        DTS:DataType="7">1/1/2020</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{019084D8-1EE9-4A33-8056-D30C0CD2B741}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="PackageUser">
      <DTS:VariableValue
        DTS:DataType="8">1897047@spicerhaart.com</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{CF55CFDF-7F6B-452F-8418-273B33B91FD5}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="ProcessingStart">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{36B148ED-8B73-45BE-A1BA-84FA58C22381}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="PropertyCategory">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{7B5B89C4-C695-4749-BAA0-E3245115F526}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Record_id">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{13162190-9F7E-4C4B-BED2-A48BDC2408C9}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ResponseAuth">
      <DTS:VariableValue
        DTS:DataType="8">{ 	"result": { 		"metric": "K006", 		"time": 1574501564, 		"recorded_at": 1574501564, 		"value": 1, 		"recorded_by_user": { 			"id": "25918", 			"_name": "Shannay Jarvis", 			"_first_name": "Shannay", 			"_last_name": "Jarvis", 			"_email_address": "Shannay.Jarvis@haart.co.uk" 		}, 		"labels": [ 			{ 				"label": "service_name", 				"value": "CalendarEvents" 			}, 			{ 				"label": "record_id", 				"value": "32f81cc2-0dd4-11ea-b8c1-5adf458c5229" 			} 		], 		"user_attributions": [ 			{ 				"percentage": 100, 				"user": { 					"id": "25918", 					"_name": "Shannay Jarvis", 					"_first_name": "Shannay", 					"_last_name": "Jarvis", 					"_email_address": "Shannay.Jarvis@haart.co.uk" 				} 			} 		], 		"_id": 698037 	}, 	"error": null }</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{22541999-7477-4C9F-8ABC-B8FF38568E02}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ResponseAuthCode">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{0A9E1491-CDE5-4EDC-917C-259F258DF145}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="RexAccountID">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{05CC8E19-7C31-4D71-8BF3-E8C94CACDCF9}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="RexAPIWebURL">
      <DTS:VariableValue
        DTS:DataType="8">https://api.uk.rexsoftware.com/rex.php</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{4E77A376-7A26-4905-9F6A-13C7B70DAB25}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="RexToken">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{74865252-6C1F-4B0B-BAA9-784E2CC4C117}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="RosieUserID">
      <DTS:VariableValue
        DTS:DataType="3">18382</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{2B546B92-11EB-4FED-BE45-B57E0161F847}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ServiceName">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{1D338EF4-ABEC-4F69-9A50-12F7EEB88EAE}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="DATEDIFF(&quot;S&quot;, (DT_DBTIMESTAMP)&quot;1970-01-01&quot;, (DT_DBTIMESTAMP)&quot;2018-09-01&quot;)"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="system_ctime">
      <DTS:VariableValue
        DTS:DataType="3">1535760000</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{CC5DB120-9B4A-44D8-B520-622DCD55C3E3}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="UpsertedCount">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{EAFCA3A1-3D2C-4386-A100-6DA336F19BD3}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="Variable">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Get Office List"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{C3022D6E-9F26-4E42-B6F0-D6A4D99498AD}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Get Office List"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{78432CA1-1FEA-4ED4-9C0F-D552A4A9DE0E}"
          SQLTask:BypassPrepare="False"
          SQLTask:SqlStatementSource="  select office_id,r_account_id ,[LastRunTime]&#xA;  from dbo.RosieOfficeMigration rom WITH (NOLOCK) &#xA;  left outer join [Rosie].[dbo].[PackageLastRun] plr&#xA;&#x9;&#x9;&#x9;ON rom.r_account_id = plr.[AccountId]&#xA;&#x9;&#x9;&#x9;and [PackageName] = 'FullMetricPull'&#xA;&#x9;&#xA;  &#xA;  WHERE migrated = 1"
          SQLTask:ResultType="ResultSetType_Rowset" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ResultBinding
            SQLTask:ResultName="0"
            SQLTask:DtsVariableName="User::OfficeList" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="0"
            SQLTask:DtsVariableName="$Package::Partition"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="129"
            SQLTask:ParameterSize="-1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="1"
            SQLTask:DtsVariableName="$Package::Partition"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="129"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Iterate Offices"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:Description="Foreach Loop Container"
      DTS:DTSID="{8A60967C-6680-4A97-9539-A9CDC3A2100F}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="-1"
      DTS:ObjectName="Iterate Offices">
      <DTS:ForEachEnumerator
        DTS:CreationName="Microsoft.ForEachADOEnumerator"
        DTS:DTSID="{CF5224E1-79DE-44FE-8A64-FD132A3C9D73}"
        DTS:ObjectName="{A7CC5C17-CF0B-4BFC-AD97-DC80FF43AE29}">
        <DTS:ObjectData>
          <FEEADO
            EnumType="EnumerateRowsInFirstTable"
            VarName="User::OfficeList" />
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Iterate Offices\Sequence Container"
          DTS:CreationName="STOCK:SEQUENCE"
          DTS:Description="Sequence Container"
          DTS:DTSID="{E958088A-0605-4B29-903D-A1A60E451F56}"
          DTS:ExecutableType="STOCK:SEQUENCE"
          DTS:LocaleID="-1"
          DTS:ObjectName="Sequence Container">
          <DTS:Variables />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Iterate Offices\Sequence Container\Email Auth Failure"
              DTS:CreationName="ZappySys.HtmlEmailTask"
              DTS:Description="Email Auth Failure"
              DTS:DTSID="{ED3F7740-82B4-4813-A63A-719C28A6F568}"
              DTS:ExecutableType="ZappySys.HtmlEmailTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Email Auth Failure"
              DTS:TaskContact="HTML Email Task; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <HtmlEmailTask
                  SmtpConnection="SMTP"
                  IsHtmlEmail="True"
                  DefaultStyle="&#xA;&lt;style type=&quot;text/css&quot;&gt;&#xA;body,div,p,span,td,th,table {&#xA; font-family: Helvetica, Arial, sans-serif;&#xA; font-size: 10pt; &#xA;}&#xA;h1,h2,h3,h4,h5{&#xA;font-family: Helvetica, Arial, sans-serif;&#xA;}&#xA;&#xA;table { &#xA; border-collapse: &#xA; collapse; border-spacing: 0; &#xA;}&#xA;&#xA;tr.odd    {background-color: #cccccc}&#xA;tr.even   {background-color: #fafafa}&#xA;td, th { border: 1px solid #bbb;padding: 5 5 5 5} &#xA;th { background: #F3F3F3;  font-weight: bold;}&#xA;&lt;/style&gt;&#xA;&#xA;"
                  Subject="Error occured in {{System::PackageName}}"
                  From="alerts@spicerhaart.co.uk"
                  To="{{User::PackageErrorEmail}}"
                  Cc=""
                  ReplyTo=""
                  Bcc=""
                  Attachments=""
                  EmailPriority="High"
                  MessageSourceType="Direct"
                  MessageDirectValue="&lt;b&gt;Failed to get Authorization Key&lt;/b&gt;&lt;p /&gt;&#xA;&#xA;&lt;p&gt; Response Code =&gt; {{User::ResponseAuthCode}} &lt;p /&gt;&#xA;&#xA;"
                  MessageFileConnection=""
                  MessageVariable=""
                  LogLevel="Normal"
                  PrefixTimestamp="False" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Iterate Offices\Sequence Container\Get Auth Key"
              DTS:CreationName="ZappySys.RestApiTask"
              DTS:Description="ZS REST API Task"
              DTS:DTSID="{50323096-BEC1-4DE9-B934-2C7604CB4583}"
              DTS:ExecutableType="ZappySys.RestApiTask"
              DTS:FailPackageOnFailure="True"
              DTS:LocaleID="-1"
              DTS:ObjectName="Get Auth Key"
              DTS:TaskContact="REST API Task; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <RestApiTask
                  RequestAccessMode="DirectUrl"
                  RequestUrlVariable=""
                  EnableStatusCheck="False"
                  StatusCheckMaxWaitSeconds="0"
                  StatusFieldFilterType="None"
                  StatusFieldFilterExpr=""
                  StatusCheckIterationWaitSeconds="0"
                  StatusCheckForFailedValue="False"
                  StatusSuccessValue=""
                  StatusContinueValue=""
                  StatusFailedValue=""
                  IsMultiPartUpload="False"
                  AddMultiPartPostamble="False"
                  PreventAutoRedirect="False"
                  RequestTimeoutMs="0"
                  SecurityProtocol="Default"
                  EnableCompressionSupport="True"
                  AllowUnsecureSuite="False"
                  IgnoreCertificateErrors="False"
                  RequestUrl="{{User::RexAPIWebURL}}"
                  RequestUrlConnection=""
                  RequestMethod="POST"
                  RequestContentType="ApplicationJson"
                  OverrideConnectionUrl="False"
                  RequestHeaders="&lt;request&gt;&lt;header&gt;&lt;name&gt;Accept&lt;/name&gt;&lt;value&gt;*/*&lt;/value&gt;&lt;/header&gt;&lt;header&gt;&lt;name&gt;Cache-Control&lt;/name&gt;&lt;value&gt;no-cache&lt;/value&gt;&lt;/header&gt;&lt;header&gt;&lt;name&gt;X-App-Identifier&lt;/name&gt;&lt;value&gt;client:spicerhaart:{{System::PackageName}}:{{System::TaskName}}&lt;/value&gt;&lt;/header&gt;&lt;/request&gt;"
                  RequestData="{&#xA;&quot;method&quot;:&quot;Authentication::login&quot;,&#xA;&quot;args&quot;:{&#xA;&quot;email&quot;:&quot;{{User::PackageUser}}&quot;,&#xA;&quot;password&quot;:&quot;{{User::PackagePassword}}&quot;,&#xA;&quot;account_id&quot;:&quot;{{User::RexAccountID}}&quot;,&#xA;&quot;application&quot;:&quot;rex&quot;&#xA;}&#xA;}"
                  SaveResponse="True"
                  SaveResponseStatusCode="True"
                  ResponseAccessMode="Variable"
                  SaveAsBinary="False"
                  ResponseDataFilePath=""
                  ResponseHeaderMappings="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-16&quot;?&gt;&lt;ArrayOfKeyValueMapping xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot;&gt;&lt;KeyValueMapping&gt;&lt;Key&gt;Transfer-Encoding&lt;/Key&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;/KeyValueMapping&gt;&lt;KeyValueMapping&gt;&lt;Key&gt;Connection&lt;/Key&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;/KeyValueMapping&gt;&lt;KeyValueMapping&gt;&lt;Key&gt;Access-Control-Allow-Origin&lt;/Key&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;/KeyValueMapping&gt;&lt;KeyValueMapping&gt;&lt;Key&gt;Access-Control-Allow-Headers&lt;/Key&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;/KeyValueMapping&gt;&lt;KeyValueMapping&gt;&lt;Key&gt;Access-Control-Allow-Methods&lt;/Key&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;/KeyValueMapping&gt;&lt;KeyValueMapping&gt;&lt;Key&gt;Access-Control-Max-Age&lt;/Key&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;/KeyValueMapping&gt;&lt;KeyValueMapping&gt;&lt;Key&gt;Vary&lt;/Key&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;/KeyValueMapping&gt;&lt;KeyValueMapping&gt;&lt;Key&gt;Content-Encoding&lt;/Key&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;/KeyValueMapping&gt;&lt;KeyValueMapping&gt;&lt;Key&gt;Content-Type&lt;/Key&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;/KeyValueMapping&gt;&lt;KeyValueMapping&gt;&lt;Key&gt;Date&lt;/Key&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;/KeyValueMapping&gt;&lt;KeyValueMapping&gt;&lt;Key&gt;Server&lt;/Key&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;/KeyValueMapping&gt;&lt;/ArrayOfKeyValueMapping&gt;"
                  ResponseCookieMappings="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-16&quot;?&gt;&lt;ArrayOfKeyValueMapping xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; /&gt;"
                  CookieContainerVariable=""
                  ConvertXmlToJson="False"
                  ResponseDataVariable="User::RexToken"
                  ResponseStatusCodeVariable="User::ResponseAuthCode"
                  ResponseContentType="Json"
                  ResponseContentFilter="$.result"
                  ResponseCharset=""
                  ValidateResponse="False"
                  ValidationRules="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-16&quot;?&gt;&lt;ResponseValidationSetting xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot;&gt;&lt;MatchAny&gt;false&lt;/MatchAny&gt;&lt;Rules&gt;&lt;ResponseValidationRule xsi:type=&quot;StatusCodeValidationRule&quot;&gt;&lt;Enabled&gt;false&lt;/Enabled&gt;&lt;Operator&gt;Eq&lt;/Operator&gt;&lt;StatusCode&gt;200&lt;/StatusCode&gt;&lt;/ResponseValidationRule&gt;&lt;ResponseValidationRule xsi:type=&quot;ContentValidationRule&quot;&gt;&lt;Enabled&gt;false&lt;/Enabled&gt;&lt;Operator&gt;Eq&lt;/Operator&gt;&lt;Value /&gt;&lt;/ResponseValidationRule&gt;&lt;ResponseValidationRule xsi:type=&quot;HeaderValidationRule&quot;&gt;&lt;Enabled&gt;false&lt;/Enabled&gt;&lt;Operator&gt;Eq&lt;/Operator&gt;&lt;KeyName /&gt;&lt;Value /&gt;&lt;DataType&gt;String&lt;/DataType&gt;&lt;/ResponseValidationRule&gt;&lt;/Rules&gt;&lt;/ResponseValidationSetting&gt;"
                  ConsumeResponseOnError="False"
                  ContineOnAnyError="False"
                  ContineOnErrorForMessage="False"
                  ContineOnErrorForStatusCode="False"
                  ErrorStatusCodeToMatch="404"
                  MatchForEqual="True"
                  ErrorSubstringToMatch=""
                  ContineOn404Error="False"
                  SaveErrorFlagToVariable="False"
                  ErrorFlagVariableName=""
                  LogLevel="Normal"
                  PrefixTimestamp="False" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Iterate Offices\Sequence Container\Get Calendar items"
              DTS:CreationName="Microsoft.Pipeline"
              DTS:Description="Data Flow Task"
              DTS:DTSID="{92C45831-2BF2-493A-ACA4-1CE8C3E9D45C}"
              DTS:ExecutableType="Microsoft.Pipeline"
              DTS:LocaleID="-1"
              DTS:ObjectName="Get Calendar items"
              DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:ObjectData>
                <pipeline
                  version="1">
                  <components>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Get Calendar items\Add record id back"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="JSON Parser Transform; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="Parse incoming JSON String into columns. You can also parse and transform single JSON record into multiple rows by filtering data based on JSON Path (e.g. $.Customer.Orders[*])"
                      name="Add record id back"
                      usesDispositions="true"
                      version="2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for any numeric data types"
                          expressionType="Notify"
                          name="TreatBlankNumberAsNull">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for bool data types"
                          expressionType="Notify"
                          name="TreatBlankBoolAsNull">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for any date/time data types"
                          expressionType="Notify"
                          name="TreatBlankDateAsNull">true</property>
                        <property
                          dataType="System.String"
                          description="Sample JSON data used to parse output columns."
                          expressionType="Notify"
                          name="SampleData"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">{"method":"CalendarEvents::search","args":{"criteria":[{"value":"0505cebc-684d-11ea-9263-deb8bfcb35db","name":"id","type":"="},{"name":"unique_events","value":"true"}]},"strip_response_prefix":"true","token":"ddd1-24a5-5fd3-c4a8-973d-7e2f-2cc7-a402-1753-19443"}
</property>
                        <property
                          dataType="System.Boolean"
                          description="Include all upstream parent columns into output except the one you selected to parse. By default only parsed columns from Input document is included in the output. If you wish to include all other upstream columns in the output too then check this option."
                          expressionType="Notify"
                          name="OutputAllUpstreamColumns">true</property>
                        <property
                          dataType="System.Int32"
                          description="Defines how to handle empty input. By default NULL or Empty input is skipped from parsing."
                          expressionType="Notify"
                          name="EmptyInputProcessingMode"
                          typeConverter="ZappySys.Common.Data.EmptyInputProcessingMode">0</property>
                        <property
                          dataType="System.String"
                          description="Defines how to handle empty input. By default NULL or Empty input is skipped from parsing."
                          expressionType="Notify"
                          name="TreatEmptyInputAs">{ }</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum JSON records to fetch. Set this value to 0 for all records"
                          expressionType="Notify"
                          name="MaxRows">0</property>
                        <property
                          dataType="System.String"
                          description="Enter expression here to filter data.(Example:  $.Users[*].UserName ) This will fetch User names from users records"
                          expressionType="Notify"
                          name="Filter"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">$.args.criteria[0]</property>
                        <property
                          dataType="System.Boolean"
                          description="Use this option to include parent properties (Non array) in the output along with Filtered Rows"
                          expressionType="Notify"
                          name="IncludeParentColumns">false</property>
                        <property
                          dataType="System.Boolean"
                          description="By default child and parent information is not included in the output if children not found for specified expression. For example if you want to extract all orders from all customers nodes then you can type $.Customers[*].Orders[*]. This will fetch all orders from all customers. By default customers records without orders wont be included in the output. If you want to include those customers where orders not found then check this option (Output null information for order attributes). This behavior is similar to LEFT OUTER JOIN in SQL (Left side is parent, right side is child). This option is ***resource intensive*** so only check if you really care about this behavior."
                          expressionType="Notify"
                          name="IncludeParentColumnsWhenChildMissing">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to true if you want to output parent columns which are array. By default any parent column which is an array is not included in output. See also FilterForParentColumnsWithArrayType property if you set this property"
                          expressionType="Notify"
                          name="IncludeParentColumnsWithArrayType">false</property>
                        <property
                          dataType="System.String"
                          description="Filter expression to extract value form parent"
                          expressionType="Notify"
                          name="FilterForParentColumnsWithArrayType"></property>
                        <property
                          dataType="System.String"
                          description="Prefix for parent column name. This option is only valid if you have set IncludeParentColumns=True"
                          expressionType="Notify"
                          name="ParentColumnPrefix">P_</property>
                        <property
                          dataType="System.Boolean"
                          description="Throw error if property name specified in filter expression is missing. By default it will ignore any missing property errors."
                          expressionType="Notify"
                          name="ThrowErrorIfPropertyMissing">false</property>
                        <property
                          dataType="System.Int32"
                          description="This property how many nested levels should be scanned to fetch various properties. 0=Scan all child levels."
                          expressionType="Notify"
                          name="MaxLevelsToScan">0</property>
                        <property
                          dataType="System.String"
                          description="List comma separated property names from JSON document which you want to exclude from output. Specify parent property name to exclude all child nodes."
                          expressionType="Notify"
                          name="ExcludedProperties"></property>
                        <property
                          dataType="System.String"
                          description="Property level separator used in generated property name (separator for outer properties - Above selected filter node). Use this if default separator is producing duplicate property name which is conflicting with existing name."
                          expressionType="Notify"
                          name="LevelSeparator">_</property>
                        <property
                          dataType="System.Boolean"
                          description="Enables deep array flattening for selected filtered hierarchy. When you turn on this property it will flatten each property of each array item and expose as column (e.g. If you have Filter set as $.customers[*] and for each customer you have an array of Addresses then you may see output columns like Addresses.1.City, Addresses.1.State, Addresses.2.City, Addresses.2.State .... Addresses.N.City, Addresses.N.State). You can control how many array items you want to flatten by setting MaxArrayItemsToFlatten property."
                          expressionType="Notify"
                          name="EnableArrayFlattening">false</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum number of array items to flatten. inner array flattening. Adjust this property to control how many columns being generated. This option is ignored if you set EnableArrayFlattening=false"
                          expressionType="Notify"
                          name="MaxArrayItemsToFlatten">10</property>
                        <property
                          dataType="System.String"
                          description="Specifies how custom date formatted strings are parsed when reading JSON."
                          expressionType="Notify"
                          name="DateFormatString"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies how date formatted strings, e.g. Date(1198908717056) and 2012-03-21T05:40Z, are parsed when reading JSON."
                          expressionType="Notify"
                          name="DateParseHandling"
                          typeConverter="ZappySys.Common.DateParseHandling">1</property>
                        <property
                          dataType="System.Boolean"
                          description="Output as raw JSON document rather than parsing individual fields. This option is helpful if you have documents stored in a file and you want to pass them downstream as raw JSON string rather than parsing into columns."
                          expressionType="Notify"
                          name="OutputRawDocument">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indent JSON output so its easy to read."
                          expressionType="Notify"
                          name="IndentOutput">false</property>
                        <property
                          dataType="System.Boolean"
                          description="When this property is true then Column is converted to Row. Pivoted names will appear under  Pivot_Name column and values will appear under Pivot_Value field."
                          expressionType="Notify"
                          name="EnablePivot">false</property>
                        <property
                          dataType="System.Int32"
                          description="Array Transformation you want to apply. Useful for case when you have 2-Dimensional arrays with rows/columns in separate arrays."
                          expressionType="Notify"
                          name="ArrayTransformationType"
                          typeConverter="ZappySys.Json.ArrayTransformType">0</property>
                        <property
                          dataType="System.String"
                          description="Filter expression to use to extract column names for array transformation."
                          expressionType="Notify"
                          name="ArrayTransColumnNameFilter"></property>
                        <property
                          dataType="System.String"
                          description="Filter expression for row values (Not applicable for simple array transformation)."
                          expressionType="Notify"
                          name="ArrayTransRowValueFilter"></property>
                        <property
                          dataType="System.Boolean"
                          description="When you have 2D array but don't have column list specified in a separate array then use this option (e.g. { arr: [[10,11],[21,22]] } )."
                          expressionType="Notify"
                          name="ArrayTransEnableCustomColumns">false</property>
                        <property
                          dataType="System.String"
                          description="When you have 2D array but don't have column list specified in a separate array then use specify column names here. Use comma separated list (e.g col1,col2,col3 ). Column name Order must match value order."
                          expressionType="Notify"
                          name="ArrayTransCustomColumns"></property>
                        <property
                          dataType="System.Int32"
                          description="Metadata scan mode controls how data type and length is determined. By default few records scanned to determine datatype/length. Changing ScanMode affects length/datatype accuracy."
                          expressionType="Notify"
                          name="MetaDataScanMode"
                          typeConverter="ZappySys.Common.Data.MetaDataScanMode">4</property>
                        <property
                          dataType="System.Int32"
                          description="Length for all string column. This option is only valid for MetaDataScanMode=Custom"
                          expressionType="Notify"
                          name="MetaDataCustomLength">1000</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.JsonParserTransform</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Get Calendar items\Add record id back.Inputs[JsonParserTransformInput]"
                          errorRowDisposition="FailComponent"
                          name="JsonParserTransformInput"
                          truncationRowDisposition="FailComponent">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Get Calendar items\Add record id back.Inputs[JsonParserTransformInput].Columns[ZS_JSON_OUT]"
                              cachedDataType="nText"
                              cachedName="ZS_JSON_OUT"
                              lineageId="Package\Iterate Offices\Sequence Container\Get Calendar items\Receive response.Outputs[JsonParserTransformOutput].Columns[ZS_JSON_OUT]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Get Calendar items\Add record id back.Inputs[JsonParserTransformInput].Columns[StatusCode]"
                              cachedDataType="i4"
                              cachedName="StatusCode"
                              lineageId="Package\Iterate Offices\Sequence Container\Get Calendar items\Receive response.Outputs[JsonParserTransformOutput].Columns[StatusCode]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Get Calendar items\Add record id back.Outputs[JsonParserTransformOutput].Columns[StatusCode]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Get Calendar items\Add record id back.Inputs[JsonParserTransformInput].Columns[__DOCUMENT__]"
                              cachedDataType="nText"
                              cachedName="__DOCUMENT__"
                              lineageId="Package\Iterate Offices\Sequence Container\Get Calendar items\Receive response.Outputs[JsonParserTransformOutput].Columns[__DOCUMENT__]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Get Calendar items\Add record id back.Outputs[JsonParserTransformOutput].Columns[__DOCUMENT__]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True" />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Get Calendar items\Add record id back.Outputs[JsonParserTransformOutput]"
                          errorOrTruncationOperation="Error"
                          errorRowDisposition="FailComponent"
                          name="JsonParserTransformOutput"
                          truncationRowDisposition="FailComponent">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Get Calendar items\Add record id back.Outputs[JsonParserTransformOutput].Columns[__DOCUMENT__]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\Get Calendar items\Add record id back.Outputs[JsonParserTransformOutput].Columns[__DOCUMENT__]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Get Calendar items\Add record id back.Inputs[JsonParserTransformInput].Columns[__DOCUMENT__]"
                              name="__DOCUMENT__" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Get Calendar items\Add record id back.Outputs[JsonParserTransformOutput].Columns[StatusCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Get Calendar items\Add record id back.Outputs[JsonParserTransformOutput].Columns[StatusCode]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Get Calendar items\Add record id back.Inputs[JsonParserTransformInput].Columns[StatusCode]"
                              name="StatusCode" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Get Calendar items\Add record id back.Outputs[JsonParserTransformOutput].Columns[value]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Get Calendar items\Add record id back.Outputs[JsonParserTransformOutput].ExternalColumns[value]"
                              length="144"
                              lineageId="Package\Iterate Offices\Sequence Container\Get Calendar items\Add record id back.Outputs[JsonParserTransformOutput].Columns[value]"
                              name="value" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Get Calendar items\Add record id back.Outputs[JsonParserTransformOutput].Columns[name]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Get Calendar items\Add record id back.Outputs[JsonParserTransformOutput].ExternalColumns[name]"
                              length="8"
                              lineageId="Package\Iterate Offices\Sequence Container\Get Calendar items\Add record id back.Outputs[JsonParserTransformOutput].Columns[name]"
                              name="name" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Get Calendar items\Add record id back.Outputs[JsonParserTransformOutput].Columns[type]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Get Calendar items\Add record id back.Outputs[JsonParserTransformOutput].ExternalColumns[type]"
                              length="4"
                              lineageId="Package\Iterate Offices\Sequence Container\Get Calendar items\Add record id back.Outputs[JsonParserTransformOutput].Columns[type]"
                              name="type" />
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Get Calendar items\Add record id back.Outputs[JsonParserTransformOutput].ExternalColumns[value]"
                              dataType="wstr"
                              length="144"
                              name="value" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Get Calendar items\Add record id back.Outputs[JsonParserTransformOutput].ExternalColumns[name]"
                              dataType="wstr"
                              length="8"
                              name="name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Get Calendar items\Add record id back.Outputs[JsonParserTransformOutput].ExternalColumns[type]"
                              dataType="wstr"
                              length="4"
                              name="type" />
                          </externalMetadataColumns>
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Get Calendar items\Add record id back.Outputs[JsonParserTransform Error Output]"
                          isErrorOut="true"
                          name="JsonParserTransform Error Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Get Calendar items\Add record id back.Outputs[JsonParserTransform Error Output].Columns[__DOCUMENT__]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\Get Calendar items\Add record id back.Outputs[JsonParserTransform Error Output].Columns[__DOCUMENT__]"
                              name="__DOCUMENT__" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Get Calendar items\Add record id back.Outputs[JsonParserTransform Error Output].Columns[StatusCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Get Calendar items\Add record id back.Outputs[JsonParserTransform Error Output].Columns[StatusCode]"
                              name="StatusCode" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Get Calendar items\Add record id back.Outputs[JsonParserTransform Error Output].Columns[value]"
                              dataType="wstr"
                              length="144"
                              lineageId="Package\Iterate Offices\Sequence Container\Get Calendar items\Add record id back.Outputs[JsonParserTransform Error Output].Columns[value]"
                              name="value" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Get Calendar items\Add record id back.Outputs[JsonParserTransform Error Output].Columns[name]"
                              dataType="wstr"
                              length="8"
                              lineageId="Package\Iterate Offices\Sequence Container\Get Calendar items\Add record id back.Outputs[JsonParserTransform Error Output].Columns[name]"
                              name="name" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Get Calendar items\Add record id back.Outputs[JsonParserTransform Error Output].Columns[type]"
                              dataType="wstr"
                              length="4"
                              lineageId="Package\Iterate Offices\Sequence Container\Get Calendar items\Add record id back.Outputs[JsonParserTransform Error Output].Columns[type]"
                              name="type" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Get Calendar items\Add record id back.Outputs[JsonParserTransform Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Get Calendar items\Add record id back.Outputs[JsonParserTransform Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Get Calendar items\Add record id back.Outputs[JsonParserTransform Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Get Calendar items\Add record id back.Outputs[JsonParserTransform Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Get Calendar items\Add record id back.Outputs[JsonParserTransform Error Output].Columns[ErrorColumnName]"
                              codePage="1252"
                              dataType="str"
                              length="128"
                              lineageId="Package\Iterate Offices\Sequence Container\Get Calendar items\Add record id back.Outputs[JsonParserTransform Error Output].Columns[ErrorColumnName]"
                              name="ErrorColumnName" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Get Calendar items\Add record id back.Outputs[JsonParserTransform Error Output].Columns[ErrorMessage]"
                              dataType="wstr"
                              length="1024"
                              lineageId="Package\Iterate Offices\Sequence Container\Get Calendar items\Add record id back.Outputs[JsonParserTransform Error Output].Columns[ErrorMessage]"
                              name="ErrorMessage" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Get Calendar items\Add record id back.Outputs[JsonParserTransform Error Output].Columns[ErrorRawData]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\Get Calendar items\Add record id back.Outputs[JsonParserTransform Error Output].Columns[ErrorRawData]"
                              name="ErrorRawData" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Get Calendar items\Calendar Dest"
                      componentClassID="Microsoft.OLEDBDestination"
                      contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                      description="OLE DB Destination"
                      name="Calendar Dest"
                      usesDispositions="true"
                      version="4">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">0</property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the database object used to open a rowset."
                          name="OpenRowset">[dbo].[MetricRelatedCalendar]</property>
                        <property
                          dataType="System.String"
                          description="Specifies the variable that contains the name of the database object used to open a rowset."
                          name="OpenRowsetVariable"></property>
                        <property
                          dataType="System.String"
                          description="The SQL command to be executed."
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Boolean"
                          description="Forces the use of the DefaultCodePage property value when describing character data."
                          name="AlwaysUseDefaultCodePage">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the mode used to access the database."
                          name="AccessMode"
                          typeConverter="AccessMode">3</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                          name="FastLoadKeepIdentity">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                          name="FastLoadKeepNulls">false</property>
                        <property
                          dataType="System.String"
                          description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                          name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                          name="FastLoadMaxInsertCommitSize">2147483647</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Iterate Offices\Sequence Container\Get Calendar items\Calendar Dest.Connections[OleDbConnection]"
                          connectionManagerID="{BE9C8001-397B-40F7-8D95-DCB010580DE0}:external"
                          connectionManagerRefId="Project.ConnectionManagers[Metrics]"
                          description="The OLE DB runtime connection used to access the database."
                          name="OleDbConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Get Calendar items\Calendar Dest.Inputs[OLE DB Destination Input]"
                          errorOrTruncationOperation="Insert"
                          errorRowDisposition="RedirectRow"
                          hasSideEffects="true"
                          name="OLE DB Destination Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Get Calendar items\Calendar Dest.Inputs[OLE DB Destination Input].Columns[__DOCUMENT__]"
                              cachedDataType="nText"
                              cachedName="__DOCUMENT__"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Get Calendar items\Calendar Dest.Inputs[OLE DB Destination Input].ExternalColumns[RelatedObject]"
                              lineageId="Package\Iterate Offices\Sequence Container\Get Calendar items\Add record id back.Outputs[JsonParserTransformOutput].Columns[__DOCUMENT__]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Get Calendar items\Calendar Dest.Inputs[OLE DB Destination Input].Columns[value]"
                              cachedDataType="wstr"
                              cachedLength="144"
                              cachedName="value"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Get Calendar items\Calendar Dest.Inputs[OLE DB Destination Input].ExternalColumns[RecordId]"
                              lineageId="Package\Iterate Offices\Sequence Container\Get Calendar items\Add record id back.Outputs[JsonParserTransformOutput].Columns[value]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Get Calendar items\Calendar Dest.Inputs[OLE DB Destination Input].ExternalColumns[RecordId]"
                              dataType="wstr"
                              length="200"
                              name="RecordId" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Get Calendar items\Calendar Dest.Inputs[OLE DB Destination Input].ExternalColumns[RelatedObject]"
                              dataType="nText"
                              name="RelatedObject" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Get Calendar items\Calendar Dest.Inputs[OLE DB Destination Input].ExternalColumns[DateAdded]"
                              dataType="dbTimeStamp"
                              name="DateAdded" />
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Get Calendar items\Calendar Dest.Outputs[OLE DB Destination Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="OLE DB Destination Error Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Get Calendar items\Calendar Dest.Inputs[OLE DB Destination Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Get Calendar items\Calendar Dest.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Get Calendar items\Calendar Dest.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Get Calendar items\Calendar Dest.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Get Calendar items\Calendar Dest.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Get Calendar items\Error table"
                      componentClassID="Microsoft.OLEDBDestination"
                      contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                      description="OLE DB Destination"
                      name="Error table"
                      usesDispositions="true"
                      version="4">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">0</property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the database object used to open a rowset."
                          name="OpenRowset">[dbo].[MetricRelatedCalendarErrors]</property>
                        <property
                          dataType="System.String"
                          description="Specifies the variable that contains the name of the database object used to open a rowset."
                          name="OpenRowsetVariable"></property>
                        <property
                          dataType="System.String"
                          description="The SQL command to be executed."
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Boolean"
                          description="Forces the use of the DefaultCodePage property value when describing character data."
                          name="AlwaysUseDefaultCodePage">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the mode used to access the database."
                          name="AccessMode"
                          typeConverter="AccessMode">3</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                          name="FastLoadKeepIdentity">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                          name="FastLoadKeepNulls">false</property>
                        <property
                          dataType="System.String"
                          description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                          name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                          name="FastLoadMaxInsertCommitSize">2147483647</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Iterate Offices\Sequence Container\Get Calendar items\Error table.Connections[OleDbConnection]"
                          connectionManagerID="{BE9C8001-397B-40F7-8D95-DCB010580DE0}:external"
                          connectionManagerRefId="Project.ConnectionManagers[Metrics]"
                          description="The OLE DB runtime connection used to access the database."
                          name="OleDbConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Get Calendar items\Error table.Inputs[OLE DB Destination Input]"
                          errorOrTruncationOperation="Insert"
                          errorRowDisposition="FailComponent"
                          hasSideEffects="true"
                          name="OLE DB Destination Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Get Calendar items\Error table.Inputs[OLE DB Destination Input].Columns[__DOCUMENT__]"
                              cachedDataType="nText"
                              cachedName="__DOCUMENT__"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Get Calendar items\Error table.Inputs[OLE DB Destination Input].ExternalColumns[RelatedObject]"
                              lineageId="Package\Iterate Offices\Sequence Container\Get Calendar items\Add record id back.Outputs[JsonParserTransformOutput].Columns[__DOCUMENT__]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Get Calendar items\Error table.Inputs[OLE DB Destination Input].Columns[ErrorCode]"
                              cachedDataType="i4"
                              cachedName="ErrorCode"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Get Calendar items\Error table.Inputs[OLE DB Destination Input].ExternalColumns[ErrorCode]"
                              lineageId="Package\Iterate Offices\Sequence Container\Get Calendar items\Calendar Dest.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Get Calendar items\Error table.Inputs[OLE DB Destination Input].Columns[ErrorColumn]"
                              cachedDataType="i4"
                              cachedName="ErrorColumn"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Get Calendar items\Error table.Inputs[OLE DB Destination Input].ExternalColumns[ErroColumn]"
                              lineageId="Package\Iterate Offices\Sequence Container\Get Calendar items\Calendar Dest.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Get Calendar items\Error table.Inputs[OLE DB Destination Input].ExternalColumns[RecordId]"
                              dataType="wstr"
                              length="200"
                              name="RecordId" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Get Calendar items\Error table.Inputs[OLE DB Destination Input].ExternalColumns[RelatedObject]"
                              dataType="nText"
                              name="RelatedObject" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Get Calendar items\Error table.Inputs[OLE DB Destination Input].ExternalColumns[DateAdded]"
                              dataType="dbTimeStamp"
                              name="DateAdded" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Get Calendar items\Error table.Inputs[OLE DB Destination Input].ExternalColumns[ErrorCode]"
                              dataType="wstr"
                              length="200"
                              name="ErrorCode" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Get Calendar items\Error table.Inputs[OLE DB Destination Input].ExternalColumns[ErroColumn]"
                              dataType="wstr"
                              length="200"
                              name="ErroColumn" />
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Get Calendar items\Error table.Outputs[OLE DB Destination Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="OLE DB Destination Error Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Get Calendar items\Error table.Inputs[OLE DB Destination Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Get Calendar items\Error table.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Get Calendar items\Error table.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Get Calendar items\Error table.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Get Calendar items\Error table.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Get Calendar items\Generate Request"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="JSON Generator Transform; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="The JSON generator transform can be used to create JSON document from single or multiple inputs. You can create simple or nested JSON document."
                      name="Generate Request"
                      version="5">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.Int32"
                          description="Determines JSON format and output mode (e.g. one JSON for all input rows or one JSON for each input row)"
                          expressionType="Notify"
                          name="OutputMode"
                          typeConverter="ZappySys.PowerPack.Transform.JsonGeneratorTransform.JsonOutputMode">2</property>
                        <property
                          dataType="System.String"
                          description="Defines shape of output JSON string"
                          expressionType="Notify"
                          name="LayoutInfo">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;settings ver="3"&gt;
  &lt;dataset id="dsMet28" main="True" inputid="28" readfrominput="True"&gt;&lt;/dataset&gt;
  &lt;map name="method" value="CalendarEvents::search" /&gt;
  &lt;map name="args"&gt;
    &lt;map name="criteria" treatasarray="True"&gt;
      &lt;map name="crt"&gt;
        &lt;map src="RecordId" name="value" datatype="String" /&gt;
        &lt;map name="name" value="id" /&gt;
        &lt;map name="type" value="=" /&gt;
      &lt;/map&gt;
    &lt;/map&gt;
  &lt;/map&gt;
  &lt;map name="strip_response_prefix" value="true" /&gt;
  &lt;map name="token" value="{{User::RexToken}}" /&gt;
&lt;/settings&gt;</property>
                        <property
                          dataType="System.Boolean"
                          description="Do not output attribute if value is NULL. By default null attribute is output as &quot;MyColname&quot; : null "
                          expressionType="Notify"
                          name="DoNotOutputNullAttribute">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indent JSON Text generated by this transform (Pretty Print)"
                          expressionType="Notify"
                          name="IndentOutput">false</property>
                        <property
                          dataType="System.String"
                          description="Default output format for datetime columns"
                          expressionType="Notify"
                          name="DateTimeFormat">yyyy-MM-dd HH:mm:ss</property>
                        <property
                          dataType="System.String"
                          description="Culture setting for this task. This option is useful to control output format for certain data types (e.g. number, decimal) based on regional settings. In USA dot is used for decimal indicator but in Germany it may be comma. Leave this blank if you want to use system default settings."
                          expressionType="Notify"
                          name="Culture"></property>
                        <property
                          dataType="System.Boolean"
                          description="Document Header/Footer text come from upstream column rather than direct string"
                          expressionType="Notify"
                          name="UseColumnForHeaderFooter">false</property>
                        <property
                          dataType="System.String"
                          description="Header text for document (Added before each document in the output)"
                          expressionType="Notify"
                          name="DocumentHeader"></property>
                        <property
                          dataType="System.String"
                          description="Footer text for document (Added after each document in the output)"
                          expressionType="Notify"
                          name="DocumentFooter"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies how many rows to include in each batch (Array records for single dataset array mode). 0=Include all in one batch. This setting is only valid for Mode=[Single Dataset Array]"
                          expressionType="Notify"
                          name="ArrayBatchSize">0</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.JsonGeneratorTransform</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to True if you dont want to output empty nodes of sub document (e.g nested property). This option is only applicable if you enabled DoNotOutputNullProperty. If all child peoprties are NULL for parent node then by default output contains empty nodes (e.g. CountryInfo: { CityInfo: { } } for Json --OR-- &lt;CountryInfo&gt;&lt;CityInfo /&gt;&lt;/CountryInfo&gt; for Xml). You can enable this option to avoid such empty nodes from the output."
                          expressionType="Notify"
                          name="DoNotOutputEmptyNestedAttribute">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to True if you dont want to output empty array nodes when no record found for that array (e.g. &quot;Orders&quot;: [ ] for JSON --OR-- &lt;Orders&gt;&lt;/Orders&gt; for Xml). You can enable this option to avoid such empty nodes from the output."
                          expressionType="Notify"
                          name="DoNotOutputEmptyArrayAttribute">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies encoding for data. If you set CharacterSet property then Encoing is ignored."
                          expressionType="Notify"
                          name="Encoding"
                          typeConverter="ZappySys.Common.EncodingType">2</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Get Calendar items\Generate Request.Inputs[JsonInput1]"
                          name="JsonInput1">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Id for attached dataset with input. Use JSON Layout Editor to see attached dataset"
                              expressionType="Notify"
                              name="DatasetInputId">28</property>
                          </properties>
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Get Calendar items\Generate Request.Inputs[JsonInput1].Columns[RecordId]"
                              cachedDataType="wstr"
                              cachedLength="1000"
                              cachedName="RecordId"
                              lineageId="Package\Iterate Offices\Sequence Container\Get Calendar items\Get missing calendar requests.Outputs[OLE DB Source Output].Columns[RecordId]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Get Calendar items\Generate Request.Inputs[JsonInput2]"
                          name="JsonInput2">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Get Calendar items\Generate Request.Outputs[JsonGeneratorTransformOutput]"
                          errorOrTruncationOperation="Error"
                          name="JsonGeneratorTransformOutput">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Get Calendar items\Generate Request.Outputs[JsonGeneratorTransformOutput].Columns[ZS_JSON_OUT]"
                              dataType="nText"
                              description="This output column contains generated JSON string from JSON generator Transform"
                              lineageId="Package\Iterate Offices\Sequence Container\Get Calendar items\Generate Request.Outputs[JsonGeneratorTransformOutput].Columns[ZS_JSON_OUT]"
                              name="ZS_JSON_OUT" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Get Calendar items\Get missing calendar requests"
                      componentClassID="Microsoft.OLEDBSource"
                      contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                      description="OLE DB Source"
                      name="Get missing calendar requests"
                      usesDispositions="true"
                      version="7">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">0</property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the database object used to open a rowset."
                          name="OpenRowset"></property>
                        <property
                          dataType="System.String"
                          description="Specifies the variable that contains the name of the database object used to open a rowset."
                          name="OpenRowsetVariable"></property>
                        <property
                          dataType="System.String"
                          description="The SQL command to be executed."
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">SELECT DISTINCT 
       md.RecordId
FROM [Metrics].[dbo].[vwMetricDetail] md
     LEFT JOIN [dbo].[MetricRelatedCalendar] rc ON md.recordId = rc.[RecordId]
WHERE RecordServiceName = 'CalendarEvents'
      AND md.[MetricDate] &gt; getdate()-7
      AND rc.[RecordId] IS NULL
      AND [OfficeID] = ?</property>
                        <property
                          dataType="System.String"
                          description="The variable that contains the SQL command to be executed."
                          name="SqlCommandVariable"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Boolean"
                          description="Forces the use of the DefaultCodePage property value when describing character data."
                          name="AlwaysUseDefaultCodePage">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the mode used to access the database."
                          name="AccessMode"
                          typeConverter="AccessMode">2</property>
                        <property
                          dataType="System.String"
                          description="The mappings between the parameters in the SQL command and variables."
                          name="ParameterMapping">"Parameter0:Input",{225EDD6B-C0B7-4667-9F26-11FB3E5C4446};</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Iterate Offices\Sequence Container\Get Calendar items\Get missing calendar requests.Connections[OleDbConnection]"
                          connectionManagerID="{BE9C8001-397B-40F7-8D95-DCB010580DE0}:external"
                          connectionManagerRefId="Project.ConnectionManagers[Metrics]"
                          description="The OLE DB runtime connection used to access the database."
                          name="OleDbConnection" />
                      </connections>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Get Calendar items\Get missing calendar requests.Outputs[OLE DB Source Output]"
                          name="OLE DB Source Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Get Calendar items\Get missing calendar requests.Outputs[OLE DB Source Output].Columns[RecordId]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Get Calendar items\Get missing calendar requests.Outputs[OLE DB Source Output].ExternalColumns[RecordId]"
                              length="1000"
                              lineageId="Package\Iterate Offices\Sequence Container\Get Calendar items\Get missing calendar requests.Outputs[OLE DB Source Output].Columns[RecordId]"
                              name="RecordId"
                              truncationRowDisposition="FailComponent" />
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Get Calendar items\Get missing calendar requests.Outputs[OLE DB Source Output].ExternalColumns[RecordId]"
                              dataType="wstr"
                              length="1000"
                              name="RecordId" />
                          </externalMetadataColumns>
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Get Calendar items\Get missing calendar requests.Outputs[OLE DB Source Error Output]"
                          isErrorOut="true"
                          name="OLE DB Source Error Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Get Calendar items\Get missing calendar requests.Outputs[OLE DB Source Error Output].Columns[RecordId]"
                              dataType="wstr"
                              length="1000"
                              lineageId="Package\Iterate Offices\Sequence Container\Get Calendar items\Get missing calendar requests.Outputs[OLE DB Source Error Output].Columns[RecordId]"
                              name="RecordId" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Get Calendar items\Get missing calendar requests.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Get Calendar items\Get missing calendar requests.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Get Calendar items\Get missing calendar requests.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Get Calendar items\Get missing calendar requests.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Get Calendar items\Postrequest"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Web API Destination; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="The Web API destination can be used to send data to Web API URL (e.g. Submit or POST data to REST API/SOAP or other HTTP/HTTPS endpoints)"
                      name="Postrequest"
                      usesDispositions="true"
                      version="5">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.String"
                          description="API URL you want to access"
                          expressionType="Notify"
                          name="HttpRequestUrl">{{User::RexAPIWebURL}}</property>
                        <property
                          dataType="System.String"
                          description="Http Web Request Method (e.g. POST, GET, PUT, LIST, DELETE...). Refer your API documentation if you are not sure which method you have to use."
                          expressionType="Notify"
                          name="HttpRequestMethod">POST</property>
                        <property
                          dataType="System.String"
                          description="Set this if you want to set custom Http headers. You may use variable anywhere in the header value using syntax {{User::YourVarName}}. Syntax of Header key value pair is : &amp;lt;request&amp;gt;&amp;lt;header&amp;gt;&amp;lt;name&amp;gt;x-myheader-1&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;AAA&amp;lt;/value&amp;gt;&amp;lt;/header&amp;gt; &amp;lt;header&amp;gt;&amp;lt;name&amp;gt;x-myheader-2&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;BBB&amp;lt;/value&amp;gt;&amp;lt;/header&amp;gt;&amp;lt;/request&amp;gt;"
                          expressionType="Notify"
                          name="HttpHeaders"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">&lt;request&gt;&lt;header&gt;&lt;name&gt;Accept&lt;/name&gt;&lt;value&gt;*/*&lt;/value&gt;&lt;/header&gt;&lt;header&gt;&lt;name&gt;Cache-Control&lt;/name&gt;&lt;value&gt;no-cache&lt;/value&gt;&lt;/header&gt;&lt;header&gt;&lt;name&gt;X-App-Identifier&lt;/name&gt;&lt;value&gt;client:spicerhaart:{{System::PackageName}}:{{System::TaskName}}&lt;/value&gt;&lt;/header&gt;&lt;/request&gt;</property>
                        <property
                          dataType="System.String"
                          description="User defined data you wish to send along with your HTTP Request (e.g. Upload file data, Form POST data). Usually you have to set content-type of your data but if you select RequestMethod=POST then system will automatically set content-type=application/x-www-form-urlencoded."
                          expressionType="Notify"
                          name="HttpRequestData"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies content type for data you wish to POST. If you select Default option then system default content type will be used (i.e. application/x-www-form-urlencoded). If you specify Content-Type header along with this option then header value takes precedence."
                          expressionType="Notify"
                          name="HttpRequestContentType"
                          typeConverter="ZappySys.Common.Web.HttpRequestContentType">2</property>
                        <property
                          dataType="System.Boolean"
                          description="If this option is true then component will continue without exception on 404 error (Url not found). This allows you to consume data gracefully."
                          expressionType="Notify"
                          name="ContinueOnUrlNotFoundError">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Ignore SSL certificate related errors. Example: if you getting SSL/TLS errors because of certificate expired or certificate is not from trusted authority or certificate is self-signed. By checking this option you will not get SSL/TLS error."
                          expressionType="Notify"
                          name="IgnoreCertificateErrors">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Allow unsecure ciphers/suites and curves for SSLS/TLS communication. Use this option to communicate with web servers which needs legacy / unsecured ciphers support. This option is only trigged when you change default SSL/TLS Version on advanced settings tab."
                          expressionType="Notify"
                          name="AllowUnsecureSuite">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Enable support for gzip or deflate compression. When you check this option compressed response automatically de-compressed saving bandwidth. This option is only valid if web server supports compressed response stream. Check your API documentation for more information."
                          expressionType="Notify"
                          name="EnableCompressionSupport">true</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies which security protocol is supported for HTTPS communication. Using this option you can enable legacy protocol or enforce to use latest version of security protocol (Note: TLS 1.2 is only supported in SSIS 2014 or Higher)."
                          expressionType="Notify"
                          name="SecurityProtocol"
                          typeConverter="ZappySys.PowerPack.Common.HttpsSecurityProtocolType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Wait time in milliseconds (Pause after each request). 0=No wait. Use this delay time if your API has limit on how many requests you can make in certain time frame."
                          expressionType="Notify"
                          name="WaitTime">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you redirect error to error output by default you get additional information in ErrorMessage column. Check this option if you need exact Response Body (Useful if its in JSON/XML format which needs to be parsed for additional information for later step)."
                          expressionType="Notify"
                          name="OnErrorOutputResponseBody">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Enable multiple requests using parallel threads."
                          expressionType="Notify"
                          name="EnableParallelRequests">true</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum parallel threads to use for processing multiple web requests."
                          expressionType="Notify"
                          name="MaxParallelThreads">5</property>
                        <property
                          dataType="System.Boolean"
                          description="By default one request is sent for each input row. If your API supports multiple records in a single call via HTTP Body then enable this setting. See also BodyBatchSize, BodyHeader, BodyFooter and BodyRowSeparator property."
                          expressionType="Notify"
                          name="EnableBodyBatch">false</property>
                        <property
                          dataType="System.String"
                          description="When you have to wrap input content between opening and closing tags for each call then set this property to specify opening for body content. For Example if you want to build Body like this (send max 100 rows per call) ==&gt; { records : [ {...}, {...}, {...} ] } then you can set BatchSize=100, BodyHeader as &quot;{ records: [&quot; , BodyFooter as &quot;] }&quot; and BodyRowSeperator as comma {,}. This property is ignored if EnableBodyBatch=false."
                          expressionType="Notify"
                          name="BodyHeader"></property>
                        <property
                          dataType="System.String"
                          description="When you have to wrap input content between opening and closing tags for each call then set this property to specify closing for body content. For Example if you want to build Body like this (send max 100 rows per call) ==&gt; { records : [ {...}, {...}, {...} ] } then you can set BatchSize=100, BodyHeader as &quot;{ records: [&quot; , BodyFooter as &quot;] }&quot; and BodyRowSeperator as comma {,}. This property is ignored if EnableBodyBatch=false."
                          expressionType="Notify"
                          name="BodyFooter"></property>
                        <property
                          dataType="System.Int32"
                          description="If your API supports multiple records via HTTP Body then change this setting &gt; 1 to include multiple upstream records into single call. See also BodyHeader, BodyFooter and BodyRowSeparator property. This property is ignored if EnableBodyBatch=false."
                          expressionType="Notify"
                          name="BodyBatchSize">100</property>
                        <property
                          dataType="System.String"
                          description="When you submit multiple rows in a batch you can separate multiple documents / records using custom separator (e.g. in JSON Array you can use comma {,} as record separator if POST document is in array format [ {...}, {...}, {...} ] ). For last row of batch blank separator is used."
                          expressionType="Notify"
                          name="BodyRowSeparator"></property>
                        <property
                          dataType="System.Boolean"
                          description="Returns response data as binary data (e.g. Byte Array). Check this option is response is Zip file, Image file or any non text data which needs to be exported as raw data without any encoding."
                          expressionType="Notify"
                          name="TreatResponseAsBinary">false</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.WebApiDestination</property>
                        <property
                          dataType="System.Boolean"
                          description="Check this option if you want to upload file(s) (i.e. POST RAW file data) or send data using Multi-Part encoding method (i.e. Content-Type: multipart/form-data). Multi-Part request allows you to mix key/value and upload files in same request. On the other hand raw upload allows only single file upload (without any key/value) &#xA;&#xA;==== Raw Upload (Content-Type: application/octet-stream) =====   &#xA;To upload single file in raw mode check this option and specify full file path starting with @ sign in the Body (e.g.  @c:\data\myfile.zip ) &#xA;&#xA;==== Form-Data / Multipart Upload (Content-Type: multipart/form-data) =====   &#xA;To treat your Request data as multi part fields you must specify key/value pairs separated by new lines into RequestData field (i.e. Body). Each key value pair is entered on new-line and key/value are separated using equal sign (=). Preceding and trailing spaces are ignored also blank lines are ignored. &#xA;If field value has some any special character(s) then use escape sequence (e.g. For NewLine: \r\n, For Tab: \t, For at (@): \@). When value of any field starts with at sign (@) its automatically treated as File you want to upload. By default file content type is determined based on extension however you can supply content type manually for any field using this way [ fieldname.Content-Type=some content type ]. In below example we have supplied Content-Type for file2 and SomeField1, all other fields are using default content-type.&#xA;See below Example of uploading multiple files along with additional fields.&#xA;&#xA;file1=@c:\data\Myfile1.txt&#xA;file2=@c:\data\Myfile2.json&#xA;file2.Content-Type=application/json&#xA;SomeField1=aaaaaaa&#xA;SomeField1.Content-Type=text/plain&#xA;SomeField2=12345&#xA;SomeFieldWithNewLineAndTab=This is line1\r\nThis is line2\r\nThis is \ttab \ttab \ttab&#xA;SomeFieldStartingWithAtSign=\@MyTwitterHandle&#xA;"
                          expressionType="Notify"
                          name="IsMultiPartUpload">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Enable this option if your server is expecting &#xA; (i.e. CRLF) after last Multi-Part boundary in the Body. This option is only applicable if you enabled IsMultiPartUpload and sending data in Key=value format (i.e. Mutipart). For raw file upload this option has no effect."
                          expressionType="Notify"
                          name="AddMultiPartPostamble">false</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Iterate Offices\Sequence Container\Get Calendar items\Postrequest.Connections[Connection]"
                          connectionManagerID="Package.ConnectionManagers[HTTP 1]"
                          connectionManagerRefId="Package.ConnectionManagers[HTTP 1]"
                          description="Connection manager for authentication (e.g. HTTP or OAuth Connection)"
                          name="Connection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Get Calendar items\Postrequest.Inputs[WebApiDestinationInput]"
                          errorRowDisposition="FailComponent"
                          hasSideEffects="true"
                          name="WebApiDestinationInput"
                          truncationRowDisposition="FailComponent">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Get Calendar items\Postrequest.Inputs[WebApiDestinationInput].Columns[ZS_JSON_OUT]"
                              cachedDataType="nText"
                              cachedName="ZS_JSON_OUT"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Get Calendar items\Postrequest.Inputs[WebApiDestinationInput].ExternalColumns[HttpRequestData]"
                              lineageId="Package\Iterate Offices\Sequence Container\Get Calendar items\Generate Request.Outputs[JsonGeneratorTransformOutput].Columns[ZS_JSON_OUT]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Get Calendar items\Postrequest.Inputs[WebApiDestinationInput].ExternalColumns[HttpRequestUrl]"
                              dataType="wstr"
                              length="2000"
                              name="HttpRequestUrl" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Get Calendar items\Postrequest.Inputs[WebApiDestinationInput].ExternalColumns[HttpRequestData]"
                              dataType="nText"
                              name="HttpRequestData" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Get Calendar items\Postrequest.Inputs[WebApiDestinationInput].ExternalColumns[HttpHeaders]"
                              dataType="wstr"
                              length="2000"
                              name="HttpHeaders" />
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Get Calendar items\Postrequest.Outputs[WebApiDestination Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="WebApiDestination Error Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Get Calendar items\Postrequest.Inputs[WebApiDestinationInput]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Get Calendar items\Postrequest.Outputs[WebApiDestination Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Get Calendar items\Postrequest.Outputs[WebApiDestination Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Get Calendar items\Postrequest.Outputs[WebApiDestination Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Get Calendar items\Postrequest.Outputs[WebApiDestination Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Get Calendar items\Postrequest.Outputs[WebApiDestination Error Output].Columns[ErrorColumnName]"
                              codePage="1252"
                              dataType="str"
                              length="128"
                              lineageId="Package\Iterate Offices\Sequence Container\Get Calendar items\Postrequest.Outputs[WebApiDestination Error Output].Columns[ErrorColumnName]"
                              name="ErrorColumnName" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Get Calendar items\Postrequest.Outputs[WebApiDestination Error Output].Columns[ErrorMessage]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\Get Calendar items\Postrequest.Outputs[WebApiDestination Error Output].Columns[ErrorMessage]"
                              name="ErrorMessage" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Get Calendar items\Postrequest.Outputs[Response Output]"
                          exclusionGroup="1"
                          name="Response Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Get Calendar items\Postrequest.Inputs[WebApiDestinationInput]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Get Calendar items\Postrequest.Outputs[Response Output].Columns[ResponseText]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\Get Calendar items\Postrequest.Outputs[Response Output].Columns[ResponseText]"
                              name="ResponseText" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Get Calendar items\Postrequest.Outputs[Response Output].Columns[StatusCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Get Calendar items\Postrequest.Outputs[Response Output].Columns[StatusCode]"
                              name="StatusCode" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Get Calendar items\Receive response"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="JSON Parser Transform; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="Parse incoming JSON String into columns. You can also parse and transform single JSON record into multiple rows by filtering data based on JSON Path (e.g. $.Customer.Orders[*])"
                      name="Receive response"
                      usesDispositions="true"
                      version="2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for any numeric data types"
                          expressionType="Notify"
                          name="TreatBlankNumberAsNull">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for bool data types"
                          expressionType="Notify"
                          name="TreatBlankBoolAsNull">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for any date/time data types"
                          expressionType="Notify"
                          name="TreatBlankDateAsNull">true</property>
                        <property
                          dataType="System.String"
                          description="Sample JSON data used to parse output columns."
                          expressionType="Notify"
                          name="SampleData"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">{"result":{"rows":[{"id":"d6bc5490-dd81-11ea-82e0-aedb23f46a55","external_id":null,"calendar":{"id":"10eed94a-e44e-11e9-92c3-caedbc18711b","name":"Joel Draper","remote_calendar":{"provider":"exchange","owner_email":"joel.draper@brianholt.co.uk","remote_calendar_id":"cal_XZNSRVse5ABpukO@_YMP2toHRllgFUfx9w7ZAxg","remote_calendar_name":"Calendar","extended_permissions":true},"system_ctime":1569935955,"system_modtime":1574248884,"permissions":[],"is_subscribed":false,"ical_private":null,"ical_public":null,"owner_user":{"id":"23770","_name":"Joel Draper","_first_name":"Joel","_last_name":"Draper","_email_address":"Joel.Draper@brianholt.co.uk"},"access_level":{"id":"modify","text":"Add\/edit\/view appointments"}},"title":"View - 44 Wyley Road - Herbert Maboh","summary":"","description":"","meta_description":"","starts_at":1597658400,"ends_at":1597660200,"timezone":"Europe\/London","travel_time":{"estimated_time_minutes":0,"origin":null,"alert_organiser":false},"is_recurring":false,"is_all_day":false,"is_remote_editable":true,"organiser":{"owner_user":{"id":"23770","_name":"Joel Draper","_first_name":"Joel","_last_name":"Draper","_email_address":"Joel.Draper@brianholt.co.uk"}},"event_location":null,"attachments":[],"alerts":[],"records":[{"id":"1833398","type":"contact","name":"Herbert Maboh","stub":{"_name":"Herbert Maboh","_email_address":"gmaboh@yahoo.com","_phone_number":"07917 823297","_fax_number":null,"_address_postal":null,"_address":"67 The Lindfield\r\nCOVENTRY\r\nCV3 1FL","id":"1833398"}},{"id":"17415","type":"listing","name":"44 Wyley Road, Coventry CV6 1NW","stub":{"id":17415,"_listing_category_name":null,"_listing_agent_1":{"id":"22575","_name":"Ashley Gillies","_first_name":"Ashley","_last_name":"Gillies","_email_address":"Ashley.Gillies@brianholt.co.uk","_phone_direct":null,"_phone_mobile":null,"_position":null,"_profile_image_uri":null,"_is_account_user":"0"},"_listing_agent_2":null,"_system_listing_state":"current","_price_advertise_as":"Offers Over \u00a3160,000","_available_from_date":null,"_meta_other_features":null,"_state_value_price":null,"_state_date":null,"_listing_category":{"id":"residential_sale","text":"Residential Sale"},"_listing_subcategory_1":null,"_property":{"_system_search_key":"44 Wyley Road, Coventry CV6 1NW","_adr_longitude":"-1.5221914","_adr_latitude":"52.4211792","_adr_unit_number":null,"_adr_street_number":"44","_adr_street_name":"Wyley Road","_adr_state_or_region":null,"_adr_locality":"Coventry","_adr_suburb_or_town":"Coventry","_adr_postcode":"CV6 1NW","_adr_country":"uk","_adr_estate_name":null,"_adr_estate_stage":null,"_system_owner_user":{"id":"19443","_name":"Rosie API","_first_name":"Rosie","_last_name":"API","_email_address":"rosie@spicerhaart.co.uk"},"_adr_building":null,"_property_category":{"id":"residential","text":"Residential"},"_property_image":{"uri":"rexlive:\/\/1787\/listings\/17415\/images\/front_ef06-6b53-c9b4-478d-0f8e-4fa2-4a41-19b0_20191205034227.jpg","_url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1787\/listings\/17415\/images\/front_ef06-6b53-c9b4-478d-0f8e-4fa2-4a41-19b0_20191205034227.jpg","_thumbs":{"800x600":{"uri":"rexlive:\/\/1787\/listings\/17415\/images\/front_ef06-6b53-c9b4-478d-0f8e-4fa2-4a41-19b0_20191205034227_800x600.jpg","_url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1787\/listings\/17415\/images\/front_ef06-6b53-c9b4-478d-0f8e-4fa2-4a41-19b0_20191205034227_800x600.jpg"},"400x300":{"uri":"rexlive:\/\/1787\/listings\/17415\/images\/front_ef06-6b53-c9b4-478d-0f8e-4fa2-4a41-19b0_20191205034227_400x300.jpg","_url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1787\/listings\/17415\/images\/front_ef06-6b53-c9b4-478d-0f8e-4fa2-4a41-19b0_20191205034227_400x300.jpg"},"200x150":{"uri":"rexlive:\/\/1787\/listings\/17415\/images\/front_ef06-6b53-c9b4-478d-0f8e-4fa2-4a41-19b0_20191205034227_200x150.jpg","_url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1787\/listings\/17415\/images\/front_ef06-6b53-c9b4-478d-0f8e-4fa2-4a41-19b0_20191205034227_200x150.jpg"},"80x60":{"uri":"rexlive:\/\/1787\/listings\/17415\/images\/front_ef06-6b53-c9b4-478d-0f8e-4fa2-4a41-19b0_20191205034227_80x60.jpg","_url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1787\/listings\/17415\/images\/front_ef06-6b53-c9b4-478d-0f8e-4fa2-4a41-19b0_20191205034227_80x60.jpg"}}},"_etag":"1858227-1583165835","id":"1858227"},"_listing_primary_image":{"uri":"rexlive:\/\/1787\/listings\/17415\/images\/front_ef06-6b53-c9b4-478d-0f8e-4fa2-4a41-19b0_20191205034227.jpg","_url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1787\/listings\/17415\/images\/front_ef06-6b53-c9b4-478d-0f8e-4fa2-4a41-19b0_20191205034227.jpg","_thumbs":{"800x600":{"uri":"rexlive:\/\/1787\/listings\/17415\/images\/front_ef06-6b53-c9b4-478d-0f8e-4fa2-4a41-19b0_20191205034227_800x600.jpg","_url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1787\/listings\/17415\/images\/front_ef06-6b53-c9b4-478d-0f8e-4fa2-4a41-19b0_20191205034227_800x600.jpg"},"400x300":{"uri":"rexlive:\/\/1787\/listings\/17415\/images\/front_ef06-6b53-c9b4-478d-0f8e-4fa2-4a41-19b0_20191205034227_400x300.jpg","_url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1787\/listings\/17415\/images\/front_ef06-6b53-c9b4-478d-0f8e-4fa2-4a41-19b0_20191205034227_400x300.jpg"},"200x150":{"uri":"rexlive:\/\/1787\/listings\/17415\/images\/front_ef06-6b53-c9b4-478d-0f8e-4fa2-4a41-19b0_20191205034227_200x150.jpg","_url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1787\/listings\/17415\/images\/front_ef06-6b53-c9b4-478d-0f8e-4fa2-4a41-19b0_20191205034227_200x150.jpg"},"80x60":{"uri":"rexlive:\/\/1787\/listings\/17415\/images\/front_ef06-6b53-c9b4-478d-0f8e-4fa2-4a41-19b0_20191205034227_80x60.jpg","_url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1787\/listings\/17415\/images\/front_ef06-6b53-c9b4-478d-0f8e-4fa2-4a41-19b0_20191205034227_80x60.jpg"}}},"_location":{"id":"23","text":"Brian Holt Coventry"},"_project_stage":null}}],"attendees":[],"invitation_message":null,"rule":[],"metadata":{"appointment_type_name":"Accompanied Viewing","organiser_name":"Joel Draper"},"system_ctime":1597336031,"system_modtime":1597336032,"_security_user_rights":["modify"],"calendars":[{"id":"10eed94a-e44e-11e9-92c3-caedbc18711b","name":"Joel Draper","remote_calendar":{"provider":"exchange","owner_email":"joel.draper@brianholt.co.uk","remote_calendar_id":"cal_XZNSRVse5ABpukO@_YMP2toHRllgFUfx9w7ZAxg","remote_calendar_name":"Calendar","extended_permissions":true},"system_ctime":1569935955,"system_modtime":1574248884,"permissions":[],"is_subscribed":false,"ical_private":null,"ical_public":null,"owner_user":{"id":"23770","_name":"Joel Draper","_first_name":"Joel","_last_name":"Draper","_email_address":"Joel.Draper@brianholt.co.uk"},"access_level":{"id":"modify","text":"Add\/edit\/view appointments"}}],"location":{"id":"23","_location_name":"Brian Holt Coventry","_website":"http:\/\/www.brianholt.co.uk\/","_email":"coventry@brianholt.co.uk","_phone":"02476 520220","_fax":null,"_address_physical":"15-17 Warwick Row, Coventry, West Midlands, CV1 1EX","_report_color":"#7f2628","_logo_image":{"url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1787\/office-locations\/23\/logo\/Rosie-Brand-Logos-BC_0354dcd7-27ac-49a2-820a-4d1ba279d97b_20190104112401.png","thumbs":{"800x400":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1787\/office-locations\/23\/logo\/Rosie-Brand-Logos-BC_0354dcd7-27ac-49a2-820a-4d1ba279d97b_20190104112401_800x400.png","500x250":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1787\/office-locations\/23\/logo\/Rosie-Brand-Logos-BC_0354dcd7-27ac-49a2-820a-4d1ba279d97b_20190104112401_500x250.png","400x200":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1787\/office-locations\/23\/logo\/Rosie-Brand-Logos-BC_0354dcd7-27ac-49a2-820a-4d1ba279d97b_20190104112401_400x200.png","200x100":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1787\/office-locations\/23\/logo\/Rosie-Brand-Logos-BC_0354dcd7-27ac-49a2-820a-4d1ba279d97b_20190104112401_200x100.png"}}},"account":{"id":"1787","_name":"Brian Holt Coventry","_country_id":"United Kingdom","_country_region_id":null,"_timezone_id":"Europe\/London"},"appointment_type":{"_name":"Accompanied Viewing","_duration":30,"_library":{"id":"9","_library_name":"SHG Library"},"_freebusy":{"id":"busy","text":"Busy"},"_is_hidden":null,"_related":{"alerts":[]},"id":6},"event_status":{"id":"confirmed","text":"Confirmed"},"private":{"id":"public","text":"Public"},"freebusy":{"id":"busy","text":"Busy"},"cancellation_reason":null}],"total":1,"criteria":[{"value":"d6bc5490-dd81-11ea-82e0-aedb23f46a55","name":"id","type":"="},{"name":"unique_events","value":"true"}],"order_by":[]},"error":null}
</property>
                        <property
                          dataType="System.Boolean"
                          description="Include all upstream parent columns into output except the one you selected to parse. By default only parsed columns from Input document is included in the output. If you wish to include all other upstream columns in the output too then check this option."
                          expressionType="Notify"
                          name="OutputAllUpstreamColumns">true</property>
                        <property
                          dataType="System.Int32"
                          description="Defines how to handle empty input. By default NULL or Empty input is skipped from parsing."
                          expressionType="Notify"
                          name="EmptyInputProcessingMode"
                          typeConverter="ZappySys.Common.Data.EmptyInputProcessingMode">0</property>
                        <property
                          dataType="System.String"
                          description="Defines how to handle empty input. By default NULL or Empty input is skipped from parsing."
                          expressionType="Notify"
                          name="TreatEmptyInputAs">{ }</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum JSON records to fetch. Set this value to 0 for all records"
                          expressionType="Notify"
                          name="MaxRows">0</property>
                        <property
                          dataType="System.String"
                          description="Enter expression here to filter data.(Example:  $.Users[*].UserName ) This will fetch User names from users records"
                          expressionType="Notify"
                          name="Filter"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">$.result.rows[*]</property>
                        <property
                          dataType="System.Boolean"
                          description="Use this option to include parent properties (Non array) in the output along with Filtered Rows"
                          expressionType="Notify"
                          name="IncludeParentColumns">false</property>
                        <property
                          dataType="System.Boolean"
                          description="By default child and parent information is not included in the output if children not found for specified expression. For example if you want to extract all orders from all customers nodes then you can type $.Customers[*].Orders[*]. This will fetch all orders from all customers. By default customers records without orders wont be included in the output. If you want to include those customers where orders not found then check this option (Output null information for order attributes). This behavior is similar to LEFT OUTER JOIN in SQL (Left side is parent, right side is child). This option is ***resource intensive*** so only check if you really care about this behavior."
                          expressionType="Notify"
                          name="IncludeParentColumnsWhenChildMissing">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to true if you want to output parent columns which are array. By default any parent column which is an array is not included in output. See also FilterForParentColumnsWithArrayType property if you set this property"
                          expressionType="Notify"
                          name="IncludeParentColumnsWithArrayType">false</property>
                        <property
                          dataType="System.String"
                          description="Filter expression to extract value form parent"
                          expressionType="Notify"
                          name="FilterForParentColumnsWithArrayType"></property>
                        <property
                          dataType="System.String"
                          description="Prefix for parent column name. This option is only valid if you have set IncludeParentColumns=True"
                          expressionType="Notify"
                          name="ParentColumnPrefix">P_</property>
                        <property
                          dataType="System.Boolean"
                          description="Throw error if property name specified in filter expression is missing. By default it will ignore any missing property errors."
                          expressionType="Notify"
                          name="ThrowErrorIfPropertyMissing">false</property>
                        <property
                          dataType="System.Int32"
                          description="This property how many nested levels should be scanned to fetch various properties. 0=Scan all child levels."
                          expressionType="Notify"
                          name="MaxLevelsToScan">1</property>
                        <property
                          dataType="System.String"
                          description="List comma separated property names from JSON document which you want to exclude from output. Specify parent property name to exclude all child nodes."
                          expressionType="Notify"
                          name="ExcludedProperties"></property>
                        <property
                          dataType="System.String"
                          description="Property level separator used in generated property name (separator for outer properties - Above selected filter node). Use this if default separator is producing duplicate property name which is conflicting with existing name."
                          expressionType="Notify"
                          name="LevelSeparator">_</property>
                        <property
                          dataType="System.Boolean"
                          description="Enables deep array flattening for selected filtered hierarchy. When you turn on this property it will flatten each property of each array item and expose as column (e.g. If you have Filter set as $.customers[*] and for each customer you have an array of Addresses then you may see output columns like Addresses.1.City, Addresses.1.State, Addresses.2.City, Addresses.2.State .... Addresses.N.City, Addresses.N.State). You can control how many array items you want to flatten by setting MaxArrayItemsToFlatten property."
                          expressionType="Notify"
                          name="EnableArrayFlattening">false</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum number of array items to flatten. inner array flattening. Adjust this property to control how many columns being generated. This option is ignored if you set EnableArrayFlattening=false"
                          expressionType="Notify"
                          name="MaxArrayItemsToFlatten">10</property>
                        <property
                          dataType="System.String"
                          description="Specifies how custom date formatted strings are parsed when reading JSON."
                          expressionType="Notify"
                          name="DateFormatString"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies how date formatted strings, e.g. Date(1198908717056) and 2012-03-21T05:40Z, are parsed when reading JSON."
                          expressionType="Notify"
                          name="DateParseHandling"
                          typeConverter="ZappySys.Common.DateParseHandling">1</property>
                        <property
                          dataType="System.Boolean"
                          description="Output as raw JSON document rather than parsing individual fields. This option is helpful if you have documents stored in a file and you want to pass them downstream as raw JSON string rather than parsing into columns."
                          expressionType="Notify"
                          name="OutputRawDocument">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Indent JSON output so its easy to read."
                          expressionType="Notify"
                          name="IndentOutput">false</property>
                        <property
                          dataType="System.Boolean"
                          description="When this property is true then Column is converted to Row. Pivoted names will appear under  Pivot_Name column and values will appear under Pivot_Value field."
                          expressionType="Notify"
                          name="EnablePivot">false</property>
                        <property
                          dataType="System.Int32"
                          description="Array Transformation you want to apply. Useful for case when you have 2-Dimensional arrays with rows/columns in separate arrays."
                          expressionType="Notify"
                          name="ArrayTransformationType"
                          typeConverter="ZappySys.Json.ArrayTransformType">0</property>
                        <property
                          dataType="System.String"
                          description="Filter expression to use to extract column names for array transformation."
                          expressionType="Notify"
                          name="ArrayTransColumnNameFilter"></property>
                        <property
                          dataType="System.String"
                          description="Filter expression for row values (Not applicable for simple array transformation)."
                          expressionType="Notify"
                          name="ArrayTransRowValueFilter"></property>
                        <property
                          dataType="System.Boolean"
                          description="When you have 2D array but don't have column list specified in a separate array then use this option (e.g. { arr: [[10,11],[21,22]] } )."
                          expressionType="Notify"
                          name="ArrayTransEnableCustomColumns">false</property>
                        <property
                          dataType="System.String"
                          description="When you have 2D array but don't have column list specified in a separate array then use specify column names here. Use comma separated list (e.g col1,col2,col3 ). Column name Order must match value order."
                          expressionType="Notify"
                          name="ArrayTransCustomColumns"></property>
                        <property
                          dataType="System.Int32"
                          description="Metadata scan mode controls how data type and length is determined. By default few records scanned to determine datatype/length. Changing ScanMode affects length/datatype accuracy."
                          expressionType="Notify"
                          name="MetaDataScanMode"
                          typeConverter="ZappySys.Common.Data.MetaDataScanMode">4</property>
                        <property
                          dataType="System.Int32"
                          description="Length for all string column. This option is only valid for MetaDataScanMode=Custom"
                          expressionType="Notify"
                          name="MetaDataCustomLength">1000</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.JsonParserTransform</property>
                        <property
                          dataType="System.Boolean"
                          name="EnableBigNumberHandling">false</property>
                        <property
                          dataType="System.Int32"
                          name="Encoding">0</property>
                        <property
                          dataType="System.String"
                          name="CharacterSet"></property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Get Calendar items\Receive response.Inputs[JsonParserTransformInput]"
                          errorRowDisposition="FailComponent"
                          name="JsonParserTransformInput"
                          truncationRowDisposition="FailComponent">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Get Calendar items\Receive response.Inputs[JsonParserTransformInput].Columns[ResponseText]"
                              cachedDataType="nText"
                              cachedName="ResponseText"
                              lineageId="Package\Iterate Offices\Sequence Container\Get Calendar items\Postrequest.Outputs[Response Output].Columns[ResponseText]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Get Calendar items\Receive response.Inputs[JsonParserTransformInput].Columns[ZS_JSON_OUT]"
                              cachedDataType="nText"
                              cachedName="ZS_JSON_OUT"
                              lineageId="Package\Iterate Offices\Sequence Container\Get Calendar items\Generate Request.Outputs[JsonGeneratorTransformOutput].Columns[ZS_JSON_OUT]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Get Calendar items\Receive response.Outputs[JsonParserTransformOutput].Columns[ZS_JSON_OUT]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Get Calendar items\Receive response.Inputs[JsonParserTransformInput].Columns[StatusCode]"
                              cachedDataType="i4"
                              cachedName="StatusCode"
                              lineageId="Package\Iterate Offices\Sequence Container\Get Calendar items\Postrequest.Outputs[Response Output].Columns[StatusCode]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Get Calendar items\Receive response.Outputs[JsonParserTransformOutput].Columns[StatusCode]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True" />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Get Calendar items\Receive response.Outputs[JsonParserTransformOutput]"
                          errorOrTruncationOperation="Error"
                          errorRowDisposition="FailComponent"
                          name="JsonParserTransformOutput"
                          truncationRowDisposition="FailComponent">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Get Calendar items\Receive response.Outputs[JsonParserTransformOutput].Columns[StatusCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Get Calendar items\Receive response.Outputs[JsonParserTransformOutput].Columns[StatusCode]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Get Calendar items\Receive response.Inputs[JsonParserTransformInput].Columns[StatusCode]"
                              name="StatusCode" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Get Calendar items\Receive response.Outputs[JsonParserTransformOutput].Columns[ZS_JSON_OUT]"
                              dataType="nText"
                              description="This output column contains generated JSON string from JSON generator Transform"
                              lineageId="Package\Iterate Offices\Sequence Container\Get Calendar items\Receive response.Outputs[JsonParserTransformOutput].Columns[ZS_JSON_OUT]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Get Calendar items\Receive response.Inputs[JsonParserTransformInput].Columns[ZS_JSON_OUT]"
                              name="ZS_JSON_OUT" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Get Calendar items\Receive response.Outputs[JsonParserTransformOutput].Columns[__DOCUMENT__]"
                              dataType="nText"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Get Calendar items\Receive response.Outputs[JsonParserTransformOutput].ExternalColumns[__DOCUMENT__]"
                              lineageId="Package\Iterate Offices\Sequence Container\Get Calendar items\Receive response.Outputs[JsonParserTransformOutput].Columns[__DOCUMENT__]"
                              name="__DOCUMENT__" />
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Get Calendar items\Receive response.Outputs[JsonParserTransformOutput].ExternalColumns[__DOCUMENT__]"
                              dataType="nText"
                              name="__DOCUMENT__" />
                          </externalMetadataColumns>
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Get Calendar items\Receive response.Outputs[JsonParserTransform Error Output]"
                          isErrorOut="true"
                          name="JsonParserTransform Error Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Get Calendar items\Receive response.Outputs[JsonParserTransform Error Output].Columns[StatusCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Get Calendar items\Receive response.Outputs[JsonParserTransform Error Output].Columns[StatusCode]"
                              name="StatusCode" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Get Calendar items\Receive response.Outputs[JsonParserTransform Error Output].Columns[ZS_JSON_OUT]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\Get Calendar items\Receive response.Outputs[JsonParserTransform Error Output].Columns[ZS_JSON_OUT]"
                              name="ZS_JSON_OUT" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Get Calendar items\Receive response.Outputs[JsonParserTransform Error Output].Columns[__DOCUMENT__]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\Get Calendar items\Receive response.Outputs[JsonParserTransform Error Output].Columns[__DOCUMENT__]"
                              name="__DOCUMENT__" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Get Calendar items\Receive response.Outputs[JsonParserTransform Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Get Calendar items\Receive response.Outputs[JsonParserTransform Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Get Calendar items\Receive response.Outputs[JsonParserTransform Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Get Calendar items\Receive response.Outputs[JsonParserTransform Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Get Calendar items\Receive response.Outputs[JsonParserTransform Error Output].Columns[ErrorColumnName]"
                              codePage="1252"
                              dataType="str"
                              length="128"
                              lineageId="Package\Iterate Offices\Sequence Container\Get Calendar items\Receive response.Outputs[JsonParserTransform Error Output].Columns[ErrorColumnName]"
                              name="ErrorColumnName" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Get Calendar items\Receive response.Outputs[JsonParserTransform Error Output].Columns[ErrorMessage]"
                              dataType="wstr"
                              length="1024"
                              lineageId="Package\Iterate Offices\Sequence Container\Get Calendar items\Receive response.Outputs[JsonParserTransform Error Output].Columns[ErrorMessage]"
                              name="ErrorMessage" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Get Calendar items\Receive response.Outputs[JsonParserTransform Error Output].Columns[ErrorRawData]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\Get Calendar items\Receive response.Outputs[JsonParserTransform Error Output].Columns[ErrorRawData]"
                              name="ErrorRawData" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                  </components>
                  <paths>
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Get Calendar items.Paths[JsonGeneratorTransformOutput]"
                      endId="Package\Iterate Offices\Sequence Container\Get Calendar items\Postrequest.Inputs[WebApiDestinationInput]"
                      name="JsonGeneratorTransformOutput"
                      startId="Package\Iterate Offices\Sequence Container\Get Calendar items\Generate Request.Outputs[JsonGeneratorTransformOutput]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Get Calendar items.Paths[JsonParserTransformOutput]"
                      endId="Package\Iterate Offices\Sequence Container\Get Calendar items\Add record id back.Inputs[JsonParserTransformInput]"
                      name="JsonParserTransformOutput"
                      startId="Package\Iterate Offices\Sequence Container\Get Calendar items\Receive response.Outputs[JsonParserTransformOutput]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Get Calendar items.Paths[JsonParserTransformOutput1]"
                      endId="Package\Iterate Offices\Sequence Container\Get Calendar items\Calendar Dest.Inputs[OLE DB Destination Input]"
                      name="JsonParserTransformOutput"
                      startId="Package\Iterate Offices\Sequence Container\Get Calendar items\Add record id back.Outputs[JsonParserTransformOutput]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Get Calendar items.Paths[OLE DB Destination Error Output]"
                      endId="Package\Iterate Offices\Sequence Container\Get Calendar items\Error table.Inputs[OLE DB Destination Input]"
                      name="OLE DB Destination Error Output"
                      startId="Package\Iterate Offices\Sequence Container\Get Calendar items\Calendar Dest.Outputs[OLE DB Destination Error Output]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Get Calendar items.Paths[OLE DB Source Output]"
                      endId="Package\Iterate Offices\Sequence Container\Get Calendar items\Generate Request.Inputs[JsonInput1]"
                      name="OLE DB Source Output"
                      startId="Package\Iterate Offices\Sequence Container\Get Calendar items\Get missing calendar requests.Outputs[OLE DB Source Output]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Get Calendar items.Paths[Response Output]"
                      endId="Package\Iterate Offices\Sequence Container\Get Calendar items\Receive response.Inputs[JsonParserTransformInput]"
                      name="Response Output"
                      startId="Package\Iterate Offices\Sequence Container\Get Calendar items\Postrequest.Outputs[Response Output]" />
                  </paths>
                </pipeline>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Iterate Offices\Sequence Container\Package Processed Data Log"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{226443A4-11AC-4F63-8A4C-DB28186D5951}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Package Processed Data Log"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{1ACC4D99-A047-44CB-AAAD-088F42F69A23}"
                  SQLTask:SqlStatementSource="INSERT INTO[SSISSuccessLog] (packagename,accountid, starttime, upserted,failed ,endtime)&#xA;VALUES ('FullMetricCalendarPull',?,?,?,?,getdate())" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="0"
                    SQLTask:DtsVariableName="User::RexAccountID"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="3"
                    SQLTask:ParameterSize="-1" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="1"
                    SQLTask:DtsVariableName="User::PackageStartDate"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="7"
                    SQLTask:ParameterSize="-1" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="2"
                    SQLTask:DtsVariableName="User::UpsertedCount"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="3"
                    SQLTask:ParameterSize="-1" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="3"
                    SQLTask:DtsVariableName="User::FailedDMACount"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="3"
                    SQLTask:ParameterSize="-1" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Iterate Offices\Sequence Container\Set SSIS Variables From XML"
              DTS:CreationName="ZappySys.XmlParserTask"
              DTS:Description="ZS Xml Parser Task"
              DTS:DTSID="{A90D08D4-5AFB-4E88-99CC-32E3FE045D0F}"
              DTS:ExecutableType="ZappySys.XmlParserTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Set SSIS Variables From XML"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <XmlParserTask
                  SourceAccessMode="Connection"
                  SourceVariable=""
                  SourceConnection="{FA8FC668-F6D9-487C-98A2-C602DEF06981}"
                  SourceDirectValue="&lt;!-- &#xA;Using XML Parser Task you can extract values from XML document using XPath Expression &#xA;See example in below grid. Read description for each mapping.&#xA;See more examples: https://msdn.microsoft.com/en-us/library/ms256086(v=vs.110).aspx&#xA;--&gt;&#xA;&lt;catalog&gt;&#xA;   &lt;book id=&quot;bk101&quot;&gt;&#xA;      &lt;author&gt;Gambardella, Matthew&lt;/author&gt;&#xA;      &lt;title&gt;XML Developer's Guide&lt;/title&gt;&#xA;      &lt;genre&gt;Computer&lt;/genre&gt;&#xA;      &lt;price&gt;44.95&lt;/price&gt;&#xA;      &lt;publish_date&gt;2000-10-01&lt;/publish_date&gt;&#xA;      &lt;description&gt;An in-depth look at creating applications &#xA;      with XML.&lt;/description&gt;&#xA;   &lt;/book&gt;&#xA;   &lt;book id=&quot;bk102&quot;&gt;&#xA;      &lt;author&gt;Ralls, Kim&lt;/author&gt;&#xA;      &lt;title&gt;Midnight Rain&lt;/title&gt;&#xA;      &lt;genre&gt;Fantasy&lt;/genre&gt;&#xA;      &lt;price&gt;5.95&lt;/price&gt;&#xA;      &lt;publish_date&gt;2000-12-16&lt;/publish_date&gt;&#xA;      &lt;description&gt;A former architect battles corporate zombies, &#xA;      an evil sorceress, and her own childhood to become queen &#xA;      of the world.&lt;/description&gt;&#xA;   &lt;/book&gt;&#xA;   &lt;book id=&quot;bk103&quot;&gt;&#xA;      &lt;author&gt;Corets, Eva&lt;/author&gt;&#xA;      &lt;title&gt;Maeve Ascendant&lt;/title&gt;&#xA;      &lt;genre&gt;Fantasy&lt;/genre&gt;&#xA;      &lt;price&gt;5.95&lt;/price&gt;&#xA;      &lt;publish_date&gt;2000-11-17&lt;/publish_date&gt;&#xA;      &lt;description&gt;After the collapse of a nanotechnology &#xA;      society in England, the young survivors lay the &#xA;      foundation for a new society.&lt;/description&gt;&#xA;   &lt;/book&gt;&#xA;   &lt;book id=&quot;bk104&quot;&gt;&#xA;      &lt;author&gt;Corets, Eva&lt;/author&gt;&#xA;      &lt;title&gt;Oberon's Legacy&lt;/title&gt;&#xA;      &lt;genre&gt;Fantasy&lt;/genre&gt;&#xA;      &lt;price&gt;5.95&lt;/price&gt;&#xA;      &lt;publish_date&gt;2001-03-10&lt;/publish_date&gt;&#xA;      &lt;description&gt;In post-apocalypse England, the mysterious &#xA;      agent known only as Oberon helps to create a new life &#xA;      for the inhabitants of London. Sequel to Maeve &#xA;      Ascendant.&lt;/description&gt;&#xA;   &lt;/book&gt;&#xA;&lt;/catalog&gt;"
                  TargetSettings="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-16&quot;?&gt;&lt;XmlParserSetting xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot;&gt;&lt;Mappings&gt;&lt;XmlParserMapping&gt;&lt;Path&gt;/SSISVariables/RexAPIWebURL&lt;/Path&gt;&lt;Target&gt;User::RexAPIWebURL&lt;/Target&gt;&lt;Required&gt;true&lt;/Required&gt;&lt;Description /&gt;&lt;/XmlParserMapping&gt;&lt;XmlParserMapping&gt;&lt;Path&gt; /SSISVariables/PackageUser&lt;/Path&gt;&lt;Target&gt;User::PackageUser&lt;/Target&gt;&lt;Required&gt;true&lt;/Required&gt;&lt;Description /&gt;&lt;/XmlParserMapping&gt;&lt;XmlParserMapping&gt;&lt;Path&gt;/SSISVariables/PackageErrorEmail&lt;/Path&gt;&lt;Target&gt;User::PackageErrorEmail&lt;/Target&gt;&lt;Required&gt;true&lt;/Required&gt;&lt;Description /&gt;&lt;/XmlParserMapping&gt;&lt;XmlParserMapping&gt;&lt;Path&gt;/SSISVariables/PackagePassword&lt;/Path&gt;&lt;Target&gt;User::PackagePassword&lt;/Target&gt;&lt;Required&gt;true&lt;/Required&gt;&lt;Description /&gt;&lt;/XmlParserMapping&gt;&lt;/Mappings&gt;&lt;Path /&gt;&lt;/XmlParserSetting&gt;"
                  LogLevel="Normal"
                  PrefixTimestamp="False" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Iterate Offices\Sequence Container\Set Upserted Count"
              DTS:CreationName="Microsoft.ExpressionTask"
              DTS:Description="Expression Task"
              DTS:DTSID="{58F9418D-E779-43D8-A0A3-5CE44AADD9EB}"
              DTS:ExecutableType="Microsoft.ExpressionTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Set Upserted Count"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <ExpressionTask
                  Expression="@[User::UpsertedCount] = @[User::ExecutedRecordCount] -  @[User::FailedDMACount]" />
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Iterate Offices\Sequence Container.PrecedenceConstraints[Constraint]"
              DTS:CreationName=""
              DTS:DTSID="{8FFB7536-00C3-467E-855F-DF5B891769C8}"
              DTS:From="Package\Iterate Offices\Sequence Container\Set SSIS Variables From XML"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint"
              DTS:To="Package\Iterate Offices\Sequence Container\Get Auth Key" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Iterate Offices\Sequence Container.PrecedenceConstraints[Constraint 1]"
              DTS:CreationName=""
              DTS:DTSID="{2E5BAC81-2BC4-4694-92B5-6D411F7EBCA4}"
              DTS:From="Package\Iterate Offices\Sequence Container\Get Auth Key"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 1"
              DTS:To="Package\Iterate Offices\Sequence Container\Get Calendar items" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Iterate Offices\Sequence Container.PrecedenceConstraints[Constraint 2]"
              DTS:CreationName=""
              DTS:DTSID="{A7B2D7FB-BCE5-4A8D-AEF3-2AA32FDF6FB5}"
              DTS:From="Package\Iterate Offices\Sequence Container\Get Auth Key"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 2"
              DTS:To="Package\Iterate Offices\Sequence Container\Email Auth Failure"
              DTS:Value="1" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Iterate Offices\Sequence Container.PrecedenceConstraints[Constraint 4]"
              DTS:CreationName=""
              DTS:DTSID="{CD16395F-10DA-494C-9D23-0EA2092DEC3B}"
              DTS:From="Package\Iterate Offices\Sequence Container\Get Calendar items"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 4"
              DTS:To="Package\Iterate Offices\Sequence Container\Set Upserted Count" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Iterate Offices\Sequence Container.PrecedenceConstraints[Constraint 5]"
              DTS:CreationName=""
              DTS:DTSID="{C9F595D3-8A4B-4B9D-A380-0352ADD3B42A}"
              DTS:From="Package\Iterate Offices\Sequence Container\Set Upserted Count"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 5"
              DTS:To="Package\Iterate Offices\Sequence Container\Package Processed Data Log" />
          </DTS:PrecedenceConstraints>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{E3751D67-6ED3-44E8-8C61-8718810B6DA2}"
          DTS:ObjectName="{E3751D67-6ED3-44E8-8C61-8718810B6DA2}"
          DTS:ValueIndex="0"
          DTS:VariableName="User::Office_id" />
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{ED351ABC-9A03-4960-9095-5CDECDC4215B}"
          DTS:ObjectName="{ED351ABC-9A03-4960-9095-5CDECDC4215B}"
          DTS:ValueIndex="1"
          DTS:VariableName="User::RexAccountID" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 8 1]"
      DTS:CreationName=""
      DTS:DTSID="{1C47EA45-A0E4-4E62-B966-3D9E04D87ABE}"
      DTS:From="Package\Get Office List"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 8 1"
      DTS:To="Package\Iterate Offices" />
  </DTS:PrecedenceConstraints>
  <DTS:EventHandlers>
    <DTS:EventHandler
      DTS:refId="Package.EventHandlers[OnError]"
      DTS:CreationName="OnError"
      DTS:DTSID="{039E5030-5AD9-420B-AF3B-CF7ED9D85B36}"
      DTS:EventID="0"
      DTS:EventName="OnError"
      DTS:LocaleID="-1">
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="The propagate property of the event"
          DTS:DTSID="{9C4E2A65-0ECE-400D-84BF-A3DB0C156E22}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="System"
          DTS:ObjectName="Propagate">
          <DTS:VariableValue
            DTS:DataType="11">-1</DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnError]\Email error"
          DTS:CreationName="ZappySys.HtmlEmailTask"
          DTS:Description="Email Auth Failure"
          DTS:DTSID="{DD95C8FB-B1DD-44D3-BA33-79C3A0108E43}"
          DTS:ExecutableType="ZappySys.HtmlEmailTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Email error"
          DTS:TaskContact="HTML Email Task; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support">
          <DTS:Variables />
          <DTS:ObjectData>
            <HtmlEmailTask
              SmtpConnection="SMTP"
              IsHtmlEmail="True"
              DefaultStyle="&#xA;&lt;style type=&quot;text/css&quot;&gt;&#xA;body,div,p,span,td,th,table {&#xA; font-family: Helvetica, Arial, sans-serif;&#xA; font-size: 10pt; &#xA;}&#xA;h1,h2,h3,h4,h5{&#xA;font-family: Helvetica, Arial, sans-serif;&#xA;}&#xA;&#xA;table { &#xA; border-collapse: &#xA; collapse; border-spacing: 0; &#xA;}&#xA;&#xA;tr.odd    {background-color: #cccccc}&#xA;tr.even   {background-color: #fafafa}&#xA;td, th { border: 1px solid #bbb;padding: 5 5 5 5} &#xA;th { background: #F3F3F3;  font-weight: bold;}&#xA;&lt;/style&gt;&#xA;&#xA;"
              Subject="Error occured in {{System::PackageName}}"
              From="alerts@spicerhaart.co.uk"
              To="{{User::PackageErrorEmail}}"
              Cc=""
              ReplyTo=""
              Bcc=""
              Attachments=""
              EmailPriority="High"
              MessageSourceType="Direct"
              MessageDirectValue="&lt;p&gt;Error occured and could not be logged in database&lt;p /&gt;&#xA;&lt;br&gt;&#xA;&lt;p&gt;Error code: {{System::ErrorCode}}&lt;p /&gt;&#xA;&lt;br&gt;&#xA;&lt;p&gt;Error message: {{System::ErrorDescription}}&lt;p /&gt;"
              MessageFileConnection=""
              MessageVariable=""
              LogLevel="Normal"
              PrefixTimestamp="False" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnError]\Insert error log into database"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:Disabled="True"
          DTS:DTSID="{37287761-D671-4E4A-B1FD-CD67E70D0BD1}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Insert error log into database"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{1ACC4D99-A047-44CB-AAAD-088F42F69A23}"
              SQLTask:SqlStatementSource="INSERT INTO SSISErrorLog&#xA;(PackageName, StartTime, ErrorCode, ErrorDescription, AccountID)&#xA;VALUES&#xA;(?, ?, ?, ?, ?)" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@PackageName"
                SQLTask:DtsVariableName="System::PackageName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@StartTime"
                SQLTask:DtsVariableName="System::StartTime"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="7"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@ErrorCode"
                SQLTask:DtsVariableName="System::ErrorCode"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@ErrorDescription"
                SQLTask:DtsVariableName="System::ErrorDescription"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@AccountID"
                SQLTask:DtsVariableName="$Package::RexAccountID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package.EventHandlers[OnError].PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{9F8FC295-C796-42DE-969D-8DC987308625}"
          DTS:From="Package.EventHandlers[OnError]\Insert error log into database"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package.EventHandlers[OnError]\Email error"
          DTS:Value="1" />
      </DTS:PrecedenceConstraints>
    </DTS:EventHandler>
    <DTS:EventHandler
      DTS:refId="Package.EventHandlers[OnTaskFailed]"
      DTS:CreationName="OnTaskFailed"
      DTS:DTSID="{B9F3BEDF-D989-4D40-8CA9-8A9B2DEC424D}"
      DTS:EventID="0"
      DTS:EventName="OnTaskFailed"
      DTS:LocaleID="-1">
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="The propagate property of the event"
          DTS:DTSID="{DDAAA958-C824-4FB7-8EA4-AE745AD00729}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="System"
          DTS:ObjectName="Propagate">
          <DTS:VariableValue
            DTS:DataType="11">-1</DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:Executables />
    </DTS:EventHandler>
  </DTS:EventHandlers>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="145,42"
          Id="Package\Get Office List"
          TopLeft="152.5,5.5" />
        <NodeLayout
          Size="164,42"
          Id="Package\Iterate Offices\Sequence Container\Email Auth Failure"
          TopLeft="5.50000000000003,209.5" />
        <NodeLayout
          Size="141,42"
          Id="Package\Iterate Offices\Sequence Container\Get Auth Key"
          TopLeft="244,107.5" />
        <NodeLayout
          Size="169,42"
          Id="Package\Iterate Offices\Sequence Container\Get Calendar items"
          TopLeft="230,209.5" />
        <NodeLayout
          Size="214,42"
          Id="Package\Iterate Offices\Sequence Container\Package Processed Data Log"
          TopLeft="207.5,413.5" />
        <NodeLayout
          Size="216,42"
          Id="Package\Iterate Offices\Sequence Container\Set SSIS Variables From XML"
          TopLeft="206.5,5.5" />
        <NodeLayout
          Size="171,42"
          Id="Package\Iterate Offices\Sequence Container\Set Upserted Count"
          TopLeft="229,311.5" />
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container.PrecedenceConstraints[Constraint]"
          TopLeft="314.5,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container.PrecedenceConstraints[Constraint 1]"
          TopLeft="336.666666666667,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-22.1666666666666,60"
              Start="0,0"
              End="-22.1666666666666,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.4039270687237" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.4039270687237"
                    Point2="0,24.4039270687237"
                    Point3="-4,24.4039270687237" />
                  <mssgle:LineSegment
                    End="-18.1666666666666,24.4039270687237" />
                  <mssgle:CubicBezierSegment
                    Point1="-18.1666666666666,24.4039270687237"
                    Point2="-22.1666666666666,24.4039270687237"
                    Point3="-22.1666666666666,28.4039270687237" />
                  <mssgle:LineSegment
                    End="-22.1666666666666,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container.PrecedenceConstraints[Constraint 2]"
          TopLeft="292.333333333333,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-204.833333333333,60"
              Start="0,0"
              End="-204.833333333333,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.4039270687237" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.4039270687237"
                    Point2="0,24.4039270687237"
                    Point3="-4,24.4039270687237" />
                  <mssgle:LineSegment
                    End="-200.833333333333,24.4039270687237" />
                  <mssgle:CubicBezierSegment
                    Point1="-200.833333333333,24.4039270687237"
                    Point2="-204.833333333333,24.4039270687237"
                    Point3="-204.833333333333,28.4039270687237" />
                  <mssgle:LineSegment
                    End="-204.833333333333,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-117.658014322917,29.4039270687237,30.4826953125,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container.PrecedenceConstraints[Constraint 4]"
          TopLeft="314.5,251.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container.PrecedenceConstraints[Constraint 5]"
          TopLeft="314.5,353.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="428,511"
          Size="428,554"
          Id="Package\Iterate Offices\Sequence Container"
          TopLeft="5.50000000000009,5.5" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="439,615"
          Size="439,658"
          Id="Package\Iterate Offices"
          TopLeft="5.50000000000006,107.5" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 8 1]"
          TopLeft="225,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <DtsEventHandler
    design-time-name="Package.EventHandlers[OnError]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="131,42"
          Id="Package.EventHandlers[OnError]\Email error"
          TopLeft="NaN,NaN" />
        <NodeLayout
          Size="217,42"
          Id="Package.EventHandlers[OnError]\Insert error log into database"
          TopLeft="NaN,NaN" />
        <EdgeLayout
          Id="Package.EventHandlers[OnError].PrecedenceConstraints[Constraint]"
          TopLeft="NaN,NaN">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="{assembly:Null}"
              Start="0,0"
              End="0,0">
              <mssgle:Curve.Segments>
                <assembly:Null />
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,30.4826953125,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <DtsEventHandler
    design-time-name="Package.EventHandlers[OnTaskFailed]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="131,42"
          Id="{7B24456E-71A1-42ED-8BF3-CE0C7825D6DF}"
          TopLeft="203,130" />
        <NodeLayout
          Size="178,42"
          Id="{1F31AF16-4BD6-4A53-A279-CE4F8DEAF5C6}"
          TopLeft="179,23" />
        <EdgeLayout
          Id="{160B05A4-98A6-4E8D-887A-A70D0F08AA63}"
          TopLeft="268.25,65">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,65"
              Start="0,0"
              End="0,57.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,57.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <TaskHost
    design-time-name="Package\Iterate Offices\Sequence Container\Get Calendar items">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="145,42"
          Id="Package\Iterate Offices\Sequence Container\Get Calendar items\Calendar Dest"
          TopLeft="30.0000000000001,515.5" />
        <NodeLayout
          Size="163,42"
          Id="Package\Iterate Offices\Sequence Container\Get Calendar items\Generate Request"
          TopLeft="34,107.5" />
        <NodeLayout
          Size="161,42"
          Id="Package\Iterate Offices\Sequence Container\Get Calendar items\Receive response"
          TopLeft="35,311.5" />
        <NodeLayout
          Size="129,42"
          Id="Package\Iterate Offices\Sequence Container\Get Calendar items\Error table"
          TopLeft="320,520" />
        <NodeLayout
          Size="167,42"
          Id="Package\Iterate Offices\Sequence Container\Get Calendar items\Add record id back"
          TopLeft="32.0000000000001,413.5" />
        <NodeLayout
          Size="134,42"
          Id="Package\Iterate Offices\Sequence Container\Get Calendar items\Postrequest"
          TopLeft="48.5,209.5" />
        <NodeLayout
          Size="220,42"
          Id="Package\Iterate Offices\Sequence Container\Get Calendar items\Get missing calendar requests"
          TopLeft="5.5,5.5" />
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Get Calendar items.Paths[Response Output]"
          TopLeft="115.5,251.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Get Calendar items.Paths[OLE DB Source Output]"
          TopLeft="115.5,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Get Calendar items.Paths[OLE DB Destination Error Output]"
          TopLeft="175,538.75">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="145,0"
              Start="0,0"
              End="137.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="137.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-4.45890625,5,146.4178125,11.43359375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Get Calendar items.Paths[JsonParserTransformOutput1]"
          TopLeft="115.5,455.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-13,60"
              Start="0,0"
              End="-13,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26" />
                  <mssgle:CubicBezierSegment
                    Point1="0,26"
                    Point2="0,30"
                    Point3="-4,30" />
                  <mssgle:LineSegment
                    End="-9,30" />
                  <mssgle:CubicBezierSegment
                    Point1="-9,30"
                    Point2="-13,30"
                    Point3="-13,34" />
                  <mssgle:LineSegment
                    End="-13,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Get Calendar items.Paths[JsonParserTransformOutput]"
          TopLeft="115.5,353.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Get Calendar items.Paths[JsonGeneratorTransformOutput]"
          TopLeft="115.5,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Iterate Offices\Sequence Container\Get Calendar items\Calendar Dest">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Iterate Offices\Sequence Container\Get Calendar items\Error table">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Iterate Offices\Sequence Container\Get Calendar items\Get missing calendar requests">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>