<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="10/26/2018 4:42:07 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="79000ITD10"
  DTS:CreatorName="SPICERHAART\1901434"
  DTS:DTSID="{ED3F410A-42A2-47C7-B41E-91EC48120B83}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:FailParentOnFailure="True"
  DTS:LastModifiedProductVersion="15.0.1301.433"
  DTS:LocaleID="2057"
  DTS:ObjectName="EntitySyncSecondary"
  DTS:PackageType="5"
  DTS:ProtectionLevel="2"
  DTS:VersionBuild="1056"
  DTS:VersionGUID="{33155753-9B73-47EC-9AA0-C9EA67A3DB95}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[colsqlbi01v.Entities]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{54C00E71-9225-462A-A0FC-20DF323BF1C9}"
      DTS:ObjectName="colsqlbi01v.Entities">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=colsqlbi01v;User ID=wh_user;Initial Catalog=Entities;Provider=SQLNCLI11.1;Auto Translate=False;">
          <EncryptedData
            Type="http://www.w3.org/2001/04/xmlenc#Element"
            Salt="TVyWipcUgA=="
            IV="0ERuv6yuT+U=" xmlns="http://www.w3.org/2001/04/xmlenc#">
            <EncryptionMethod
              Algorithm="http://www.w3.org/2001/04/xmlenc#tripledes-cbc" />
            <CipherData>
              <CipherValue>0ERuv6yuT+VdXYrDuPMq2T8bw4wJam6YQzpF8OqvmpytF67vYbb85dvuU7S6vNRddq89WXW1ujErbNV2TiDbPQaFqsdLpBWJ5Ylbavok4BLbAfz61e+5IEZlWCZbLLQgJNkmYhPu/CAgf7l1Zm1tNzbyzXJ5H8tv</CipherValue>
            </CipherData>
          </EncryptedData>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[colsqlbi01v.Entities 1]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{25A5CE9C-414E-4A08-B0A0-2C37CC6AB94E}"
      DTS:ObjectName="colsqlbi01v.Entities 1">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=colsqlbi01v;User ID=wh_user;Initial Catalog=Entities;Provider=SQLNCLI11.1;Auto Translate=False;">
          <EncryptedData
            Type="http://www.w3.org/2001/04/xmlenc#Element"
            Salt="0GZK+1izzA=="
            IV="brMQPL1lrM0=" xmlns="http://www.w3.org/2001/04/xmlenc#">
            <EncryptionMethod
              Algorithm="http://www.w3.org/2001/04/xmlenc#tripledes-cbc" />
            <CipherData>
              <CipherValue>brMQPL1lrM10+VQGCTrmlk36FDl3gMDsjlwf23ZZ41ML9qT3ar/G1BmRFqG4qxufWI0/SePpKy0nq9e6sEo0WD0lnp16PgbzsRvpji1+W0CJsh3MGwNmwnaEB9uBo0/JmvU30wnMq0a5Ga0EYi+tqbJm6QtMRhFz</CipherValue>
            </CipherData>
          </EncryptedData>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[colsqlbi01v.Entities1]"
      DTS:CreationName="ADO.NET:SQL"
      DTS:DTSID="{EA4AD218-FC0B-4D07-B37E-873F276EFF03}"
      DTS:ObjectName="colsqlbi01v.Entities1">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=colsqlbi01v;Initial Catalog=Entities;Integrated Security=True;Application Name=SSIS-WHSync-{EA4AD218-FC0B-4D07-B37E-873F276EFF03}colsqlbi01v.Entities1;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[COLSQLBI01v.Metrics]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{C671498C-FEA5-4197-A478-2F45F1611CB5}"
      DTS:ObjectName="COLSQLBI01v.Metrics">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=COLSQLBI01v;Initial Catalog=Metrics;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[COLSQLBI01V.RosieWorkBench]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{07A6C3E6-00C2-4630-A286-074F475D916F}"
      DTS:ObjectName="COLSQLBI01V.RosieWorkBench">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=COLSQLBI01V;Initial Catalog=RosieWorkBench;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[HTTP]"
      DTS:CreationName="ZS-HTTP"
      DTS:DTSID="{8E9391D9-15C7-4E65-8402-3DC737C1A052}"
      DTS:ObjectName="HTTP">
      <DTS:ObjectData>
        <ConnectionManager
          ConnectionString="Url=https://api.rexsoftware.com/rex.php;CredentialType=Notset;UserName=;Timeout=100000;SoapWssPasswordType=Notset;JwtCustomClaims=;RetainCookies=False;UseProxy=False;ProxyUrl=;UseProxyCreds=False;ProxyUserName=;DoNotUseDefaultProxy=False;UseClientCertificate=False;CertificatePath=;CertificateStorageType=CurrentUser;CertificateStoreName=My;CertificateThumbprint=;RetryMode=None;RetryCountMax=3;RetryWaitTimeMs=2000;RetryMultiplyWaitTime=False;RetryMessageList=;RetryStatusCodeList=;AuthScheme=Bearer;TokenAuthHeader=;TokenUrl=;TokenRequestData=;TokenRequestHeaders=Accept:*/*||Cache-Control:no-cache;TokenRequestMethod=;TokenRequestContentType=Default;TokenRequestIsMultiPart=False;TokenResponseContentFilter=;TokenResponseValueExtractMode=Body;TokenResponseCookie=;TokenResponseHeader=;TokenResponseContentType=None;TokenExpirationTimeInSeconds=3600;EnableRequestHashing=False;HashAlgorithm=sha256;HashSignatureFormat=;HashSignatureFormatForLogin=;ExtraHeaders=;ExtraHeadersForLogin=;HashTimestampFormat=;HashTreatSecretAsNonBase64=False;HashSignWithApiKey=False;RetainSameConnection=False" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[HTTP 1]"
      DTS:CreationName="ZS-HTTP"
      DTS:DTSID="{2F1FE38B-67C9-4509-925F-0777B74AC1B8}"
      DTS:ObjectName="HTTP 1">
      <DTS:ObjectData>
        <ConnectionManager
          ConnectionString="Url=https://api.rexsoftware.com/rex.php;CredentialType=Notset;UserName=;Timeout=100000;SoapWssPasswordType=Notset;JwtCustomClaims=;RetainCookies=False;UseProxy=False;ProxyUrl=;UseProxyCreds=False;ProxyUserName=;DoNotUseDefaultProxy=False;UseClientCertificate=False;CertificatePath=;CertificateStorageType=CurrentUser;CertificateStoreName=My;CertificateThumbprint=;RetryMode=None;RetryCountMax=3;RetryWaitTimeMs=2000;RetryMultiplyWaitTime=False;RetryMessageList=;RetryStatusCodeList=;AuthScheme=Bearer;TokenAuthHeader=;TokenUrl=;TokenRequestData=;TokenRequestHeaders=Accept:*/*||Cache-Control:no-cache;TokenRequestMethod=;TokenRequestContentType=Default;TokenRequestIsMultiPart=False;TokenResponseContentFilter=;TokenResponseValueExtractMode=Body;TokenResponseCookie=;TokenResponseHeader=;TokenResponseContentType=None;TokenExpirationTimeInSeconds=3600;EnableRequestHashing=False;HashAlgorithm=sha256;HashSignatureFormat=;HashSignatureFormatForLogin=;ExtraHeaders=;ExtraHeadersForLogin=;HashTimestampFormat=;HashTreatSecretAsNonBase64=False;HashSignWithApiKey=False;RetainSameConnection=False" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[RexSync.xml]"
      DTS:CreationName="FILE"
      DTS:DTSID="{4DC76EE1-014A-4815-B0BD-C377F218FC10}"
      DTS:ObjectName="RexSync.xml">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="C:\SSISVariables\RexSync.xml" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[SMTP]"
      DTS:CreationName="ZS-SMTP"
      DTS:DTSID="{D2E4A708-2C74-4168-A888-8C0F8A82DA44}"
      DTS:ObjectName="SMTP">
      <DTS:ObjectData>
        <ConnectionManager
          ConnectionString="SmtpServer=outlookcol;UserName=;Port=25;EnableSsl=False;Timeout=10000;EnableAnonymousAuth=False" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[SMTP Connection Manager]"
      DTS:CreationName="SMTP"
      DTS:DTSID="{7CAEAE79-70D5-433F-93E5-30CFA65D83F2}"
      DTS:ObjectName="SMTP Connection Manager">
      <DTS:ObjectData>
        <SmtpConnectionManager
          ConnectionString="SmtpServer=outlookcol;UseWindowsAuthentication=False;EnableSsl=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:PackageParameters>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{2CE4E708-559A-4956-B179-919B578CC638}"
      DTS:ObjectName="Partition">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">ALL</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="3"
      DTS:DTSID="{5A7ACCC8-FC0A-489E-907D-A28120081A7B}"
      DTS:ObjectName="WindowDays">
      <DTS:Property
        DTS:DataType="3"
        DTS:Name="ParameterValue">2</DTS:Property>
    </DTS:PackageParameter>
  </DTS:PackageParameters>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{7D2B0FDF-EF64-473F-AD5F-729F023F1C50}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="CalendarObject">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{6572132D-F872-4056-A216-A815F1C130C4}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="CustomfieldsPlaceHolder">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{45F577B4-C9BE-48B1-AC60-03B39538DC7C}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="FailedDMACount">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{EAE1AA3E-19A1-4AA5-83FB-3F5BDA3822C9}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="KCode">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B5E52FE9-DD76-4CEF-8173-0E9D80B227D9}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="KPIActionedAccountUserID">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{26495B88-329C-4FE5-828E-B4C67CF2C853}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="KPIList">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{55868A19-E26C-448E-9510-02883B2A7272}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="KPITime">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A4C8B50D-5E48-4B92-8437-DDD40DB9E6D4}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="KPIUserID">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{FA09C8B8-91DC-4628-9931-C519D1B22E7A}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="KPIValue">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{650C0BDC-927E-4631-8C71-E40D6492BA3E}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="ListingServiceID">
      <DTS:VariableValue
        DTS:DataType="3">1</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{9D31097E-8FC3-4495-92E6-ECC54DF1EAED}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="MetricID">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{9872818E-C0C2-435F-858B-611A8C783B8B}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="MetricObject">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{4456C53F-DAAC-4D83-84AE-4EFE30F8AD99}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="MetricOrigin">
      <DTS:VariableValue
        DTS:DataType="3">1</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{EEB96314-2D00-4645-9C8F-D9AD8F91463B}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="MetricTotal">
      <DTS:VariableValue
        DTS:DataType="3">-1</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F734E293-04A0-4A02-A81A-A8732F83D837}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="MetricUpserted">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{1B5E8D45-1E6D-4994-A21D-4BF1AB40FF28}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="OfficeList">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{5DAD7F09-D963-4880-87A3-A487B02723BB}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Office_id">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{BD5A9EC8-41DB-4F09-8CD3-9AFFDD6F5236}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="OneweekAgoUnixDateStamp">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F949321C-5CAD-4D04-9509-48625E5B4D86}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="PackageErrorEmail">
      <DTS:VariableValue
        DTS:DataType="8">keith.mills@spicerhaart.co.uk</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{6B822CC4-0103-4465-BC4D-2007B0D1D70D}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="PackageExecutionInfo">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{187EB85A-3A28-4285-B18F-B4CC55A4FEAC}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="PackagePassword">
      <DTS:VariableValue
        DTS:DataType="8">P4ssword</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{70EAE37D-B463-4FE8-B93C-EFFF6ACFBB1C}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="PackageStartDate">
      <DTS:VariableValue
        DTS:DataType="7">1/1/2020</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{E15F7DC9-74F2-4DEF-9EC9-D171C8E97AFE}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="PackageStartForNextRun">
      <DTS:VariableValue
        DTS:DataType="7">1/1/2020</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{97E1D319-88FB-42C0-B448-5EF2F532CED9}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="PackageUser">
      <DTS:VariableValue
        DTS:DataType="8">1897047@spicerhaart.com</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{9AFDA3EC-8B7A-4CA1-9B9E-A42BAE758C10}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="ProcessingStart">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{C3B97477-99E9-45E0-BD40-98ADCA1D00D4}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="PropertyCategory">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{04D584EF-E9C6-47AD-B9B6-03233AACEF54}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Record_id">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F0E50EC1-D89F-49A9-8C55-F7937962602A}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ResponseAuth">
      <DTS:VariableValue
        DTS:DataType="8">{ 	"result": { 		"metric": "K006", 		"time": 1574501564, 		"recorded_at": 1574501564, 		"value": 1, 		"recorded_by_user": { 			"id": "25918", 			"_name": "Shannay Jarvis", 			"_first_name": "Shannay", 			"_last_name": "Jarvis", 			"_email_address": "Shannay.Jarvis@haart.co.uk" 		}, 		"labels": [ 			{ 				"label": "service_name", 				"value": "CalendarEvents" 			}, 			{ 				"label": "record_id", 				"value": "32f81cc2-0dd4-11ea-b8c1-5adf458c5229" 			} 		], 		"user_attributions": [ 			{ 				"percentage": 100, 				"user": { 					"id": "25918", 					"_name": "Shannay Jarvis", 					"_first_name": "Shannay", 					"_last_name": "Jarvis", 					"_email_address": "Shannay.Jarvis@haart.co.uk" 				} 			} 		], 		"_id": 698037 	}, 	"error": null }</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{6A891769-AB4E-499E-9A26-5A9A3BB451B0}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ResponseAuthCode">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{EE81ACF9-9058-4481-A346-732989159AA5}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="RexAccountID">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{88FFD333-1872-41CE-BFA6-52E15F75AC77}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="RexAPIWebURL">
      <DTS:VariableValue
        DTS:DataType="8">https://api.uk.rexsoftware.com/rex.php</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{E7374516-63A1-4D91-B6E6-4A6AEFDCBF2D}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="RexAPIWebURLv1">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{5B6DDD37-9762-4797-9067-00AC97A07742}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="RexToken">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{0421AB38-C765-49DF-8AEB-6BB11CB27CEB}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="RosieUserID">
      <DTS:VariableValue
        DTS:DataType="3">18382</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{647155B1-E955-4A5E-9A8E-5E67D5AE97A1}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ServiceName">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{6A41C329-4B8E-40EB-99CA-F7B0D97E8257}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="DATEDIFF(&quot;S&quot;, (DT_DBTIMESTAMP)&quot;1970-01-01&quot;, (DT_DBTIMESTAMP)&quot;2018-09-01&quot;)"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="system_ctime">
      <DTS:VariableValue
        DTS:DataType="3">1535760000</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{9351D0A7-7FFA-4C21-96E6-E0AD5792332F}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="UpsertedCount">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{3CFC88E6-9173-4262-AFFA-CB967BA8EF54}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="Variable">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Get Office List"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{F614B094-E60B-468F-A39D-B6B7D7E39FEF}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Get Office List"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{54C00E71-9225-462A-A0FC-20DF323BF1C9}"
          SQLTask:BypassPrepare="False"
          SQLTask:SqlStatementSource="SELECT [office_id],  [account_id], &#xA;       [org_id], &#xA;       [office_name]&#xA;FROM [RosieWorkBench].[dbo].[vwAccount]&#xA;WHERE   migrated = 1 and [office_name] not like '%test%'&#xA;order by [office_name]&#xA;"
          SQLTask:ResultType="ResultSetType_Rowset" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ResultBinding
            SQLTask:ResultName="0"
            SQLTask:DtsVariableName="User::OfficeList" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="0"
            SQLTask:DtsVariableName="$Package::Partition"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="129"
            SQLTask:ParameterSize="-1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="1"
            SQLTask:DtsVariableName="$Package::Partition"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="129"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Iterate Offices"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:Description="Foreach Loop Container"
      DTS:DTSID="{37F9B629-FA15-41FF-AE96-E93B6664809F}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="-1"
      DTS:ObjectName="Iterate Offices">
      <DTS:ForEachEnumerator
        DTS:CreationName="Microsoft.ForEachADOEnumerator"
        DTS:DTSID="{90861DCA-C447-4B71-81EA-0C059B9AEDEE}"
        DTS:ObjectName="{A7CC5C17-CF0B-4BFC-AD97-DC80FF43AE29}">
        <DTS:ObjectData>
          <FEEADO
            EnumType="EnumerateRowsInFirstTable"
            VarName="User::OfficeList" />
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Iterate Offices\Sequence Container"
          DTS:CreationName="STOCK:SEQUENCE"
          DTS:Description="Sequence Container"
          DTS:DTSID="{3BD78D99-CC86-4ED9-830E-AA0C9D991F4F}"
          DTS:ExecutableType="STOCK:SEQUENCE"
          DTS:LocaleID="-1"
          DTS:ObjectName="Sequence Container">
          <DTS:Variables />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Iterate Offices\Sequence Container\Email Auth Failure"
              DTS:CreationName="ZappySys.HtmlEmailTask"
              DTS:Description="Email Auth Failure"
              DTS:DTSID="{88F0087F-AC9A-468C-88C7-F609A08049C0}"
              DTS:ExecutableType="ZappySys.HtmlEmailTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Email Auth Failure"
              DTS:TaskContact="HTML Email Task; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <HtmlEmailTask
                  SmtpConnection="SMTP"
                  IsHtmlEmail="True"
                  DefaultStyle="&#xA;&lt;style type=&quot;text/css&quot;&gt;&#xA;body,div,p,span,td,th,table {&#xA; font-family: Helvetica, Arial, sans-serif;&#xA; font-size: 10pt; &#xA;}&#xA;h1,h2,h3,h4,h5{&#xA;font-family: Helvetica, Arial, sans-serif;&#xA;}&#xA;&#xA;table { &#xA; border-collapse: &#xA; collapse; border-spacing: 0; &#xA;}&#xA;&#xA;tr.odd    {background-color: #cccccc}&#xA;tr.even   {background-color: #fafafa}&#xA;td, th { border: 1px solid #bbb;padding: 5 5 5 5} &#xA;th { background: #F3F3F3;  font-weight: bold;}&#xA;&lt;/style&gt;&#xA;&#xA;"
                  Subject="Error occured in {{System::PackageName}}"
                  From="alerts@spicerhaart.co.uk"
                  To="{{User::PackageErrorEmail}}"
                  Cc=""
                  ReplyTo=""
                  Bcc=""
                  Attachments=""
                  EmailPriority="High"
                  MessageSourceType="Direct"
                  MessageDirectValue="&lt;b&gt;Failed to get Authorization Key&lt;/b&gt;&lt;p /&gt;&#xA;&#xA;&lt;p&gt; Response Code =&gt; {{User::ResponseAuthCode}} &lt;p /&gt;&#xA;&#xA;"
                  MessageFileConnection=""
                  MessageVariable=""
                  LogLevel="Normal"
                  PrefixTimestamp="False" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Iterate Offices\Sequence Container\Get Auth Key"
              DTS:CreationName="ZappySys.RestApiTask"
              DTS:Description="ZS REST API Task"
              DTS:DTSID="{52D68B95-44CC-43CC-AB1A-A51F05971397}"
              DTS:ExecutableType="ZappySys.RestApiTask"
              DTS:FailPackageOnFailure="True"
              DTS:LocaleID="-1"
              DTS:ObjectName="Get Auth Key"
              DTS:TaskContact="REST API Task; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <RestApiTask
                  RequestAccessMode="DirectUrl"
                  RequestUrlVariable=""
                  EnableStatusCheck="False"
                  StatusCheckMaxWaitSeconds="0"
                  StatusFieldFilterType="None"
                  StatusFieldFilterExpr=""
                  StatusCheckIterationWaitSeconds="0"
                  StatusCheckForFailedValue="False"
                  StatusSuccessValue=""
                  StatusContinueValue=""
                  StatusFailedValue=""
                  IsMultiPartUpload="False"
                  AddMultiPartPostamble="False"
                  PreventAutoRedirect="False"
                  RequestTimeoutMs="0"
                  SecurityProtocol="Default"
                  EnableCompressionSupport="True"
                  AllowUnsecureSuite="False"
                  IgnoreCertificateErrors="False"
                  RequestUrl="{{User::RexAPIWebURL}}"
                  RequestUrlConnection=""
                  RequestMethod="POST"
                  RequestContentType="ApplicationJson"
                  OverrideConnectionUrl="False"
                  RequestHeaders="&lt;request&gt;&lt;header&gt;&lt;name&gt;Accept&lt;/name&gt;&lt;value&gt;*/*&lt;/value&gt;&lt;/header&gt;&lt;header&gt;&lt;name&gt;Cache-Control&lt;/name&gt;&lt;value&gt;no-cache&lt;/value&gt;&lt;/header&gt;&lt;header&gt;&lt;name&gt;X-App-Identifier&lt;/name&gt;&lt;value&gt;client:spicerhaart:{{System::PackageName}}:{{System::TaskName}}&lt;/value&gt;&lt;/header&gt;&lt;/request&gt;"
                  RequestData="{&#xA;&quot;method&quot;:&quot;Authentication::login&quot;,&#xA;&quot;args&quot;:{&#xA;&quot;email&quot;:&quot;{{User::PackageUser}}&quot;,&#xA;&quot;password&quot;:&quot;{{User::PackagePassword}}&quot;,&#xA;&quot;account_id&quot;:&quot;{{User::RexAccountID}}&quot;,&#xA;&quot;application&quot;:&quot;rex&quot;&#xA;}&#xA;}"
                  SaveResponse="True"
                  SaveResponseStatusCode="True"
                  ResponseAccessMode="Variable"
                  SaveAsBinary="False"
                  ResponseDataFilePath=""
                  ResponseHeaderMappings="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-16&quot;?&gt;&lt;ArrayOfKeyValueMapping xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot;&gt;&lt;KeyValueMapping&gt;&lt;Key&gt;Transfer-Encoding&lt;/Key&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;/KeyValueMapping&gt;&lt;KeyValueMapping&gt;&lt;Key&gt;Connection&lt;/Key&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;/KeyValueMapping&gt;&lt;KeyValueMapping&gt;&lt;Key&gt;Access-Control-Allow-Origin&lt;/Key&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;/KeyValueMapping&gt;&lt;KeyValueMapping&gt;&lt;Key&gt;Access-Control-Allow-Headers&lt;/Key&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;/KeyValueMapping&gt;&lt;KeyValueMapping&gt;&lt;Key&gt;Access-Control-Allow-Methods&lt;/Key&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;/KeyValueMapping&gt;&lt;KeyValueMapping&gt;&lt;Key&gt;Access-Control-Max-Age&lt;/Key&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;/KeyValueMapping&gt;&lt;KeyValueMapping&gt;&lt;Key&gt;Vary&lt;/Key&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;/KeyValueMapping&gt;&lt;KeyValueMapping&gt;&lt;Key&gt;Content-Encoding&lt;/Key&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;/KeyValueMapping&gt;&lt;KeyValueMapping&gt;&lt;Key&gt;Content-Type&lt;/Key&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;/KeyValueMapping&gt;&lt;KeyValueMapping&gt;&lt;Key&gt;Date&lt;/Key&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;/KeyValueMapping&gt;&lt;KeyValueMapping&gt;&lt;Key&gt;Server&lt;/Key&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;/KeyValueMapping&gt;&lt;/ArrayOfKeyValueMapping&gt;"
                  ResponseCookieMappings="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-16&quot;?&gt;&lt;ArrayOfKeyValueMapping xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; /&gt;"
                  CookieContainerVariable=""
                  ConvertXmlToJson="False"
                  ResponseDataVariable="User::RexToken"
                  ResponseStatusCodeVariable="User::ResponseAuthCode"
                  ResponseContentType="Json"
                  ResponseContentFilter="$.result"
                  ResponseCharset=""
                  ValidateResponse="False"
                  ValidationRules="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-16&quot;?&gt;&lt;ResponseValidationSetting xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot;&gt;&lt;MatchAny&gt;false&lt;/MatchAny&gt;&lt;Rules&gt;&lt;ResponseValidationRule xsi:type=&quot;StatusCodeValidationRule&quot;&gt;&lt;Enabled&gt;false&lt;/Enabled&gt;&lt;Operator&gt;Eq&lt;/Operator&gt;&lt;StatusCode&gt;200&lt;/StatusCode&gt;&lt;/ResponseValidationRule&gt;&lt;ResponseValidationRule xsi:type=&quot;ContentValidationRule&quot;&gt;&lt;Enabled&gt;false&lt;/Enabled&gt;&lt;Operator&gt;Eq&lt;/Operator&gt;&lt;Value /&gt;&lt;/ResponseValidationRule&gt;&lt;ResponseValidationRule xsi:type=&quot;HeaderValidationRule&quot;&gt;&lt;Enabled&gt;false&lt;/Enabled&gt;&lt;Operator&gt;Eq&lt;/Operator&gt;&lt;KeyName /&gt;&lt;Value /&gt;&lt;DataType&gt;String&lt;/DataType&gt;&lt;/ResponseValidationRule&gt;&lt;/Rules&gt;&lt;/ResponseValidationSetting&gt;"
                  ConsumeResponseOnError="False"
                  ContineOnAnyError="False"
                  ContineOnErrorForMessage="False"
                  ContineOnErrorForStatusCode="False"
                  ErrorStatusCodeToMatch="404"
                  MatchForEqual="True"
                  ErrorSubstringToMatch=""
                  ContineOn404Error="False"
                  SaveErrorFlagToVariable="False"
                  ErrorFlagVariableName=""
                  LogLevel="Normal"
                  PrefixTimestamp="False" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Iterate Offices\Sequence Container\Get epoch for 4 days ago"
              DTS:CreationName="Microsoft.ExpressionTask"
              DTS:Description="Expression Task"
              DTS:DTSID="{4727E9C6-DE30-4509-B834-D67EEC5E87A0}"
              DTS:ExecutableType="Microsoft.ExpressionTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Get epoch for 4 days ago"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <ExpressionTask
                  Expression="@[User::OneweekAgoUnixDateStamp] = DATEDIFF(&quot;SECOND&quot;,(DT_DBTIMESTAMP)&quot;01/01/1970&quot;, DATEADD( &quot;Day&quot;, -3,GETDATE() )   )" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Iterate Offices\Sequence Container\Listing Portal Upload"
              DTS:CreationName="Microsoft.Pipeline"
              DTS:Description="Data Flow Task"
              DTS:DTSID="{D428D26A-5140-423D-8F58-7046A0351E95}"
              DTS:ExecutableType="Microsoft.Pipeline"
              DTS:LocaleID="-1"
              DTS:ObjectName="Listing Portal Upload"
              DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:ObjectData>
                <pipeline
                  version="1">
                  <components>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Listing Portal Upload\Add accountid and origin"
                      componentClassID="Microsoft.DerivedColumn"
                      contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                      name="Add accountid and origin"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Listing Portal Upload\Add accountid and origin.Inputs[Derived Column Input]"
                          description="Input to the Derived Column Transformation"
                          name="Derived Column Input">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Listing Portal Upload\Add accountid and origin.Outputs[Derived Column Output]"
                          description="Default Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          name="Derived Column Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Listing Portal Upload\Add accountid and origin.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing Portal Upload\Add accountid and origin.Outputs[Derived Column Output].Columns[AccountId]"
                              dataType="i4"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing Portal Upload\Add accountid and origin.Outputs[Derived Column Output].Columns[AccountId]"
                              name="AccountId"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">@[User::RexAccountID]</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">@[User::RexAccountID]</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing Portal Upload\Add accountid and origin.Outputs[Derived Column Output].Columns[Origin]"
                              dataType="i4"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing Portal Upload\Add accountid and origin.Outputs[Derived Column Output].Columns[Origin]"
                              name="Origin"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">2</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">2</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Listing Portal Upload\Add accountid and origin.Outputs[Derived Column Error Output]"
                          description="Error Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Derived Column Error Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Listing Portal Upload\Add accountid and origin.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing Portal Upload\Add accountid and origin.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing Portal Upload\Add accountid and origin.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing Portal Upload\Add accountid and origin.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing Portal Upload\Add accountid and origin.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Listing Portal Upload\Search Listings Portal Upload"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="JSON Source (REST API or File); ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="The JSON source is used to read data from JSON files, RESTful Web Service or direct JSON String."
                      name="Search Listings Portal Upload"
                      usesDispositions="true"
                      version="33">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for any numeric data types"
                          expressionType="Notify"
                          name="TreatBlankNumberAsNull">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for bool data types"
                          expressionType="Notify"
                          name="TreatBlankBoolAsNull">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for any date/time data types"
                          expressionType="Notify"
                          name="TreatBlankDateAsNull">true</property>
                        <property
                          dataType="System.Int32"
                          description="Defines how to read the JSON file or direct string"
                          expressionType="Notify"
                          name="AccessMode"
                          typeConverter="ZappySys.Common.Ssis.FileValueAccessMode">3</property>
                        <property
                          dataType="System.String"
                          description="Defines how to read the JSON file or direct string"
                          expressionType="Notify"
                          name="DirectValue"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.String"
                          description="Variable name which holds JSON string"
                          expressionType="Notify"
                          name="ValueVariable"
                          typeConverter="ZappySys.PowerPack.Converters.VariableEditor,ZappySys.PowerPack130.UI,Version=1.0.0.0,Culture=neutral,PublicKeyToken=1903265a93eae502"></property>
                        <property
                          dataType="System.String"
                          description="Variable name which holds data file path or url"
                          expressionType="Notify"
                          name="PathVariable"
                          typeConverter="ZappySys.PowerPack.Converters.VariableEditor,ZappySys.PowerPack130.UI,Version=1.0.0.0,Culture=neutral,PublicKeyToken=1903265a93eae502">User::RexAPIWebURL</property>
                        <property
                          dataType="System.String"
                          description="JSON file file path (e.g. c:\data\myfile.json) or pattern to process multiple files (e.g. c:\data\*.json)"
                          expressionType="Notify"
                          name="DirectPath"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">https://api.uk.rexsoftware.com/rex.php</property>
                        <property
                          dataType="System.Boolean"
                          description="Include files from sub folders too."
                          expressionType="Notify"
                          name="Recursive">false</property>
                        <property
                          dataType="System.String"
                          description="Set this if you want to set custom Http headers. You may use variable anywhere in the header value using syntax {{User::YourVarName}}. Syntax of Header key value pair is : &amp;lt;request&amp;gt;&amp;lt;header&amp;gt;&amp;lt;name&amp;gt;x-myheader-1&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;AAA&amp;lt;/value&amp;gt;&amp;lt;/header&amp;gt; &amp;lt;header&amp;gt;&amp;lt;name&amp;gt;x-myheader-2&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;BBB&amp;lt;/value&amp;gt;&amp;lt;/header&amp;gt;&amp;lt;/request&amp;gt;"
                          expressionType="Notify"
                          name="HttpHeaders">&lt;request&gt;&lt;header&gt;&lt;name&gt;Accept&lt;/name&gt;&lt;value&gt;*/*&lt;/value&gt;&lt;/header&gt;&lt;header&gt;&lt;name&gt;Cache-Control&lt;/name&gt;&lt;value&gt;no-cache&lt;/value&gt;&lt;/header&gt;&lt;header&gt;&lt;name&gt;X-App-Identifier&lt;/name&gt;&lt;value&gt;client:spicerhaart:{{System::PackageName}}:{{System::TaskName}}&lt;/value&gt;&lt;/header&gt;&lt;/request&gt;</property>
                        <property
                          dataType="System.String"
                          description="User defined data you wish to send along with your HTTP Request (e.g. Upload file data, Form POST data). Usually you have to set content-type of your data but if you select RequestMethod=POST then system will automatically set content-type=application/x-www-form-urlencoded."
                          expressionType="Notify"
                          name="HttpRequestData">{
"method":"ListingPortalUploads::search",
"args":{
	"criteria": 
	[
    
	],
	"limit":100,
	"offset": &lt;%page%&gt;
	 },
"strip_response_prefixes": true,
"token": "{{User::RexToken}}"
}</property>
                        <property
                          dataType="System.String"
                          description="Http Web Request Method (e.g. POST, GET, PUT, LIST, DELETE...). Refer your API documentation if you are not sure which method you have to use."
                          expressionType="Notify"
                          name="HttpRequestMethod">POST</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies content type for data you wish to POST. If you select Default option then system default content type will be used (i.e. application/x-www-form-urlencoded). If you specify Content-Type header along with this option then header value takes precedence."
                          expressionType="Notify"
                          name="HttpRequestContentType"
                          typeConverter="ZappySys.Common.Web.HttpRequestContentType">2</property>
                        <property
                          dataType="System.Int32"
                          description="Data format coming from HTTP Response. This is useful for example when you have OData service and you want to automatically consume all pages of data using odata.netUrl. Setting JsonFormat=Odata will automatically do it for you. This setting is only applicable if JSON is coming from HTTP WebRequest."
                          expressionType="Notify"
                          name="JsonFormat"
                          typeConverter="ZappySys.Json.JsonFormat">1</property>
                        <property
                          dataType="System.Boolean"
                          description="Enable custom proxy settings (If this is not set then system default proxy will be used. To disable proxy totally uncheck this option and check DoNotUseDefaultProxy option if available)"
                          expressionType="Notify"
                          name="UseProxy">false</property>
                        <property
                          dataType="System.String"
                          description="Web URL of Proxy server (including port  if necessary). [e.g. http://myproxyserver:8080/]"
                          expressionType="Notify"
                          name="ProxyUrl"></property>
                        <property
                          dataType="System.Boolean"
                          description="Enable passing userid and password to proxy server"
                          expressionType="Notify"
                          name="UseProxyCreds">false</property>
                        <property
                          dataType="System.String"
                          description="Proxy username"
                          expressionType="Notify"
                          name="ProxyUserName"></property>
                        <property
                          dataType="System.String"
                          description="Proxy password"
                          expressionType="Notify"
                          name="ProxyPassword"></property>
                        <property
                          dataType="System.String"
                          description="If Service response support pagination using some sort of next url attribute then specify which attribute name in JSON Response string which holds next url. If no attribute found or its null then component will stop fetching next resultset. Example: $.pagingInfo.nextUrl"
                          expressionType="Notify"
                          name="NextUrlAttribute"></property>
                        <property
                          dataType="System.String"
                          description="If Service response support pagination using some sort of prev/next url attribute then specify which previous link attribute name from JSON Response string which holds previous url."
                          expressionType="Notify"
                          name="PrevUrlAttribute"></property>
                        <property
                          dataType="System.String"
                          description="Specifies value for NextUrlAttribute or StopIndicatorAttribute which indicates last page to stop pagination. If you have specified StopIndicatorAttribute then you can use Regular expression rather than static value to indicate last page. To use regular expression value of this property must start with regex= prefix. Example : regex=FALSE|N  (assuming you set StopIndicatorAttribute to something like $.hasMore)"
                          expressionType="Notify"
                          name="NextUrlStopIndicator"></property>
                        <property
                          dataType="System.String"
                          description="Attribute name or expression for attribute which can be used as stop indicator (e.g. hasmore --or-- $.pagination.hasmore). If this value is blank then NextUrlAttribute is used"
                          expressionType="Notify"
                          name="StopIndicatorAttribute"></property>
                        <property
                          dataType="System.String"
                          description="If you want to include certain text (or parameters) at the end of Next url then specify this attribute (e.g. &amp;format=json). Another common usecase of this property is to supply pagination token to next Page URL. You can also use &lt;%nextlink%&gt; or  &lt;%nextlink_encoded%&gt; placeholder (e.g. &amp;cursor=&lt;%nextlink_encoded%&gt; )"
                          expressionType="Notify"
                          name="NextUrlSuffix"></property>
                        <property
                          dataType="System.Int32"
                          description="This property indicates total number of milliseconds you want to wait before sending next request. This option allows you to adjust how many API calls can be made within certain timeframe. If your API Service has no limit then set this option to zero"
                          expressionType="Notify"
                          name="NextUrlWait">0</property>
                        <property
                          dataType="System.Boolean"
                          description="If this option is true then component will continue without exception on 404 error (Url not found). This allows you to consume data gracefully."
                          expressionType="Notify"
                          name="ContinueOnUrlNotFoundError">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Continue when any type of exception occurs during http request"
                          expressionType="Notify"
                          name="ContineOnAnyError">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Continue on error when specified substring found in response"
                          expressionType="Notify"
                          name="ContineOnErrorForMessage">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Continue on error when specified status code returned from web server"
                          expressionType="Notify"
                          name="ContineOnErrorForStatusCode">false</property>
                        <property
                          dataType="System.Boolean"
                          description="When error occurs no data is returned. Use this option to get content eventhough error occurs. When this option is checked you can't use [continue on error when specific string found in response] option"
                          expressionType="Notify"
                          name="ConsumeResponseOnError">false</property>
                        <property
                          dataType="System.Int32"
                          description="Status code to match when error occurs and ContineOnErrorForStatusCode option is true. If Response status code matches to this code then task continues to run"
                          expressionType="Notify"
                          name="ErrorStatusCodeToMatch">404</property>
                        <property
                          dataType="System.String"
                          description="Error substring to match when error occurs and ContineOnErrorForMessage option is true. If Response status code matches to this code then task continues to run"
                          expressionType="Notify"
                          name="ErrorSubstringToMatch"></property>
                        <property
                          dataType="System.String"
                          description="Cookie Container can be used to maintain state between multiple web requests. Example: You can login to site like wordpress and then extract any private page content by simply passing authentication cookies using this variable."
                          expressionType="Notify"
                          name="CookieContainerVariable"></property>
                        <property
                          dataType="System.Int32"
                          description="Http request Timeout in seconds. Set this to 0 if you want to use system default value (i.e. 100 seconds)"
                          expressionType="Notify"
                          name="RequestTimeout">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies which security protocol is supported for HTTPS communication. Using this option you can enable legacy protocol or enforce to use latest version of security protocol (Note: TLS 1.2 is only supported in SSIS 2014 or Higher)."
                          expressionType="Notify"
                          name="SecurityProtocol"
                          typeConverter="ZappySys.PowerPack.Common.HttpsSecurityProtocolType">0</property>
                        <property
                          dataType="System.Boolean"
                          description="Enable support for gzip or deflate compression. When you check this option compressed response automatically de-compressed saving bandwidth. This option is only valid if web server supports compressed response stream. Check your API documentation for more information."
                          expressionType="Notify"
                          name="EnableCompressionSupport">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Ignore SSL certificate related errors. Example: if you getting SSL/TLS errors because of certificate expired or certificate is not from trusted authority or certificate is self-signed. By checking this option you will not get SSL/TLS error."
                          expressionType="Notify"
                          name="IgnoreCertificateErrors">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Allow unsecure ciphers/suites and curves for SSLS/TLS communication. Use this option to communicate with web servers which needs legacy / unsecured ciphers support. This option is only trigged when you change default SSL/TLS Version on advanced settings tab."
                          expressionType="Notify"
                          name="AllowUnsecureSuite">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Use connection to pass credentials for authentication (e.g. Use UserID/Password or Use OAuth Protocol for token based approach)"
                          expressionType="Notify"
                          name="UseConnection">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specified how you want to loop through multiple pages returned by REST API."
                          expressionType="Notify"
                          name="PagingMode"
                          typeConverter="ZappySys.Common.RestApiPagingMode">3</property>
                        <property
                          dataType="System.Boolean"
                          description="If you wish to pass extracted pagination token or current page number in the body of next request then set this option to true. You can use [$pagetoken$] and [$pagetoken$] placeholders anywhere in the Body where you wish to insert extracted Page token. You must set encoded token you can use &lt;%nextlink_encoded%&gt; inside SuffixForNextUrl Property. If you dont use SuffixForNextUrl then raw nextLink or Token will be inserted inside the body. If you dont specify [$pagetoken$] placeholder in the body then NextPage Token will be appended at the end. NextPage Token is extracted by filter expression specified using property NextUrlSuffix"
                          expressionType="Notify"
                          name="EnablePageTokenForBody">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this to true if you wish to specify different URL, Header, Body or Filter for first page and next page (i.e. Paginated response). Some APIs like Amazon MWS, NetSuite, Zuora) you may need to set this to true."
                          expressionType="Notify"
                          name="HasDifferentNextPageInfo">false</property>
                        <property
                          dataType="System.String"
                          description="When HasDifferentNextPageInfo=true you can set this property to indicate first page and next page. You can specify different URL, Header, Body or Filter for first page and next page (i.e. Paginated response). Use [$tag$] as placeholder anywhere in the URL, Header, Body or Filter and at runtime system will replace it with correct value (first page or next page value). Syntax to specify placeholder for first page vs next page is like a connectionstring url=FirstPageValue|NextPageValue;header=FirstPageValue|NextPageValue;body=FirstPageValue|NextPageValue;filter=FirstPageValue|NextPageValue; You can use one or more key/value pairs to make things dynamic (e.g. url, header, body or filter)  .For example if you have pagination in your API and First URL is http://abc.com/api/items/get and to get more records you have to call http://abc.com/api/items/getNext then you can use [$tag$] as placeholder in the URL http://abc.com/api/items/[$tag$] and specify this property with first page tag and next page tag as url=get|getNext  (Tags are separated using vertical bar). "
                          expressionType="Notify"
                          name="PagePlaceholders"></property>
                        <property
                          dataType="System.String"
                          description="Use this property to set request body fragment for first page. HasDifferentNextPageInfo must be set to true to use this property."
                          expressionType="Notify"
                          name="FirstPageBodyPart"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.String"
                          description="Use this property to set request body fragment for any request after first request. HasDifferentNextPageInfo must be set to true to use this property."
                          expressionType="Notify"
                          name="NextPageBodyPart"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.String"
                          description="Expression to extract Maximum pages to loop through. Some APIs don't stop pagination and keep returning last page data when you try to read data after last page. Specify expression (e.g. $.page_count ) to read total pages to loop through using this property."
                          expressionType="Notify"
                          name="PagingMaxPagesExpr">$.result.total/100</property>
                        <property
                          dataType="System.String"
                          description="e.g. Type page_num if URL looks like this =&gt; http://abc.com/?page_num=1&amp;sort=true  (page number via query string)&#xA;--or-- Type &lt;%page%&gt; if page number is inside URL path like this =&gt; http://abc.com/1/?sort=true  (e.g. replace page number in url with placeholder http://abc.com/&lt;%page%&gt;/?sort=true)&#xA;Page number will be incremented by one for next URL until last page is reached or [Max Page Number] is reached"
                          expressionType="Notify"
                          name="PageNumberAttributeNameInUrl">&lt;%page%&gt;</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum page number until which auto increment is allowed. Type zero for no limit. Next URL contains next page number (increment by one) until last page is detected or [Max Page Number] limit is reached."
                          expressionType="Notify"
                          name="MaxPageNumber">0</property>
                        <property
                          dataType="System.String"
                          description="Variable name which will hold starting page number. This is ignored if you useing parameter name from query string to indicate page number."
                          expressionType="Notify"
                          name="StartPageNumberVariable">User::UpsertedCount</property>
                        <property
                          dataType="System.Int32"
                          description="Page counter increment. By default next page is incremented by one if this value is zero. You can also enter negative number if you want to decrease page counter."
                          expressionType="Notify"
                          name="PageNumberIncrement">100</property>
                        <property
                          dataType="System.Int32"
                          description="Specified how you want detect last page."
                          expressionType="Notify"
                          name="PagingEndStrategy"
                          typeConverter="ZappySys.Common.UrlPagingEndDetectionStrategy">3</property>
                        <property
                          dataType="System.Boolean"
                          description="Condition result to compare to detect last page. Set this property to True if you want detect last page if condition is true else set this to False."
                          expressionType="Notify"
                          name="LastPageWhenConditionEqualsTo">true</property>
                        <property
                          dataType="System.Int32"
                          description="Minimum bytes expected from response."
                          expressionType="Notify"
                          name="ResponseMinBytes">0</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum bytes from response."
                          expressionType="Notify"
                          name="ResponseMaxBytes">3</property>
                        <property
                          dataType="System.String"
                          description="Expected error message sub string from response."
                          expressionType="Notify"
                          name="ResponseErrorString">not found</property>
                        <property
                          dataType="System.Int32"
                          description="Expected status code from response when page number you trying to access not found."
                          expressionType="Notify"
                          name="ResponseStatusCode">404</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum JSON records to fetch. Set this value to 0 for all records"
                          expressionType="Notify"
                          name="MaxRows">0</property>
                        <property
                          dataType="System.String"
                          description="Enter expression here to filter data.(Example:  $.Users[*].UserName ) This will fetch User names from users records"
                          expressionType="Notify"
                          name="Filter"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">$.result.rows[*]</property>
                        <property
                          dataType="System.Boolean"
                          description="Use this option to include parent properties (Non array) in the output along with Filtered Rows"
                          expressionType="Notify"
                          name="IncludeParentColumns">true</property>
                        <property
                          dataType="System.Boolean"
                          description="By default child and parent information is not included in the output if children not found for specified expression. For example if you want to extract all orders from all customers nodes then you can type $.Customers[*].Orders[*]. This will fetch all orders from all customers. By default customers records without orders wont be included in the output. If you want to include those customers where orders not found then check this option (Output null information for order attributes). This behavior is similar to LEFT OUTER JOIN in SQL (Left side is parent, right side is child). This option is ***resource intensive*** so only check if you really care about this behavior."
                          expressionType="Notify"
                          name="IncludeParentColumnsWhenChildMissing">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to true if you want to output parent columns which are array. By default any parent column which is an array is not included in output. See also FilterForParentColumnsWithArrayType property if you set this property"
                          expressionType="Notify"
                          name="IncludeParentColumnsWithArrayType">false</property>
                        <property
                          dataType="System.String"
                          description="Filter expression to extract value form parent"
                          expressionType="Notify"
                          name="FilterForParentColumnsWithArrayType"></property>
                        <property
                          dataType="System.String"
                          description="Prefix for parent column name. This option is only valid if you have set IncludeParentColumns=True"
                          expressionType="Notify"
                          name="ParentColumnPrefix">P_</property>
                        <property
                          dataType="System.Boolean"
                          description="Throw error if property name specified in filter expression is missing. By default it will ignore any missing property errors."
                          expressionType="Notify"
                          name="ThrowErrorIfPropertyMissing">false</property>
                        <property
                          dataType="System.Int32"
                          description="This property how many nested levels should be scanned to fetch various properties. 0=Scan all child levels."
                          expressionType="Notify"
                          name="MaxLevelsToScan">0</property>
                        <property
                          dataType="System.String"
                          description="List comma separated property names from JSON document which you want to exclude from output. Specify parent property name to exclude all child nodes."
                          expressionType="Notify"
                          name="ExcludedProperties"></property>
                        <property
                          dataType="System.String"
                          description="Property level separator used in generated property name (separator for outer properties - Above selected filter node). Use this if default separator is producing duplicate property name which is conflicting with existing name."
                          expressionType="Notify"
                          name="LevelSeparator">_</property>
                        <property
                          dataType="System.Boolean"
                          description="Enables deep array flattening for selected filtered hierarchy. When you turn on this property it will flatten each property of each array item and expose as column (e.g. If you have Filter set as $.customers[*] and for each customer you have an array of Addresses then you may see output columns like Addresses.1.City, Addresses.1.State, Addresses.2.City, Addresses.2.State .... Addresses.N.City, Addresses.N.State). You can control how many array items you want to flatten by setting MaxArrayItemsToFlatten property."
                          expressionType="Notify"
                          name="EnableArrayFlattening">false</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum number of array items to flatten. inner array flattening. Adjust this property to control how many columns being generated. This option is ignored if you set EnableArrayFlattening=false"
                          expressionType="Notify"
                          name="MaxArrayItemsToFlatten">10</property>
                        <property
                          dataType="System.Int32"
                          description="Compression format for source file (e.g. gzip, zip)"
                          expressionType="Notify"
                          name="FileCompressionType"
                          typeConverter="ZappySys.Common.FileCompressionType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Array Transformation you want to apply. Useful for case when you have 2-Dimensional arrays with rows/columns in separate arrays."
                          expressionType="Notify"
                          name="ArrayTransformationType"
                          typeConverter="ZappySys.Json.ArrayTransformType">0</property>
                        <property
                          dataType="System.String"
                          description="Filter expression to use to extract column names for array transformation."
                          expressionType="Notify"
                          name="ArrayTransColumnNameFilter">$.result.rows[*]</property>
                        <property
                          dataType="System.String"
                          description="Filter expression for row values (Not applicable for simple array transformation)."
                          expressionType="Notify"
                          name="ArrayTransRowValueFilter">$.result.rows[*]</property>
                        <property
                          dataType="System.Boolean"
                          description="When you have 2D array but don't have column list specified in a separate array then use this option (e.g. { arr: [[10,11],[21,22]] } )."
                          expressionType="Notify"
                          name="ArrayTransEnableCustomColumns">true</property>
                        <property
                          dataType="System.String"
                          description="When you have 2D array but don't have column list specified in a separate array then use specify column names here. Use comma separated list (e.g col1,col2,col3 ). Column name Order must match value order."
                          expressionType="Notify"
                          name="ArrayTransCustomColumns">MetricID</property>
                        <property
                          dataType="System.String"
                          description="Specifies how custom date formatted strings are parsed when reading JSON."
                          expressionType="Notify"
                          name="DateFormatString"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies how date formatted strings, e.g. Date(1198908717056) and 2012-03-21T05:40Z, are parsed when reading JSON."
                          expressionType="Notify"
                          name="DateParseHandling"
                          typeConverter="ZappySys.Common.DateParseHandling">1</property>
                        <property
                          dataType="System.Boolean"
                          description="Output as raw JSON document rather than parsing individual fields. This option is helpful if you have documents stored in a file and you want to pass them downstream as raw JSON string rather than parsing into columns."
                          expressionType="Notify"
                          name="OutputRawDocument">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Indent JSON output so its easy to read."
                          expressionType="Notify"
                          name="IndentOutput">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to true if you want to output FilePath. This option is ignored when you consume DirectValue or data from Url rather than local files. Output column name will be __FilePath"
                          expressionType="Notify"
                          name="OutputFilePath">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to true if you want to output FileName. This option is ignored when you consume DirectValue or data from Url rather than local files. Output column name will be __FileName"
                          expressionType="Notify"
                          name="OutputFileName">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to true if you want to move processed file to archive folder."
                          expressionType="Notify"
                          name="EnableArchiveFile">false</property>
                        <property
                          dataType="System.String"
                          description="Folder path where you want to move processed file."
                          expressionType="Notify"
                          name="ArchiveFolderPath"></property>
                        <property
                          dataType="System.Boolean"
                          description="Folder path where you want to move processed file."
                          expressionType="Notify"
                          name="OverwriteFileInArchiveFolder">false</property>
                        <property
                          dataType="System.String"
                          description="File naming convention for archived file. By default it will same name as original source file processed. But you can control naming format using {%name%} and {%ext%} placeholders. e.g. {%name%}_processed{%ext%} or {%name%}{%ext%}.{{System::ContainerStartTime,yyyyMMdd_HHmmss_fff}}"
                          expressionType="Notify"
                          name="ArchiveFileNamingConvention"></property>
                        <property
                          dataType="System.Boolean"
                          description="When this property is true then Column is converted to Row. Pivoted names will appear under  Pivot_Name column and values will appear under Pivot_Value field."
                          expressionType="Notify"
                          name="EnablePivot">false</property>
                        <property
                          dataType="System.Int32"
                          description="Metadata scan mode controls how data type and length is determined. By default few records scanned to determine datatype/length. Changing ScanMode affects length/datatype accuracy."
                          expressionType="Notify"
                          name="MetaDataScanMode"
                          typeConverter="ZappySys.Common.Data.MetaDataScanMode">4</property>
                        <property
                          dataType="System.Int32"
                          description="Length for all string column. This option is only valid for MetaDataScanMode=Custom"
                          expressionType="Notify"
                          name="MetaDataCustomLength">1000</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.JsonSource</property>
                        <property
                          dataType="System.Int32"
                          description="Encoding of source file"
                          expressionType="Notify"
                          name="Encoding"
                          typeConverter="ZappySys.Common.EncodingType">0</property>
                        <property
                          dataType="System.String"
                          description="Character set for text (e.g. utf-8 )"
                          expressionType="Notify"
                          name="CharacterSet"></property>
                        <property
                          dataType="System.Boolean"
                          description="By default process stops with error if specified local file is not found. Set this property to true if you wish to continue rather than throwing file not found error."
                          expressionType="Notify"
                          name="ContinueOnFileNotFoundError">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Check this option if you want to upload file(s) (i.e. POST RAW file data) or send data using Multi-Part encoding method (i.e. Content-Type: multipart/form-data). Multi-Part request allows you to mix key/value and upload files in same request. On the other hand raw upload allows only single file upload (without any key/value) &#xA;&#xA;==== Raw Upload (Content-Type: application/octet-stream) =====   &#xA;To upload single file in raw mode check this option and specify full file path starting with @ sign in the Body (e.g.  @c:\data\myfile.zip ) &#xA;&#xA;==== Form-Data / Multipart Upload (Content-Type: multipart/form-data) =====   &#xA;To treat your Request data as multi part fields you must specify key/value pairs separated by new lines into RequestData field (i.e. Body). Each key value pair is entered on new-line and key/value are separated using equal sign (=). Preceding and trailing spaces are ignored also blank lines are ignored. &#xA;If field value has some any special character(s) then use escape sequence (e.g. For NewLine: \r\n, For Tab: \t, For at (@): \@). When value of any field starts with at sign (@) its automatically treated as File you want to upload. By default file content type is determined based on extension however you can supply content type manually for any field using this way [ fieldname.Content-Type=some content type ]. In below example we have supplied Content-Type for file2 and SomeField1, all other fields are using default content-type.&#xA;See below Example of uploading multiple files along with additional fields.&#xA;&#xA;file1=@c:\data\Myfile1.txt&#xA;file2=@c:\data\Myfile2.json&#xA;file2.Content-Type=application/json&#xA;SomeField1=aaaaaaa&#xA;SomeField1.Content-Type=text/plain&#xA;SomeField2=12345&#xA;SomeFieldWithNewLineAndTab=This is line1\r\nThis is line2\r\nThis is \ttab \ttab \ttab&#xA;SomeFieldStartingWithAtSign=\@MyTwitterHandle&#xA;"
                          expressionType="Notify"
                          name="IsMultiPartUpload">false</property>
                        <property
                          dataType="System.String"
                          description="Expression to extract Maximum records to loop through. Some APIs don't stop pagination and keep returning last page data when you try to read data after last page. Specify expression (e.g. $.total_rows ) to read total pages to loop through using this property. This setting is ignored if you set PagingMaxPagesExpr."
                          expressionType="Notify"
                          name="PagingMaxRowsExpr"></property>
                        <property
                          dataType="System.String"
                          description="When you enable PagingMaxRowsExpr (end pagination based on MaxRowCount) then you need to count records coming in each response. This expression extract all rows found under specified expression (e.g. $.orders[*] if all records found under orders node)."
                          expressionType="Notify"
                          name="PagingMaxRowsDataPathExpr"></property>
                        <property
                          dataType="System.Boolean"
                          description="When this option is checked, system allows to parse large number (Higher than Int64) in JSON document (i.e. { id: 76000009353950433247780 } ). If you do not turn on this option then it may throw error if large number is encountered. This option is SLOW because it has to perform additional checks in order to avoid Large number overflow error so do not turn on unless you getting Large number error."
                          expressionType="Notify"
                          name="EnableBigNumberHandling">false</property>
                      </properties>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Listing Portal Upload\Search Listings Portal Upload.Outputs[JsonSourceOutput]"
                          errorOrTruncationOperation="Error"
                          errorRowDisposition="FailComponent"
                          name="JsonSourceOutput"
                          truncationRowDisposition="FailComponent">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing Portal Upload\Search Listings Portal Upload.Outputs[JsonSourceOutput].Columns[__DOCUMENT__]"
                              dataType="nText"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Listing Portal Upload\Search Listings Portal Upload.Outputs[JsonSourceOutput].ExternalColumns[__DOCUMENT__]"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing Portal Upload\Search Listings Portal Upload.Outputs[JsonSourceOutput].Columns[__DOCUMENT__]"
                              name="__DOCUMENT__" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing Portal Upload\Search Listings Portal Upload.Outputs[JsonSourceOutput].Columns[__FileName]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Listing Portal Upload\Search Listings Portal Upload.Outputs[JsonSourceOutput].ExternalColumns[__FileName]"
                              length="600"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing Portal Upload\Search Listings Portal Upload.Outputs[JsonSourceOutput].Columns[__FileName]"
                              name="__FileName" />
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing Portal Upload\Search Listings Portal Upload.Outputs[JsonSourceOutput].ExternalColumns[__DOCUMENT__]"
                              dataType="nText"
                              name="__DOCUMENT__" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing Portal Upload\Search Listings Portal Upload.Outputs[JsonSourceOutput].ExternalColumns[__FileName]"
                              dataType="wstr"
                              length="600"
                              name="__FileName" />
                          </externalMetadataColumns>
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Listing Portal Upload\Search Listings Portal Upload.Outputs[JsonSource Error Output]"
                          isErrorOut="true"
                          name="JsonSource Error Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing Portal Upload\Search Listings Portal Upload.Outputs[JsonSource Error Output].Columns[__DOCUMENT__]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing Portal Upload\Search Listings Portal Upload.Outputs[JsonSource Error Output].Columns[__DOCUMENT__]"
                              name="__DOCUMENT__" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing Portal Upload\Search Listings Portal Upload.Outputs[JsonSource Error Output].Columns[__FileName]"
                              dataType="wstr"
                              length="600"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing Portal Upload\Search Listings Portal Upload.Outputs[JsonSource Error Output].Columns[__FileName]"
                              name="__FileName" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing Portal Upload\Search Listings Portal Upload.Outputs[JsonSource Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing Portal Upload\Search Listings Portal Upload.Outputs[JsonSource Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing Portal Upload\Search Listings Portal Upload.Outputs[JsonSource Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing Portal Upload\Search Listings Portal Upload.Outputs[JsonSource Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing Portal Upload\Search Listings Portal Upload.Outputs[JsonSource Error Output].Columns[ErrorColumnName]"
                              codePage="1252"
                              dataType="str"
                              length="128"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing Portal Upload\Search Listings Portal Upload.Outputs[JsonSource Error Output].Columns[ErrorColumnName]"
                              name="ErrorColumnName" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing Portal Upload\Search Listings Portal Upload.Outputs[JsonSource Error Output].Columns[ErrorMessage]"
                              dataType="wstr"
                              length="1024"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing Portal Upload\Search Listings Portal Upload.Outputs[JsonSource Error Output].Columns[ErrorMessage]"
                              name="ErrorMessage" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Listing Portal Upload\Upsert ListingPortalUpload"
                      componentClassID="Microsoft.OLEDBCommand"
                      contactInfo="OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
                      description="Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time."
                      name="Upsert ListingPortalUpload"
                      usesDispositions="true"
                      version="2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">0</property>
                        <property
                          dataType="System.String"
                          description="The SQL command to be executed."
                          expressionType="Notify"
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">exec [UpsertListingPortalUpload] ?,?,?</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Iterate Offices\Sequence Container\Listing Portal Upload\Upsert ListingPortalUpload.Connections[OleDbConnection]"
                          connectionManagerID="Package.ConnectionManagers[colsqlbi01v.Entities]"
                          connectionManagerRefId="Package.ConnectionManagers[colsqlbi01v.Entities]"
                          description="The OLE DB runtime connection used to access the database."
                          name="OleDbConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Listing Portal Upload\Upsert ListingPortalUpload.Inputs[OLE DB Command Input]"
                          errorOrTruncationOperation="Command Execution"
                          errorRowDisposition="FailComponent"
                          hasSideEffects="true"
                          name="OLE DB Command Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing Portal Upload\Upsert ListingPortalUpload.Inputs[OLE DB Command Input].Columns[Origin]"
                              cachedDataType="i4"
                              cachedName="Origin"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Listing Portal Upload\Upsert ListingPortalUpload.Inputs[OLE DB Command Input].ExternalColumns[@Origin]"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing Portal Upload\Add accountid and origin.Outputs[Derived Column Output].Columns[Origin]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing Portal Upload\Upsert ListingPortalUpload.Inputs[OLE DB Command Input].Columns[AccountId]"
                              cachedDataType="i4"
                              cachedName="AccountId"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Listing Portal Upload\Upsert ListingPortalUpload.Inputs[OLE DB Command Input].ExternalColumns[@accountid]"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing Portal Upload\Add accountid and origin.Outputs[Derived Column Output].Columns[AccountId]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing Portal Upload\Upsert ListingPortalUpload.Inputs[OLE DB Command Input].Columns[__DOCUMENT__]"
                              cachedDataType="nText"
                              cachedName="__DOCUMENT__"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Listing Portal Upload\Upsert ListingPortalUpload.Inputs[OLE DB Command Input].ExternalColumns[@body]"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing Portal Upload\Search Listings Portal Upload.Outputs[JsonSourceOutput].Columns[__DOCUMENT__]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing Portal Upload\Upsert ListingPortalUpload.Inputs[OLE DB Command Input].ExternalColumns[@Origin]"
                              dataType="i2"
                              name="@Origin">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                                  name="DBParamInfoFlags">81</property>
                              </properties>
                            </externalMetadataColumn>
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing Portal Upload\Upsert ListingPortalUpload.Inputs[OLE DB Command Input].ExternalColumns[@body]"
                              dataType="nText"
                              name="@body">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                                  name="DBParamInfoFlags">193</property>
                              </properties>
                            </externalMetadataColumn>
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing Portal Upload\Upsert ListingPortalUpload.Inputs[OLE DB Command Input].ExternalColumns[@accountid]"
                              dataType="i4"
                              name="@accountid">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                                  name="DBParamInfoFlags">81</property>
                              </properties>
                            </externalMetadataColumn>
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Listing Portal Upload\Upsert ListingPortalUpload.Outputs[OLE DB Command Output]"
                          exclusionGroup="1"
                          name="OLE DB Command Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Listing Portal Upload\Upsert ListingPortalUpload.Inputs[OLE DB Command Input]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Listing Portal Upload\Upsert ListingPortalUpload.Outputs[OLE DB Command Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="OLE DB Command Error Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Listing Portal Upload\Upsert ListingPortalUpload.Inputs[OLE DB Command Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing Portal Upload\Upsert ListingPortalUpload.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing Portal Upload\Upsert ListingPortalUpload.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing Portal Upload\Upsert ListingPortalUpload.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing Portal Upload\Upsert ListingPortalUpload.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                  </components>
                  <paths>
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Listing Portal Upload.Paths[Derived Column Output]"
                      endId="Package\Iterate Offices\Sequence Container\Listing Portal Upload\Upsert ListingPortalUpload.Inputs[OLE DB Command Input]"
                      name="Derived Column Output"
                      startId="Package\Iterate Offices\Sequence Container\Listing Portal Upload\Add accountid and origin.Outputs[Derived Column Output]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Listing Portal Upload.Paths[JsonSourceOutput]"
                      endId="Package\Iterate Offices\Sequence Container\Listing Portal Upload\Add accountid and origin.Inputs[Derived Column Input]"
                      name="JsonSourceOutput"
                      startId="Package\Iterate Offices\Sequence Container\Listing Portal Upload\Search Listings Portal Upload.Outputs[JsonSourceOutput]" />
                  </paths>
                </pipeline>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Iterate Offices\Sequence Container\Match Profile"
              DTS:CreationName="Microsoft.Pipeline"
              DTS:Description="Data Flow Task"
              DTS:DTSID="{DC92A947-DD42-4670-844C-D7F038735BA6}"
              DTS:ExecutableType="Microsoft.Pipeline"
              DTS:LocaleID="-1"
              DTS:ObjectName="Match Profile"
              DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:ObjectData>
                <pipeline
                  version="1">
                  <components>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Match Profile\Add accountid and origin"
                      componentClassID="Microsoft.DerivedColumn"
                      contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                      name="Add accountid and origin"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Match Profile\Add accountid and origin.Inputs[Derived Column Input]"
                          description="Input to the Derived Column Transformation"
                          name="Derived Column Input">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Match Profile\Add accountid and origin.Outputs[Derived Column Output]"
                          description="Default Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          name="Derived Column Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Match Profile\Add accountid and origin.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Add accountid and origin.Outputs[Derived Column Output].Columns[AccountId]"
                              dataType="i4"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Iterate Offices\Sequence Container\Match Profile\Add accountid and origin.Outputs[Derived Column Output].Columns[AccountId]"
                              name="AccountId"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">@[User::RexAccountID]</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">@[User::RexAccountID]</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Add accountid and origin.Outputs[Derived Column Output].Columns[Origin]"
                              dataType="i4"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Iterate Offices\Sequence Container\Match Profile\Add accountid and origin.Outputs[Derived Column Output].Columns[Origin]"
                              name="Origin"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">2</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">2</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Match Profile\Add accountid and origin.Outputs[Derived Column Error Output]"
                          description="Error Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Derived Column Error Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Match Profile\Add accountid and origin.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Add accountid and origin.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Match Profile\Add accountid and origin.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Add accountid and origin.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Match Profile\Add accountid and origin.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Match Profile\API Sort"
                      componentClassID="Microsoft.Sort"
                      contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
                      name="API Sort"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                          name="EliminateDuplicates">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the maximum number of threads to use for sorting."
                          expressionType="Notify"
                          name="MaximumThreads">-1</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Match Profile\API Sort.Inputs[Sort Input]"
                          name="Sort Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\API Sort.Inputs[Sort Input].Columns[etag]"
                              cachedDataType="wstr"
                              cachedLength="56"
                              cachedName="etag"
                              lineageId="Package\Iterate Offices\Sequence Container\Match Profile\Search MP.Outputs[JsonSourceOutput].Columns[etag]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\API Sort.Inputs[Sort Input].Columns[id]"
                              cachedDataType="i4"
                              cachedName="id"
                              lineageId="Package\Iterate Offices\Sequence Container\Match Profile\Search MP.Outputs[JsonSourceOutput].Columns[id]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">1</property>
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Match Profile\API Sort.Outputs[Sort Output]"
                          isSorted="true"
                          name="Sort Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\API Sort.Outputs[Sort Output].Columns[etag]"
                              dataType="wstr"
                              length="56"
                              lineageId="Package\Iterate Offices\Sequence Container\Match Profile\API Sort.Outputs[Sort Output].Columns[etag]"
                              name="etag">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Iterate Offices\Sequence Container\Match Profile\Search MP.Outputs[JsonSourceOutput].Columns[etag]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\API Sort.Outputs[Sort Output].Columns[id]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Match Profile\API Sort.Outputs[Sort Output].Columns[id]"
                              name="id"
                              sortKeyPosition="1">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Iterate Offices\Sequence Container\Match Profile\Search MP.Outputs[JsonSourceOutput].Columns[id]}</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Match Profile\Existing MP from SQL"
                      componentClassID="Microsoft.OLEDBSource"
                      contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                      description="OLE DB Source"
                      name="Existing MP from SQL"
                      usesDispositions="true"
                      version="7">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">0</property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the database object used to open a rowset."
                          name="OpenRowset">[dbo].[vwContacts]</property>
                        <property
                          dataType="System.String"
                          description="Specifies the variable that contains the name of the database object used to open a rowset."
                          name="OpenRowsetVariable"></property>
                        <property
                          dataType="System.String"
                          description="The SQL command to be executed."
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">SELECT [Id], 
       [etag] as etagmp, 
       [AccountId]
FROM [Entities].[dbo].[vwMatchProfileBase] with (NOLOCK)
WHERE [AccountId] = ?</property>
                        <property
                          dataType="System.String"
                          description="The variable that contains the SQL command to be executed."
                          name="SqlCommandVariable"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Boolean"
                          description="Forces the use of the DefaultCodePage property value when describing character data."
                          name="AlwaysUseDefaultCodePage">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the mode used to access the database."
                          name="AccessMode"
                          typeConverter="AccessMode">2</property>
                        <property
                          dataType="System.String"
                          description="The mappings between the parameters in the SQL command and variables."
                          name="ParameterMapping">"Parameter0:Input",{EE81ACF9-9058-4481-A346-732989159AA5};</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Iterate Offices\Sequence Container\Match Profile\Existing MP from SQL.Connections[OleDbConnection]"
                          connectionManagerID="Package.ConnectionManagers[colsqlbi01v.Entities]"
                          connectionManagerRefId="Package.ConnectionManagers[colsqlbi01v.Entities]"
                          description="The OLE DB runtime connection used to access the database."
                          name="OleDbConnection" />
                      </connections>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Match Profile\Existing MP from SQL.Outputs[OLE DB Source Output]"
                          name="OLE DB Source Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Existing MP from SQL.Outputs[OLE DB Source Output].Columns[Id]"
                              dataType="i4"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Match Profile\Existing MP from SQL.Outputs[OLE DB Source Output].ExternalColumns[Id]"
                              lineageId="Package\Iterate Offices\Sequence Container\Match Profile\Existing MP from SQL.Outputs[OLE DB Source Output].Columns[Id]"
                              name="Id"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Existing MP from SQL.Outputs[OLE DB Source Output].Columns[AccountId]"
                              dataType="i2"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Match Profile\Existing MP from SQL.Outputs[OLE DB Source Output].ExternalColumns[AccountId]"
                              lineageId="Package\Iterate Offices\Sequence Container\Match Profile\Existing MP from SQL.Outputs[OLE DB Source Output].Columns[AccountId]"
                              name="AccountId"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Existing MP from SQL.Outputs[OLE DB Source Output].Columns[etagmp]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Match Profile\Existing MP from SQL.Outputs[OLE DB Source Output].ExternalColumns[etagmp]"
                              length="250"
                              lineageId="Package\Iterate Offices\Sequence Container\Match Profile\Existing MP from SQL.Outputs[OLE DB Source Output].Columns[etagmp]"
                              name="etagmp"
                              truncationRowDisposition="FailComponent" />
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Existing MP from SQL.Outputs[OLE DB Source Output].ExternalColumns[Id]"
                              dataType="i4"
                              name="Id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Existing MP from SQL.Outputs[OLE DB Source Output].ExternalColumns[AccountId]"
                              codePage="1252"
                              dataType="str"
                              length="4"
                              name="AccountId" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Existing MP from SQL.Outputs[OLE DB Source Output].ExternalColumns[etagmp]"
                              dataType="wstr"
                              length="250"
                              name="etagmp" />
                          </externalMetadataColumns>
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Match Profile\Existing MP from SQL.Outputs[OLE DB Source Error Output]"
                          isErrorOut="true"
                          name="OLE DB Source Error Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Existing MP from SQL.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Match Profile\Existing MP from SQL.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Existing MP from SQL.Outputs[OLE DB Source Error Output].Columns[etagmp]"
                              dataType="wstr"
                              length="250"
                              lineageId="Package\Iterate Offices\Sequence Container\Match Profile\Existing MP from SQL.Outputs[OLE DB Source Error Output].Columns[etagmp]"
                              name="etagmp" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Existing MP from SQL.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Match Profile\Existing MP from SQL.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Existing MP from SQL.Outputs[OLE DB Source Error Output].Columns[Id]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Match Profile\Existing MP from SQL.Outputs[OLE DB Source Error Output].Columns[Id]"
                              name="Id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Existing MP from SQL.Outputs[OLE DB Source Error Output].Columns[AccountId]"
                              codePage="1252"
                              dataType="str"
                              length="4"
                              lineageId="Package\Iterate Offices\Sequence Container\Match Profile\Existing MP from SQL.Outputs[OLE DB Source Error Output].Columns[AccountId]"
                              name="AccountId" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Match Profile\Insert or Ignore"
                      componentClassID="Microsoft.ConditionalSplit"
                      contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
                      name="Insert or Ignore"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Match Profile\Insert or Ignore.Inputs[Conditional Split Input]"
                          description="Input to the Conditional Split Transformation"
                          name="Conditional Split Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Insert or Ignore.Inputs[Conditional Split Input].Columns[etag]"
                              cachedDataType="wstr"
                              cachedLength="68"
                              cachedName="etag"
                              lineageId="Package\Iterate Offices\Sequence Container\Match Profile\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etag]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Insert or Ignore.Inputs[Conditional Split Input].Columns[etagmp]"
                              cachedDataType="wstr"
                              cachedLength="250"
                              cachedName="etagmp"
                              lineageId="Package\Iterate Offices\Sequence Container\Match Profile\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etagmp]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Match Profile\Insert or Ignore.Outputs[upsert]"
                          description="Output 1 of the Conditional Split Transformation"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          exclusionGroup="1"
                          name="upsert"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Match Profile\Insert or Ignore.Inputs[Conditional Split Input]"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                              name="Expression">[ISNULL](#{Package\Iterate Offices\Sequence Container\Match Profile\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etagmp]}) || (#{Package\Iterate Offices\Sequence Container\Match Profile\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etagmp]}) != #{Package\Iterate Offices\Sequence Container\Match Profile\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etag]}</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the friendly version of the expression. This expression version uses column names."
                              expressionType="Notify"
                              name="FriendlyExpression">ISNULL(etagmp) || (etagmp) != etag</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                              name="EvaluationOrder">0</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Match Profile\Insert or Ignore.Outputs[ignore]"
                          description="Output 2 of the Conditional Split Transformation"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          exclusionGroup="1"
                          name="ignore"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Match Profile\Insert or Ignore.Inputs[Conditional Split Input]"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                              name="Expression">![ISNULL](#{Package\Iterate Offices\Sequence Container\Match Profile\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etagmp]})</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the friendly version of the expression. This expression version uses column names."
                              expressionType="Notify"
                              name="FriendlyExpression">!ISNULL(etagmp)</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                              name="EvaluationOrder">1</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Match Profile\Insert or Ignore.Outputs[Conditional Split Default Output]"
                          description="Default Output of the Conditional Split Transformation"
                          exclusionGroup="1"
                          name="Conditional Split Default Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Match Profile\Insert or Ignore.Inputs[Conditional Split Input]">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              name="IsDefaultOut">true</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Match Profile\Insert or Ignore.Outputs[Conditional Split Error Output]"
                          description="Error Output of the Conditional Split Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Conditional Split Error Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Match Profile\Insert or Ignore.Inputs[Conditional Split Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Insert or Ignore.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Match Profile\Insert or Ignore.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Insert or Ignore.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Match Profile\Insert or Ignore.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Match Profile\Merge Join To Find Those to Insert"
                      componentClassID="Microsoft.MergeJoin"
                      contactInfo="Merge Join;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Combine two sorted data flows into one using the FULL, LEFT, or INNER join. We recommend this transformation when data flows can be sorted at their sources."
                      name="Merge Join To Find Those to Insert"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of join to perform."
                          name="JoinType"
                          typeConverter="JoinType">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the number of columns in the ordering key."
                          name="NumKeyColumns">1</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the null values are treated as equal values."
                          name="TreatNullsAsEqual">true</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates the requested maximum buffers per input before blocking."
                          name="MaxBuffersPerInput">5</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Match Profile\Merge Join To Find Those to Insert.Inputs[Merge Join Left Input]"
                          hasSideEffects="true"
                          name="Merge Join Left Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Merge Join To Find Those to Insert.Inputs[Merge Join Left Input].Columns[etag]"
                              cachedDataType="wstr"
                              cachedLength="56"
                              cachedName="etag"
                              lineageId="Package\Iterate Offices\Sequence Container\Match Profile\API Sort.Outputs[Sort Output].Columns[etag]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Merge Join To Find Those to Insert.Inputs[Merge Join Left Input].Columns[id]"
                              cachedDataType="i4"
                              cachedName="id"
                              cachedSortKeyPosition="1"
                              lineageId="Package\Iterate Offices\Sequence Container\Match Profile\API Sort.Outputs[Sort Output].Columns[id]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Match Profile\Merge Join To Find Those to Insert.Inputs[Merge Join Right Input]"
                          hasSideEffects="true"
                          name="Merge Join Right Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Merge Join To Find Those to Insert.Inputs[Merge Join Right Input].Columns[Id]"
                              cachedDataType="i4"
                              cachedName="Id"
                              cachedSortKeyPosition="1"
                              lineageId="Package\Iterate Offices\Sequence Container\Match Profile\SQL Sort.Outputs[Sort Output].Columns[Id]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Merge Join To Find Those to Insert.Inputs[Merge Join Right Input].Columns[etagmp]"
                              cachedDataType="wstr"
                              cachedLength="250"
                              cachedName="etagmp"
                              lineageId="Package\Iterate Offices\Sequence Container\Match Profile\SQL Sort.Outputs[Sort Output].Columns[etagmp]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Match Profile\Merge Join To Find Those to Insert.Outputs[Merge Join Output]"
                          isSorted="true"
                          name="Merge Join Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etag]"
                              dataType="wstr"
                              length="68"
                              lineageId="Package\Iterate Offices\Sequence Container\Match Profile\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etag]"
                              name="etag">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Iterate Offices\Sequence Container\Match Profile\Merge Join To Find Those to Insert.Inputs[Merge Join Left Input].Columns[etag]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[id]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Match Profile\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[id]"
                              name="id"
                              sortKeyPosition="1">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Iterate Offices\Sequence Container\Match Profile\Merge Join To Find Those to Insert.Inputs[Merge Join Left Input].Columns[id]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etagmp]"
                              dataType="wstr"
                              length="250"
                              lineageId="Package\Iterate Offices\Sequence Container\Match Profile\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etagmp]"
                              name="etagmp">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Iterate Offices\Sequence Container\Match Profile\Merge Join To Find Those to Insert.Inputs[Merge Join Right Input].Columns[etagmp]}</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Match Profile\Multicast"
                      componentClassID="Microsoft.Multicast"
                      contactInfo="Multicast;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Distributes every input row to every row in one or more outputs. For example, branch your data flow to make a copy of data so that some values can be masked before sharing with external partners."
                      name="Multicast">
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Match Profile\Multicast.Inputs[Multicast Input 1]"
                          name="Multicast Input 1">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Match Profile\Multicast.Outputs[Multicast Output 1]"
                          deleteOutputOnPathDetached="true"
                          name="Multicast Output 1"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Match Profile\Multicast.Inputs[Multicast Input 1]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Match Profile\Multicast.Outputs[Multicast Output 3]"
                          dangling="true"
                          deleteOutputOnPathDetached="true"
                          name="Multicast Output 3"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Match Profile\Multicast.Inputs[Multicast Input 1]">
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Match Profile\Read details (throttled)"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Web API Destination; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="The Web API destination can be used to send data to Web API URL (e.g. Submit or POST data to REST API/SOAP or other HTTP/HTTPS endpoints)"
                      name="Read details (throttled)"
                      usesDispositions="true"
                      version="5">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.String"
                          description="API URL you want to access"
                          expressionType="Notify"
                          name="HttpRequestUrl">{{User::RexAPIWebURLv1}}rex/batch-requests/execute</property>
                        <property
                          dataType="System.String"
                          description="Http Web Request Method (e.g. POST, GET, PUT, LIST, DELETE...). Refer your API documentation if you are not sure which method you have to use."
                          expressionType="Notify"
                          name="HttpRequestMethod">POST</property>
                        <property
                          dataType="System.String"
                          description="Set this if you want to set custom Http headers. You may use variable anywhere in the header value using syntax {{User::YourVarName}}. Syntax of Header key value pair is : &amp;lt;request&amp;gt;&amp;lt;header&amp;gt;&amp;lt;name&amp;gt;x-myheader-1&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;AAA&amp;lt;/value&amp;gt;&amp;lt;/header&amp;gt; &amp;lt;header&amp;gt;&amp;lt;name&amp;gt;x-myheader-2&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;BBB&amp;lt;/value&amp;gt;&amp;lt;/header&amp;gt;&amp;lt;/request&amp;gt;"
                          expressionType="Notify"
                          name="HttpHeaders"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">&lt;request&gt;&lt;header&gt;&lt;name&gt;Accept&lt;/name&gt;&lt;value&gt;*/*&lt;/value&gt;&lt;/header&gt;&lt;header&gt;&lt;name&gt;Cache-Control&lt;/name&gt;&lt;value&gt;no-cache&lt;/value&gt;&lt;/header&gt;&lt;header&gt;&lt;name&gt;X-App-Identifier&lt;/name&gt;&lt;value&gt;client:spicerhaart:{{System::PackageName}}:{{System::TaskName}}&lt;/value&gt;&lt;/header&gt;&lt;header&gt;&lt;name&gt;Authorization&lt;/name&gt;&lt;value&gt;Bearer {{User::RexToken}}&lt;/value&gt;&lt;/header&gt;&lt;/request&gt;</property>
                        <property
                          dataType="System.String"
                          description="User defined data you wish to send along with your HTTP Request (e.g. Upload file data, Form POST data). Usually you have to set content-type of your data but if you select RequestMethod=POST then system will automatically set content-type=application/x-www-form-urlencoded."
                          expressionType="Notify"
                          name="HttpRequestData"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies content type for data you wish to POST. If you select Default option then system default content type will be used (i.e. application/x-www-form-urlencoded). If you specify Content-Type header along with this option then header value takes precedence."
                          expressionType="Notify"
                          name="HttpRequestContentType"
                          typeConverter="ZappySys.Common.Web.HttpRequestContentType">2</property>
                        <property
                          dataType="System.Boolean"
                          description="If this option is true then component will continue without exception on 404 error (Url not found). This allows you to consume data gracefully."
                          expressionType="Notify"
                          name="ContinueOnUrlNotFoundError">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Ignore SSL certificate related errors. Example: if you getting SSL/TLS errors because of certificate expired or certificate is not from trusted authority or certificate is self-signed. By checking this option you will not get SSL/TLS error."
                          expressionType="Notify"
                          name="IgnoreCertificateErrors">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Allow unsecure ciphers/suites and curves for SSLS/TLS communication. Use this option to communicate with web servers which needs legacy / unsecured ciphers support. This option is only trigged when you change default SSL/TLS Version on advanced settings tab."
                          expressionType="Notify"
                          name="AllowUnsecureSuite">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Enable support for gzip or deflate compression. When you check this option compressed response automatically de-compressed saving bandwidth. This option is only valid if web server supports compressed response stream. Check your API documentation for more information."
                          expressionType="Notify"
                          name="EnableCompressionSupport">true</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies which security protocol is supported for HTTPS communication. Using this option you can enable legacy protocol or enforce to use latest version of security protocol (Note: TLS 1.2 is only supported in SSIS 2014 or Higher)."
                          expressionType="Notify"
                          name="SecurityProtocol"
                          typeConverter="ZappySys.PowerPack.Common.HttpsSecurityProtocolType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Wait time in milliseconds (Pause after each request). 0=No wait. Use this delay time if your API has limit on how many requests you can make in certain time frame."
                          expressionType="Notify"
                          name="WaitTime">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you redirect error to error output by default you get additional information in ErrorMessage column. Check this option if you need exact Response Body (Useful if its in JSON/XML format which needs to be parsed for additional information for later step)."
                          expressionType="Notify"
                          name="OnErrorOutputResponseBody">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Enable multiple requests using parallel threads."
                          expressionType="Notify"
                          name="EnableParallelRequests">false</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum parallel threads to use for processing multiple web requests."
                          expressionType="Notify"
                          name="MaxParallelThreads">1</property>
                        <property
                          dataType="System.Boolean"
                          description="By default one request is sent for each input row. If your API supports multiple records in a single call via HTTP Body then enable this setting. See also BodyBatchSize, BodyHeader, BodyFooter and BodyRowSeparator property."
                          expressionType="Notify"
                          name="EnableBodyBatch">true</property>
                        <property
                          dataType="System.String"
                          description="When you have to wrap input content between opening and closing tags for each call then set this property to specify opening for body content. For Example if you want to build Body like this (send max 100 rows per call) ==&gt; { records : [ {...}, {...}, {...} ] } then you can set BatchSize=100, BodyHeader as &quot;{ records: [&quot; , BodyFooter as &quot;] }&quot; and BodyRowSeperator as comma {,}. This property is ignored if EnableBodyBatch=false."
                          expressionType="Notify"
                          name="BodyHeader">{   "requests": [</property>
                        <property
                          dataType="System.String"
                          description="When you have to wrap input content between opening and closing tags for each call then set this property to specify closing for body content. For Example if you want to build Body like this (send max 100 rows per call) ==&gt; { records : [ {...}, {...}, {...} ] } then you can set BatchSize=100, BodyHeader as &quot;{ records: [&quot; , BodyFooter as &quot;] }&quot; and BodyRowSeperator as comma {,}. This property is ignored if EnableBodyBatch=false."
                          expressionType="Notify"
                          name="BodyFooter">]}</property>
                        <property
                          dataType="System.Int32"
                          description="If your API supports multiple records via HTTP Body then change this setting &gt; 1 to include multiple upstream records into single call. See also BodyHeader, BodyFooter and BodyRowSeparator property. This property is ignored if EnableBodyBatch=false."
                          expressionType="Notify"
                          name="BodyBatchSize">250</property>
                        <property
                          dataType="System.String"
                          description="When you submit multiple rows in a batch you can separate multiple documents / records using custom separator (e.g. in JSON Array you can use comma {,} as record separator if POST document is in array format [ {...}, {...}, {...} ] ). For last row of batch blank separator is used."
                          expressionType="Notify"
                          name="BodyRowSeparator">,</property>
                        <property
                          dataType="System.Boolean"
                          description="Returns response data as binary data (e.g. Byte Array). Check this option is response is Zip file, Image file or any non text data which needs to be exported as raw data without any encoding."
                          expressionType="Notify"
                          name="TreatResponseAsBinary">false</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.WebApiDestination</property>
                        <property
                          dataType="System.Boolean"
                          description="Check this option if you want to upload file(s) (i.e. POST RAW file data) or send data using Multi-Part encoding method (i.e. Content-Type: multipart/form-data). Multi-Part request allows you to mix key/value and upload files in same request. On the other hand raw upload allows only single file upload (without any key/value) &#xA;&#xA;==== Raw Upload (Content-Type: application/octet-stream) =====   &#xA;To upload single file in raw mode check this option and specify full file path starting with @ sign in the Body (e.g.  @c:\data\myfile.zip ) &#xA;&#xA;==== Form-Data / Multipart Upload (Content-Type: multipart/form-data) =====   &#xA;To treat your Request data as multi part fields you must specify key/value pairs separated by new lines into RequestData field (i.e. Body). Each key value pair is entered on new-line and key/value are separated using equal sign (=). Preceding and trailing spaces are ignored also blank lines are ignored. &#xA;If field value has some any special character(s) then use escape sequence (e.g. For NewLine: \r\n, For Tab: \t, For at (@): \@). When value of any field starts with at sign (@) its automatically treated as File you want to upload. By default file content type is determined based on extension however you can supply content type manually for any field using this way [ fieldname.Content-Type=some content type ]. In below example we have supplied Content-Type for file2 and SomeField1, all other fields are using default content-type.&#xA;See below Example of uploading multiple files along with additional fields.&#xA;&#xA;file1=@c:\data\Myfile1.txt&#xA;file2=@c:\data\Myfile2.json&#xA;file2.Content-Type=application/json&#xA;SomeField1=aaaaaaa&#xA;SomeField1.Content-Type=text/plain&#xA;SomeField2=12345&#xA;SomeFieldWithNewLineAndTab=This is line1\r\nThis is line2\r\nThis is \ttab \ttab \ttab&#xA;SomeFieldStartingWithAtSign=\@MyTwitterHandle&#xA;"
                          expressionType="Notify"
                          name="IsMultiPartUpload">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Enable this option if your server is expecting &#xA; (i.e. CRLF) after last Multi-Part boundary in the Body. This option is only applicable if you enabled IsMultiPartUpload and sending data in Key=value format (i.e. Mutipart). For raw file upload this option has no effect."
                          expressionType="Notify"
                          name="AddMultiPartPostamble">false</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Iterate Offices\Sequence Container\Match Profile\Read details (throttled).Connections[Connection]"
                          connectionManagerID="Package.ConnectionManagers[HTTP 1]"
                          connectionManagerRefId="Package.ConnectionManagers[HTTP 1]"
                          description="Connection manager for authentication (e.g. HTTP or OAuth Connection)"
                          name="Connection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Match Profile\Read details (throttled).Inputs[WebApiDestinationInput]"
                          errorRowDisposition="FailComponent"
                          hasSideEffects="true"
                          name="WebApiDestinationInput"
                          truncationRowDisposition="FailComponent">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Read details (throttled).Inputs[WebApiDestinationInput].Columns[TemplateOutput]"
                              cachedDataType="nText"
                              cachedName="TemplateOutput"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Match Profile\Read details (throttled).Inputs[WebApiDestinationInput].ExternalColumns[HttpRequestData]"
                              lineageId="Package\Iterate Offices\Sequence Container\Match Profile\Template Transform.Outputs[TemplateTransformOutput].Columns[TemplateOutput]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Read details (throttled).Inputs[WebApiDestinationInput].ExternalColumns[HttpRequestUrl]"
                              dataType="wstr"
                              length="2000"
                              name="HttpRequestUrl" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Read details (throttled).Inputs[WebApiDestinationInput].ExternalColumns[HttpRequestData]"
                              dataType="nText"
                              name="HttpRequestData" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Read details (throttled).Inputs[WebApiDestinationInput].ExternalColumns[HttpHeaders]"
                              dataType="wstr"
                              length="2000"
                              name="HttpHeaders" />
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Match Profile\Read details (throttled).Outputs[WebApiDestination Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="WebApiDestination Error Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Match Profile\Read details (throttled).Inputs[WebApiDestinationInput]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Read details (throttled).Outputs[WebApiDestination Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Match Profile\Read details (throttled).Outputs[WebApiDestination Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Read details (throttled).Outputs[WebApiDestination Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Match Profile\Read details (throttled).Outputs[WebApiDestination Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Read details (throttled).Outputs[WebApiDestination Error Output].Columns[ErrorColumnName]"
                              codePage="1252"
                              dataType="str"
                              length="128"
                              lineageId="Package\Iterate Offices\Sequence Container\Match Profile\Read details (throttled).Outputs[WebApiDestination Error Output].Columns[ErrorColumnName]"
                              name="ErrorColumnName" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Read details (throttled).Outputs[WebApiDestination Error Output].Columns[ErrorMessage]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\Match Profile\Read details (throttled).Outputs[WebApiDestination Error Output].Columns[ErrorMessage]"
                              name="ErrorMessage" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Match Profile\Read details (throttled).Outputs[Response Output]"
                          exclusionGroup="1"
                          name="Response Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Match Profile\Read details (throttled).Inputs[WebApiDestinationInput]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Read details (throttled).Outputs[Response Output].Columns[ResponseText]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\Match Profile\Read details (throttled).Outputs[Response Output].Columns[ResponseText]"
                              name="ResponseText" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Read details (throttled).Outputs[Response Output].Columns[StatusCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Match Profile\Read details (throttled).Outputs[Response Output].Columns[StatusCode]"
                              name="StatusCode" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Match Profile\Rip out of the result"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="JSON Parser Transform; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="Parse incoming JSON String into columns. You can also parse and transform single JSON record into multiple rows by filtering data based on JSON Path (e.g. $.Customer.Orders[*])"
                      name="Rip out of the result"
                      usesDispositions="true"
                      version="2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">3</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for any numeric data types"
                          expressionType="Notify"
                          name="TreatBlankNumberAsNull">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for bool data types"
                          expressionType="Notify"
                          name="TreatBlankBoolAsNull">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for any date/time data types"
                          expressionType="Notify"
                          name="TreatBlankDateAsNull">true</property>
                        <property
                          dataType="System.String"
                          description="Sample JSON data used to parse output columns."
                          expressionType="Notify"
                          name="SampleData"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">{"result":[{"system_ctime":1569245299,"system_modtime":1569245299,"system_record_state":"active","profile_name":"Residential Sale Match Profile for Mr and Mr.Ford","category":"residential_sale","etag":"81326-1569245299","contact":null,"related":{"campaigns":[],"buildings":[],"towns":[{"id":"67688","value":"Beccles"}],"localities":[],"streets":[],"postcode_areas":[],"postcode_districts":[],"postcode_sectors":[],"postcodes":[],"tags_any":[],"tags":[],"features":[],"views":[],"ideal_for":[],"rental_attributes":[],"listing_categories":[]},"category_name":"Residential Sale","price_match":{"min":"245000","max":"265000"},"attr_energy_rating":{"min":null,"max":null},"attr_bathrooms":{"min":null,"max":null},"attr_bedrooms":{"min":"2","max":"3"},"attr_garages":{"min":null,"max":null},"attr_carports":{"min":null,"max":null},"attr_ensuites":{"min":null,"max":null},"attr_toilets":{"min":null,"max":null},"attr_living_areas":{"min":null,"max":null},"attr_open_spaces":{"min":null,"max":null},"attr_roi_pa":{"min":null,"max":null},"attr_takings_pa":{"min":null,"max":null},"attr_build_year":{"min":null,"max":null},"attr_sleeps":{"min":null,"max":null},"attr_frontage":{"min":null,"max":null},"attr_depth_left":{"min":null,"max":null},"attr_depth_right":{"min":null,"max":null},"attr_depth_rear":{"min":null,"max":null},"car_spaces":{"min":null,"max":null},"attr_buildarea":{"min":null,"max":null,"m2_min":null,"m2_max":null},"attr_buildarea_unit":{"min":null,"max":null},"attr_landarea":{"min":null,"max":null,"m2_min":null,"m2_max":null},"attr_landarea_unit":{"min":null,"max":null},"attr_is_house_land":null,"attr_is_corner_block":null,"attr_franchise":null,"attr_whole_building":null,"rent_sqm":{"min":null,"max":null},"id":81326}],"error":null,"correlation":{"request_id":"8d8117fe-90c9-4c09-b446-0ec7a5f2ef1b","correlation_id":"8d8117fe-90c9-4c09-b446-0ec7a5f2ef1b","async_correlation_id":"8d8117fe-90c9-4c09-b446-0ec7a5f2ef1b"}}
</property>
                        <property
                          dataType="System.Boolean"
                          description="Include all upstream parent columns into output except the one you selected to parse. By default only parsed columns from Input document is included in the output. If you wish to include all other upstream columns in the output too then check this option."
                          expressionType="Notify"
                          name="OutputAllUpstreamColumns">false</property>
                        <property
                          dataType="System.Int32"
                          description="Defines how to handle empty input. By default NULL or Empty input is skipped from parsing."
                          expressionType="Notify"
                          name="EmptyInputProcessingMode"
                          typeConverter="ZappySys.Common.Data.EmptyInputProcessingMode">0</property>
                        <property
                          dataType="System.String"
                          description="Defines how to handle empty input. By default NULL or Empty input is skipped from parsing."
                          expressionType="Notify"
                          name="TreatEmptyInputAs">{ }</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum JSON records to fetch. Set this value to 0 for all records"
                          expressionType="Notify"
                          name="MaxRows">0</property>
                        <property
                          dataType="System.String"
                          description="Enter expression here to filter data.(Example:  $.Users[*].UserName ) This will fetch User names from users records"
                          expressionType="Notify"
                          name="Filter"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">$.result[*]</property>
                        <property
                          dataType="System.Boolean"
                          description="Use this option to include parent properties (Non array) in the output along with Filtered Rows"
                          expressionType="Notify"
                          name="IncludeParentColumns">true</property>
                        <property
                          dataType="System.Boolean"
                          description="By default child and parent information is not included in the output if children not found for specified expression. For example if you want to extract all orders from all customers nodes then you can type $.Customers[*].Orders[*]. This will fetch all orders from all customers. By default customers records without orders wont be included in the output. If you want to include those customers where orders not found then check this option (Output null information for order attributes). This behavior is similar to LEFT OUTER JOIN in SQL (Left side is parent, right side is child). This option is ***resource intensive*** so only check if you really care about this behavior."
                          expressionType="Notify"
                          name="IncludeParentColumnsWhenChildMissing">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to true if you want to output parent columns which are array. By default any parent column which is an array is not included in output. See also FilterForParentColumnsWithArrayType property if you set this property"
                          expressionType="Notify"
                          name="IncludeParentColumnsWithArrayType">false</property>
                        <property
                          dataType="System.String"
                          description="Filter expression to extract value form parent"
                          expressionType="Notify"
                          name="FilterForParentColumnsWithArrayType"></property>
                        <property
                          dataType="System.String"
                          description="Prefix for parent column name. This option is only valid if you have set IncludeParentColumns=True"
                          expressionType="Notify"
                          name="ParentColumnPrefix">P_</property>
                        <property
                          dataType="System.Boolean"
                          description="Throw error if property name specified in filter expression is missing. By default it will ignore any missing property errors."
                          expressionType="Notify"
                          name="ThrowErrorIfPropertyMissing">false</property>
                        <property
                          dataType="System.Int32"
                          description="This property how many nested levels should be scanned to fetch various properties. 0=Scan all child levels."
                          expressionType="Notify"
                          name="MaxLevelsToScan">0</property>
                        <property
                          dataType="System.String"
                          description="List comma separated property names from JSON document which you want to exclude from output. Specify parent property name to exclude all child nodes."
                          expressionType="Notify"
                          name="ExcludedProperties"></property>
                        <property
                          dataType="System.String"
                          description="Property level separator used in generated property name (separator for outer properties - Above selected filter node). Use this if default separator is producing duplicate property name which is conflicting with existing name."
                          expressionType="Notify"
                          name="LevelSeparator">_</property>
                        <property
                          dataType="System.Boolean"
                          description="Enables deep array flattening for selected filtered hierarchy. When you turn on this property it will flatten each property of each array item and expose as column (e.g. If you have Filter set as $.customers[*] and for each customer you have an array of Addresses then you may see output columns like Addresses.1.City, Addresses.1.State, Addresses.2.City, Addresses.2.State .... Addresses.N.City, Addresses.N.State). You can control how many array items you want to flatten by setting MaxArrayItemsToFlatten property."
                          expressionType="Notify"
                          name="EnableArrayFlattening">false</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum number of array items to flatten. inner array flattening. Adjust this property to control how many columns being generated. This option is ignored if you set EnableArrayFlattening=false"
                          expressionType="Notify"
                          name="MaxArrayItemsToFlatten">10</property>
                        <property
                          dataType="System.String"
                          description="Specifies how custom date formatted strings are parsed when reading JSON."
                          expressionType="Notify"
                          name="DateFormatString"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies how date formatted strings, e.g. Date(1198908717056) and 2012-03-21T05:40Z, are parsed when reading JSON."
                          expressionType="Notify"
                          name="DateParseHandling"
                          typeConverter="ZappySys.Common.DateParseHandling">1</property>
                        <property
                          dataType="System.Boolean"
                          description="Output as raw JSON document rather than parsing individual fields. This option is helpful if you have documents stored in a file and you want to pass them downstream as raw JSON string rather than parsing into columns."
                          expressionType="Notify"
                          name="OutputRawDocument">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Indent JSON output so its easy to read."
                          expressionType="Notify"
                          name="IndentOutput">false</property>
                        <property
                          dataType="System.Boolean"
                          description="When this property is true then Column is converted to Row. Pivoted names will appear under  Pivot_Name column and values will appear under Pivot_Value field."
                          expressionType="Notify"
                          name="EnablePivot">false</property>
                        <property
                          dataType="System.Int32"
                          description="Array Transformation you want to apply. Useful for case when you have 2-Dimensional arrays with rows/columns in separate arrays."
                          expressionType="Notify"
                          name="ArrayTransformationType"
                          typeConverter="ZappySys.Json.ArrayTransformType">0</property>
                        <property
                          dataType="System.String"
                          description="Filter expression to use to extract column names for array transformation."
                          expressionType="Notify"
                          name="ArrayTransColumnNameFilter"></property>
                        <property
                          dataType="System.String"
                          description="Filter expression for row values (Not applicable for simple array transformation)."
                          expressionType="Notify"
                          name="ArrayTransRowValueFilter"></property>
                        <property
                          dataType="System.Boolean"
                          description="When you have 2D array but don't have column list specified in a separate array then use this option (e.g. { arr: [[10,11],[21,22]] } )."
                          expressionType="Notify"
                          name="ArrayTransEnableCustomColumns">false</property>
                        <property
                          dataType="System.String"
                          description="When you have 2D array but don't have column list specified in a separate array then use specify column names here. Use comma separated list (e.g col1,col2,col3 ). Column name Order must match value order."
                          expressionType="Notify"
                          name="ArrayTransCustomColumns"></property>
                        <property
                          dataType="System.Int32"
                          description="Metadata scan mode controls how data type and length is determined. By default few records scanned to determine datatype/length. Changing ScanMode affects length/datatype accuracy."
                          expressionType="Notify"
                          name="MetaDataScanMode"
                          typeConverter="ZappySys.Common.Data.MetaDataScanMode">4</property>
                        <property
                          dataType="System.Int32"
                          description="Length for all string column. This option is only valid for MetaDataScanMode=Custom"
                          expressionType="Notify"
                          name="MetaDataCustomLength">1000</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.JsonParserTransform</property>
                        <property
                          dataType="System.Boolean"
                          name="EnableBigNumberHandling">false</property>
                        <property
                          dataType="System.Int32"
                          name="Encoding">0</property>
                        <property
                          dataType="System.String"
                          name="CharacterSet"></property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Match Profile\Rip out of the result.Inputs[JsonParserTransformInput]"
                          errorRowDisposition="FailComponent"
                          name="JsonParserTransformInput"
                          truncationRowDisposition="FailComponent">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Rip out of the result.Inputs[JsonParserTransformInput].Columns[ResponseText]"
                              cachedDataType="nText"
                              cachedName="ResponseText"
                              lineageId="Package\Iterate Offices\Sequence Container\Match Profile\Read details (throttled).Outputs[Response Output].Columns[ResponseText]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True" />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Match Profile\Rip out of the result.Outputs[JsonParserTransformOutput]"
                          errorOrTruncationOperation="Error"
                          errorRowDisposition="FailComponent"
                          name="JsonParserTransformOutput"
                          truncationRowDisposition="FailComponent">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Rip out of the result.Outputs[JsonParserTransformOutput].Columns[__DOCUMENT__]"
                              dataType="nText"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Match Profile\Rip out of the result.Outputs[JsonParserTransformOutput].ExternalColumns[__DOCUMENT__]"
                              lineageId="Package\Iterate Offices\Sequence Container\Match Profile\Rip out of the result.Outputs[JsonParserTransformOutput].Columns[__DOCUMENT__]"
                              name="__DOCUMENT__" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Rip out of the result.Outputs[JsonParserTransformOutput].Columns[P_error]"
                              dataType="nText"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Match Profile\Rip out of the result.Outputs[JsonParserTransformOutput].ExternalColumns[P_error]"
                              lineageId="Package\Iterate Offices\Sequence Container\Match Profile\Rip out of the result.Outputs[JsonParserTransformOutput].Columns[P_error]"
                              name="P_error" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Rip out of the result.Outputs[JsonParserTransformOutput].Columns[P_correlation_request_id]"
                              dataType="nText"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Match Profile\Rip out of the result.Outputs[JsonParserTransformOutput].ExternalColumns[P_correlation_request_id]"
                              lineageId="Package\Iterate Offices\Sequence Container\Match Profile\Rip out of the result.Outputs[JsonParserTransformOutput].Columns[P_correlation_request_id]"
                              name="P_correlation_request_id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Rip out of the result.Outputs[JsonParserTransformOutput].Columns[P_correlation_correlation_id]"
                              dataType="nText"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Match Profile\Rip out of the result.Outputs[JsonParserTransformOutput].ExternalColumns[P_correlation_correlation_id]"
                              lineageId="Package\Iterate Offices\Sequence Container\Match Profile\Rip out of the result.Outputs[JsonParserTransformOutput].Columns[P_correlation_correlation_id]"
                              name="P_correlation_correlation_id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Rip out of the result.Outputs[JsonParserTransformOutput].Columns[P_correlation_async_correlation_id]"
                              dataType="nText"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Match Profile\Rip out of the result.Outputs[JsonParserTransformOutput].ExternalColumns[P_correlation_async_correlation_id]"
                              lineageId="Package\Iterate Offices\Sequence Container\Match Profile\Rip out of the result.Outputs[JsonParserTransformOutput].Columns[P_correlation_async_correlation_id]"
                              name="P_correlation_async_correlation_id" />
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Rip out of the result.Outputs[JsonParserTransformOutput].ExternalColumns[P_error]"
                              dataType="nText"
                              name="P_error" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Rip out of the result.Outputs[JsonParserTransformOutput].ExternalColumns[P_correlation_request_id]"
                              dataType="nText"
                              name="P_correlation_request_id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Rip out of the result.Outputs[JsonParserTransformOutput].ExternalColumns[P_correlation_correlation_id]"
                              dataType="nText"
                              name="P_correlation_correlation_id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Rip out of the result.Outputs[JsonParserTransformOutput].ExternalColumns[P_correlation_async_correlation_id]"
                              dataType="nText"
                              name="P_correlation_async_correlation_id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Rip out of the result.Outputs[JsonParserTransformOutput].ExternalColumns[__DOCUMENT__]"
                              dataType="nText"
                              name="__DOCUMENT__" />
                          </externalMetadataColumns>
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Match Profile\Rip out of the result.Outputs[JsonParserTransform Error Output]"
                          isErrorOut="true"
                          name="JsonParserTransform Error Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Rip out of the result.Outputs[JsonParserTransform Error Output].Columns[__DOCUMENT__]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\Match Profile\Rip out of the result.Outputs[JsonParserTransform Error Output].Columns[__DOCUMENT__]"
                              name="__DOCUMENT__" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Rip out of the result.Outputs[JsonParserTransform Error Output].Columns[P_error]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\Match Profile\Rip out of the result.Outputs[JsonParserTransform Error Output].Columns[P_error]"
                              name="P_error" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Rip out of the result.Outputs[JsonParserTransform Error Output].Columns[P_correlation_request_id]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\Match Profile\Rip out of the result.Outputs[JsonParserTransform Error Output].Columns[P_correlation_request_id]"
                              name="P_correlation_request_id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Rip out of the result.Outputs[JsonParserTransform Error Output].Columns[P_correlation_correlation_id]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\Match Profile\Rip out of the result.Outputs[JsonParserTransform Error Output].Columns[P_correlation_correlation_id]"
                              name="P_correlation_correlation_id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Rip out of the result.Outputs[JsonParserTransform Error Output].Columns[P_correlation_async_correlation_id]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\Match Profile\Rip out of the result.Outputs[JsonParserTransform Error Output].Columns[P_correlation_async_correlation_id]"
                              name="P_correlation_async_correlation_id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Rip out of the result.Outputs[JsonParserTransform Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Match Profile\Rip out of the result.Outputs[JsonParserTransform Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Rip out of the result.Outputs[JsonParserTransform Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Match Profile\Rip out of the result.Outputs[JsonParserTransform Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Rip out of the result.Outputs[JsonParserTransform Error Output].Columns[ErrorColumnName]"
                              codePage="1252"
                              dataType="str"
                              length="128"
                              lineageId="Package\Iterate Offices\Sequence Container\Match Profile\Rip out of the result.Outputs[JsonParserTransform Error Output].Columns[ErrorColumnName]"
                              name="ErrorColumnName" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Rip out of the result.Outputs[JsonParserTransform Error Output].Columns[ErrorMessage]"
                              dataType="wstr"
                              length="1024"
                              lineageId="Package\Iterate Offices\Sequence Container\Match Profile\Rip out of the result.Outputs[JsonParserTransform Error Output].Columns[ErrorMessage]"
                              name="ErrorMessage" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Rip out of the result.Outputs[JsonParserTransform Error Output].Columns[ErrorRawData]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\Match Profile\Rip out of the result.Outputs[JsonParserTransform Error Output].Columns[ErrorRawData]"
                              name="ErrorRawData" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Match Profile\Search MP"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="JSON Source (REST API or File); ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="The JSON source is used to read data from JSON files, RESTful Web Service or direct JSON String."
                      name="Search MP"
                      usesDispositions="true"
                      version="33">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for any numeric data types"
                          expressionType="Notify"
                          name="TreatBlankNumberAsNull">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for bool data types"
                          expressionType="Notify"
                          name="TreatBlankBoolAsNull">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for any date/time data types"
                          expressionType="Notify"
                          name="TreatBlankDateAsNull">true</property>
                        <property
                          dataType="System.Int32"
                          description="Defines how to read the JSON file or direct string"
                          expressionType="Notify"
                          name="AccessMode"
                          typeConverter="ZappySys.Common.Ssis.FileValueAccessMode">3</property>
                        <property
                          dataType="System.String"
                          description="Defines how to read the JSON file or direct string"
                          expressionType="Notify"
                          name="DirectValue"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.String"
                          description="Variable name which holds JSON string"
                          expressionType="Notify"
                          name="ValueVariable"
                          typeConverter="ZappySys.PowerPack.Converters.VariableEditor,ZappySys.PowerPack130.UI,Version=1.0.0.0,Culture=neutral,PublicKeyToken=1903265a93eae502"></property>
                        <property
                          dataType="System.String"
                          description="Variable name which holds data file path or url"
                          expressionType="Notify"
                          name="PathVariable"
                          typeConverter="ZappySys.PowerPack.Converters.VariableEditor,ZappySys.PowerPack130.UI,Version=1.0.0.0,Culture=neutral,PublicKeyToken=1903265a93eae502">User::RexAPIWebURL</property>
                        <property
                          dataType="System.String"
                          description="JSON file file path (e.g. c:\data\myfile.json) or pattern to process multiple files (e.g. c:\data\*.json)"
                          expressionType="Notify"
                          name="DirectPath"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">https://api.uk.rexsoftware.com/rex.php</property>
                        <property
                          dataType="System.Boolean"
                          description="Include files from sub folders too."
                          expressionType="Notify"
                          name="Recursive">false</property>
                        <property
                          dataType="System.String"
                          description="Set this if you want to set custom Http headers. You may use variable anywhere in the header value using syntax {{User::YourVarName}}. Syntax of Header key value pair is : &amp;lt;request&amp;gt;&amp;lt;header&amp;gt;&amp;lt;name&amp;gt;x-myheader-1&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;AAA&amp;lt;/value&amp;gt;&amp;lt;/header&amp;gt; &amp;lt;header&amp;gt;&amp;lt;name&amp;gt;x-myheader-2&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;BBB&amp;lt;/value&amp;gt;&amp;lt;/header&amp;gt;&amp;lt;/request&amp;gt;"
                          expressionType="Notify"
                          name="HttpHeaders">&lt;request&gt;&lt;header&gt;&lt;name&gt;Accept&lt;/name&gt;&lt;value&gt;*/*&lt;/value&gt;&lt;/header&gt;&lt;header&gt;&lt;name&gt;Cache-Control&lt;/name&gt;&lt;value&gt;no-cache&lt;/value&gt;&lt;/header&gt;&lt;header&gt;&lt;name&gt;X-App-Identifier&lt;/name&gt;&lt;value&gt;client:spicerhaart:{{System::PackageName}}:{{System::TaskName}}&lt;/value&gt;&lt;/header&gt;&lt;/request&gt;</property>
                        <property
                          dataType="System.String"
                          description="User defined data you wish to send along with your HTTP Request (e.g. Upload file data, Form POST data). Usually you have to set content-type of your data but if you select RequestMethod=POST then system will automatically set content-type=application/x-www-form-urlencoded."
                          expressionType="Notify"
                          name="HttpRequestData">{
"method":"MatchProfiles::search",
"args":{
	"criteria": 
	[

	],
	"result_format":"etags",
	"limit":50000,
	"offset": &lt;%page%&gt;
	 },
"strip_response_prefixes": true,
"token": "{{User::RexToken}}"
}

</property>
                        <property
                          dataType="System.String"
                          description="Http Web Request Method (e.g. POST, GET, PUT, LIST, DELETE...). Refer your API documentation if you are not sure which method you have to use."
                          expressionType="Notify"
                          name="HttpRequestMethod">POST</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies content type for data you wish to POST. If you select Default option then system default content type will be used (i.e. application/x-www-form-urlencoded). If you specify Content-Type header along with this option then header value takes precedence."
                          expressionType="Notify"
                          name="HttpRequestContentType"
                          typeConverter="ZappySys.Common.Web.HttpRequestContentType">2</property>
                        <property
                          dataType="System.Int32"
                          description="Data format coming from HTTP Response. This is useful for example when you have OData service and you want to automatically consume all pages of data using odata.netUrl. Setting JsonFormat=Odata will automatically do it for you. This setting is only applicable if JSON is coming from HTTP WebRequest."
                          expressionType="Notify"
                          name="JsonFormat"
                          typeConverter="ZappySys.Json.JsonFormat">1</property>
                        <property
                          dataType="System.Boolean"
                          description="Enable custom proxy settings (If this is not set then system default proxy will be used. To disable proxy totally uncheck this option and check DoNotUseDefaultProxy option if available)"
                          expressionType="Notify"
                          name="UseProxy">false</property>
                        <property
                          dataType="System.String"
                          description="Web URL of Proxy server (including port  if necessary). [e.g. http://myproxyserver:8080/]"
                          expressionType="Notify"
                          name="ProxyUrl"></property>
                        <property
                          dataType="System.Boolean"
                          description="Enable passing userid and password to proxy server"
                          expressionType="Notify"
                          name="UseProxyCreds">false</property>
                        <property
                          dataType="System.String"
                          description="Proxy username"
                          expressionType="Notify"
                          name="ProxyUserName"></property>
                        <property
                          dataType="System.String"
                          description="Proxy password"
                          expressionType="Notify"
                          name="ProxyPassword"></property>
                        <property
                          dataType="System.String"
                          description="If Service response support pagination using some sort of next url attribute then specify which attribute name in JSON Response string which holds next url. If no attribute found or its null then component will stop fetching next resultset. Example: $.pagingInfo.nextUrl"
                          expressionType="Notify"
                          name="NextUrlAttribute"></property>
                        <property
                          dataType="System.String"
                          description="If Service response support pagination using some sort of prev/next url attribute then specify which previous link attribute name from JSON Response string which holds previous url."
                          expressionType="Notify"
                          name="PrevUrlAttribute"></property>
                        <property
                          dataType="System.String"
                          description="Specifies value for NextUrlAttribute or StopIndicatorAttribute which indicates last page to stop pagination. If you have specified StopIndicatorAttribute then you can use Regular expression rather than static value to indicate last page. To use regular expression value of this property must start with regex= prefix. Example : regex=FALSE|N  (assuming you set StopIndicatorAttribute to something like $.hasMore)"
                          expressionType="Notify"
                          name="NextUrlStopIndicator"></property>
                        <property
                          dataType="System.String"
                          description="Attribute name or expression for attribute which can be used as stop indicator (e.g. hasmore --or-- $.pagination.hasmore). If this value is blank then NextUrlAttribute is used"
                          expressionType="Notify"
                          name="StopIndicatorAttribute"></property>
                        <property
                          dataType="System.String"
                          description="If you want to include certain text (or parameters) at the end of Next url then specify this attribute (e.g. &amp;format=json). Another common usecase of this property is to supply pagination token to next Page URL. You can also use &lt;%nextlink%&gt; or  &lt;%nextlink_encoded%&gt; placeholder (e.g. &amp;cursor=&lt;%nextlink_encoded%&gt; )"
                          expressionType="Notify"
                          name="NextUrlSuffix"></property>
                        <property
                          dataType="System.Int32"
                          description="This property indicates total number of milliseconds you want to wait before sending next request. This option allows you to adjust how many API calls can be made within certain timeframe. If your API Service has no limit then set this option to zero"
                          expressionType="Notify"
                          name="NextUrlWait">0</property>
                        <property
                          dataType="System.Boolean"
                          description="If this option is true then component will continue without exception on 404 error (Url not found). This allows you to consume data gracefully."
                          expressionType="Notify"
                          name="ContinueOnUrlNotFoundError">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Continue when any type of exception occurs during http request"
                          expressionType="Notify"
                          name="ContineOnAnyError">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Continue on error when specified substring found in response"
                          expressionType="Notify"
                          name="ContineOnErrorForMessage">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Continue on error when specified status code returned from web server"
                          expressionType="Notify"
                          name="ContineOnErrorForStatusCode">false</property>
                        <property
                          dataType="System.Boolean"
                          description="When error occurs no data is returned. Use this option to get content eventhough error occurs. When this option is checked you can't use [continue on error when specific string found in response] option"
                          expressionType="Notify"
                          name="ConsumeResponseOnError">false</property>
                        <property
                          dataType="System.Int32"
                          description="Status code to match when error occurs and ContineOnErrorForStatusCode option is true. If Response status code matches to this code then task continues to run"
                          expressionType="Notify"
                          name="ErrorStatusCodeToMatch">404</property>
                        <property
                          dataType="System.String"
                          description="Error substring to match when error occurs and ContineOnErrorForMessage option is true. If Response status code matches to this code then task continues to run"
                          expressionType="Notify"
                          name="ErrorSubstringToMatch"></property>
                        <property
                          dataType="System.String"
                          description="Cookie Container can be used to maintain state between multiple web requests. Example: You can login to site like wordpress and then extract any private page content by simply passing authentication cookies using this variable."
                          expressionType="Notify"
                          name="CookieContainerVariable"></property>
                        <property
                          dataType="System.Int32"
                          description="Http request Timeout in seconds. Set this to 0 if you want to use system default value (i.e. 100 seconds)"
                          expressionType="Notify"
                          name="RequestTimeout">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies which security protocol is supported for HTTPS communication. Using this option you can enable legacy protocol or enforce to use latest version of security protocol (Note: TLS 1.2 is only supported in SSIS 2014 or Higher)."
                          expressionType="Notify"
                          name="SecurityProtocol"
                          typeConverter="ZappySys.PowerPack.Common.HttpsSecurityProtocolType">0</property>
                        <property
                          dataType="System.Boolean"
                          description="Enable support for gzip or deflate compression. When you check this option compressed response automatically de-compressed saving bandwidth. This option is only valid if web server supports compressed response stream. Check your API documentation for more information."
                          expressionType="Notify"
                          name="EnableCompressionSupport">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Ignore SSL certificate related errors. Example: if you getting SSL/TLS errors because of certificate expired or certificate is not from trusted authority or certificate is self-signed. By checking this option you will not get SSL/TLS error."
                          expressionType="Notify"
                          name="IgnoreCertificateErrors">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Allow unsecure ciphers/suites and curves for SSLS/TLS communication. Use this option to communicate with web servers which needs legacy / unsecured ciphers support. This option is only trigged when you change default SSL/TLS Version on advanced settings tab."
                          expressionType="Notify"
                          name="AllowUnsecureSuite">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Use connection to pass credentials for authentication (e.g. Use UserID/Password or Use OAuth Protocol for token based approach)"
                          expressionType="Notify"
                          name="UseConnection">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specified how you want to loop through multiple pages returned by REST API."
                          expressionType="Notify"
                          name="PagingMode"
                          typeConverter="ZappySys.Common.RestApiPagingMode">3</property>
                        <property
                          dataType="System.Boolean"
                          description="If you wish to pass extracted pagination token or current page number in the body of next request then set this option to true. You can use [$pagetoken$] and [$pagetoken$] placeholders anywhere in the Body where you wish to insert extracted Page token. You must set encoded token you can use &lt;%nextlink_encoded%&gt; inside SuffixForNextUrl Property. If you dont use SuffixForNextUrl then raw nextLink or Token will be inserted inside the body. If you dont specify [$pagetoken$] placeholder in the body then NextPage Token will be appended at the end. NextPage Token is extracted by filter expression specified using property NextUrlSuffix"
                          expressionType="Notify"
                          name="EnablePageTokenForBody">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this to true if you wish to specify different URL, Header, Body or Filter for first page and next page (i.e. Paginated response). Some APIs like Amazon MWS, NetSuite, Zuora) you may need to set this to true."
                          expressionType="Notify"
                          name="HasDifferentNextPageInfo">false</property>
                        <property
                          dataType="System.String"
                          description="When HasDifferentNextPageInfo=true you can set this property to indicate first page and next page. You can specify different URL, Header, Body or Filter for first page and next page (i.e. Paginated response). Use [$tag$] as placeholder anywhere in the URL, Header, Body or Filter and at runtime system will replace it with correct value (first page or next page value). Syntax to specify placeholder for first page vs next page is like a connectionstring url=FirstPageValue|NextPageValue;header=FirstPageValue|NextPageValue;body=FirstPageValue|NextPageValue;filter=FirstPageValue|NextPageValue; You can use one or more key/value pairs to make things dynamic (e.g. url, header, body or filter)  .For example if you have pagination in your API and First URL is http://abc.com/api/items/get and to get more records you have to call http://abc.com/api/items/getNext then you can use [$tag$] as placeholder in the URL http://abc.com/api/items/[$tag$] and specify this property with first page tag and next page tag as url=get|getNext  (Tags are separated using vertical bar). "
                          expressionType="Notify"
                          name="PagePlaceholders"></property>
                        <property
                          dataType="System.String"
                          description="Use this property to set request body fragment for first page. HasDifferentNextPageInfo must be set to true to use this property."
                          expressionType="Notify"
                          name="FirstPageBodyPart"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.String"
                          description="Use this property to set request body fragment for any request after first request. HasDifferentNextPageInfo must be set to true to use this property."
                          expressionType="Notify"
                          name="NextPageBodyPart"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.String"
                          description="Expression to extract Maximum pages to loop through. Some APIs don't stop pagination and keep returning last page data when you try to read data after last page. Specify expression (e.g. $.page_count ) to read total pages to loop through using this property."
                          expressionType="Notify"
                          name="PagingMaxPagesExpr">$.result.total/50000</property>
                        <property
                          dataType="System.String"
                          description="e.g. Type page_num if URL looks like this =&gt; http://abc.com/?page_num=1&amp;sort=true  (page number via query string)&#xA;--or-- Type &lt;%page%&gt; if page number is inside URL path like this =&gt; http://abc.com/1/?sort=true  (e.g. replace page number in url with placeholder http://abc.com/&lt;%page%&gt;/?sort=true)&#xA;Page number will be incremented by one for next URL until last page is reached or [Max Page Number] is reached"
                          expressionType="Notify"
                          name="PageNumberAttributeNameInUrl">&lt;%page%&gt;</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum page number until which auto increment is allowed. Type zero for no limit. Next URL contains next page number (increment by one) until last page is detected or [Max Page Number] limit is reached."
                          expressionType="Notify"
                          name="MaxPageNumber">0</property>
                        <property
                          dataType="System.String"
                          description="Variable name which will hold starting page number. This is ignored if you useing parameter name from query string to indicate page number."
                          expressionType="Notify"
                          name="StartPageNumberVariable">User::UpsertedCount</property>
                        <property
                          dataType="System.Int32"
                          description="Page counter increment. By default next page is incremented by one if this value is zero. You can also enter negative number if you want to decrease page counter."
                          expressionType="Notify"
                          name="PageNumberIncrement">50000</property>
                        <property
                          dataType="System.Int32"
                          description="Specified how you want detect last page."
                          expressionType="Notify"
                          name="PagingEndStrategy"
                          typeConverter="ZappySys.Common.UrlPagingEndDetectionStrategy">3</property>
                        <property
                          dataType="System.Boolean"
                          description="Condition result to compare to detect last page. Set this property to True if you want detect last page if condition is true else set this to False."
                          expressionType="Notify"
                          name="LastPageWhenConditionEqualsTo">true</property>
                        <property
                          dataType="System.Int32"
                          description="Minimum bytes expected from response."
                          expressionType="Notify"
                          name="ResponseMinBytes">0</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum bytes from response."
                          expressionType="Notify"
                          name="ResponseMaxBytes">3</property>
                        <property
                          dataType="System.String"
                          description="Expected error message sub string from response."
                          expressionType="Notify"
                          name="ResponseErrorString">not found</property>
                        <property
                          dataType="System.Int32"
                          description="Expected status code from response when page number you trying to access not found."
                          expressionType="Notify"
                          name="ResponseStatusCode">404</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum JSON records to fetch. Set this value to 0 for all records"
                          expressionType="Notify"
                          name="MaxRows">0</property>
                        <property
                          dataType="System.String"
                          description="Enter expression here to filter data.(Example:  $.Users[*].UserName ) This will fetch User names from users records"
                          expressionType="Notify"
                          name="Filter"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">$.result.rows[*]</property>
                        <property
                          dataType="System.Boolean"
                          description="Use this option to include parent properties (Non array) in the output along with Filtered Rows"
                          expressionType="Notify"
                          name="IncludeParentColumns">true</property>
                        <property
                          dataType="System.Boolean"
                          description="By default child and parent information is not included in the output if children not found for specified expression. For example if you want to extract all orders from all customers nodes then you can type $.Customers[*].Orders[*]. This will fetch all orders from all customers. By default customers records without orders wont be included in the output. If you want to include those customers where orders not found then check this option (Output null information for order attributes). This behavior is similar to LEFT OUTER JOIN in SQL (Left side is parent, right side is child). This option is ***resource intensive*** so only check if you really care about this behavior."
                          expressionType="Notify"
                          name="IncludeParentColumnsWhenChildMissing">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to true if you want to output parent columns which are array. By default any parent column which is an array is not included in output. See also FilterForParentColumnsWithArrayType property if you set this property"
                          expressionType="Notify"
                          name="IncludeParentColumnsWithArrayType">false</property>
                        <property
                          dataType="System.String"
                          description="Filter expression to extract value form parent"
                          expressionType="Notify"
                          name="FilterForParentColumnsWithArrayType"></property>
                        <property
                          dataType="System.String"
                          description="Prefix for parent column name. This option is only valid if you have set IncludeParentColumns=True"
                          expressionType="Notify"
                          name="ParentColumnPrefix">P_</property>
                        <property
                          dataType="System.Boolean"
                          description="Throw error if property name specified in filter expression is missing. By default it will ignore any missing property errors."
                          expressionType="Notify"
                          name="ThrowErrorIfPropertyMissing">false</property>
                        <property
                          dataType="System.Int32"
                          description="This property how many nested levels should be scanned to fetch various properties. 0=Scan all child levels."
                          expressionType="Notify"
                          name="MaxLevelsToScan">0</property>
                        <property
                          dataType="System.String"
                          description="List comma separated property names from JSON document which you want to exclude from output. Specify parent property name to exclude all child nodes."
                          expressionType="Notify"
                          name="ExcludedProperties"></property>
                        <property
                          dataType="System.String"
                          description="Property level separator used in generated property name (separator for outer properties - Above selected filter node). Use this if default separator is producing duplicate property name which is conflicting with existing name."
                          expressionType="Notify"
                          name="LevelSeparator">_</property>
                        <property
                          dataType="System.Boolean"
                          description="Enables deep array flattening for selected filtered hierarchy. When you turn on this property it will flatten each property of each array item and expose as column (e.g. If you have Filter set as $.customers[*] and for each customer you have an array of Addresses then you may see output columns like Addresses.1.City, Addresses.1.State, Addresses.2.City, Addresses.2.State .... Addresses.N.City, Addresses.N.State). You can control how many array items you want to flatten by setting MaxArrayItemsToFlatten property."
                          expressionType="Notify"
                          name="EnableArrayFlattening">false</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum number of array items to flatten. inner array flattening. Adjust this property to control how many columns being generated. This option is ignored if you set EnableArrayFlattening=false"
                          expressionType="Notify"
                          name="MaxArrayItemsToFlatten">10</property>
                        <property
                          dataType="System.Int32"
                          description="Compression format for source file (e.g. gzip, zip)"
                          expressionType="Notify"
                          name="FileCompressionType"
                          typeConverter="ZappySys.Common.FileCompressionType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Array Transformation you want to apply. Useful for case when you have 2-Dimensional arrays with rows/columns in separate arrays."
                          expressionType="Notify"
                          name="ArrayTransformationType"
                          typeConverter="ZappySys.Json.ArrayTransformType">0</property>
                        <property
                          dataType="System.String"
                          description="Filter expression to use to extract column names for array transformation."
                          expressionType="Notify"
                          name="ArrayTransColumnNameFilter">$.result.rows[*]</property>
                        <property
                          dataType="System.String"
                          description="Filter expression for row values (Not applicable for simple array transformation)."
                          expressionType="Notify"
                          name="ArrayTransRowValueFilter">$.result.rows[*]</property>
                        <property
                          dataType="System.Boolean"
                          description="When you have 2D array but don't have column list specified in a separate array then use this option (e.g. { arr: [[10,11],[21,22]] } )."
                          expressionType="Notify"
                          name="ArrayTransEnableCustomColumns">true</property>
                        <property
                          dataType="System.String"
                          description="When you have 2D array but don't have column list specified in a separate array then use specify column names here. Use comma separated list (e.g col1,col2,col3 ). Column name Order must match value order."
                          expressionType="Notify"
                          name="ArrayTransCustomColumns">MetricID</property>
                        <property
                          dataType="System.String"
                          description="Specifies how custom date formatted strings are parsed when reading JSON."
                          expressionType="Notify"
                          name="DateFormatString"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies how date formatted strings, e.g. Date(1198908717056) and 2012-03-21T05:40Z, are parsed when reading JSON."
                          expressionType="Notify"
                          name="DateParseHandling"
                          typeConverter="ZappySys.Common.DateParseHandling">1</property>
                        <property
                          dataType="System.Boolean"
                          description="Output as raw JSON document rather than parsing individual fields. This option is helpful if you have documents stored in a file and you want to pass them downstream as raw JSON string rather than parsing into columns."
                          expressionType="Notify"
                          name="OutputRawDocument">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indent JSON output so its easy to read."
                          expressionType="Notify"
                          name="IndentOutput">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to true if you want to output FilePath. This option is ignored when you consume DirectValue or data from Url rather than local files. Output column name will be __FilePath"
                          expressionType="Notify"
                          name="OutputFilePath">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to true if you want to output FileName. This option is ignored when you consume DirectValue or data from Url rather than local files. Output column name will be __FileName"
                          expressionType="Notify"
                          name="OutputFileName">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to true if you want to move processed file to archive folder."
                          expressionType="Notify"
                          name="EnableArchiveFile">false</property>
                        <property
                          dataType="System.String"
                          description="Folder path where you want to move processed file."
                          expressionType="Notify"
                          name="ArchiveFolderPath"></property>
                        <property
                          dataType="System.Boolean"
                          description="Folder path where you want to move processed file."
                          expressionType="Notify"
                          name="OverwriteFileInArchiveFolder">false</property>
                        <property
                          dataType="System.String"
                          description="File naming convention for archived file. By default it will same name as original source file processed. But you can control naming format using {%name%} and {%ext%} placeholders. e.g. {%name%}_processed{%ext%} or {%name%}{%ext%}.{{System::ContainerStartTime,yyyyMMdd_HHmmss_fff}}"
                          expressionType="Notify"
                          name="ArchiveFileNamingConvention"></property>
                        <property
                          dataType="System.Boolean"
                          description="When this property is true then Column is converted to Row. Pivoted names will appear under  Pivot_Name column and values will appear under Pivot_Value field."
                          expressionType="Notify"
                          name="EnablePivot">false</property>
                        <property
                          dataType="System.Int32"
                          description="Metadata scan mode controls how data type and length is determined. By default few records scanned to determine datatype/length. Changing ScanMode affects length/datatype accuracy."
                          expressionType="Notify"
                          name="MetaDataScanMode"
                          typeConverter="ZappySys.Common.Data.MetaDataScanMode">4</property>
                        <property
                          dataType="System.Int32"
                          description="Length for all string column. This option is only valid for MetaDataScanMode=Custom"
                          expressionType="Notify"
                          name="MetaDataCustomLength">1000</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.JsonSource</property>
                        <property
                          dataType="System.Int32"
                          description="Encoding of source file"
                          expressionType="Notify"
                          name="Encoding"
                          typeConverter="ZappySys.Common.EncodingType">0</property>
                        <property
                          dataType="System.String"
                          description="Character set for text (e.g. utf-8 )"
                          expressionType="Notify"
                          name="CharacterSet"></property>
                        <property
                          dataType="System.Boolean"
                          description="By default process stops with error if specified local file is not found. Set this property to true if you wish to continue rather than throwing file not found error."
                          expressionType="Notify"
                          name="ContinueOnFileNotFoundError">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Check this option if you want to upload file(s) (i.e. POST RAW file data) or send data using Multi-Part encoding method (i.e. Content-Type: multipart/form-data). Multi-Part request allows you to mix key/value and upload files in same request. On the other hand raw upload allows only single file upload (without any key/value) &#xA;&#xA;==== Raw Upload (Content-Type: application/octet-stream) =====   &#xA;To upload single file in raw mode check this option and specify full file path starting with @ sign in the Body (e.g.  @c:\data\myfile.zip ) &#xA;&#xA;==== Form-Data / Multipart Upload (Content-Type: multipart/form-data) =====   &#xA;To treat your Request data as multi part fields you must specify key/value pairs separated by new lines into RequestData field (i.e. Body). Each key value pair is entered on new-line and key/value are separated using equal sign (=). Preceding and trailing spaces are ignored also blank lines are ignored. &#xA;If field value has some any special character(s) then use escape sequence (e.g. For NewLine: \r\n, For Tab: \t, For at (@): \@). When value of any field starts with at sign (@) its automatically treated as File you want to upload. By default file content type is determined based on extension however you can supply content type manually for any field using this way [ fieldname.Content-Type=some content type ]. In below example we have supplied Content-Type for file2 and SomeField1, all other fields are using default content-type.&#xA;See below Example of uploading multiple files along with additional fields.&#xA;&#xA;file1=@c:\data\Myfile1.txt&#xA;file2=@c:\data\Myfile2.json&#xA;file2.Content-Type=application/json&#xA;SomeField1=aaaaaaa&#xA;SomeField1.Content-Type=text/plain&#xA;SomeField2=12345&#xA;SomeFieldWithNewLineAndTab=This is line1\r\nThis is line2\r\nThis is \ttab \ttab \ttab&#xA;SomeFieldStartingWithAtSign=\@MyTwitterHandle&#xA;"
                          expressionType="Notify"
                          name="IsMultiPartUpload">false</property>
                        <property
                          dataType="System.String"
                          description="Expression to extract Maximum records to loop through. Some APIs don't stop pagination and keep returning last page data when you try to read data after last page. Specify expression (e.g. $.total_rows ) to read total pages to loop through using this property. This setting is ignored if you set PagingMaxPagesExpr."
                          expressionType="Notify"
                          name="PagingMaxRowsExpr"></property>
                        <property
                          dataType="System.String"
                          description="When you enable PagingMaxRowsExpr (end pagination based on MaxRowCount) then you need to count records coming in each response. This expression extract all rows found under specified expression (e.g. $.orders[*] if all records found under orders node)."
                          expressionType="Notify"
                          name="PagingMaxRowsDataPathExpr"></property>
                        <property
                          dataType="System.Boolean"
                          description="When this option is checked, system allows to parse large number (Higher than Int64) in JSON document (i.e. { id: 76000009353950433247780 } ). If you do not turn on this option then it may throw error if large number is encountered. This option is SLOW because it has to perform additional checks in order to avoid Large number overflow error so do not turn on unless you getting Large number error."
                          expressionType="Notify"
                          name="EnableBigNumberHandling">false</property>
                      </properties>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Match Profile\Search MP.Outputs[JsonSourceOutput]"
                          errorOrTruncationOperation="Error"
                          errorRowDisposition="FailComponent"
                          name="JsonSourceOutput"
                          truncationRowDisposition="FailComponent">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Search MP.Outputs[JsonSourceOutput].Columns[etag]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Match Profile\Search MP.Outputs[JsonSourceOutput].ExternalColumns[etag]"
                              length="56"
                              lineageId="Package\Iterate Offices\Sequence Container\Match Profile\Search MP.Outputs[JsonSourceOutput].Columns[etag]"
                              name="etag" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Search MP.Outputs[JsonSourceOutput].Columns[id]"
                              dataType="i4"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Match Profile\Search MP.Outputs[JsonSourceOutput].ExternalColumns[id]"
                              lineageId="Package\Iterate Offices\Sequence Container\Match Profile\Search MP.Outputs[JsonSourceOutput].Columns[id]"
                              name="id" />
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Search MP.Outputs[JsonSourceOutput].ExternalColumns[system_ctime]"
                              dataType="i8"
                              name="system_ctime" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Search MP.Outputs[JsonSourceOutput].ExternalColumns[system_modtime]"
                              dataType="i8"
                              name="system_modtime" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Search MP.Outputs[JsonSourceOutput].ExternalColumns[system_record_state]"
                              dataType="wstr"
                              length="24"
                              name="system_record_state" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Search MP.Outputs[JsonSourceOutput].ExternalColumns[profile_name]"
                              dataType="wstr"
                              length="244"
                              name="profile_name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Search MP.Outputs[JsonSourceOutput].ExternalColumns[category]"
                              dataType="wstr"
                              length="64"
                              name="category" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Search MP.Outputs[JsonSourceOutput].ExternalColumns[etag]"
                              dataType="wstr"
                              length="56"
                              name="etag" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Search MP.Outputs[JsonSourceOutput].ExternalColumns[contact.name]"
                              dataType="wstr"
                              length="100"
                              name="contact.name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Search MP.Outputs[JsonSourceOutput].ExternalColumns[contact.email_address]"
                              dataType="wstr"
                              length="144"
                              name="contact.email_address" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Search MP.Outputs[JsonSourceOutput].ExternalColumns[contact.phone_number]"
                              dataType="wstr"
                              length="60"
                              name="contact.phone_number" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Search MP.Outputs[JsonSourceOutput].ExternalColumns[contact.fax_number]"
                              dataType="wstr"
                              length="1020"
                              name="contact.fax_number" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Search MP.Outputs[JsonSourceOutput].ExternalColumns[contact.address_postal]"
                              dataType="wstr"
                              length="1020"
                              name="contact.address_postal" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Search MP.Outputs[JsonSourceOutput].ExternalColumns[contact.address]"
                              dataType="wstr"
                              length="348"
                              name="contact.address" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Search MP.Outputs[JsonSourceOutput].ExternalColumns[contact.id]"
                              dataType="wstr"
                              length="20"
                              name="contact.id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Search MP.Outputs[JsonSourceOutput].ExternalColumns[related.campaigns]"
                              dataType="wstr"
                              length="2716"
                              name="related.campaigns" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Search MP.Outputs[JsonSourceOutput].ExternalColumns[related.buildings]"
                              dataType="wstr"
                              length="8"
                              name="related.buildings" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Search MP.Outputs[JsonSourceOutput].ExternalColumns[related.towns]"
                              dataType="wstr"
                              length="312"
                              name="related.towns" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Search MP.Outputs[JsonSourceOutput].ExternalColumns[related.localities]"
                              dataType="wstr"
                              length="8"
                              name="related.localities" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Search MP.Outputs[JsonSourceOutput].ExternalColumns[related.streets]"
                              dataType="wstr"
                              length="8"
                              name="related.streets" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Search MP.Outputs[JsonSourceOutput].ExternalColumns[related.postcode_areas]"
                              dataType="wstr"
                              length="8"
                              name="related.postcode_areas" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Search MP.Outputs[JsonSourceOutput].ExternalColumns[related.postcode_districts]"
                              dataType="wstr"
                              length="208"
                              name="related.postcode_districts" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Search MP.Outputs[JsonSourceOutput].ExternalColumns[related.postcode_sectors]"
                              dataType="wstr"
                              length="8"
                              name="related.postcode_sectors" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Search MP.Outputs[JsonSourceOutput].ExternalColumns[related.postcodes]"
                              dataType="wstr"
                              length="8"
                              name="related.postcodes" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Search MP.Outputs[JsonSourceOutput].ExternalColumns[related.tags_any]"
                              dataType="wstr"
                              length="8"
                              name="related.tags_any" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Search MP.Outputs[JsonSourceOutput].ExternalColumns[related.tags]"
                              dataType="wstr"
                              length="8"
                              name="related.tags" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Search MP.Outputs[JsonSourceOutput].ExternalColumns[related.features]"
                              dataType="wstr"
                              length="8"
                              name="related.features" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Search MP.Outputs[JsonSourceOutput].ExternalColumns[related.views]"
                              dataType="wstr"
                              length="8"
                              name="related.views" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Search MP.Outputs[JsonSourceOutput].ExternalColumns[related.ideal_for]"
                              dataType="wstr"
                              length="8"
                              name="related.ideal_for" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Search MP.Outputs[JsonSourceOutput].ExternalColumns[related.rental_attributes]"
                              dataType="wstr"
                              length="8"
                              name="related.rental_attributes" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Search MP.Outputs[JsonSourceOutput].ExternalColumns[related.listing_categories]"
                              dataType="wstr"
                              length="8"
                              name="related.listing_categories" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Search MP.Outputs[JsonSourceOutput].ExternalColumns[category_name]"
                              dataType="wstr"
                              length="64"
                              name="category_name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Search MP.Outputs[JsonSourceOutput].ExternalColumns[price_match.min]"
                              dataType="wstr"
                              length="80"
                              name="price_match.min" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Search MP.Outputs[JsonSourceOutput].ExternalColumns[price_match.max]"
                              dataType="wstr"
                              length="80"
                              name="price_match.max" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Search MP.Outputs[JsonSourceOutput].ExternalColumns[attr_energy_rating.min]"
                              dataType="wstr"
                              length="1020"
                              name="attr_energy_rating.min" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Search MP.Outputs[JsonSourceOutput].ExternalColumns[attr_energy_rating.max]"
                              dataType="wstr"
                              length="1020"
                              name="attr_energy_rating.max" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Search MP.Outputs[JsonSourceOutput].ExternalColumns[attr_bathrooms.min]"
                              dataType="wstr"
                              length="1020"
                              name="attr_bathrooms.min" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Search MP.Outputs[JsonSourceOutput].ExternalColumns[attr_bathrooms.max]"
                              dataType="wstr"
                              length="1020"
                              name="attr_bathrooms.max" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Search MP.Outputs[JsonSourceOutput].ExternalColumns[attr_bedrooms.min]"
                              dataType="wstr"
                              length="80"
                              name="attr_bedrooms.min" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Search MP.Outputs[JsonSourceOutput].ExternalColumns[attr_bedrooms.max]"
                              dataType="wstr"
                              length="80"
                              name="attr_bedrooms.max" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Search MP.Outputs[JsonSourceOutput].ExternalColumns[attr_garages.min]"
                              dataType="wstr"
                              length="1020"
                              name="attr_garages.min" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Search MP.Outputs[JsonSourceOutput].ExternalColumns[attr_garages.max]"
                              dataType="wstr"
                              length="1020"
                              name="attr_garages.max" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Search MP.Outputs[JsonSourceOutput].ExternalColumns[attr_carports.min]"
                              dataType="wstr"
                              length="1020"
                              name="attr_carports.min" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Search MP.Outputs[JsonSourceOutput].ExternalColumns[attr_carports.max]"
                              dataType="wstr"
                              length="1020"
                              name="attr_carports.max" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Search MP.Outputs[JsonSourceOutput].ExternalColumns[attr_ensuites.min]"
                              dataType="wstr"
                              length="1020"
                              name="attr_ensuites.min" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Search MP.Outputs[JsonSourceOutput].ExternalColumns[attr_ensuites.max]"
                              dataType="wstr"
                              length="1020"
                              name="attr_ensuites.max" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Search MP.Outputs[JsonSourceOutput].ExternalColumns[attr_toilets.min]"
                              dataType="wstr"
                              length="1020"
                              name="attr_toilets.min" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Search MP.Outputs[JsonSourceOutput].ExternalColumns[attr_toilets.max]"
                              dataType="wstr"
                              length="1020"
                              name="attr_toilets.max" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Search MP.Outputs[JsonSourceOutput].ExternalColumns[attr_living_areas.min]"
                              dataType="wstr"
                              length="80"
                              name="attr_living_areas.min" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Search MP.Outputs[JsonSourceOutput].ExternalColumns[attr_living_areas.max]"
                              dataType="wstr"
                              length="80"
                              name="attr_living_areas.max" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Search MP.Outputs[JsonSourceOutput].ExternalColumns[attr_open_spaces.min]"
                              dataType="wstr"
                              length="1020"
                              name="attr_open_spaces.min" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Search MP.Outputs[JsonSourceOutput].ExternalColumns[attr_open_spaces.max]"
                              dataType="wstr"
                              length="1020"
                              name="attr_open_spaces.max" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Search MP.Outputs[JsonSourceOutput].ExternalColumns[attr_roi_pa.min]"
                              dataType="wstr"
                              length="1020"
                              name="attr_roi_pa.min" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Search MP.Outputs[JsonSourceOutput].ExternalColumns[attr_roi_pa.max]"
                              dataType="wstr"
                              length="1020"
                              name="attr_roi_pa.max" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Search MP.Outputs[JsonSourceOutput].ExternalColumns[attr_takings_pa.min]"
                              dataType="wstr"
                              length="1020"
                              name="attr_takings_pa.min" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Search MP.Outputs[JsonSourceOutput].ExternalColumns[attr_takings_pa.max]"
                              dataType="wstr"
                              length="1020"
                              name="attr_takings_pa.max" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Search MP.Outputs[JsonSourceOutput].ExternalColumns[attr_build_year.min]"
                              dataType="wstr"
                              length="1020"
                              name="attr_build_year.min" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Search MP.Outputs[JsonSourceOutput].ExternalColumns[attr_build_year.max]"
                              dataType="wstr"
                              length="1020"
                              name="attr_build_year.max" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Search MP.Outputs[JsonSourceOutput].ExternalColumns[attr_sleeps.min]"
                              dataType="wstr"
                              length="1020"
                              name="attr_sleeps.min" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Search MP.Outputs[JsonSourceOutput].ExternalColumns[attr_sleeps.max]"
                              dataType="wstr"
                              length="1020"
                              name="attr_sleeps.max" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Search MP.Outputs[JsonSourceOutput].ExternalColumns[attr_frontage.min]"
                              dataType="wstr"
                              length="1020"
                              name="attr_frontage.min" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Search MP.Outputs[JsonSourceOutput].ExternalColumns[attr_frontage.max]"
                              dataType="wstr"
                              length="1020"
                              name="attr_frontage.max" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Search MP.Outputs[JsonSourceOutput].ExternalColumns[attr_depth_left.min]"
                              dataType="wstr"
                              length="1020"
                              name="attr_depth_left.min" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Search MP.Outputs[JsonSourceOutput].ExternalColumns[attr_depth_left.max]"
                              dataType="wstr"
                              length="1020"
                              name="attr_depth_left.max" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Search MP.Outputs[JsonSourceOutput].ExternalColumns[attr_depth_right.min]"
                              dataType="wstr"
                              length="1020"
                              name="attr_depth_right.min" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Search MP.Outputs[JsonSourceOutput].ExternalColumns[attr_depth_right.max]"
                              dataType="wstr"
                              length="1020"
                              name="attr_depth_right.max" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Search MP.Outputs[JsonSourceOutput].ExternalColumns[attr_depth_rear.min]"
                              dataType="wstr"
                              length="1020"
                              name="attr_depth_rear.min" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Search MP.Outputs[JsonSourceOutput].ExternalColumns[attr_depth_rear.max]"
                              dataType="wstr"
                              length="1020"
                              name="attr_depth_rear.max" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Search MP.Outputs[JsonSourceOutput].ExternalColumns[car_spaces.min]"
                              dataType="wstr"
                              length="1020"
                              name="car_spaces.min" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Search MP.Outputs[JsonSourceOutput].ExternalColumns[car_spaces.max]"
                              dataType="wstr"
                              length="1020"
                              name="car_spaces.max" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Search MP.Outputs[JsonSourceOutput].ExternalColumns[attr_buildarea.min]"
                              dataType="wstr"
                              length="1020"
                              name="attr_buildarea.min" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Search MP.Outputs[JsonSourceOutput].ExternalColumns[attr_buildarea.max]"
                              dataType="wstr"
                              length="1020"
                              name="attr_buildarea.max" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Search MP.Outputs[JsonSourceOutput].ExternalColumns[attr_buildarea.m2_min]"
                              dataType="wstr"
                              length="1020"
                              name="attr_buildarea.m2_min" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Search MP.Outputs[JsonSourceOutput].ExternalColumns[attr_buildarea.m2_max]"
                              dataType="wstr"
                              length="1020"
                              name="attr_buildarea.m2_max" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Search MP.Outputs[JsonSourceOutput].ExternalColumns[attr_buildarea_unit.min]"
                              dataType="wstr"
                              length="1020"
                              name="attr_buildarea_unit.min" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Search MP.Outputs[JsonSourceOutput].ExternalColumns[attr_buildarea_unit.max]"
                              dataType="wstr"
                              length="1020"
                              name="attr_buildarea_unit.max" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Search MP.Outputs[JsonSourceOutput].ExternalColumns[attr_landarea.min]"
                              dataType="wstr"
                              length="1020"
                              name="attr_landarea.min" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Search MP.Outputs[JsonSourceOutput].ExternalColumns[attr_landarea.max]"
                              dataType="wstr"
                              length="1020"
                              name="attr_landarea.max" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Search MP.Outputs[JsonSourceOutput].ExternalColumns[attr_landarea.m2_min]"
                              dataType="wstr"
                              length="1020"
                              name="attr_landarea.m2_min" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Search MP.Outputs[JsonSourceOutput].ExternalColumns[attr_landarea.m2_max]"
                              dataType="wstr"
                              length="1020"
                              name="attr_landarea.m2_max" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Search MP.Outputs[JsonSourceOutput].ExternalColumns[attr_landarea_unit.min]"
                              dataType="wstr"
                              length="1020"
                              name="attr_landarea_unit.min" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Search MP.Outputs[JsonSourceOutput].ExternalColumns[attr_landarea_unit.max]"
                              dataType="wstr"
                              length="1020"
                              name="attr_landarea_unit.max" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Search MP.Outputs[JsonSourceOutput].ExternalColumns[attr_is_house_land]"
                              dataType="wstr"
                              length="1020"
                              name="attr_is_house_land" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Search MP.Outputs[JsonSourceOutput].ExternalColumns[attr_is_corner_block]"
                              dataType="wstr"
                              length="1020"
                              name="attr_is_corner_block" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Search MP.Outputs[JsonSourceOutput].ExternalColumns[attr_franchise]"
                              dataType="wstr"
                              length="1020"
                              name="attr_franchise" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Search MP.Outputs[JsonSourceOutput].ExternalColumns[attr_whole_building]"
                              dataType="wstr"
                              length="1020"
                              name="attr_whole_building" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Search MP.Outputs[JsonSourceOutput].ExternalColumns[rent_sqm.min]"
                              dataType="wstr"
                              length="1020"
                              name="rent_sqm.min" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Search MP.Outputs[JsonSourceOutput].ExternalColumns[rent_sqm.max]"
                              dataType="wstr"
                              length="1020"
                              name="rent_sqm.max" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Search MP.Outputs[JsonSourceOutput].ExternalColumns[id]"
                              dataType="i8"
                              name="id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Search MP.Outputs[JsonSourceOutput].ExternalColumns[__FileName]"
                              dataType="wstr"
                              length="600"
                              name="__FileName" />
                          </externalMetadataColumns>
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Match Profile\Search MP.Outputs[JsonSource Error Output]"
                          isErrorOut="true"
                          name="JsonSource Error Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Search MP.Outputs[JsonSource Error Output].Columns[etag]"
                              dataType="wstr"
                              length="56"
                              lineageId="Package\Iterate Offices\Sequence Container\Match Profile\Search MP.Outputs[JsonSource Error Output].Columns[etag]"
                              name="etag" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Search MP.Outputs[JsonSource Error Output].Columns[id]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Match Profile\Search MP.Outputs[JsonSource Error Output].Columns[id]"
                              name="id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Search MP.Outputs[JsonSource Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Match Profile\Search MP.Outputs[JsonSource Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Search MP.Outputs[JsonSource Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Match Profile\Search MP.Outputs[JsonSource Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Search MP.Outputs[JsonSource Error Output].Columns[ErrorColumnName]"
                              codePage="1252"
                              dataType="str"
                              length="128"
                              lineageId="Package\Iterate Offices\Sequence Container\Match Profile\Search MP.Outputs[JsonSource Error Output].Columns[ErrorColumnName]"
                              name="ErrorColumnName" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Search MP.Outputs[JsonSource Error Output].Columns[ErrorMessage]"
                              dataType="wstr"
                              length="1024"
                              lineageId="Package\Iterate Offices\Sequence Container\Match Profile\Search MP.Outputs[JsonSource Error Output].Columns[ErrorMessage]"
                              name="ErrorMessage" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Match Profile\SQL Sort"
                      componentClassID="Microsoft.Sort"
                      contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
                      name="SQL Sort"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                          name="EliminateDuplicates">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the maximum number of threads to use for sorting."
                          expressionType="Notify"
                          name="MaximumThreads">-1</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Match Profile\SQL Sort.Inputs[Sort Input]"
                          name="Sort Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\SQL Sort.Inputs[Sort Input].Columns[Id]"
                              cachedDataType="i4"
                              cachedName="Id"
                              lineageId="Package\Iterate Offices\Sequence Container\Match Profile\Existing MP from SQL.Outputs[OLE DB Source Output].Columns[Id]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">1</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\SQL Sort.Inputs[Sort Input].Columns[AccountId]"
                              cachedDataType="i2"
                              cachedName="AccountId"
                              lineageId="Package\Iterate Offices\Sequence Container\Match Profile\Existing MP from SQL.Outputs[OLE DB Source Output].Columns[AccountId]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\SQL Sort.Inputs[Sort Input].Columns[etagmp]"
                              cachedDataType="wstr"
                              cachedLength="250"
                              cachedName="etagmp"
                              lineageId="Package\Iterate Offices\Sequence Container\Match Profile\Existing MP from SQL.Outputs[OLE DB Source Output].Columns[etagmp]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Match Profile\SQL Sort.Outputs[Sort Output]"
                          isSorted="true"
                          name="Sort Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\SQL Sort.Outputs[Sort Output].Columns[Id]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Match Profile\SQL Sort.Outputs[Sort Output].Columns[Id]"
                              name="Id"
                              sortKeyPosition="1">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Iterate Offices\Sequence Container\Match Profile\Existing MP from SQL.Outputs[OLE DB Source Output].Columns[Id]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\SQL Sort.Outputs[Sort Output].Columns[AccountId]"
                              dataType="i2"
                              lineageId="Package\Iterate Offices\Sequence Container\Match Profile\SQL Sort.Outputs[Sort Output].Columns[AccountId]"
                              name="AccountId">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Iterate Offices\Sequence Container\Match Profile\Existing MP from SQL.Outputs[OLE DB Source Output].Columns[AccountId]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\SQL Sort.Outputs[Sort Output].Columns[etagmp]"
                              dataType="wstr"
                              length="250"
                              lineageId="Package\Iterate Offices\Sequence Container\Match Profile\SQL Sort.Outputs[Sort Output].Columns[etagmp]"
                              name="etagmp">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Iterate Offices\Sequence Container\Match Profile\Existing MP from SQL.Outputs[OLE DB Source Output].Columns[etagmp]}</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Match Profile\Template Transform"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Template Transform; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="Template transform allows to produce multi line string from template text. You can insert placeholders anywhere in the string. Ideal use case would be produce simple XML or JSON without use of JSON or XML Generator Transform."
                      name="Template Transform"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.String"
                          description="Template text which needs to be replaced. Any where in the text you can use input column names as placeholders (e.g. &lt;%CustomerEmail%&gt; ). You can also use user/system variable as placeholder (e.g. {{User::MyVariable}} )"
                          expressionType="Notify"
                          name="TemplateText"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">{
    "method" : "MatchProfiles::read",
    "args" : {
        "id" : &lt;%id%&gt;
    }
}</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.TemplateTransform</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Match Profile\Template Transform.Inputs[TemplateTransformInput]"
                          name="TemplateTransformInput">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Template Transform.Inputs[TemplateTransformInput].Columns[id]"
                              cachedDataType="i4"
                              cachedName="id"
                              cachedSortKeyPosition="1"
                              lineageId="Package\Iterate Offices\Sequence Container\Match Profile\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[id]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Match Profile\Template Transform.Outputs[TemplateTransformOutput]"
                          errorOrTruncationOperation="Error"
                          name="TemplateTransformOutput"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Match Profile\Template Transform.Inputs[TemplateTransformInput]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Template Transform.Outputs[TemplateTransformOutput].Columns[TemplateOutput]"
                              dataType="nText"
                              description="Template output column which will contain replaced text."
                              lineageId="Package\Iterate Offices\Sequence Container\Match Profile\Template Transform.Outputs[TemplateTransformOutput].Columns[TemplateOutput]"
                              name="TemplateOutput" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Match Profile\Trash Destination"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Trash Destination; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="The trash destination is used to create dummy destination which ends data path without any processing."
                      name="Trash Destination"
                      version="2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.String"
                          description="File path where you want to save data"
                          expressionType="Notify"
                          name="FilePath"></property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates if you want to save input data to comma separated text file"
                          expressionType="Notify"
                          name="SaveDataToFile">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Append data to file"
                          expressionType="Notify"
                          name="Append">false</property>
                        <property
                          dataType="System.String"
                          description="RowSeparator"
                          expressionType="Notify"
                          name="RowSeparator">{NEWLINE}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether you want to overwrite target file if exists"
                          expressionType="Notify"
                          name="OverwriteFileIfExists">true</property>
                        <property
                          dataType="System.String"
                          description="ColumnSeparator"
                          expressionType="Notify"
                          name="ColumnSeparator">,</property>
                        <property
                          dataType="System.Boolean"
                          description="SupportUnicode"
                          expressionType="Notify"
                          name="SupportUnicode">true</property>
                        <property
                          dataType="System.Boolean"
                          description="ColumnNamesInFirstRow"
                          expressionType="Notify"
                          name="ColumnNamesInFirstRow">true</property>
                        <property
                          dataType="System.Boolean"
                          description="QuoteDataIfNeeded"
                          expressionType="Notify"
                          name="QuoteDataIfNeeded">true</property>
                        <property
                          dataType="System.String"
                          description="Date time format string for any column with DT_DBDATETIME, DT_DBDATETIME2 or DB_DATE format"
                          expressionType="Notify"
                          name="DateTimeFormat">yyyy-MM-dd HH:mm:ss</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.TrashDestination</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Match Profile\Trash Destination.Inputs[TrashDestinationInput]"
                          hasSideEffects="true"
                          name="TrashDestinationInput">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Match Profile\Trash Destination 1"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Trash Destination; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="The trash destination is used to create dummy destination which ends data path without any processing."
                      name="Trash Destination 1"
                      version="2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.String"
                          description="File path where you want to save data"
                          expressionType="Notify"
                          name="FilePath"></property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates if you want to save input data to comma separated text file"
                          expressionType="Notify"
                          name="SaveDataToFile">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Append data to file"
                          expressionType="Notify"
                          name="Append">false</property>
                        <property
                          dataType="System.String"
                          description="RowSeparator"
                          expressionType="Notify"
                          name="RowSeparator">{NEWLINE}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether you want to overwrite target file if exists"
                          expressionType="Notify"
                          name="OverwriteFileIfExists">true</property>
                        <property
                          dataType="System.String"
                          description="ColumnSeparator"
                          expressionType="Notify"
                          name="ColumnSeparator">,</property>
                        <property
                          dataType="System.Boolean"
                          description="SupportUnicode"
                          expressionType="Notify"
                          name="SupportUnicode">true</property>
                        <property
                          dataType="System.Boolean"
                          description="ColumnNamesInFirstRow"
                          expressionType="Notify"
                          name="ColumnNamesInFirstRow">true</property>
                        <property
                          dataType="System.Boolean"
                          description="QuoteDataIfNeeded"
                          expressionType="Notify"
                          name="QuoteDataIfNeeded">true</property>
                        <property
                          dataType="System.String"
                          description="Date time format string for any column with DT_DBDATETIME, DT_DBDATETIME2 or DB_DATE format"
                          expressionType="Notify"
                          name="DateTimeFormat">yyyy-MM-dd HH:mm:ss</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.TrashDestination</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Match Profile\Trash Destination 1.Inputs[TrashDestinationInput]"
                          hasSideEffects="true"
                          name="TrashDestinationInput">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Match Profile\Upsert MP"
                      componentClassID="Microsoft.OLEDBCommand"
                      contactInfo="OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
                      description="Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time."
                      name="Upsert MP"
                      usesDispositions="true"
                      version="2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">0</property>
                        <property
                          dataType="System.String"
                          description="The SQL command to be executed."
                          expressionType="Notify"
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">exec [UpsertMP] ?,?,?</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Iterate Offices\Sequence Container\Match Profile\Upsert MP.Connections[OleDbConnection]"
                          connectionManagerID="Package.ConnectionManagers[colsqlbi01v.Entities]"
                          connectionManagerRefId="Package.ConnectionManagers[colsqlbi01v.Entities]"
                          description="The OLE DB runtime connection used to access the database."
                          name="OleDbConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Match Profile\Upsert MP.Inputs[OLE DB Command Input]"
                          errorOrTruncationOperation="Command Execution"
                          errorRowDisposition="FailComponent"
                          hasSideEffects="true"
                          name="OLE DB Command Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Upsert MP.Inputs[OLE DB Command Input].Columns[Origin]"
                              cachedDataType="i4"
                              cachedName="Origin"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Match Profile\Upsert MP.Inputs[OLE DB Command Input].ExternalColumns[@Origin]"
                              lineageId="Package\Iterate Offices\Sequence Container\Match Profile\Add accountid and origin.Outputs[Derived Column Output].Columns[Origin]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Upsert MP.Inputs[OLE DB Command Input].Columns[AccountId]"
                              cachedDataType="i4"
                              cachedName="AccountId"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Match Profile\Upsert MP.Inputs[OLE DB Command Input].ExternalColumns[@accountid]"
                              lineageId="Package\Iterate Offices\Sequence Container\Match Profile\Add accountid and origin.Outputs[Derived Column Output].Columns[AccountId]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Upsert MP.Inputs[OLE DB Command Input].Columns[__DOCUMENT__]"
                              cachedDataType="nText"
                              cachedName="__DOCUMENT__"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Match Profile\Upsert MP.Inputs[OLE DB Command Input].ExternalColumns[@body]"
                              lineageId="Package\Iterate Offices\Sequence Container\Match Profile\Rip out of the result.Outputs[JsonParserTransformOutput].Columns[__DOCUMENT__]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Upsert MP.Inputs[OLE DB Command Input].ExternalColumns[@Origin]"
                              dataType="i2"
                              name="@Origin">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                                  name="DBParamInfoFlags">81</property>
                              </properties>
                            </externalMetadataColumn>
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Upsert MP.Inputs[OLE DB Command Input].ExternalColumns[@body]"
                              dataType="nText"
                              name="@body">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                                  name="DBParamInfoFlags">193</property>
                              </properties>
                            </externalMetadataColumn>
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Upsert MP.Inputs[OLE DB Command Input].ExternalColumns[@accountid]"
                              dataType="i4"
                              name="@accountid">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                                  name="DBParamInfoFlags">81</property>
                              </properties>
                            </externalMetadataColumn>
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Match Profile\Upsert MP.Outputs[OLE DB Command Output]"
                          exclusionGroup="1"
                          name="OLE DB Command Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Match Profile\Upsert MP.Inputs[OLE DB Command Input]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Match Profile\Upsert MP.Outputs[OLE DB Command Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="OLE DB Command Error Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Match Profile\Upsert MP.Inputs[OLE DB Command Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Upsert MP.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Match Profile\Upsert MP.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Match Profile\Upsert MP.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Match Profile\Upsert MP.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                  </components>
                  <paths>
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Match Profile.Paths[Derived Column Output]"
                      endId="Package\Iterate Offices\Sequence Container\Match Profile\Upsert MP.Inputs[OLE DB Command Input]"
                      name="Derived Column Output"
                      startId="Package\Iterate Offices\Sequence Container\Match Profile\Add accountid and origin.Outputs[Derived Column Output]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Match Profile.Paths[ignore]"
                      endId="Package\Iterate Offices\Sequence Container\Match Profile\Trash Destination.Inputs[TrashDestinationInput]"
                      name="ignore"
                      startId="Package\Iterate Offices\Sequence Container\Match Profile\Insert or Ignore.Outputs[ignore]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Match Profile.Paths[JsonParserTransformOutput]"
                      endId="Package\Iterate Offices\Sequence Container\Match Profile\Multicast.Inputs[Multicast Input 1]"
                      name="JsonParserTransformOutput"
                      startId="Package\Iterate Offices\Sequence Container\Match Profile\Rip out of the result.Outputs[JsonParserTransformOutput]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Match Profile.Paths[JsonSourceOutput]"
                      endId="Package\Iterate Offices\Sequence Container\Match Profile\API Sort.Inputs[Sort Input]"
                      name="JsonSourceOutput"
                      startId="Package\Iterate Offices\Sequence Container\Match Profile\Search MP.Outputs[JsonSourceOutput]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Match Profile.Paths[Merge Join Output]"
                      endId="Package\Iterate Offices\Sequence Container\Match Profile\Insert or Ignore.Inputs[Conditional Split Input]"
                      name="Merge Join Output"
                      startId="Package\Iterate Offices\Sequence Container\Match Profile\Merge Join To Find Those to Insert.Outputs[Merge Join Output]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Match Profile.Paths[Multicast Output 1]"
                      endId="Package\Iterate Offices\Sequence Container\Match Profile\Add accountid and origin.Inputs[Derived Column Input]"
                      name="Multicast Output 1"
                      startId="Package\Iterate Offices\Sequence Container\Match Profile\Multicast.Outputs[Multicast Output 1]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Match Profile.Paths[OLE DB Source Output]"
                      endId="Package\Iterate Offices\Sequence Container\Match Profile\SQL Sort.Inputs[Sort Input]"
                      name="OLE DB Source Output"
                      startId="Package\Iterate Offices\Sequence Container\Match Profile\Existing MP from SQL.Outputs[OLE DB Source Output]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Match Profile.Paths[Response Output]"
                      endId="Package\Iterate Offices\Sequence Container\Match Profile\Rip out of the result.Inputs[JsonParserTransformInput]"
                      name="Response Output"
                      startId="Package\Iterate Offices\Sequence Container\Match Profile\Read details (throttled).Outputs[Response Output]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Match Profile.Paths[Sort Output]"
                      endId="Package\Iterate Offices\Sequence Container\Match Profile\Merge Join To Find Those to Insert.Inputs[Merge Join Right Input]"
                      name="Sort Output"
                      startId="Package\Iterate Offices\Sequence Container\Match Profile\SQL Sort.Outputs[Sort Output]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Match Profile.Paths[Sort Output1]"
                      endId="Package\Iterate Offices\Sequence Container\Match Profile\Merge Join To Find Those to Insert.Inputs[Merge Join Left Input]"
                      name="Sort Output"
                      startId="Package\Iterate Offices\Sequence Container\Match Profile\API Sort.Outputs[Sort Output]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Match Profile.Paths[TemplateTransformOutput]"
                      endId="Package\Iterate Offices\Sequence Container\Match Profile\Read details (throttled).Inputs[WebApiDestinationInput]"
                      name="TemplateTransformOutput"
                      startId="Package\Iterate Offices\Sequence Container\Match Profile\Template Transform.Outputs[TemplateTransformOutput]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Match Profile.Paths[upsert]"
                      endId="Package\Iterate Offices\Sequence Container\Match Profile\Template Transform.Inputs[TemplateTransformInput]"
                      name="upsert"
                      startId="Package\Iterate Offices\Sequence Container\Match Profile\Insert or Ignore.Outputs[upsert]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Match Profile.Paths[WebApiDestination Error Output]"
                      endId="Package\Iterate Offices\Sequence Container\Match Profile\Trash Destination 1.Inputs[TrashDestinationInput]"
                      name="WebApiDestination Error Output"
                      startId="Package\Iterate Offices\Sequence Container\Match Profile\Read details (throttled).Outputs[WebApiDestination Error Output]" />
                  </paths>
                </pipeline>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Iterate Offices\Sequence Container\Notes (stream)"
              DTS:CreationName="Microsoft.Pipeline"
              DTS:Description="Data Flow Task"
              DTS:DTSID="{CEF95F64-D97A-421C-8D20-7E87682BF83E}"
              DTS:ExecutableType="Microsoft.Pipeline"
              DTS:LocaleID="-1"
              DTS:ObjectName="Notes (stream)"
              DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:ObjectData>
                <pipeline
                  version="1">
                  <components>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Add accountid and origin"
                      componentClassID="Microsoft.DerivedColumn"
                      contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                      name="Add accountid and origin"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Add accountid and origin.Inputs[Derived Column Input]"
                          description="Input to the Derived Column Transformation"
                          name="Derived Column Input">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Add accountid and origin.Outputs[Derived Column Output]"
                          description="Default Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          name="Derived Column Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Notes (stream)\Add accountid and origin.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Add accountid and origin.Outputs[Derived Column Output].Columns[AccountId]"
                              dataType="i4"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Iterate Offices\Sequence Container\Notes (stream)\Add accountid and origin.Outputs[Derived Column Output].Columns[AccountId]"
                              name="AccountId"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">@[User::RexAccountID]</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">@[User::RexAccountID]</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Add accountid and origin.Outputs[Derived Column Output].Columns[Origin]"
                              dataType="i4"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Iterate Offices\Sequence Container\Notes (stream)\Add accountid and origin.Outputs[Derived Column Output].Columns[Origin]"
                              name="Origin"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">2</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">2</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Add accountid and origin.Outputs[Derived Column Error Output]"
                          description="Error Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Derived Column Error Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Notes (stream)\Add accountid and origin.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Add accountid and origin.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Notes (stream)\Add accountid and origin.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Add accountid and origin.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Notes (stream)\Add accountid and origin.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Notes (stream)\API Sort"
                      componentClassID="Microsoft.Sort"
                      contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
                      name="API Sort"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                          name="EliminateDuplicates">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the maximum number of threads to use for sorting."
                          expressionType="Notify"
                          name="MaximumThreads">-1</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Notes (stream)\API Sort.Inputs[Sort Input]"
                          name="Sort Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\API Sort.Inputs[Sort Input].Columns[etag]"
                              cachedDataType="wstr"
                              cachedLength="68"
                              cachedName="etag"
                              lineageId="Package\Iterate Offices\Sequence Container\Notes (stream)\Search Notes.Outputs[JsonSourceOutput].Columns[etag]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\API Sort.Inputs[Sort Input].Columns[id]"
                              cachedDataType="i4"
                              cachedName="id"
                              lineageId="Package\Iterate Offices\Sequence Container\Notes (stream)\Search Notes.Outputs[JsonSourceOutput].Columns[id]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">1</property>
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Notes (stream)\API Sort.Outputs[Sort Output]"
                          isSorted="true"
                          name="Sort Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\API Sort.Outputs[Sort Output].Columns[etag]"
                              dataType="wstr"
                              length="68"
                              lineageId="Package\Iterate Offices\Sequence Container\Notes (stream)\API Sort.Outputs[Sort Output].Columns[etag]"
                              name="etag">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Iterate Offices\Sequence Container\Notes (stream)\Search Notes.Outputs[JsonSourceOutput].Columns[etag]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\API Sort.Outputs[Sort Output].Columns[id]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Notes (stream)\API Sort.Outputs[Sort Output].Columns[id]"
                              name="id"
                              sortKeyPosition="1">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Iterate Offices\Sequence Container\Notes (stream)\Search Notes.Outputs[JsonSourceOutput].Columns[id]}</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Existing Notes from SQL"
                      componentClassID="Microsoft.OLEDBSource"
                      contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                      description="OLE DB Source"
                      name="Existing Notes from SQL"
                      usesDispositions="true"
                      version="7">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">0</property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the database object used to open a rowset."
                          name="OpenRowset">[dbo].[vwContacts]</property>
                        <property
                          dataType="System.String"
                          description="Specifies the variable that contains the name of the database object used to open a rowset."
                          name="OpenRowsetVariable"></property>
                        <property
                          dataType="System.String"
                          description="The SQL command to be executed."
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">SELECT [Id], 
       [etag] as etagnote, 
       [AccountId]
FROM [Entities].[dbo].Notes with (NOLOCK)
WHERE [AccountId] = ?</property>
                        <property
                          dataType="System.String"
                          description="The variable that contains the SQL command to be executed."
                          name="SqlCommandVariable"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Boolean"
                          description="Forces the use of the DefaultCodePage property value when describing character data."
                          name="AlwaysUseDefaultCodePage">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the mode used to access the database."
                          name="AccessMode"
                          typeConverter="AccessMode">2</property>
                        <property
                          dataType="System.String"
                          description="The mappings between the parameters in the SQL command and variables."
                          name="ParameterMapping">"Parameter0:Input",{EE81ACF9-9058-4481-A346-732989159AA5};</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Existing Notes from SQL.Connections[OleDbConnection]"
                          connectionManagerID="Package.ConnectionManagers[colsqlbi01v.Entities]"
                          connectionManagerRefId="Package.ConnectionManagers[colsqlbi01v.Entities]"
                          description="The OLE DB runtime connection used to access the database."
                          name="OleDbConnection" />
                      </connections>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Existing Notes from SQL.Outputs[OLE DB Source Output]"
                          name="OLE DB Source Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Existing Notes from SQL.Outputs[OLE DB Source Output].Columns[Id]"
                              dataType="i4"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Notes (stream)\Existing Notes from SQL.Outputs[OLE DB Source Output].ExternalColumns[Id]"
                              lineageId="Package\Iterate Offices\Sequence Container\Notes (stream)\Existing Notes from SQL.Outputs[OLE DB Source Output].Columns[Id]"
                              name="Id"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Existing Notes from SQL.Outputs[OLE DB Source Output].Columns[AccountId]"
                              dataType="i2"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Notes (stream)\Existing Notes from SQL.Outputs[OLE DB Source Output].ExternalColumns[AccountId]"
                              lineageId="Package\Iterate Offices\Sequence Container\Notes (stream)\Existing Notes from SQL.Outputs[OLE DB Source Output].Columns[AccountId]"
                              name="AccountId"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Existing Notes from SQL.Outputs[OLE DB Source Output].Columns[etagnote]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Notes (stream)\Existing Notes from SQL.Outputs[OLE DB Source Output].ExternalColumns[etagnote]"
                              length="250"
                              lineageId="Package\Iterate Offices\Sequence Container\Notes (stream)\Existing Notes from SQL.Outputs[OLE DB Source Output].Columns[etagnote]"
                              name="etagnote"
                              truncationRowDisposition="FailComponent" />
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Existing Notes from SQL.Outputs[OLE DB Source Output].ExternalColumns[Id]"
                              dataType="i4"
                              name="Id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Existing Notes from SQL.Outputs[OLE DB Source Output].ExternalColumns[AccountId]"
                              codePage="1252"
                              dataType="str"
                              length="4"
                              name="AccountId" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Existing Notes from SQL.Outputs[OLE DB Source Output].ExternalColumns[etagnote]"
                              dataType="wstr"
                              length="250"
                              name="etagnote" />
                          </externalMetadataColumns>
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Existing Notes from SQL.Outputs[OLE DB Source Error Output]"
                          isErrorOut="true"
                          name="OLE DB Source Error Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Existing Notes from SQL.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Notes (stream)\Existing Notes from SQL.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Existing Notes from SQL.Outputs[OLE DB Source Error Output].Columns[etagnote]"
                              dataType="wstr"
                              length="250"
                              lineageId="Package\Iterate Offices\Sequence Container\Notes (stream)\Existing Notes from SQL.Outputs[OLE DB Source Error Output].Columns[etagnote]"
                              name="etagnote" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Existing Notes from SQL.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Notes (stream)\Existing Notes from SQL.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Existing Notes from SQL.Outputs[OLE DB Source Error Output].Columns[Id]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Notes (stream)\Existing Notes from SQL.Outputs[OLE DB Source Error Output].Columns[Id]"
                              name="Id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Existing Notes from SQL.Outputs[OLE DB Source Error Output].Columns[AccountId]"
                              codePage="1252"
                              dataType="str"
                              length="4"
                              lineageId="Package\Iterate Offices\Sequence Container\Notes (stream)\Existing Notes from SQL.Outputs[OLE DB Source Error Output].Columns[AccountId]"
                              name="AccountId" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Insert or Ignore"
                      componentClassID="Microsoft.ConditionalSplit"
                      contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
                      name="Insert or Ignore"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Insert or Ignore.Inputs[Conditional Split Input]"
                          description="Input to the Conditional Split Transformation"
                          name="Conditional Split Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Insert or Ignore.Inputs[Conditional Split Input].Columns[etag]"
                              cachedDataType="wstr"
                              cachedLength="68"
                              cachedName="etag"
                              lineageId="Package\Iterate Offices\Sequence Container\Notes (stream)\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etag]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Insert or Ignore.Inputs[Conditional Split Input].Columns[etagnote]"
                              cachedDataType="wstr"
                              cachedLength="250"
                              cachedName="etagnote"
                              lineageId="Package\Iterate Offices\Sequence Container\Notes (stream)\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etagnote]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Insert or Ignore.Outputs[upsert]"
                          description="Output 1 of the Conditional Split Transformation"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          exclusionGroup="1"
                          name="upsert"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Notes (stream)\Insert or Ignore.Inputs[Conditional Split Input]"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                              name="Expression">[ISNULL](#{Package\Iterate Offices\Sequence Container\Notes (stream)\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etagnote]}) || (#{Package\Iterate Offices\Sequence Container\Notes (stream)\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etagnote]}) != #{Package\Iterate Offices\Sequence Container\Notes (stream)\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etag]}</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the friendly version of the expression. This expression version uses column names."
                              expressionType="Notify"
                              name="FriendlyExpression">ISNULL(etagnote) || (etagnote) != etag</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                              name="EvaluationOrder">0</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Insert or Ignore.Outputs[ignore]"
                          description="Output 2 of the Conditional Split Transformation"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          exclusionGroup="1"
                          name="ignore"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Notes (stream)\Insert or Ignore.Inputs[Conditional Split Input]"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                              name="Expression">![ISNULL](#{Package\Iterate Offices\Sequence Container\Notes (stream)\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etagnote]})</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the friendly version of the expression. This expression version uses column names."
                              expressionType="Notify"
                              name="FriendlyExpression">!ISNULL(etagnote)</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                              name="EvaluationOrder">1</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Insert or Ignore.Outputs[Conditional Split Default Output]"
                          description="Default Output of the Conditional Split Transformation"
                          exclusionGroup="1"
                          name="Conditional Split Default Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Notes (stream)\Insert or Ignore.Inputs[Conditional Split Input]">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              name="IsDefaultOut">true</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Insert or Ignore.Outputs[Conditional Split Error Output]"
                          description="Error Output of the Conditional Split Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Conditional Split Error Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Notes (stream)\Insert or Ignore.Inputs[Conditional Split Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Insert or Ignore.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Notes (stream)\Insert or Ignore.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Insert or Ignore.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Notes (stream)\Insert or Ignore.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Merge Join To Find Those to Insert"
                      componentClassID="Microsoft.MergeJoin"
                      contactInfo="Merge Join;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Combine two sorted data flows into one using the FULL, LEFT, or INNER join. We recommend this transformation when data flows can be sorted at their sources."
                      name="Merge Join To Find Those to Insert"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of join to perform."
                          name="JoinType"
                          typeConverter="JoinType">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the number of columns in the ordering key."
                          name="NumKeyColumns">1</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the null values are treated as equal values."
                          name="TreatNullsAsEqual">true</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates the requested maximum buffers per input before blocking."
                          name="MaxBuffersPerInput">5</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Merge Join To Find Those to Insert.Inputs[Merge Join Left Input]"
                          hasSideEffects="true"
                          name="Merge Join Left Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Merge Join To Find Those to Insert.Inputs[Merge Join Left Input].Columns[etag]"
                              cachedDataType="wstr"
                              cachedLength="68"
                              cachedName="etag"
                              lineageId="Package\Iterate Offices\Sequence Container\Notes (stream)\API Sort.Outputs[Sort Output].Columns[etag]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Merge Join To Find Those to Insert.Inputs[Merge Join Left Input].Columns[id]"
                              cachedDataType="i4"
                              cachedName="id"
                              cachedSortKeyPosition="1"
                              lineageId="Package\Iterate Offices\Sequence Container\Notes (stream)\API Sort.Outputs[Sort Output].Columns[id]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Merge Join To Find Those to Insert.Inputs[Merge Join Right Input]"
                          hasSideEffects="true"
                          name="Merge Join Right Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Merge Join To Find Those to Insert.Inputs[Merge Join Right Input].Columns[Id]"
                              cachedDataType="i4"
                              cachedName="Id"
                              cachedSortKeyPosition="1"
                              lineageId="Package\Iterate Offices\Sequence Container\Notes (stream)\SQL Sort.Outputs[Sort Output].Columns[Id]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Merge Join To Find Those to Insert.Inputs[Merge Join Right Input].Columns[etagnote]"
                              cachedDataType="wstr"
                              cachedLength="250"
                              cachedName="etagnote"
                              lineageId="Package\Iterate Offices\Sequence Container\Notes (stream)\SQL Sort.Outputs[Sort Output].Columns[etagnote]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Merge Join To Find Those to Insert.Outputs[Merge Join Output]"
                          isSorted="true"
                          name="Merge Join Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etag]"
                              dataType="wstr"
                              length="68"
                              lineageId="Package\Iterate Offices\Sequence Container\Notes (stream)\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etag]"
                              name="etag">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Iterate Offices\Sequence Container\Notes (stream)\Merge Join To Find Those to Insert.Inputs[Merge Join Left Input].Columns[etag]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[id]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Notes (stream)\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[id]"
                              name="id"
                              sortKeyPosition="1">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Iterate Offices\Sequence Container\Notes (stream)\Merge Join To Find Those to Insert.Inputs[Merge Join Left Input].Columns[id]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etagnote]"
                              dataType="wstr"
                              length="250"
                              lineageId="Package\Iterate Offices\Sequence Container\Notes (stream)\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etagnote]"
                              name="etagnote">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Iterate Offices\Sequence Container\Notes (stream)\Merge Join To Find Those to Insert.Inputs[Merge Join Right Input].Columns[etagnote]}</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Read details (throttled)"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Web API Destination; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="The Web API destination can be used to send data to Web API URL (e.g. Submit or POST data to REST API/SOAP or other HTTP/HTTPS endpoints)"
                      name="Read details (throttled)"
                      usesDispositions="true"
                      version="5">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.String"
                          description="API URL you want to access"
                          expressionType="Notify"
                          name="HttpRequestUrl">{{User::RexAPIWebURLv1}}rex/batch-requests/execute</property>
                        <property
                          dataType="System.String"
                          description="Http Web Request Method (e.g. POST, GET, PUT, LIST, DELETE...). Refer your API documentation if you are not sure which method you have to use."
                          expressionType="Notify"
                          name="HttpRequestMethod">POST</property>
                        <property
                          dataType="System.String"
                          description="Set this if you want to set custom Http headers. You may use variable anywhere in the header value using syntax {{User::YourVarName}}. Syntax of Header key value pair is : &amp;lt;request&amp;gt;&amp;lt;header&amp;gt;&amp;lt;name&amp;gt;x-myheader-1&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;AAA&amp;lt;/value&amp;gt;&amp;lt;/header&amp;gt; &amp;lt;header&amp;gt;&amp;lt;name&amp;gt;x-myheader-2&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;BBB&amp;lt;/value&amp;gt;&amp;lt;/header&amp;gt;&amp;lt;/request&amp;gt;"
                          expressionType="Notify"
                          name="HttpHeaders"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">&lt;request&gt;&lt;header&gt;&lt;name&gt;Accept&lt;/name&gt;&lt;value&gt;*/*&lt;/value&gt;&lt;/header&gt;&lt;header&gt;&lt;name&gt;Cache-Control&lt;/name&gt;&lt;value&gt;no-cache&lt;/value&gt;&lt;/header&gt;&lt;header&gt;&lt;name&gt;X-App-Identifier&lt;/name&gt;&lt;value&gt;client:spicerhaart:{{System::PackageName}}:{{System::TaskName}}&lt;/value&gt;&lt;/header&gt;&lt;header&gt;&lt;name&gt;Authorization&lt;/name&gt;&lt;value&gt;Bearer {{User::RexToken}}&lt;/value&gt;&lt;/header&gt;&lt;/request&gt;</property>
                        <property
                          dataType="System.String"
                          description="User defined data you wish to send along with your HTTP Request (e.g. Upload file data, Form POST data). Usually you have to set content-type of your data but if you select RequestMethod=POST then system will automatically set content-type=application/x-www-form-urlencoded."
                          expressionType="Notify"
                          name="HttpRequestData"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies content type for data you wish to POST. If you select Default option then system default content type will be used (i.e. application/x-www-form-urlencoded). If you specify Content-Type header along with this option then header value takes precedence."
                          expressionType="Notify"
                          name="HttpRequestContentType"
                          typeConverter="ZappySys.Common.Web.HttpRequestContentType">2</property>
                        <property
                          dataType="System.Boolean"
                          description="If this option is true then component will continue without exception on 404 error (Url not found). This allows you to consume data gracefully."
                          expressionType="Notify"
                          name="ContinueOnUrlNotFoundError">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Ignore SSL certificate related errors. Example: if you getting SSL/TLS errors because of certificate expired or certificate is not from trusted authority or certificate is self-signed. By checking this option you will not get SSL/TLS error."
                          expressionType="Notify"
                          name="IgnoreCertificateErrors">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Allow unsecure ciphers/suites and curves for SSLS/TLS communication. Use this option to communicate with web servers which needs legacy / unsecured ciphers support. This option is only trigged when you change default SSL/TLS Version on advanced settings tab."
                          expressionType="Notify"
                          name="AllowUnsecureSuite">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Enable support for gzip or deflate compression. When you check this option compressed response automatically de-compressed saving bandwidth. This option is only valid if web server supports compressed response stream. Check your API documentation for more information."
                          expressionType="Notify"
                          name="EnableCompressionSupport">true</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies which security protocol is supported for HTTPS communication. Using this option you can enable legacy protocol or enforce to use latest version of security protocol (Note: TLS 1.2 is only supported in SSIS 2014 or Higher)."
                          expressionType="Notify"
                          name="SecurityProtocol"
                          typeConverter="ZappySys.PowerPack.Common.HttpsSecurityProtocolType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Wait time in milliseconds (Pause after each request). 0=No wait. Use this delay time if your API has limit on how many requests you can make in certain time frame."
                          expressionType="Notify"
                          name="WaitTime">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you redirect error to error output by default you get additional information in ErrorMessage column. Check this option if you need exact Response Body (Useful if its in JSON/XML format which needs to be parsed for additional information for later step)."
                          expressionType="Notify"
                          name="OnErrorOutputResponseBody">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Enable multiple requests using parallel threads."
                          expressionType="Notify"
                          name="EnableParallelRequests">false</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum parallel threads to use for processing multiple web requests."
                          expressionType="Notify"
                          name="MaxParallelThreads">1</property>
                        <property
                          dataType="System.Boolean"
                          description="By default one request is sent for each input row. If your API supports multiple records in a single call via HTTP Body then enable this setting. See also BodyBatchSize, BodyHeader, BodyFooter and BodyRowSeparator property."
                          expressionType="Notify"
                          name="EnableBodyBatch">true</property>
                        <property
                          dataType="System.String"
                          description="When you have to wrap input content between opening and closing tags for each call then set this property to specify opening for body content. For Example if you want to build Body like this (send max 100 rows per call) ==&gt; { records : [ {...}, {...}, {...} ] } then you can set BatchSize=100, BodyHeader as &quot;{ records: [&quot; , BodyFooter as &quot;] }&quot; and BodyRowSeperator as comma {,}. This property is ignored if EnableBodyBatch=false."
                          expressionType="Notify"
                          name="BodyHeader">{   "requests": [</property>
                        <property
                          dataType="System.String"
                          description="When you have to wrap input content between opening and closing tags for each call then set this property to specify closing for body content. For Example if you want to build Body like this (send max 100 rows per call) ==&gt; { records : [ {...}, {...}, {...} ] } then you can set BatchSize=100, BodyHeader as &quot;{ records: [&quot; , BodyFooter as &quot;] }&quot; and BodyRowSeperator as comma {,}. This property is ignored if EnableBodyBatch=false."
                          expressionType="Notify"
                          name="BodyFooter">]}</property>
                        <property
                          dataType="System.Int32"
                          description="If your API supports multiple records via HTTP Body then change this setting &gt; 1 to include multiple upstream records into single call. See also BodyHeader, BodyFooter and BodyRowSeparator property. This property is ignored if EnableBodyBatch=false."
                          expressionType="Notify"
                          name="BodyBatchSize">250</property>
                        <property
                          dataType="System.String"
                          description="When you submit multiple rows in a batch you can separate multiple documents / records using custom separator (e.g. in JSON Array you can use comma {,} as record separator if POST document is in array format [ {...}, {...}, {...} ] ). For last row of batch blank separator is used."
                          expressionType="Notify"
                          name="BodyRowSeparator">,</property>
                        <property
                          dataType="System.Boolean"
                          description="Returns response data as binary data (e.g. Byte Array). Check this option is response is Zip file, Image file or any non text data which needs to be exported as raw data without any encoding."
                          expressionType="Notify"
                          name="TreatResponseAsBinary">false</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.WebApiDestination</property>
                        <property
                          dataType="System.Boolean"
                          description="Check this option if you want to upload file(s) (i.e. POST RAW file data) or send data using Multi-Part encoding method (i.e. Content-Type: multipart/form-data). Multi-Part request allows you to mix key/value and upload files in same request. On the other hand raw upload allows only single file upload (without any key/value) &#xA;&#xA;==== Raw Upload (Content-Type: application/octet-stream) =====   &#xA;To upload single file in raw mode check this option and specify full file path starting with @ sign in the Body (e.g.  @c:\data\myfile.zip ) &#xA;&#xA;==== Form-Data / Multipart Upload (Content-Type: multipart/form-data) =====   &#xA;To treat your Request data as multi part fields you must specify key/value pairs separated by new lines into RequestData field (i.e. Body). Each key value pair is entered on new-line and key/value are separated using equal sign (=). Preceding and trailing spaces are ignored also blank lines are ignored. &#xA;If field value has some any special character(s) then use escape sequence (e.g. For NewLine: \r\n, For Tab: \t, For at (@): \@). When value of any field starts with at sign (@) its automatically treated as File you want to upload. By default file content type is determined based on extension however you can supply content type manually for any field using this way [ fieldname.Content-Type=some content type ]. In below example we have supplied Content-Type for file2 and SomeField1, all other fields are using default content-type.&#xA;See below Example of uploading multiple files along with additional fields.&#xA;&#xA;file1=@c:\data\Myfile1.txt&#xA;file2=@c:\data\Myfile2.json&#xA;file2.Content-Type=application/json&#xA;SomeField1=aaaaaaa&#xA;SomeField1.Content-Type=text/plain&#xA;SomeField2=12345&#xA;SomeFieldWithNewLineAndTab=This is line1\r\nThis is line2\r\nThis is \ttab \ttab \ttab&#xA;SomeFieldStartingWithAtSign=\@MyTwitterHandle&#xA;"
                          expressionType="Notify"
                          name="IsMultiPartUpload">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Enable this option if your server is expecting &#xA; (i.e. CRLF) after last Multi-Part boundary in the Body. This option is only applicable if you enabled IsMultiPartUpload and sending data in Key=value format (i.e. Mutipart). For raw file upload this option has no effect."
                          expressionType="Notify"
                          name="AddMultiPartPostamble">false</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Read details (throttled).Connections[Connection]"
                          connectionManagerID="Package.ConnectionManagers[HTTP 1]"
                          connectionManagerRefId="Package.ConnectionManagers[HTTP 1]"
                          description="Connection manager for authentication (e.g. HTTP or OAuth Connection)"
                          name="Connection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Read details (throttled).Inputs[WebApiDestinationInput]"
                          errorRowDisposition="FailComponent"
                          hasSideEffects="true"
                          name="WebApiDestinationInput"
                          truncationRowDisposition="FailComponent">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Read details (throttled).Inputs[WebApiDestinationInput].Columns[TemplateOutput]"
                              cachedDataType="nText"
                              cachedName="TemplateOutput"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Notes (stream)\Read details (throttled).Inputs[WebApiDestinationInput].ExternalColumns[HttpRequestData]"
                              lineageId="Package\Iterate Offices\Sequence Container\Notes (stream)\Template Transform.Outputs[TemplateTransformOutput].Columns[TemplateOutput]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Read details (throttled).Inputs[WebApiDestinationInput].ExternalColumns[HttpRequestUrl]"
                              dataType="wstr"
                              length="2000"
                              name="HttpRequestUrl" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Read details (throttled).Inputs[WebApiDestinationInput].ExternalColumns[HttpRequestData]"
                              dataType="nText"
                              name="HttpRequestData" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Read details (throttled).Inputs[WebApiDestinationInput].ExternalColumns[HttpHeaders]"
                              dataType="wstr"
                              length="2000"
                              name="HttpHeaders" />
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Read details (throttled).Outputs[WebApiDestination Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="WebApiDestination Error Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Notes (stream)\Read details (throttled).Inputs[WebApiDestinationInput]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Read details (throttled).Outputs[WebApiDestination Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Notes (stream)\Read details (throttled).Outputs[WebApiDestination Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Read details (throttled).Outputs[WebApiDestination Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Notes (stream)\Read details (throttled).Outputs[WebApiDestination Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Read details (throttled).Outputs[WebApiDestination Error Output].Columns[ErrorColumnName]"
                              codePage="1252"
                              dataType="str"
                              length="128"
                              lineageId="Package\Iterate Offices\Sequence Container\Notes (stream)\Read details (throttled).Outputs[WebApiDestination Error Output].Columns[ErrorColumnName]"
                              name="ErrorColumnName" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Read details (throttled).Outputs[WebApiDestination Error Output].Columns[ErrorMessage]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\Notes (stream)\Read details (throttled).Outputs[WebApiDestination Error Output].Columns[ErrorMessage]"
                              name="ErrorMessage" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Read details (throttled).Outputs[Response Output]"
                          exclusionGroup="1"
                          name="Response Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Notes (stream)\Read details (throttled).Inputs[WebApiDestinationInput]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Read details (throttled).Outputs[Response Output].Columns[ResponseText]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\Notes (stream)\Read details (throttled).Outputs[Response Output].Columns[ResponseText]"
                              name="ResponseText" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Read details (throttled).Outputs[Response Output].Columns[StatusCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Notes (stream)\Read details (throttled).Outputs[Response Output].Columns[StatusCode]"
                              name="StatusCode" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Notes (stream)\record"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="JSON Parser Transform; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="Parse incoming JSON String into columns. You can also parse and transform single JSON record into multiple rows by filtering data based on JSON Path (e.g. $.Customer.Orders[*])"
                      name="record"
                      usesDispositions="true"
                      version="2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">3</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for any numeric data types"
                          expressionType="Notify"
                          name="TreatBlankNumberAsNull">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for bool data types"
                          expressionType="Notify"
                          name="TreatBlankBoolAsNull">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for any date/time data types"
                          expressionType="Notify"
                          name="TreatBlankDateAsNull">true</property>
                        <property
                          dataType="System.String"
                          description="Sample JSON data used to parse output columns."
                          expressionType="Notify"
                          name="SampleData"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">{"result":[{"system_record_state":"active","system_ctime":1612702377,"system_modtime":1612702377,"reminder_id":null,"etag":"16462468-1612702377","security_user_rights":["read","update","trash"],"note":"Listing was not published to FLINK - Block loading: 1, Images: 1, Discreet marketing: 1, New home: null, Category: EA Sales","related":{"note_contacts":[],"note_market_leads":[],"note_properties":[{"id":"10481389","property":{"system_search_key":"7 Lower Stonehayes, Milton Keynes, Milton Keynes MK14 5ES","adr_longitude":null,"adr_latitude":null,"adr_unit_number":null,"adr_street_number":"7","adr_street_name":"Lower Stonehayes","adr_state_or_region":"Milton Keynes","adr_locality":"Great Linford","adr_suburb_or_town":"Milton Keynes","adr_postcode":"MK14 5ES","adr_country":"uk","adr_estate_name":null,"adr_estate_stage":null,"system_owner_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"adr_building":null,"property_category":{"id":"residential","text":"Residential"},"property_image":{"uri":"rexlive:\/\/1755\/listings\/53809\/images\/7-Lower-Stonehayes_0_7176-e877-3c30-785a-a5fd-2185-330f-fc77_20210219012128.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/53809\/images\/7-Lower-Stonehayes_0_7176-e877-3c30-785a-a5fd-2185-330f-fc77_20210219012128.jpg","thumbs":{"800x600":{"uri":"rexlive:\/\/1755\/listings\/53809\/images\/7-Lower-Stonehayes_0_7176-e877-3c30-785a-a5fd-2185-330f-fc77_20210219012128_800x600.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/53809\/images\/7-Lower-Stonehayes_0_7176-e877-3c30-785a-a5fd-2185-330f-fc77_20210219012128_800x600.jpg"},"400x300":{"uri":"rexlive:\/\/1755\/listings\/53809\/images\/7-Lower-Stonehayes_0_7176-e877-3c30-785a-a5fd-2185-330f-fc77_20210219012128_400x300.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/53809\/images\/7-Lower-Stonehayes_0_7176-e877-3c30-785a-a5fd-2185-330f-fc77_20210219012128_400x300.jpg"},"200x150":{"uri":"rexlive:\/\/1755\/listings\/53809\/images\/7-Lower-Stonehayes_0_7176-e877-3c30-785a-a5fd-2185-330f-fc77_20210219012128_200x150.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/53809\/images\/7-Lower-Stonehayes_0_7176-e877-3c30-785a-a5fd-2185-330f-fc77_20210219012128_200x150.jpg"},"80x60":{"uri":"rexlive:\/\/1755\/listings\/53809\/images\/7-Lower-Stonehayes_0_7176-e877-3c30-785a-a5fd-2185-330f-fc77_20210219012128_80x60.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/53809\/images\/7-Lower-Stonehayes_0_7176-e877-3c30-785a-a5fd-2185-330f-fc77_20210219012128_80x60.jpg"},"original":{"uri":"rexlive:\/\/1755\/listings\/53809\/images\/7-Lower-Stonehayes_0_7176-e877-3c30-785a-a5fd-2185-330f-fc77_20210219012128_original.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/53809\/images\/7-Lower-Stonehayes_0_7176-e877-3c30-785a-a5fd-2185-330f-fc77_20210219012128_original.jpg"}}},"etag":"603920-1617007496","id":"603920"}}],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"system_created_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16462468},{"system_record_state":"active","system_ctime":1612710447,"system_modtime":1612710448,"reminder_id":null,"etag":"16465551-1612710448","security_user_rights":["read","update","trash"],"note":"DMA ID: 13171870","related":{"note_contacts":[],"note_market_leads":[{"id":"3970482","market_lead":{"system_label":"FURZEN CLOSE, Dunstable LU6 3EN","assignee":null,"lead_status":{"id":"26743","text":"Door Number Required"},"id":819640}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"system_created_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16465551},{"system_record_state":"active","system_ctime":1612710449,"system_modtime":1612710449,"reminder_id":null,"etag":"16465553-1612710449","security_user_rights":["read","update","trash"],"note":"DMA ID: 13171871","related":{"note_contacts":[],"note_market_leads":[{"id":"3970484","market_lead":{"system_label":"7 Station Road, Newport Pagnell MK16 0AG","assignee":null,"lead_status":{"id":"26741","text":"Contact Details Required"},"id":819643}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"system_created_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16465553},{"system_record_state":"active","system_ctime":1612710451,"system_modtime":1612710451,"reminder_id":null,"etag":"16465555-1612710451","security_user_rights":["read","update","trash"],"note":"DMA ID: 13171872","related":{"note_contacts":[],"note_market_leads":[{"id":"3970486","market_lead":{"system_label":"4 TREVITHICK LANE, Shenley Lodge, Milton Keynes MK5 7EE","assignee":null,"lead_status":{"id":"26741","text":"Contact Details Required"},"id":819645}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"system_created_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16465555},{"system_record_state":"active","system_ctime":1612714182,"system_modtime":1612714183,"reminder_id":null,"etag":"16467468-1612714183","security_user_rights":["read","update","trash"],"note":"Price reduction from \u00a3525,000 to \u00a3500,000","related":{"note_contacts":[],"note_market_leads":[{"id":"3972360","market_lead":{"system_label":"30 Burr Close, Kempston, Bedford MK42 7FF","assignee":null,"lead_status":{"id":"26741","text":"Contact Details Required"},"id":746853}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"system_created_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16467468},{"system_record_state":"active","system_ctime":1612714185,"system_modtime":1612714185,"reminder_id":null,"etag":"16467469-1612714185","security_user_rights":["read","update","trash"],"note":"Rightmove Process: full address found","related":{"note_contacts":[],"note_market_leads":[{"id":"3972361","market_lead":{"system_label":"THE GREEN, Radwell MK43 7HT","assignee":null,"lead_status":{"id":"26744","text":"In Contact"},"id":814002}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"system_created_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16467469},{"system_record_state":"active","system_ctime":1612714193,"system_modtime":1612714193,"reminder_id":null,"etag":"16467470-1612714193","security_user_rights":["read","update","trash"],"note":"Rightmove Process: full address found","related":{"note_contacts":[],"note_market_leads":[{"id":"3972362","market_lead":{"system_label":"5 EATON PARK, Eaton Bray LU6 2SP","assignee":null,"lead_status":{"id":"26573","text":"New Lead"},"id":817941}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"system_created_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16467470},{"system_record_state":"active","system_ctime":1612714197,"system_modtime":1612714197,"reminder_id":null,"etag":"16467471-1612714197","security_user_rights":["read","update","trash"],"note":"Rightmove Process: full address found","related":{"note_contacts":[],"note_market_leads":[{"id":"3972363","market_lead":{"system_label":"THE GRANGE THE GROVE, Houghton Conquest MK45 3JU","assignee":null,"lead_status":{"id":"26741","text":"Contact Details Required"},"id":817945}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"system_created_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16467471},{"system_record_state":"active","system_ctime":1612714202,"system_modtime":1612714202,"reminder_id":null,"etag":"16467473-1612714202","security_user_rights":["read","update","trash"],"note":"Rightmove Process: full address found","related":{"note_contacts":[],"note_market_leads":[{"id":"3972365","market_lead":{"system_label":"4 TREVITHICK LANE, Shenley Lodge, Milton Keynes MK5 7EE","assignee":null,"lead_status":{"id":"26741","text":"Contact Details Required"},"id":819645}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"system_created_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16467473},{"system_record_state":"active","system_ctime":1612716288,"system_modtime":1612716288,"reminder_id":null,"etag":"16468687-1612716288","security_user_rights":["read","update","trash"],"note":"Listing was not published to FLINK - Block loading: 1, Images: 1, Discreet marketing: 1, New home: null, Category: EA Sales","related":{"note_contacts":[],"note_market_leads":[],"note_properties":[{"id":"10481501","property":{"system_search_key":"17 Foxley Place, MILTON KEYNES MK5 8BU","adr_longitude":"-0.77259126581538","adr_latitude":"52.030128524616","adr_unit_number":null,"adr_street_number":"17","adr_street_name":"Foxley Place","adr_state_or_region":null,"adr_locality":"Loughton","adr_suburb_or_town":"MILTON KEYNES","adr_postcode":"MK5 8BU","adr_country":"uk","adr_estate_name":null,"adr_estate_stage":null,"system_owner_user":{"id":"19522","name":"Steven Field","first_name":"Steven","last_name":"Field","email_address":"steven.field@chewtonrose.co.uk"},"adr_building":null,"property_category":{"id":"residential","text":"Residential"},"property_image":{"uri":"rexlive:\/\/1755\/listings\/53213\/images\/17FoxleyPlace-16_9e11-0129-5c31-d5c5-f187-e108-9bf7-6cf1_20210210124405.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/53213\/images\/17FoxleyPlace-16_9e11-0129-5c31-d5c5-f187-e108-9bf7-6cf1_20210210124405.jpg","thumbs":{"800x600":{"uri":"rexlive:\/\/1755\/listings\/53213\/images\/17FoxleyPlace-16_9e11-0129-5c31-d5c5-f187-e108-9bf7-6cf1_20210210124405_800x600.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/53213\/images\/17FoxleyPlace-16_9e11-0129-5c31-d5c5-f187-e108-9bf7-6cf1_20210210124405_800x600.jpg"},"400x300":{"uri":"rexlive:\/\/1755\/listings\/53213\/images\/17FoxleyPlace-16_9e11-0129-5c31-d5c5-f187-e108-9bf7-6cf1_20210210124405_400x300.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/53213\/images\/17FoxleyPlace-16_9e11-0129-5c31-d5c5-f187-e108-9bf7-6cf1_20210210124405_400x300.jpg"},"200x150":{"uri":"rexlive:\/\/1755\/listings\/53213\/images\/17FoxleyPlace-16_9e11-0129-5c31-d5c5-f187-e108-9bf7-6cf1_20210210124405_200x150.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/53213\/images\/17FoxleyPlace-16_9e11-0129-5c31-d5c5-f187-e108-9bf7-6cf1_20210210124405_200x150.jpg"},"80x60":{"uri":"rexlive:\/\/1755\/listings\/53213\/images\/17FoxleyPlace-16_9e11-0129-5c31-d5c5-f187-e108-9bf7-6cf1_20210210124405_80x60.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/53213\/images\/17FoxleyPlace-16_9e11-0129-5c31-d5c5-f187-e108-9bf7-6cf1_20210210124405_80x60.jpg"},"original":{"uri":"rexlive:\/\/1755\/listings\/53213\/images\/17FoxleyPlace-16_9e11-0129-5c31-d5c5-f187-e108-9bf7-6cf1_20210210124405_original.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/53213\/images\/17FoxleyPlace-16_9e11-0129-5c31-d5c5-f187-e108-9bf7-6cf1_20210210124405_original.jpg"}}},"etag":"17864109-1612978337","id":"17864109"}}],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"system_created_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16468687},{"system_record_state":"active","system_ctime":1612716519,"system_modtime":1612716519,"reminder_id":null,"etag":"16468761-1612716519","security_user_rights":["read","update","trash"],"note":"Listing was not published to FLINK - Block loading: 1, Images: 1, Discreet marketing: 1, New home: null, Category: EA Sales","related":{"note_contacts":[],"note_market_leads":[],"note_properties":[{"id":"10481506","property":{"system_search_key":"186 Newton Road, Milton Keynes MK3 5DE","adr_longitude":"-0.7605271","adr_latitude":"51.9859349","adr_unit_number":null,"adr_street_number":"186","adr_street_name":"Newton Road","adr_state_or_region":null,"adr_locality":"Bletchley","adr_suburb_or_town":"Milton Keynes","adr_postcode":"MK3 5DE","adr_country":"uk","adr_estate_name":null,"adr_estate_stage":null,"system_owner_user":{"id":"19521","name":"Graham Nash","first_name":"Graham","last_name":"Nash","email_address":"graham.nash@spicerhaart.co.uk"},"adr_building":null,"property_category":{"id":"residential","text":"Residential"},"property_image":{"uri":"rexlive:\/\/1755\/listings\/53372\/images\/186NewtonRoad-60_2c88-2dfa-45ef-9228-4487-b886-8421-db8a_20210211033834.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/53372\/images\/186NewtonRoad-60_2c88-2dfa-45ef-9228-4487-b886-8421-db8a_20210211033834.jpg","thumbs":{"800x600":{"uri":"rexlive:\/\/1755\/listings\/53372\/images\/186NewtonRoad-60_2c88-2dfa-45ef-9228-4487-b886-8421-db8a_20210211033834_800x600.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/53372\/images\/186NewtonRoad-60_2c88-2dfa-45ef-9228-4487-b886-8421-db8a_20210211033834_800x600.jpg"},"400x300":{"uri":"rexlive:\/\/1755\/listings\/53372\/images\/186NewtonRoad-60_2c88-2dfa-45ef-9228-4487-b886-8421-db8a_20210211033834_400x300.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/53372\/images\/186NewtonRoad-60_2c88-2dfa-45ef-9228-4487-b886-8421-db8a_20210211033834_400x300.jpg"},"200x150":{"uri":"rexlive:\/\/1755\/listings\/53372\/images\/186NewtonRoad-60_2c88-2dfa-45ef-9228-4487-b886-8421-db8a_20210211033834_200x150.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/53372\/images\/186NewtonRoad-60_2c88-2dfa-45ef-9228-4487-b886-8421-db8a_20210211033834_200x150.jpg"},"80x60":{"uri":"rexlive:\/\/1755\/listings\/53372\/images\/186NewtonRoad-60_2c88-2dfa-45ef-9228-4487-b886-8421-db8a_20210211033834_80x60.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/53372\/images\/186NewtonRoad-60_2c88-2dfa-45ef-9228-4487-b886-8421-db8a_20210211033834_80x60.jpg"},"original":{"uri":"rexlive:\/\/1755\/listings\/53372\/images\/186NewtonRoad-60_2c88-2dfa-45ef-9228-4487-b886-8421-db8a_20210211033834_original.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/53372\/images\/186NewtonRoad-60_2c88-2dfa-45ef-9228-4487-b886-8421-db8a_20210211033834_original.jpg"}}},"etag":"17873395-1612980657","id":"17873395"}}],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"system_created_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16468761},{"system_record_state":"active","system_ctime":1612764143,"system_modtime":1612764143,"reminder_id":null,"etag":"16474255-1612764143","security_user_rights":["read","update","trash"],"note":"EoC:Rightmove file (rightmove status: Sold\/Retracted)","related":{"note_contacts":[],"note_market_leads":[{"id":"3978957","market_lead":{"system_label":"12 Falldor Way, Ampthill MK45 2GD","assignee":null,"lead_status":{"id":"26741","text":"Contact Details Required"},"id":599200}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"system_created_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16474255},{"system_record_state":"active","system_ctime":1612764144,"system_modtime":1612764145,"reminder_id":null,"etag":"16474267-1612764145","security_user_rights":["read","update","trash"],"note":"EoC:Rightmove file (rightmove status: Sold\/Retracted)","related":{"note_contacts":[],"note_market_leads":[{"id":"3978969","market_lead":{"system_label":"12 St. Georges Place, Ampthill MK45 2HB","assignee":null,"lead_status":{"id":"26741","text":"Contact Details Required"},"id":614572}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"system_created_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16474267},{"system_record_state":"active","system_ctime":1612764147,"system_modtime":1612764147,"reminder_id":null,"etag":"16474280-1612764147","security_user_rights":["read","update","trash"],"note":"EoC:Rightmove file (rightmove status: Sold\/Retracted)","related":{"note_contacts":[],"note_market_leads":[{"id":"3978985","market_lead":{"system_label":"the old dairy, 25 Church Road, Bedfordshire MK17 8TG","assignee":null,"lead_status":{"id":"26741","text":"Contact Details Required"},"id":616890}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"system_created_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16474280},{"system_record_state":"active","system_ctime":1612764149,"system_modtime":1612764150,"reminder_id":null,"etag":"16474295-1612764150","security_user_rights":["read","update","trash"],"note":"EoC:Rightmove file (rightmove status: Sold\/Retracted)","related":{"note_contacts":[],"note_market_leads":[{"id":"3978998","market_lead":{"system_label":"5 LONDON ROAD, Loughton, Milton Keynes MK5 8AB","assignee":null,"lead_status":{"id":"26573","text":"New Lead"},"id":620494}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"system_created_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16474295},{"system_record_state":"active","system_ctime":1612764152,"system_modtime":1612764152,"reminder_id":null,"etag":"16474305-1612764152","security_user_rights":["read","update","trash"],"note":"EoC:Rightmove file (rightmove status: Sold\/Retracted)","related":{"note_contacts":[],"note_market_leads":[{"id":"3979010","market_lead":{"system_label":"116 VILLAGE ROAD, Bromham MK43 8HU","assignee":null,"lead_status":{"id":"26741","text":"Contact Details Required"},"id":624192}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"system_created_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16474305},{"system_record_state":"active","system_ctime":1612764155,"system_modtime":1612764155,"reminder_id":null,"etag":"16474321-1612764155","security_user_rights":["read","update","trash"],"note":"EoC:Rightmove file (rightmove status: Sold\/Retracted)","related":{"note_contacts":[],"note_market_leads":[{"id":"3979022","market_lead":{"system_label":"4 AMBLERS WAY, Buckingham MK18 2BT","assignee":null,"lead_status":{"id":"26741","text":"Contact Details Required"},"id":683489}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"system_created_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16474321},{"system_record_state":"active","system_ctime":1612764156,"system_modtime":1612764157,"reminder_id":null,"etag":"16474328-1612764157","security_user_rights":["read","update","trash"],"note":"EoC:Rightmove file (rightmove status: Sold\/Retracted)","related":{"note_contacts":[],"note_market_leads":[{"id":"3979032","market_lead":{"system_label":"19 WOOD LANE, Aspley Guise MK17 8EJ","assignee":null,"lead_status":{"id":"26741","text":"Contact Details Required"},"id":686882}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"system_created_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16474328},{"system_record_state":"active","system_ctime":1612764159,"system_modtime":1612764159,"reminder_id":null,"etag":"16474337-1612764159","security_user_rights":["read","update","trash"],"note":"EoC:Rightmove file (rightmove status: Sold\/Retracted)","related":{"note_contacts":[],"note_market_leads":[{"id":"3979040","market_lead":{"system_label":"Flat 48A GEORGE STREET, Maulden MK45 2DF","assignee":null,"lead_status":{"id":"26741","text":"Contact Details Required"},"id":688503}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"system_created_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16474337},{"system_record_state":"active","system_ctime":1612764160,"system_modtime":1612764161,"reminder_id":null,"etag":"16474347-1612764161","security_user_rights":["read","update","trash"],"note":"EoC:Rightmove file (rightmove status: Sold\/Retracted)","related":{"note_contacts":[],"note_market_leads":[{"id":"3979051","market_lead":{"system_label":"Sycamore AYLESBURY ROAD, Wing LU7 0PD","assignee":null,"lead_status":{"id":"26741","text":"Contact Details Required"},"id":692289}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"system_created_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16474347},{"system_record_state":"active","system_ctime":1612764164,"system_modtime":1612764164,"reminder_id":null,"etag":"16474366-1612764164","security_user_rights":["read","update","trash"],"note":"EoC:Rightmove file (rightmove status: Withdrawn)","related":{"note_contacts":[],"note_market_leads":[{"id":"3979068","market_lead":{"system_label":"MOUNT PLEASANT GRANG TURVEY ROAD, Stagsden MK43 8UA","assignee":null,"lead_status":{"id":"26741","text":"Contact Details Required"},"id":656827}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"system_created_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16474366},{"system_record_state":"active","system_ctime":1612764165,"system_modtime":1612764165,"reminder_id":null,"etag":"16474370-1612764165","security_user_rights":["read","update","trash"],"note":"EoC:Rightmove file (rightmove status: Sold\/Retracted)","related":{"note_contacts":[],"note_market_leads":[{"id":"3979071","market_lead":{"system_label":"westbury house PRESTON ROAD, Gawcott MK18 4HS","assignee":null,"lead_status":{"id":"26741","text":"Contact Details Required"},"id":657441}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"system_created_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16474370},{"system_record_state":"active","system_ctime":1612764166,"system_modtime":1612764166,"reminder_id":null,"etag":"16474379-1612764166","security_user_rights":["read","update","trash"],"note":"EoC:Rightmove file (rightmove status: Sold\/Retracted)","related":{"note_contacts":[],"note_market_leads":[{"id":"3979082","market_lead":{"system_label":"22 MOLIVERS LANE, Bromham MK43 8JT","assignee":null,"lead_status":{"id":"26741","text":"Contact Details Required"},"id":664889}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"system_created_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16474379},{"system_record_state":"active","system_ctime":1612764169,"system_modtime":1612764169,"reminder_id":null,"etag":"16474392-1612764169","security_user_rights":["read","update","trash"],"note":"EoC:Rightmove file (rightmove status: Sold\/Retracted)","related":{"note_contacts":[],"note_market_leads":[{"id":"3979094","market_lead":{"system_label":"THE OLD POST OFFICE HIGH STREET, Cublington LU7 0LL","assignee":null,"lead_status":{"id":"26741","text":"Contact Details Required"},"id":666982}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"system_created_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16474392},{"system_record_state":"active","system_ctime":1612764169,"system_modtime":1612764170,"reminder_id":null,"etag":"16474397-1612764170","security_user_rights":["read","update","trash"],"note":"EoC:Rightmove file (rightmove status: Sold\/Retracted)","related":{"note_contacts":[],"note_market_leads":[{"id":"3979098","market_lead":{"system_label":"orkland house BEDFORD ROAD, Stagsden MK43 8TP","assignee":null,"lead_status":{"id":"26741","text":"Contact Details Required"},"id":669816}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"system_created_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16474397},{"system_record_state":"active","system_ctime":1612764172,"system_modtime":1612764172,"reminder_id":null,"etag":"16474407-1612764172","security_user_rights":["read","update","trash"],"note":"EoC:Rightmove file (rightmove status: Sold\/Retracted)","related":{"note_contacts":[],"note_market_leads":[{"id":"3979111","market_lead":{"system_label":"SUNNY BANK WEST END, Haynes MK45 3QS","assignee":null,"lead_status":{"id":"26741","text":"Contact Details Required"},"id":674363}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"system_created_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16474407},{"system_record_state":"active","system_ctime":1612768269,"system_modtime":1612768270,"reminder_id":null,"etag":"16479326-1612768270","security_user_rights":["read","update","trash"],"note":"Record has been cleaned by Internal Wash Processing","related":{"note_contacts":[],"note_market_leads":[{"id":"3984009","market_lead":{"system_label":"THE GRANGE THE GROVE, Houghton Conquest MK45 3JU","assignee":null,"lead_status":{"id":"26741","text":"Contact Details Required"},"id":817945}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"system_created_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16479326},{"system_record_state":"active","system_ctime":1612773790,"system_modtime":1612773790,"reminder_id":null,"etag":"16481472-1612773790","security_user_rights":["read","update","trash"],"note":"This was Haart val","related":{"note_contacts":[{"id":"2751750","contact":{"system_record_state":"active","system_ctime":"1612703118","system_modtime":"1612775732","name":"Thomas Newell","email_address":"padosheesouk@gmail.com","phone_number":"07846 059782","fax_number":null,"is_dnd":null,"type":"person","last_contacted_date":"2021-02-08","name_last":"Newell","address_postal":null,"address":null,"interest_level":null,"marketing_birthday":null,"marketing_enquiry_source":"Internet - On The Market","marketing_gender":null,"marketing_postcode":null,"name_legal":null,"name_salutation":null,"name_addressee":null,"system_owner_user":{"id":0,"name":"System User","first_name":"System","last_name":"User","email_address":"no-reply@rexsoftware.com.au"},"contact_image":null,"marketing_enquiry_method":null,"etag":"2112211-1612775732","id":"2112211"}}],"note_market_leads":[],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19522","name":"Steven Field","first_name":"Steven","last_name":"Field","email_address":"steven.field@chewtonrose.co.uk"},"system_created_user":{"id":"19522","name":"Steven Field","first_name":"Steven","last_name":"Field","email_address":"steven.field@chewtonrose.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16481472},{"system_record_state":"active","system_ctime":1612775557,"system_modtime":1612775557,"reminder_id":null,"etag":"16482503-1612775557","security_user_rights":["read","update","trash"],"note":"Liked but not big enough, can go to 750K so will keep looking, but made the comment they thought price was OTT","related":{"note_contacts":[{"id":"2751808","contact":{"system_record_state":"active","system_ctime":"1612525814","system_modtime":"1612775726","name":"Helen Vanderschuit","email_address":"hleev@yahoo.com","phone_number":"07907 184751","fax_number":null,"is_dnd":null,"type":"person","last_contacted_date":"2021-02-08","name_last":"Vanderschuit","address_postal":null,"address":"Tudor Close\nBarton-le-Clay\nBEDFORD\nMK45 4NE","interest_level":null,"marketing_birthday":null,"marketing_enquiry_source":"Internet - On The Market","marketing_gender":null,"marketing_postcode":null,"name_legal":null,"name_salutation":null,"name_addressee":null,"system_owner_user":{"id":0,"name":"System User","first_name":"System","last_name":"User","email_address":"no-reply@rexsoftware.com.au"},"contact_image":null,"marketing_enquiry_method":null,"etag":"2095411-1612775726","id":"2095411"}}],"note_market_leads":[],"note_properties":[{"id":"10481949","property":{"system_search_key":"5 The Magpies, Maulden MK45 2EG","adr_longitude":"-0.46780766458101","adr_latitude":"52.031598524856","adr_unit_number":null,"adr_street_number":"5","adr_street_name":"The Magpies","adr_state_or_region":null,"adr_locality":null,"adr_suburb_or_town":"Maulden","adr_postcode":"MK45 2EG","adr_country":"uk","adr_estate_name":null,"adr_estate_stage":null,"system_owner_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"adr_building":null,"property_category":{"id":"residential","text":"Residential"},"property_image":{"uri":"rexlive:\/\/1755\/listings\/42124\/images\/5TheMagpies-54_4ac1-66d9-cf3c-bd36-400a-afcd-c780-2777_20200926014103.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/42124\/images\/5TheMagpies-54_4ac1-66d9-cf3c-bd36-400a-afcd-c780-2777_20200926014103.jpg","thumbs":{"800x600":{"uri":"rexlive:\/\/1755\/listings\/42124\/images\/5TheMagpies-54_4ac1-66d9-cf3c-bd36-400a-afcd-c780-2777_20200926014103_800x600.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/42124\/images\/5TheMagpies-54_4ac1-66d9-cf3c-bd36-400a-afcd-c780-2777_20200926014103_800x600.jpg"},"400x300":{"uri":"rexlive:\/\/1755\/listings\/42124\/images\/5TheMagpies-54_4ac1-66d9-cf3c-bd36-400a-afcd-c780-2777_20200926014103_400x300.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/42124\/images\/5TheMagpies-54_4ac1-66d9-cf3c-bd36-400a-afcd-c780-2777_20200926014103_400x300.jpg"},"200x150":{"uri":"rexlive:\/\/1755\/listings\/42124\/images\/5TheMagpies-54_4ac1-66d9-cf3c-bd36-400a-afcd-c780-2777_20200926014103_200x150.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/42124\/images\/5TheMagpies-54_4ac1-66d9-cf3c-bd36-400a-afcd-c780-2777_20200926014103_200x150.jpg"},"80x60":{"uri":"rexlive:\/\/1755\/listings\/42124\/images\/5TheMagpies-54_4ac1-66d9-cf3c-bd36-400a-afcd-c780-2777_20200926014103_80x60.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/42124\/images\/5TheMagpies-54_4ac1-66d9-cf3c-bd36-400a-afcd-c780-2777_20200926014103_80x60.jpg"},"original":{"uri":"rexlive:\/\/1755\/listings\/42124\/images\/5TheMagpies-54_4ac1-66d9-cf3c-bd36-400a-afcd-c780-2777_20200926014103_original.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/42124\/images\/5TheMagpies-54_4ac1-66d9-cf3c-bd36-400a-afcd-c780-2777_20200926014103_original.jpg"}}},"etag":"584334-1606911341","id":"584334"}}],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19522","name":"Steven Field","first_name":"Steven","last_name":"Field","email_address":"steven.field@chewtonrose.co.uk"},"system_created_user":{"id":"19522","name":"Steven Field","first_name":"Steven","last_name":"Field","email_address":"steven.field@chewtonrose.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16482503},{"system_record_state":"active","system_ctime":1612776554,"system_modtime":1612776554,"reminder_id":null,"etag":"16482692-1612776554","security_user_rights":["read","update","trash"],"note":"Liked a lot, to review","related":{"note_contacts":[{"id":"2751882","contact":{"system_record_state":"active","system_ctime":"1612366181","system_modtime":"1612861970","name":"Thomas Anderson Offer","email_address":"TOM_OFFER@HOTMAIL.COM","phone_number":"07834 626201","fax_number":null,"is_dnd":null,"type":"person","last_contacted_date":"2021-02-08","name_last":"Anderson Offer","address_postal":null,"address":"15 Redshaw Close\r\nBUCKINGHAM\r\nMK18 7BS","interest_level":null,"marketing_birthday":null,"marketing_enquiry_source":null,"marketing_gender":null,"marketing_postcode":null,"name_legal":null,"name_salutation":null,"name_addressee":null,"system_owner_user":{"id":"19522","name":"Steven Field","first_name":"Steven","last_name":"Field","email_address":"steven.field@chewtonrose.co.uk"},"contact_image":null,"marketing_enquiry_method":null,"etag":"2092435-1612861970","id":"2092435"}}],"note_market_leads":[],"note_properties":[{"id":"10482034","property":{"system_search_key":"6 High Street, Great Horwood, Buckinghamshire MK17 0QL","adr_longitude":"-0.879632","adr_latitude":"51.9736231","adr_unit_number":null,"adr_street_number":"6","adr_street_name":"High Street","adr_state_or_region":"Buckinghamshire","adr_locality":null,"adr_suburb_or_town":"Great Horwood","adr_postcode":"MK17 0QL","adr_country":"uk","adr_estate_name":null,"adr_estate_stage":null,"system_owner_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"adr_building":null,"property_category":{"id":"residential","text":"Residential"},"property_image":{"uri":"rexlive:\/\/1755\/listings\/47534\/images\/6HighStreet-35_46af-eaa7-829f-9c5c-6643-6708-b7df-a8bc_20201208010004.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/47534\/images\/6HighStreet-35_46af-eaa7-829f-9c5c-6643-6708-b7df-a8bc_20201208010004.jpg","thumbs":{"800x600":{"uri":"rexlive:\/\/1755\/listings\/47534\/images\/6HighStreet-35_46af-eaa7-829f-9c5c-6643-6708-b7df-a8bc_20201208010004_800x600.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/47534\/images\/6HighStreet-35_46af-eaa7-829f-9c5c-6643-6708-b7df-a8bc_20201208010004_800x600.jpg"},"400x300":{"uri":"rexlive:\/\/1755\/listings\/47534\/images\/6HighStreet-35_46af-eaa7-829f-9c5c-6643-6708-b7df-a8bc_20201208010004_400x300.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/47534\/images\/6HighStreet-35_46af-eaa7-829f-9c5c-6643-6708-b7df-a8bc_20201208010004_400x300.jpg"},"200x150":{"uri":"rexlive:\/\/1755\/listings\/47534\/images\/6HighStreet-35_46af-eaa7-829f-9c5c-6643-6708-b7df-a8bc_20201208010004_200x150.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/47534\/images\/6HighStreet-35_46af-eaa7-829f-9c5c-6643-6708-b7df-a8bc_20201208010004_200x150.jpg"},"80x60":{"uri":"rexlive:\/\/1755\/listings\/47534\/images\/6HighStreet-35_46af-eaa7-829f-9c5c-6643-6708-b7df-a8bc_20201208010004_80x60.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/47534\/images\/6HighStreet-35_46af-eaa7-829f-9c5c-6643-6708-b7df-a8bc_20201208010004_80x60.jpg"},"original":{"uri":"rexlive:\/\/1755\/listings\/47534\/images\/6HighStreet-35_46af-eaa7-829f-9c5c-6643-6708-b7df-a8bc_20201208010004_original.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/47534\/images\/6HighStreet-35_46af-eaa7-829f-9c5c-6643-6708-b7df-a8bc_20201208010004_original.jpg"}}},"etag":"515604-1612805244","id":"515604"}}],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19522","name":"Steven Field","first_name":"Steven","last_name":"Field","email_address":"steven.field@chewtonrose.co.uk"},"system_created_user":{"id":"19522","name":"Steven Field","first_name":"Steven","last_name":"Field","email_address":"steven.field@chewtonrose.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16482692},{"system_record_state":"active","system_ctime":1612778228,"system_modtime":1612778228,"reminder_id":null,"etag":"16483075-1612778228","security_user_rights":["read","update","trash"],"note":"Reviewed UA on 7\/2, as went round there for a walk and bumped into  the vendor. Answered some questions re age of heating etc, they just OM in London","related":{"note_contacts":[{"id":"2752061","contact":{"system_record_state":"active","system_ctime":"1612272883","system_modtime":"1614938075","name":"Mark Wyett","email_address":"wyett@btinternet.com","phone_number":"07878 728108","fax_number":null,"is_dnd":null,"type":"person","last_contacted_date":"2021-03-11","name_last":"Wyett","address_postal":null,"address":"56 Kingsmere Park\r\nLONDON\r\nNW9 8PL","interest_level":null,"marketing_birthday":null,"marketing_enquiry_source":null,"marketing_gender":null,"marketing_postcode":null,"name_legal":null,"name_salutation":null,"name_addressee":null,"system_owner_user":{"id":"20440","name":"Martin Levett","first_name":"Martin","last_name":"Levett","email_address":"martin.levett@spicerhaart.co.uk"},"contact_image":null,"marketing_enquiry_method":null,"etag":"2090492-1614938075","id":"2090492"}}],"note_market_leads":[],"note_properties":[{"id":"10482232","property":{"system_search_key":"1 Staters Pound, Milton Keynes, Milton Keynes MK15 8AX","adr_longitude":null,"adr_latitude":null,"adr_unit_number":null,"adr_street_number":"1","adr_street_name":"Staters Pound","adr_state_or_region":"Milton Keynes","adr_locality":null,"adr_suburb_or_town":"Milton Keynes","adr_postcode":"MK15 8AX","adr_country":"uk","adr_estate_name":null,"adr_estate_stage":null,"system_owner_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"adr_building":null,"property_category":{"id":"residential","text":"Residential"},"property_image":{"uri":"rexlive:\/\/1755\/listings\/5556\/images\/1StatersPound-41_bf74-4530-89f5-1826-2932-3d5e-2138-34b2_20190501115801.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/5556\/images\/1StatersPound-41_bf74-4530-89f5-1826-2932-3d5e-2138-34b2_20190501115801.jpg","thumbs":{"800x600":{"uri":"rexlive:\/\/1755\/listings\/5556\/images\/1StatersPound-41_bf74-4530-89f5-1826-2932-3d5e-2138-34b2_20190501115801_800x600.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/5556\/images\/1StatersPound-41_bf74-4530-89f5-1826-2932-3d5e-2138-34b2_20190501115801_800x600.jpg"},"400x300":{"uri":"rexlive:\/\/1755\/listings\/5556\/images\/1StatersPound-41_bf74-4530-89f5-1826-2932-3d5e-2138-34b2_20190501115801_400x300.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/5556\/images\/1StatersPound-41_bf74-4530-89f5-1826-2932-3d5e-2138-34b2_20190501115801_400x300.jpg"},"200x150":{"uri":"rexlive:\/\/1755\/listings\/5556\/images\/1StatersPound-41_bf74-4530-89f5-1826-2932-3d5e-2138-34b2_20190501115801_200x150.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/5556\/images\/1StatersPound-41_bf74-4530-89f5-1826-2932-3d5e-2138-34b2_20190501115801_200x150.jpg"},"80x60":{"uri":"rexlive:\/\/1755\/listings\/5556\/images\/1StatersPound-41_bf74-4530-89f5-1826-2932-3d5e-2138-34b2_20190501115801_80x60.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/5556\/images\/1StatersPound-41_bf74-4530-89f5-1826-2932-3d5e-2138-34b2_20190501115801_80x60.jpg"}}},"etag":"676096-1615314643","id":"676096"}}],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19522","name":"Steven Field","first_name":"Steven","last_name":"Field","email_address":"steven.field@chewtonrose.co.uk"},"system_created_user":{"id":"19522","name":"Steven Field","first_name":"Steven","last_name":"Field","email_address":"steven.field@chewtonrose.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16483075},{"system_record_state":"active","system_ctime":1612778773,"system_modtime":1612778773,"reminder_id":null,"etag":"16484143-1612778773","security_user_rights":["read","update","trash"],"note":"Let know wasn't coming up to MK now due to family reasons","related":{"note_contacts":[{"id":"2752155","contact":{"system_record_state":"active","system_ctime":"1612351176","system_modtime":"1612351485","name":"Charles Lagares","email_address":"charles@lagares.co.uk","phone_number":"07900 225548","fax_number":null,"is_dnd":null,"type":"person","last_contacted_date":"2021-03-11","name_last":"Lagares","address_postal":null,"address":null,"interest_level":null,"marketing_birthday":null,"marketing_enquiry_source":null,"marketing_gender":null,"marketing_postcode":null,"name_legal":null,"name_salutation":null,"name_addressee":null,"system_owner_user":{"id":"19522","name":"Steven Field","first_name":"Steven","last_name":"Field","email_address":"steven.field@chewtonrose.co.uk"},"contact_image":null,"marketing_enquiry_method":null,"etag":"2091866-1612351485","id":"2091866"}}],"note_market_leads":[],"note_properties":[{"id":"10482328","property":{"system_search_key":"17 Foxley Place, MILTON KEYNES MK5 8BU","adr_longitude":"-0.77259126581538","adr_latitude":"52.030128524616","adr_unit_number":null,"adr_street_number":"17","adr_street_name":"Foxley Place","adr_state_or_region":null,"adr_locality":"Loughton","adr_suburb_or_town":"MILTON KEYNES","adr_postcode":"MK5 8BU","adr_country":"uk","adr_estate_name":null,"adr_estate_stage":null,"system_owner_user":{"id":"19522","name":"Steven Field","first_name":"Steven","last_name":"Field","email_address":"steven.field@chewtonrose.co.uk"},"adr_building":null,"property_category":{"id":"residential","text":"Residential"},"property_image":{"uri":"rexlive:\/\/1755\/listings\/53213\/images\/17FoxleyPlace-16_9e11-0129-5c31-d5c5-f187-e108-9bf7-6cf1_20210210124405.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/53213\/images\/17FoxleyPlace-16_9e11-0129-5c31-d5c5-f187-e108-9bf7-6cf1_20210210124405.jpg","thumbs":{"800x600":{"uri":"rexlive:\/\/1755\/listings\/53213\/images\/17FoxleyPlace-16_9e11-0129-5c31-d5c5-f187-e108-9bf7-6cf1_20210210124405_800x600.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/53213\/images\/17FoxleyPlace-16_9e11-0129-5c31-d5c5-f187-e108-9bf7-6cf1_20210210124405_800x600.jpg"},"400x300":{"uri":"rexlive:\/\/1755\/listings\/53213\/images\/17FoxleyPlace-16_9e11-0129-5c31-d5c5-f187-e108-9bf7-6cf1_20210210124405_400x300.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/53213\/images\/17FoxleyPlace-16_9e11-0129-5c31-d5c5-f187-e108-9bf7-6cf1_20210210124405_400x300.jpg"},"200x150":{"uri":"rexlive:\/\/1755\/listings\/53213\/images\/17FoxleyPlace-16_9e11-0129-5c31-d5c5-f187-e108-9bf7-6cf1_20210210124405_200x150.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/53213\/images\/17FoxleyPlace-16_9e11-0129-5c31-d5c5-f187-e108-9bf7-6cf1_20210210124405_200x150.jpg"},"80x60":{"uri":"rexlive:\/\/1755\/listings\/53213\/images\/17FoxleyPlace-16_9e11-0129-5c31-d5c5-f187-e108-9bf7-6cf1_20210210124405_80x60.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/53213\/images\/17FoxleyPlace-16_9e11-0129-5c31-d5c5-f187-e108-9bf7-6cf1_20210210124405_80x60.jpg"},"original":{"uri":"rexlive:\/\/1755\/listings\/53213\/images\/17FoxleyPlace-16_9e11-0129-5c31-d5c5-f187-e108-9bf7-6cf1_20210210124405_original.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/53213\/images\/17FoxleyPlace-16_9e11-0129-5c31-d5c5-f187-e108-9bf7-6cf1_20210210124405_original.jpg"}}},"etag":"17864109-1612978337","id":"17864109"}}],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19522","name":"Steven Field","first_name":"Steven","last_name":"Field","email_address":"steven.field@chewtonrose.co.uk"},"system_created_user":{"id":"19522","name":"Steven Field","first_name":"Steven","last_name":"Field","email_address":"steven.field@chewtonrose.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16484143},{"system_record_state":"active","system_ctime":1612778823,"system_modtime":1612789525,"reminder_id":null,"etag":"16484249-1612789525","security_user_rights":["read","update","trash"],"note":"Let know Charles wan't coming back up to MK due to family reasons","related":{"note_contacts":[{"id":"2752165","contact":{"system_record_state":"active","system_ctime":"1612351176","system_modtime":"1612351485","name":"Charles Lagares","email_address":"charles@lagares.co.uk","phone_number":"07900 225548","fax_number":null,"is_dnd":null,"type":"person","last_contacted_date":"2021-03-11","name_last":"Lagares","address_postal":null,"address":null,"interest_level":null,"marketing_birthday":null,"marketing_enquiry_source":null,"marketing_gender":null,"marketing_postcode":null,"name_legal":null,"name_salutation":null,"name_addressee":null,"system_owner_user":{"id":"19522","name":"Steven Field","first_name":"Steven","last_name":"Field","email_address":"steven.field@chewtonrose.co.uk"},"contact_image":null,"marketing_enquiry_method":null,"etag":"2091866-1612351485","id":"2091866"}}],"note_market_leads":[],"note_properties":[{"id":"10484212","property":{"system_search_key":"17 Foxley Place, MILTON KEYNES MK5 8BU","adr_longitude":"-0.77259126581538","adr_latitude":"52.030128524616","adr_unit_number":null,"adr_street_number":"17","adr_street_name":"Foxley Place","adr_state_or_region":null,"adr_locality":"Loughton","adr_suburb_or_town":"MILTON KEYNES","adr_postcode":"MK5 8BU","adr_country":"uk","adr_estate_name":null,"adr_estate_stage":null,"system_owner_user":{"id":"19522","name":"Steven Field","first_name":"Steven","last_name":"Field","email_address":"steven.field@chewtonrose.co.uk"},"adr_building":null,"property_category":{"id":"residential","text":"Residential"},"property_image":{"uri":"rexlive:\/\/1755\/listings\/53213\/images\/17FoxleyPlace-16_9e11-0129-5c31-d5c5-f187-e108-9bf7-6cf1_20210210124405.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/53213\/images\/17FoxleyPlace-16_9e11-0129-5c31-d5c5-f187-e108-9bf7-6cf1_20210210124405.jpg","thumbs":{"800x600":{"uri":"rexlive:\/\/1755\/listings\/53213\/images\/17FoxleyPlace-16_9e11-0129-5c31-d5c5-f187-e108-9bf7-6cf1_20210210124405_800x600.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/53213\/images\/17FoxleyPlace-16_9e11-0129-5c31-d5c5-f187-e108-9bf7-6cf1_20210210124405_800x600.jpg"},"400x300":{"uri":"rexlive:\/\/1755\/listings\/53213\/images\/17FoxleyPlace-16_9e11-0129-5c31-d5c5-f187-e108-9bf7-6cf1_20210210124405_400x300.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/53213\/images\/17FoxleyPlace-16_9e11-0129-5c31-d5c5-f187-e108-9bf7-6cf1_20210210124405_400x300.jpg"},"200x150":{"uri":"rexlive:\/\/1755\/listings\/53213\/images\/17FoxleyPlace-16_9e11-0129-5c31-d5c5-f187-e108-9bf7-6cf1_20210210124405_200x150.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/53213\/images\/17FoxleyPlace-16_9e11-0129-5c31-d5c5-f187-e108-9bf7-6cf1_20210210124405_200x150.jpg"},"80x60":{"uri":"rexlive:\/\/1755\/listings\/53213\/images\/17FoxleyPlace-16_9e11-0129-5c31-d5c5-f187-e108-9bf7-6cf1_20210210124405_80x60.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/53213\/images\/17FoxleyPlace-16_9e11-0129-5c31-d5c5-f187-e108-9bf7-6cf1_20210210124405_80x60.jpg"},"original":{"uri":"rexlive:\/\/1755\/listings\/53213\/images\/17FoxleyPlace-16_9e11-0129-5c31-d5c5-f187-e108-9bf7-6cf1_20210210124405_original.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/53213\/images\/17FoxleyPlace-16_9e11-0129-5c31-d5c5-f187-e108-9bf7-6cf1_20210210124405_original.jpg"}}},"etag":"17864109-1612978337","id":"17864109"}},{"id":"10484213","property":{"system_search_key":"4 Vicarage Road, Milton Keynes MK13 9AQ","adr_longitude":"-0.788022","adr_latitude":"52.0484656","adr_unit_number":null,"adr_street_number":"4","adr_street_name":"Vicarage Road","adr_state_or_region":null,"adr_locality":"Bradwell Village","adr_suburb_or_town":"Milton Keynes","adr_postcode":"MK13 9AQ","adr_country":"uk","adr_estate_name":null,"adr_estate_stage":null,"system_owner_user":{"id":"19521","name":"Graham Nash","first_name":"Graham","last_name":"Nash","email_address":"graham.nash@spicerhaart.co.uk"},"adr_building":null,"property_category":{"id":"residential","text":"Residential"},"property_image":{"uri":"rexlive:\/\/1755\/listings\/24873\/images\/4VicarageRoad-44_617c-469c-6584-2821-10cb-245c-22e9-6125_20200725063736.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/24873\/images\/4VicarageRoad-44_617c-469c-6584-2821-10cb-245c-22e9-6125_20200725063736.jpg","thumbs":{"800x600":{"uri":"rexlive:\/\/1755\/listings\/24873\/images\/4VicarageRoad-44_617c-469c-6584-2821-10cb-245c-22e9-6125_20200725063736_800x600.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/24873\/images\/4VicarageRoad-44_617c-469c-6584-2821-10cb-245c-22e9-6125_20200725063736_800x600.jpg"},"400x300":{"uri":"rexlive:\/\/1755\/listings\/24873\/images\/4VicarageRoad-44_617c-469c-6584-2821-10cb-245c-22e9-6125_20200725063736_400x300.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/24873\/images\/4VicarageRoad-44_617c-469c-6584-2821-10cb-245c-22e9-6125_20200725063736_400x300.jpg"},"200x150":{"uri":"rexlive:\/\/1755\/listings\/24873\/images\/4VicarageRoad-44_617c-469c-6584-2821-10cb-245c-22e9-6125_20200725063736_200x150.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/24873\/images\/4VicarageRoad-44_617c-469c-6584-2821-10cb-245c-22e9-6125_20200725063736_200x150.jpg"},"80x60":{"uri":"rexlive:\/\/1755\/listings\/24873\/images\/4VicarageRoad-44_617c-469c-6584-2821-10cb-245c-22e9-6125_20200725063736_80x60.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/24873\/images\/4VicarageRoad-44_617c-469c-6584-2821-10cb-245c-22e9-6125_20200725063736_80x60.jpg"}}},"etag":"15279002-1609943211","id":"15279002"}}],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19522","name":"Steven Field","first_name":"Steven","last_name":"Field","email_address":"steven.field@chewtonrose.co.uk"},"system_created_user":{"id":"19522","name":"Steven Field","first_name":"Steven","last_name":"Field","email_address":"steven.field@chewtonrose.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16484249},{"system_record_state":"active","system_ctime":1612781549,"system_modtime":1612800677,"reminder_id":null,"etag":"16485158-1612800677","security_user_rights":["read","update","trash"],"note":"looking for 'detached house in a semi rural area in Oxfordshire with 3 to 4 bedrooms with a large garden and a garage' asked for budget, position and address (though we have nothing)... came back saying up to 650K","related":{"note_contacts":[{"id":"2752593","contact":{"system_record_state":"active","system_ctime":"1612776324","system_modtime":"1612782262","name":"Martin Horsey","email_address":"martinhorsey@gmail.com","phone_number":"07850 951885","fax_number":null,"is_dnd":null,"type":"person","last_contacted_date":"2021-03-11","name_last":"Horsey","address_postal":null,"address":null,"interest_level":null,"marketing_birthday":null,"marketing_enquiry_source":"Internet - On The Market","marketing_gender":null,"marketing_postcode":null,"name_legal":null,"name_salutation":null,"name_addressee":null,"system_owner_user":{"id":0,"name":"System User","first_name":"System","last_name":"User","email_address":"no-reply@rexsoftware.com.au"},"contact_image":null,"marketing_enquiry_method":null,"etag":"2113135-1612782262","id":"2113135"}}],"note_market_leads":[],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19522","name":"Steven Field","first_name":"Steven","last_name":"Field","email_address":"steven.field@chewtonrose.co.uk"},"system_created_user":{"id":"19522","name":"Steven Field","first_name":"Steven","last_name":"Field","email_address":"steven.field@chewtonrose.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16485158},{"system_record_state":"active","system_ctime":1612782616,"system_modtime":1612782616,"reminder_id":null,"etag":"16486538-1612782616","security_user_rights":["read","update","trash"],"note":"Lead archived by branch","related":{"note_contacts":[],"note_market_leads":[{"id":"3989387","market_lead":{"system_label":"FURZEN CLOSE, Dunstable LU6 3EN","assignee":null,"lead_status":{"id":"26743","text":"Door Number Required"},"id":819640}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"system_created_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16486538},{"system_record_state":"active","system_ctime":1612783311,"system_modtime":1612783311,"reminder_id":null,"etag":"16486752-1612783311","security_user_rights":["read","update","trash"],"note":"Auction house","related":{"note_contacts":[],"note_market_leads":[{"id":"3989443","market_lead":{"system_label":"CASTLE HILL ROAD, Totternhoe LU6 2BW","assignee":null,"lead_status":{"id":"26743","text":"Door Number Required"},"id":816310}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19522","name":"Steven Field","first_name":"Steven","last_name":"Field","email_address":"steven.field@chewtonrose.co.uk"},"system_created_user":{"id":"19522","name":"Steven Field","first_name":"Steven","last_name":"Field","email_address":"steven.field@chewtonrose.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16486752},{"system_record_state":"active","system_ctime":1612784357,"system_modtime":1612784358,"reminder_id":null,"etag":"16487134-1612784358","security_user_rights":["read","update","trash"],"note":"LM again... system won't accept 'in letter cycle'......","related":{"note_contacts":[],"note_market_leads":[{"id":"3989559","market_lead":{"system_label":"1 BROUGHTON ROAD, Milton keynes MK17 8BH","assignee":null,"lead_status":{"id":"26744","text":"In Contact"},"id":225565}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19522","name":"Steven Field","first_name":"Steven","last_name":"Field","email_address":"steven.field@chewtonrose.co.uk"},"system_created_user":{"id":"19522","name":"Steven Field","first_name":"Steven","last_name":"Field","email_address":"steven.field@chewtonrose.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16487134},{"system_record_state":"active","system_ctime":1612784406,"system_modtime":1612784406,"reminder_id":null,"etag":"16487145-1612784406","security_user_rights":["read","update","trash"],"note":"phone number wrong... can't put in letter cycle... ","related":{"note_contacts":[],"note_market_leads":[{"id":"3989561","market_lead":{"system_label":"Roll Right Cottage Westbrook End, Newton Longville MK17 0DF","assignee":null,"lead_status":{"id":"26573","text":"New Lead"},"id":290075}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19522","name":"Steven Field","first_name":"Steven","last_name":"Field","email_address":"steven.field@chewtonrose.co.uk"},"system_created_user":{"id":"19522","name":"Steven Field","first_name":"Steven","last_name":"Field","email_address":"steven.field@chewtonrose.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16487145},{"system_record_state":"active","system_ctime":1612786328,"system_modtime":1612786329,"reminder_id":null,"etag":"16488825-1612786329","security_user_rights":["read","update","trash"],"note":"Lead archived by branch","related":{"note_contacts":[],"note_market_leads":[{"id":"3990710","market_lead":{"system_label":"TRAFALGAR DRIVE, Flitwick MK45 1EF","assignee":null,"lead_status":{"id":"26743","text":"Door Number Required"},"id":811383}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"system_created_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16488825},{"system_record_state":"active","system_ctime":1612786335,"system_modtime":1612786335,"reminder_id":null,"etag":"16488829-1612786335","security_user_rights":["read","update","trash"],"note":"Lead archived by branch","related":{"note_contacts":[],"note_market_leads":[{"id":"3990712","market_lead":{"system_label":"CASTLE HILL ROAD, Totternhoe LU6 2BW","assignee":null,"lead_status":{"id":"26743","text":"Door Number Required"},"id":816310}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"system_created_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16488829},{"system_record_state":"active","system_ctime":1612786338,"system_modtime":1612786338,"reminder_id":null,"etag":"16488832-1612786338","security_user_rights":["read","update","trash"],"note":"Lead archived by branch","related":{"note_contacts":[],"note_market_leads":[{"id":"3990713","market_lead":{"system_label":"CHEYNE CLOSE, Pitstone LU7 9QU","assignee":null,"lead_status":{"id":"26743","text":"Door Number Required"},"id":816313}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"system_created_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16488832},{"system_record_state":"active","system_ctime":1612788782,"system_modtime":1612788782,"reminder_id":null,"etag":"16489685-1612788782","security_user_rights":["read","update","trash"],"note":"Listing was not published to FLINK - Block loading: 1, Images: 1, Discreet marketing: 1, New home: null, Category: EA Sales","related":{"note_contacts":[],"note_market_leads":[],"note_properties":[{"id":"10484089","property":{"system_search_key":"7 Lower Stonehayes, Milton Keynes, Milton Keynes MK14 5ES","adr_longitude":null,"adr_latitude":null,"adr_unit_number":null,"adr_street_number":"7","adr_street_name":"Lower Stonehayes","adr_state_or_region":"Milton Keynes","adr_locality":"Great Linford","adr_suburb_or_town":"Milton Keynes","adr_postcode":"MK14 5ES","adr_country":"uk","adr_estate_name":null,"adr_estate_stage":null,"system_owner_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"adr_building":null,"property_category":{"id":"residential","text":"Residential"},"property_image":{"uri":"rexlive:\/\/1755\/listings\/53809\/images\/7-Lower-Stonehayes_0_7176-e877-3c30-785a-a5fd-2185-330f-fc77_20210219012128.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/53809\/images\/7-Lower-Stonehayes_0_7176-e877-3c30-785a-a5fd-2185-330f-fc77_20210219012128.jpg","thumbs":{"800x600":{"uri":"rexlive:\/\/1755\/listings\/53809\/images\/7-Lower-Stonehayes_0_7176-e877-3c30-785a-a5fd-2185-330f-fc77_20210219012128_800x600.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/53809\/images\/7-Lower-Stonehayes_0_7176-e877-3c30-785a-a5fd-2185-330f-fc77_20210219012128_800x600.jpg"},"400x300":{"uri":"rexlive:\/\/1755\/listings\/53809\/images\/7-Lower-Stonehayes_0_7176-e877-3c30-785a-a5fd-2185-330f-fc77_20210219012128_400x300.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/53809\/images\/7-Lower-Stonehayes_0_7176-e877-3c30-785a-a5fd-2185-330f-fc77_20210219012128_400x300.jpg"},"200x150":{"uri":"rexlive:\/\/1755\/listings\/53809\/images\/7-Lower-Stonehayes_0_7176-e877-3c30-785a-a5fd-2185-330f-fc77_20210219012128_200x150.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/53809\/images\/7-Lower-Stonehayes_0_7176-e877-3c30-785a-a5fd-2185-330f-fc77_20210219012128_200x150.jpg"},"80x60":{"uri":"rexlive:\/\/1755\/listings\/53809\/images\/7-Lower-Stonehayes_0_7176-e877-3c30-785a-a5fd-2185-330f-fc77_20210219012128_80x60.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/53809\/images\/7-Lower-Stonehayes_0_7176-e877-3c30-785a-a5fd-2185-330f-fc77_20210219012128_80x60.jpg"},"original":{"uri":"rexlive:\/\/1755\/listings\/53809\/images\/7-Lower-Stonehayes_0_7176-e877-3c30-785a-a5fd-2185-330f-fc77_20210219012128_original.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/53809\/images\/7-Lower-Stonehayes_0_7176-e877-3c30-785a-a5fd-2185-330f-fc77_20210219012128_original.jpg"}}},"etag":"603920-1617007496","id":"603920"}}],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"system_created_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16489685},{"system_record_state":"active","system_ctime":1612789743,"system_modtime":1612789743,"reminder_id":null,"etag":"16491054-1612789743","security_user_rights":["read","update","trash"],"note":"Still saying won't offer higher than late 700's due to area after RV, repeated no change our end, ie not been trialled yet on RM, so his risk.. he still wants to know about any higher offers made,","related":{"note_contacts":[{"id":"2753925","contact":{"system_record_state":"active","system_ctime":"1611817955","system_modtime":"1612022452","name":"Kamal Hussain","email_address":"kmsdriving@yahoo.co.uk","phone_number":"07903 882994","fax_number":null,"is_dnd":null,"type":"person","last_contacted_date":"2021-03-11","name_last":"Hussain","address_postal":null,"address":"Towan Avenue\nFishermead\nMILTON KEYNES\nMK6 2DL","interest_level":null,"marketing_birthday":null,"marketing_enquiry_source":"Internet - On The Market","marketing_gender":null,"marketing_postcode":null,"name_legal":null,"name_salutation":null,"name_addressee":null,"system_owner_user":{"id":0,"name":"System User","first_name":"System","last_name":"User","email_address":"no-reply@rexsoftware.com.au"},"contact_image":null,"marketing_enquiry_method":null,"etag":"2082637-1612022452","id":"2082637"}}],"note_market_leads":[],"note_properties":[{"id":"10484240","property":{"system_search_key":"186 Newton Road, Milton Keynes MK3 5DE","adr_longitude":"-0.7605271","adr_latitude":"51.9859349","adr_unit_number":null,"adr_street_number":"186","adr_street_name":"Newton Road","adr_state_or_region":null,"adr_locality":"Bletchley","adr_suburb_or_town":"Milton Keynes","adr_postcode":"MK3 5DE","adr_country":"uk","adr_estate_name":null,"adr_estate_stage":null,"system_owner_user":{"id":"19521","name":"Graham Nash","first_name":"Graham","last_name":"Nash","email_address":"graham.nash@spicerhaart.co.uk"},"adr_building":null,"property_category":{"id":"residential","text":"Residential"},"property_image":{"uri":"rexlive:\/\/1755\/listings\/53372\/images\/186NewtonRoad-60_2c88-2dfa-45ef-9228-4487-b886-8421-db8a_20210211033834.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/53372\/images\/186NewtonRoad-60_2c88-2dfa-45ef-9228-4487-b886-8421-db8a_20210211033834.jpg","thumbs":{"800x600":{"uri":"rexlive:\/\/1755\/listings\/53372\/images\/186NewtonRoad-60_2c88-2dfa-45ef-9228-4487-b886-8421-db8a_20210211033834_800x600.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/53372\/images\/186NewtonRoad-60_2c88-2dfa-45ef-9228-4487-b886-8421-db8a_20210211033834_800x600.jpg"},"400x300":{"uri":"rexlive:\/\/1755\/listings\/53372\/images\/186NewtonRoad-60_2c88-2dfa-45ef-9228-4487-b886-8421-db8a_20210211033834_400x300.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/53372\/images\/186NewtonRoad-60_2c88-2dfa-45ef-9228-4487-b886-8421-db8a_20210211033834_400x300.jpg"},"200x150":{"uri":"rexlive:\/\/1755\/listings\/53372\/images\/186NewtonRoad-60_2c88-2dfa-45ef-9228-4487-b886-8421-db8a_20210211033834_200x150.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/53372\/images\/186NewtonRoad-60_2c88-2dfa-45ef-9228-4487-b886-8421-db8a_20210211033834_200x150.jpg"},"80x60":{"uri":"rexlive:\/\/1755\/listings\/53372\/images\/186NewtonRoad-60_2c88-2dfa-45ef-9228-4487-b886-8421-db8a_20210211033834_80x60.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/53372\/images\/186NewtonRoad-60_2c88-2dfa-45ef-9228-4487-b886-8421-db8a_20210211033834_80x60.jpg"},"original":{"uri":"rexlive:\/\/1755\/listings\/53372\/images\/186NewtonRoad-60_2c88-2dfa-45ef-9228-4487-b886-8421-db8a_20210211033834_original.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/53372\/images\/186NewtonRoad-60_2c88-2dfa-45ef-9228-4487-b886-8421-db8a_20210211033834_original.jpg"}}},"etag":"17873395-1612980657","id":"17873395"}}],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19522","name":"Steven Field","first_name":"Steven","last_name":"Field","email_address":"steven.field@chewtonrose.co.uk"},"system_created_user":{"id":"19522","name":"Steven Field","first_name":"Steven","last_name":"Field","email_address":"steven.field@chewtonrose.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16491054},{"system_record_state":"active","system_ctime":1612789781,"system_modtime":1612789781,"reminder_id":null,"etag":"16491074-1612789781","security_user_rights":["read","update","trash"],"note":"Lead archived by branch","related":{"note_contacts":[],"note_market_leads":[{"id":"3992025","market_lead":{"system_label":"TRAFALGAR DRIVE, Flitwick MK45 1EF","assignee":null,"lead_status":{"id":"26743","text":"Door Number Required"},"id":811383}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"system_created_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16491074},{"system_record_state":"active","system_ctime":1612789786,"system_modtime":1612789786,"reminder_id":null,"etag":"16491077-1612789786","security_user_rights":["read","update","trash"],"note":"Lead archived by branch","related":{"note_contacts":[],"note_market_leads":[{"id":"3992026","market_lead":{"system_label":"CHEYNE CLOSE, Pitstone LU7 9QU","assignee":null,"lead_status":{"id":"26743","text":"Door Number Required"},"id":816313}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"system_created_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16491077},{"system_record_state":"active","system_ctime":1612790442,"system_modtime":1612790442,"reminder_id":null,"etag":"16491415-1612790442","security_user_rights":["read","update","trash"],"note":"Laura promising to get pack out; vendor now  buying new build which won't be ready to July so 100% will go into rented","related":{"note_contacts":[],"note_market_leads":[],"note_properties":[{"id":"10484326","property":{"system_search_key":"Powells Barn  Tatten Whaddon Road, Milton Keynes, Milton Keynes MK4 4AD","adr_longitude":null,"adr_latitude":null,"adr_unit_number":null,"adr_street_number":"Powells Barn  Tatten","adr_street_name":"Whaddon Road","adr_state_or_region":"Milton Keynes","adr_locality":null,"adr_suburb_or_town":"Milton Keynes","adr_postcode":"MK4 4AD","adr_country":"uk","adr_estate_name":null,"adr_estate_stage":null,"system_owner_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"adr_building":null,"property_category":{"id":"residential","text":"Residential"},"property_image":{"uri":"rexlive:\/\/1755\/listings\/32565\/images\/PowellsBarn-18_31b1-7d9f-3c2e-43fd-02c2-edf0-1d0d-3d72_20200708094408.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/32565\/images\/PowellsBarn-18_31b1-7d9f-3c2e-43fd-02c2-edf0-1d0d-3d72_20200708094408.jpg","thumbs":{"800x600":{"uri":"rexlive:\/\/1755\/listings\/32565\/images\/PowellsBarn-18_31b1-7d9f-3c2e-43fd-02c2-edf0-1d0d-3d72_20200708094408_800x600.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/32565\/images\/PowellsBarn-18_31b1-7d9f-3c2e-43fd-02c2-edf0-1d0d-3d72_20200708094408_800x600.jpg"},"400x300":{"uri":"rexlive:\/\/1755\/listings\/32565\/images\/PowellsBarn-18_31b1-7d9f-3c2e-43fd-02c2-edf0-1d0d-3d72_20200708094408_400x300.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/32565\/images\/PowellsBarn-18_31b1-7d9f-3c2e-43fd-02c2-edf0-1d0d-3d72_20200708094408_400x300.jpg"},"200x150":{"uri":"rexlive:\/\/1755\/listings\/32565\/images\/PowellsBarn-18_31b1-7d9f-3c2e-43fd-02c2-edf0-1d0d-3d72_20200708094408_200x150.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/32565\/images\/PowellsBarn-18_31b1-7d9f-3c2e-43fd-02c2-edf0-1d0d-3d72_20200708094408_200x150.jpg"},"80x60":{"uri":"rexlive:\/\/1755\/listings\/32565\/images\/PowellsBarn-18_31b1-7d9f-3c2e-43fd-02c2-edf0-1d0d-3d72_20200708094408_80x60.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/32565\/images\/PowellsBarn-18_31b1-7d9f-3c2e-43fd-02c2-edf0-1d0d-3d72_20200708094408_80x60.jpg"}}},"etag":"471472-1617275822","id":"471472"}}],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19522","name":"Steven Field","first_name":"Steven","last_name":"Field","email_address":"steven.field@chewtonrose.co.uk"},"system_created_user":{"id":"19522","name":"Steven Field","first_name":"Steven","last_name":"Field","email_address":"steven.field@chewtonrose.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16491415},{"system_record_state":"active","system_ctime":1612790541,"system_modtime":1612790541,"reminder_id":null,"etag":"16491453-1612790541","security_user_rights":["read","update","trash"],"note":"Ho Mo Hai to return contract within the next 24-48 by courier following the answering of one more question from his sol who isn't in till tomorrow, updated vendor ","related":{"note_contacts":[],"note_market_leads":[],"note_properties":[{"id":"10484340","property":{"system_search_key":"12 Hawkshead Drive, Milton Keynes MK4 2LX","adr_longitude":"-0.77522031296764","adr_latitude":"52.008261314617","adr_unit_number":null,"adr_street_number":"12","adr_street_name":"Hawkshead Drive","adr_state_or_region":null,"adr_locality":"Emerson Valley","adr_suburb_or_town":"Milton Keynes","adr_postcode":"MK4 2LX","adr_country":"uk","adr_estate_name":null,"adr_estate_stage":null,"system_owner_user":{"id":"19521","name":"Graham Nash","first_name":"Graham","last_name":"Nash","email_address":"graham.nash@spicerhaart.co.uk"},"adr_building":null,"property_category":{"id":"residential","text":"Residential"},"property_image":{"uri":"rexlive:\/\/1755\/listings\/3620\/images\/img_6774-img_6776_eea0-10b3-4fa8-e5c7-c703-d17e-12dc-3fd0_20190726122603.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/3620\/images\/img_6774-img_6776_eea0-10b3-4fa8-e5c7-c703-d17e-12dc-3fd0_20190726122603.jpg","thumbs":{"800x600":{"uri":"rexlive:\/\/1755\/listings\/3620\/images\/img_6774-img_6776_eea0-10b3-4fa8-e5c7-c703-d17e-12dc-3fd0_20190726122603_800x600.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/3620\/images\/img_6774-img_6776_eea0-10b3-4fa8-e5c7-c703-d17e-12dc-3fd0_20190726122603_800x600.jpg"},"400x300":{"uri":"rexlive:\/\/1755\/listings\/3620\/images\/img_6774-img_6776_eea0-10b3-4fa8-e5c7-c703-d17e-12dc-3fd0_20190726122603_400x300.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/3620\/images\/img_6774-img_6776_eea0-10b3-4fa8-e5c7-c703-d17e-12dc-3fd0_20190726122603_400x300.jpg"},"200x150":{"uri":"rexlive:\/\/1755\/listings\/3620\/images\/img_6774-img_6776_eea0-10b3-4fa8-e5c7-c703-d17e-12dc-3fd0_20190726122603_200x150.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/3620\/images\/img_6774-img_6776_eea0-10b3-4fa8-e5c7-c703-d17e-12dc-3fd0_20190726122603_200x150.jpg"},"80x60":{"uri":"rexlive:\/\/1755\/listings\/3620\/images\/img_6774-img_6776_eea0-10b3-4fa8-e5c7-c703-d17e-12dc-3fd0_20190726122603_80x60.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/3620\/images\/img_6774-img_6776_eea0-10b3-4fa8-e5c7-c703-d17e-12dc-3fd0_20190726122603_80x60.jpg"}}},"etag":"3203688-1601287564","id":"3203688"}}],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19522","name":"Steven Field","first_name":"Steven","last_name":"Field","email_address":"steven.field@chewtonrose.co.uk"},"system_created_user":{"id":"19522","name":"Steven Field","first_name":"Steven","last_name":"Field","email_address":"steven.field@chewtonrose.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16491453},{"system_record_state":"active","system_ctime":1612790664,"system_modtime":1612790665,"reminder_id":null,"etag":"16491512-1612790665","security_user_rights":["read","update","trash"],"note":"Dhaval wanting contract to state comp on notice but clause to say no later than 29\/3 comp, kitchen paid for, buyer's sol awaiting RTE which should be next 24hrs.. then ready to exchange","related":{"note_contacts":[],"note_market_leads":[],"note_properties":[{"id":"10484356","property":{"system_search_key":"3 Kinderfield Close, Milton Keynes MK4 2AW","adr_longitude":"-0.77452126897815","adr_latitude":"52.007908520975","adr_unit_number":null,"adr_street_number":"3","adr_street_name":"Kinderfield Close","adr_state_or_region":null,"adr_locality":"Emerson Valley","adr_suburb_or_town":"Milton Keynes","adr_postcode":"MK4 2AW","adr_country":"uk","adr_estate_name":null,"adr_estate_stage":null,"system_owner_user":{"id":"19521","name":"Graham Nash","first_name":"Graham","last_name":"Nash","email_address":"graham.nash@spicerhaart.co.uk"},"adr_building":null,"property_category":{"id":"residential","text":"Residential"},"property_image":{"uri":"rexlive:\/\/1755\/listings\/3630\/images\/img_6759-img_6761_8cb5-5398-5755-1af0-96bd-a535-6b66-f24b_20190726122247.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/3630\/images\/img_6759-img_6761_8cb5-5398-5755-1af0-96bd-a535-6b66-f24b_20190726122247.jpg","thumbs":{"800x600":{"uri":"rexlive:\/\/1755\/listings\/3630\/images\/img_6759-img_6761_8cb5-5398-5755-1af0-96bd-a535-6b66-f24b_20190726122247_800x600.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/3630\/images\/img_6759-img_6761_8cb5-5398-5755-1af0-96bd-a535-6b66-f24b_20190726122247_800x600.jpg"},"400x300":{"uri":"rexlive:\/\/1755\/listings\/3630\/images\/img_6759-img_6761_8cb5-5398-5755-1af0-96bd-a535-6b66-f24b_20190726122247_400x300.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/3630\/images\/img_6759-img_6761_8cb5-5398-5755-1af0-96bd-a535-6b66-f24b_20190726122247_400x300.jpg"},"200x150":{"uri":"rexlive:\/\/1755\/listings\/3630\/images\/img_6759-img_6761_8cb5-5398-5755-1af0-96bd-a535-6b66-f24b_20190726122247_200x150.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/3630\/images\/img_6759-img_6761_8cb5-5398-5755-1af0-96bd-a535-6b66-f24b_20190726122247_200x150.jpg"},"80x60":{"uri":"rexlive:\/\/1755\/listings\/3630\/images\/img_6759-img_6761_8cb5-5398-5755-1af0-96bd-a535-6b66-f24b_20190726122247_80x60.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/3630\/images\/img_6759-img_6761_8cb5-5398-5755-1af0-96bd-a535-6b66-f24b_20190726122247_80x60.jpg"}}},"etag":"3203693-1607355579","id":"3203693"}}],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19522","name":"Steven Field","first_name":"Steven","last_name":"Field","email_address":"steven.field@chewtonrose.co.uk"},"system_created_user":{"id":"19522","name":"Steven Field","first_name":"Steven","last_name":"Field","email_address":"steven.field@chewtonrose.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16491512},{"system_record_state":"active","system_ctime":1612790745,"system_modtime":1612790745,"reminder_id":null,"etag":"16491578-1612790745","security_user_rights":["read","update","trash"],"note":"expecting last enquiry between Lavers and his buyer to be settled today..  Below still saying all ready, so hoping to be in a position to exchange this week \/ next week","related":{"note_contacts":[],"note_market_leads":[],"note_properties":[{"id":"10484366","property":{"system_search_key":"Kiln House Towcester Road, Northamptonshire NN12 8UB","adr_longitude":"-0.9973256","adr_latitude":"52.1397544","adr_unit_number":null,"adr_street_number":"Kiln House","adr_street_name":"Towcester Road","adr_state_or_region":null,"adr_locality":"Silverstone","adr_suburb_or_town":"Northamptonshire","adr_postcode":"NN12 8UB","adr_country":"uk","adr_estate_name":null,"adr_estate_stage":null,"system_owner_user":{"id":"19521","name":"Graham Nash","first_name":"Graham","last_name":"Nash","email_address":"graham.nash@spicerhaart.co.uk"},"adr_building":null,"property_category":{"id":"residential","text":"Residential"},"property_image":{"uri":"rexlive:\/\/1755\/listings\/41424\/images\/KilnHouse-75aerial_f8ac-dca5-8d8f-ea47-4b99-7760-2053-33fe_20200912013041.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/41424\/images\/KilnHouse-75aerial_f8ac-dca5-8d8f-ea47-4b99-7760-2053-33fe_20200912013041.jpg","thumbs":{"800x600":{"uri":"rexlive:\/\/1755\/listings\/41424\/images\/KilnHouse-75aerial_f8ac-dca5-8d8f-ea47-4b99-7760-2053-33fe_20200912013041_800x600.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/41424\/images\/KilnHouse-75aerial_f8ac-dca5-8d8f-ea47-4b99-7760-2053-33fe_20200912013041_800x600.jpg"},"400x300":{"uri":"rexlive:\/\/1755\/listings\/41424\/images\/KilnHouse-75aerial_f8ac-dca5-8d8f-ea47-4b99-7760-2053-33fe_20200912013041_400x300.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/41424\/images\/KilnHouse-75aerial_f8ac-dca5-8d8f-ea47-4b99-7760-2053-33fe_20200912013041_400x300.jpg"},"200x150":{"uri":"rexlive:\/\/1755\/listings\/41424\/images\/KilnHouse-75aerial_f8ac-dca5-8d8f-ea47-4b99-7760-2053-33fe_20200912013041_200x150.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/41424\/images\/KilnHouse-75aerial_f8ac-dca5-8d8f-ea47-4b99-7760-2053-33fe_20200912013041_200x150.jpg"},"80x60":{"uri":"rexlive:\/\/1755\/listings\/41424\/images\/KilnHouse-75aerial_f8ac-dca5-8d8f-ea47-4b99-7760-2053-33fe_20200912013041_80x60.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/41424\/images\/KilnHouse-75aerial_f8ac-dca5-8d8f-ea47-4b99-7760-2053-33fe_20200912013041_80x60.jpg"},"original":{"uri":"rexlive:\/\/1755\/listings\/41424\/images\/KilnHouse-75aerial_f8ac-dca5-8d8f-ea47-4b99-7760-2053-33fe_20200912013041_original.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/41424\/images\/KilnHouse-75aerial_f8ac-dca5-8d8f-ea47-4b99-7760-2053-33fe_20200912013041_original.jpg"}}},"etag":"16783280-1614092965","id":"16783280"}}],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19522","name":"Steven Field","first_name":"Steven","last_name":"Field","email_address":"steven.field@chewtonrose.co.uk"},"system_created_user":{"id":"19522","name":"Steven Field","first_name":"Steven","last_name":"Field","email_address":"steven.field@chewtonrose.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16491578},{"system_record_state":"active","system_ctime":1612790889,"system_modtime":1612790889,"reminder_id":null,"etag":"16491642-1612790889","security_user_rights":["read","update","trash"],"note":"Now Joyce dropped her signed contract in, and bottom agreed to 19\/3 comp, all on understanding that we would exchange now, vendor awaiting conf can still port existing mortg if does not ex on NB.. point being if they have to wait to be ready on NB to ex on W\/House, buuild sign off isn't until WC 22\/2, so prob could not ex until first week March.....","related":{"note_contacts":[],"note_market_leads":[],"note_properties":[{"id":"10484384","property":{"system_search_key":"3 Waterhouse Close, Newport Pagnell, Milton Keynes MK16 0EL","adr_longitude":null,"adr_latitude":null,"adr_unit_number":null,"adr_street_number":"3","adr_street_name":"Waterhouse Close","adr_state_or_region":"Milton Keynes","adr_locality":null,"adr_suburb_or_town":"Newport Pagnell","adr_postcode":"MK16 0EL","adr_country":"uk","adr_estate_name":null,"adr_estate_stage":null,"system_owner_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"adr_building":null,"property_category":{"id":"residential","text":"Residential"},"property_image":{"uri":"rexlive:\/\/1755\/listings\/47477\/images\/3waterhouseclose-40-_4b0a-71f4-381e-a82d-1703-d9d3-1503-00ac_20201120071948.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/47477\/images\/3waterhouseclose-40-_4b0a-71f4-381e-a82d-1703-d9d3-1503-00ac_20201120071948.jpg","thumbs":{"800x600":{"uri":"rexlive:\/\/1755\/listings\/47477\/images\/3waterhouseclose-40-_4b0a-71f4-381e-a82d-1703-d9d3-1503-00ac_20201120071948_800x600.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/47477\/images\/3waterhouseclose-40-_4b0a-71f4-381e-a82d-1703-d9d3-1503-00ac_20201120071948_800x600.jpg"},"400x300":{"uri":"rexlive:\/\/1755\/listings\/47477\/images\/3waterhouseclose-40-_4b0a-71f4-381e-a82d-1703-d9d3-1503-00ac_20201120071948_400x300.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/47477\/images\/3waterhouseclose-40-_4b0a-71f4-381e-a82d-1703-d9d3-1503-00ac_20201120071948_400x300.jpg"},"200x150":{"uri":"rexlive:\/\/1755\/listings\/47477\/images\/3waterhouseclose-40-_4b0a-71f4-381e-a82d-1703-d9d3-1503-00ac_20201120071948_200x150.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/47477\/images\/3waterhouseclose-40-_4b0a-71f4-381e-a82d-1703-d9d3-1503-00ac_20201120071948_200x150.jpg"},"80x60":{"uri":"rexlive:\/\/1755\/listings\/47477\/images\/3waterhouseclose-40-_4b0a-71f4-381e-a82d-1703-d9d3-1503-00ac_20201120071948_80x60.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/47477\/images\/3waterhouseclose-40-_4b0a-71f4-381e-a82d-1703-d9d3-1503-00ac_20201120071948_80x60.jpg"},"original":{"uri":"rexlive:\/\/1755\/listings\/47477\/images\/3waterhouseclose-40-_4b0a-71f4-381e-a82d-1703-d9d3-1503-00ac_20201120071948_original.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/47477\/images\/3waterhouseclose-40-_4b0a-71f4-381e-a82d-1703-d9d3-1503-00ac_20201120071948_original.jpg"}}},"etag":"501722-1613643883","id":"501722"}}],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19522","name":"Steven Field","first_name":"Steven","last_name":"Field","email_address":"steven.field@chewtonrose.co.uk"},"system_created_user":{"id":"19522","name":"Steven Field","first_name":"Steven","last_name":"Field","email_address":"steven.field@chewtonrose.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16491642},{"system_record_state":"active","system_ctime":1612791339,"system_modtime":1612791339,"reminder_id":null,"etag":"16491755-1612791339","security_user_rights":["read","update","trash"],"note":"accepted offer, looking 450-550K one off \/ quirky, Beds Villages, but on system","related":{"note_contacts":[],"note_market_leads":[{"id":"3992276","market_lead":{"system_label":"3 BRITTENS LANE, Salford MK17 8BE","assignee":null,"lead_status":{"id":"26573","text":"New Lead"},"id":498956}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19522","name":"Steven Field","first_name":"Steven","last_name":"Field","email_address":"steven.field@chewtonrose.co.uk"},"system_created_user":{"id":"19522","name":"Steven Field","first_name":"Steven","last_name":"Field","email_address":"steven.field@chewtonrose.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16491755},{"system_record_state":"active","system_ctime":1612791446,"system_modtime":1612791507,"reminder_id":null,"etag":"16491779-1612791507","security_user_rights":["read","update","trash"],"note":"Number for wife but divorced.. his name Geoff, call back, had to cut call short.. reminder 15\/2","related":{"note_contacts":[],"note_market_leads":[{"id":"3992278","market_lead":{"system_label":"12 DALE CLOSE, Toddington LU5 6EP","assignee":null,"lead_status":{"id":"26573","text":"New Lead"},"id":520664}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19522","name":"Steven Field","first_name":"Steven","last_name":"Field","email_address":"steven.field@chewtonrose.co.uk"},"system_created_user":{"id":"19522","name":"Steven Field","first_name":"Steven","last_name":"Field","email_address":"steven.field@chewtonrose.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16491779},{"system_record_state":"active","system_ctime":1612791794,"system_modtime":1612791794,"reminder_id":null,"etag":"16491870-1612791794","security_user_rights":["read","update","trash"],"note":"LM re can we help","related":{"note_contacts":[],"note_market_leads":[{"id":"3992299","market_lead":{"system_label":"28 PHOEBES ORCHARD, Stoke Hammond MK17 9LW","assignee":null,"lead_status":{"id":"26573","text":"New Lead"},"id":575639}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19522","name":"Steven Field","first_name":"Steven","last_name":"Field","email_address":"steven.field@chewtonrose.co.uk"},"system_created_user":{"id":"19522","name":"Steven Field","first_name":"Steven","last_name":"Field","email_address":"steven.field@chewtonrose.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16491870},{"system_record_state":"active","system_ctime":1612792358,"system_modtime":1612792358,"reminder_id":null,"etag":"16492026-1612792358","security_user_rights":["read","update","trash"],"note":"Spoke to Nicky Whittome, just Had Tyron Ash round, wanted to know fee, asked for val, or call, said no, look on line and e-mail what we thought price wise and what we would charge..","related":{"note_contacts":[],"note_market_leads":[{"id":"3992351","market_lead":{"system_label":"30A DUNTON ROAD, Stewkley LU7 0HZ","assignee":null,"lead_status":{"id":"26573","text":"New Lead"},"id":582070}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19522","name":"Steven Field","first_name":"Steven","last_name":"Field","email_address":"steven.field@chewtonrose.co.uk"},"system_created_user":{"id":"19522","name":"Steven Field","first_name":"Steven","last_name":"Field","email_address":"steven.field@chewtonrose.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16492026},{"system_record_state":"active","system_ctime":1612792760,"system_modtime":1612792760,"reminder_id":null,"etag":"16492192-1612792760","security_user_rights":["read","update","trash"],"note":"couldn't talk as was going ion conference call. Got e-mail address, to mail re our services","related":{"note_contacts":[],"note_market_leads":[{"id":"3992429","market_lead":{"system_label":"10 AMPTHILL ROAD, Maulden MK45 2DA","assignee":null,"lead_status":{"id":"26573","text":"New Lead"},"id":584007}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19522","name":"Steven Field","first_name":"Steven","last_name":"Field","email_address":"steven.field@chewtonrose.co.uk"},"system_created_user":{"id":"19522","name":"Steven Field","first_name":"Steven","last_name":"Field","email_address":"steven.field@chewtonrose.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16492192},{"system_record_state":"active","system_ctime":1612793182,"system_modtime":1612793182,"reminder_id":null,"etag":"16493234-1612793182","security_user_rights":["read","update","trash"],"note":"Lead archived by branch","related":{"note_contacts":[],"note_market_leads":[{"id":"3993392","market_lead":{"system_label":"TRAFALGAR DRIVE, Flitwick MK45 1EF","assignee":null,"lead_status":{"id":"26743","text":"Door Number Required"},"id":811383}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"system_created_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16493234},{"system_record_state":"active","system_ctime":1612793185,"system_modtime":1612793186,"reminder_id":null,"etag":"16493243-1612793186","security_user_rights":["read","update","trash"],"note":"Lead archived by branch","related":{"note_contacts":[],"note_market_leads":[{"id":"3993398","market_lead":{"system_label":"CHEYNE CLOSE, Pitstone LU7 9QU","assignee":null,"lead_status":{"id":"26743","text":"Door Number Required"},"id":816313}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"system_created_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16493243},{"system_record_state":"active","system_ctime":1612793657,"system_modtime":1612793658,"reminder_id":null,"etag":"16493493-1612793658","security_user_rights":["read","update","trash"],"note":"Happy with Stephen Oakley, friend of vendor","related":{"note_contacts":[],"note_market_leads":[{"id":"3993559","market_lead":{"system_label":"13 FERNE FURLONG, Olney MK46 5EN","assignee":null,"lead_status":{"id":"26742","text":"DO NOT CALL"},"id":588051}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19522","name":"Steven Field","first_name":"Steven","last_name":"Field","email_address":"steven.field@chewtonrose.co.uk"},"system_created_user":{"id":"19522","name":"Steven Field","first_name":"Steven","last_name":"Field","email_address":"steven.field@chewtonrose.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16493493},{"system_record_state":"active","system_ctime":1612793808,"system_modtime":1612793808,"reminder_id":null,"etag":"16493532-1612793808","security_user_rights":["read","update","trash"],"note":"LM re can we help","related":{"note_contacts":[],"note_market_leads":[{"id":"3993565","market_lead":{"system_label":"10 OAK DRIVE, Pulloxhill MK45 5EQ","assignee":null,"lead_status":{"id":"26573","text":"New Lead"},"id":594439}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19522","name":"Steven Field","first_name":"Steven","last_name":"Field","email_address":"steven.field@chewtonrose.co.uk"},"system_created_user":{"id":"19522","name":"Steven Field","first_name":"Steven","last_name":"Field","email_address":"steven.field@chewtonrose.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16493532},{"system_record_state":"active","system_ctime":1612794016,"system_modtime":1612794016,"reminder_id":null,"etag":"16493595-1612794016","security_user_rights":["read","update","trash"],"note":"Just ringing","related":{"note_contacts":[],"note_market_leads":[{"id":"3993581","market_lead":{"system_label":"Flat 23A CHAPEL STREET, Woburn Sands MK17 8PG","assignee":null,"lead_status":{"id":"26573","text":"New Lead"},"id":599136}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19522","name":"Steven Field","first_name":"Steven","last_name":"Field","email_address":"steven.field@chewtonrose.co.uk"},"system_created_user":{"id":"19522","name":"Steven Field","first_name":"Steven","last_name":"Field","email_address":"steven.field@chewtonrose.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16493595},{"system_record_state":"active","system_ctime":1612794366,"system_modtime":1612794366,"reminder_id":null,"etag":"16493804-1612794366","security_user_rights":["read","update","trash"],"note":"LM re can we help","related":{"note_contacts":[],"note_market_leads":[{"id":"3993712","market_lead":{"system_label":"EAKLEY MANOR FARM EAKLEY LANES, Stoke Goldington MK16 8LP","assignee":null,"lead_status":{"id":"26744","text":"In Contact"},"id":599194}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19522","name":"Steven Field","first_name":"Steven","last_name":"Field","email_address":"steven.field@chewtonrose.co.uk"},"system_created_user":{"id":"19522","name":"Steven Field","first_name":"Steven","last_name":"Field","email_address":"steven.field@chewtonrose.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16493804},{"system_record_state":"active","system_ctime":1612795303,"system_modtime":1612795303,"reminder_id":null,"etag":"16494074-1612795303","security_user_rights":["read","update","trash"],"note":"TV Tues 9\/2 14.00, cash in bank","related":{"note_contacts":[{"id":"2754925","contact":{"system_record_state":"active","system_ctime":"1612795182","system_modtime":"1612795897","name":"Andrew Baillie","email_address":"andrewsbaillie@btinternet.com","phone_number":"07974 429896","fax_number":null,"is_dnd":null,"type":"person","last_contacted_date":"2021-02-11","name_last":"Baillie","address_postal":null,"address":"12 Wilby Road\r\nMears Ashby\r\nNORTHAMPTON\r\nNN6 0DX","interest_level":null,"marketing_birthday":null,"marketing_enquiry_source":null,"marketing_gender":null,"marketing_postcode":null,"name_legal":null,"name_salutation":null,"name_addressee":null,"system_owner_user":{"id":"19522","name":"Steven Field","first_name":"Steven","last_name":"Field","email_address":"steven.field@chewtonrose.co.uk"},"contact_image":null,"marketing_enquiry_method":null,"etag":"2113959-1612795897","id":"2113959"}}],"note_market_leads":[],"note_properties":[{"id":"10484993","property":{"system_search_key":"Ecton Hall, Flat 6 Church Way, Ecton NN6 0QE","adr_longitude":"-0.78618128808779","adr_latitude":"52.264338562988","adr_unit_number":"Ecton Hall","adr_street_number":"Flat 6","adr_street_name":"Church Way","adr_state_or_region":null,"adr_locality":null,"adr_suburb_or_town":"Ecton","adr_postcode":"NN6 0QE","adr_country":"uk","adr_estate_name":null,"adr_estate_stage":null,"system_owner_user":{"id":"20713","name":"Neil Sippitt","first_name":"Neil","last_name":"Sippitt","email_address":"neil.sippitt@chewtonrose.co.uk"},"adr_building":null,"property_category":{"id":"residential","text":"Residential"},"property_image":{"uri":"rexlive:\/\/1755\/listings\/6644\/images\/6EctonHall-01_5292-2d5b-2a00-616f-edd8-75ae-3305-5a2f_20190709083319.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/6644\/images\/6EctonHall-01_5292-2d5b-2a00-616f-edd8-75ae-3305-5a2f_20190709083319.jpg","thumbs":{"800x600":{"uri":"rexlive:\/\/1755\/listings\/6644\/images\/6EctonHall-01_5292-2d5b-2a00-616f-edd8-75ae-3305-5a2f_20190709083319_800x600.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/6644\/images\/6EctonHall-01_5292-2d5b-2a00-616f-edd8-75ae-3305-5a2f_20190709083319_800x600.jpg"},"400x300":{"uri":"rexlive:\/\/1755\/listings\/6644\/images\/6EctonHall-01_5292-2d5b-2a00-616f-edd8-75ae-3305-5a2f_20190709083319_400x300.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/6644\/images\/6EctonHall-01_5292-2d5b-2a00-616f-edd8-75ae-3305-5a2f_20190709083319_400x300.jpg"},"200x150":{"uri":"rexlive:\/\/1755\/listings\/6644\/images\/6EctonHall-01_5292-2d5b-2a00-616f-edd8-75ae-3305-5a2f_20190709083319_200x150.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/6644\/images\/6EctonHall-01_5292-2d5b-2a00-616f-edd8-75ae-3305-5a2f_20190709083319_200x150.jpg"},"80x60":{"uri":"rexlive:\/\/1755\/listings\/6644\/images\/6EctonHall-01_5292-2d5b-2a00-616f-edd8-75ae-3305-5a2f_20190709083319_80x60.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/6644\/images\/6EctonHall-01_5292-2d5b-2a00-616f-edd8-75ae-3305-5a2f_20190709083319_80x60.jpg"}}},"etag":"4260204-1599646563","id":"4260204"}}],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19522","name":"Steven Field","first_name":"Steven","last_name":"Field","email_address":"steven.field@chewtonrose.co.uk"},"system_created_user":{"id":"19522","name":"Steven Field","first_name":"Steven","last_name":"Field","email_address":"steven.field@chewtonrose.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16494074},{"system_record_state":"active","system_ctime":1612796532,"system_modtime":1612796532,"reminder_id":null,"etag":"16494614-1612796532","security_user_rights":["read","update","trash"],"note":"Happy with PB, getting bombarded by OA as you'd expect","related":{"note_contacts":[],"note_market_leads":[{"id":"3993964","market_lead":{"system_label":"2 BIGNELL CROFT, Loughton, Milton Keynes MK5 8BF","assignee":null,"lead_status":{"id":"26573","text":"New Lead"},"id":603937}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19522","name":"Steven Field","first_name":"Steven","last_name":"Field","email_address":"steven.field@chewtonrose.co.uk"},"system_created_user":{"id":"19522","name":"Steven Field","first_name":"Steven","last_name":"Field","email_address":"steven.field@chewtonrose.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16494614},{"system_record_state":"active","system_ctime":1612796766,"system_modtime":1612796766,"reminder_id":null,"etag":"16495488-1612796766","security_user_rights":["read","update","trash"],"note":"LM re can we help","related":{"note_contacts":[],"note_market_leads":[{"id":"3994783","market_lead":{"system_label":"crossing cottage SALFORD ROAD, Aspley Guise MK17 8HY","assignee":null,"lead_status":{"id":"26744","text":"In Contact"},"id":626207}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19522","name":"Steven Field","first_name":"Steven","last_name":"Field","email_address":"steven.field@chewtonrose.co.uk"},"system_created_user":{"id":"19522","name":"Steven Field","first_name":"Steven","last_name":"Field","email_address":"steven.field@chewtonrose.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16495488},{"system_record_state":"active","system_ctime":1612796836,"system_modtime":1612796836,"reminder_id":null,"etag":"16495720-1612796836","security_user_rights":["read","update","trash"],"note":"Retracted from Rightmove","related":{"note_contacts":[],"note_market_leads":[{"id":"3995004","market_lead":{"system_label":"12 Falldor Way, Ampthill MK45 2GD","assignee":null,"lead_status":{"id":"26741","text":"Contact Details Required"},"id":599200}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"system_created_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16495720},{"system_record_state":"active","system_ctime":1612796844,"system_modtime":1612796844,"reminder_id":null,"etag":"16495751-1612796844","security_user_rights":["read","update","trash"],"note":"Retracted from Rightmove","related":{"note_contacts":[],"note_market_leads":[{"id":"3995031","market_lead":{"system_label":"12 St. Georges Place, Ampthill MK45 2HB","assignee":null,"lead_status":{"id":"26741","text":"Contact Details Required"},"id":614572}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"system_created_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16495751},{"system_record_state":"active","system_ctime":1612796852,"system_modtime":1612796852,"reminder_id":null,"etag":"16495771-1612796852","security_user_rights":["read","update","trash"],"note":"Retracted from Rightmove","related":{"note_contacts":[],"note_market_leads":[{"id":"3995050","market_lead":{"system_label":"the old dairy, 25 Church Road, Bedfordshire MK17 8TG","assignee":null,"lead_status":{"id":"26741","text":"Contact Details Required"},"id":616890}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"system_created_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16495771},{"system_record_state":"active","system_ctime":1612796857,"system_modtime":1612796858,"reminder_id":null,"etag":"16495788-1612796858","security_user_rights":["read","update","trash"],"note":"Retracted from Rightmove","related":{"note_contacts":[],"note_market_leads":[{"id":"3995066","market_lead":{"system_label":"5 LONDON ROAD, Loughton, Milton Keynes MK5 8AB","assignee":null,"lead_status":{"id":"26573","text":"New Lead"},"id":620494}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"system_created_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16495788},{"system_record_state":"active","system_ctime":1612796861,"system_modtime":1612796861,"reminder_id":null,"etag":"16495797-1612796861","security_user_rights":["read","update","trash"],"note":"Retracted from Rightmove","related":{"note_contacts":[],"note_market_leads":[{"id":"3995072","market_lead":{"system_label":"116 VILLAGE ROAD, Bromham MK43 8HU","assignee":null,"lead_status":{"id":"26741","text":"Contact Details Required"},"id":624192}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"system_created_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16495797},{"system_record_state":"active","system_ctime":1612796866,"system_modtime":1612796866,"reminder_id":null,"etag":"16495812-1612796866","security_user_rights":["read","update","trash"],"note":"Retracted from Rightmove","related":{"note_contacts":[],"note_market_leads":[{"id":"3995086","market_lead":{"system_label":"westbury house PRESTON ROAD, Gawcott MK18 4HS","assignee":null,"lead_status":{"id":"26741","text":"Contact Details Required"},"id":657441}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"system_created_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16495812},{"system_record_state":"active","system_ctime":1612796871,"system_modtime":1612796871,"reminder_id":null,"etag":"16495821-1612796871","security_user_rights":["read","update","trash"],"note":"Retracted from Rightmove","related":{"note_contacts":[],"note_market_leads":[{"id":"3995095","market_lead":{"system_label":"22 MOLIVERS LANE, Bromham MK43 8JT","assignee":null,"lead_status":{"id":"26741","text":"Contact Details Required"},"id":664889}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"system_created_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16495821},{"system_record_state":"active","system_ctime":1612796877,"system_modtime":1612796878,"reminder_id":null,"etag":"16495839-1612796878","security_user_rights":["read","update","trash"],"note":"Retracted from Rightmove","related":{"note_contacts":[],"note_market_leads":[{"id":"3995112","market_lead":{"system_label":"THE OLD POST OFFICE HIGH STREET, Cublington LU7 0LL","assignee":null,"lead_status":{"id":"26741","text":"Contact Details Required"},"id":666982}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"system_created_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16495839},{"system_record_state":"active","system_ctime":1612796884,"system_modtime":1612796885,"reminder_id":null,"etag":"16495855-1612796885","security_user_rights":["read","update","trash"],"note":"Retracted from Rightmove","related":{"note_contacts":[],"note_market_leads":[{"id":"3995124","market_lead":{"system_label":"orkland house BEDFORD ROAD, Stagsden MK43 8TP","assignee":null,"lead_status":{"id":"26741","text":"Contact Details Required"},"id":669816}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"system_created_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16495855},{"system_record_state":"active","system_ctime":1612796891,"system_modtime":1612796891,"reminder_id":null,"etag":"16495868-1612796891","security_user_rights":["read","update","trash"],"note":"Retracted from Rightmove","related":{"note_contacts":[],"note_market_leads":[{"id":"3995135","market_lead":{"system_label":"SUNNY BANK WEST END, Haynes MK45 3QS","assignee":null,"lead_status":{"id":"26741","text":"Contact Details Required"},"id":674363}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"system_created_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16495868},{"system_record_state":"active","system_ctime":1612796894,"system_modtime":1612796895,"reminder_id":null,"etag":"16495878-1612796895","security_user_rights":["read","update","trash"],"note":"Retracted from Rightmove","related":{"note_contacts":[],"note_market_leads":[{"id":"3995145","market_lead":{"system_label":"4 AMBLERS WAY, Buckingham MK18 2BT","assignee":null,"lead_status":{"id":"26741","text":"Contact Details Required"},"id":683489}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"system_created_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16495878},{"system_record_state":"active","system_ctime":1612796899,"system_modtime":1612796899,"reminder_id":null,"etag":"16495888-1612796899","security_user_rights":["read","update","trash"],"note":"Retracted from Rightmove","related":{"note_contacts":[],"note_market_leads":[{"id":"3995153","market_lead":{"system_label":"19 WOOD LANE, Aspley Guise MK17 8EJ","assignee":null,"lead_status":{"id":"26741","text":"Contact Details Required"},"id":686882}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"system_created_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16495888},{"system_record_state":"active","system_ctime":1612796905,"system_modtime":1612796906,"reminder_id":null,"etag":"16495904-1612796906","security_user_rights":["read","update","trash"],"note":"Retracted from Rightmove","related":{"note_contacts":[],"note_market_leads":[{"id":"3995166","market_lead":{"system_label":"Flat 48A GEORGE STREET, Maulden MK45 2DF","assignee":null,"lead_status":{"id":"26741","text":"Contact Details Required"},"id":688503}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"system_created_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16495904},{"system_record_state":"active","system_ctime":1612796911,"system_modtime":1612796911,"reminder_id":null,"etag":"16495916-1612796911","security_user_rights":["read","update","trash"],"note":"Retracted from Rightmove","related":{"note_contacts":[],"note_market_leads":[{"id":"3995177","market_lead":{"system_label":"Sycamore AYLESBURY ROAD, Wing LU7 0PD","assignee":null,"lead_status":{"id":"26741","text":"Contact Details Required"},"id":692289}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"system_created_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16495916},{"system_record_state":"active","system_ctime":1612796917,"system_modtime":1612796917,"reminder_id":null,"etag":"16495927-1612796917","security_user_rights":["read","update","trash"],"note":"Lead archived by branch","related":{"note_contacts":[],"note_market_leads":[{"id":"3995187","market_lead":{"system_label":"CHEYNE CLOSE, Pitstone LU7 9QU","assignee":null,"lead_status":{"id":"26743","text":"Door Number Required"},"id":816313}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"system_created_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16495927},{"system_record_state":"active","system_ctime":1612797028,"system_modtime":1612797029,"reminder_id":null,"etag":"16496088-1612797029","security_user_rights":["read","update","trash"],"note":"LM re could we help","related":{"note_contacts":[],"note_market_leads":[{"id":"3995325","market_lead":{"system_label":"18 MENTMORE GARDENS, Leighton Buzzard LU7 2LT","assignee":null,"lead_status":{"id":"26573","text":"New Lead"},"id":646809}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19522","name":"Steven Field","first_name":"Steven","last_name":"Field","email_address":"steven.field@chewtonrose.co.uk"},"system_created_user":{"id":"19522","name":"Steven Field","first_name":"Steven","last_name":"Field","email_address":"steven.field@chewtonrose.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16496088},{"system_record_state":"active","system_ctime":1612797142,"system_modtime":1612797142,"reminder_id":null,"etag":"16496227-1612797142","security_user_rights":["read","update","trash"],"note":"LM re can we help","related":{"note_contacts":[],"note_market_leads":[{"id":"3995435","market_lead":{"system_label":"30 Haven Street, Broughton, Milton Keynes MK10 7DY","assignee":null,"lead_status":{"id":"26744","text":"In Contact"},"id":648663}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19522","name":"Steven Field","first_name":"Steven","last_name":"Field","email_address":"steven.field@chewtonrose.co.uk"},"system_created_user":{"id":"19522","name":"Steven Field","first_name":"Steven","last_name":"Field","email_address":"steven.field@chewtonrose.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16496227},{"system_record_state":"active","system_ctime":1612797254,"system_modtime":1612797254,"reminder_id":null,"etag":"16496403-1612797254","security_user_rights":["read","update","trash"],"note":"Happy with MG... silly silly price of course","related":{"note_contacts":[],"note_market_leads":[{"id":"3995571","market_lead":{"system_label":"29 HOLY THORN LANE, nley Church End, Milton Keynes MK5 6LJ","assignee":null,"lead_status":{"id":"26744","text":"In Contact"},"id":648667}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19522","name":"Steven Field","first_name":"Steven","last_name":"Field","email_address":"steven.field@chewtonrose.co.uk"},"system_created_user":{"id":"19522","name":"Steven Field","first_name":"Steven","last_name":"Field","email_address":"steven.field@chewtonrose.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16496403},{"system_record_state":"active","system_ctime":1612797408,"system_modtime":1612797408,"reminder_id":null,"etag":"16496591-1612797408","security_user_rights":["read","update","trash"],"note":"Happy with MG","related":{"note_contacts":[],"note_market_leads":[{"id":"3995727","market_lead":{"system_label":"WISTERIA COTTAGE NEWPORT ROAD, Moulsoe MK16 0HW","assignee":null,"lead_status":{"id":"26742","text":"DO NOT CALL"},"id":651320}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19522","name":"Steven Field","first_name":"Steven","last_name":"Field","email_address":"steven.field@chewtonrose.co.uk"},"system_created_user":{"id":"19522","name":"Steven Field","first_name":"Steven","last_name":"Field","email_address":"steven.field@chewtonrose.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16496591},{"system_record_state":"active","system_ctime":1612797603,"system_modtime":1612797603,"reminder_id":null,"etag":"16496852-1612797603","security_user_rights":["read","update","trash"],"note":"Happy with Astons","related":{"note_contacts":[],"note_market_leads":[{"id":"3995934","market_lead":{"system_label":"136 WOLVERTON ROAD, Newport Pagnell MK16 8JQ","assignee":null,"lead_status":{"id":"26744","text":"In Contact"},"id":653452}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19522","name":"Steven Field","first_name":"Steven","last_name":"Field","email_address":"steven.field@chewtonrose.co.uk"},"system_created_user":{"id":"19522","name":"Steven Field","first_name":"Steven","last_name":"Field","email_address":"steven.field@chewtonrose.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16496852},{"system_record_state":"active","system_ctime":1612797685,"system_modtime":1612797685,"reminder_id":null,"etag":"16496971-1612797685","security_user_rights":["read","update","trash"],"note":"LM re can we help","related":{"note_contacts":[],"note_market_leads":[{"id":"3996030","market_lead":{"system_label":"69 Brook End, Eversholt MK17 9DT","assignee":null,"lead_status":{"id":"26573","text":"New Lead"},"id":657457}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19522","name":"Steven Field","first_name":"Steven","last_name":"Field","email_address":"steven.field@chewtonrose.co.uk"},"system_created_user":{"id":"19522","name":"Steven Field","first_name":"Steven","last_name":"Field","email_address":"steven.field@chewtonrose.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16496971},{"system_record_state":"active","system_ctime":1612797878,"system_modtime":1612797878,"reminder_id":null,"etag":"16497249-1612797878","security_user_rights":["read","update","trash"],"note":"LM re can we help","related":{"note_contacts":[],"note_market_leads":[{"id":"3996256","market_lead":{"system_label":"3 SILVER END ROAD, Haynes MK45 3PP","assignee":null,"lead_status":{"id":"26744","text":"In Contact"},"id":667011}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19522","name":"Steven Field","first_name":"Steven","last_name":"Field","email_address":"steven.field@chewtonrose.co.uk"},"system_created_user":{"id":"19522","name":"Steven Field","first_name":"Steven","last_name":"Field","email_address":"steven.field@chewtonrose.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16497249},{"system_record_state":"active","system_ctime":1612797936,"system_modtime":1612797937,"reminder_id":null,"etag":"16497310-1612797937","security_user_rights":["read","update","trash"],"note":"Phone number is incorrect","related":{"note_contacts":[],"note_market_leads":[{"id":"3996305","market_lead":{"system_label":"1 WREN WALK, Edlesborough LU6 2RW","assignee":null,"lead_status":{"id":"26573","text":"New Lead"},"id":674367}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19522","name":"Steven Field","first_name":"Steven","last_name":"Field","email_address":"steven.field@chewtonrose.co.uk"},"system_created_user":{"id":"19522","name":"Steven Field","first_name":"Steven","last_name":"Field","email_address":"steven.field@chewtonrose.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16497310},{"system_record_state":"active","system_ctime":1612798177,"system_modtime":1612798177,"reminder_id":null,"etag":"16497631-1612798177","security_user_rights":["read","update","trash"],"note":"My app, only allowed viewings with MG from Friday. happy with them so far, problem has been finding (Loughton area) contracted till end Feb, will call us to help if no sale by then. Reminder set for last week Feb","related":{"note_contacts":[],"note_market_leads":[{"id":"3996566","market_lead":{"system_label":"63 Newport Road, Broughton, Milton Keynes MK10 7EQ","assignee":null,"lead_status":{"id":"26744","text":"In Contact"},"id":719611}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19522","name":"Steven Field","first_name":"Steven","last_name":"Field","email_address":"steven.field@chewtonrose.co.uk"},"system_created_user":{"id":"19522","name":"Steven Field","first_name":"Steven","last_name":"Field","email_address":"steven.field@chewtonrose.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16497631},{"system_record_state":"active","system_ctime":1612800311,"system_modtime":1612800311,"reminder_id":null,"etag":"16499502-1612800311","security_user_rights":["read","update","trash"],"note":"just rings, looks empty","related":{"note_contacts":[],"note_market_leads":[{"id":"3997934","market_lead":{"system_label":"2 Albus Close, Milton Keynes MK11 4BH","assignee":null,"lead_status":{"id":"26573","text":"New Lead"},"id":775532}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19522","name":"Steven Field","first_name":"Steven","last_name":"Field","email_address":"steven.field@chewtonrose.co.uk"},"system_created_user":{"id":"19522","name":"Steven Field","first_name":"Steven","last_name":"Field","email_address":"steven.field@chewtonrose.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16499502},{"system_record_state":"active","system_ctime":1612800635,"system_modtime":1612800635,"reminder_id":null,"etag":"16500105-1612800635","security_user_rights":["read","update","trash"],"note":"Lead archived by branch","related":{"note_contacts":[],"note_market_leads":[{"id":"3998464","market_lead":{"system_label":"CHEYNE CLOSE, Pitstone LU7 9QU","assignee":null,"lead_status":{"id":"26743","text":"Door Number Required"},"id":816313}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"system_created_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16500105},{"system_record_state":"active","system_ctime":1612802694,"system_modtime":1612802694,"reminder_id":null,"etag":"16501303-1612802694","security_user_rights":["read","update","trash"],"note":"Listing was not published to FLINK - Block loading: 1, Images: 1, Discreet marketing: 1, New home: null, Category: EA Sales","related":{"note_contacts":[],"note_market_leads":[],"note_properties":[{"id":"10486275","property":{"system_search_key":"17 Foxley Place, MILTON KEYNES MK5 8BU","adr_longitude":"-0.77259126581538","adr_latitude":"52.030128524616","adr_unit_number":null,"adr_street_number":"17","adr_street_name":"Foxley Place","adr_state_or_region":null,"adr_locality":"Loughton","adr_suburb_or_town":"MILTON KEYNES","adr_postcode":"MK5 8BU","adr_country":"uk","adr_estate_name":null,"adr_estate_stage":null,"system_owner_user":{"id":"19522","name":"Steven Field","first_name":"Steven","last_name":"Field","email_address":"steven.field@chewtonrose.co.uk"},"adr_building":null,"property_category":{"id":"residential","text":"Residential"},"property_image":{"uri":"rexlive:\/\/1755\/listings\/53213\/images\/17FoxleyPlace-16_9e11-0129-5c31-d5c5-f187-e108-9bf7-6cf1_20210210124405.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/53213\/images\/17FoxleyPlace-16_9e11-0129-5c31-d5c5-f187-e108-9bf7-6cf1_20210210124405.jpg","thumbs":{"800x600":{"uri":"rexlive:\/\/1755\/listings\/53213\/images\/17FoxleyPlace-16_9e11-0129-5c31-d5c5-f187-e108-9bf7-6cf1_20210210124405_800x600.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/53213\/images\/17FoxleyPlace-16_9e11-0129-5c31-d5c5-f187-e108-9bf7-6cf1_20210210124405_800x600.jpg"},"400x300":{"uri":"rexlive:\/\/1755\/listings\/53213\/images\/17FoxleyPlace-16_9e11-0129-5c31-d5c5-f187-e108-9bf7-6cf1_20210210124405_400x300.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/53213\/images\/17FoxleyPlace-16_9e11-0129-5c31-d5c5-f187-e108-9bf7-6cf1_20210210124405_400x300.jpg"},"200x150":{"uri":"rexlive:\/\/1755\/listings\/53213\/images\/17FoxleyPlace-16_9e11-0129-5c31-d5c5-f187-e108-9bf7-6cf1_20210210124405_200x150.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/53213\/images\/17FoxleyPlace-16_9e11-0129-5c31-d5c5-f187-e108-9bf7-6cf1_20210210124405_200x150.jpg"},"80x60":{"uri":"rexlive:\/\/1755\/listings\/53213\/images\/17FoxleyPlace-16_9e11-0129-5c31-d5c5-f187-e108-9bf7-6cf1_20210210124405_80x60.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/53213\/images\/17FoxleyPlace-16_9e11-0129-5c31-d5c5-f187-e108-9bf7-6cf1_20210210124405_80x60.jpg"},"original":{"uri":"rexlive:\/\/1755\/listings\/53213\/images\/17FoxleyPlace-16_9e11-0129-5c31-d5c5-f187-e108-9bf7-6cf1_20210210124405_original.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/53213\/images\/17FoxleyPlace-16_9e11-0129-5c31-d5c5-f187-e108-9bf7-6cf1_20210210124405_original.jpg"}}},"etag":"17864109-1612978337","id":"17864109"}}],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"system_created_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16501303},{"system_record_state":"active","system_ctime":1612802922,"system_modtime":1612802922,"reminder_id":null,"etag":"16501381-1612802922","security_user_rights":["read","update","trash"],"note":"Listing was not published to FLINK - Block loading: 1, Images: 1, Discreet marketing: 1, New home: null, Category: EA Sales","related":{"note_contacts":[],"note_market_leads":[],"note_properties":[{"id":"10486302","property":{"system_search_key":"186 Newton Road, Milton Keynes MK3 5DE","adr_longitude":"-0.7605271","adr_latitude":"51.9859349","adr_unit_number":null,"adr_street_number":"186","adr_street_name":"Newton Road","adr_state_or_region":null,"adr_locality":"Bletchley","adr_suburb_or_town":"Milton Keynes","adr_postcode":"MK3 5DE","adr_country":"uk","adr_estate_name":null,"adr_estate_stage":null,"system_owner_user":{"id":"19521","name":"Graham Nash","first_name":"Graham","last_name":"Nash","email_address":"graham.nash@spicerhaart.co.uk"},"adr_building":null,"property_category":{"id":"residential","text":"Residential"},"property_image":{"uri":"rexlive:\/\/1755\/listings\/53372\/images\/186NewtonRoad-60_2c88-2dfa-45ef-9228-4487-b886-8421-db8a_20210211033834.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/53372\/images\/186NewtonRoad-60_2c88-2dfa-45ef-9228-4487-b886-8421-db8a_20210211033834.jpg","thumbs":{"800x600":{"uri":"rexlive:\/\/1755\/listings\/53372\/images\/186NewtonRoad-60_2c88-2dfa-45ef-9228-4487-b886-8421-db8a_20210211033834_800x600.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/53372\/images\/186NewtonRoad-60_2c88-2dfa-45ef-9228-4487-b886-8421-db8a_20210211033834_800x600.jpg"},"400x300":{"uri":"rexlive:\/\/1755\/listings\/53372\/images\/186NewtonRoad-60_2c88-2dfa-45ef-9228-4487-b886-8421-db8a_20210211033834_400x300.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/53372\/images\/186NewtonRoad-60_2c88-2dfa-45ef-9228-4487-b886-8421-db8a_20210211033834_400x300.jpg"},"200x150":{"uri":"rexlive:\/\/1755\/listings\/53372\/images\/186NewtonRoad-60_2c88-2dfa-45ef-9228-4487-b886-8421-db8a_20210211033834_200x150.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/53372\/images\/186NewtonRoad-60_2c88-2dfa-45ef-9228-4487-b886-8421-db8a_20210211033834_200x150.jpg"},"80x60":{"uri":"rexlive:\/\/1755\/listings\/53372\/images\/186NewtonRoad-60_2c88-2dfa-45ef-9228-4487-b886-8421-db8a_20210211033834_80x60.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/53372\/images\/186NewtonRoad-60_2c88-2dfa-45ef-9228-4487-b886-8421-db8a_20210211033834_80x60.jpg"},"original":{"uri":"rexlive:\/\/1755\/listings\/53372\/images\/186NewtonRoad-60_2c88-2dfa-45ef-9228-4487-b886-8421-db8a_20210211033834_original.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/53372\/images\/186NewtonRoad-60_2c88-2dfa-45ef-9228-4487-b886-8421-db8a_20210211033834_original.jpg"}}},"etag":"17873395-1612980657","id":"17873395"}}],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"system_created_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16501381},{"system_record_state":"active","system_ctime":1612804223,"system_modtime":1612804223,"reminder_id":null,"etag":"16503003-1612804223","security_user_rights":["read","update","trash"],"note":"DMA ID: 13172481","related":{"note_contacts":[],"note_market_leads":[{"id":"4000515","market_lead":{"system_label":"91 HIGH STREET, Stony Stratford, Milton Keynes MK11 1AT","assignee":null,"lead_status":{"id":"26741","text":"Contact Details Required"},"id":820509}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"system_created_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16503003},{"system_record_state":"active","system_ctime":1612804229,"system_modtime":1612804229,"reminder_id":null,"etag":"16503008-1612804229","security_user_rights":["read","update","trash"],"note":"DMA ID: 13172482","related":{"note_contacts":[],"note_market_leads":[{"id":"4000518","market_lead":{"system_label":"Newport Road, Woburn Sands MK17 8UZ","assignee":null,"lead_status":{"id":"26743","text":"Door Number Required"},"id":820510}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"system_created_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16503008},{"system_record_state":"active","system_ctime":1612804234,"system_modtime":1612804234,"reminder_id":null,"etag":"16503012-1612804234","security_user_rights":["read","update","trash"],"note":"Retracted from Rightmove","related":{"note_contacts":[],"note_market_leads":[{"id":"4000522","market_lead":{"system_label":"12 Falldor Way, Ampthill MK45 2GD","assignee":null,"lead_status":{"id":"26741","text":"Contact Details Required"},"id":599200}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"system_created_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16503012},{"system_record_state":"active","system_ctime":1612804240,"system_modtime":1612804240,"reminder_id":null,"etag":"16503018-1612804240","security_user_rights":["read","update","trash"],"note":"Retracted from Rightmove","related":{"note_contacts":[],"note_market_leads":[{"id":"4000526","market_lead":{"system_label":"12 St. Georges Place, Ampthill MK45 2HB","assignee":null,"lead_status":{"id":"26741","text":"Contact Details Required"},"id":614572}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"system_created_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16503018},{"system_record_state":"active","system_ctime":1612804243,"system_modtime":1612804243,"reminder_id":null,"etag":"16503023-1612804243","security_user_rights":["read","update","trash"],"note":"Retracted from Rightmove","related":{"note_contacts":[],"note_market_leads":[{"id":"4000530","market_lead":{"system_label":"the old dairy, 25 Church Road, Bedfordshire MK17 8TG","assignee":null,"lead_status":{"id":"26741","text":"Contact Details Required"},"id":616890}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"system_created_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16503023},{"system_record_state":"active","system_ctime":1612804246,"system_modtime":1612804246,"reminder_id":null,"etag":"16503027-1612804246","security_user_rights":["read","update","trash"],"note":"Retracted from Rightmove","related":{"note_contacts":[],"note_market_leads":[{"id":"4000533","market_lead":{"system_label":"5 LONDON ROAD, Loughton, Milton Keynes MK5 8AB","assignee":null,"lead_status":{"id":"26573","text":"New Lead"},"id":620494}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"system_created_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16503027},{"system_record_state":"active","system_ctime":1612804248,"system_modtime":1612804248,"reminder_id":null,"etag":"16503029-1612804248","security_user_rights":["read","update","trash"],"note":"Retracted from Rightmove","related":{"note_contacts":[],"note_market_leads":[{"id":"4000535","market_lead":{"system_label":"116 VILLAGE ROAD, Bromham MK43 8HU","assignee":null,"lead_status":{"id":"26741","text":"Contact Details Required"},"id":624192}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"system_created_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16503029},{"system_record_state":"active","system_ctime":1612804254,"system_modtime":1612804254,"reminder_id":null,"etag":"16503034-1612804254","security_user_rights":["read","update","trash"],"note":"Retracted from Rightmove","related":{"note_contacts":[],"note_market_leads":[{"id":"4000540","market_lead":{"system_label":"westbury house PRESTON ROAD, Gawcott MK18 4HS","assignee":null,"lead_status":{"id":"26741","text":"Contact Details Required"},"id":657441}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"system_created_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16503034},{"system_record_state":"active","system_ctime":1612804259,"system_modtime":1612804259,"reminder_id":null,"etag":"16503040-1612804259","security_user_rights":["read","update","trash"],"note":"Retracted from Rightmove","related":{"note_contacts":[],"note_market_leads":[{"id":"4000544","market_lead":{"system_label":"22 MOLIVERS LANE, Bromham MK43 8JT","assignee":null,"lead_status":{"id":"26741","text":"Contact Details Required"},"id":664889}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"system_created_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16503040},{"system_record_state":"active","system_ctime":1612804262,"system_modtime":1612804262,"reminder_id":null,"etag":"16503042-1612804262","security_user_rights":["read","update","trash"],"note":"Retracted from Rightmove","related":{"note_contacts":[],"note_market_leads":[{"id":"4000546","market_lead":{"system_label":"THE OLD POST OFFICE HIGH STREET, Cublington LU7 0LL","assignee":null,"lead_status":{"id":"26741","text":"Contact Details Required"},"id":666982}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"system_created_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16503042},{"system_record_state":"active","system_ctime":1612804265,"system_modtime":1612804265,"reminder_id":null,"etag":"16503045-1612804265","security_user_rights":["read","update","trash"],"note":"Retracted from Rightmove","related":{"note_contacts":[],"note_market_leads":[{"id":"4000549","market_lead":{"system_label":"orkland house BEDFORD ROAD, Stagsden MK43 8TP","assignee":null,"lead_status":{"id":"26741","text":"Contact Details Required"},"id":669816}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"system_created_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16503045},{"system_record_state":"active","system_ctime":1612804284,"system_modtime":1612804284,"reminder_id":null,"etag":"16503054-1612804284","security_user_rights":["read","update","trash"],"note":"Retracted from Rightmove","related":{"note_contacts":[],"note_market_leads":[{"id":"4000552","market_lead":{"system_label":"SUNNY BANK WEST END, Haynes MK45 3QS","assignee":null,"lead_status":{"id":"26741","text":"Contact Details Required"},"id":674363}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"system_created_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16503054},{"system_record_state":"active","system_ctime":1612804286,"system_modtime":1612804286,"reminder_id":null,"etag":"16503055-1612804286","security_user_rights":["read","update","trash"],"note":"Retracted from Rightmove","related":{"note_contacts":[],"note_market_leads":[{"id":"4000553","market_lead":{"system_label":"Lacey House High Street, Lavendon MK46 4HA","assignee":null,"lead_status":{"id":"26741","text":"Contact Details Required"},"id":678313}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"system_created_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16503055},{"system_record_state":"active","system_ctime":1612804291,"system_modtime":1612804291,"reminder_id":null,"etag":"16503061-1612804291","security_user_rights":["read","update","trash"],"note":"Retracted from Rightmove","related":{"note_contacts":[],"note_market_leads":[{"id":"4000556","market_lead":{"system_label":"4 AMBLERS WAY, Buckingham MK18 2BT","assignee":null,"lead_status":{"id":"26741","text":"Contact Details Required"},"id":683489}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"system_created_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16503061},{"system_record_state":"active","system_ctime":1612804295,"system_modtime":1612804296,"reminder_id":null,"etag":"16503064-1612804296","security_user_rights":["read","update","trash"],"note":"Retracted from Rightmove","related":{"note_contacts":[],"note_market_leads":[{"id":"4000558","market_lead":{"system_label":"19 WOOD LANE, Aspley Guise MK17 8EJ","assignee":null,"lead_status":{"id":"26741","text":"Contact Details Required"},"id":686882}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"system_created_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16503064},{"system_record_state":"active","system_ctime":1612804300,"system_modtime":1612804300,"reminder_id":null,"etag":"16503068-1612804300","security_user_rights":["read","update","trash"],"note":"Retracted from Rightmove","related":{"note_contacts":[],"note_market_leads":[{"id":"4000561","market_lead":{"system_label":"Flat 48A GEORGE STREET, Maulden MK45 2DF","assignee":null,"lead_status":{"id":"26741","text":"Contact Details Required"},"id":688503}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"system_created_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16503068},{"system_record_state":"active","system_ctime":1612804305,"system_modtime":1612804305,"reminder_id":null,"etag":"16503072-1612804305","security_user_rights":["read","update","trash"],"note":"Retracted from Rightmove","related":{"note_contacts":[],"note_market_leads":[{"id":"4000565","market_lead":{"system_label":"Sycamore AYLESBURY ROAD, Wing LU7 0PD","assignee":null,"lead_status":{"id":"26741","text":"Contact Details Required"},"id":692289}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"system_created_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16503072},{"system_record_state":"active","system_ctime":1612804307,"system_modtime":1612804308,"reminder_id":null,"etag":"16503075-1612804308","security_user_rights":["read","update","trash"],"note":"Retracted from Rightmove","related":{"note_contacts":[],"note_market_leads":[{"id":"4000568","market_lead":{"system_label":"PENRITH AVENUE, Dunstable LU6 3AN","assignee":null,"lead_status":{"id":"26743","text":"Door Number Required"},"id":756664}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"system_created_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16503075},{"system_record_state":"active","system_ctime":1612804310,"system_modtime":1612804310,"reminder_id":null,"etag":"16503078-1612804310","security_user_rights":["read","update","trash"],"note":"Retracted from Rightmove","related":{"note_contacts":[],"note_market_leads":[{"id":"4000571","market_lead":{"system_label":"100 HARTLAND AVENUE, Tattenhoe, Milton Keynes MK4 3FH","assignee":null,"lead_status":{"id":"26573","text":"New Lead"},"id":765083}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"system_created_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16503078},{"system_record_state":"active","system_ctime":1612804312,"system_modtime":1612804312,"reminder_id":null,"etag":"16503080-1612804312","security_user_rights":["read","update","trash"],"note":"Lead archived by branch","related":{"note_contacts":[],"note_market_leads":[{"id":"4000573","market_lead":{"system_label":"CHEYNE CLOSE, Pitstone LU7 9QU","assignee":null,"lead_status":{"id":"26743","text":"Door Number Required"},"id":816313}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"system_created_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16503080},{"system_record_state":"active","system_ctime":1612806099,"system_modtime":1612806099,"reminder_id":null,"etag":"16504948-1612806099","security_user_rights":["read","update","trash"],"note":"Tied at 415K","related":{"note_contacts":[{"id":"2756620","contact":{"system_record_state":"active","system_ctime":"1612366181","system_modtime":"1612861970","name":"Thomas Anderson Offer","email_address":"TOM_OFFER@HOTMAIL.COM","phone_number":"07834 626201","fax_number":null,"is_dnd":null,"type":"person","last_contacted_date":"2021-02-08","name_last":"Anderson Offer","address_postal":null,"address":"15 Redshaw Close\r\nBUCKINGHAM\r\nMK18 7BS","interest_level":null,"marketing_birthday":null,"marketing_enquiry_source":null,"marketing_gender":null,"marketing_postcode":null,"name_legal":null,"name_salutation":null,"name_addressee":null,"system_owner_user":{"id":"19522","name":"Steven Field","first_name":"Steven","last_name":"Field","email_address":"steven.field@chewtonrose.co.uk"},"contact_image":null,"marketing_enquiry_method":null,"etag":"2092435-1612861970","id":"2092435"}}],"note_market_leads":[],"note_properties":[{"id":"10486746","property":{"system_search_key":"6 High Street, Great Horwood, Buckinghamshire MK17 0QL","adr_longitude":"-0.879632","adr_latitude":"51.9736231","adr_unit_number":null,"adr_street_number":"6","adr_street_name":"High Street","adr_state_or_region":"Buckinghamshire","adr_locality":null,"adr_suburb_or_town":"Great Horwood","adr_postcode":"MK17 0QL","adr_country":"uk","adr_estate_name":null,"adr_estate_stage":null,"system_owner_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"adr_building":null,"property_category":{"id":"residential","text":"Residential"},"property_image":{"uri":"rexlive:\/\/1755\/listings\/47534\/images\/6HighStreet-35_46af-eaa7-829f-9c5c-6643-6708-b7df-a8bc_20201208010004.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/47534\/images\/6HighStreet-35_46af-eaa7-829f-9c5c-6643-6708-b7df-a8bc_20201208010004.jpg","thumbs":{"800x600":{"uri":"rexlive:\/\/1755\/listings\/47534\/images\/6HighStreet-35_46af-eaa7-829f-9c5c-6643-6708-b7df-a8bc_20201208010004_800x600.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/47534\/images\/6HighStreet-35_46af-eaa7-829f-9c5c-6643-6708-b7df-a8bc_20201208010004_800x600.jpg"},"400x300":{"uri":"rexlive:\/\/1755\/listings\/47534\/images\/6HighStreet-35_46af-eaa7-829f-9c5c-6643-6708-b7df-a8bc_20201208010004_400x300.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/47534\/images\/6HighStreet-35_46af-eaa7-829f-9c5c-6643-6708-b7df-a8bc_20201208010004_400x300.jpg"},"200x150":{"uri":"rexlive:\/\/1755\/listings\/47534\/images\/6HighStreet-35_46af-eaa7-829f-9c5c-6643-6708-b7df-a8bc_20201208010004_200x150.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/47534\/images\/6HighStreet-35_46af-eaa7-829f-9c5c-6643-6708-b7df-a8bc_20201208010004_200x150.jpg"},"80x60":{"uri":"rexlive:\/\/1755\/listings\/47534\/images\/6HighStreet-35_46af-eaa7-829f-9c5c-6643-6708-b7df-a8bc_20201208010004_80x60.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/47534\/images\/6HighStreet-35_46af-eaa7-829f-9c5c-6643-6708-b7df-a8bc_20201208010004_80x60.jpg"},"original":{"uri":"rexlive:\/\/1755\/listings\/47534\/images\/6HighStreet-35_46af-eaa7-829f-9c5c-6643-6708-b7df-a8bc_20201208010004_original.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/47534\/images\/6HighStreet-35_46af-eaa7-829f-9c5c-6643-6708-b7df-a8bc_20201208010004_original.jpg"}}},"etag":"515604-1612805244","id":"515604"}}],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19522","name":"Steven Field","first_name":"Steven","last_name":"Field","email_address":"steven.field@chewtonrose.co.uk"},"system_created_user":{"id":"19522","name":"Steven Field","first_name":"Steven","last_name":"Field","email_address":"steven.field@chewtonrose.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16504948},{"system_record_state":"active","system_ctime":1612813133,"system_modtime":1612813133,"reminder_id":null,"etag":"16514271-1612813133","security_user_rights":["read","update","trash"],"note":"Price reduction from \u00a3565,000 to \u00a3550,000","related":{"note_contacts":[],"note_market_leads":[{"id":"4010890","market_lead":{"system_label":"10 CHANTRY CLOSE, Woburn Sands MK17 8UB","assignee":null,"lead_status":{"id":"26741","text":"Contact Details Required"},"id":653395}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"system_created_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16514271},{"system_record_state":"active","system_ctime":1612813138,"system_modtime":1612813138,"reminder_id":null,"etag":"16514272-1612813138","security_user_rights":["read","update","trash"],"note":"Price reduction from \u00a3600,000 to \u00a3575,000","related":{"note_contacts":[],"note_market_leads":[{"id":"4010891","market_lead":{"system_label":"The Beeches, 16 Chaloners Hill, Steeple Claydon MK18 2PE","assignee":null,"lead_status":{"id":"26741","text":"Contact Details Required"},"id":656841}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"system_created_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16514272},{"system_record_state":"active","system_ctime":1612813170,"system_modtime":1612813170,"reminder_id":null,"etag":"16514275-1612813170","security_user_rights":["read","update","trash"],"note":"Price reduction from \u00a3565,000 to \u00a3550,000","related":{"note_contacts":[],"note_market_leads":[{"id":"4010893","market_lead":{"system_label":"10 CHANTRY CLOSE, Woburn Sands MK17 8UB","assignee":null,"lead_status":{"id":"26741","text":"Contact Details Required"},"id":695896}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"system_created_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16514275},{"system_record_state":"active","system_ctime":1612813172,"system_modtime":1612813172,"reminder_id":null,"etag":"16514276-1612813172","security_user_rights":["read","update","trash"],"note":"Lead archived due to an existing duplicate record: DMA ID - 13168628, market lead ID - 816315","related":{"note_contacts":[],"note_market_leads":[{"id":"4010894","market_lead":{"system_label":"100 HARTLAND AVENUE, Tattenhoe, Milton Keynes MK4 3FH","assignee":null,"lead_status":{"id":"26573","text":"New Lead"},"id":765083}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"system_created_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16514276},{"system_record_state":"active","system_ctime":1612813175,"system_modtime":1612813175,"reminder_id":null,"etag":"16514277-1612813175","security_user_rights":["read","update","trash"],"note":"Record has been cleaned by Third Party Processing (Webalytix) with Number","related":{"note_contacts":[],"note_market_leads":[{"id":"4010895","market_lead":{"system_label":"1 CHESTNUT AVENUE, Bromham MK43 8HP","assignee":null,"lead_status":{"id":"26573","text":"New Lead"},"id":812328}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"system_created_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16514277},{"system_record_state":"active","system_ctime":1612813177,"system_modtime":1612813177,"reminder_id":null,"etag":"16514278-1612813177","security_user_rights":["read","update","trash"],"note":"Record has been cleaned by Third Party Processing (Webalytix) with Number","related":{"note_contacts":[],"note_market_leads":[{"id":"4010896","market_lead":{"system_label":"111 CLOPHILL ROAD, Maulden MK45 2AE","assignee":null,"lead_status":{"id":"26744","text":"In Contact"},"id":812329}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"system_created_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16514278},{"system_record_state":"active","system_ctime":1612813179,"system_modtime":1612813179,"reminder_id":null,"etag":"16514279-1612813179","security_user_rights":["read","update","trash"],"note":"Record has been cleaned by Third Party Processing (Webalytix) with Number","related":{"note_contacts":[],"note_market_leads":[{"id":"4010897","market_lead":{"system_label":"2 LANGNEY GREEN, Tattenhoe, Milton Keynes MK4 3ES","assignee":null,"lead_status":{"id":"26744","text":"In Contact"},"id":814000}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"system_created_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16514279},{"system_record_state":"active","system_ctime":1612813180,"system_modtime":1612813180,"reminder_id":null,"etag":"16514280-1612813180","security_user_rights":["read","update","trash"],"note":"Record has been cleaned by Third Party Processing (Webalytix) with Number","related":{"note_contacts":[],"note_market_leads":[{"id":"4010898","market_lead":{"system_label":"THE GREEN, Radwell MK43 7HT","assignee":null,"lead_status":{"id":"26744","text":"In Contact"},"id":814002}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"system_created_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16514280},{"system_record_state":"active","system_ctime":1612813181,"system_modtime":1612813181,"reminder_id":null,"etag":"16514282-1612813181","security_user_rights":["read","update","trash"],"note":"Rightmove Process: full address found","related":{"note_contacts":[],"note_market_leads":[{"id":"4010899","market_lead":{"system_label":"THE GREEN, Radwell MK43 7HT","assignee":null,"lead_status":{"id":"26744","text":"In Contact"},"id":814002}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"system_created_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16514282},{"system_record_state":"active","system_ctime":1612813182,"system_modtime":1612813182,"reminder_id":null,"etag":"16514283-1612813182","security_user_rights":["read","update","trash"],"note":"Record has been cleaned by Third Party Processing (Webalytix) no number returned","related":{"note_contacts":[],"note_market_leads":[{"id":"4010900","market_lead":{"system_label":"5 EATON PARK, Eaton Bray LU6 2SP","assignee":null,"lead_status":{"id":"26573","text":"New Lead"},"id":817941}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"system_created_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16514283},{"system_record_state":"active","system_ctime":1612813184,"system_modtime":1612813184,"reminder_id":null,"etag":"16514285-1612813184","security_user_rights":["read","update","trash"],"note":"Record has been cleaned by Third Party Processing (Webalytix) no number returned","related":{"note_contacts":[],"note_market_leads":[{"id":"4010902","market_lead":{"system_label":"4 TREVITHICK LANE, Shenley Lodge, Milton Keynes MK5 7EE","assignee":null,"lead_status":{"id":"26741","text":"Contact Details Required"},"id":819645}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"system_created_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16514285},{"system_record_state":"active","system_ctime":1612813187,"system_modtime":1612813187,"reminder_id":null,"etag":"16514286-1612813187","security_user_rights":["read","update","trash"],"note":"Rightmove Process: full address found","related":{"note_contacts":[],"note_market_leads":[{"id":"4010903","market_lead":{"system_label":"91 HIGH STREET, Stony Stratford, Milton Keynes MK11 1AT","assignee":null,"lead_status":{"id":"26741","text":"Contact Details Required"},"id":820509}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"system_created_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16514286},{"system_record_state":"active","system_ctime":1612820079,"system_modtime":1612820079,"reminder_id":null,"etag":"16517632-1612820079","security_user_rights":["read","update","trash"],"note":"Lead archived due to an existing duplicate record: DMA ID - 12926600, market lead ID - 653395","related":{"note_contacts":[],"note_market_leads":[{"id":"4014213","market_lead":{"system_label":"10 CHANTRY CLOSE, Woburn Sands MK17 8UB","assignee":null,"lead_status":{"id":"26741","text":"Contact Details Required"},"id":695896}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"system_created_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16517632},{"system_record_state":"active","system_ctime":1612820080,"system_modtime":1612820080,"reminder_id":null,"etag":"16517634-1612820080","security_user_rights":["read","update","trash"],"note":"Lead archived due to an existing duplicate record: DMA ID - 13168628, market lead ID - 816315","related":{"note_contacts":[],"note_market_leads":[{"id":"4014215","market_lead":{"system_label":"100 HARTLAND AVENUE, Tattenhoe, Milton Keynes MK4 3FH","assignee":null,"lead_status":{"id":"26573","text":"New Lead"},"id":765083}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"system_created_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16517634},{"system_record_state":"active","system_ctime":1612850539,"system_modtime":1612850539,"reminder_id":null,"etag":"16519306-1612850539","security_user_rights":["read","update","trash"],"note":"EoC:Rightmove file (rightmove status: Withdrawn)","related":{"note_contacts":[],"note_market_leads":[{"id":"4015298","market_lead":{"system_label":"Lacey House High Street, Lavendon MK46 4HA","assignee":null,"lead_status":{"id":"26741","text":"Contact Details Required"},"id":678313}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"system_created_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16519306},{"system_record_state":"active","system_ctime":1612854340,"system_modtime":1612854340,"reminder_id":null,"etag":"16521455-1612854340","security_user_rights":["read","update","trash"],"note":"Record has been cleaned by Internal Wash Processing","related":{"note_contacts":[],"note_market_leads":[{"id":"4017442","market_lead":{"system_label":"5 EATON PARK, Eaton Bray LU6 2SP","assignee":null,"lead_status":{"id":"26573","text":"New Lead"},"id":817941}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"system_created_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16521455},{"system_record_state":"active","system_ctime":1612854341,"system_modtime":1612854342,"reminder_id":null,"etag":"16521467-1612854342","security_user_rights":["read","update","trash"],"note":"Record has been cleaned by Internal Wash Processing","related":{"note_contacts":[],"note_market_leads":[{"id":"4017456","market_lead":{"system_label":"4 TREVITHICK LANE, Shenley Lodge, Milton Keynes MK5 7EE","assignee":null,"lead_status":{"id":"26741","text":"Contact Details Required"},"id":819645}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"system_created_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16521467},{"system_record_state":"active","system_ctime":1612867334,"system_modtime":1612867334,"reminder_id":null,"etag":"16537123-1612867334","security_user_rights":["read","update","trash"],"note":"Advised re PR","related":{"note_contacts":[{"id":"2758543","contact":{"system_record_state":"active","system_ctime":"1611222231","system_modtime":"1612887327","name":"Calvin Kent","email_address":"harsharan@reelnrg.com","phone_number":"07497 001629 Sharan","fax_number":null,"is_dnd":null,"type":"person","last_contacted_date":"2021-02-16","name_last":"Kent","address_postal":null,"address":"3 Capek Road\r\nOakgrove\r\nMILTON KEYNES\r\nMK10 9TQ","interest_level":null,"marketing_birthday":null,"marketing_enquiry_source":null,"marketing_gender":null,"marketing_postcode":null,"name_legal":null,"name_salutation":null,"name_addressee":null,"system_owner_user":{"id":"24027","name":"Taylor Ruff","first_name":"Taylor","last_name":"Ruff","email_address":"Taylor.Ruff@spicerhaart.co.uk"},"contact_image":null,"marketing_enquiry_method":null,"etag":"2072524-1612887327","id":"2072524"}},{"id":"2758544","contact":{"system_record_state":"active","system_ctime":"1559634370","system_modtime":"1598697917","name":"Mr shazia ojla","email_address":"shazia.ojla@rentokil-initial.com","phone_number":"07776 455724","fax_number":null,"is_dnd":null,"type":"person","last_contacted_date":"2021-02-09","name_last":"shazia ojla","address_postal":null,"address":"4 Tanfield Lane\r\nMiddleton\r\nMILTON KEYNES\r\nMK10 9HB","interest_level":null,"marketing_birthday":null,"marketing_enquiry_source":"Internet - Rightmove","marketing_gender":null,"marketing_postcode":null,"name_legal":null,"name_salutation":null,"name_addressee":null,"system_owner_user":{"id":0,"name":"System User","first_name":"System","last_name":"User","email_address":"no-reply@rexsoftware.com.au"},"contact_image":null,"marketing_enquiry_method":null,"etag":"308705-1598697917","id":"308705"}},{"id":"2758545","contact":{"system_record_state":"active","system_ctime":"1554993062","system_modtime":"1559055601","name":"Mr Armen Karapetyan","email_address":"armenk@frostsbodyshop.co.uk","phone_number":"07834 696222","fax_number":null,"is_dnd":null,"type":"person","last_contacted_date":"2021-02-09","name_last":"Armen Karapetyan","address_postal":null,"address":"15 Waglands Garden\r\n\r\nBUCKINGHAM\r\nMK18 1EA","interest_level":null,"marketing_birthday":null,"marketing_enquiry_source":null,"marketing_gender":null,"marketing_postcode":null,"name_legal":null,"name_salutation":null,"name_addressee":null,"system_owner_user":{"id":0,"name":"System User","first_name":"System","last_name":"User","email_address":"no-reply@rexsoftware.com.au"},"contact_image":null,"marketing_enquiry_method":null,"etag":"290783-1559055601","id":"290783"}},{"id":"2758546","contact":{"system_record_state":"active","system_ctime":"1545165150","system_modtime":"1558519449","name":"Kirsty Lacey","email_address":"kirsty.lacey@santander.co.uk","phone_number":"07904 363871","fax_number":null,"is_dnd":null,"type":"person","last_contacted_date":"2021-02-09","name_last":"Lacey","address_postal":null,"address":"21 Duncan Grove\r\nShenley Church End\r\nMilton keynes\r\nMK5 6HL","interest_level":null,"marketing_birthday":"1900-01-01","marketing_enquiry_source":null,"marketing_gender":null,"marketing_postcode":"MK5 6HL","name_legal":null,"name_salutation":null,"name_addressee":null,"system_owner_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"contact_image":null,"marketing_enquiry_method":null,"etag":"28041-1558519449","id":"28041"}},{"id":"2758547","contact":{"system_record_state":"active","system_ctime":"1598538675","system_modtime":"1598538684","name":"Andrea Bates","email_address":"craftybates@gmail.com","phone_number":"07956 687069","fax_number":null,"is_dnd":null,"type":"person","last_contacted_date":"2021-02-25","name_last":"Bates","address_postal":null,"address":null,"interest_level":null,"marketing_birthday":null,"marketing_enquiry_source":null,"marketing_gender":null,"marketing_postcode":null,"name_legal":null,"name_salutation":null,"name_addressee":null,"system_owner_user":{"id":"31779","name":"Natalie Eagle","first_name":"Natalie","last_name":"Eagle","email_address":"Natalie.Eagle@spicerhaart.co.uk"},"contact_image":null,"marketing_enquiry_method":null,"etag":"1861161-1598538684","id":"1861161"}}],"note_market_leads":[],"note_properties":[{"id":"10488057","property":{"system_search_key":"17 Hammond Crescent, Milton Keynes, Milton Keynes MK15 9DH","adr_longitude":null,"adr_latitude":null,"adr_unit_number":null,"adr_street_number":"17","adr_street_name":"Hammond Crescent","adr_state_or_region":"Milton Keynes","adr_locality":null,"adr_suburb_or_town":"Milton Keynes","adr_postcode":"MK15 9DH","adr_country":"uk","adr_estate_name":null,"adr_estate_stage":null,"system_owner_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"adr_building":null,"property_category":{"id":"residential","text":"Residential"},"property_image":{"uri":"rexlive:\/\/1755\/listings\/39547\/images\/DJI_0752_fbd5-7a48-ec18-6ca3-253a-225b-5157-7050_20200829020831.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/39547\/images\/DJI_0752_fbd5-7a48-ec18-6ca3-253a-225b-5157-7050_20200829020831.jpg","thumbs":{"800x600":{"uri":"rexlive:\/\/1755\/listings\/39547\/images\/DJI_0752_fbd5-7a48-ec18-6ca3-253a-225b-5157-7050_20200829020831_800x600.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/39547\/images\/DJI_0752_fbd5-7a48-ec18-6ca3-253a-225b-5157-7050_20200829020831_800x600.jpg"},"400x300":{"uri":"rexlive:\/\/1755\/listings\/39547\/images\/DJI_0752_fbd5-7a48-ec18-6ca3-253a-225b-5157-7050_20200829020831_400x300.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/39547\/images\/DJI_0752_fbd5-7a48-ec18-6ca3-253a-225b-5157-7050_20200829020831_400x300.jpg"},"200x150":{"uri":"rexlive:\/\/1755\/listings\/39547\/images\/DJI_0752_fbd5-7a48-ec18-6ca3-253a-225b-5157-7050_20200829020831_200x150.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/39547\/images\/DJI_0752_fbd5-7a48-ec18-6ca3-253a-225b-5157-7050_20200829020831_200x150.jpg"},"80x60":{"uri":"rexlive:\/\/1755\/listings\/39547\/images\/DJI_0752_fbd5-7a48-ec18-6ca3-253a-225b-5157-7050_20200829020831_80x60.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/39547\/images\/DJI_0752_fbd5-7a48-ec18-6ca3-253a-225b-5157-7050_20200829020831_80x60.jpg"},"original":{"uri":"rexlive:\/\/1755\/listings\/39547\/images\/DJI_0752_fbd5-7a48-ec18-6ca3-253a-225b-5157-7050_20200829020831_original.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/39547\/images\/DJI_0752_fbd5-7a48-ec18-6ca3-253a-225b-5157-7050_20200829020831_original.jpg"}}},"etag":"703084-1613039083","id":"703084"}}],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19522","name":"Steven Field","first_name":"Steven","last_name":"Field","email_address":"steven.field@chewtonrose.co.uk"},"system_created_user":{"id":"19522","name":"Steven Field","first_name":"Steven","last_name":"Field","email_address":"steven.field@chewtonrose.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16537123},{"system_record_state":"active","system_ctime":1612867926,"system_modtime":1612867926,"reminder_id":null,"etag":"16537300-1612867926","security_user_rights":["read","update","trash"],"note":"let know re PR","related":{"note_contacts":[{"id":"2758650","contact":{"system_record_state":"active","system_ctime":"1611159034","system_modtime":"1611306749","name":"Andrew Norris","email_address":"andrew.norris@santander.co.uk","phone_number":"07802 325603","fax_number":null,"is_dnd":null,"type":"person","last_contacted_date":"2021-02-09","name_last":"Norris","address_postal":null,"address":"Normandy Way\nBletchley\nMILTON KEYNES\nMK3 7UN","interest_level":null,"marketing_birthday":null,"marketing_enquiry_source":"Internet - On The Market","marketing_gender":null,"marketing_postcode":null,"name_legal":null,"name_salutation":null,"name_addressee":null,"system_owner_user":{"id":0,"name":"System User","first_name":"System","last_name":"User","email_address":"no-reply@rexsoftware.com.au"},"contact_image":null,"marketing_enquiry_method":null,"etag":"2071931-1611306749","id":"2071931"}}],"note_market_leads":[],"note_properties":[{"id":"10488172","property":{"system_search_key":"17 Hammond Crescent, Milton Keynes, Milton Keynes MK15 9DH","adr_longitude":null,"adr_latitude":null,"adr_unit_number":null,"adr_street_number":"17","adr_street_name":"Hammond Crescent","adr_state_or_region":"Milton Keynes","adr_locality":null,"adr_suburb_or_town":"Milton Keynes","adr_postcode":"MK15 9DH","adr_country":"uk","adr_estate_name":null,"adr_estate_stage":null,"system_owner_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"adr_building":null,"property_category":{"id":"residential","text":"Residential"},"property_image":{"uri":"rexlive:\/\/1755\/listings\/39547\/images\/DJI_0752_fbd5-7a48-ec18-6ca3-253a-225b-5157-7050_20200829020831.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/39547\/images\/DJI_0752_fbd5-7a48-ec18-6ca3-253a-225b-5157-7050_20200829020831.jpg","thumbs":{"800x600":{"uri":"rexlive:\/\/1755\/listings\/39547\/images\/DJI_0752_fbd5-7a48-ec18-6ca3-253a-225b-5157-7050_20200829020831_800x600.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/39547\/images\/DJI_0752_fbd5-7a48-ec18-6ca3-253a-225b-5157-7050_20200829020831_800x600.jpg"},"400x300":{"uri":"rexlive:\/\/1755\/listings\/39547\/images\/DJI_0752_fbd5-7a48-ec18-6ca3-253a-225b-5157-7050_20200829020831_400x300.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/39547\/images\/DJI_0752_fbd5-7a48-ec18-6ca3-253a-225b-5157-7050_20200829020831_400x300.jpg"},"200x150":{"uri":"rexlive:\/\/1755\/listings\/39547\/images\/DJI_0752_fbd5-7a48-ec18-6ca3-253a-225b-5157-7050_20200829020831_200x150.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/39547\/images\/DJI_0752_fbd5-7a48-ec18-6ca3-253a-225b-5157-7050_20200829020831_200x150.jpg"},"80x60":{"uri":"rexlive:\/\/1755\/listings\/39547\/images\/DJI_0752_fbd5-7a48-ec18-6ca3-253a-225b-5157-7050_20200829020831_80x60.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/39547\/images\/DJI_0752_fbd5-7a48-ec18-6ca3-253a-225b-5157-7050_20200829020831_80x60.jpg"},"original":{"uri":"rexlive:\/\/1755\/listings\/39547\/images\/DJI_0752_fbd5-7a48-ec18-6ca3-253a-225b-5157-7050_20200829020831_original.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/39547\/images\/DJI_0752_fbd5-7a48-ec18-6ca3-253a-225b-5157-7050_20200829020831_original.jpg"}}},"etag":"703084-1613039083","id":"703084"}}],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19522","name":"Steven Field","first_name":"Steven","last_name":"Field","email_address":"steven.field@chewtonrose.co.uk"},"system_created_user":{"id":"19522","name":"Steven Field","first_name":"Steven","last_name":"Field","email_address":"steven.field@chewtonrose.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16537300},{"system_record_state":"active","system_ctime":1612867995,"system_modtime":1612867995,"reminder_id":null,"etag":"16537312-1612867995","security_user_rights":["read","update","trash"],"note":"let know re PR","related":{"note_contacts":[{"id":"2758659","contact":{"system_record_state":"active","system_ctime":"1607870273","system_modtime":"1607935698","name":"Sudhir Anand","email_address":"sudhir.anand.1@gmail.com","phone_number":"07900 210183","fax_number":null,"is_dnd":null,"type":"person","last_contacted_date":"2021-03-11","name_last":"Anand","address_postal":null,"address":"46 Parsons Road\r\nSLOUGH\r\nSL3 7GU","interest_level":null,"marketing_birthday":null,"marketing_enquiry_source":null,"marketing_gender":null,"marketing_postcode":null,"name_legal":null,"name_salutation":null,"name_addressee":null,"system_owner_user":{"id":"32944","name":"Ryan McCready","first_name":"Ryan","last_name":"McCready","email_address":"Ryan.McCready@spicerhaart.co.uk"},"contact_image":null,"marketing_enquiry_method":null,"etag":"2013085-1607935698","id":"2013085"}}],"note_market_leads":[],"note_properties":[{"id":"10488180","property":{"system_search_key":"17 Hammond Crescent, Milton Keynes, Milton Keynes MK15 9DH","adr_longitude":null,"adr_latitude":null,"adr_unit_number":null,"adr_street_number":"17","adr_street_name":"Hammond Crescent","adr_state_or_region":"Milton Keynes","adr_locality":null,"adr_suburb_or_town":"Milton Keynes","adr_postcode":"MK15 9DH","adr_country":"uk","adr_estate_name":null,"adr_estate_stage":null,"system_owner_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"adr_building":null,"property_category":{"id":"residential","text":"Residential"},"property_image":{"uri":"rexlive:\/\/1755\/listings\/39547\/images\/DJI_0752_fbd5-7a48-ec18-6ca3-253a-225b-5157-7050_20200829020831.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/39547\/images\/DJI_0752_fbd5-7a48-ec18-6ca3-253a-225b-5157-7050_20200829020831.jpg","thumbs":{"800x600":{"uri":"rexlive:\/\/1755\/listings\/39547\/images\/DJI_0752_fbd5-7a48-ec18-6ca3-253a-225b-5157-7050_20200829020831_800x600.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/39547\/images\/DJI_0752_fbd5-7a48-ec18-6ca3-253a-225b-5157-7050_20200829020831_800x600.jpg"},"400x300":{"uri":"rexlive:\/\/1755\/listings\/39547\/images\/DJI_0752_fbd5-7a48-ec18-6ca3-253a-225b-5157-7050_20200829020831_400x300.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/39547\/images\/DJI_0752_fbd5-7a48-ec18-6ca3-253a-225b-5157-7050_20200829020831_400x300.jpg"},"200x150":{"uri":"rexlive:\/\/1755\/listings\/39547\/images\/DJI_0752_fbd5-7a48-ec18-6ca3-253a-225b-5157-7050_20200829020831_200x150.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/39547\/images\/DJI_0752_fbd5-7a48-ec18-6ca3-253a-225b-5157-7050_20200829020831_200x150.jpg"},"80x60":{"uri":"rexlive:\/\/1755\/listings\/39547\/images\/DJI_0752_fbd5-7a48-ec18-6ca3-253a-225b-5157-7050_20200829020831_80x60.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/39547\/images\/DJI_0752_fbd5-7a48-ec18-6ca3-253a-225b-5157-7050_20200829020831_80x60.jpg"},"original":{"uri":"rexlive:\/\/1755\/listings\/39547\/images\/DJI_0752_fbd5-7a48-ec18-6ca3-253a-225b-5157-7050_20200829020831_original.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/39547\/images\/DJI_0752_fbd5-7a48-ec18-6ca3-253a-225b-5157-7050_20200829020831_original.jpg"}}},"etag":"703084-1613039083","id":"703084"}}],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19522","name":"Steven Field","first_name":"Steven","last_name":"Field","email_address":"steven.field@chewtonrose.co.uk"},"system_created_user":{"id":"19522","name":"Steven Field","first_name":"Steven","last_name":"Field","email_address":"steven.field@chewtonrose.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16537312},{"system_record_state":"active","system_ctime":1612868447,"system_modtime":1612868447,"reminder_id":null,"etag":"16537472-1612868447","security_user_rights":["read","update","trash"],"note":"let know re PR","related":{"note_contacts":[{"id":"2758728","contact":{"system_record_state":"active","system_ctime":"1606223259","system_modtime":"1606223264","name":"julie moinet","email_address":"juliemoinetmk@gmail.com","phone_number":"07854 556646","fax_number":null,"is_dnd":null,"type":"person","last_contacted_date":"2021-03-11","name_last":"moinet","address_postal":null,"address":null,"interest_level":null,"marketing_birthday":null,"marketing_enquiry_source":null,"marketing_gender":null,"marketing_postcode":null,"name_legal":null,"name_salutation":null,"name_addressee":null,"system_owner_user":{"id":"20440","name":"Martin Levett","first_name":"Martin","last_name":"Levett","email_address":"martin.levett@spicerhaart.co.uk"},"contact_image":null,"marketing_enquiry_method":null,"etag":"1982254-1606223264","id":"1982254"}}],"note_market_leads":[],"note_properties":[{"id":"10488264","property":{"system_search_key":"17 Hammond Crescent, Milton Keynes, Milton Keynes MK15 9DH","adr_longitude":null,"adr_latitude":null,"adr_unit_number":null,"adr_street_number":"17","adr_street_name":"Hammond Crescent","adr_state_or_region":"Milton Keynes","adr_locality":null,"adr_suburb_or_town":"Milton Keynes","adr_postcode":"MK15 9DH","adr_country":"uk","adr_estate_name":null,"adr_estate_stage":null,"system_owner_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"adr_building":null,"property_category":{"id":"residential","text":"Residential"},"property_image":{"uri":"rexlive:\/\/1755\/listings\/39547\/images\/DJI_0752_fbd5-7a48-ec18-6ca3-253a-225b-5157-7050_20200829020831.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/39547\/images\/DJI_0752_fbd5-7a48-ec18-6ca3-253a-225b-5157-7050_20200829020831.jpg","thumbs":{"800x600":{"uri":"rexlive:\/\/1755\/listings\/39547\/images\/DJI_0752_fbd5-7a48-ec18-6ca3-253a-225b-5157-7050_20200829020831_800x600.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/39547\/images\/DJI_0752_fbd5-7a48-ec18-6ca3-253a-225b-5157-7050_20200829020831_800x600.jpg"},"400x300":{"uri":"rexlive:\/\/1755\/listings\/39547\/images\/DJI_0752_fbd5-7a48-ec18-6ca3-253a-225b-5157-7050_20200829020831_400x300.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/39547\/images\/DJI_0752_fbd5-7a48-ec18-6ca3-253a-225b-5157-7050_20200829020831_400x300.jpg"},"200x150":{"uri":"rexlive:\/\/1755\/listings\/39547\/images\/DJI_0752_fbd5-7a48-ec18-6ca3-253a-225b-5157-7050_20200829020831_200x150.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/39547\/images\/DJI_0752_fbd5-7a48-ec18-6ca3-253a-225b-5157-7050_20200829020831_200x150.jpg"},"80x60":{"uri":"rexlive:\/\/1755\/listings\/39547\/images\/DJI_0752_fbd5-7a48-ec18-6ca3-253a-225b-5157-7050_20200829020831_80x60.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/39547\/images\/DJI_0752_fbd5-7a48-ec18-6ca3-253a-225b-5157-7050_20200829020831_80x60.jpg"},"original":{"uri":"rexlive:\/\/1755\/listings\/39547\/images\/DJI_0752_fbd5-7a48-ec18-6ca3-253a-225b-5157-7050_20200829020831_original.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/39547\/images\/DJI_0752_fbd5-7a48-ec18-6ca3-253a-225b-5157-7050_20200829020831_original.jpg"}}},"etag":"703084-1613039083","id":"703084"}}],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19522","name":"Steven Field","first_name":"Steven","last_name":"Field","email_address":"steven.field@chewtonrose.co.uk"},"system_created_user":{"id":"19522","name":"Steven Field","first_name":"Steven","last_name":"Field","email_address":"steven.field@chewtonrose.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16537472},{"system_record_state":"active","system_ctime":1612868600,"system_modtime":1612868600,"reminder_id":null,"etag":"16537695-1612868600","security_user_rights":["read","update","trash"],"note":"let know re PR","related":{"note_contacts":[{"id":"2758751","contact":{"system_record_state":"active","system_ctime":"1600338012","system_modtime":"1600340776","name":"Dominic Thomas","email_address":"dominic.thomas@icloud.com","phone_number":"07747 487655","fax_number":null,"is_dnd":null,"type":"person","last_contacted_date":"2021-02-09","name_last":"Thomas","address_postal":null,"address":"25 Great Blakelands\r\nMarston Moretaine\r\nBEDFORD\r\nMK43 0WY","interest_level":null,"marketing_birthday":null,"marketing_enquiry_source":"Internet - Rightmove","marketing_gender":null,"marketing_postcode":null,"name_legal":null,"name_salutation":null,"name_addressee":null,"system_owner_user":{"id":0,"name":"System User","first_name":"System","last_name":"User","email_address":"no-reply@rexsoftware.com.au"},"contact_image":null,"marketing_enquiry_method":null,"etag":"1891432-1600340776","id":"1891432"}}],"note_market_leads":[],"note_properties":[{"id":"10488287","property":{"system_search_key":"17 Hammond Crescent, Milton Keynes, Milton Keynes MK15 9DH","adr_longitude":null,"adr_latitude":null,"adr_unit_number":null,"adr_street_number":"17","adr_street_name":"Hammond Crescent","adr_state_or_region":"Milton Keynes","adr_locality":null,"adr_suburb_or_town":"Milton Keynes","adr_postcode":"MK15 9DH","adr_country":"uk","adr_estate_name":null,"adr_estate_stage":null,"system_owner_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"adr_building":null,"property_category":{"id":"residential","text":"Residential"},"property_image":{"uri":"rexlive:\/\/1755\/listings\/39547\/images\/DJI_0752_fbd5-7a48-ec18-6ca3-253a-225b-5157-7050_20200829020831.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/39547\/images\/DJI_0752_fbd5-7a48-ec18-6ca3-253a-225b-5157-7050_20200829020831.jpg","thumbs":{"800x600":{"uri":"rexlive:\/\/1755\/listings\/39547\/images\/DJI_0752_fbd5-7a48-ec18-6ca3-253a-225b-5157-7050_20200829020831_800x600.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/39547\/images\/DJI_0752_fbd5-7a48-ec18-6ca3-253a-225b-5157-7050_20200829020831_800x600.jpg"},"400x300":{"uri":"rexlive:\/\/1755\/listings\/39547\/images\/DJI_0752_fbd5-7a48-ec18-6ca3-253a-225b-5157-7050_20200829020831_400x300.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/39547\/images\/DJI_0752_fbd5-7a48-ec18-6ca3-253a-225b-5157-7050_20200829020831_400x300.jpg"},"200x150":{"uri":"rexlive:\/\/1755\/listings\/39547\/images\/DJI_0752_fbd5-7a48-ec18-6ca3-253a-225b-5157-7050_20200829020831_200x150.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/39547\/images\/DJI_0752_fbd5-7a48-ec18-6ca3-253a-225b-5157-7050_20200829020831_200x150.jpg"},"80x60":{"uri":"rexlive:\/\/1755\/listings\/39547\/images\/DJI_0752_fbd5-7a48-ec18-6ca3-253a-225b-5157-7050_20200829020831_80x60.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/39547\/images\/DJI_0752_fbd5-7a48-ec18-6ca3-253a-225b-5157-7050_20200829020831_80x60.jpg"},"original":{"uri":"rexlive:\/\/1755\/listings\/39547\/images\/DJI_0752_fbd5-7a48-ec18-6ca3-253a-225b-5157-7050_20200829020831_original.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/39547\/images\/DJI_0752_fbd5-7a48-ec18-6ca3-253a-225b-5157-7050_20200829020831_original.jpg"}}},"etag":"703084-1613039083","id":"703084"}}],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19522","name":"Steven Field","first_name":"Steven","last_name":"Field","email_address":"steven.field@chewtonrose.co.uk"},"system_created_user":{"id":"19522","name":"Steven Field","first_name":"Steven","last_name":"Field","email_address":"steven.field@chewtonrose.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16537695},{"system_record_state":"active","system_ctime":1612868643,"system_modtime":1612868643,"reminder_id":null,"etag":"16537889-1612868643","security_user_rights":["read","update","trash"],"note":"let know re PR","related":{"note_contacts":[{"id":"2758764","contact":{"system_record_state":"active","system_ctime":"1598164864","system_modtime":"1598430450","name":"Mr Roger s Edwards","email_address":"redwardspt@hotmail.co.uk","phone_number":"07891 919829","fax_number":null,"is_dnd":null,"type":"person","last_contacted_date":"2021-02-09","name_last":"Roger s Edwards","address_postal":null,"address":"12 Little Meadow\r\nLoughton\r\nMILTON KEYNES\r\nMK5 8EH","interest_level":null,"marketing_birthday":null,"marketing_enquiry_source":"Internet - Rightmove","marketing_gender":null,"marketing_postcode":null,"name_legal":null,"name_salutation":null,"name_addressee":null,"system_owner_user":{"id":0,"name":"System User","first_name":"System","last_name":"User","email_address":"no-reply@rexsoftware.com.au"},"contact_image":null,"marketing_enquiry_method":null,"etag":"1853813-1598430450","id":"1853813"}}],"note_market_leads":[],"note_properties":[{"id":"10488297","property":{"system_search_key":"17 Hammond Crescent, Milton Keynes, Milton Keynes MK15 9DH","adr_longitude":null,"adr_latitude":null,"adr_unit_number":null,"adr_street_number":"17","adr_street_name":"Hammond Crescent","adr_state_or_region":"Milton Keynes","adr_locality":null,"adr_suburb_or_town":"Milton Keynes","adr_postcode":"MK15 9DH","adr_country":"uk","adr_estate_name":null,"adr_estate_stage":null,"system_owner_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"adr_building":null,"property_category":{"id":"residential","text":"Residential"},"property_image":{"uri":"rexlive:\/\/1755\/listings\/39547\/images\/DJI_0752_fbd5-7a48-ec18-6ca3-253a-225b-5157-7050_20200829020831.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/39547\/images\/DJI_0752_fbd5-7a48-ec18-6ca3-253a-225b-5157-7050_20200829020831.jpg","thumbs":{"800x600":{"uri":"rexlive:\/\/1755\/listings\/39547\/images\/DJI_0752_fbd5-7a48-ec18-6ca3-253a-225b-5157-7050_20200829020831_800x600.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/39547\/images\/DJI_0752_fbd5-7a48-ec18-6ca3-253a-225b-5157-7050_20200829020831_800x600.jpg"},"400x300":{"uri":"rexlive:\/\/1755\/listings\/39547\/images\/DJI_0752_fbd5-7a48-ec18-6ca3-253a-225b-5157-7050_20200829020831_400x300.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/39547\/images\/DJI_0752_fbd5-7a48-ec18-6ca3-253a-225b-5157-7050_20200829020831_400x300.jpg"},"200x150":{"uri":"rexlive:\/\/1755\/listings\/39547\/images\/DJI_0752_fbd5-7a48-ec18-6ca3-253a-225b-5157-7050_20200829020831_200x150.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/39547\/images\/DJI_0752_fbd5-7a48-ec18-6ca3-253a-225b-5157-7050_20200829020831_200x150.jpg"},"80x60":{"uri":"rexlive:\/\/1755\/listings\/39547\/images\/DJI_0752_fbd5-7a48-ec18-6ca3-253a-225b-5157-7050_20200829020831_80x60.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/39547\/images\/DJI_0752_fbd5-7a48-ec18-6ca3-253a-225b-5157-7050_20200829020831_80x60.jpg"},"original":{"uri":"rexlive:\/\/1755\/listings\/39547\/images\/DJI_0752_fbd5-7a48-ec18-6ca3-253a-225b-5157-7050_20200829020831_original.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/39547\/images\/DJI_0752_fbd5-7a48-ec18-6ca3-253a-225b-5157-7050_20200829020831_original.jpg"}}},"etag":"703084-1613039083","id":"703084"}}],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19522","name":"Steven Field","first_name":"Steven","last_name":"Field","email_address":"steven.field@chewtonrose.co.uk"},"system_created_user":{"id":"19522","name":"Steven Field","first_name":"Steven","last_name":"Field","email_address":"steven.field@chewtonrose.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16537889},{"system_record_state":"active","system_ctime":1612874388,"system_modtime":1612874388,"reminder_id":null,"etag":"16541403-1612874388","security_user_rights":["read","update","trash"],"note":"Requested custom commission request from \u00a30.00 to 1% (\u00a35,850.00) has not been responded to","related":{"note_contacts":[],"note_market_leads":[],"note_properties":[{"id":"10489242","property":{"system_search_key":"7 Lower Stonehayes, Milton Keynes, Milton Keynes MK14 5ES","adr_longitude":null,"adr_latitude":null,"adr_unit_number":null,"adr_street_number":"7","adr_street_name":"Lower Stonehayes","adr_state_or_region":"Milton Keynes","adr_locality":"Great Linford","adr_suburb_or_town":"Milton Keynes","adr_postcode":"MK14 5ES","adr_country":"uk","adr_estate_name":null,"adr_estate_stage":null,"system_owner_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"adr_building":null,"property_category":{"id":"residential","text":"Residential"},"property_image":{"uri":"rexlive:\/\/1755\/listings\/53809\/images\/7-Lower-Stonehayes_0_7176-e877-3c30-785a-a5fd-2185-330f-fc77_20210219012128.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/53809\/images\/7-Lower-Stonehayes_0_7176-e877-3c30-785a-a5fd-2185-330f-fc77_20210219012128.jpg","thumbs":{"800x600":{"uri":"rexlive:\/\/1755\/listings\/53809\/images\/7-Lower-Stonehayes_0_7176-e877-3c30-785a-a5fd-2185-330f-fc77_20210219012128_800x600.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/53809\/images\/7-Lower-Stonehayes_0_7176-e877-3c30-785a-a5fd-2185-330f-fc77_20210219012128_800x600.jpg"},"400x300":{"uri":"rexlive:\/\/1755\/listings\/53809\/images\/7-Lower-Stonehayes_0_7176-e877-3c30-785a-a5fd-2185-330f-fc77_20210219012128_400x300.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/53809\/images\/7-Lower-Stonehayes_0_7176-e877-3c30-785a-a5fd-2185-330f-fc77_20210219012128_400x300.jpg"},"200x150":{"uri":"rexlive:\/\/1755\/listings\/53809\/images\/7-Lower-Stonehayes_0_7176-e877-3c30-785a-a5fd-2185-330f-fc77_20210219012128_200x150.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/53809\/images\/7-Lower-Stonehayes_0_7176-e877-3c30-785a-a5fd-2185-330f-fc77_20210219012128_200x150.jpg"},"80x60":{"uri":"rexlive:\/\/1755\/listings\/53809\/images\/7-Lower-Stonehayes_0_7176-e877-3c30-785a-a5fd-2185-330f-fc77_20210219012128_80x60.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/53809\/images\/7-Lower-Stonehayes_0_7176-e877-3c30-785a-a5fd-2185-330f-fc77_20210219012128_80x60.jpg"},"original":{"uri":"rexlive:\/\/1755\/listings\/53809\/images\/7-Lower-Stonehayes_0_7176-e877-3c30-785a-a5fd-2185-330f-fc77_20210219012128_original.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/53809\/images\/7-Lower-Stonehayes_0_7176-e877-3c30-785a-a5fd-2185-330f-fc77_20210219012128_original.jpg"}}},"etag":"603920-1617007496","id":"603920"}}],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"system_created_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16541403},{"system_record_state":"active","system_ctime":1612874923,"system_modtime":1612874923,"reminder_id":null,"etag":"16541525-1612874923","security_user_rights":["read","update","trash"],"note":"new listing AML check competed","related":{"note_contacts":[],"note_market_leads":[],"note_properties":[{"id":"10489327","property":{"system_search_key":"7 Lower Stonehayes, Milton Keynes, Milton Keynes MK14 5ES","adr_longitude":null,"adr_latitude":null,"adr_unit_number":null,"adr_street_number":"7","adr_street_name":"Lower Stonehayes","adr_state_or_region":"Milton Keynes","adr_locality":"Great Linford","adr_suburb_or_town":"Milton Keynes","adr_postcode":"MK14 5ES","adr_country":"uk","adr_estate_name":null,"adr_estate_stage":null,"system_owner_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"adr_building":null,"property_category":{"id":"residential","text":"Residential"},"property_image":{"uri":"rexlive:\/\/1755\/listings\/53809\/images\/7-Lower-Stonehayes_0_7176-e877-3c30-785a-a5fd-2185-330f-fc77_20210219012128.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/53809\/images\/7-Lower-Stonehayes_0_7176-e877-3c30-785a-a5fd-2185-330f-fc77_20210219012128.jpg","thumbs":{"800x600":{"uri":"rexlive:\/\/1755\/listings\/53809\/images\/7-Lower-Stonehayes_0_7176-e877-3c30-785a-a5fd-2185-330f-fc77_20210219012128_800x600.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/53809\/images\/7-Lower-Stonehayes_0_7176-e877-3c30-785a-a5fd-2185-330f-fc77_20210219012128_800x600.jpg"},"400x300":{"uri":"rexlive:\/\/1755\/listings\/53809\/images\/7-Lower-Stonehayes_0_7176-e877-3c30-785a-a5fd-2185-330f-fc77_20210219012128_400x300.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/53809\/images\/7-Lower-Stonehayes_0_7176-e877-3c30-785a-a5fd-2185-330f-fc77_20210219012128_400x300.jpg"},"200x150":{"uri":"rexlive:\/\/1755\/listings\/53809\/images\/7-Lower-Stonehayes_0_7176-e877-3c30-785a-a5fd-2185-330f-fc77_20210219012128_200x150.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/53809\/images\/7-Lower-Stonehayes_0_7176-e877-3c30-785a-a5fd-2185-330f-fc77_20210219012128_200x150.jpg"},"80x60":{"uri":"rexlive:\/\/1755\/listings\/53809\/images\/7-Lower-Stonehayes_0_7176-e877-3c30-785a-a5fd-2185-330f-fc77_20210219012128_80x60.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/53809\/images\/7-Lower-Stonehayes_0_7176-e877-3c30-785a-a5fd-2185-330f-fc77_20210219012128_80x60.jpg"},"original":{"uri":"rexlive:\/\/1755\/listings\/53809\/images\/7-Lower-Stonehayes_0_7176-e877-3c30-785a-a5fd-2185-330f-fc77_20210219012128_original.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/53809\/images\/7-Lower-Stonehayes_0_7176-e877-3c30-785a-a5fd-2185-330f-fc77_20210219012128_original.jpg"}}},"etag":"603920-1617007496","id":"603920"}}],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"21960","name":"Anand Patel","first_name":"Anand","last_name":"Patel","email_address":"Anand.Patel@spicerhaart.co.uk"},"system_created_user":{"id":"21960","name":"Anand Patel","first_name":"Anand","last_name":"Patel","email_address":"Anand.Patel@spicerhaart.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16541525},{"system_record_state":"active","system_ctime":1612875187,"system_modtime":1612875187,"reminder_id":null,"etag":"16541584-1612875187","security_user_rights":["read","update","trash"],"note":"Listing was not published to FLINK - Block loading: 1, Images: 1, Discreet marketing: 1, New home: null, Category: EA Sales","related":{"note_contacts":[],"note_market_leads":[],"note_properties":[{"id":"10489362","property":{"system_search_key":"7 Lower Stonehayes, Milton Keynes, Milton Keynes MK14 5ES","adr_longitude":null,"adr_latitude":null,"adr_unit_number":null,"adr_street_number":"7","adr_street_name":"Lower Stonehayes","adr_state_or_region":"Milton Keynes","adr_locality":"Great Linford","adr_suburb_or_town":"Milton Keynes","adr_postcode":"MK14 5ES","adr_country":"uk","adr_estate_name":null,"adr_estate_stage":null,"system_owner_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"adr_building":null,"property_category":{"id":"residential","text":"Residential"},"property_image":{"uri":"rexlive:\/\/1755\/listings\/53809\/images\/7-Lower-Stonehayes_0_7176-e877-3c30-785a-a5fd-2185-330f-fc77_20210219012128.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/53809\/images\/7-Lower-Stonehayes_0_7176-e877-3c30-785a-a5fd-2185-330f-fc77_20210219012128.jpg","thumbs":{"800x600":{"uri":"rexlive:\/\/1755\/listings\/53809\/images\/7-Lower-Stonehayes_0_7176-e877-3c30-785a-a5fd-2185-330f-fc77_20210219012128_800x600.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/53809\/images\/7-Lower-Stonehayes_0_7176-e877-3c30-785a-a5fd-2185-330f-fc77_20210219012128_800x600.jpg"},"400x300":{"uri":"rexlive:\/\/1755\/listings\/53809\/images\/7-Lower-Stonehayes_0_7176-e877-3c30-785a-a5fd-2185-330f-fc77_20210219012128_400x300.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/53809\/images\/7-Lower-Stonehayes_0_7176-e877-3c30-785a-a5fd-2185-330f-fc77_20210219012128_400x300.jpg"},"200x150":{"uri":"rexlive:\/\/1755\/listings\/53809\/images\/7-Lower-Stonehayes_0_7176-e877-3c30-785a-a5fd-2185-330f-fc77_20210219012128_200x150.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/53809\/images\/7-Lower-Stonehayes_0_7176-e877-3c30-785a-a5fd-2185-330f-fc77_20210219012128_200x150.jpg"},"80x60":{"uri":"rexlive:\/\/1755\/listings\/53809\/images\/7-Lower-Stonehayes_0_7176-e877-3c30-785a-a5fd-2185-330f-fc77_20210219012128_80x60.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/53809\/images\/7-Lower-Stonehayes_0_7176-e877-3c30-785a-a5fd-2185-330f-fc77_20210219012128_80x60.jpg"},"original":{"uri":"rexlive:\/\/1755\/listings\/53809\/images\/7-Lower-Stonehayes_0_7176-e877-3c30-785a-a5fd-2185-330f-fc77_20210219012128_original.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/53809\/images\/7-Lower-Stonehayes_0_7176-e877-3c30-785a-a5fd-2185-330f-fc77_20210219012128_original.jpg"}}},"etag":"603920-1617007496","id":"603920"}}],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"system_created_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16541584},{"system_record_state":"active","system_ctime":1612883464,"system_modtime":1612883464,"reminder_id":null,"etag":"16547511-1612883464","security_user_rights":["read","update","trash"],"note":"DMA ID: 13173758","related":{"note_contacts":[],"note_market_leads":[{"id":"4038379","market_lead":{"system_label":"103 HIGH STREET, Stony Stratford, Milton Keynes MK11 1AT","assignee":null,"lead_status":{"id":"26573","text":"New Lead"},"id":820911}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"system_created_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16547511},{"system_record_state":"active","system_ctime":1612883467,"system_modtime":1612883467,"reminder_id":null,"etag":"16547516-1612883467","security_user_rights":["read","update","trash"],"note":"DMA ID: 13173759","related":{"note_contacts":[],"note_market_leads":[{"id":"4038384","market_lead":{"system_label":"8 Kiln Drive, Woburn Sands MK17 8FE","assignee":null,"lead_status":{"id":"26741","text":"Contact Details Required"},"id":820916}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"system_created_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16547516},{"system_record_state":"active","system_ctime":1612883470,"system_modtime":1612883470,"reminder_id":null,"etag":"16547520-1612883470","security_user_rights":["read","update","trash"],"note":"DMA ID: 13173760","related":{"note_contacts":[],"note_market_leads":[{"id":"4038387","market_lead":{"system_label":"Oakley House Verley Close, on On The Green, Milton Keynes MK6 3ER","assignee":null,"lead_status":{"id":"26741","text":"Contact Details Required"},"id":820921}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"system_created_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16547520},{"system_record_state":"active","system_ctime":1612883475,"system_modtime":1612883475,"reminder_id":null,"etag":"16547530-1612883475","security_user_rights":["read","update","trash"],"note":"Retracted from Rightmove","related":{"note_contacts":[],"note_market_leads":[{"id":"4038394","market_lead":{"system_label":"THE OLD HOUSE MAIN STREET, Gawcott MK18 4HZ","assignee":null,"lead_status":{"id":"26741","text":"Contact Details Required"},"id":685237}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"system_created_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16547530},{"system_record_state":"active","system_ctime":1612883478,"system_modtime":1612883478,"reminder_id":null,"etag":"16547534-1612883478","security_user_rights":["read","update","trash"],"note":"Retracted from Rightmove","related":{"note_contacts":[],"note_market_leads":[{"id":"4038398","market_lead":{"system_label":"44 DUNSTABLE STREET, Ampthill MK45 2JS","assignee":null,"lead_status":{"id":"26741","text":"Contact Details Required"},"id":700704}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"system_created_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16547534},{"system_record_state":"active","system_ctime":1612883479,"system_modtime":1612883480,"reminder_id":null,"etag":"16547537-1612883480","security_user_rights":["read","update","trash"],"note":"Retracted from Rightmove","related":{"note_contacts":[],"note_market_leads":[{"id":"4038400","market_lead":{"system_label":"9 LINCOLN WAY, Harlington LU5 6NB","assignee":null,"lead_status":{"id":"26573","text":"New Lead"},"id":806372}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"system_created_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16547537},{"system_record_state":"active","system_ctime":1612888763,"system_modtime":1612888763,"reminder_id":null,"etag":"16552377-1612888763","security_user_rights":["read","update","trash"],"note":"Offered 1,070,000 cash, accepted","related":{"note_contacts":[{"id":"2762110","contact":{"system_record_state":"active","system_ctime":"1611222231","system_modtime":"1612887327","name":"Calvin Kent","email_address":"harsharan@reelnrg.com","phone_number":"07497 001629 Sharan","fax_number":null,"is_dnd":null,"type":"person","last_contacted_date":"2021-02-16","name_last":"Kent","address_postal":null,"address":"3 Capek Road\r\nOakgrove\r\nMILTON KEYNES\r\nMK10 9TQ","interest_level":null,"marketing_birthday":null,"marketing_enquiry_source":null,"marketing_gender":null,"marketing_postcode":null,"name_legal":null,"name_salutation":null,"name_addressee":null,"system_owner_user":{"id":"24027","name":"Taylor Ruff","first_name":"Taylor","last_name":"Ruff","email_address":"Taylor.Ruff@spicerhaart.co.uk"},"contact_image":null,"marketing_enquiry_method":null,"etag":"2072524-1612887327","id":"2072524"}}],"note_market_leads":[],"note_properties":[{"id":"10491625","property":{"system_search_key":"17 Hammond Crescent, Milton Keynes, Milton Keynes MK15 9DH","adr_longitude":null,"adr_latitude":null,"adr_unit_number":null,"adr_street_number":"17","adr_street_name":"Hammond Crescent","adr_state_or_region":"Milton Keynes","adr_locality":null,"adr_suburb_or_town":"Milton Keynes","adr_postcode":"MK15 9DH","adr_country":"uk","adr_estate_name":null,"adr_estate_stage":null,"system_owner_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"adr_building":null,"property_category":{"id":"residential","text":"Residential"},"property_image":{"uri":"rexlive:\/\/1755\/listings\/39547\/images\/DJI_0752_fbd5-7a48-ec18-6ca3-253a-225b-5157-7050_20200829020831.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/39547\/images\/DJI_0752_fbd5-7a48-ec18-6ca3-253a-225b-5157-7050_20200829020831.jpg","thumbs":{"800x600":{"uri":"rexlive:\/\/1755\/listings\/39547\/images\/DJI_0752_fbd5-7a48-ec18-6ca3-253a-225b-5157-7050_20200829020831_800x600.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/39547\/images\/DJI_0752_fbd5-7a48-ec18-6ca3-253a-225b-5157-7050_20200829020831_800x600.jpg"},"400x300":{"uri":"rexlive:\/\/1755\/listings\/39547\/images\/DJI_0752_fbd5-7a48-ec18-6ca3-253a-225b-5157-7050_20200829020831_400x300.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/39547\/images\/DJI_0752_fbd5-7a48-ec18-6ca3-253a-225b-5157-7050_20200829020831_400x300.jpg"},"200x150":{"uri":"rexlive:\/\/1755\/listings\/39547\/images\/DJI_0752_fbd5-7a48-ec18-6ca3-253a-225b-5157-7050_20200829020831_200x150.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/39547\/images\/DJI_0752_fbd5-7a48-ec18-6ca3-253a-225b-5157-7050_20200829020831_200x150.jpg"},"80x60":{"uri":"rexlive:\/\/1755\/listings\/39547\/images\/DJI_0752_fbd5-7a48-ec18-6ca3-253a-225b-5157-7050_20200829020831_80x60.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/39547\/images\/DJI_0752_fbd5-7a48-ec18-6ca3-253a-225b-5157-7050_20200829020831_80x60.jpg"},"original":{"uri":"rexlive:\/\/1755\/listings\/39547\/images\/DJI_0752_fbd5-7a48-ec18-6ca3-253a-225b-5157-7050_20200829020831_original.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/39547\/images\/DJI_0752_fbd5-7a48-ec18-6ca3-253a-225b-5157-7050_20200829020831_original.jpg"}}},"etag":"703084-1613039083","id":"703084"}}],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19522","name":"Steven Field","first_name":"Steven","last_name":"Field","email_address":"steven.field@chewtonrose.co.uk"},"system_created_user":{"id":"19522","name":"Steven Field","first_name":"Steven","last_name":"Field","email_address":"steven.field@chewtonrose.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16552377},{"system_record_state":"active","system_ctime":1612888980,"system_modtime":1612888980,"reminder_id":null,"etag":"16552434-1612888980","security_user_rights":["read","update","trash"],"note":"Rightmove Process: full address found","related":{"note_contacts":[],"note_market_leads":[{"id":"4041969","market_lead":{"system_label":"THE GREEN, Radwell MK43 7HT","assignee":null,"lead_status":{"id":"26744","text":"In Contact"},"id":814002}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"system_created_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16552434},{"system_record_state":"active","system_ctime":1612888985,"system_modtime":1612888985,"reminder_id":null,"etag":"16552438-1612888985","security_user_rights":["read","update","trash"],"note":"Rightmove Process: full address found","related":{"note_contacts":[],"note_market_leads":[{"id":"4041972","market_lead":{"system_label":"91 HIGH STREET, Stony Stratford, Milton Keynes MK11 1AT","assignee":null,"lead_status":{"id":"26741","text":"Contact Details Required"},"id":820509}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"system_created_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16552438},{"system_record_state":"active","system_ctime":1612889099,"system_modtime":1612889099,"reminder_id":null,"etag":"16552483-1612889099","security_user_rights":["read","update","trash"],"note":"Listing was not published to FLINK - Block loading: 1, Images: 22, Discreet marketing: 1, New home: null, Category: EA Sales","related":{"note_contacts":[],"note_market_leads":[],"note_properties":[{"id":"10491685","property":{"system_search_key":"17 Foxley Place, MILTON KEYNES MK5 8BU","adr_longitude":"-0.77259126581538","adr_latitude":"52.030128524616","adr_unit_number":null,"adr_street_number":"17","adr_street_name":"Foxley Place","adr_state_or_region":null,"adr_locality":"Loughton","adr_suburb_or_town":"MILTON KEYNES","adr_postcode":"MK5 8BU","adr_country":"uk","adr_estate_name":null,"adr_estate_stage":null,"system_owner_user":{"id":"19522","name":"Steven Field","first_name":"Steven","last_name":"Field","email_address":"steven.field@chewtonrose.co.uk"},"adr_building":null,"property_category":{"id":"residential","text":"Residential"},"property_image":{"uri":"rexlive:\/\/1755\/listings\/53213\/images\/17FoxleyPlace-16_9e11-0129-5c31-d5c5-f187-e108-9bf7-6cf1_20210210124405.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/53213\/images\/17FoxleyPlace-16_9e11-0129-5c31-d5c5-f187-e108-9bf7-6cf1_20210210124405.jpg","thumbs":{"800x600":{"uri":"rexlive:\/\/1755\/listings\/53213\/images\/17FoxleyPlace-16_9e11-0129-5c31-d5c5-f187-e108-9bf7-6cf1_20210210124405_800x600.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/53213\/images\/17FoxleyPlace-16_9e11-0129-5c31-d5c5-f187-e108-9bf7-6cf1_20210210124405_800x600.jpg"},"400x300":{"uri":"rexlive:\/\/1755\/listings\/53213\/images\/17FoxleyPlace-16_9e11-0129-5c31-d5c5-f187-e108-9bf7-6cf1_20210210124405_400x300.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/53213\/images\/17FoxleyPlace-16_9e11-0129-5c31-d5c5-f187-e108-9bf7-6cf1_20210210124405_400x300.jpg"},"200x150":{"uri":"rexlive:\/\/1755\/listings\/53213\/images\/17FoxleyPlace-16_9e11-0129-5c31-d5c5-f187-e108-9bf7-6cf1_20210210124405_200x150.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/53213\/images\/17FoxleyPlace-16_9e11-0129-5c31-d5c5-f187-e108-9bf7-6cf1_20210210124405_200x150.jpg"},"80x60":{"uri":"rexlive:\/\/1755\/listings\/53213\/images\/17FoxleyPlace-16_9e11-0129-5c31-d5c5-f187-e108-9bf7-6cf1_20210210124405_80x60.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/53213\/images\/17FoxleyPlace-16_9e11-0129-5c31-d5c5-f187-e108-9bf7-6cf1_20210210124405_80x60.jpg"},"original":{"uri":"rexlive:\/\/1755\/listings\/53213\/images\/17FoxleyPlace-16_9e11-0129-5c31-d5c5-f187-e108-9bf7-6cf1_20210210124405_original.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/53213\/images\/17FoxleyPlace-16_9e11-0129-5c31-d5c5-f187-e108-9bf7-6cf1_20210210124405_original.jpg"}}},"etag":"17864109-1612978337","id":"17864109"}}],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"system_created_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16552483},{"system_record_state":"active","system_ctime":1612889328,"system_modtime":1612889328,"reminder_id":null,"etag":"16552557-1612889328","security_user_rights":["read","update","trash"],"note":"Listing was not published to FLINK - Block loading: 1, Images: 1, Discreet marketing: 1, New home: null, Category: EA Sales","related":{"note_contacts":[],"note_market_leads":[],"note_properties":[{"id":"10491724","property":{"system_search_key":"186 Newton Road, Milton Keynes MK3 5DE","adr_longitude":"-0.7605271","adr_latitude":"51.9859349","adr_unit_number":null,"adr_street_number":"186","adr_street_name":"Newton Road","adr_state_or_region":null,"adr_locality":"Bletchley","adr_suburb_or_town":"Milton Keynes","adr_postcode":"MK3 5DE","adr_country":"uk","adr_estate_name":null,"adr_estate_stage":null,"system_owner_user":{"id":"19521","name":"Graham Nash","first_name":"Graham","last_name":"Nash","email_address":"graham.nash@spicerhaart.co.uk"},"adr_building":null,"property_category":{"id":"residential","text":"Residential"},"property_image":{"uri":"rexlive:\/\/1755\/listings\/53372\/images\/186NewtonRoad-60_2c88-2dfa-45ef-9228-4487-b886-8421-db8a_20210211033834.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/53372\/images\/186NewtonRoad-60_2c88-2dfa-45ef-9228-4487-b886-8421-db8a_20210211033834.jpg","thumbs":{"800x600":{"uri":"rexlive:\/\/1755\/listings\/53372\/images\/186NewtonRoad-60_2c88-2dfa-45ef-9228-4487-b886-8421-db8a_20210211033834_800x600.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/53372\/images\/186NewtonRoad-60_2c88-2dfa-45ef-9228-4487-b886-8421-db8a_20210211033834_800x600.jpg"},"400x300":{"uri":"rexlive:\/\/1755\/listings\/53372\/images\/186NewtonRoad-60_2c88-2dfa-45ef-9228-4487-b886-8421-db8a_20210211033834_400x300.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/53372\/images\/186NewtonRoad-60_2c88-2dfa-45ef-9228-4487-b886-8421-db8a_20210211033834_400x300.jpg"},"200x150":{"uri":"rexlive:\/\/1755\/listings\/53372\/images\/186NewtonRoad-60_2c88-2dfa-45ef-9228-4487-b886-8421-db8a_20210211033834_200x150.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/53372\/images\/186NewtonRoad-60_2c88-2dfa-45ef-9228-4487-b886-8421-db8a_20210211033834_200x150.jpg"},"80x60":{"uri":"rexlive:\/\/1755\/listings\/53372\/images\/186NewtonRoad-60_2c88-2dfa-45ef-9228-4487-b886-8421-db8a_20210211033834_80x60.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/53372\/images\/186NewtonRoad-60_2c88-2dfa-45ef-9228-4487-b886-8421-db8a_20210211033834_80x60.jpg"},"original":{"uri":"rexlive:\/\/1755\/listings\/53372\/images\/186NewtonRoad-60_2c88-2dfa-45ef-9228-4487-b886-8421-db8a_20210211033834_original.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/53372\/images\/186NewtonRoad-60_2c88-2dfa-45ef-9228-4487-b886-8421-db8a_20210211033834_original.jpg"}}},"etag":"17873395-1612980657","id":"17873395"}}],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"system_created_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16552557},{"system_record_state":"active","system_ctime":1612891498,"system_modtime":1612891498,"reminder_id":null,"etag":"16554589-1612891498","security_user_rights":["read","update","trash"],"note":"Odd enquiry.. generic message re 'am interested in this site \/ plots' but enquired re second hand house, asking for email not call and that had HTS..... mailed back asking if wanted TV, could we help on val on his, wider criteria and search area, and if specific interest in new homes we had sites in the vicinity.. odd guy or mystery shop","related":{"note_contacts":[{"id":"2762467","contact":{"system_record_state":"active","system_ctime":"1612890054","system_modtime":"1612891641","name":"Roger Gillespie","email_address":"rogergillespie00@gmail.com","phone_number":"07879 668999","fax_number":null,"is_dnd":null,"type":"person","last_contacted_date":"2021-03-11","name_last":"Gillespie","address_postal":null,"address":"The Fuchsias\r\nBroughton\r\nMILTON KEYNES\r\nMK10 9AA","interest_level":null,"marketing_birthday":null,"marketing_enquiry_source":"Internet - Rightmove","marketing_gender":null,"marketing_postcode":null,"name_legal":null,"name_salutation":null,"name_addressee":null,"system_owner_user":{"id":0,"name":"System User","first_name":"System","last_name":"User","email_address":"no-reply@rexsoftware.com.au"},"contact_image":null,"marketing_enquiry_method":null,"etag":"2115958-1612891641","id":"2115958"}}],"note_market_leads":[],"note_properties":[{"id":"10492056","property":{"system_search_key":"1 Staters Pound, Milton Keynes, Milton Keynes MK15 8AX","adr_longitude":null,"adr_latitude":null,"adr_unit_number":null,"adr_street_number":"1","adr_street_name":"Staters Pound","adr_state_or_region":"Milton Keynes","adr_locality":null,"adr_suburb_or_town":"Milton Keynes","adr_postcode":"MK15 8AX","adr_country":"uk","adr_estate_name":null,"adr_estate_stage":null,"system_owner_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"adr_building":null,"property_category":{"id":"residential","text":"Residential"},"property_image":{"uri":"rexlive:\/\/1755\/listings\/5556\/images\/1StatersPound-41_bf74-4530-89f5-1826-2932-3d5e-2138-34b2_20190501115801.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/5556\/images\/1StatersPound-41_bf74-4530-89f5-1826-2932-3d5e-2138-34b2_20190501115801.jpg","thumbs":{"800x600":{"uri":"rexlive:\/\/1755\/listings\/5556\/images\/1StatersPound-41_bf74-4530-89f5-1826-2932-3d5e-2138-34b2_20190501115801_800x600.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/5556\/images\/1StatersPound-41_bf74-4530-89f5-1826-2932-3d5e-2138-34b2_20190501115801_800x600.jpg"},"400x300":{"uri":"rexlive:\/\/1755\/listings\/5556\/images\/1StatersPound-41_bf74-4530-89f5-1826-2932-3d5e-2138-34b2_20190501115801_400x300.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/5556\/images\/1StatersPound-41_bf74-4530-89f5-1826-2932-3d5e-2138-34b2_20190501115801_400x300.jpg"},"200x150":{"uri":"rexlive:\/\/1755\/listings\/5556\/images\/1StatersPound-41_bf74-4530-89f5-1826-2932-3d5e-2138-34b2_20190501115801_200x150.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/5556\/images\/1StatersPound-41_bf74-4530-89f5-1826-2932-3d5e-2138-34b2_20190501115801_200x150.jpg"},"80x60":{"uri":"rexlive:\/\/1755\/listings\/5556\/images\/1StatersPound-41_bf74-4530-89f5-1826-2932-3d5e-2138-34b2_20190501115801_80x60.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/5556\/images\/1StatersPound-41_bf74-4530-89f5-1826-2932-3d5e-2138-34b2_20190501115801_80x60.jpg"}}},"etag":"676096-1615314643","id":"676096"}}],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19522","name":"Steven Field","first_name":"Steven","last_name":"Field","email_address":"steven.field@chewtonrose.co.uk"},"system_created_user":{"id":"19522","name":"Steven Field","first_name":"Steven","last_name":"Field","email_address":"steven.field@chewtonrose.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16554589},{"system_record_state":"active","system_ctime":1612892179,"system_modtime":1612892179,"reminder_id":null,"etag":"16554759-1612892179","security_user_rights":["read","update","trash"],"note":"Lead archived by branch","related":{"note_contacts":[],"note_market_leads":[{"id":"4043637","market_lead":{"system_label":"THE GREEN, Radwell MK43 7HT","assignee":null,"lead_status":{"id":"26744","text":"In Contact"},"id":814002}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"system_created_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16554759},{"system_record_state":"active","system_ctime":1612892180,"system_modtime":1612892181,"reminder_id":null,"etag":"16554761-1612892181","security_user_rights":["read","update","trash"],"note":"Record has been cleaned by Third Party Processing (Webalytix) with Number","related":{"note_contacts":[],"note_market_leads":[{"id":"4043638","market_lead":{"system_label":"28 High Street, Lavendon MK46 4HA","assignee":null,"lead_status":{"id":"26573","text":"New Lead"},"id":816318}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"system_created_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16554761},{"system_record_state":"active","system_ctime":1612892181,"system_modtime":1612892181,"reminder_id":null,"etag":"16554763-1612892181","security_user_rights":["read","update","trash"],"note":"Record has been cleaned by Third Party Processing (Webalytix) with Number","related":{"note_contacts":[],"note_market_leads":[{"id":"4043639","market_lead":{"system_label":"Dorcas Farm DORCAS LANE, Stoke Hammond MK17 0EA","assignee":null,"lead_status":{"id":"26744","text":"In Contact"},"id":817940}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"system_created_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16554763},{"system_record_state":"active","system_ctime":1612892183,"system_modtime":1612892183,"reminder_id":null,"etag":"16554764-1612892183","security_user_rights":["read","update","trash"],"note":"Record has been cleaned by Third Party Processing (Webalytix) no number returned","related":{"note_contacts":[],"note_market_leads":[{"id":"4043640","market_lead":{"system_label":"4 Lime Tree Corner, Cranfield MK43 0ZE","assignee":null,"lead_status":{"id":"26741","text":"Contact Details Required"},"id":817943}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"system_created_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16554764},{"system_record_state":"active","system_ctime":1612892187,"system_modtime":1612892187,"reminder_id":null,"etag":"16554765-1612892187","security_user_rights":["read","update","trash"],"note":"Record has been cleaned by Third Party Processing (Webalytix) no number returned","related":{"note_contacts":[],"note_market_leads":[{"id":"4043641","market_lead":{"system_label":"7 Station Road, Newport Pagnell MK16 0AG","assignee":null,"lead_status":{"id":"26741","text":"Contact Details Required"},"id":819643}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"system_created_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16554765},{"system_record_state":"active","system_ctime":1612936936,"system_modtime":1612936936,"reminder_id":null,"etag":"16563266-1612936936","security_user_rights":["read","update","trash"],"note":"EoC:Rightmove file (rightmove status: Withdrawn)","related":{"note_contacts":[],"note_market_leads":[{"id":"4050190","market_lead":{"system_label":"THE OLD HOUSE MAIN STREET, Gawcott MK18 4HZ","assignee":null,"lead_status":{"id":"26741","text":"Contact Details Required"},"id":685237}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"system_created_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16563266},{"system_record_state":"active","system_ctime":1612936937,"system_modtime":1612936938,"reminder_id":null,"etag":"16563276-1612936938","security_user_rights":["read","update","trash"],"note":"EoC:Rightmove file (rightmove status: Withdrawn)","related":{"note_contacts":[],"note_market_leads":[{"id":"4050198","market_lead":{"system_label":"44 DUNSTABLE STREET, Ampthill MK45 2JS","assignee":null,"lead_status":{"id":"26741","text":"Contact Details Required"},"id":700704}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"system_created_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16563276},{"system_record_state":"active","system_ctime":1612936938,"system_modtime":1612936938,"reminder_id":null,"etag":"16563284-1612936938","security_user_rights":["read","update","trash"],"note":"EoC:Rightmove file (rightmove status: Withdrawn)","related":{"note_contacts":[],"note_market_leads":[{"id":"4050207","market_lead":{"system_label":"9 LINCOLN WAY, Harlington LU5 6NB","assignee":null,"lead_status":{"id":"26573","text":"New Lead"},"id":806372}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"system_created_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16563284},{"system_record_state":"active","system_ctime":1612941264,"system_modtime":1612941264,"reminder_id":null,"etag":"16565418-1612941264","security_user_rights":["read","update","trash"],"note":"Lead archived by branch","related":{"note_contacts":[],"note_market_leads":[{"id":"4052333","market_lead":{"system_label":"CHALK HILL, Houghton Regis, Dunstable LU6 1RS","assignee":null,"lead_status":{"id":"26743","text":"Door Number Required"},"id":719602}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"system_created_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16565418},{"system_record_state":"active","system_ctime":1612941266,"system_modtime":1612941266,"reminder_id":null,"etag":"16565421-1612941266","security_user_rights":["read","update","trash"],"note":"Lead archived by branch","related":{"note_contacts":[],"note_market_leads":[{"id":"4052336","market_lead":{"system_label":"CHALK HILL, Houghton Regis, Dunstable LU6 1RS","assignee":null,"lead_status":{"id":"26743","text":"Door Number Required"},"id":727168}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"system_created_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16565421},{"system_record_state":"active","system_ctime":1612941267,"system_modtime":1612941268,"reminder_id":null,"etag":"16565424-1612941268","security_user_rights":["read","update","trash"],"note":"Lead archived by branch","related":{"note_contacts":[],"note_market_leads":[{"id":"4052339","market_lead":{"system_label":"BLETCHLEY ROAD, Newton Longville MK17 0AD","assignee":null,"lead_status":{"id":"26743","text":"Door Number Required"},"id":729524}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"system_created_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16565424},{"system_record_state":"active","system_ctime":1612941272,"system_modtime":1612941272,"reminder_id":null,"etag":"16565429-1612941272","security_user_rights":["read","update","trash"],"note":"Record has been cleaned by Internal Wash Processing","related":{"note_contacts":[],"note_market_leads":[{"id":"4052344","market_lead":{"system_label":"4 Lime Tree Corner, Cranfield MK43 0ZE","assignee":null,"lead_status":{"id":"26741","text":"Contact Details Required"},"id":817943}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"system_created_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16565429},{"system_record_state":"active","system_ctime":1612941273,"system_modtime":1612941273,"reminder_id":null,"etag":"16565431-1612941273","security_user_rights":["read","update","trash"],"note":"Record has been cleaned by Internal Wash Processing","related":{"note_contacts":[],"note_market_leads":[{"id":"4052346","market_lead":{"system_label":"7 Station Road, Newport Pagnell MK16 0AG","assignee":null,"lead_status":{"id":"26741","text":"Contact Details Required"},"id":819643}}],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"system_created_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16565431},{"system_record_state":"active","system_ctime":1612948672,"system_modtime":1612948672,"reminder_id":null,"etag":"16570646-1612948672","security_user_rights":["read","update","trash"],"note":"C\/Wide hoping to do survey next couple of days, Matt, 01332 440973","related":{"note_contacts":[],"note_market_leads":[],"note_properties":[{"id":"10492868","property":{"system_search_key":"6 High Street, Great Horwood, Buckinghamshire MK17 0QL","adr_longitude":"-0.879632","adr_latitude":"51.9736231","adr_unit_number":null,"adr_street_number":"6","adr_street_name":"High Street","adr_state_or_region":"Buckinghamshire","adr_locality":null,"adr_suburb_or_town":"Great Horwood","adr_postcode":"MK17 0QL","adr_country":"uk","adr_estate_name":null,"adr_estate_stage":null,"system_owner_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"adr_building":null,"property_category":{"id":"residential","text":"Residential"},"property_image":{"uri":"rexlive:\/\/1755\/listings\/47534\/images\/6HighStreet-35_46af-eaa7-829f-9c5c-6643-6708-b7df-a8bc_20201208010004.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/47534\/images\/6HighStreet-35_46af-eaa7-829f-9c5c-6643-6708-b7df-a8bc_20201208010004.jpg","thumbs":{"800x600":{"uri":"rexlive:\/\/1755\/listings\/47534\/images\/6HighStreet-35_46af-eaa7-829f-9c5c-6643-6708-b7df-a8bc_20201208010004_800x600.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/47534\/images\/6HighStreet-35_46af-eaa7-829f-9c5c-6643-6708-b7df-a8bc_20201208010004_800x600.jpg"},"400x300":{"uri":"rexlive:\/\/1755\/listings\/47534\/images\/6HighStreet-35_46af-eaa7-829f-9c5c-6643-6708-b7df-a8bc_20201208010004_400x300.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/47534\/images\/6HighStreet-35_46af-eaa7-829f-9c5c-6643-6708-b7df-a8bc_20201208010004_400x300.jpg"},"200x150":{"uri":"rexlive:\/\/1755\/listings\/47534\/images\/6HighStreet-35_46af-eaa7-829f-9c5c-6643-6708-b7df-a8bc_20201208010004_200x150.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/47534\/images\/6HighStreet-35_46af-eaa7-829f-9c5c-6643-6708-b7df-a8bc_20201208010004_200x150.jpg"},"80x60":{"uri":"rexlive:\/\/1755\/listings\/47534\/images\/6HighStreet-35_46af-eaa7-829f-9c5c-6643-6708-b7df-a8bc_20201208010004_80x60.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/47534\/images\/6HighStreet-35_46af-eaa7-829f-9c5c-6643-6708-b7df-a8bc_20201208010004_80x60.jpg"},"original":{"uri":"rexlive:\/\/1755\/listings\/47534\/images\/6HighStreet-35_46af-eaa7-829f-9c5c-6643-6708-b7df-a8bc_20201208010004_original.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1755\/listings\/47534\/images\/6HighStreet-35_46af-eaa7-829f-9c5c-6643-6708-b7df-a8bc_20201208010004_original.jpg"}}},"etag":"515604-1612805244","id":"515604"}}],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19522","name":"Steven Field","first_name":"Steven","last_name":"Field","email_address":"steven.field@chewtonrose.co.uk"},"system_created_user":{"id":"19522","name":"Steven Field","first_name":"Steven","last_name":"Field","email_address":"steven.field@chewtonrose.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16570646},{"system_record_state":"active","system_ctime":1612948705,"system_modtime":1612948705,"reminder_id":null,"etag":"16570652-1612948705","security_user_rights":["read","update","trash"],"note":"Went back re Graham sold him his","related":{"note_contacts":[{"id":"2764362","contact":{"system_record_state":"active","system_ctime":"1612890054","system_modtime":"1612891641","name":"Roger Gillespie","email_address":"rogergillespie00@gmail.com","phone_number":"07879 668999","fax_number":null,"is_dnd":null,"type":"person","last_contacted_date":"2021-03-11","name_last":"Gillespie","address_postal":null,"address":"The Fuchsias\r\nBroughton\r\nMILTON KEYNES\r\nMK10 9AA","interest_level":null,"marketing_birthday":null,"marketing_enquiry_source":"Internet - Rightmove","marketing_gender":null,"marketing_postcode":null,"name_legal":null,"name_salutation":null,"name_addressee":null,"system_owner_user":{"id":0,"name":"System User","first_name":"System","last_name":"User","email_address":"no-reply@rexsoftware.com.au"},"contact_image":null,"marketing_enquiry_method":null,"etag":"2115958-1612891641","id":"2115958"}}],"note_market_leads":[],"note_properties":[],"note_projects":[],"note_project_stages":[],"note_chain_links":[]},"system_modified_user":{"id":"19522","name":"Steven Field","first_name":"Steven","last_name":"Field","email_address":"steven.field@chewtonrose.co.uk"},"system_created_user":{"id":"19522","name":"Steven Field","first_name":"Steven","last_name":"Field","email_address":"steven.field@chewtonrose.co.uk"},"note_type":{"id":"note","text":"Note"},"id":16570652}],"error":null}
</property>
                        <property
                          dataType="System.Boolean"
                          description="Include all upstream parent columns into output except the one you selected to parse. By default only parsed columns from Input document is included in the output. If you wish to include all other upstream columns in the output too then check this option."
                          expressionType="Notify"
                          name="OutputAllUpstreamColumns">true</property>
                        <property
                          dataType="System.Int32"
                          description="Defines how to handle empty input. By default NULL or Empty input is skipped from parsing."
                          expressionType="Notify"
                          name="EmptyInputProcessingMode"
                          typeConverter="ZappySys.Common.Data.EmptyInputProcessingMode">0</property>
                        <property
                          dataType="System.String"
                          description="Defines how to handle empty input. By default NULL or Empty input is skipped from parsing."
                          expressionType="Notify"
                          name="TreatEmptyInputAs">{ }</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum JSON records to fetch. Set this value to 0 for all records"
                          expressionType="Notify"
                          name="MaxRows">0</property>
                        <property
                          dataType="System.String"
                          description="Enter expression here to filter data.(Example:  $.Users[*].UserName ) This will fetch User names from users records"
                          expressionType="Notify"
                          name="Filter"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">$.result[*]</property>
                        <property
                          dataType="System.Boolean"
                          description="Use this option to include parent properties (Non array) in the output along with Filtered Rows"
                          expressionType="Notify"
                          name="IncludeParentColumns">false</property>
                        <property
                          dataType="System.Boolean"
                          description="By default child and parent information is not included in the output if children not found for specified expression. For example if you want to extract all orders from all customers nodes then you can type $.Customers[*].Orders[*]. This will fetch all orders from all customers. By default customers records without orders wont be included in the output. If you want to include those customers where orders not found then check this option (Output null information for order attributes). This behavior is similar to LEFT OUTER JOIN in SQL (Left side is parent, right side is child). This option is ***resource intensive*** so only check if you really care about this behavior."
                          expressionType="Notify"
                          name="IncludeParentColumnsWhenChildMissing">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to true if you want to output parent columns which are array. By default any parent column which is an array is not included in output. See also FilterForParentColumnsWithArrayType property if you set this property"
                          expressionType="Notify"
                          name="IncludeParentColumnsWithArrayType">false</property>
                        <property
                          dataType="System.String"
                          description="Filter expression to extract value form parent"
                          expressionType="Notify"
                          name="FilterForParentColumnsWithArrayType"></property>
                        <property
                          dataType="System.String"
                          description="Prefix for parent column name. This option is only valid if you have set IncludeParentColumns=True"
                          expressionType="Notify"
                          name="ParentColumnPrefix">P_</property>
                        <property
                          dataType="System.Boolean"
                          description="Throw error if property name specified in filter expression is missing. By default it will ignore any missing property errors."
                          expressionType="Notify"
                          name="ThrowErrorIfPropertyMissing">false</property>
                        <property
                          dataType="System.Int32"
                          description="This property how many nested levels should be scanned to fetch various properties. 0=Scan all child levels."
                          expressionType="Notify"
                          name="MaxLevelsToScan">0</property>
                        <property
                          dataType="System.String"
                          description="List comma separated property names from JSON document which you want to exclude from output. Specify parent property name to exclude all child nodes."
                          expressionType="Notify"
                          name="ExcludedProperties"></property>
                        <property
                          dataType="System.String"
                          description="Property level separator used in generated property name (separator for outer properties - Above selected filter node). Use this if default separator is producing duplicate property name which is conflicting with existing name."
                          expressionType="Notify"
                          name="LevelSeparator">_</property>
                        <property
                          dataType="System.Boolean"
                          description="Enables deep array flattening for selected filtered hierarchy. When you turn on this property it will flatten each property of each array item and expose as column (e.g. If you have Filter set as $.customers[*] and for each customer you have an array of Addresses then you may see output columns like Addresses.1.City, Addresses.1.State, Addresses.2.City, Addresses.2.State .... Addresses.N.City, Addresses.N.State). You can control how many array items you want to flatten by setting MaxArrayItemsToFlatten property."
                          expressionType="Notify"
                          name="EnableArrayFlattening">false</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum number of array items to flatten. inner array flattening. Adjust this property to control how many columns being generated. This option is ignored if you set EnableArrayFlattening=false"
                          expressionType="Notify"
                          name="MaxArrayItemsToFlatten">10</property>
                        <property
                          dataType="System.String"
                          description="Specifies how custom date formatted strings are parsed when reading JSON."
                          expressionType="Notify"
                          name="DateFormatString"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies how date formatted strings, e.g. Date(1198908717056) and 2012-03-21T05:40Z, are parsed when reading JSON."
                          expressionType="Notify"
                          name="DateParseHandling"
                          typeConverter="ZappySys.Common.DateParseHandling">1</property>
                        <property
                          dataType="System.Boolean"
                          description="Output as raw JSON document rather than parsing individual fields. This option is helpful if you have documents stored in a file and you want to pass them downstream as raw JSON string rather than parsing into columns."
                          expressionType="Notify"
                          name="OutputRawDocument">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Indent JSON output so its easy to read."
                          expressionType="Notify"
                          name="IndentOutput">true</property>
                        <property
                          dataType="System.Boolean"
                          description="When this property is true then Column is converted to Row. Pivoted names will appear under  Pivot_Name column and values will appear under Pivot_Value field."
                          expressionType="Notify"
                          name="EnablePivot">false</property>
                        <property
                          dataType="System.Int32"
                          description="Array Transformation you want to apply. Useful for case when you have 2-Dimensional arrays with rows/columns in separate arrays."
                          expressionType="Notify"
                          name="ArrayTransformationType"
                          typeConverter="ZappySys.Json.ArrayTransformType">0</property>
                        <property
                          dataType="System.String"
                          description="Filter expression to use to extract column names for array transformation."
                          expressionType="Notify"
                          name="ArrayTransColumnNameFilter"></property>
                        <property
                          dataType="System.String"
                          description="Filter expression for row values (Not applicable for simple array transformation)."
                          expressionType="Notify"
                          name="ArrayTransRowValueFilter"></property>
                        <property
                          dataType="System.Boolean"
                          description="When you have 2D array but don't have column list specified in a separate array then use this option (e.g. { arr: [[10,11],[21,22]] } )."
                          expressionType="Notify"
                          name="ArrayTransEnableCustomColumns">false</property>
                        <property
                          dataType="System.String"
                          description="When you have 2D array but don't have column list specified in a separate array then use specify column names here. Use comma separated list (e.g col1,col2,col3 ). Column name Order must match value order."
                          expressionType="Notify"
                          name="ArrayTransCustomColumns"></property>
                        <property
                          dataType="System.Int32"
                          description="Metadata scan mode controls how data type and length is determined. By default few records scanned to determine datatype/length. Changing ScanMode affects length/datatype accuracy."
                          expressionType="Notify"
                          name="MetaDataScanMode"
                          typeConverter="ZappySys.Common.Data.MetaDataScanMode">4</property>
                        <property
                          dataType="System.Int32"
                          description="Length for all string column. This option is only valid for MetaDataScanMode=Custom"
                          expressionType="Notify"
                          name="MetaDataCustomLength">1000</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.JsonParserTransform</property>
                        <property
                          dataType="System.Boolean"
                          name="EnableBigNumberHandling">false</property>
                        <property
                          dataType="System.Int32"
                          name="Encoding">0</property>
                        <property
                          dataType="System.String"
                          name="CharacterSet"></property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Notes (stream)\record.Inputs[JsonParserTransformInput]"
                          errorRowDisposition="FailComponent"
                          name="JsonParserTransformInput"
                          truncationRowDisposition="FailComponent">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\record.Inputs[JsonParserTransformInput].Columns[ResponseText]"
                              cachedDataType="nText"
                              cachedName="ResponseText"
                              lineageId="Package\Iterate Offices\Sequence Container\Notes (stream)\Read details (throttled).Outputs[Response Output].Columns[ResponseText]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\record.Inputs[JsonParserTransformInput].Columns[etag]"
                              cachedDataType="wstr"
                              cachedLength="68"
                              cachedName="etag"
                              lineageId="Package\Iterate Offices\Sequence Container\Notes (stream)\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etag]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Notes (stream)\record.Outputs[JsonParserTransformOutput].Columns[etag]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\record.Inputs[JsonParserTransformInput].Columns[id]"
                              cachedDataType="i4"
                              cachedName="id"
                              cachedSortKeyPosition="1"
                              lineageId="Package\Iterate Offices\Sequence Container\Notes (stream)\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[id]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Notes (stream)\record.Outputs[JsonParserTransformOutput].Columns[id]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\record.Inputs[JsonParserTransformInput].Columns[etagnote]"
                              cachedDataType="wstr"
                              cachedLength="250"
                              cachedName="etagnote"
                              lineageId="Package\Iterate Offices\Sequence Container\Notes (stream)\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etagnote]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Notes (stream)\record.Outputs[JsonParserTransformOutput].Columns[etagnote]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\record.Inputs[JsonParserTransformInput].Columns[TemplateOutput]"
                              cachedDataType="nText"
                              cachedName="TemplateOutput"
                              lineageId="Package\Iterate Offices\Sequence Container\Notes (stream)\Template Transform.Outputs[TemplateTransformOutput].Columns[TemplateOutput]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Notes (stream)\record.Outputs[JsonParserTransformOutput].Columns[TemplateOutput]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\record.Inputs[JsonParserTransformInput].Columns[StatusCode]"
                              cachedDataType="i4"
                              cachedName="StatusCode"
                              lineageId="Package\Iterate Offices\Sequence Container\Notes (stream)\Read details (throttled).Outputs[Response Output].Columns[StatusCode]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Notes (stream)\record.Outputs[JsonParserTransformOutput].Columns[StatusCode]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True" />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Notes (stream)\record.Outputs[JsonParserTransformOutput]"
                          errorOrTruncationOperation="Error"
                          errorRowDisposition="FailComponent"
                          name="JsonParserTransformOutput"
                          truncationRowDisposition="FailComponent">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\record.Outputs[JsonParserTransformOutput].Columns[StatusCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Notes (stream)\record.Outputs[JsonParserTransformOutput].Columns[StatusCode]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Notes (stream)\record.Inputs[JsonParserTransformInput].Columns[StatusCode]"
                              name="StatusCode" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\record.Outputs[JsonParserTransformOutput].Columns[TemplateOutput]"
                              dataType="nText"
                              description="Template output column which will contain replaced text."
                              lineageId="Package\Iterate Offices\Sequence Container\Notes (stream)\record.Outputs[JsonParserTransformOutput].Columns[TemplateOutput]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Notes (stream)\record.Inputs[JsonParserTransformInput].Columns[TemplateOutput]"
                              name="TemplateOutput" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\record.Outputs[JsonParserTransformOutput].Columns[etagnote]"
                              dataType="wstr"
                              length="250"
                              lineageId="Package\Iterate Offices\Sequence Container\Notes (stream)\record.Outputs[JsonParserTransformOutput].Columns[etagnote]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Notes (stream)\record.Inputs[JsonParserTransformInput].Columns[etagnote]"
                              name="etagnote" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\record.Outputs[JsonParserTransformOutput].Columns[id]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Notes (stream)\record.Outputs[JsonParserTransformOutput].Columns[id]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Notes (stream)\record.Inputs[JsonParserTransformInput].Columns[id]"
                              name="id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\record.Outputs[JsonParserTransformOutput].Columns[etag]"
                              dataType="wstr"
                              length="68"
                              lineageId="Package\Iterate Offices\Sequence Container\Notes (stream)\record.Outputs[JsonParserTransformOutput].Columns[etag]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Notes (stream)\record.Inputs[JsonParserTransformInput].Columns[etag]"
                              name="etag" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\record.Outputs[JsonParserTransformOutput].Columns[__DOCUMENT__]"
                              dataType="nText"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Notes (stream)\record.Outputs[JsonParserTransformOutput].ExternalColumns[__DOCUMENT__]"
                              lineageId="Package\Iterate Offices\Sequence Container\Notes (stream)\record.Outputs[JsonParserTransformOutput].Columns[__DOCUMENT__]"
                              name="__DOCUMENT__" />
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\record.Outputs[JsonParserTransformOutput].ExternalColumns[__DOCUMENT__]"
                              dataType="nText"
                              name="__DOCUMENT__" />
                          </externalMetadataColumns>
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Notes (stream)\record.Outputs[JsonParserTransform Error Output]"
                          isErrorOut="true"
                          name="JsonParserTransform Error Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\record.Outputs[JsonParserTransform Error Output].Columns[StatusCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Notes (stream)\record.Outputs[JsonParserTransform Error Output].Columns[StatusCode]"
                              name="StatusCode" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\record.Outputs[JsonParserTransform Error Output].Columns[TemplateOutput]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\Notes (stream)\record.Outputs[JsonParserTransform Error Output].Columns[TemplateOutput]"
                              name="TemplateOutput" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\record.Outputs[JsonParserTransform Error Output].Columns[etagnote]"
                              dataType="wstr"
                              length="250"
                              lineageId="Package\Iterate Offices\Sequence Container\Notes (stream)\record.Outputs[JsonParserTransform Error Output].Columns[etagnote]"
                              name="etagnote" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\record.Outputs[JsonParserTransform Error Output].Columns[id]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Notes (stream)\record.Outputs[JsonParserTransform Error Output].Columns[id]"
                              name="id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\record.Outputs[JsonParserTransform Error Output].Columns[etag]"
                              dataType="wstr"
                              length="68"
                              lineageId="Package\Iterate Offices\Sequence Container\Notes (stream)\record.Outputs[JsonParserTransform Error Output].Columns[etag]"
                              name="etag" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\record.Outputs[JsonParserTransform Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Notes (stream)\record.Outputs[JsonParserTransform Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\record.Outputs[JsonParserTransform Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Notes (stream)\record.Outputs[JsonParserTransform Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\record.Outputs[JsonParserTransform Error Output].Columns[ErrorColumnName]"
                              codePage="1252"
                              dataType="str"
                              length="128"
                              lineageId="Package\Iterate Offices\Sequence Container\Notes (stream)\record.Outputs[JsonParserTransform Error Output].Columns[ErrorColumnName]"
                              name="ErrorColumnName" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\record.Outputs[JsonParserTransform Error Output].Columns[ErrorMessage]"
                              dataType="wstr"
                              length="1024"
                              lineageId="Package\Iterate Offices\Sequence Container\Notes (stream)\record.Outputs[JsonParserTransform Error Output].Columns[ErrorMessage]"
                              name="ErrorMessage" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\record.Outputs[JsonParserTransform Error Output].Columns[ErrorRawData]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\Notes (stream)\record.Outputs[JsonParserTransform Error Output].Columns[ErrorRawData]"
                              name="ErrorRawData" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\record.Outputs[JsonParserTransform Error Output].Columns[__DOCUMENT__]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\Notes (stream)\record.Outputs[JsonParserTransform Error Output].Columns[__DOCUMENT__]"
                              name="__DOCUMENT__" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Search Notes"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="JSON Source (REST API or File); ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="The JSON source is used to read data from JSON files, RESTful Web Service or direct JSON String."
                      name="Search Notes"
                      usesDispositions="true"
                      version="33">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for any numeric data types"
                          expressionType="Notify"
                          name="TreatBlankNumberAsNull">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for bool data types"
                          expressionType="Notify"
                          name="TreatBlankBoolAsNull">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for any date/time data types"
                          expressionType="Notify"
                          name="TreatBlankDateAsNull">true</property>
                        <property
                          dataType="System.Int32"
                          description="Defines how to read the JSON file or direct string"
                          expressionType="Notify"
                          name="AccessMode"
                          typeConverter="ZappySys.Common.Ssis.FileValueAccessMode">3</property>
                        <property
                          dataType="System.String"
                          description="Defines how to read the JSON file or direct string"
                          expressionType="Notify"
                          name="DirectValue"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.String"
                          description="Variable name which holds JSON string"
                          expressionType="Notify"
                          name="ValueVariable"
                          typeConverter="ZappySys.PowerPack.Converters.VariableEditor,ZappySys.PowerPack130.UI,Version=1.0.0.0,Culture=neutral,PublicKeyToken=1903265a93eae502"></property>
                        <property
                          dataType="System.String"
                          description="Variable name which holds data file path or url"
                          expressionType="Notify"
                          name="PathVariable"
                          typeConverter="ZappySys.PowerPack.Converters.VariableEditor,ZappySys.PowerPack130.UI,Version=1.0.0.0,Culture=neutral,PublicKeyToken=1903265a93eae502">User::RexAPIWebURL</property>
                        <property
                          dataType="System.String"
                          description="JSON file file path (e.g. c:\data\myfile.json) or pattern to process multiple files (e.g. c:\data\*.json)"
                          expressionType="Notify"
                          name="DirectPath"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">https://api.uk.rexsoftware.com/rex.php</property>
                        <property
                          dataType="System.Boolean"
                          description="Include files from sub folders too."
                          expressionType="Notify"
                          name="Recursive">false</property>
                        <property
                          dataType="System.String"
                          description="Set this if you want to set custom Http headers. You may use variable anywhere in the header value using syntax {{User::YourVarName}}. Syntax of Header key value pair is : &amp;lt;request&amp;gt;&amp;lt;header&amp;gt;&amp;lt;name&amp;gt;x-myheader-1&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;AAA&amp;lt;/value&amp;gt;&amp;lt;/header&amp;gt; &amp;lt;header&amp;gt;&amp;lt;name&amp;gt;x-myheader-2&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;BBB&amp;lt;/value&amp;gt;&amp;lt;/header&amp;gt;&amp;lt;/request&amp;gt;"
                          expressionType="Notify"
                          name="HttpHeaders">&lt;request&gt;&lt;header&gt;&lt;name&gt;Accept&lt;/name&gt;&lt;value&gt;*/*&lt;/value&gt;&lt;/header&gt;&lt;header&gt;&lt;name&gt;Cache-Control&lt;/name&gt;&lt;value&gt;no-cache&lt;/value&gt;&lt;/header&gt;&lt;header&gt;&lt;name&gt;X-App-Identifier&lt;/name&gt;&lt;value&gt;client:spicerhaart:{{System::PackageName}}:{{System::TaskName}}&lt;/value&gt;&lt;/header&gt;&lt;/request&gt;</property>
                        <property
                          dataType="System.String"
                          description="User defined data you wish to send along with your HTTP Request (e.g. Upload file data, Form POST data). Usually you have to set content-type of your data but if you select RequestMethod=POST then system will automatically set content-type=application/x-www-form-urlencoded."
                          expressionType="Notify"
                          name="HttpRequestData">{
"method":"Notes::search",
"args":{
	"criteria": 
	[
		{
       		"name": "system_modtime", 
	       	"type": "&gt;=", 
	        "value": 1611228514
		}
	],
	"result_format":"etags",
	"limit":50000,
	"offset": &lt;%page%&gt;
	 },
"strip_response_prefixes": true,
"token": "{{User::RexToken}}"
}</property>
                        <property
                          dataType="System.String"
                          description="Http Web Request Method (e.g. POST, GET, PUT, LIST, DELETE...). Refer your API documentation if you are not sure which method you have to use."
                          expressionType="Notify"
                          name="HttpRequestMethod">POST</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies content type for data you wish to POST. If you select Default option then system default content type will be used (i.e. application/x-www-form-urlencoded). If you specify Content-Type header along with this option then header value takes precedence."
                          expressionType="Notify"
                          name="HttpRequestContentType"
                          typeConverter="ZappySys.Common.Web.HttpRequestContentType">2</property>
                        <property
                          dataType="System.Int32"
                          description="Data format coming from HTTP Response. This is useful for example when you have OData service and you want to automatically consume all pages of data using odata.netUrl. Setting JsonFormat=Odata will automatically do it for you. This setting is only applicable if JSON is coming from HTTP WebRequest."
                          expressionType="Notify"
                          name="JsonFormat"
                          typeConverter="ZappySys.Json.JsonFormat">1</property>
                        <property
                          dataType="System.Boolean"
                          description="Enable custom proxy settings (If this is not set then system default proxy will be used. To disable proxy totally uncheck this option and check DoNotUseDefaultProxy option if available)"
                          expressionType="Notify"
                          name="UseProxy">false</property>
                        <property
                          dataType="System.String"
                          description="Web URL of Proxy server (including port  if necessary). [e.g. http://myproxyserver:8080/]"
                          expressionType="Notify"
                          name="ProxyUrl"></property>
                        <property
                          dataType="System.Boolean"
                          description="Enable passing userid and password to proxy server"
                          expressionType="Notify"
                          name="UseProxyCreds">false</property>
                        <property
                          dataType="System.String"
                          description="Proxy username"
                          expressionType="Notify"
                          name="ProxyUserName"></property>
                        <property
                          dataType="System.String"
                          description="Proxy password"
                          expressionType="Notify"
                          name="ProxyPassword"></property>
                        <property
                          dataType="System.String"
                          description="If Service response support pagination using some sort of next url attribute then specify which attribute name in JSON Response string which holds next url. If no attribute found or its null then component will stop fetching next resultset. Example: $.pagingInfo.nextUrl"
                          expressionType="Notify"
                          name="NextUrlAttribute"></property>
                        <property
                          dataType="System.String"
                          description="If Service response support pagination using some sort of prev/next url attribute then specify which previous link attribute name from JSON Response string which holds previous url."
                          expressionType="Notify"
                          name="PrevUrlAttribute"></property>
                        <property
                          dataType="System.String"
                          description="Specifies value for NextUrlAttribute or StopIndicatorAttribute which indicates last page to stop pagination. If you have specified StopIndicatorAttribute then you can use Regular expression rather than static value to indicate last page. To use regular expression value of this property must start with regex= prefix. Example : regex=FALSE|N  (assuming you set StopIndicatorAttribute to something like $.hasMore)"
                          expressionType="Notify"
                          name="NextUrlStopIndicator"></property>
                        <property
                          dataType="System.String"
                          description="Attribute name or expression for attribute which can be used as stop indicator (e.g. hasmore --or-- $.pagination.hasmore). If this value is blank then NextUrlAttribute is used"
                          expressionType="Notify"
                          name="StopIndicatorAttribute"></property>
                        <property
                          dataType="System.String"
                          description="If you want to include certain text (or parameters) at the end of Next url then specify this attribute (e.g. &amp;format=json). Another common usecase of this property is to supply pagination token to next Page URL. You can also use &lt;%nextlink%&gt; or  &lt;%nextlink_encoded%&gt; placeholder (e.g. &amp;cursor=&lt;%nextlink_encoded%&gt; )"
                          expressionType="Notify"
                          name="NextUrlSuffix"></property>
                        <property
                          dataType="System.Int32"
                          description="This property indicates total number of milliseconds you want to wait before sending next request. This option allows you to adjust how many API calls can be made within certain timeframe. If your API Service has no limit then set this option to zero"
                          expressionType="Notify"
                          name="NextUrlWait">0</property>
                        <property
                          dataType="System.Boolean"
                          description="If this option is true then component will continue without exception on 404 error (Url not found). This allows you to consume data gracefully."
                          expressionType="Notify"
                          name="ContinueOnUrlNotFoundError">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Continue when any type of exception occurs during http request"
                          expressionType="Notify"
                          name="ContineOnAnyError">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Continue on error when specified substring found in response"
                          expressionType="Notify"
                          name="ContineOnErrorForMessage">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Continue on error when specified status code returned from web server"
                          expressionType="Notify"
                          name="ContineOnErrorForStatusCode">false</property>
                        <property
                          dataType="System.Boolean"
                          description="When error occurs no data is returned. Use this option to get content eventhough error occurs. When this option is checked you can't use [continue on error when specific string found in response] option"
                          expressionType="Notify"
                          name="ConsumeResponseOnError">false</property>
                        <property
                          dataType="System.Int32"
                          description="Status code to match when error occurs and ContineOnErrorForStatusCode option is true. If Response status code matches to this code then task continues to run"
                          expressionType="Notify"
                          name="ErrorStatusCodeToMatch">404</property>
                        <property
                          dataType="System.String"
                          description="Error substring to match when error occurs and ContineOnErrorForMessage option is true. If Response status code matches to this code then task continues to run"
                          expressionType="Notify"
                          name="ErrorSubstringToMatch"></property>
                        <property
                          dataType="System.String"
                          description="Cookie Container can be used to maintain state between multiple web requests. Example: You can login to site like wordpress and then extract any private page content by simply passing authentication cookies using this variable."
                          expressionType="Notify"
                          name="CookieContainerVariable"></property>
                        <property
                          dataType="System.Int32"
                          description="Http request Timeout in seconds. Set this to 0 if you want to use system default value (i.e. 100 seconds)"
                          expressionType="Notify"
                          name="RequestTimeout">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies which security protocol is supported for HTTPS communication. Using this option you can enable legacy protocol or enforce to use latest version of security protocol (Note: TLS 1.2 is only supported in SSIS 2014 or Higher)."
                          expressionType="Notify"
                          name="SecurityProtocol"
                          typeConverter="ZappySys.PowerPack.Common.HttpsSecurityProtocolType">0</property>
                        <property
                          dataType="System.Boolean"
                          description="Enable support for gzip or deflate compression. When you check this option compressed response automatically de-compressed saving bandwidth. This option is only valid if web server supports compressed response stream. Check your API documentation for more information."
                          expressionType="Notify"
                          name="EnableCompressionSupport">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Ignore SSL certificate related errors. Example: if you getting SSL/TLS errors because of certificate expired or certificate is not from trusted authority or certificate is self-signed. By checking this option you will not get SSL/TLS error."
                          expressionType="Notify"
                          name="IgnoreCertificateErrors">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Allow unsecure ciphers/suites and curves for SSLS/TLS communication. Use this option to communicate with web servers which needs legacy / unsecured ciphers support. This option is only trigged when you change default SSL/TLS Version on advanced settings tab."
                          expressionType="Notify"
                          name="AllowUnsecureSuite">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Use connection to pass credentials for authentication (e.g. Use UserID/Password or Use OAuth Protocol for token based approach)"
                          expressionType="Notify"
                          name="UseConnection">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specified how you want to loop through multiple pages returned by REST API."
                          expressionType="Notify"
                          name="PagingMode"
                          typeConverter="ZappySys.Common.RestApiPagingMode">3</property>
                        <property
                          dataType="System.Boolean"
                          description="If you wish to pass extracted pagination token or current page number in the body of next request then set this option to true. You can use [$pagetoken$] and [$pagetoken$] placeholders anywhere in the Body where you wish to insert extracted Page token. You must set encoded token you can use &lt;%nextlink_encoded%&gt; inside SuffixForNextUrl Property. If you dont use SuffixForNextUrl then raw nextLink or Token will be inserted inside the body. If you dont specify [$pagetoken$] placeholder in the body then NextPage Token will be appended at the end. NextPage Token is extracted by filter expression specified using property NextUrlSuffix"
                          expressionType="Notify"
                          name="EnablePageTokenForBody">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this to true if you wish to specify different URL, Header, Body or Filter for first page and next page (i.e. Paginated response). Some APIs like Amazon MWS, NetSuite, Zuora) you may need to set this to true."
                          expressionType="Notify"
                          name="HasDifferentNextPageInfo">false</property>
                        <property
                          dataType="System.String"
                          description="When HasDifferentNextPageInfo=true you can set this property to indicate first page and next page. You can specify different URL, Header, Body or Filter for first page and next page (i.e. Paginated response). Use [$tag$] as placeholder anywhere in the URL, Header, Body or Filter and at runtime system will replace it with correct value (first page or next page value). Syntax to specify placeholder for first page vs next page is like a connectionstring url=FirstPageValue|NextPageValue;header=FirstPageValue|NextPageValue;body=FirstPageValue|NextPageValue;filter=FirstPageValue|NextPageValue; You can use one or more key/value pairs to make things dynamic (e.g. url, header, body or filter)  .For example if you have pagination in your API and First URL is http://abc.com/api/items/get and to get more records you have to call http://abc.com/api/items/getNext then you can use [$tag$] as placeholder in the URL http://abc.com/api/items/[$tag$] and specify this property with first page tag and next page tag as url=get|getNext  (Tags are separated using vertical bar). "
                          expressionType="Notify"
                          name="PagePlaceholders"></property>
                        <property
                          dataType="System.String"
                          description="Use this property to set request body fragment for first page. HasDifferentNextPageInfo must be set to true to use this property."
                          expressionType="Notify"
                          name="FirstPageBodyPart"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.String"
                          description="Use this property to set request body fragment for any request after first request. HasDifferentNextPageInfo must be set to true to use this property."
                          expressionType="Notify"
                          name="NextPageBodyPart"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.String"
                          description="Expression to extract Maximum pages to loop through. Some APIs don't stop pagination and keep returning last page data when you try to read data after last page. Specify expression (e.g. $.page_count ) to read total pages to loop through using this property."
                          expressionType="Notify"
                          name="PagingMaxPagesExpr">$.result.total/50000</property>
                        <property
                          dataType="System.String"
                          description="e.g. Type page_num if URL looks like this =&gt; http://abc.com/?page_num=1&amp;sort=true  (page number via query string)&#xA;--or-- Type &lt;%page%&gt; if page number is inside URL path like this =&gt; http://abc.com/1/?sort=true  (e.g. replace page number in url with placeholder http://abc.com/&lt;%page%&gt;/?sort=true)&#xA;Page number will be incremented by one for next URL until last page is reached or [Max Page Number] is reached"
                          expressionType="Notify"
                          name="PageNumberAttributeNameInUrl">&lt;%page%&gt;</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum page number until which auto increment is allowed. Type zero for no limit. Next URL contains next page number (increment by one) until last page is detected or [Max Page Number] limit is reached."
                          expressionType="Notify"
                          name="MaxPageNumber">0</property>
                        <property
                          dataType="System.String"
                          description="Variable name which will hold starting page number. This is ignored if you useing parameter name from query string to indicate page number."
                          expressionType="Notify"
                          name="StartPageNumberVariable">User::UpsertedCount</property>
                        <property
                          dataType="System.Int32"
                          description="Page counter increment. By default next page is incremented by one if this value is zero. You can also enter negative number if you want to decrease page counter."
                          expressionType="Notify"
                          name="PageNumberIncrement">50000</property>
                        <property
                          dataType="System.Int32"
                          description="Specified how you want detect last page."
                          expressionType="Notify"
                          name="PagingEndStrategy"
                          typeConverter="ZappySys.Common.UrlPagingEndDetectionStrategy">3</property>
                        <property
                          dataType="System.Boolean"
                          description="Condition result to compare to detect last page. Set this property to True if you want detect last page if condition is true else set this to False."
                          expressionType="Notify"
                          name="LastPageWhenConditionEqualsTo">true</property>
                        <property
                          dataType="System.Int32"
                          description="Minimum bytes expected from response."
                          expressionType="Notify"
                          name="ResponseMinBytes">0</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum bytes from response."
                          expressionType="Notify"
                          name="ResponseMaxBytes">3</property>
                        <property
                          dataType="System.String"
                          description="Expected error message sub string from response."
                          expressionType="Notify"
                          name="ResponseErrorString">not found</property>
                        <property
                          dataType="System.Int32"
                          description="Expected status code from response when page number you trying to access not found."
                          expressionType="Notify"
                          name="ResponseStatusCode">404</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum JSON records to fetch. Set this value to 0 for all records"
                          expressionType="Notify"
                          name="MaxRows">0</property>
                        <property
                          dataType="System.String"
                          description="Enter expression here to filter data.(Example:  $.Users[*].UserName ) This will fetch User names from users records"
                          expressionType="Notify"
                          name="Filter"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">$.result.rows[*]</property>
                        <property
                          dataType="System.Boolean"
                          description="Use this option to include parent properties (Non array) in the output along with Filtered Rows"
                          expressionType="Notify"
                          name="IncludeParentColumns">false</property>
                        <property
                          dataType="System.Boolean"
                          description="By default child and parent information is not included in the output if children not found for specified expression. For example if you want to extract all orders from all customers nodes then you can type $.Customers[*].Orders[*]. This will fetch all orders from all customers. By default customers records without orders wont be included in the output. If you want to include those customers where orders not found then check this option (Output null information for order attributes). This behavior is similar to LEFT OUTER JOIN in SQL (Left side is parent, right side is child). This option is ***resource intensive*** so only check if you really care about this behavior."
                          expressionType="Notify"
                          name="IncludeParentColumnsWhenChildMissing">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to true if you want to output parent columns which are array. By default any parent column which is an array is not included in output. See also FilterForParentColumnsWithArrayType property if you set this property"
                          expressionType="Notify"
                          name="IncludeParentColumnsWithArrayType">false</property>
                        <property
                          dataType="System.String"
                          description="Filter expression to extract value form parent"
                          expressionType="Notify"
                          name="FilterForParentColumnsWithArrayType"></property>
                        <property
                          dataType="System.String"
                          description="Prefix for parent column name. This option is only valid if you have set IncludeParentColumns=True"
                          expressionType="Notify"
                          name="ParentColumnPrefix">P_</property>
                        <property
                          dataType="System.Boolean"
                          description="Throw error if property name specified in filter expression is missing. By default it will ignore any missing property errors."
                          expressionType="Notify"
                          name="ThrowErrorIfPropertyMissing">false</property>
                        <property
                          dataType="System.Int32"
                          description="This property how many nested levels should be scanned to fetch various properties. 0=Scan all child levels."
                          expressionType="Notify"
                          name="MaxLevelsToScan">0</property>
                        <property
                          dataType="System.String"
                          description="List comma separated property names from JSON document which you want to exclude from output. Specify parent property name to exclude all child nodes."
                          expressionType="Notify"
                          name="ExcludedProperties"></property>
                        <property
                          dataType="System.String"
                          description="Property level separator used in generated property name (separator for outer properties - Above selected filter node). Use this if default separator is producing duplicate property name which is conflicting with existing name."
                          expressionType="Notify"
                          name="LevelSeparator">_</property>
                        <property
                          dataType="System.Boolean"
                          description="Enables deep array flattening for selected filtered hierarchy. When you turn on this property it will flatten each property of each array item and expose as column (e.g. If you have Filter set as $.customers[*] and for each customer you have an array of Addresses then you may see output columns like Addresses.1.City, Addresses.1.State, Addresses.2.City, Addresses.2.State .... Addresses.N.City, Addresses.N.State). You can control how many array items you want to flatten by setting MaxArrayItemsToFlatten property."
                          expressionType="Notify"
                          name="EnableArrayFlattening">false</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum number of array items to flatten. inner array flattening. Adjust this property to control how many columns being generated. This option is ignored if you set EnableArrayFlattening=false"
                          expressionType="Notify"
                          name="MaxArrayItemsToFlatten">10</property>
                        <property
                          dataType="System.Int32"
                          description="Compression format for source file (e.g. gzip, zip)"
                          expressionType="Notify"
                          name="FileCompressionType"
                          typeConverter="ZappySys.Common.FileCompressionType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Array Transformation you want to apply. Useful for case when you have 2-Dimensional arrays with rows/columns in separate arrays."
                          expressionType="Notify"
                          name="ArrayTransformationType"
                          typeConverter="ZappySys.Json.ArrayTransformType">0</property>
                        <property
                          dataType="System.String"
                          description="Filter expression to use to extract column names for array transformation."
                          expressionType="Notify"
                          name="ArrayTransColumnNameFilter">$.result.rows[*]</property>
                        <property
                          dataType="System.String"
                          description="Filter expression for row values (Not applicable for simple array transformation)."
                          expressionType="Notify"
                          name="ArrayTransRowValueFilter">$.result.rows[*]</property>
                        <property
                          dataType="System.Boolean"
                          description="When you have 2D array but don't have column list specified in a separate array then use this option (e.g. { arr: [[10,11],[21,22]] } )."
                          expressionType="Notify"
                          name="ArrayTransEnableCustomColumns">true</property>
                        <property
                          dataType="System.String"
                          description="When you have 2D array but don't have column list specified in a separate array then use specify column names here. Use comma separated list (e.g col1,col2,col3 ). Column name Order must match value order."
                          expressionType="Notify"
                          name="ArrayTransCustomColumns">MetricID</property>
                        <property
                          dataType="System.String"
                          description="Specifies how custom date formatted strings are parsed when reading JSON."
                          expressionType="Notify"
                          name="DateFormatString"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies how date formatted strings, e.g. Date(1198908717056) and 2012-03-21T05:40Z, are parsed when reading JSON."
                          expressionType="Notify"
                          name="DateParseHandling"
                          typeConverter="ZappySys.Common.DateParseHandling">1</property>
                        <property
                          dataType="System.Boolean"
                          description="Output as raw JSON document rather than parsing individual fields. This option is helpful if you have documents stored in a file and you want to pass them downstream as raw JSON string rather than parsing into columns."
                          expressionType="Notify"
                          name="OutputRawDocument">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indent JSON output so its easy to read."
                          expressionType="Notify"
                          name="IndentOutput">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to true if you want to output FilePath. This option is ignored when you consume DirectValue or data from Url rather than local files. Output column name will be __FilePath"
                          expressionType="Notify"
                          name="OutputFilePath">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to true if you want to output FileName. This option is ignored when you consume DirectValue or data from Url rather than local files. Output column name will be __FileName"
                          expressionType="Notify"
                          name="OutputFileName">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to true if you want to move processed file to archive folder."
                          expressionType="Notify"
                          name="EnableArchiveFile">false</property>
                        <property
                          dataType="System.String"
                          description="Folder path where you want to move processed file."
                          expressionType="Notify"
                          name="ArchiveFolderPath"></property>
                        <property
                          dataType="System.Boolean"
                          description="Folder path where you want to move processed file."
                          expressionType="Notify"
                          name="OverwriteFileInArchiveFolder">false</property>
                        <property
                          dataType="System.String"
                          description="File naming convention for archived file. By default it will same name as original source file processed. But you can control naming format using {%name%} and {%ext%} placeholders. e.g. {%name%}_processed{%ext%} or {%name%}{%ext%}.{{System::ContainerStartTime,yyyyMMdd_HHmmss_fff}}"
                          expressionType="Notify"
                          name="ArchiveFileNamingConvention"></property>
                        <property
                          dataType="System.Boolean"
                          description="When this property is true then Column is converted to Row. Pivoted names will appear under  Pivot_Name column and values will appear under Pivot_Value field."
                          expressionType="Notify"
                          name="EnablePivot">false</property>
                        <property
                          dataType="System.Int32"
                          description="Metadata scan mode controls how data type and length is determined. By default few records scanned to determine datatype/length. Changing ScanMode affects length/datatype accuracy."
                          expressionType="Notify"
                          name="MetaDataScanMode"
                          typeConverter="ZappySys.Common.Data.MetaDataScanMode">4</property>
                        <property
                          dataType="System.Int32"
                          description="Length for all string column. This option is only valid for MetaDataScanMode=Custom"
                          expressionType="Notify"
                          name="MetaDataCustomLength">1000</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.JsonSource</property>
                        <property
                          dataType="System.Int32"
                          description="Encoding of source file"
                          expressionType="Notify"
                          name="Encoding"
                          typeConverter="ZappySys.Common.EncodingType">0</property>
                        <property
                          dataType="System.String"
                          description="Character set for text (e.g. utf-8 )"
                          expressionType="Notify"
                          name="CharacterSet"></property>
                        <property
                          dataType="System.Boolean"
                          description="By default process stops with error if specified local file is not found. Set this property to true if you wish to continue rather than throwing file not found error."
                          expressionType="Notify"
                          name="ContinueOnFileNotFoundError">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Check this option if you want to upload file(s) (i.e. POST RAW file data) or send data using Multi-Part encoding method (i.e. Content-Type: multipart/form-data). Multi-Part request allows you to mix key/value and upload files in same request. On the other hand raw upload allows only single file upload (without any key/value) &#xA;&#xA;==== Raw Upload (Content-Type: application/octet-stream) =====   &#xA;To upload single file in raw mode check this option and specify full file path starting with @ sign in the Body (e.g.  @c:\data\myfile.zip ) &#xA;&#xA;==== Form-Data / Multipart Upload (Content-Type: multipart/form-data) =====   &#xA;To treat your Request data as multi part fields you must specify key/value pairs separated by new lines into RequestData field (i.e. Body). Each key value pair is entered on new-line and key/value are separated using equal sign (=). Preceding and trailing spaces are ignored also blank lines are ignored. &#xA;If field value has some any special character(s) then use escape sequence (e.g. For NewLine: \r\n, For Tab: \t, For at (@): \@). When value of any field starts with at sign (@) its automatically treated as File you want to upload. By default file content type is determined based on extension however you can supply content type manually for any field using this way [ fieldname.Content-Type=some content type ]. In below example we have supplied Content-Type for file2 and SomeField1, all other fields are using default content-type.&#xA;See below Example of uploading multiple files along with additional fields.&#xA;&#xA;file1=@c:\data\Myfile1.txt&#xA;file2=@c:\data\Myfile2.json&#xA;file2.Content-Type=application/json&#xA;SomeField1=aaaaaaa&#xA;SomeField1.Content-Type=text/plain&#xA;SomeField2=12345&#xA;SomeFieldWithNewLineAndTab=This is line1\r\nThis is line2\r\nThis is \ttab \ttab \ttab&#xA;SomeFieldStartingWithAtSign=\@MyTwitterHandle&#xA;"
                          expressionType="Notify"
                          name="IsMultiPartUpload">false</property>
                        <property
                          dataType="System.String"
                          description="Expression to extract Maximum records to loop through. Some APIs don't stop pagination and keep returning last page data when you try to read data after last page. Specify expression (e.g. $.total_rows ) to read total pages to loop through using this property. This setting is ignored if you set PagingMaxPagesExpr."
                          expressionType="Notify"
                          name="PagingMaxRowsExpr"></property>
                        <property
                          dataType="System.String"
                          description="When you enable PagingMaxRowsExpr (end pagination based on MaxRowCount) then you need to count records coming in each response. This expression extract all rows found under specified expression (e.g. $.orders[*] if all records found under orders node)."
                          expressionType="Notify"
                          name="PagingMaxRowsDataPathExpr"></property>
                        <property
                          dataType="System.Boolean"
                          description="When this option is checked, system allows to parse large number (Higher than Int64) in JSON document (i.e. { id: 76000009353950433247780 } ). If you do not turn on this option then it may throw error if large number is encountered. This option is SLOW because it has to perform additional checks in order to avoid Large number overflow error so do not turn on unless you getting Large number error."
                          expressionType="Notify"
                          name="EnableBigNumberHandling">false</property>
                      </properties>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Search Notes.Outputs[JsonSourceOutput]"
                          errorOrTruncationOperation="Error"
                          errorRowDisposition="FailComponent"
                          name="JsonSourceOutput"
                          truncationRowDisposition="FailComponent">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Search Notes.Outputs[JsonSourceOutput].Columns[etag]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Notes (stream)\Search Notes.Outputs[JsonSourceOutput].ExternalColumns[etag]"
                              length="68"
                              lineageId="Package\Iterate Offices\Sequence Container\Notes (stream)\Search Notes.Outputs[JsonSourceOutput].Columns[etag]"
                              name="etag" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Search Notes.Outputs[JsonSourceOutput].Columns[id]"
                              dataType="i4"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Notes (stream)\Search Notes.Outputs[JsonSourceOutput].ExternalColumns[id]"
                              lineageId="Package\Iterate Offices\Sequence Container\Notes (stream)\Search Notes.Outputs[JsonSourceOutput].Columns[id]"
                              name="id" />
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Search Notes.Outputs[JsonSourceOutput].ExternalColumns[system_record_state]"
                              dataType="wstr"
                              length="24"
                              name="system_record_state" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Search Notes.Outputs[JsonSourceOutput].ExternalColumns[system_ctime]"
                              dataType="wstr"
                              length="40"
                              name="system_ctime" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Search Notes.Outputs[JsonSourceOutput].ExternalColumns[system_modtime]"
                              dataType="wstr"
                              length="40"
                              name="system_modtime" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Search Notes.Outputs[JsonSourceOutput].ExternalColumns[name]"
                              dataType="wstr"
                              length="144"
                              name="name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Search Notes.Outputs[JsonSourceOutput].ExternalColumns[email_address]"
                              dataType="wstr"
                              length="180"
                              name="email_address" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Search Notes.Outputs[JsonSourceOutput].ExternalColumns[phone_number]"
                              dataType="wstr"
                              length="80"
                              name="phone_number" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Search Notes.Outputs[JsonSourceOutput].ExternalColumns[fax_number]"
                              dataType="wstr"
                              length="1020"
                              name="fax_number" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Search Notes.Outputs[JsonSourceOutput].ExternalColumns[is_dnd]"
                              dataType="wstr"
                              length="80"
                              name="is_dnd" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Search Notes.Outputs[JsonSourceOutput].ExternalColumns[type]"
                              dataType="wstr"
                              length="28"
                              name="type" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Search Notes.Outputs[JsonSourceOutput].ExternalColumns[last_contacted_date]"
                              dataType="wstr"
                              length="80"
                              name="last_contacted_date" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Search Notes.Outputs[JsonSourceOutput].ExternalColumns[name_last]"
                              dataType="wstr"
                              length="1020"
                              name="name_last" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Search Notes.Outputs[JsonSourceOutput].ExternalColumns[address_postal]"
                              dataType="wstr"
                              length="220"
                              name="address_postal" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Search Notes.Outputs[JsonSourceOutput].ExternalColumns[address]"
                              dataType="wstr"
                              length="384"
                              name="address" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Search Notes.Outputs[JsonSourceOutput].ExternalColumns[interest_level]"
                              dataType="wstr"
                              length="1020"
                              name="interest_level" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Search Notes.Outputs[JsonSourceOutput].ExternalColumns[marketing_birthday]"
                              dataType="wstr"
                              length="1020"
                              name="marketing_birthday" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Search Notes.Outputs[JsonSourceOutput].ExternalColumns[marketing_enquiry_source]"
                              dataType="wstr"
                              length="1020"
                              name="marketing_enquiry_source" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Search Notes.Outputs[JsonSourceOutput].ExternalColumns[marketing_gender]"
                              dataType="wstr"
                              length="1020"
                              name="marketing_gender" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Search Notes.Outputs[JsonSourceOutput].ExternalColumns[marketing_postcode]"
                              dataType="wstr"
                              length="80"
                              name="marketing_postcode" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Search Notes.Outputs[JsonSourceOutput].ExternalColumns[name_legal]"
                              dataType="wstr"
                              length="1020"
                              name="name_legal" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Search Notes.Outputs[JsonSourceOutput].ExternalColumns[name_salutation]"
                              dataType="wstr"
                              length="1020"
                              name="name_salutation" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Search Notes.Outputs[JsonSourceOutput].ExternalColumns[name_addressee]"
                              dataType="wstr"
                              length="1020"
                              name="name_addressee" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Search Notes.Outputs[JsonSourceOutput].ExternalColumns[system_owner_user.id]"
                              dataType="wstr"
                              length="20"
                              name="system_owner_user.id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Search Notes.Outputs[JsonSourceOutput].ExternalColumns[system_owner_user._name]"
                              dataType="wstr"
                              length="36"
                              name="system_owner_user._name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Search Notes.Outputs[JsonSourceOutput].ExternalColumns[system_owner_user._first_name]"
                              dataType="wstr"
                              length="20"
                              name="system_owner_user._first_name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Search Notes.Outputs[JsonSourceOutput].ExternalColumns[system_owner_user._last_name]"
                              dataType="wstr"
                              length="12"
                              name="system_owner_user._last_name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Search Notes.Outputs[JsonSourceOutput].ExternalColumns[system_owner_user._email_address]"
                              dataType="wstr"
                              length="92"
                              name="system_owner_user._email_address" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Search Notes.Outputs[JsonSourceOutput].ExternalColumns[system_modified_user.id]"
                              dataType="wstr"
                              length="20"
                              name="system_modified_user.id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Search Notes.Outputs[JsonSourceOutput].ExternalColumns[system_modified_user._name]"
                              dataType="wstr"
                              length="48"
                              name="system_modified_user._name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Search Notes.Outputs[JsonSourceOutput].ExternalColumns[system_modified_user._first_name]"
                              dataType="wstr"
                              length="24"
                              name="system_modified_user._first_name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Search Notes.Outputs[JsonSourceOutput].ExternalColumns[system_modified_user._last_name]"
                              dataType="wstr"
                              length="24"
                              name="system_modified_user._last_name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Search Notes.Outputs[JsonSourceOutput].ExternalColumns[system_modified_user._email_address]"
                              dataType="wstr"
                              length="128"
                              name="system_modified_user._email_address" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Search Notes.Outputs[JsonSourceOutput].ExternalColumns[system_created_user.id]"
                              dataType="wstr"
                              length="20"
                              name="system_created_user.id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Search Notes.Outputs[JsonSourceOutput].ExternalColumns[system_created_user._name]"
                              dataType="wstr"
                              length="36"
                              name="system_created_user._name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Search Notes.Outputs[JsonSourceOutput].ExternalColumns[system_created_user._first_name]"
                              dataType="wstr"
                              length="20"
                              name="system_created_user._first_name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Search Notes.Outputs[JsonSourceOutput].ExternalColumns[system_created_user._last_name]"
                              dataType="wstr"
                              length="12"
                              name="system_created_user._last_name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Search Notes.Outputs[JsonSourceOutput].ExternalColumns[system_created_user._email_address]"
                              dataType="wstr"
                              length="92"
                              name="system_created_user._email_address" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Search Notes.Outputs[JsonSourceOutput].ExternalColumns[contact_image]"
                              dataType="wstr"
                              length="1020"
                              name="contact_image" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Search Notes.Outputs[JsonSourceOutput].ExternalColumns[marketing_enquiry_method]"
                              dataType="wstr"
                              length="1020"
                              name="marketing_enquiry_method" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Search Notes.Outputs[JsonSourceOutput].ExternalColumns[_security_user_rights]"
                              dataType="wstr"
                              length="260"
                              name="_security_user_rights" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Search Notes.Outputs[JsonSourceOutput].ExternalColumns[etag]"
                              dataType="wstr"
                              length="68"
                              name="etag" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Search Notes.Outputs[JsonSourceOutput].ExternalColumns[id]"
                              dataType="wstr"
                              length="24"
                              name="id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Search Notes.Outputs[JsonSourceOutput].ExternalColumns[__FileName]"
                              dataType="wstr"
                              length="600"
                              name="__FileName" />
                          </externalMetadataColumns>
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Search Notes.Outputs[JsonSource Error Output]"
                          isErrorOut="true"
                          name="JsonSource Error Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Search Notes.Outputs[JsonSource Error Output].Columns[etag]"
                              dataType="wstr"
                              length="68"
                              lineageId="Package\Iterate Offices\Sequence Container\Notes (stream)\Search Notes.Outputs[JsonSource Error Output].Columns[etag]"
                              name="etag" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Search Notes.Outputs[JsonSource Error Output].Columns[id]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Notes (stream)\Search Notes.Outputs[JsonSource Error Output].Columns[id]"
                              name="id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Search Notes.Outputs[JsonSource Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Notes (stream)\Search Notes.Outputs[JsonSource Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Search Notes.Outputs[JsonSource Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Notes (stream)\Search Notes.Outputs[JsonSource Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Search Notes.Outputs[JsonSource Error Output].Columns[ErrorColumnName]"
                              codePage="1252"
                              dataType="str"
                              length="128"
                              lineageId="Package\Iterate Offices\Sequence Container\Notes (stream)\Search Notes.Outputs[JsonSource Error Output].Columns[ErrorColumnName]"
                              name="ErrorColumnName" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Search Notes.Outputs[JsonSource Error Output].Columns[ErrorMessage]"
                              dataType="wstr"
                              length="1024"
                              lineageId="Package\Iterate Offices\Sequence Container\Notes (stream)\Search Notes.Outputs[JsonSource Error Output].Columns[ErrorMessage]"
                              name="ErrorMessage" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Notes (stream)\SQL Sort"
                      componentClassID="Microsoft.Sort"
                      contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
                      name="SQL Sort"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                          name="EliminateDuplicates">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the maximum number of threads to use for sorting."
                          expressionType="Notify"
                          name="MaximumThreads">-1</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Notes (stream)\SQL Sort.Inputs[Sort Input]"
                          name="Sort Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\SQL Sort.Inputs[Sort Input].Columns[Id]"
                              cachedDataType="i4"
                              cachedName="Id"
                              lineageId="Package\Iterate Offices\Sequence Container\Notes (stream)\Existing Notes from SQL.Outputs[OLE DB Source Output].Columns[Id]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">1</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\SQL Sort.Inputs[Sort Input].Columns[AccountId]"
                              cachedDataType="i2"
                              cachedName="AccountId"
                              lineageId="Package\Iterate Offices\Sequence Container\Notes (stream)\Existing Notes from SQL.Outputs[OLE DB Source Output].Columns[AccountId]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\SQL Sort.Inputs[Sort Input].Columns[etagnote]"
                              cachedDataType="wstr"
                              cachedLength="250"
                              cachedName="etagnote"
                              lineageId="Package\Iterate Offices\Sequence Container\Notes (stream)\Existing Notes from SQL.Outputs[OLE DB Source Output].Columns[etagnote]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Notes (stream)\SQL Sort.Outputs[Sort Output]"
                          isSorted="true"
                          name="Sort Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\SQL Sort.Outputs[Sort Output].Columns[Id]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Notes (stream)\SQL Sort.Outputs[Sort Output].Columns[Id]"
                              name="Id"
                              sortKeyPosition="1">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Iterate Offices\Sequence Container\Notes (stream)\Existing Notes from SQL.Outputs[OLE DB Source Output].Columns[Id]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\SQL Sort.Outputs[Sort Output].Columns[AccountId]"
                              dataType="i2"
                              lineageId="Package\Iterate Offices\Sequence Container\Notes (stream)\SQL Sort.Outputs[Sort Output].Columns[AccountId]"
                              name="AccountId">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Iterate Offices\Sequence Container\Notes (stream)\Existing Notes from SQL.Outputs[OLE DB Source Output].Columns[AccountId]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\SQL Sort.Outputs[Sort Output].Columns[etagnote]"
                              dataType="wstr"
                              length="250"
                              lineageId="Package\Iterate Offices\Sequence Container\Notes (stream)\SQL Sort.Outputs[Sort Output].Columns[etagnote]"
                              name="etagnote">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Iterate Offices\Sequence Container\Notes (stream)\Existing Notes from SQL.Outputs[OLE DB Source Output].Columns[etagnote]}</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Template Transform"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Template Transform; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="Template transform allows to produce multi line string from template text. You can insert placeholders anywhere in the string. Ideal use case would be produce simple XML or JSON without use of JSON or XML Generator Transform."
                      name="Template Transform"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.String"
                          description="Template text which needs to be replaced. Any where in the text you can use input column names as placeholders (e.g. &lt;%CustomerEmail%&gt; ). You can also use user/system variable as placeholder (e.g. {{User::MyVariable}} )"
                          expressionType="Notify"
                          name="TemplateText"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">
    {"method" : "Notes::read",
    "args" : {
        "id" : &lt;%id%&gt;
    }
}</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.TemplateTransform</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Template Transform.Inputs[TemplateTransformInput]"
                          name="TemplateTransformInput">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Template Transform.Inputs[TemplateTransformInput].Columns[id]"
                              cachedDataType="i4"
                              cachedName="id"
                              cachedSortKeyPosition="1"
                              lineageId="Package\Iterate Offices\Sequence Container\Notes (stream)\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[id]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Template Transform.Outputs[TemplateTransformOutput]"
                          errorOrTruncationOperation="Error"
                          name="TemplateTransformOutput"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Notes (stream)\Template Transform.Inputs[TemplateTransformInput]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Template Transform.Outputs[TemplateTransformOutput].Columns[TemplateOutput]"
                              dataType="nText"
                              description="Template output column which will contain replaced text."
                              lineageId="Package\Iterate Offices\Sequence Container\Notes (stream)\Template Transform.Outputs[TemplateTransformOutput].Columns[TemplateOutput]"
                              name="TemplateOutput" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Trash Destination"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Trash Destination; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="The trash destination is used to create dummy destination which ends data path without any processing."
                      name="Trash Destination"
                      version="2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.String"
                          description="File path where you want to save data"
                          expressionType="Notify"
                          name="FilePath"></property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates if you want to save input data to comma separated text file"
                          expressionType="Notify"
                          name="SaveDataToFile">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Append data to file"
                          expressionType="Notify"
                          name="Append">false</property>
                        <property
                          dataType="System.String"
                          description="RowSeparator"
                          expressionType="Notify"
                          name="RowSeparator">{NEWLINE}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether you want to overwrite target file if exists"
                          expressionType="Notify"
                          name="OverwriteFileIfExists">true</property>
                        <property
                          dataType="System.String"
                          description="ColumnSeparator"
                          expressionType="Notify"
                          name="ColumnSeparator">,</property>
                        <property
                          dataType="System.Boolean"
                          description="SupportUnicode"
                          expressionType="Notify"
                          name="SupportUnicode">true</property>
                        <property
                          dataType="System.Boolean"
                          description="ColumnNamesInFirstRow"
                          expressionType="Notify"
                          name="ColumnNamesInFirstRow">true</property>
                        <property
                          dataType="System.Boolean"
                          description="QuoteDataIfNeeded"
                          expressionType="Notify"
                          name="QuoteDataIfNeeded">true</property>
                        <property
                          dataType="System.String"
                          description="Date time format string for any column with DT_DBDATETIME, DT_DBDATETIME2 or DB_DATE format"
                          expressionType="Notify"
                          name="DateTimeFormat">yyyy-MM-dd HH:mm:ss</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.TrashDestination</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Trash Destination.Inputs[TrashDestinationInput]"
                          hasSideEffects="true"
                          name="TrashDestinationInput">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Trash Destination 1"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Trash Destination; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="The trash destination is used to create dummy destination which ends data path without any processing."
                      name="Trash Destination 1"
                      version="2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.String"
                          description="File path where you want to save data"
                          expressionType="Notify"
                          name="FilePath"></property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates if you want to save input data to comma separated text file"
                          expressionType="Notify"
                          name="SaveDataToFile">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Append data to file"
                          expressionType="Notify"
                          name="Append">false</property>
                        <property
                          dataType="System.String"
                          description="RowSeparator"
                          expressionType="Notify"
                          name="RowSeparator">{NEWLINE}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether you want to overwrite target file if exists"
                          expressionType="Notify"
                          name="OverwriteFileIfExists">true</property>
                        <property
                          dataType="System.String"
                          description="ColumnSeparator"
                          expressionType="Notify"
                          name="ColumnSeparator">,</property>
                        <property
                          dataType="System.Boolean"
                          description="SupportUnicode"
                          expressionType="Notify"
                          name="SupportUnicode">true</property>
                        <property
                          dataType="System.Boolean"
                          description="ColumnNamesInFirstRow"
                          expressionType="Notify"
                          name="ColumnNamesInFirstRow">true</property>
                        <property
                          dataType="System.Boolean"
                          description="QuoteDataIfNeeded"
                          expressionType="Notify"
                          name="QuoteDataIfNeeded">true</property>
                        <property
                          dataType="System.String"
                          description="Date time format string for any column with DT_DBDATETIME, DT_DBDATETIME2 or DB_DATE format"
                          expressionType="Notify"
                          name="DateTimeFormat">yyyy-MM-dd HH:mm:ss</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.TrashDestination</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Trash Destination 1.Inputs[TrashDestinationInput]"
                          hasSideEffects="true"
                          name="TrashDestinationInput">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Upsert Notes"
                      componentClassID="Microsoft.OLEDBCommand"
                      contactInfo="OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
                      description="Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time."
                      name="Upsert Notes"
                      usesDispositions="true"
                      version="2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">0</property>
                        <property
                          dataType="System.String"
                          description="The SQL command to be executed."
                          expressionType="Notify"
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">exec [UpsertNotes] ?,?,?</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Upsert Notes.Connections[OleDbConnection]"
                          connectionManagerID="Package.ConnectionManagers[colsqlbi01v.Entities]"
                          connectionManagerRefId="Package.ConnectionManagers[colsqlbi01v.Entities]"
                          description="The OLE DB runtime connection used to access the database."
                          name="OleDbConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Upsert Notes.Inputs[OLE DB Command Input]"
                          errorOrTruncationOperation="Command Execution"
                          errorRowDisposition="FailComponent"
                          hasSideEffects="true"
                          name="OLE DB Command Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Upsert Notes.Inputs[OLE DB Command Input].Columns[Origin]"
                              cachedDataType="i4"
                              cachedName="Origin"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Notes (stream)\Upsert Notes.Inputs[OLE DB Command Input].ExternalColumns[@Origin]"
                              lineageId="Package\Iterate Offices\Sequence Container\Notes (stream)\Add accountid and origin.Outputs[Derived Column Output].Columns[Origin]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Upsert Notes.Inputs[OLE DB Command Input].Columns[AccountId]"
                              cachedDataType="i4"
                              cachedName="AccountId"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Notes (stream)\Upsert Notes.Inputs[OLE DB Command Input].ExternalColumns[@accountid]"
                              lineageId="Package\Iterate Offices\Sequence Container\Notes (stream)\Add accountid and origin.Outputs[Derived Column Output].Columns[AccountId]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Upsert Notes.Inputs[OLE DB Command Input].Columns[__DOCUMENT__]"
                              cachedDataType="nText"
                              cachedName="__DOCUMENT__"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Notes (stream)\Upsert Notes.Inputs[OLE DB Command Input].ExternalColumns[@body]"
                              lineageId="Package\Iterate Offices\Sequence Container\Notes (stream)\record.Outputs[JsonParserTransformOutput].Columns[__DOCUMENT__]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Upsert Notes.Inputs[OLE DB Command Input].ExternalColumns[@Origin]"
                              dataType="i2"
                              name="@Origin">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                                  name="DBParamInfoFlags">81</property>
                              </properties>
                            </externalMetadataColumn>
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Upsert Notes.Inputs[OLE DB Command Input].ExternalColumns[@body]"
                              dataType="nText"
                              name="@body">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                                  name="DBParamInfoFlags">193</property>
                              </properties>
                            </externalMetadataColumn>
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Upsert Notes.Inputs[OLE DB Command Input].ExternalColumns[@accountid]"
                              dataType="i4"
                              name="@accountid">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                                  name="DBParamInfoFlags">81</property>
                              </properties>
                            </externalMetadataColumn>
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Upsert Notes.Outputs[OLE DB Command Output]"
                          exclusionGroup="1"
                          name="OLE DB Command Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Notes (stream)\Upsert Notes.Inputs[OLE DB Command Input]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Upsert Notes.Outputs[OLE DB Command Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="OLE DB Command Error Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Notes (stream)\Upsert Notes.Inputs[OLE DB Command Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Upsert Notes.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Notes (stream)\Upsert Notes.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Notes (stream)\Upsert Notes.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Notes (stream)\Upsert Notes.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                  </components>
                  <paths>
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Notes (stream).Paths[Derived Column Output]"
                      endId="Package\Iterate Offices\Sequence Container\Notes (stream)\Upsert Notes.Inputs[OLE DB Command Input]"
                      name="Derived Column Output"
                      startId="Package\Iterate Offices\Sequence Container\Notes (stream)\Add accountid and origin.Outputs[Derived Column Output]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Notes (stream).Paths[ignore]"
                      endId="Package\Iterate Offices\Sequence Container\Notes (stream)\Trash Destination.Inputs[TrashDestinationInput]"
                      name="ignore"
                      startId="Package\Iterate Offices\Sequence Container\Notes (stream)\Insert or Ignore.Outputs[ignore]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Notes (stream).Paths[JsonParserTransformOutput]"
                      endId="Package\Iterate Offices\Sequence Container\Notes (stream)\Add accountid and origin.Inputs[Derived Column Input]"
                      name="JsonParserTransformOutput"
                      startId="Package\Iterate Offices\Sequence Container\Notes (stream)\record.Outputs[JsonParserTransformOutput]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Notes (stream).Paths[JsonSourceOutput]"
                      endId="Package\Iterate Offices\Sequence Container\Notes (stream)\API Sort.Inputs[Sort Input]"
                      name="JsonSourceOutput"
                      startId="Package\Iterate Offices\Sequence Container\Notes (stream)\Search Notes.Outputs[JsonSourceOutput]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Notes (stream).Paths[Merge Join Output]"
                      endId="Package\Iterate Offices\Sequence Container\Notes (stream)\Insert or Ignore.Inputs[Conditional Split Input]"
                      name="Merge Join Output"
                      startId="Package\Iterate Offices\Sequence Container\Notes (stream)\Merge Join To Find Those to Insert.Outputs[Merge Join Output]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Notes (stream).Paths[OLE DB Source Output]"
                      endId="Package\Iterate Offices\Sequence Container\Notes (stream)\SQL Sort.Inputs[Sort Input]"
                      name="OLE DB Source Output"
                      startId="Package\Iterate Offices\Sequence Container\Notes (stream)\Existing Notes from SQL.Outputs[OLE DB Source Output]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Notes (stream).Paths[Response Output]"
                      endId="Package\Iterate Offices\Sequence Container\Notes (stream)\record.Inputs[JsonParserTransformInput]"
                      name="Response Output"
                      startId="Package\Iterate Offices\Sequence Container\Notes (stream)\Read details (throttled).Outputs[Response Output]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Notes (stream).Paths[Sort Output]"
                      endId="Package\Iterate Offices\Sequence Container\Notes (stream)\Merge Join To Find Those to Insert.Inputs[Merge Join Right Input]"
                      name="Sort Output"
                      startId="Package\Iterate Offices\Sequence Container\Notes (stream)\SQL Sort.Outputs[Sort Output]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Notes (stream).Paths[Sort Output1]"
                      endId="Package\Iterate Offices\Sequence Container\Notes (stream)\Merge Join To Find Those to Insert.Inputs[Merge Join Left Input]"
                      name="Sort Output"
                      startId="Package\Iterate Offices\Sequence Container\Notes (stream)\API Sort.Outputs[Sort Output]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Notes (stream).Paths[TemplateTransformOutput]"
                      endId="Package\Iterate Offices\Sequence Container\Notes (stream)\Read details (throttled).Inputs[WebApiDestinationInput]"
                      name="TemplateTransformOutput"
                      startId="Package\Iterate Offices\Sequence Container\Notes (stream)\Template Transform.Outputs[TemplateTransformOutput]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Notes (stream).Paths[upsert]"
                      endId="Package\Iterate Offices\Sequence Container\Notes (stream)\Template Transform.Inputs[TemplateTransformInput]"
                      name="upsert"
                      startId="Package\Iterate Offices\Sequence Container\Notes (stream)\Insert or Ignore.Outputs[upsert]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Notes (stream).Paths[WebApiDestination Error Output]"
                      endId="Package\Iterate Offices\Sequence Container\Notes (stream)\Trash Destination 1.Inputs[TrashDestinationInput]"
                      name="WebApiDestination Error Output"
                      startId="Package\Iterate Offices\Sequence Container\Notes (stream)\Read details (throttled).Outputs[WebApiDestination Error Output]" />
                  </paths>
                </pipeline>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Iterate Offices\Sequence Container\Offer Contract search"
              DTS:CreationName="Microsoft.Pipeline"
              DTS:Description="Data Flow Task"
              DTS:DTSID="{3AA605DF-B519-45CD-9A63-CA242D1B7964}"
              DTS:ExecutableType="Microsoft.Pipeline"
              DTS:LocaleID="-1"
              DTS:ObjectName="Offer Contract search"
              DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:ObjectData>
                <pipeline
                  version="1">
                  <components>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Add accountid and origin"
                      componentClassID="Microsoft.DerivedColumn"
                      contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                      name="Add accountid and origin"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Add accountid and origin.Inputs[Derived Column Input]"
                          description="Input to the Derived Column Transformation"
                          name="Derived Column Input">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Add accountid and origin.Outputs[Derived Column Output]"
                          description="Default Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          name="Derived Column Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Offer Contract search\Add accountid and origin.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Add accountid and origin.Outputs[Derived Column Output].Columns[AccountId]"
                              dataType="i4"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Iterate Offices\Sequence Container\Offer Contract search\Add accountid and origin.Outputs[Derived Column Output].Columns[AccountId]"
                              name="AccountId"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">@[User::RexAccountID]</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">@[User::RexAccountID]</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Add accountid and origin.Outputs[Derived Column Output].Columns[Origin]"
                              dataType="i4"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Iterate Offices\Sequence Container\Offer Contract search\Add accountid and origin.Outputs[Derived Column Output].Columns[Origin]"
                              name="Origin"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">2</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">2</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Add accountid and origin.Outputs[Derived Column Error Output]"
                          description="Error Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Derived Column Error Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Offer Contract search\Add accountid and origin.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Add accountid and origin.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Offer Contract search\Add accountid and origin.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Add accountid and origin.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Offer Contract search\Add accountid and origin.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Offer Contract search\API Sort"
                      componentClassID="Microsoft.Sort"
                      contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
                      name="API Sort"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                          name="EliminateDuplicates">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the maximum number of threads to use for sorting."
                          expressionType="Notify"
                          name="MaximumThreads">-1</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Offer Contract search\API Sort.Inputs[Sort Input]"
                          name="Sort Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Offer Contract search\API Sort.Inputs[Sort Input].Columns[etag]"
                              cachedDataType="wstr"
                              cachedLength="68"
                              cachedName="etag"
                              lineageId="Package\Iterate Offices\Sequence Container\Offer Contract search\Search Contracts.Outputs[JsonSourceOutput].Columns[etag]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Offer Contract search\API Sort.Inputs[Sort Input].Columns[id]"
                              cachedDataType="i4"
                              cachedName="id"
                              lineageId="Package\Iterate Offices\Sequence Container\Offer Contract search\Search Contracts.Outputs[JsonSourceOutput].Columns[id]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">1</property>
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Offer Contract search\API Sort.Outputs[Sort Output]"
                          isSorted="true"
                          name="Sort Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Offer Contract search\API Sort.Outputs[Sort Output].Columns[etag]"
                              dataType="wstr"
                              length="68"
                              lineageId="Package\Iterate Offices\Sequence Container\Offer Contract search\API Sort.Outputs[Sort Output].Columns[etag]"
                              name="etag">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Iterate Offices\Sequence Container\Offer Contract search\Search Contracts.Outputs[JsonSourceOutput].Columns[etag]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Offer Contract search\API Sort.Outputs[Sort Output].Columns[id]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Offer Contract search\API Sort.Outputs[Sort Output].Columns[id]"
                              name="id"
                              sortKeyPosition="1">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Iterate Offices\Sequence Container\Offer Contract search\Search Contracts.Outputs[JsonSourceOutput].Columns[id]}</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Existing Contracts from SQL"
                      componentClassID="Microsoft.OLEDBSource"
                      contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                      description="OLE DB Source"
                      name="Existing Contracts from SQL"
                      usesDispositions="true"
                      version="7">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">0</property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the database object used to open a rowset."
                          name="OpenRowset">[dbo].[vwContacts]</property>
                        <property
                          dataType="System.String"
                          description="Specifies the variable that contains the name of the database object used to open a rowset."
                          name="OpenRowsetVariable"></property>
                        <property
                          dataType="System.String"
                          description="The SQL command to be executed."
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">SELECT [Id], 
       [etag] as etag_offer, 
       [AccountId]
FROM [Entities].[dbo].[Offers] with (nolock)
WHERE [AccountId] = ?</property>
                        <property
                          dataType="System.String"
                          description="The variable that contains the SQL command to be executed."
                          name="SqlCommandVariable"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Boolean"
                          description="Forces the use of the DefaultCodePage property value when describing character data."
                          name="AlwaysUseDefaultCodePage">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the mode used to access the database."
                          name="AccessMode"
                          typeConverter="AccessMode">2</property>
                        <property
                          dataType="System.String"
                          description="The mappings between the parameters in the SQL command and variables."
                          name="ParameterMapping">"Parameter0:Input",{EE81ACF9-9058-4481-A346-732989159AA5};</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Existing Contracts from SQL.Connections[OleDbConnection]"
                          connectionManagerID="Package.ConnectionManagers[colsqlbi01v.Entities]"
                          connectionManagerRefId="Package.ConnectionManagers[colsqlbi01v.Entities]"
                          description="The OLE DB runtime connection used to access the database."
                          name="OleDbConnection" />
                      </connections>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Existing Contracts from SQL.Outputs[OLE DB Source Output]"
                          name="OLE DB Source Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Existing Contracts from SQL.Outputs[OLE DB Source Output].Columns[Id]"
                              dataType="i4"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Offer Contract search\Existing Contracts from SQL.Outputs[OLE DB Source Output].ExternalColumns[Id]"
                              lineageId="Package\Iterate Offices\Sequence Container\Offer Contract search\Existing Contracts from SQL.Outputs[OLE DB Source Output].Columns[Id]"
                              name="Id"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Existing Contracts from SQL.Outputs[OLE DB Source Output].Columns[AccountId]"
                              dataType="i2"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Offer Contract search\Existing Contracts from SQL.Outputs[OLE DB Source Output].ExternalColumns[AccountId]"
                              lineageId="Package\Iterate Offices\Sequence Container\Offer Contract search\Existing Contracts from SQL.Outputs[OLE DB Source Output].Columns[AccountId]"
                              name="AccountId"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Existing Contracts from SQL.Outputs[OLE DB Source Output].Columns[etag_offer]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Offer Contract search\Existing Contracts from SQL.Outputs[OLE DB Source Output].ExternalColumns[etag_offer]"
                              length="250"
                              lineageId="Package\Iterate Offices\Sequence Container\Offer Contract search\Existing Contracts from SQL.Outputs[OLE DB Source Output].Columns[etag_offer]"
                              name="etag_offer"
                              truncationRowDisposition="FailComponent" />
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Existing Contracts from SQL.Outputs[OLE DB Source Output].ExternalColumns[Id]"
                              dataType="i4"
                              name="Id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Existing Contracts from SQL.Outputs[OLE DB Source Output].ExternalColumns[AccountId]"
                              codePage="1252"
                              dataType="str"
                              length="4"
                              name="AccountId" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Existing Contracts from SQL.Outputs[OLE DB Source Output].ExternalColumns[etag_offer]"
                              dataType="wstr"
                              length="250"
                              name="etag_offer" />
                          </externalMetadataColumns>
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Existing Contracts from SQL.Outputs[OLE DB Source Error Output]"
                          isErrorOut="true"
                          name="OLE DB Source Error Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Existing Contracts from SQL.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Offer Contract search\Existing Contracts from SQL.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Existing Contracts from SQL.Outputs[OLE DB Source Error Output].Columns[etag_offer]"
                              dataType="wstr"
                              length="250"
                              lineageId="Package\Iterate Offices\Sequence Container\Offer Contract search\Existing Contracts from SQL.Outputs[OLE DB Source Error Output].Columns[etag_offer]"
                              name="etag_offer" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Existing Contracts from SQL.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Offer Contract search\Existing Contracts from SQL.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Existing Contracts from SQL.Outputs[OLE DB Source Error Output].Columns[Id]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Offer Contract search\Existing Contracts from SQL.Outputs[OLE DB Source Error Output].Columns[Id]"
                              name="Id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Existing Contracts from SQL.Outputs[OLE DB Source Error Output].Columns[AccountId]"
                              codePage="1252"
                              dataType="str"
                              length="4"
                              lineageId="Package\Iterate Offices\Sequence Container\Offer Contract search\Existing Contracts from SQL.Outputs[OLE DB Source Error Output].Columns[AccountId]"
                              name="AccountId" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Insert or Ignore"
                      componentClassID="Microsoft.ConditionalSplit"
                      contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
                      name="Insert or Ignore"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Insert or Ignore.Inputs[Conditional Split Input]"
                          description="Input to the Conditional Split Transformation"
                          name="Conditional Split Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Insert or Ignore.Inputs[Conditional Split Input].Columns[etag]"
                              cachedDataType="wstr"
                              cachedLength="68"
                              cachedName="etag"
                              lineageId="Package\Iterate Offices\Sequence Container\Offer Contract search\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etag]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Insert or Ignore.Inputs[Conditional Split Input].Columns[etag_offer]"
                              cachedDataType="wstr"
                              cachedLength="250"
                              cachedName="etag_offer"
                              lineageId="Package\Iterate Offices\Sequence Container\Offer Contract search\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etag_offer]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Insert or Ignore.Outputs[upsert]"
                          description="Output 1 of the Conditional Split Transformation"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          exclusionGroup="1"
                          name="upsert"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Offer Contract search\Insert or Ignore.Inputs[Conditional Split Input]"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                              name="Expression">[ISNULL](#{Package\Iterate Offices\Sequence Container\Offer Contract search\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etag_offer]}) || #{Package\Iterate Offices\Sequence Container\Offer Contract search\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etag_offer]} != #{Package\Iterate Offices\Sequence Container\Offer Contract search\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etag]}</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the friendly version of the expression. This expression version uses column names."
                              expressionType="Notify"
                              name="FriendlyExpression">ISNULL(etag_offer) || etag_offer != etag</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                              name="EvaluationOrder">0</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Insert or Ignore.Outputs[ignore]"
                          description="Output 2 of the Conditional Split Transformation"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          exclusionGroup="1"
                          name="ignore"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Offer Contract search\Insert or Ignore.Inputs[Conditional Split Input]"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                              name="Expression">![ISNULL](#{Package\Iterate Offices\Sequence Container\Offer Contract search\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etag_offer]})</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the friendly version of the expression. This expression version uses column names."
                              expressionType="Notify"
                              name="FriendlyExpression">!ISNULL(etag_offer)</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                              name="EvaluationOrder">1</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Insert or Ignore.Outputs[Conditional Split Default Output]"
                          description="Default Output of the Conditional Split Transformation"
                          exclusionGroup="1"
                          name="Conditional Split Default Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Offer Contract search\Insert or Ignore.Inputs[Conditional Split Input]">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              name="IsDefaultOut">true</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Insert or Ignore.Outputs[Conditional Split Error Output]"
                          description="Error Output of the Conditional Split Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Conditional Split Error Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Offer Contract search\Insert or Ignore.Inputs[Conditional Split Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Insert or Ignore.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Offer Contract search\Insert or Ignore.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Insert or Ignore.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Offer Contract search\Insert or Ignore.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Offer Contract search\JSON Generator Transform"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="JSON Generator Transform; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="The JSON generator transform can be used to create JSON document from single or multiple inputs. You can create simple or nested JSON document."
                      name="JSON Generator Transform"
                      version="5">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.Int32"
                          description="Determines JSON format and output mode (e.g. one JSON for all input rows or one JSON for each input row)"
                          expressionType="Notify"
                          name="OutputMode"
                          typeConverter="ZappySys.PowerPack.Transform.JsonGeneratorTransform.JsonOutputMode">2</property>
                        <property
                          dataType="System.String"
                          description="Defines shape of output JSON string"
                          expressionType="Notify"
                          name="LayoutInfo">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;settings ver="3"&gt;
  &lt;dataset id="ds_id729" main="True" inputid="729" readfrominput="True"&gt;&lt;/dataset&gt;
  &lt;map name="method" value="CustomFields::readFieldValuesAndRecord" datatype="String" /&gt;
  &lt;map name="args"&gt;
    &lt;map name="service_name" value="Contracts" datatype="String" /&gt;
    &lt;map src="id" name="service_object_id" datatype="String" /&gt;
    &lt;map name="return_custom_fields_keyed_by" value="field_name" /&gt;
  &lt;/map&gt;
  &lt;map name="strip_response_prefixes" value="true" datatype="Bool" /&gt;
  &lt;map name="token" value="{{User::RexToken}}" /&gt;
&lt;/settings&gt;</property>
                        <property
                          dataType="System.Boolean"
                          description="Do not output attribute if value is NULL. By default null attribute is output as &quot;MyColname&quot; : null "
                          expressionType="Notify"
                          name="DoNotOutputNullAttribute">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indent JSON Text generated by this transform (Pretty Print)"
                          expressionType="Notify"
                          name="IndentOutput">false</property>
                        <property
                          dataType="System.String"
                          description="Default output format for datetime columns"
                          expressionType="Notify"
                          name="DateTimeFormat">yyyy-MM-dd HH:mm:ss</property>
                        <property
                          dataType="System.String"
                          description="Culture setting for this task. This option is useful to control output format for certain data types (e.g. number, decimal) based on regional settings. In USA dot is used for decimal indicator but in Germany it may be comma. Leave this blank if you want to use system default settings."
                          expressionType="Notify"
                          name="Culture"></property>
                        <property
                          dataType="System.Boolean"
                          description="Document Header/Footer text come from upstream column rather than direct string"
                          expressionType="Notify"
                          name="UseColumnForHeaderFooter">false</property>
                        <property
                          dataType="System.String"
                          description="Header text for document (Added before each document in the output)"
                          expressionType="Notify"
                          name="DocumentHeader"></property>
                        <property
                          dataType="System.String"
                          description="Footer text for document (Added after each document in the output)"
                          expressionType="Notify"
                          name="DocumentFooter"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies how many rows to include in each batch (Array records for single dataset array mode). 0=Include all in one batch. This setting is only valid for Mode=[Single Dataset Array]"
                          expressionType="Notify"
                          name="ArrayBatchSize">0</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.JsonGeneratorTransform</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to True if you dont want to output empty nodes of sub document (e.g nested property). This option is only applicable if you enabled DoNotOutputNullProperty. If all child peoprties are NULL for parent node then by default output contains empty nodes (e.g. CountryInfo: { CityInfo: { } } for Json --OR-- &lt;CountryInfo&gt;&lt;CityInfo /&gt;&lt;/CountryInfo&gt; for Xml). You can enable this option to avoid such empty nodes from the output."
                          expressionType="Notify"
                          name="DoNotOutputEmptyNestedAttribute">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to True if you dont want to output empty array nodes when no record found for that array (e.g. &quot;Orders&quot;: [ ] for JSON --OR-- &lt;Orders&gt;&lt;/Orders&gt; for Xml). You can enable this option to avoid such empty nodes from the output."
                          expressionType="Notify"
                          name="DoNotOutputEmptyArrayAttribute">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies encoding for data. If you set CharacterSet property then Encoing is ignored."
                          expressionType="Notify"
                          name="Encoding"
                          typeConverter="ZappySys.Common.EncodingType">2</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Offer Contract search\JSON Generator Transform.Inputs[JsonInput1]"
                          name="JsonInput1">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Id for attached dataset with input. Use JSON Layout Editor to see attached dataset"
                              expressionType="Notify"
                              name="DatasetInputId">729</property>
                          </properties>
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Offer Contract search\JSON Generator Transform.Inputs[JsonInput1].Columns[etag]"
                              cachedDataType="wstr"
                              cachedLength="68"
                              cachedName="etag"
                              lineageId="Package\Iterate Offices\Sequence Container\Offer Contract search\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etag]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Offer Contract search\JSON Generator Transform.Inputs[JsonInput1].Columns[id]"
                              cachedDataType="i4"
                              cachedName="id"
                              cachedSortKeyPosition="1"
                              lineageId="Package\Iterate Offices\Sequence Container\Offer Contract search\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[id]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Offer Contract search\JSON Generator Transform.Inputs[JsonInput1].Columns[etag_offer]"
                              cachedDataType="wstr"
                              cachedLength="250"
                              cachedName="etag_offer"
                              lineageId="Package\Iterate Offices\Sequence Container\Offer Contract search\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etag_offer]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Offer Contract search\JSON Generator Transform.Inputs[JsonInput2]"
                          name="JsonInput2">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Offer Contract search\JSON Generator Transform.Outputs[JsonGeneratorTransformOutput]"
                          errorOrTruncationOperation="Error"
                          name="JsonGeneratorTransformOutput">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Offer Contract search\JSON Generator Transform.Outputs[JsonGeneratorTransformOutput].Columns[ZS_JSON_OUT]"
                              dataType="nText"
                              description="This output column contains generated JSON string from JSON generator Transform"
                              lineageId="Package\Iterate Offices\Sequence Container\Offer Contract search\JSON Generator Transform.Outputs[JsonGeneratorTransformOutput].Columns[ZS_JSON_OUT]"
                              name="ZS_JSON_OUT" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Merge Join To Find Those to Insert"
                      componentClassID="Microsoft.MergeJoin"
                      contactInfo="Merge Join;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Combine two sorted data flows into one using the FULL, LEFT, or INNER join. We recommend this transformation when data flows can be sorted at their sources."
                      name="Merge Join To Find Those to Insert"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of join to perform."
                          name="JoinType"
                          typeConverter="JoinType">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the number of columns in the ordering key."
                          name="NumKeyColumns">1</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the null values are treated as equal values."
                          name="TreatNullsAsEqual">true</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates the requested maximum buffers per input before blocking."
                          name="MaxBuffersPerInput">5</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Merge Join To Find Those to Insert.Inputs[Merge Join Left Input]"
                          hasSideEffects="true"
                          name="Merge Join Left Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Merge Join To Find Those to Insert.Inputs[Merge Join Left Input].Columns[etag]"
                              cachedDataType="wstr"
                              cachedLength="68"
                              cachedName="etag"
                              lineageId="Package\Iterate Offices\Sequence Container\Offer Contract search\API Sort.Outputs[Sort Output].Columns[etag]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Merge Join To Find Those to Insert.Inputs[Merge Join Left Input].Columns[id]"
                              cachedDataType="i4"
                              cachedName="id"
                              cachedSortKeyPosition="1"
                              lineageId="Package\Iterate Offices\Sequence Container\Offer Contract search\API Sort.Outputs[Sort Output].Columns[id]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Merge Join To Find Those to Insert.Inputs[Merge Join Right Input]"
                          hasSideEffects="true"
                          name="Merge Join Right Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Merge Join To Find Those to Insert.Inputs[Merge Join Right Input].Columns[Id]"
                              cachedDataType="i4"
                              cachedName="Id"
                              cachedSortKeyPosition="1"
                              lineageId="Package\Iterate Offices\Sequence Container\Offer Contract search\SQL Sort.Outputs[Sort Output].Columns[Id]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Merge Join To Find Those to Insert.Inputs[Merge Join Right Input].Columns[etag_offer]"
                              cachedDataType="wstr"
                              cachedLength="250"
                              cachedName="etag_offer"
                              lineageId="Package\Iterate Offices\Sequence Container\Offer Contract search\SQL Sort.Outputs[Sort Output].Columns[etag_offer]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Merge Join To Find Those to Insert.Outputs[Merge Join Output]"
                          isSorted="true"
                          name="Merge Join Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etag]"
                              dataType="wstr"
                              length="68"
                              lineageId="Package\Iterate Offices\Sequence Container\Offer Contract search\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etag]"
                              name="etag">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Iterate Offices\Sequence Container\Offer Contract search\Merge Join To Find Those to Insert.Inputs[Merge Join Left Input].Columns[etag]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[id]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Offer Contract search\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[id]"
                              name="id"
                              sortKeyPosition="1">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Iterate Offices\Sequence Container\Offer Contract search\Merge Join To Find Those to Insert.Inputs[Merge Join Left Input].Columns[id]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etag_offer]"
                              dataType="wstr"
                              length="250"
                              lineageId="Package\Iterate Offices\Sequence Container\Offer Contract search\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etag_offer]"
                              name="etag_offer">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Iterate Offices\Sequence Container\Offer Contract search\Merge Join To Find Those to Insert.Inputs[Merge Join Right Input].Columns[etag_offer]}</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Rip out of the result"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="JSON Parser Transform; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="Parse incoming JSON String into columns. You can also parse and transform single JSON record into multiple rows by filtering data based on JSON Path (e.g. $.Customer.Orders[*])"
                      name="Rip out of the result"
                      usesDispositions="true"
                      version="2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">3</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for any numeric data types"
                          expressionType="Notify"
                          name="TreatBlankNumberAsNull">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for bool data types"
                          expressionType="Notify"
                          name="TreatBlankBoolAsNull">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for any date/time data types"
                          expressionType="Notify"
                          name="TreatBlankDateAsNull">true</property>
                        <property
                          dataType="System.String"
                          description="Sample JSON data used to parse output columns."
                          expressionType="Notify"
                          name="SampleData"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">{"result":{"record":{"system_ctime":1544993848,"system_modtime":1564742767,"system_verified_unconditional_date":null,"system_verified_settlement_date":null,"system_verified_fallen_date":null,"detail_sale_price_or_lease_pa":350000,"detail_deposit_init_or_bond":null,"detail_deposit_full_or_prepayment":null,"detail_finance_amount":null,"detail_finance_lender":null,"date_expec_deposit":null,"date_expec_finance":null,"date_expec_unconditional":"2019-01-03","date_expec_settlement":"2019-01-10","date_expec_possession":null,"date_actual_offer":"2018-10-30","time_actual_offer":"00:00:00","date_actual_communicated":"2018-10-02","time_actual_communicated":"00:00:00","date_actual_accepted":"2018-10-30","date_actual_deposit":null,"date_actual_finance":null,"date_actual_unconditional":"2019-01-03","date_actual_settlement":"2019-01-10","date_actual_possession":null,"date_actual_fallen":null,"purchtenant_legal_name":"Mr Piotr Jozefowicz","purchtenant_residence":"62 Calverleigh Crescent Furzton Milton Keynes Buckinghamshire MK4 1HU","notes":"1st Offer \u00a3335000 Against HRT017913190 61 Chipping Vale, Emerson Valley, MK4 2HT, 2nd Offer \u00a3350000 Against HRT017913190 61 Chipping Vale, Emerson Valley, MK4 2HT, 3rd Offer \u00a3340000 Against HRT017913190 61 Chipping Vale, Emerson Valley, MK4 2H","chattels":null,"is_backup_offer":null,"is_primary_backup_offer":null,"marketing_rebate":null,"marketing_contact_age":null,"marketing_postcode":null,"disclosable_interest_exists":null,"disclosable_interest_note":null,"etag":"375-1564742767","id":375,"system_owner_user":{"id":"19529","name":"Kelita Bailey","first_name":"Kelita","last_name":"Bailey","email_address":"kelita.bailey@haart.co.uk"},"system_modified_user":{"id":"19528","name":"Zofia Jasinska","first_name":"Zofia","last_name":"Jasinska","email_address":"zofia.jasinska@haart.co.uk"},"system_created_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"agent":{"id":"19529","name":"Kelita Bailey","first_name":"Kelita","last_name":"Bailey","email_address":"kelita.bailey@haart.co.uk"},"listing":{"id":468,"listing_agent_1":{"id":"19527","name":"Nick Siequien","first_name":"Nick","last_name":"Siequien","email_address":"nick.siequien@haart.co.uk","phone_direct":null,"phone_mobile":"447418346975","position":"Senior Property Marketing Consultant","is_account_user":"1","profile_image":null},"listing_agent_2":null,"listing_category":{"id":"residential_sale","text":"Residential Sale"},"listing_primary_image":{"uri":"rexlive:\/\/1753\/listings\/468\/images\/HRT017913190_01_723bec1b-c398-48d1-a98a-3bbdf88109b6_20181217062132.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1753\/listings\/468\/images\/HRT017913190_01_723bec1b-c398-48d1-a98a-3bbdf88109b6_20181217062132.jpg","thumbs":{"800x600":{"uri":"rexlive:\/\/1753\/listings\/468\/images\/HRT017913190_01_723bec1b-c398-48d1-a98a-3bbdf88109b6_20181217062132_800x600.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1753\/listings\/468\/images\/HRT017913190_01_723bec1b-c398-48d1-a98a-3bbdf88109b6_20181217062132_800x600.jpg"},"400x300":{"uri":"rexlive:\/\/1753\/listings\/468\/images\/HRT017913190_01_723bec1b-c398-48d1-a98a-3bbdf88109b6_20181217062132_400x300.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1753\/listings\/468\/images\/HRT017913190_01_723bec1b-c398-48d1-a98a-3bbdf88109b6_20181217062132_400x300.jpg"},"200x150":{"uri":"rexlive:\/\/1753\/listings\/468\/images\/HRT017913190_01_723bec1b-c398-48d1-a98a-3bbdf88109b6_20181217062132_200x150.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1753\/listings\/468\/images\/HRT017913190_01_723bec1b-c398-48d1-a98a-3bbdf88109b6_20181217062132_200x150.jpg"},"80x60":{"uri":"rexlive:\/\/1753\/listings\/468\/images\/HRT017913190_01_723bec1b-c398-48d1-a98a-3bbdf88109b6_20181217062132_80x60.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1753\/listings\/468\/images\/HRT017913190_01_723bec1b-c398-48d1-a98a-3bbdf88109b6_20181217062132_80x60.jpg"}}},"location":{"id":"13","text":"haart of Milton Keynes"},"project_stage":null,"property":{"system_search_key":"61 Chipping Vale, Milton Keynes, Milton Keynes MK4 2HT","adr_unit_number":null,"adr_street_number":"61","adr_street_name":"Chipping Vale","adr_state_or_region":"Milton Keynes","adr_suburb_or_town":"Milton Keynes","adr_postcode":"MK4 2HT","adr_country":"uk","id":"300223"}},"purchtenant_solicitor":{"name":"DC Law Solicitors","email_address":"spicerhaart@dclaw.co.uk","phone_number":"01704 868244","fax_number":null,"address_postal":null,"address":"Southport Business Park, Wight Moss Way, Southport,Merseyside,PR8 4HQ","id":"14774"},"purchtenant_solicitor_contact":null,"system_verified_unconditional_by_user":null,"system_verified_settlement_by_user":null,"system_verified_fallen_by_user":null,"commission_worksheet":null,"marketing_enquiry_method":null,"marketing_enquiry_source":null,"fallen_reason":null,"purchtenant_position":{"id":"26592","text":"First time buyer"},"detail_finance_lender_contact":null,"primary_chain_instance":null,"stability_indicator":{"id":"26707","text":"In Pipeline"},"contract_status":"completed","is_accepted":true,"is_primary_accepted":true,"related":{"listing_contract_conditions":[{"condition_type":null,"condition_notes":"N\/A","condition_date_of":null,"condition_date_completed":null,"id":125}],"listing_contract_purchtenants":[{"id":373,"purchtenant":{"name":"Piotr Jozefowicz","email_address":"piotr.jozefowicz@hotmail.com","phone_number":"07800000","fax_number":null,"address_postal":null,"address":"62 Calverleigh Crescent\r\nFurzton\r\nMilton Keynes\r\nBuckinghamshire\r\nMK4 1HU","id":"17996"}}]},"security_user_rights":["read","update","purge"]},"custom_fields":{"Other.Declaration Of Interest.Is there a disclosable interest regarding the applicant?":"No","Other.Declaration Of Interest.Has the seller been informed prior to submitting offer?":"No","Other.Declaration Of Interest.Is there a disclosable interest regarding the seller?":"No","Other.Declaration Of Interest.Has the applicant been informed?":"No","Other.Declaration Of Interest.Refer to Senior Manager?":"No","Other.Outcome.Outcome (For EA)":"Proceedable"}},"error":null}
</property>
                        <property
                          dataType="System.Boolean"
                          description="Include all upstream parent columns into output except the one you selected to parse. By default only parsed columns from Input document is included in the output. If you wish to include all other upstream columns in the output too then check this option."
                          expressionType="Notify"
                          name="OutputAllUpstreamColumns">false</property>
                        <property
                          dataType="System.Int32"
                          description="Defines how to handle empty input. By default NULL or Empty input is skipped from parsing."
                          expressionType="Notify"
                          name="EmptyInputProcessingMode"
                          typeConverter="ZappySys.Common.Data.EmptyInputProcessingMode">0</property>
                        <property
                          dataType="System.String"
                          description="Defines how to handle empty input. By default NULL or Empty input is skipped from parsing."
                          expressionType="Notify"
                          name="TreatEmptyInputAs">{ }</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum JSON records to fetch. Set this value to 0 for all records"
                          expressionType="Notify"
                          name="MaxRows">0</property>
                        <property
                          dataType="System.String"
                          description="Enter expression here to filter data.(Example:  $.Users[*].UserName ) This will fetch User names from users records"
                          expressionType="Notify"
                          name="Filter"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">$.result.record</property>
                        <property
                          dataType="System.Boolean"
                          description="Use this option to include parent properties (Non array) in the output along with Filtered Rows"
                          expressionType="Notify"
                          name="IncludeParentColumns">false</property>
                        <property
                          dataType="System.Boolean"
                          description="By default child and parent information is not included in the output if children not found for specified expression. For example if you want to extract all orders from all customers nodes then you can type $.Customers[*].Orders[*]. This will fetch all orders from all customers. By default customers records without orders wont be included in the output. If you want to include those customers where orders not found then check this option (Output null information for order attributes). This behavior is similar to LEFT OUTER JOIN in SQL (Left side is parent, right side is child). This option is ***resource intensive*** so only check if you really care about this behavior."
                          expressionType="Notify"
                          name="IncludeParentColumnsWhenChildMissing">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to true if you want to output parent columns which are array. By default any parent column which is an array is not included in output. See also FilterForParentColumnsWithArrayType property if you set this property"
                          expressionType="Notify"
                          name="IncludeParentColumnsWithArrayType">false</property>
                        <property
                          dataType="System.String"
                          description="Filter expression to extract value form parent"
                          expressionType="Notify"
                          name="FilterForParentColumnsWithArrayType"></property>
                        <property
                          dataType="System.String"
                          description="Prefix for parent column name. This option is only valid if you have set IncludeParentColumns=True"
                          expressionType="Notify"
                          name="ParentColumnPrefix">P_</property>
                        <property
                          dataType="System.Boolean"
                          description="Throw error if property name specified in filter expression is missing. By default it will ignore any missing property errors."
                          expressionType="Notify"
                          name="ThrowErrorIfPropertyMissing">false</property>
                        <property
                          dataType="System.Int32"
                          description="This property how many nested levels should be scanned to fetch various properties. 0=Scan all child levels."
                          expressionType="Notify"
                          name="MaxLevelsToScan">0</property>
                        <property
                          dataType="System.String"
                          description="List comma separated property names from JSON document which you want to exclude from output. Specify parent property name to exclude all child nodes."
                          expressionType="Notify"
                          name="ExcludedProperties"></property>
                        <property
                          dataType="System.String"
                          description="Property level separator used in generated property name (separator for outer properties - Above selected filter node). Use this if default separator is producing duplicate property name which is conflicting with existing name."
                          expressionType="Notify"
                          name="LevelSeparator">_</property>
                        <property
                          dataType="System.Boolean"
                          description="Enables deep array flattening for selected filtered hierarchy. When you turn on this property it will flatten each property of each array item and expose as column (e.g. If you have Filter set as $.customers[*] and for each customer you have an array of Addresses then you may see output columns like Addresses.1.City, Addresses.1.State, Addresses.2.City, Addresses.2.State .... Addresses.N.City, Addresses.N.State). You can control how many array items you want to flatten by setting MaxArrayItemsToFlatten property."
                          expressionType="Notify"
                          name="EnableArrayFlattening">false</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum number of array items to flatten. inner array flattening. Adjust this property to control how many columns being generated. This option is ignored if you set EnableArrayFlattening=false"
                          expressionType="Notify"
                          name="MaxArrayItemsToFlatten">10</property>
                        <property
                          dataType="System.String"
                          description="Specifies how custom date formatted strings are parsed when reading JSON."
                          expressionType="Notify"
                          name="DateFormatString"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies how date formatted strings, e.g. Date(1198908717056) and 2012-03-21T05:40Z, are parsed when reading JSON."
                          expressionType="Notify"
                          name="DateParseHandling"
                          typeConverter="ZappySys.Common.DateParseHandling">1</property>
                        <property
                          dataType="System.Boolean"
                          description="Output as raw JSON document rather than parsing individual fields. This option is helpful if you have documents stored in a file and you want to pass them downstream as raw JSON string rather than parsing into columns."
                          expressionType="Notify"
                          name="OutputRawDocument">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Indent JSON output so its easy to read."
                          expressionType="Notify"
                          name="IndentOutput">false</property>
                        <property
                          dataType="System.Boolean"
                          description="When this property is true then Column is converted to Row. Pivoted names will appear under  Pivot_Name column and values will appear under Pivot_Value field."
                          expressionType="Notify"
                          name="EnablePivot">false</property>
                        <property
                          dataType="System.Int32"
                          description="Array Transformation you want to apply. Useful for case when you have 2-Dimensional arrays with rows/columns in separate arrays."
                          expressionType="Notify"
                          name="ArrayTransformationType"
                          typeConverter="ZappySys.Json.ArrayTransformType">0</property>
                        <property
                          dataType="System.String"
                          description="Filter expression to use to extract column names for array transformation."
                          expressionType="Notify"
                          name="ArrayTransColumnNameFilter"></property>
                        <property
                          dataType="System.String"
                          description="Filter expression for row values (Not applicable for simple array transformation)."
                          expressionType="Notify"
                          name="ArrayTransRowValueFilter"></property>
                        <property
                          dataType="System.Boolean"
                          description="When you have 2D array but don't have column list specified in a separate array then use this option (e.g. { arr: [[10,11],[21,22]] } )."
                          expressionType="Notify"
                          name="ArrayTransEnableCustomColumns">false</property>
                        <property
                          dataType="System.String"
                          description="When you have 2D array but don't have column list specified in a separate array then use specify column names here. Use comma separated list (e.g col1,col2,col3 ). Column name Order must match value order."
                          expressionType="Notify"
                          name="ArrayTransCustomColumns"></property>
                        <property
                          dataType="System.Int32"
                          description="Metadata scan mode controls how data type and length is determined. By default few records scanned to determine datatype/length. Changing ScanMode affects length/datatype accuracy."
                          expressionType="Notify"
                          name="MetaDataScanMode"
                          typeConverter="ZappySys.Common.Data.MetaDataScanMode">4</property>
                        <property
                          dataType="System.Int32"
                          description="Length for all string column. This option is only valid for MetaDataScanMode=Custom"
                          expressionType="Notify"
                          name="MetaDataCustomLength">1000</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.JsonParserTransform</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Rip out of the result.Inputs[JsonParserTransformInput]"
                          errorRowDisposition="FailComponent"
                          name="JsonParserTransformInput"
                          truncationRowDisposition="FailComponent">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Rip out of the result.Inputs[JsonParserTransformInput].Columns[ResponseText]"
                              cachedDataType="nText"
                              cachedName="ResponseText"
                              lineageId="Package\Iterate Offices\Sequence Container\Offer Contract search\Web API Destination.Outputs[Response Output].Columns[ResponseText]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True" />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Rip out of the result.Outputs[JsonParserTransformOutput]"
                          errorOrTruncationOperation="Error"
                          errorRowDisposition="FailComponent"
                          name="JsonParserTransformOutput"
                          truncationRowDisposition="FailComponent">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Rip out of the result.Outputs[JsonParserTransformOutput].Columns[__DOCUMENT__]"
                              dataType="nText"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Offer Contract search\Rip out of the result.Outputs[JsonParserTransformOutput].ExternalColumns[__DOCUMENT__]"
                              lineageId="Package\Iterate Offices\Sequence Container\Offer Contract search\Rip out of the result.Outputs[JsonParserTransformOutput].Columns[__DOCUMENT__]"
                              name="__DOCUMENT__" />
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Rip out of the result.Outputs[JsonParserTransformOutput].ExternalColumns[__DOCUMENT__]"
                              dataType="nText"
                              name="__DOCUMENT__" />
                          </externalMetadataColumns>
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Rip out of the result.Outputs[JsonParserTransform Error Output]"
                          isErrorOut="true"
                          name="JsonParserTransform Error Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Rip out of the result.Outputs[JsonParserTransform Error Output].Columns[__DOCUMENT__]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\Offer Contract search\Rip out of the result.Outputs[JsonParserTransform Error Output].Columns[__DOCUMENT__]"
                              name="__DOCUMENT__" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Rip out of the result.Outputs[JsonParserTransform Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Offer Contract search\Rip out of the result.Outputs[JsonParserTransform Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Rip out of the result.Outputs[JsonParserTransform Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Offer Contract search\Rip out of the result.Outputs[JsonParserTransform Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Rip out of the result.Outputs[JsonParserTransform Error Output].Columns[ErrorColumnName]"
                              codePage="1252"
                              dataType="str"
                              length="128"
                              lineageId="Package\Iterate Offices\Sequence Container\Offer Contract search\Rip out of the result.Outputs[JsonParserTransform Error Output].Columns[ErrorColumnName]"
                              name="ErrorColumnName" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Rip out of the result.Outputs[JsonParserTransform Error Output].Columns[ErrorMessage]"
                              dataType="wstr"
                              length="1024"
                              lineageId="Package\Iterate Offices\Sequence Container\Offer Contract search\Rip out of the result.Outputs[JsonParserTransform Error Output].Columns[ErrorMessage]"
                              name="ErrorMessage" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Rip out of the result.Outputs[JsonParserTransform Error Output].Columns[ErrorRawData]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\Offer Contract search\Rip out of the result.Outputs[JsonParserTransform Error Output].Columns[ErrorRawData]"
                              name="ErrorRawData" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Search Contracts"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="JSON Source (REST API or File); ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="The JSON source is used to read data from JSON files, RESTful Web Service or direct JSON String."
                      name="Search Contracts"
                      usesDispositions="true"
                      version="33">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for any numeric data types"
                          expressionType="Notify"
                          name="TreatBlankNumberAsNull">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for bool data types"
                          expressionType="Notify"
                          name="TreatBlankBoolAsNull">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for any date/time data types"
                          expressionType="Notify"
                          name="TreatBlankDateAsNull">true</property>
                        <property
                          dataType="System.Int32"
                          description="Defines how to read the JSON file or direct string"
                          expressionType="Notify"
                          name="AccessMode"
                          typeConverter="ZappySys.Common.Ssis.FileValueAccessMode">3</property>
                        <property
                          dataType="System.String"
                          description="Defines how to read the JSON file or direct string"
                          expressionType="Notify"
                          name="DirectValue"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.String"
                          description="Variable name which holds JSON string"
                          expressionType="Notify"
                          name="ValueVariable"
                          typeConverter="ZappySys.PowerPack.Converters.VariableEditor,ZappySys.PowerPack130.UI,Version=1.0.0.0,Culture=neutral,PublicKeyToken=1903265a93eae502"></property>
                        <property
                          dataType="System.String"
                          description="Variable name which holds data file path or url"
                          expressionType="Notify"
                          name="PathVariable"
                          typeConverter="ZappySys.PowerPack.Converters.VariableEditor,ZappySys.PowerPack130.UI,Version=1.0.0.0,Culture=neutral,PublicKeyToken=1903265a93eae502">User::RexAPIWebURL</property>
                        <property
                          dataType="System.String"
                          description="JSON file file path (e.g. c:\data\myfile.json) or pattern to process multiple files (e.g. c:\data\*.json)"
                          expressionType="Notify"
                          name="DirectPath"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">https://api.uk.rexsoftware.com/rex.php</property>
                        <property
                          dataType="System.Boolean"
                          description="Include files from sub folders too."
                          expressionType="Notify"
                          name="Recursive">false</property>
                        <property
                          dataType="System.String"
                          description="Set this if you want to set custom Http headers. You may use variable anywhere in the header value using syntax {{User::YourVarName}}. Syntax of Header key value pair is : &amp;lt;request&amp;gt;&amp;lt;header&amp;gt;&amp;lt;name&amp;gt;x-myheader-1&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;AAA&amp;lt;/value&amp;gt;&amp;lt;/header&amp;gt; &amp;lt;header&amp;gt;&amp;lt;name&amp;gt;x-myheader-2&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;BBB&amp;lt;/value&amp;gt;&amp;lt;/header&amp;gt;&amp;lt;/request&amp;gt;"
                          expressionType="Notify"
                          name="HttpHeaders">&lt;request&gt;&lt;header&gt;&lt;name&gt;Accept&lt;/name&gt;&lt;value&gt;*/*&lt;/value&gt;&lt;/header&gt;&lt;header&gt;&lt;name&gt;Cache-Control&lt;/name&gt;&lt;value&gt;no-cache&lt;/value&gt;&lt;/header&gt;&lt;header&gt;&lt;name&gt;X-App-Identifier&lt;/name&gt;&lt;value&gt;client:spicerhaart:{{System::PackageName}}:{{System::TaskName}}&lt;/value&gt;&lt;/header&gt;&lt;/request&gt;</property>
                        <property
                          dataType="System.String"
                          description="User defined data you wish to send along with your HTTP Request (e.g. Upload file data, Form POST data). Usually you have to set content-type of your data but if you select RequestMethod=POST then system will automatically set content-type=application/x-www-form-urlencoded."
                          expressionType="Notify"
                          name="HttpRequestData">{
"method":"Contracts::search",
"args":{
	"criteria": 
	[
		
	],
	"result_format":"etags",
	"limit":50000,
	"offset": &lt;%page%&gt;
	 },
"strip_response_prefixes": true,
"token": "{{User::RexToken}}"
}</property>
                        <property
                          dataType="System.String"
                          description="Http Web Request Method (e.g. POST, GET, PUT, LIST, DELETE...). Refer your API documentation if you are not sure which method you have to use."
                          expressionType="Notify"
                          name="HttpRequestMethod">POST</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies content type for data you wish to POST. If you select Default option then system default content type will be used (i.e. application/x-www-form-urlencoded). If you specify Content-Type header along with this option then header value takes precedence."
                          expressionType="Notify"
                          name="HttpRequestContentType"
                          typeConverter="ZappySys.Common.Web.HttpRequestContentType">2</property>
                        <property
                          dataType="System.Int32"
                          description="Data format coming from HTTP Response. This is useful for example when you have OData service and you want to automatically consume all pages of data using odata.netUrl. Setting JsonFormat=Odata will automatically do it for you. This setting is only applicable if JSON is coming from HTTP WebRequest."
                          expressionType="Notify"
                          name="JsonFormat"
                          typeConverter="ZappySys.Json.JsonFormat">1</property>
                        <property
                          dataType="System.Boolean"
                          description="Enable custom proxy settings (If this is not set then system default proxy will be used. To disable proxy totally uncheck this option and check DoNotUseDefaultProxy option if available)"
                          expressionType="Notify"
                          name="UseProxy">false</property>
                        <property
                          dataType="System.String"
                          description="Web URL of Proxy server (including port  if necessary). [e.g. http://myproxyserver:8080/]"
                          expressionType="Notify"
                          name="ProxyUrl"></property>
                        <property
                          dataType="System.Boolean"
                          description="Enable passing userid and password to proxy server"
                          expressionType="Notify"
                          name="UseProxyCreds">false</property>
                        <property
                          dataType="System.String"
                          description="Proxy username"
                          expressionType="Notify"
                          name="ProxyUserName"></property>
                        <property
                          dataType="System.String"
                          description="Proxy password"
                          expressionType="Notify"
                          name="ProxyPassword"></property>
                        <property
                          dataType="System.String"
                          description="If Service response support pagination using some sort of next url attribute then specify which attribute name in JSON Response string which holds next url. If no attribute found or its null then component will stop fetching next resultset. Example: $.pagingInfo.nextUrl"
                          expressionType="Notify"
                          name="NextUrlAttribute"></property>
                        <property
                          dataType="System.String"
                          description="If Service response support pagination using some sort of prev/next url attribute then specify which previous link attribute name from JSON Response string which holds previous url."
                          expressionType="Notify"
                          name="PrevUrlAttribute"></property>
                        <property
                          dataType="System.String"
                          description="Specifies value for NextUrlAttribute or StopIndicatorAttribute which indicates last page to stop pagination. If you have specified StopIndicatorAttribute then you can use Regular expression rather than static value to indicate last page. To use regular expression value of this property must start with regex= prefix. Example : regex=FALSE|N  (assuming you set StopIndicatorAttribute to something like $.hasMore)"
                          expressionType="Notify"
                          name="NextUrlStopIndicator"></property>
                        <property
                          dataType="System.String"
                          description="Attribute name or expression for attribute which can be used as stop indicator (e.g. hasmore --or-- $.pagination.hasmore). If this value is blank then NextUrlAttribute is used"
                          expressionType="Notify"
                          name="StopIndicatorAttribute"></property>
                        <property
                          dataType="System.String"
                          description="If you want to include certain text (or parameters) at the end of Next url then specify this attribute (e.g. &amp;format=json). Another common usecase of this property is to supply pagination token to next Page URL. You can also use &lt;%nextlink%&gt; or  &lt;%nextlink_encoded%&gt; placeholder (e.g. &amp;cursor=&lt;%nextlink_encoded%&gt; )"
                          expressionType="Notify"
                          name="NextUrlSuffix"></property>
                        <property
                          dataType="System.Int32"
                          description="This property indicates total number of milliseconds you want to wait before sending next request. This option allows you to adjust how many API calls can be made within certain timeframe. If your API Service has no limit then set this option to zero"
                          expressionType="Notify"
                          name="NextUrlWait">0</property>
                        <property
                          dataType="System.Boolean"
                          description="If this option is true then component will continue without exception on 404 error (Url not found). This allows you to consume data gracefully."
                          expressionType="Notify"
                          name="ContinueOnUrlNotFoundError">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Continue when any type of exception occurs during http request"
                          expressionType="Notify"
                          name="ContineOnAnyError">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Continue on error when specified substring found in response"
                          expressionType="Notify"
                          name="ContineOnErrorForMessage">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Continue on error when specified status code returned from web server"
                          expressionType="Notify"
                          name="ContineOnErrorForStatusCode">false</property>
                        <property
                          dataType="System.Boolean"
                          description="When error occurs no data is returned. Use this option to get content eventhough error occurs. When this option is checked you can't use [continue on error when specific string found in response] option"
                          expressionType="Notify"
                          name="ConsumeResponseOnError">false</property>
                        <property
                          dataType="System.Int32"
                          description="Status code to match when error occurs and ContineOnErrorForStatusCode option is true. If Response status code matches to this code then task continues to run"
                          expressionType="Notify"
                          name="ErrorStatusCodeToMatch">404</property>
                        <property
                          dataType="System.String"
                          description="Error substring to match when error occurs and ContineOnErrorForMessage option is true. If Response status code matches to this code then task continues to run"
                          expressionType="Notify"
                          name="ErrorSubstringToMatch"></property>
                        <property
                          dataType="System.String"
                          description="Cookie Container can be used to maintain state between multiple web requests. Example: You can login to site like wordpress and then extract any private page content by simply passing authentication cookies using this variable."
                          expressionType="Notify"
                          name="CookieContainerVariable"></property>
                        <property
                          dataType="System.Int32"
                          description="Http request Timeout in seconds. Set this to 0 if you want to use system default value (i.e. 100 seconds)"
                          expressionType="Notify"
                          name="RequestTimeout">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies which security protocol is supported for HTTPS communication. Using this option you can enable legacy protocol or enforce to use latest version of security protocol (Note: TLS 1.2 is only supported in SSIS 2014 or Higher)."
                          expressionType="Notify"
                          name="SecurityProtocol"
                          typeConverter="ZappySys.PowerPack.Common.HttpsSecurityProtocolType">0</property>
                        <property
                          dataType="System.Boolean"
                          description="Enable support for gzip or deflate compression. When you check this option compressed response automatically de-compressed saving bandwidth. This option is only valid if web server supports compressed response stream. Check your API documentation for more information."
                          expressionType="Notify"
                          name="EnableCompressionSupport">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Ignore SSL certificate related errors. Example: if you getting SSL/TLS errors because of certificate expired or certificate is not from trusted authority or certificate is self-signed. By checking this option you will not get SSL/TLS error."
                          expressionType="Notify"
                          name="IgnoreCertificateErrors">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Allow unsecure ciphers/suites and curves for SSLS/TLS communication. Use this option to communicate with web servers which needs legacy / unsecured ciphers support. This option is only trigged when you change default SSL/TLS Version on advanced settings tab."
                          expressionType="Notify"
                          name="AllowUnsecureSuite">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Use connection to pass credentials for authentication (e.g. Use UserID/Password or Use OAuth Protocol for token based approach)"
                          expressionType="Notify"
                          name="UseConnection">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specified how you want to loop through multiple pages returned by REST API."
                          expressionType="Notify"
                          name="PagingMode"
                          typeConverter="ZappySys.Common.RestApiPagingMode">3</property>
                        <property
                          dataType="System.Boolean"
                          description="If you wish to pass extracted pagination token or current page number in the body of next request then set this option to true. You can use [$pagetoken$] and [$pagetoken$] placeholders anywhere in the Body where you wish to insert extracted Page token. You must set encoded token you can use &lt;%nextlink_encoded%&gt; inside SuffixForNextUrl Property. If you dont use SuffixForNextUrl then raw nextLink or Token will be inserted inside the body. If you dont specify [$pagetoken$] placeholder in the body then NextPage Token will be appended at the end. NextPage Token is extracted by filter expression specified using property NextUrlSuffix"
                          expressionType="Notify"
                          name="EnablePageTokenForBody">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this to true if you wish to specify different URL, Header, Body or Filter for first page and next page (i.e. Paginated response). Some APIs like Amazon MWS, NetSuite, Zuora) you may need to set this to true."
                          expressionType="Notify"
                          name="HasDifferentNextPageInfo">false</property>
                        <property
                          dataType="System.String"
                          description="When HasDifferentNextPageInfo=true you can set this property to indicate first page and next page. You can specify different URL, Header, Body or Filter for first page and next page (i.e. Paginated response). Use [$tag$] as placeholder anywhere in the URL, Header, Body or Filter and at runtime system will replace it with correct value (first page or next page value). Syntax to specify placeholder for first page vs next page is like a connectionstring url=FirstPageValue|NextPageValue;header=FirstPageValue|NextPageValue;body=FirstPageValue|NextPageValue;filter=FirstPageValue|NextPageValue; You can use one or more key/value pairs to make things dynamic (e.g. url, header, body or filter)  .For example if you have pagination in your API and First URL is http://abc.com/api/items/get and to get more records you have to call http://abc.com/api/items/getNext then you can use [$tag$] as placeholder in the URL http://abc.com/api/items/[$tag$] and specify this property with first page tag and next page tag as url=get|getNext  (Tags are separated using vertical bar). "
                          expressionType="Notify"
                          name="PagePlaceholders"></property>
                        <property
                          dataType="System.String"
                          description="Use this property to set request body fragment for first page. HasDifferentNextPageInfo must be set to true to use this property."
                          expressionType="Notify"
                          name="FirstPageBodyPart"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.String"
                          description="Use this property to set request body fragment for any request after first request. HasDifferentNextPageInfo must be set to true to use this property."
                          expressionType="Notify"
                          name="NextPageBodyPart"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.String"
                          description="Expression to extract Maximum pages to loop through. Some APIs don't stop pagination and keep returning last page data when you try to read data after last page. Specify expression (e.g. $.page_count ) to read total pages to loop through using this property."
                          expressionType="Notify"
                          name="PagingMaxPagesExpr">$.result.total/50000</property>
                        <property
                          dataType="System.String"
                          description="e.g. Type page_num if URL looks like this =&gt; http://abc.com/?page_num=1&amp;sort=true  (page number via query string)&#xA;--or-- Type &lt;%page%&gt; if page number is inside URL path like this =&gt; http://abc.com/1/?sort=true  (e.g. replace page number in url with placeholder http://abc.com/&lt;%page%&gt;/?sort=true)&#xA;Page number will be incremented by one for next URL until last page is reached or [Max Page Number] is reached"
                          expressionType="Notify"
                          name="PageNumberAttributeNameInUrl">&lt;%page%&gt;</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum page number until which auto increment is allowed. Type zero for no limit. Next URL contains next page number (increment by one) until last page is detected or [Max Page Number] limit is reached."
                          expressionType="Notify"
                          name="MaxPageNumber">0</property>
                        <property
                          dataType="System.String"
                          description="Variable name which will hold starting page number. This is ignored if you useing parameter name from query string to indicate page number."
                          expressionType="Notify"
                          name="StartPageNumberVariable">User::UpsertedCount</property>
                        <property
                          dataType="System.Int32"
                          description="Page counter increment. By default next page is incremented by one if this value is zero. You can also enter negative number if you want to decrease page counter."
                          expressionType="Notify"
                          name="PageNumberIncrement">50000</property>
                        <property
                          dataType="System.Int32"
                          description="Specified how you want detect last page."
                          expressionType="Notify"
                          name="PagingEndStrategy"
                          typeConverter="ZappySys.Common.UrlPagingEndDetectionStrategy">3</property>
                        <property
                          dataType="System.Boolean"
                          description="Condition result to compare to detect last page. Set this property to True if you want detect last page if condition is true else set this to False."
                          expressionType="Notify"
                          name="LastPageWhenConditionEqualsTo">true</property>
                        <property
                          dataType="System.Int32"
                          description="Minimum bytes expected from response."
                          expressionType="Notify"
                          name="ResponseMinBytes">0</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum bytes from response."
                          expressionType="Notify"
                          name="ResponseMaxBytes">3</property>
                        <property
                          dataType="System.String"
                          description="Expected error message sub string from response."
                          expressionType="Notify"
                          name="ResponseErrorString">not found</property>
                        <property
                          dataType="System.Int32"
                          description="Expected status code from response when page number you trying to access not found."
                          expressionType="Notify"
                          name="ResponseStatusCode">404</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum JSON records to fetch. Set this value to 0 for all records"
                          expressionType="Notify"
                          name="MaxRows">0</property>
                        <property
                          dataType="System.String"
                          description="Enter expression here to filter data.(Example:  $.Users[*].UserName ) This will fetch User names from users records"
                          expressionType="Notify"
                          name="Filter"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">$.result.rows[*]</property>
                        <property
                          dataType="System.Boolean"
                          description="Use this option to include parent properties (Non array) in the output along with Filtered Rows"
                          expressionType="Notify"
                          name="IncludeParentColumns">false</property>
                        <property
                          dataType="System.Boolean"
                          description="By default child and parent information is not included in the output if children not found for specified expression. For example if you want to extract all orders from all customers nodes then you can type $.Customers[*].Orders[*]. This will fetch all orders from all customers. By default customers records without orders wont be included in the output. If you want to include those customers where orders not found then check this option (Output null information for order attributes). This behavior is similar to LEFT OUTER JOIN in SQL (Left side is parent, right side is child). This option is ***resource intensive*** so only check if you really care about this behavior."
                          expressionType="Notify"
                          name="IncludeParentColumnsWhenChildMissing">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to true if you want to output parent columns which are array. By default any parent column which is an array is not included in output. See also FilterForParentColumnsWithArrayType property if you set this property"
                          expressionType="Notify"
                          name="IncludeParentColumnsWithArrayType">false</property>
                        <property
                          dataType="System.String"
                          description="Filter expression to extract value form parent"
                          expressionType="Notify"
                          name="FilterForParentColumnsWithArrayType"></property>
                        <property
                          dataType="System.String"
                          description="Prefix for parent column name. This option is only valid if you have set IncludeParentColumns=True"
                          expressionType="Notify"
                          name="ParentColumnPrefix">P_</property>
                        <property
                          dataType="System.Boolean"
                          description="Throw error if property name specified in filter expression is missing. By default it will ignore any missing property errors."
                          expressionType="Notify"
                          name="ThrowErrorIfPropertyMissing">false</property>
                        <property
                          dataType="System.Int32"
                          description="This property how many nested levels should be scanned to fetch various properties. 0=Scan all child levels."
                          expressionType="Notify"
                          name="MaxLevelsToScan">0</property>
                        <property
                          dataType="System.String"
                          description="List comma separated property names from JSON document which you want to exclude from output. Specify parent property name to exclude all child nodes."
                          expressionType="Notify"
                          name="ExcludedProperties"></property>
                        <property
                          dataType="System.String"
                          description="Property level separator used in generated property name (separator for outer properties - Above selected filter node). Use this if default separator is producing duplicate property name which is conflicting with existing name."
                          expressionType="Notify"
                          name="LevelSeparator">_</property>
                        <property
                          dataType="System.Boolean"
                          description="Enables deep array flattening for selected filtered hierarchy. When you turn on this property it will flatten each property of each array item and expose as column (e.g. If you have Filter set as $.customers[*] and for each customer you have an array of Addresses then you may see output columns like Addresses.1.City, Addresses.1.State, Addresses.2.City, Addresses.2.State .... Addresses.N.City, Addresses.N.State). You can control how many array items you want to flatten by setting MaxArrayItemsToFlatten property."
                          expressionType="Notify"
                          name="EnableArrayFlattening">false</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum number of array items to flatten. inner array flattening. Adjust this property to control how many columns being generated. This option is ignored if you set EnableArrayFlattening=false"
                          expressionType="Notify"
                          name="MaxArrayItemsToFlatten">10</property>
                        <property
                          dataType="System.Int32"
                          description="Compression format for source file (e.g. gzip, zip)"
                          expressionType="Notify"
                          name="FileCompressionType"
                          typeConverter="ZappySys.Common.FileCompressionType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Array Transformation you want to apply. Useful for case when you have 2-Dimensional arrays with rows/columns in separate arrays."
                          expressionType="Notify"
                          name="ArrayTransformationType"
                          typeConverter="ZappySys.Json.ArrayTransformType">0</property>
                        <property
                          dataType="System.String"
                          description="Filter expression to use to extract column names for array transformation."
                          expressionType="Notify"
                          name="ArrayTransColumnNameFilter">$.result.rows[*]</property>
                        <property
                          dataType="System.String"
                          description="Filter expression for row values (Not applicable for simple array transformation)."
                          expressionType="Notify"
                          name="ArrayTransRowValueFilter">$.result.rows[*]</property>
                        <property
                          dataType="System.Boolean"
                          description="When you have 2D array but don't have column list specified in a separate array then use this option (e.g. { arr: [[10,11],[21,22]] } )."
                          expressionType="Notify"
                          name="ArrayTransEnableCustomColumns">true</property>
                        <property
                          dataType="System.String"
                          description="When you have 2D array but don't have column list specified in a separate array then use specify column names here. Use comma separated list (e.g col1,col2,col3 ). Column name Order must match value order."
                          expressionType="Notify"
                          name="ArrayTransCustomColumns">MetricID</property>
                        <property
                          dataType="System.String"
                          description="Specifies how custom date formatted strings are parsed when reading JSON."
                          expressionType="Notify"
                          name="DateFormatString"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies how date formatted strings, e.g. Date(1198908717056) and 2012-03-21T05:40Z, are parsed when reading JSON."
                          expressionType="Notify"
                          name="DateParseHandling"
                          typeConverter="ZappySys.Common.DateParseHandling">1</property>
                        <property
                          dataType="System.Boolean"
                          description="Output as raw JSON document rather than parsing individual fields. This option is helpful if you have documents stored in a file and you want to pass them downstream as raw JSON string rather than parsing into columns."
                          expressionType="Notify"
                          name="OutputRawDocument">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indent JSON output so its easy to read."
                          expressionType="Notify"
                          name="IndentOutput">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to true if you want to output FilePath. This option is ignored when you consume DirectValue or data from Url rather than local files. Output column name will be __FilePath"
                          expressionType="Notify"
                          name="OutputFilePath">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to true if you want to output FileName. This option is ignored when you consume DirectValue or data from Url rather than local files. Output column name will be __FileName"
                          expressionType="Notify"
                          name="OutputFileName">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to true if you want to move processed file to archive folder."
                          expressionType="Notify"
                          name="EnableArchiveFile">false</property>
                        <property
                          dataType="System.String"
                          description="Folder path where you want to move processed file."
                          expressionType="Notify"
                          name="ArchiveFolderPath"></property>
                        <property
                          dataType="System.Boolean"
                          description="Folder path where you want to move processed file."
                          expressionType="Notify"
                          name="OverwriteFileInArchiveFolder">false</property>
                        <property
                          dataType="System.String"
                          description="File naming convention for archived file. By default it will same name as original source file processed. But you can control naming format using {%name%} and {%ext%} placeholders. e.g. {%name%}_processed{%ext%} or {%name%}{%ext%}.{{System::ContainerStartTime,yyyyMMdd_HHmmss_fff}}"
                          expressionType="Notify"
                          name="ArchiveFileNamingConvention"></property>
                        <property
                          dataType="System.Boolean"
                          description="When this property is true then Column is converted to Row. Pivoted names will appear under  Pivot_Name column and values will appear under Pivot_Value field."
                          expressionType="Notify"
                          name="EnablePivot">false</property>
                        <property
                          dataType="System.Int32"
                          description="Metadata scan mode controls how data type and length is determined. By default few records scanned to determine datatype/length. Changing ScanMode affects length/datatype accuracy."
                          expressionType="Notify"
                          name="MetaDataScanMode"
                          typeConverter="ZappySys.Common.Data.MetaDataScanMode">4</property>
                        <property
                          dataType="System.Int32"
                          description="Length for all string column. This option is only valid for MetaDataScanMode=Custom"
                          expressionType="Notify"
                          name="MetaDataCustomLength">1000</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.JsonSource</property>
                        <property
                          dataType="System.Int32"
                          description="Encoding of source file"
                          expressionType="Notify"
                          name="Encoding"
                          typeConverter="ZappySys.Common.EncodingType">0</property>
                        <property
                          dataType="System.String"
                          description="Character set for text (e.g. utf-8 )"
                          expressionType="Notify"
                          name="CharacterSet"></property>
                        <property
                          dataType="System.Boolean"
                          description="By default process stops with error if specified local file is not found. Set this property to true if you wish to continue rather than throwing file not found error."
                          expressionType="Notify"
                          name="ContinueOnFileNotFoundError">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Check this option if you want to upload file(s) (i.e. POST RAW file data) or send data using Multi-Part encoding method (i.e. Content-Type: multipart/form-data). Multi-Part request allows you to mix key/value and upload files in same request. On the other hand raw upload allows only single file upload (without any key/value) &#xA;&#xA;==== Raw Upload (Content-Type: application/octet-stream) =====   &#xA;To upload single file in raw mode check this option and specify full file path starting with @ sign in the Body (e.g.  @c:\data\myfile.zip ) &#xA;&#xA;==== Form-Data / Multipart Upload (Content-Type: multipart/form-data) =====   &#xA;To treat your Request data as multi part fields you must specify key/value pairs separated by new lines into RequestData field (i.e. Body). Each key value pair is entered on new-line and key/value are separated using equal sign (=). Preceding and trailing spaces are ignored also blank lines are ignored. &#xA;If field value has some any special character(s) then use escape sequence (e.g. For NewLine: \r\n, For Tab: \t, For at (@): \@). When value of any field starts with at sign (@) its automatically treated as File you want to upload. By default file content type is determined based on extension however you can supply content type manually for any field using this way [ fieldname.Content-Type=some content type ]. In below example we have supplied Content-Type for file2 and SomeField1, all other fields are using default content-type.&#xA;See below Example of uploading multiple files along with additional fields.&#xA;&#xA;file1=@c:\data\Myfile1.txt&#xA;file2=@c:\data\Myfile2.json&#xA;file2.Content-Type=application/json&#xA;SomeField1=aaaaaaa&#xA;SomeField1.Content-Type=text/plain&#xA;SomeField2=12345&#xA;SomeFieldWithNewLineAndTab=This is line1\r\nThis is line2\r\nThis is \ttab \ttab \ttab&#xA;SomeFieldStartingWithAtSign=\@MyTwitterHandle&#xA;"
                          expressionType="Notify"
                          name="IsMultiPartUpload">false</property>
                        <property
                          dataType="System.String"
                          description="Expression to extract Maximum records to loop through. Some APIs don't stop pagination and keep returning last page data when you try to read data after last page. Specify expression (e.g. $.total_rows ) to read total pages to loop through using this property. This setting is ignored if you set PagingMaxPagesExpr."
                          expressionType="Notify"
                          name="PagingMaxRowsExpr"></property>
                        <property
                          dataType="System.String"
                          description="When you enable PagingMaxRowsExpr (end pagination based on MaxRowCount) then you need to count records coming in each response. This expression extract all rows found under specified expression (e.g. $.orders[*] if all records found under orders node)."
                          expressionType="Notify"
                          name="PagingMaxRowsDataPathExpr"></property>
                        <property
                          dataType="System.Boolean"
                          description="When this option is checked, system allows to parse large number (Higher than Int64) in JSON document (i.e. { id: 76000009353950433247780 } ). If you do not turn on this option then it may throw error if large number is encountered. This option is SLOW because it has to perform additional checks in order to avoid Large number overflow error so do not turn on unless you getting Large number error."
                          expressionType="Notify"
                          name="EnableBigNumberHandling">false</property>
                      </properties>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Search Contracts.Outputs[JsonSourceOutput]"
                          errorOrTruncationOperation="Error"
                          errorRowDisposition="FailComponent"
                          name="JsonSourceOutput"
                          truncationRowDisposition="FailComponent">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Search Contracts.Outputs[JsonSourceOutput].Columns[etag]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Offer Contract search\Search Contracts.Outputs[JsonSourceOutput].ExternalColumns[etag]"
                              length="68"
                              lineageId="Package\Iterate Offices\Sequence Container\Offer Contract search\Search Contracts.Outputs[JsonSourceOutput].Columns[etag]"
                              name="etag" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Search Contracts.Outputs[JsonSourceOutput].Columns[id]"
                              dataType="i4"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Offer Contract search\Search Contracts.Outputs[JsonSourceOutput].ExternalColumns[id]"
                              lineageId="Package\Iterate Offices\Sequence Container\Offer Contract search\Search Contracts.Outputs[JsonSourceOutput].Columns[id]"
                              name="id" />
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Search Contracts.Outputs[JsonSourceOutput].ExternalColumns[system_record_state]"
                              dataType="wstr"
                              length="24"
                              name="system_record_state" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Search Contracts.Outputs[JsonSourceOutput].ExternalColumns[system_ctime]"
                              dataType="wstr"
                              length="40"
                              name="system_ctime" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Search Contracts.Outputs[JsonSourceOutput].ExternalColumns[system_modtime]"
                              dataType="wstr"
                              length="40"
                              name="system_modtime" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Search Contracts.Outputs[JsonSourceOutput].ExternalColumns[name]"
                              dataType="wstr"
                              length="144"
                              name="name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Search Contracts.Outputs[JsonSourceOutput].ExternalColumns[email_address]"
                              dataType="wstr"
                              length="180"
                              name="email_address" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Search Contracts.Outputs[JsonSourceOutput].ExternalColumns[phone_number]"
                              dataType="wstr"
                              length="80"
                              name="phone_number" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Search Contracts.Outputs[JsonSourceOutput].ExternalColumns[fax_number]"
                              dataType="wstr"
                              length="1020"
                              name="fax_number" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Search Contracts.Outputs[JsonSourceOutput].ExternalColumns[is_dnd]"
                              dataType="wstr"
                              length="80"
                              name="is_dnd" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Search Contracts.Outputs[JsonSourceOutput].ExternalColumns[type]"
                              dataType="wstr"
                              length="28"
                              name="type" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Search Contracts.Outputs[JsonSourceOutput].ExternalColumns[last_contacted_date]"
                              dataType="wstr"
                              length="80"
                              name="last_contacted_date" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Search Contracts.Outputs[JsonSourceOutput].ExternalColumns[name_last]"
                              dataType="wstr"
                              length="1020"
                              name="name_last" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Search Contracts.Outputs[JsonSourceOutput].ExternalColumns[address_postal]"
                              dataType="wstr"
                              length="220"
                              name="address_postal" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Search Contracts.Outputs[JsonSourceOutput].ExternalColumns[address]"
                              dataType="wstr"
                              length="384"
                              name="address" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Search Contracts.Outputs[JsonSourceOutput].ExternalColumns[interest_level]"
                              dataType="wstr"
                              length="1020"
                              name="interest_level" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Search Contracts.Outputs[JsonSourceOutput].ExternalColumns[marketing_birthday]"
                              dataType="wstr"
                              length="1020"
                              name="marketing_birthday" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Search Contracts.Outputs[JsonSourceOutput].ExternalColumns[marketing_enquiry_source]"
                              dataType="wstr"
                              length="1020"
                              name="marketing_enquiry_source" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Search Contracts.Outputs[JsonSourceOutput].ExternalColumns[marketing_gender]"
                              dataType="wstr"
                              length="1020"
                              name="marketing_gender" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Search Contracts.Outputs[JsonSourceOutput].ExternalColumns[marketing_postcode]"
                              dataType="wstr"
                              length="80"
                              name="marketing_postcode" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Search Contracts.Outputs[JsonSourceOutput].ExternalColumns[name_legal]"
                              dataType="wstr"
                              length="1020"
                              name="name_legal" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Search Contracts.Outputs[JsonSourceOutput].ExternalColumns[name_salutation]"
                              dataType="wstr"
                              length="1020"
                              name="name_salutation" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Search Contracts.Outputs[JsonSourceOutput].ExternalColumns[name_addressee]"
                              dataType="wstr"
                              length="1020"
                              name="name_addressee" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Search Contracts.Outputs[JsonSourceOutput].ExternalColumns[system_owner_user.id]"
                              dataType="wstr"
                              length="20"
                              name="system_owner_user.id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Search Contracts.Outputs[JsonSourceOutput].ExternalColumns[system_owner_user._name]"
                              dataType="wstr"
                              length="36"
                              name="system_owner_user._name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Search Contracts.Outputs[JsonSourceOutput].ExternalColumns[system_owner_user._first_name]"
                              dataType="wstr"
                              length="20"
                              name="system_owner_user._first_name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Search Contracts.Outputs[JsonSourceOutput].ExternalColumns[system_owner_user._last_name]"
                              dataType="wstr"
                              length="12"
                              name="system_owner_user._last_name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Search Contracts.Outputs[JsonSourceOutput].ExternalColumns[system_owner_user._email_address]"
                              dataType="wstr"
                              length="92"
                              name="system_owner_user._email_address" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Search Contracts.Outputs[JsonSourceOutput].ExternalColumns[system_modified_user.id]"
                              dataType="wstr"
                              length="20"
                              name="system_modified_user.id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Search Contracts.Outputs[JsonSourceOutput].ExternalColumns[system_modified_user._name]"
                              dataType="wstr"
                              length="48"
                              name="system_modified_user._name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Search Contracts.Outputs[JsonSourceOutput].ExternalColumns[system_modified_user._first_name]"
                              dataType="wstr"
                              length="24"
                              name="system_modified_user._first_name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Search Contracts.Outputs[JsonSourceOutput].ExternalColumns[system_modified_user._last_name]"
                              dataType="wstr"
                              length="24"
                              name="system_modified_user._last_name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Search Contracts.Outputs[JsonSourceOutput].ExternalColumns[system_modified_user._email_address]"
                              dataType="wstr"
                              length="128"
                              name="system_modified_user._email_address" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Search Contracts.Outputs[JsonSourceOutput].ExternalColumns[system_created_user.id]"
                              dataType="wstr"
                              length="20"
                              name="system_created_user.id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Search Contracts.Outputs[JsonSourceOutput].ExternalColumns[system_created_user._name]"
                              dataType="wstr"
                              length="36"
                              name="system_created_user._name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Search Contracts.Outputs[JsonSourceOutput].ExternalColumns[system_created_user._first_name]"
                              dataType="wstr"
                              length="20"
                              name="system_created_user._first_name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Search Contracts.Outputs[JsonSourceOutput].ExternalColumns[system_created_user._last_name]"
                              dataType="wstr"
                              length="12"
                              name="system_created_user._last_name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Search Contracts.Outputs[JsonSourceOutput].ExternalColumns[system_created_user._email_address]"
                              dataType="wstr"
                              length="92"
                              name="system_created_user._email_address" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Search Contracts.Outputs[JsonSourceOutput].ExternalColumns[contact_image]"
                              dataType="wstr"
                              length="1020"
                              name="contact_image" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Search Contracts.Outputs[JsonSourceOutput].ExternalColumns[marketing_enquiry_method]"
                              dataType="wstr"
                              length="1020"
                              name="marketing_enquiry_method" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Search Contracts.Outputs[JsonSourceOutput].ExternalColumns[_security_user_rights]"
                              dataType="wstr"
                              length="260"
                              name="_security_user_rights" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Search Contracts.Outputs[JsonSourceOutput].ExternalColumns[etag]"
                              dataType="wstr"
                              length="68"
                              name="etag" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Search Contracts.Outputs[JsonSourceOutput].ExternalColumns[id]"
                              dataType="wstr"
                              length="24"
                              name="id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Search Contracts.Outputs[JsonSourceOutput].ExternalColumns[__FileName]"
                              dataType="wstr"
                              length="600"
                              name="__FileName" />
                          </externalMetadataColumns>
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Search Contracts.Outputs[JsonSource Error Output]"
                          isErrorOut="true"
                          name="JsonSource Error Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Search Contracts.Outputs[JsonSource Error Output].Columns[etag]"
                              dataType="wstr"
                              length="68"
                              lineageId="Package\Iterate Offices\Sequence Container\Offer Contract search\Search Contracts.Outputs[JsonSource Error Output].Columns[etag]"
                              name="etag" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Search Contracts.Outputs[JsonSource Error Output].Columns[id]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Offer Contract search\Search Contracts.Outputs[JsonSource Error Output].Columns[id]"
                              name="id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Search Contracts.Outputs[JsonSource Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Offer Contract search\Search Contracts.Outputs[JsonSource Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Search Contracts.Outputs[JsonSource Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Offer Contract search\Search Contracts.Outputs[JsonSource Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Search Contracts.Outputs[JsonSource Error Output].Columns[ErrorColumnName]"
                              codePage="1252"
                              dataType="str"
                              length="128"
                              lineageId="Package\Iterate Offices\Sequence Container\Offer Contract search\Search Contracts.Outputs[JsonSource Error Output].Columns[ErrorColumnName]"
                              name="ErrorColumnName" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Search Contracts.Outputs[JsonSource Error Output].Columns[ErrorMessage]"
                              dataType="wstr"
                              length="1024"
                              lineageId="Package\Iterate Offices\Sequence Container\Offer Contract search\Search Contracts.Outputs[JsonSource Error Output].Columns[ErrorMessage]"
                              name="ErrorMessage" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Offer Contract search\SQL Sort"
                      componentClassID="Microsoft.Sort"
                      contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
                      name="SQL Sort"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                          name="EliminateDuplicates">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the maximum number of threads to use for sorting."
                          expressionType="Notify"
                          name="MaximumThreads">-1</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Offer Contract search\SQL Sort.Inputs[Sort Input]"
                          name="Sort Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Offer Contract search\SQL Sort.Inputs[Sort Input].Columns[Id]"
                              cachedDataType="i4"
                              cachedName="Id"
                              lineageId="Package\Iterate Offices\Sequence Container\Offer Contract search\Existing Contracts from SQL.Outputs[OLE DB Source Output].Columns[Id]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">1</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Offer Contract search\SQL Sort.Inputs[Sort Input].Columns[AccountId]"
                              cachedDataType="i2"
                              cachedName="AccountId"
                              lineageId="Package\Iterate Offices\Sequence Container\Offer Contract search\Existing Contracts from SQL.Outputs[OLE DB Source Output].Columns[AccountId]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Offer Contract search\SQL Sort.Inputs[Sort Input].Columns[etag_offer]"
                              cachedDataType="wstr"
                              cachedLength="250"
                              cachedName="etag_offer"
                              lineageId="Package\Iterate Offices\Sequence Container\Offer Contract search\Existing Contracts from SQL.Outputs[OLE DB Source Output].Columns[etag_offer]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Offer Contract search\SQL Sort.Outputs[Sort Output]"
                          isSorted="true"
                          name="Sort Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Offer Contract search\SQL Sort.Outputs[Sort Output].Columns[Id]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Offer Contract search\SQL Sort.Outputs[Sort Output].Columns[Id]"
                              name="Id"
                              sortKeyPosition="1">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Iterate Offices\Sequence Container\Offer Contract search\Existing Contracts from SQL.Outputs[OLE DB Source Output].Columns[Id]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Offer Contract search\SQL Sort.Outputs[Sort Output].Columns[AccountId]"
                              dataType="i2"
                              lineageId="Package\Iterate Offices\Sequence Container\Offer Contract search\SQL Sort.Outputs[Sort Output].Columns[AccountId]"
                              name="AccountId">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Iterate Offices\Sequence Container\Offer Contract search\Existing Contracts from SQL.Outputs[OLE DB Source Output].Columns[AccountId]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Offer Contract search\SQL Sort.Outputs[Sort Output].Columns[etag_offer]"
                              dataType="wstr"
                              length="250"
                              lineageId="Package\Iterate Offices\Sequence Container\Offer Contract search\SQL Sort.Outputs[Sort Output].Columns[etag_offer]"
                              name="etag_offer">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Iterate Offices\Sequence Container\Offer Contract search\Existing Contracts from SQL.Outputs[OLE DB Source Output].Columns[etag_offer]}</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Trash Destination"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Trash Destination; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="The trash destination is used to create dummy destination which ends data path without any processing."
                      name="Trash Destination"
                      version="2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.String"
                          description="File path where you want to save data"
                          expressionType="Notify"
                          name="FilePath"></property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates if you want to save input data to comma separated text file"
                          expressionType="Notify"
                          name="SaveDataToFile">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Append data to file"
                          expressionType="Notify"
                          name="Append">false</property>
                        <property
                          dataType="System.String"
                          description="RowSeparator"
                          expressionType="Notify"
                          name="RowSeparator">{NEWLINE}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether you want to overwrite target file if exists"
                          expressionType="Notify"
                          name="OverwriteFileIfExists">true</property>
                        <property
                          dataType="System.String"
                          description="ColumnSeparator"
                          expressionType="Notify"
                          name="ColumnSeparator">,</property>
                        <property
                          dataType="System.Boolean"
                          description="SupportUnicode"
                          expressionType="Notify"
                          name="SupportUnicode">true</property>
                        <property
                          dataType="System.Boolean"
                          description="ColumnNamesInFirstRow"
                          expressionType="Notify"
                          name="ColumnNamesInFirstRow">true</property>
                        <property
                          dataType="System.Boolean"
                          description="QuoteDataIfNeeded"
                          expressionType="Notify"
                          name="QuoteDataIfNeeded">true</property>
                        <property
                          dataType="System.String"
                          description="Date time format string for any column with DT_DBDATETIME, DT_DBDATETIME2 or DB_DATE format"
                          expressionType="Notify"
                          name="DateTimeFormat">yyyy-MM-dd HH:mm:ss</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.TrashDestination</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Trash Destination.Inputs[TrashDestinationInput]"
                          hasSideEffects="true"
                          name="TrashDestinationInput">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Trash Destination 1"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Trash Destination; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="The trash destination is used to create dummy destination which ends data path without any processing."
                      name="Trash Destination 1"
                      version="2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.String"
                          description="File path where you want to save data"
                          expressionType="Notify"
                          name="FilePath"></property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates if you want to save input data to comma separated text file"
                          expressionType="Notify"
                          name="SaveDataToFile">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Append data to file"
                          expressionType="Notify"
                          name="Append">false</property>
                        <property
                          dataType="System.String"
                          description="RowSeparator"
                          expressionType="Notify"
                          name="RowSeparator">{NEWLINE}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether you want to overwrite target file if exists"
                          expressionType="Notify"
                          name="OverwriteFileIfExists">true</property>
                        <property
                          dataType="System.String"
                          description="ColumnSeparator"
                          expressionType="Notify"
                          name="ColumnSeparator">,</property>
                        <property
                          dataType="System.Boolean"
                          description="SupportUnicode"
                          expressionType="Notify"
                          name="SupportUnicode">true</property>
                        <property
                          dataType="System.Boolean"
                          description="ColumnNamesInFirstRow"
                          expressionType="Notify"
                          name="ColumnNamesInFirstRow">true</property>
                        <property
                          dataType="System.Boolean"
                          description="QuoteDataIfNeeded"
                          expressionType="Notify"
                          name="QuoteDataIfNeeded">true</property>
                        <property
                          dataType="System.String"
                          description="Date time format string for any column with DT_DBDATETIME, DT_DBDATETIME2 or DB_DATE format"
                          expressionType="Notify"
                          name="DateTimeFormat">yyyy-MM-dd HH:mm:ss</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.TrashDestination</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Trash Destination 1.Inputs[TrashDestinationInput]"
                          hasSideEffects="true"
                          name="TrashDestinationInput">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Upsert Offer"
                      componentClassID="Microsoft.OLEDBCommand"
                      contactInfo="OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
                      description="Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time."
                      name="Upsert Offer"
                      usesDispositions="true"
                      version="2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">0</property>
                        <property
                          dataType="System.String"
                          description="The SQL command to be executed."
                          expressionType="Notify"
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">exec [UpsertOffer] ?,?,?</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Upsert Offer.Connections[OleDbConnection]"
                          connectionManagerID="Package.ConnectionManagers[colsqlbi01v.Entities]"
                          connectionManagerRefId="Package.ConnectionManagers[colsqlbi01v.Entities]"
                          description="The OLE DB runtime connection used to access the database."
                          name="OleDbConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Upsert Offer.Inputs[OLE DB Command Input]"
                          errorOrTruncationOperation="Command Execution"
                          errorRowDisposition="FailComponent"
                          hasSideEffects="true"
                          name="OLE DB Command Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Upsert Offer.Inputs[OLE DB Command Input].Columns[Origin]"
                              cachedDataType="i4"
                              cachedName="Origin"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Offer Contract search\Upsert Offer.Inputs[OLE DB Command Input].ExternalColumns[@Origin]"
                              lineageId="Package\Iterate Offices\Sequence Container\Offer Contract search\Add accountid and origin.Outputs[Derived Column Output].Columns[Origin]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Upsert Offer.Inputs[OLE DB Command Input].Columns[AccountId]"
                              cachedDataType="i4"
                              cachedName="AccountId"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Offer Contract search\Upsert Offer.Inputs[OLE DB Command Input].ExternalColumns[@accountid]"
                              lineageId="Package\Iterate Offices\Sequence Container\Offer Contract search\Add accountid and origin.Outputs[Derived Column Output].Columns[AccountId]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Upsert Offer.Inputs[OLE DB Command Input].Columns[__DOCUMENT__]"
                              cachedDataType="nText"
                              cachedName="__DOCUMENT__"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Offer Contract search\Upsert Offer.Inputs[OLE DB Command Input].ExternalColumns[@body]"
                              lineageId="Package\Iterate Offices\Sequence Container\Offer Contract search\Rip out of the result.Outputs[JsonParserTransformOutput].Columns[__DOCUMENT__]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Upsert Offer.Inputs[OLE DB Command Input].ExternalColumns[@Origin]"
                              dataType="i2"
                              name="@Origin">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                                  name="DBParamInfoFlags">81</property>
                              </properties>
                            </externalMetadataColumn>
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Upsert Offer.Inputs[OLE DB Command Input].ExternalColumns[@body]"
                              dataType="nText"
                              name="@body">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                                  name="DBParamInfoFlags">193</property>
                              </properties>
                            </externalMetadataColumn>
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Upsert Offer.Inputs[OLE DB Command Input].ExternalColumns[@accountid]"
                              dataType="i4"
                              name="@accountid">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                                  name="DBParamInfoFlags">81</property>
                              </properties>
                            </externalMetadataColumn>
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Upsert Offer.Outputs[OLE DB Command Output]"
                          exclusionGroup="1"
                          name="OLE DB Command Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Offer Contract search\Upsert Offer.Inputs[OLE DB Command Input]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Upsert Offer.Outputs[OLE DB Command Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="OLE DB Command Error Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Offer Contract search\Upsert Offer.Inputs[OLE DB Command Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Upsert Offer.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Offer Contract search\Upsert Offer.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Upsert Offer.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Offer Contract search\Upsert Offer.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Web API Destination"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Web API Destination; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="The Web API destination can be used to send data to Web API URL (e.g. Submit or POST data to REST API/SOAP or other HTTP/HTTPS endpoints)"
                      name="Web API Destination"
                      usesDispositions="true"
                      version="5">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.String"
                          description="API URL you want to access"
                          expressionType="Notify"
                          name="HttpRequestUrl">{{User::RexAPIWebURL}}</property>
                        <property
                          dataType="System.String"
                          description="Http Web Request Method (e.g. POST, GET, PUT, LIST, DELETE...). Refer your API documentation if you are not sure which method you have to use."
                          expressionType="Notify"
                          name="HttpRequestMethod">POST</property>
                        <property
                          dataType="System.String"
                          description="Set this if you want to set custom Http headers. You may use variable anywhere in the header value using syntax {{User::YourVarName}}. Syntax of Header key value pair is : &amp;lt;request&amp;gt;&amp;lt;header&amp;gt;&amp;lt;name&amp;gt;x-myheader-1&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;AAA&amp;lt;/value&amp;gt;&amp;lt;/header&amp;gt; &amp;lt;header&amp;gt;&amp;lt;name&amp;gt;x-myheader-2&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;BBB&amp;lt;/value&amp;gt;&amp;lt;/header&amp;gt;&amp;lt;/request&amp;gt;"
                          expressionType="Notify"
                          name="HttpHeaders"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">&lt;request&gt;&lt;header&gt;&lt;name&gt;Accept&lt;/name&gt;&lt;value&gt;*/*&lt;/value&gt;&lt;/header&gt;&lt;header&gt;&lt;name&gt;Cache-Control&lt;/name&gt;&lt;value&gt;no-cache&lt;/value&gt;&lt;/header&gt;&lt;header&gt;&lt;name&gt;X-App-Identifier&lt;/name&gt;&lt;value&gt;client:spicerhaart:{{System::PackageName}}:{{System::TaskName}}&lt;/value&gt;&lt;/header&gt;&lt;/request&gt;</property>
                        <property
                          dataType="System.String"
                          description="User defined data you wish to send along with your HTTP Request (e.g. Upload file data, Form POST data). Usually you have to set content-type of your data but if you select RequestMethod=POST then system will automatically set content-type=application/x-www-form-urlencoded."
                          expressionType="Notify"
                          name="HttpRequestData"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies content type for data you wish to POST. If you select Default option then system default content type will be used (i.e. application/x-www-form-urlencoded). If you specify Content-Type header along with this option then header value takes precedence."
                          expressionType="Notify"
                          name="HttpRequestContentType"
                          typeConverter="ZappySys.Common.Web.HttpRequestContentType">0</property>
                        <property
                          dataType="System.Boolean"
                          description="If this option is true then component will continue without exception on 404 error (Url not found). This allows you to consume data gracefully."
                          expressionType="Notify"
                          name="ContinueOnUrlNotFoundError">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Ignore SSL certificate related errors. Example: if you getting SSL/TLS errors because of certificate expired or certificate is not from trusted authority or certificate is self-signed. By checking this option you will not get SSL/TLS error."
                          expressionType="Notify"
                          name="IgnoreCertificateErrors">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Allow unsecure ciphers/suites and curves for SSLS/TLS communication. Use this option to communicate with web servers which needs legacy / unsecured ciphers support. This option is only trigged when you change default SSL/TLS Version on advanced settings tab."
                          expressionType="Notify"
                          name="AllowUnsecureSuite">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Enable support for gzip or deflate compression. When you check this option compressed response automatically de-compressed saving bandwidth. This option is only valid if web server supports compressed response stream. Check your API documentation for more information."
                          expressionType="Notify"
                          name="EnableCompressionSupport">true</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies which security protocol is supported for HTTPS communication. Using this option you can enable legacy protocol or enforce to use latest version of security protocol (Note: TLS 1.2 is only supported in SSIS 2014 or Higher)."
                          expressionType="Notify"
                          name="SecurityProtocol"
                          typeConverter="ZappySys.PowerPack.Common.HttpsSecurityProtocolType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Wait time in milliseconds (Pause after each request). 0=No wait. Use this delay time if your API has limit on how many requests you can make in certain time frame."
                          expressionType="Notify"
                          name="WaitTime">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you redirect error to error output by default you get additional information in ErrorMessage column. Check this option if you need exact Response Body (Useful if its in JSON/XML format which needs to be parsed for additional information for later step)."
                          expressionType="Notify"
                          name="OnErrorOutputResponseBody">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Enable multiple requests using parallel threads."
                          expressionType="Notify"
                          name="EnableParallelRequests">false</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum parallel threads to use for processing multiple web requests."
                          expressionType="Notify"
                          name="MaxParallelThreads">3</property>
                        <property
                          dataType="System.Boolean"
                          description="By default one request is sent for each input row. If your API supports multiple records in a single call via HTTP Body then enable this setting. See also BodyBatchSize, BodyHeader, BodyFooter and BodyRowSeparator property."
                          expressionType="Notify"
                          name="EnableBodyBatch">false</property>
                        <property
                          dataType="System.String"
                          description="When you have to wrap input content between opening and closing tags for each call then set this property to specify opening for body content. For Example if you want to build Body like this (send max 100 rows per call) ==&gt; { records : [ {...}, {...}, {...} ] } then you can set BatchSize=100, BodyHeader as &quot;{ records: [&quot; , BodyFooter as &quot;] }&quot; and BodyRowSeperator as comma {,}. This property is ignored if EnableBodyBatch=false."
                          expressionType="Notify"
                          name="BodyHeader"></property>
                        <property
                          dataType="System.String"
                          description="When you have to wrap input content between opening and closing tags for each call then set this property to specify closing for body content. For Example if you want to build Body like this (send max 100 rows per call) ==&gt; { records : [ {...}, {...}, {...} ] } then you can set BatchSize=100, BodyHeader as &quot;{ records: [&quot; , BodyFooter as &quot;] }&quot; and BodyRowSeperator as comma {,}. This property is ignored if EnableBodyBatch=false."
                          expressionType="Notify"
                          name="BodyFooter"></property>
                        <property
                          dataType="System.Int32"
                          description="If your API supports multiple records via HTTP Body then change this setting &gt; 1 to include multiple upstream records into single call. See also BodyHeader, BodyFooter and BodyRowSeparator property. This property is ignored if EnableBodyBatch=false."
                          expressionType="Notify"
                          name="BodyBatchSize">100</property>
                        <property
                          dataType="System.String"
                          description="When you submit multiple rows in a batch you can separate multiple documents / records using custom separator (e.g. in JSON Array you can use comma {,} as record separator if POST document is in array format [ {...}, {...}, {...} ] ). For last row of batch blank separator is used."
                          expressionType="Notify"
                          name="BodyRowSeparator"></property>
                        <property
                          dataType="System.Boolean"
                          description="Returns response data as binary data (e.g. Byte Array). Check this option is response is Zip file, Image file or any non text data which needs to be exported as raw data without any encoding."
                          expressionType="Notify"
                          name="TreatResponseAsBinary">false</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.WebApiDestination</property>
                        <property
                          dataType="System.Boolean"
                          description="Check this option if you want to upload file(s) (i.e. POST RAW file data) or send data using Multi-Part encoding method (i.e. Content-Type: multipart/form-data). Multi-Part request allows you to mix key/value and upload files in same request. On the other hand raw upload allows only single file upload (without any key/value) &#xA;&#xA;==== Raw Upload (Content-Type: application/octet-stream) =====   &#xA;To upload single file in raw mode check this option and specify full file path starting with @ sign in the Body (e.g.  @c:\data\myfile.zip ) &#xA;&#xA;==== Form-Data / Multipart Upload (Content-Type: multipart/form-data) =====   &#xA;To treat your Request data as multi part fields you must specify key/value pairs separated by new lines into RequestData field (i.e. Body). Each key value pair is entered on new-line and key/value are separated using equal sign (=). Preceding and trailing spaces are ignored also blank lines are ignored. &#xA;If field value has some any special character(s) then use escape sequence (e.g. For NewLine: \r\n, For Tab: \t, For at (@): \@). When value of any field starts with at sign (@) its automatically treated as File you want to upload. By default file content type is determined based on extension however you can supply content type manually for any field using this way [ fieldname.Content-Type=some content type ]. In below example we have supplied Content-Type for file2 and SomeField1, all other fields are using default content-type.&#xA;See below Example of uploading multiple files along with additional fields.&#xA;&#xA;file1=@c:\data\Myfile1.txt&#xA;file2=@c:\data\Myfile2.json&#xA;file2.Content-Type=application/json&#xA;SomeField1=aaaaaaa&#xA;SomeField1.Content-Type=text/plain&#xA;SomeField2=12345&#xA;SomeFieldWithNewLineAndTab=This is line1\r\nThis is line2\r\nThis is \ttab \ttab \ttab&#xA;SomeFieldStartingWithAtSign=\@MyTwitterHandle&#xA;"
                          expressionType="Notify"
                          name="IsMultiPartUpload">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Enable this option if your server is expecting &#xA; (i.e. CRLF) after last Multi-Part boundary in the Body. This option is only applicable if you enabled IsMultiPartUpload and sending data in Key=value format (i.e. Mutipart). For raw file upload this option has no effect."
                          expressionType="Notify"
                          name="AddMultiPartPostamble">false</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Web API Destination.Connections[Connection]"
                          connectionManagerID="Package.ConnectionManagers[HTTP 1]"
                          connectionManagerRefId="Package.ConnectionManagers[HTTP 1]"
                          description="Connection manager for authentication (e.g. HTTP or OAuth Connection)"
                          name="Connection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Web API Destination.Inputs[WebApiDestinationInput]"
                          errorRowDisposition="RedirectRow"
                          hasSideEffects="true"
                          name="WebApiDestinationInput"
                          truncationRowDisposition="RedirectRow">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Web API Destination.Inputs[WebApiDestinationInput].Columns[ZS_JSON_OUT]"
                              cachedDataType="nText"
                              cachedName="ZS_JSON_OUT"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Offer Contract search\Web API Destination.Inputs[WebApiDestinationInput].ExternalColumns[HttpRequestData]"
                              lineageId="Package\Iterate Offices\Sequence Container\Offer Contract search\JSON Generator Transform.Outputs[JsonGeneratorTransformOutput].Columns[ZS_JSON_OUT]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Web API Destination.Inputs[WebApiDestinationInput].ExternalColumns[HttpRequestUrl]"
                              dataType="wstr"
                              length="2000"
                              name="HttpRequestUrl" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Web API Destination.Inputs[WebApiDestinationInput].ExternalColumns[HttpRequestData]"
                              dataType="nText"
                              name="HttpRequestData" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Web API Destination.Inputs[WebApiDestinationInput].ExternalColumns[HttpHeaders]"
                              dataType="wstr"
                              length="2000"
                              name="HttpHeaders" />
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Web API Destination.Outputs[WebApiDestination Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="WebApiDestination Error Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Offer Contract search\Web API Destination.Inputs[WebApiDestinationInput]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Web API Destination.Outputs[WebApiDestination Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Offer Contract search\Web API Destination.Outputs[WebApiDestination Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Web API Destination.Outputs[WebApiDestination Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Offer Contract search\Web API Destination.Outputs[WebApiDestination Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Web API Destination.Outputs[WebApiDestination Error Output].Columns[ErrorColumnName]"
                              codePage="1252"
                              dataType="str"
                              length="128"
                              lineageId="Package\Iterate Offices\Sequence Container\Offer Contract search\Web API Destination.Outputs[WebApiDestination Error Output].Columns[ErrorColumnName]"
                              name="ErrorColumnName" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Web API Destination.Outputs[WebApiDestination Error Output].Columns[ErrorMessage]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\Offer Contract search\Web API Destination.Outputs[WebApiDestination Error Output].Columns[ErrorMessage]"
                              name="ErrorMessage" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Web API Destination.Outputs[Response Output]"
                          exclusionGroup="1"
                          name="Response Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Offer Contract search\Web API Destination.Inputs[WebApiDestinationInput]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Web API Destination.Outputs[Response Output].Columns[ResponseText]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\Offer Contract search\Web API Destination.Outputs[Response Output].Columns[ResponseText]"
                              name="ResponseText" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Offer Contract search\Web API Destination.Outputs[Response Output].Columns[StatusCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Offer Contract search\Web API Destination.Outputs[Response Output].Columns[StatusCode]"
                              name="StatusCode" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                  </components>
                  <paths>
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Offer Contract search.Paths[Derived Column Output]"
                      endId="Package\Iterate Offices\Sequence Container\Offer Contract search\Upsert Offer.Inputs[OLE DB Command Input]"
                      name="Derived Column Output"
                      startId="Package\Iterate Offices\Sequence Container\Offer Contract search\Add accountid and origin.Outputs[Derived Column Output]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Offer Contract search.Paths[ignore]"
                      endId="Package\Iterate Offices\Sequence Container\Offer Contract search\Trash Destination.Inputs[TrashDestinationInput]"
                      name="ignore"
                      startId="Package\Iterate Offices\Sequence Container\Offer Contract search\Insert or Ignore.Outputs[ignore]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Offer Contract search.Paths[JsonGeneratorTransformOutput]"
                      endId="Package\Iterate Offices\Sequence Container\Offer Contract search\Web API Destination.Inputs[WebApiDestinationInput]"
                      name="JsonGeneratorTransformOutput"
                      startId="Package\Iterate Offices\Sequence Container\Offer Contract search\JSON Generator Transform.Outputs[JsonGeneratorTransformOutput]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Offer Contract search.Paths[JsonParserTransformOutput]"
                      endId="Package\Iterate Offices\Sequence Container\Offer Contract search\Add accountid and origin.Inputs[Derived Column Input]"
                      name="JsonParserTransformOutput"
                      startId="Package\Iterate Offices\Sequence Container\Offer Contract search\Rip out of the result.Outputs[JsonParserTransformOutput]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Offer Contract search.Paths[JsonSourceOutput]"
                      endId="Package\Iterate Offices\Sequence Container\Offer Contract search\API Sort.Inputs[Sort Input]"
                      name="JsonSourceOutput"
                      startId="Package\Iterate Offices\Sequence Container\Offer Contract search\Search Contracts.Outputs[JsonSourceOutput]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Offer Contract search.Paths[Merge Join Output]"
                      endId="Package\Iterate Offices\Sequence Container\Offer Contract search\Insert or Ignore.Inputs[Conditional Split Input]"
                      name="Merge Join Output"
                      startId="Package\Iterate Offices\Sequence Container\Offer Contract search\Merge Join To Find Those to Insert.Outputs[Merge Join Output]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Offer Contract search.Paths[OLE DB Source Output]"
                      endId="Package\Iterate Offices\Sequence Container\Offer Contract search\SQL Sort.Inputs[Sort Input]"
                      name="OLE DB Source Output"
                      startId="Package\Iterate Offices\Sequence Container\Offer Contract search\Existing Contracts from SQL.Outputs[OLE DB Source Output]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Offer Contract search.Paths[Response Output]"
                      endId="Package\Iterate Offices\Sequence Container\Offer Contract search\Rip out of the result.Inputs[JsonParserTransformInput]"
                      name="Response Output"
                      startId="Package\Iterate Offices\Sequence Container\Offer Contract search\Web API Destination.Outputs[Response Output]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Offer Contract search.Paths[Sort Output]"
                      endId="Package\Iterate Offices\Sequence Container\Offer Contract search\Merge Join To Find Those to Insert.Inputs[Merge Join Right Input]"
                      name="Sort Output"
                      startId="Package\Iterate Offices\Sequence Container\Offer Contract search\SQL Sort.Outputs[Sort Output]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Offer Contract search.Paths[Sort Output1]"
                      endId="Package\Iterate Offices\Sequence Container\Offer Contract search\Merge Join To Find Those to Insert.Inputs[Merge Join Left Input]"
                      name="Sort Output"
                      startId="Package\Iterate Offices\Sequence Container\Offer Contract search\API Sort.Outputs[Sort Output]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Offer Contract search.Paths[upsert]"
                      endId="Package\Iterate Offices\Sequence Container\Offer Contract search\JSON Generator Transform.Inputs[JsonInput1]"
                      name="upsert"
                      startId="Package\Iterate Offices\Sequence Container\Offer Contract search\Insert or Ignore.Outputs[upsert]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Offer Contract search.Paths[WebApiDestination Error Output]"
                      endId="Package\Iterate Offices\Sequence Container\Offer Contract search\Trash Destination 1.Inputs[TrashDestinationInput]"
                      name="WebApiDestination Error Output"
                      startId="Package\Iterate Offices\Sequence Container\Offer Contract search\Web API Destination.Outputs[WebApiDestination Error Output]" />
                  </paths>
                </pipeline>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing"
              DTS:CreationName="Microsoft.Pipeline"
              DTS:Description="Data Flow Task"
              DTS:DTSID="{9A507A0B-B03D-4E46-B6FC-6880854F510C}"
              DTS:ExecutableType="Microsoft.Pipeline"
              DTS:LocaleID="-1"
              DTS:ObjectName="PortalUploadQueueTargets Ongoing"
              DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:ObjectData>
                <pipeline
                  version="1">
                  <components>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Add accountid and origin 1"
                      componentClassID="Microsoft.DerivedColumn"
                      contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                      name="Add accountid and origin 1"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Add accountid and origin 1.Inputs[Derived Column Input]"
                          description="Input to the Derived Column Transformation"
                          name="Derived Column Input">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Add accountid and origin 1.Outputs[Derived Column Output]"
                          description="Default Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          name="Derived Column Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Add accountid and origin 1.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Add accountid and origin 1.Outputs[Derived Column Output].Columns[AccountId]"
                              dataType="i4"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Add accountid and origin 1.Outputs[Derived Column Output].Columns[AccountId]"
                              name="AccountId"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">@[User::RexAccountID]</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">@[User::RexAccountID]</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Add accountid and origin 1.Outputs[Derived Column Output].Columns[Origin]"
                              dataType="i4"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Add accountid and origin 1.Outputs[Derived Column Output].Columns[Origin]"
                              name="Origin"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">2</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">2</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Add accountid and origin 1.Outputs[Derived Column Error Output]"
                          description="Error Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Derived Column Error Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Add accountid and origin 1.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Add accountid and origin 1.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Add accountid and origin 1.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Add accountid and origin 1.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Add accountid and origin 1.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\API Sort"
                      componentClassID="Microsoft.Sort"
                      contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
                      name="API Sort"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                          name="EliminateDuplicates">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the maximum number of threads to use for sorting."
                          expressionType="Notify"
                          name="MaximumThreads">-1</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\API Sort.Inputs[Sort Input]"
                          name="Sort Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\API Sort.Inputs[Sort Input].Columns[id]"
                              cachedDataType="i4"
                              cachedName="id"
                              lineageId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Search PortalUploadQueueTargets.Outputs[JsonSourceOutput].Columns[id]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">1</property>
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\API Sort.Outputs[Sort Output]"
                          isSorted="true"
                          name="Sort Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\API Sort.Outputs[Sort Output].Columns[id]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\API Sort.Outputs[Sort Output].Columns[id]"
                              name="id"
                              sortKeyPosition="1">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Search PortalUploadQueueTargets.Outputs[JsonSourceOutput].Columns[id]}</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Existing from SQL"
                      componentClassID="Microsoft.OLEDBSource"
                      contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                      description="OLE DB Source"
                      name="Existing from SQL"
                      usesDispositions="true"
                      version="7">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">0</property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the database object used to open a rowset."
                          name="OpenRowset">[dbo].[vwContacts]</property>
                        <property
                          dataType="System.String"
                          description="Specifies the variable that contains the name of the database object used to open a rowset."
                          name="OpenRowsetVariable"></property>
                        <property
                          dataType="System.String"
                          description="The SQL command to be executed."
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">SELECT [Id] as SQlid , [AccountId] ,[PortalUploadQueueTargetsJSON]

FROM [Entities].[dbo].[ListingPortalUploadQueueTargets]with (NOLOCK)
WHERE [AccountId] = ?</property>
                        <property
                          dataType="System.String"
                          description="The variable that contains the SQL command to be executed."
                          name="SqlCommandVariable"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Boolean"
                          description="Forces the use of the DefaultCodePage property value when describing character data."
                          name="AlwaysUseDefaultCodePage">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the mode used to access the database."
                          name="AccessMode"
                          typeConverter="AccessMode">2</property>
                        <property
                          dataType="System.String"
                          description="The mappings between the parameters in the SQL command and variables."
                          name="ParameterMapping">"Parameter0:Input",{EE81ACF9-9058-4481-A346-732989159AA5};"Parameter1:Input",{C636B9BB-F6CF-468E-8044-D894A11A06E7};</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Existing from SQL.Connections[OleDbConnection]"
                          connectionManagerID="Package.ConnectionManagers[colsqlbi01v.Entities]"
                          connectionManagerRefId="Package.ConnectionManagers[colsqlbi01v.Entities]"
                          description="The OLE DB runtime connection used to access the database."
                          name="OleDbConnection" />
                      </connections>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Existing from SQL.Outputs[OLE DB Source Output]"
                          name="OLE DB Source Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Existing from SQL.Outputs[OLE DB Source Output].Columns[AccountId]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Existing from SQL.Outputs[OLE DB Source Output].ExternalColumns[AccountId]"
                              length="4"
                              lineageId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Existing from SQL.Outputs[OLE DB Source Output].Columns[AccountId]"
                              name="AccountId"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Existing from SQL.Outputs[OLE DB Source Output].Columns[SQlid]"
                              dataType="i4"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Existing from SQL.Outputs[OLE DB Source Output].ExternalColumns[SQlid]"
                              lineageId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Existing from SQL.Outputs[OLE DB Source Output].Columns[SQlid]"
                              name="SQlid"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Existing from SQL.Outputs[OLE DB Source Output].Columns[PortalUploadQueueTargetsJSON]"
                              dataType="nText"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Existing from SQL.Outputs[OLE DB Source Output].ExternalColumns[PortalUploadQueueTargetsJSON]"
                              lineageId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Existing from SQL.Outputs[OLE DB Source Output].Columns[PortalUploadQueueTargetsJSON]"
                              name="PortalUploadQueueTargetsJSON"
                              truncationRowDisposition="FailComponent" />
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Existing from SQL.Outputs[OLE DB Source Output].ExternalColumns[AccountId]"
                              codePage="1252"
                              dataType="str"
                              length="4"
                              name="AccountId" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Existing from SQL.Outputs[OLE DB Source Output].ExternalColumns[SQlid]"
                              dataType="i4"
                              name="SQlid" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Existing from SQL.Outputs[OLE DB Source Output].ExternalColumns[PortalUploadQueueTargetsJSON]"
                              dataType="nText"
                              name="PortalUploadQueueTargetsJSON" />
                          </externalMetadataColumns>
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Existing from SQL.Outputs[OLE DB Source Error Output]"
                          isErrorOut="true"
                          name="OLE DB Source Error Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Existing from SQL.Outputs[OLE DB Source Error Output].Columns[SQlid]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Existing from SQL.Outputs[OLE DB Source Error Output].Columns[SQlid]"
                              name="SQlid" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Existing from SQL.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Existing from SQL.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Existing from SQL.Outputs[OLE DB Source Error Output].Columns[PortalUploadQueueTargetsJSON]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Existing from SQL.Outputs[OLE DB Source Error Output].Columns[PortalUploadQueueTargetsJSON]"
                              name="PortalUploadQueueTargetsJSON" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Existing from SQL.Outputs[OLE DB Source Error Output].Columns[AccountId]"
                              codePage="1252"
                              dataType="str"
                              length="4"
                              lineageId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Existing from SQL.Outputs[OLE DB Source Error Output].Columns[AccountId]"
                              name="AccountId" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Existing from SQL.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Existing from SQL.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Extract dispatch status"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="JSON Parser Transform; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="Parse incoming JSON String into columns. You can also parse and transform single JSON record into multiple rows by filtering data based on JSON Path (e.g. $.Customer.Orders[*])"
                      name="Extract dispatch status"
                      usesDispositions="true"
                      version="2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for any numeric data types"
                          expressionType="Notify"
                          name="TreatBlankNumberAsNull">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for bool data types"
                          expressionType="Notify"
                          name="TreatBlankBoolAsNull">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for any date/time data types"
                          expressionType="Notify"
                          name="TreatBlankDateAsNull">true</property>
                        <property
                          dataType="System.Int32"
                          description="Encoding of source file"
                          expressionType="Notify"
                          name="Encoding"
                          typeConverter="ZappySys.Common.EncodingType">0</property>
                        <property
                          dataType="System.String"
                          description="Character set for text (e.g. utf-8 )"
                          expressionType="Notify"
                          name="CharacterSet"></property>
                        <property
                          dataType="System.String"
                          description="Sample JSON data used to parse output columns."
                          expressionType="Notify"
                          name="SampleData"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">{"dispatch_status":"aborted","error_details":null,"xml_file_name":null,"response_log_file":null,"unique_listing_id":"HRT017912872","listing_portal_id":"3","listing_id":"434","alt_id_to_send":"HRT017912872","premium_settings":null,"listing_portal_meta_data":{"remote_listing_id":64987450,"last_action":"remove"},"queue":{"id":"3","job_status":"complete","system_ctime":"1545049063","start_time":"1545050879","completion_time":"1545050879","sqs_job_id":"f1afaa1a-d653-4244-b66b-750e5d","listing_status_to_send":"current"},"portal_profile":null,"id":"3"}</property>
                        <property
                          dataType="System.Boolean"
                          description="Include all upstream parent columns into output except the one you selected to parse. By default only parsed columns from Input document is included in the output. If you wish to include all other upstream columns in the output too then check this option."
                          expressionType="Notify"
                          name="OutputAllUpstreamColumns">true</property>
                        <property
                          dataType="System.Int32"
                          description="Defines how to handle empty input. By default NULL or Empty input is skipped from parsing."
                          expressionType="Notify"
                          name="EmptyInputProcessingMode"
                          typeConverter="ZappySys.Common.Data.EmptyInputProcessingMode">0</property>
                        <property
                          dataType="System.String"
                          description="Defines how to handle empty input. By default NULL or Empty input is skipped from parsing."
                          expressionType="Notify"
                          name="TreatEmptyInputAs">{ }</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum JSON records to fetch. Set this value to 0 for all records"
                          expressionType="Notify"
                          name="MaxRows">0</property>
                        <property
                          dataType="System.String"
                          description="Enter expression here to filter data.(Example:  $.Users[*].UserName ) This will fetch User names from users records"
                          expressionType="Notify"
                          name="Filter"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.Boolean"
                          description="Use this option to include parent properties (Non array) in the output along with Filtered Rows"
                          expressionType="Notify"
                          name="IncludeParentColumns">true</property>
                        <property
                          dataType="System.Boolean"
                          description="By default child and parent information is not included in the output if children not found for specified expression. For example if you want to extract all orders from all customers nodes then you can type $.Customers[*].Orders[*]. This will fetch all orders from all customers. By default customers records without orders wont be included in the output. If you want to include those customers where orders not found then check this option (Output null information for order attributes). This behavior is similar to LEFT OUTER JOIN in SQL (Left side is parent, right side is child). This option is ***resource intensive*** so only check if you really care about this behavior."
                          expressionType="Notify"
                          name="IncludeParentColumnsWhenChildMissing">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to true if you want to output parent columns which are array. By default any parent column which is an array is not included in output. See also FilterForParentColumnsWithArrayType property if you set this property"
                          expressionType="Notify"
                          name="IncludeParentColumnsWithArrayType">false</property>
                        <property
                          dataType="System.String"
                          description="Filter expression to extract value form parent"
                          expressionType="Notify"
                          name="FilterForParentColumnsWithArrayType"></property>
                        <property
                          dataType="System.String"
                          description="Prefix for parent column name. This option is only valid if you have set IncludeParentColumns=True"
                          expressionType="Notify"
                          name="ParentColumnPrefix">P_</property>
                        <property
                          dataType="System.Boolean"
                          description="Throw error if property name specified in filter expression is missing. By default it will ignore any missing property errors."
                          expressionType="Notify"
                          name="ThrowErrorIfPropertyMissing">false</property>
                        <property
                          dataType="System.Int32"
                          description="This property how many nested levels should be scanned to fetch various properties. 0=Scan all child levels."
                          expressionType="Notify"
                          name="MaxLevelsToScan">0</property>
                        <property
                          dataType="System.String"
                          description="List comma separated property names from JSON document which you want to exclude from output. Specify parent property name to exclude all child nodes."
                          expressionType="Notify"
                          name="ExcludedProperties"></property>
                        <property
                          dataType="System.String"
                          description="Property level separator used in generated property name (separator for outer properties - Above selected filter node). Use this if default separator is producing duplicate property name which is conflicting with existing name."
                          expressionType="Notify"
                          name="LevelSeparator">_</property>
                        <property
                          dataType="System.Boolean"
                          description="Enables deep array flattening for selected filtered hierarchy. When you turn on this property it will flatten each property of each array item and expose as column (e.g. If you have Filter set as $.customers[*] and for each customer you have an array of Addresses then you may see output columns like Addresses.1.City, Addresses.1.State, Addresses.2.City, Addresses.2.State .... Addresses.N.City, Addresses.N.State). You can control how many array items you want to flatten by setting MaxArrayItemsToFlatten property."
                          expressionType="Notify"
                          name="EnableArrayFlattening">false</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum number of array items to flatten. inner array flattening. Adjust this property to control how many columns being generated. This option is ignored if you set EnableArrayFlattening=false"
                          expressionType="Notify"
                          name="MaxArrayItemsToFlatten">10</property>
                        <property
                          dataType="System.String"
                          description="Specifies how custom date formatted strings are parsed when reading JSON."
                          expressionType="Notify"
                          name="DateFormatString"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies how date formatted strings, e.g. Date(1198908717056) and 2012-03-21T05:40Z, are parsed when reading JSON."
                          expressionType="Notify"
                          name="DateParseHandling"
                          typeConverter="ZappySys.Common.DateParseHandling">1</property>
                        <property
                          dataType="System.Boolean"
                          description="Indent JSON output so its easy to read."
                          expressionType="Notify"
                          name="IndentOutput">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Output as raw JSON document rather than parsing individual fields. This option is helpful if you have documents stored in a file and you want to pass them downstream as raw JSON string rather than parsing into columns."
                          expressionType="Notify"
                          name="OutputRawDocument">false</property>
                        <property
                          dataType="System.Boolean"
                          description="When this property is true then Column is converted to Row. Pivoted names will appear under  Pivot_Name column and values will appear under Pivot_Value field."
                          expressionType="Notify"
                          name="EnablePivot">false</property>
                        <property
                          dataType="System.Int32"
                          description="Array Transformation you want to apply. Useful for case when you have 2-Dimensional arrays with rows/columns in separate arrays."
                          expressionType="Notify"
                          name="ArrayTransformationType"
                          typeConverter="ZappySys.Json.ArrayTransformType">0</property>
                        <property
                          dataType="System.String"
                          description="Filter expression to use to extract column names for array transformation."
                          expressionType="Notify"
                          name="ArrayTransColumnNameFilter"></property>
                        <property
                          dataType="System.String"
                          description="Filter expression for row values (Not applicable for simple array transformation)."
                          expressionType="Notify"
                          name="ArrayTransRowValueFilter"></property>
                        <property
                          dataType="System.Boolean"
                          description="When you have 2D array but don't have column list specified in a separate array then use this option (e.g. { arr: [[10,11],[21,22]] } ). If you selected Column less array or JSON Lines option then this property means Column Names coming from First Line of array."
                          expressionType="Notify"
                          name="ArrayTransEnableCustomColumns">false</property>
                        <property
                          dataType="System.String"
                          description="When you have 2D array but don't have column list specified in a separate array then use specify column names here. Use comma separated list (e.g col1,col2,col3 ). Column name Order must match value order."
                          expressionType="Notify"
                          name="ArrayTransCustomColumns"></property>
                        <property
                          dataType="System.Int32"
                          description="Metadata scan mode controls how data type and length is determined. By default few records scanned to determine datatype/length. Changing ScanMode affects length/datatype accuracy."
                          expressionType="Notify"
                          name="MetaDataScanMode"
                          typeConverter="ZappySys.Common.Data.MetaDataScanMode">4</property>
                        <property
                          dataType="System.Int32"
                          description="Length for all string column. This option is only valid for MetaDataScanMode=Custom"
                          expressionType="Notify"
                          name="MetaDataCustomLength">1000</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.JsonParserTransform</property>
                        <property
                          dataType="System.Boolean"
                          name="EnableBigNumberHandling">false</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Extract dispatch status.Inputs[JsonParserTransformInput]"
                          errorRowDisposition="FailComponent"
                          name="JsonParserTransformInput"
                          truncationRowDisposition="FailComponent">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Extract dispatch status.Inputs[JsonParserTransformInput].Columns[PortalUploadQueueTargetsJSON]"
                              cachedDataType="nText"
                              cachedName="PortalUploadQueueTargetsJSON"
                              lineageId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Existing from SQL.Outputs[OLE DB Source Output].Columns[PortalUploadQueueTargetsJSON]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Extract dispatch status.Inputs[JsonParserTransformInput].Columns[AccountId]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="4"
                              cachedName="AccountId"
                              lineageId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Existing from SQL.Outputs[OLE DB Source Output].Columns[AccountId]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Extract dispatch status.Outputs[JsonParserTransformOutput].Columns[AccountId]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Extract dispatch status.Inputs[JsonParserTransformInput].Columns[SQlid]"
                              cachedDataType="i4"
                              cachedName="SQlid"
                              lineageId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Existing from SQL.Outputs[OLE DB Source Output].Columns[SQlid]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Extract dispatch status.Outputs[JsonParserTransformOutput].Columns[SQlid]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True" />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Extract dispatch status.Outputs[JsonParserTransformOutput]"
                          errorOrTruncationOperation="Error"
                          errorRowDisposition="FailComponent"
                          name="JsonParserTransformOutput"
                          truncationRowDisposition="FailComponent">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Extract dispatch status.Outputs[JsonParserTransformOutput].Columns[SQlid]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Extract dispatch status.Outputs[JsonParserTransformOutput].Columns[SQlid]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Extract dispatch status.Inputs[JsonParserTransformInput].Columns[SQlid]"
                              name="SQlid" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Extract dispatch status.Outputs[JsonParserTransformOutput].Columns[AccountId]"
                              codePage="1252"
                              dataType="str"
                              length="4"
                              lineageId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Extract dispatch status.Outputs[JsonParserTransformOutput].Columns[AccountId]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Extract dispatch status.Inputs[JsonParserTransformInput].Columns[AccountId]"
                              name="AccountId" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Extract dispatch status.Outputs[JsonParserTransformOutput].Columns[dispatch_status]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Extract dispatch status.Outputs[JsonParserTransformOutput].ExternalColumns[dispatch_status]"
                              length="28"
                              lineageId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Extract dispatch status.Outputs[JsonParserTransformOutput].Columns[dispatch_status]"
                              name="dispatch_status" />
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Extract dispatch status.Outputs[JsonParserTransformOutput].ExternalColumns[dispatch_status]"
                              dataType="wstr"
                              length="28"
                              name="dispatch_status" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Extract dispatch status.Outputs[JsonParserTransformOutput].ExternalColumns[error_details]"
                              dataType="wstr"
                              length="1020"
                              name="error_details" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Extract dispatch status.Outputs[JsonParserTransformOutput].ExternalColumns[xml_file_name]"
                              dataType="wstr"
                              length="1020"
                              name="xml_file_name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Extract dispatch status.Outputs[JsonParserTransformOutput].ExternalColumns[response_log_file]"
                              dataType="wstr"
                              length="1020"
                              name="response_log_file" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Extract dispatch status.Outputs[JsonParserTransformOutput].ExternalColumns[unique_listing_id]"
                              dataType="wstr"
                              length="48"
                              name="unique_listing_id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Extract dispatch status.Outputs[JsonParserTransformOutput].ExternalColumns[listing_portal_id]"
                              dataType="wstr"
                              length="4"
                              name="listing_portal_id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Extract dispatch status.Outputs[JsonParserTransformOutput].ExternalColumns[listing_id]"
                              dataType="wstr"
                              length="12"
                              name="listing_id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Extract dispatch status.Outputs[JsonParserTransformOutput].ExternalColumns[alt_id_to_send]"
                              dataType="wstr"
                              length="48"
                              name="alt_id_to_send" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Extract dispatch status.Outputs[JsonParserTransformOutput].ExternalColumns[premium_settings]"
                              dataType="wstr"
                              length="1020"
                              name="premium_settings" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Extract dispatch status.Outputs[JsonParserTransformOutput].ExternalColumns[listing_portal_meta_data.remote_listing_id]"
                              dataType="i8"
                              name="listing_portal_meta_data.remote_listing_id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Extract dispatch status.Outputs[JsonParserTransformOutput].ExternalColumns[listing_portal_meta_data.last_action]"
                              dataType="wstr"
                              length="24"
                              name="listing_portal_meta_data.last_action" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Extract dispatch status.Outputs[JsonParserTransformOutput].ExternalColumns[queue.id]"
                              dataType="wstr"
                              length="4"
                              name="queue.id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Extract dispatch status.Outputs[JsonParserTransformOutput].ExternalColumns[queue.job_status]"
                              dataType="wstr"
                              length="32"
                              name="queue.job_status" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Extract dispatch status.Outputs[JsonParserTransformOutput].ExternalColumns[queue.system_ctime]"
                              dataType="wstr"
                              length="40"
                              name="queue.system_ctime" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Extract dispatch status.Outputs[JsonParserTransformOutput].ExternalColumns[queue.start_time]"
                              dataType="wstr"
                              length="40"
                              name="queue.start_time" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Extract dispatch status.Outputs[JsonParserTransformOutput].ExternalColumns[queue.completion_time]"
                              dataType="wstr"
                              length="40"
                              name="queue.completion_time" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Extract dispatch status.Outputs[JsonParserTransformOutput].ExternalColumns[queue.sqs_job_id]"
                              dataType="wstr"
                              length="120"
                              name="queue.sqs_job_id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Extract dispatch status.Outputs[JsonParserTransformOutput].ExternalColumns[queue.listing_status_to_send]"
                              dataType="wstr"
                              length="28"
                              name="queue.listing_status_to_send" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Extract dispatch status.Outputs[JsonParserTransformOutput].ExternalColumns[portal_profile]"
                              dataType="wstr"
                              length="1020"
                              name="portal_profile" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Extract dispatch status.Outputs[JsonParserTransformOutput].ExternalColumns[id]"
                              dataType="wstr"
                              length="4"
                              name="id" />
                          </externalMetadataColumns>
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Extract dispatch status.Outputs[JsonParserTransform Error Output]"
                          isErrorOut="true"
                          name="JsonParserTransform Error Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Extract dispatch status.Outputs[JsonParserTransform Error Output].Columns[SQlid]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Extract dispatch status.Outputs[JsonParserTransform Error Output].Columns[SQlid]"
                              name="SQlid" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Extract dispatch status.Outputs[JsonParserTransform Error Output].Columns[AccountId]"
                              codePage="1252"
                              dataType="str"
                              length="4"
                              lineageId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Extract dispatch status.Outputs[JsonParserTransform Error Output].Columns[AccountId]"
                              name="AccountId" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Extract dispatch status.Outputs[JsonParserTransform Error Output].Columns[dispatch_status]"
                              dataType="wstr"
                              length="28"
                              lineageId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Extract dispatch status.Outputs[JsonParserTransform Error Output].Columns[dispatch_status]"
                              name="dispatch_status" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Extract dispatch status.Outputs[JsonParserTransform Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Extract dispatch status.Outputs[JsonParserTransform Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Extract dispatch status.Outputs[JsonParserTransform Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Extract dispatch status.Outputs[JsonParserTransform Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Extract dispatch status.Outputs[JsonParserTransform Error Output].Columns[ErrorColumnName]"
                              codePage="1252"
                              dataType="str"
                              length="128"
                              lineageId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Extract dispatch status.Outputs[JsonParserTransform Error Output].Columns[ErrorColumnName]"
                              name="ErrorColumnName" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Extract dispatch status.Outputs[JsonParserTransform Error Output].Columns[ErrorMessage]"
                              dataType="wstr"
                              length="1024"
                              lineageId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Extract dispatch status.Outputs[JsonParserTransform Error Output].Columns[ErrorMessage]"
                              name="ErrorMessage" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Extract dispatch status.Outputs[JsonParserTransform Error Output].Columns[ErrorRawData]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Extract dispatch status.Outputs[JsonParserTransform Error Output].Columns[ErrorRawData]"
                              name="ErrorRawData" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Insert or Ignore"
                      componentClassID="Microsoft.ConditionalSplit"
                      contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
                      name="Insert or Ignore"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Insert or Ignore.Inputs[Conditional Split Input]"
                          description="Input to the Conditional Split Transformation"
                          name="Conditional Split Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Insert or Ignore.Inputs[Conditional Split Input].Columns[id]"
                              cachedDataType="i4"
                              cachedName="id"
                              cachedSortKeyPosition="1"
                              lineageId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[id]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Insert or Ignore.Inputs[Conditional Split Input].Columns[dispatch_status]"
                              cachedDataType="wstr"
                              cachedLength="4000"
                              cachedName="dispatch_status"
                              lineageId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[dispatch_status]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Insert or Ignore.Inputs[Conditional Split Input].Columns[SQlid]"
                              cachedDataType="i4"
                              cachedName="SQlid"
                              lineageId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[SQlid]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Insert or Ignore.Outputs[insert]"
                          description="Output 1 of the Conditional Split Transformation"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          exclusionGroup="1"
                          name="insert"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Insert or Ignore.Inputs[Conditional Split Input]"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                              name="Expression">[ISNULL](#{Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[SQlid]}) || #{Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[dispatch_status]} == "queued"</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the friendly version of the expression. This expression version uses column names."
                              expressionType="Notify"
                              name="FriendlyExpression">ISNULL(SQlid) || dispatch_status == "queued"</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                              name="EvaluationOrder">0</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Insert or Ignore.Outputs[ignore]"
                          description="Output 2 of the Conditional Split Transformation"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          exclusionGroup="1"
                          name="ignore"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Insert or Ignore.Inputs[Conditional Split Input]"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                              name="Expression">![ISNULL](#{Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[id]})</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the friendly version of the expression. This expression version uses column names."
                              expressionType="Notify"
                              name="FriendlyExpression">!ISNULL(id)</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                              name="EvaluationOrder">1</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Insert or Ignore.Outputs[Conditional Split Default Output]"
                          description="Default Output of the Conditional Split Transformation"
                          exclusionGroup="1"
                          name="Conditional Split Default Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Insert or Ignore.Inputs[Conditional Split Input]">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              name="IsDefaultOut">true</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Insert or Ignore.Outputs[Conditional Split Error Output]"
                          description="Error Output of the Conditional Split Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Conditional Split Error Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Insert or Ignore.Inputs[Conditional Split Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Insert or Ignore.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Insert or Ignore.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Insert or Ignore.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Insert or Ignore.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Merge Join To Find Those to Insert"
                      componentClassID="Microsoft.MergeJoin"
                      contactInfo="Merge Join;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Combine two sorted data flows into one using the FULL, LEFT, or INNER join. We recommend this transformation when data flows can be sorted at their sources."
                      name="Merge Join To Find Those to Insert"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of join to perform."
                          name="JoinType"
                          typeConverter="JoinType">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the number of columns in the ordering key."
                          name="NumKeyColumns">1</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the null values are treated as equal values."
                          name="TreatNullsAsEqual">true</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates the requested maximum buffers per input before blocking."
                          name="MaxBuffersPerInput">5</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Merge Join To Find Those to Insert.Inputs[Merge Join Left Input]"
                          hasSideEffects="true"
                          name="Merge Join Left Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Merge Join To Find Those to Insert.Inputs[Merge Join Left Input].Columns[id]"
                              cachedDataType="i4"
                              cachedName="id"
                              cachedSortKeyPosition="1"
                              lineageId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\API Sort.Outputs[Sort Output].Columns[id]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Merge Join To Find Those to Insert.Inputs[Merge Join Right Input]"
                          hasSideEffects="true"
                          name="Merge Join Right Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Merge Join To Find Those to Insert.Inputs[Merge Join Right Input].Columns[dispatch_status]"
                              cachedDataType="wstr"
                              cachedLength="28"
                              cachedName="dispatch_status"
                              lineageId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\SQL Sort.Outputs[Sort Output].Columns[dispatch_status]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Merge Join To Find Those to Insert.Inputs[Merge Join Right Input].Columns[AccountId]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="4"
                              cachedName="AccountId"
                              lineageId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\SQL Sort.Outputs[Sort Output].Columns[AccountId]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Merge Join To Find Those to Insert.Inputs[Merge Join Right Input].Columns[SQlid]"
                              cachedDataType="i4"
                              cachedName="SQlid"
                              cachedSortKeyPosition="1"
                              lineageId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\SQL Sort.Outputs[Sort Output].Columns[SQlid]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Merge Join To Find Those to Insert.Outputs[Merge Join Output]"
                          isSorted="true"
                          name="Merge Join Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[id]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[id]"
                              name="id"
                              sortKeyPosition="1">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Merge Join To Find Those to Insert.Inputs[Merge Join Left Input].Columns[id]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[dispatch_status]"
                              dataType="wstr"
                              length="4000"
                              lineageId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[dispatch_status]"
                              name="dispatch_status">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Merge Join To Find Those to Insert.Inputs[Merge Join Right Input].Columns[dispatch_status]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[AccountId]"
                              codePage="1252"
                              dataType="str"
                              length="4"
                              lineageId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[AccountId]"
                              name="AccountId">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Merge Join To Find Those to Insert.Inputs[Merge Join Right Input].Columns[AccountId]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[SQlid]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[SQlid]"
                              name="SQlid">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Merge Join To Find Those to Insert.Inputs[Merge Join Right Input].Columns[SQlid]}</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Multicast"
                      componentClassID="Microsoft.Multicast"
                      contactInfo="Multicast;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Distributes every input row to every row in one or more outputs. For example, branch your data flow to make a copy of data so that some values can be masked before sharing with external partners."
                      name="Multicast">
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Multicast.Inputs[Multicast Input 1]"
                          name="Multicast Input 1">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Multicast.Outputs[Multicast Output 1]"
                          deleteOutputOnPathDetached="true"
                          name="Multicast Output 1"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Multicast.Inputs[Multicast Input 1]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Multicast.Outputs[Multicast Output 3]"
                          dangling="true"
                          deleteOutputOnPathDetached="true"
                          name="Multicast Output 3"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Multicast.Inputs[Multicast Input 1]">
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Read details (throttled)"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Web API Destination; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="The Web API destination can be used to send data to Web API URL (e.g. Submit or POST data to REST API/SOAP or other HTTP/HTTPS endpoints)"
                      name="Read details (throttled)"
                      usesDispositions="true"
                      version="5">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">3</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.String"
                          description="API URL you want to access"
                          expressionType="Notify"
                          name="HttpRequestUrl">{{User::RexAPIWebURLv1}}rex/batch-requests/execute</property>
                        <property
                          dataType="System.String"
                          description="Http Web Request Method (e.g. POST, GET, PUT, LIST, DELETE...). Refer your API documentation if you are not sure which method you have to use."
                          expressionType="Notify"
                          name="HttpRequestMethod">POST</property>
                        <property
                          dataType="System.String"
                          description="Set this if you want to set custom Http headers. You may use variable anywhere in the header value using syntax {{User::YourVarName}}. Syntax of Header key value pair is : &amp;lt;request&amp;gt;&amp;lt;header&amp;gt;&amp;lt;name&amp;gt;x-myheader-1&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;AAA&amp;lt;/value&amp;gt;&amp;lt;/header&amp;gt; &amp;lt;header&amp;gt;&amp;lt;name&amp;gt;x-myheader-2&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;BBB&amp;lt;/value&amp;gt;&amp;lt;/header&amp;gt;&amp;lt;/request&amp;gt;"
                          expressionType="Notify"
                          name="HttpHeaders"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">&lt;request&gt;&lt;header&gt;&lt;name&gt;Accept&lt;/name&gt;&lt;value&gt;*/*&lt;/value&gt;&lt;/header&gt;&lt;header&gt;&lt;name&gt;Cache-Control&lt;/name&gt;&lt;value&gt;no-cache&lt;/value&gt;&lt;/header&gt;&lt;header&gt;&lt;name&gt;X-App-Identifier&lt;/name&gt;&lt;value&gt;client:spicerhaart:{{System::PackageName}}:{{System::TaskName}}&lt;/value&gt;&lt;/header&gt;&lt;header&gt;&lt;name&gt;Authorization&lt;/name&gt;&lt;value&gt;Bearer {{User::RexToken}}&lt;/value&gt;&lt;/header&gt;&lt;/request&gt;</property>
                        <property
                          dataType="System.String"
                          description="User defined data you wish to send along with your HTTP Request (e.g. Upload file data, Form POST data). Usually you have to set content-type of your data but if you select RequestMethod=POST then system will automatically set content-type=application/x-www-form-urlencoded."
                          expressionType="Notify"
                          name="HttpRequestData"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies content type for data you wish to POST. If you select Default option then system default content type will be used (i.e. application/x-www-form-urlencoded). If you specify Content-Type header along with this option then header value takes precedence."
                          expressionType="Notify"
                          name="HttpRequestContentType"
                          typeConverter="ZappySys.Common.Web.HttpRequestContentType">2</property>
                        <property
                          dataType="System.Boolean"
                          description="If this option is true then component will continue without exception on 404 error (Url not found). This allows you to consume data gracefully."
                          expressionType="Notify"
                          name="ContinueOnUrlNotFoundError">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Ignore SSL certificate related errors. Example: if you getting SSL/TLS errors because of certificate expired or certificate is not from trusted authority or certificate is self-signed. By checking this option you will not get SSL/TLS error."
                          expressionType="Notify"
                          name="IgnoreCertificateErrors">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Allow unsecure ciphers/suites and curves for SSLS/TLS communication. Use this option to communicate with web servers which needs legacy / unsecured ciphers support. This option is only trigged when you change default SSL/TLS Version on advanced settings tab."
                          expressionType="Notify"
                          name="AllowUnsecureSuite">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Enable support for gzip or deflate compression. When you check this option compressed response automatically de-compressed saving bandwidth. This option is only valid if web server supports compressed response stream. Check your API documentation for more information."
                          expressionType="Notify"
                          name="EnableCompressionSupport">true</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies which security protocol is supported for HTTPS communication. Using this option you can enable legacy protocol or enforce to use latest version of security protocol (Note: TLS 1.2 is only supported in SSIS 2014 or Higher)."
                          expressionType="Notify"
                          name="SecurityProtocol"
                          typeConverter="ZappySys.PowerPack.Common.HttpsSecurityProtocolType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Wait time in milliseconds (Pause after each request). 0=No wait. Use this delay time if your API has limit on how many requests you can make in certain time frame."
                          expressionType="Notify"
                          name="WaitTime">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you redirect error to error output by default you get additional information in ErrorMessage column. Check this option if you need exact Response Body (Useful if its in JSON/XML format which needs to be parsed for additional information for later step)."
                          expressionType="Notify"
                          name="OnErrorOutputResponseBody">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Enable multiple requests using parallel threads."
                          expressionType="Notify"
                          name="EnableParallelRequests">false</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum parallel threads to use for processing multiple web requests."
                          expressionType="Notify"
                          name="MaxParallelThreads">1</property>
                        <property
                          dataType="System.Boolean"
                          description="By default one request is sent for each input row. If your API supports multiple records in a single call via HTTP Body then enable this setting. See also BodyBatchSize, BodyHeader, BodyFooter and BodyRowSeparator property."
                          expressionType="Notify"
                          name="EnableBodyBatch">true</property>
                        <property
                          dataType="System.String"
                          description="When you have to wrap input content between opening and closing tags for each call then set this property to specify opening for body content. For Example if you want to build Body like this (send max 100 rows per call) ==&gt; { records : [ {...}, {...}, {...} ] } then you can set BatchSize=100, BodyHeader as &quot;{ records: [&quot; , BodyFooter as &quot;] }&quot; and BodyRowSeperator as comma {,}. This property is ignored if EnableBodyBatch=false."
                          expressionType="Notify"
                          name="BodyHeader">{   "requests": [</property>
                        <property
                          dataType="System.String"
                          description="When you have to wrap input content between opening and closing tags for each call then set this property to specify closing for body content. For Example if you want to build Body like this (send max 100 rows per call) ==&gt; { records : [ {...}, {...}, {...} ] } then you can set BatchSize=100, BodyHeader as &quot;{ records: [&quot; , BodyFooter as &quot;] }&quot; and BodyRowSeperator as comma {,}. This property is ignored if EnableBodyBatch=false."
                          expressionType="Notify"
                          name="BodyFooter">]}</property>
                        <property
                          dataType="System.Int32"
                          description="If your API supports multiple records via HTTP Body then change this setting &gt; 1 to include multiple upstream records into single call. See also BodyHeader, BodyFooter and BodyRowSeparator property. This property is ignored if EnableBodyBatch=false."
                          expressionType="Notify"
                          name="BodyBatchSize">250</property>
                        <property
                          dataType="System.String"
                          description="When you submit multiple rows in a batch you can separate multiple documents / records using custom separator (e.g. in JSON Array you can use comma {,} as record separator if POST document is in array format [ {...}, {...}, {...} ] ). For last row of batch blank separator is used."
                          expressionType="Notify"
                          name="BodyRowSeparator">,</property>
                        <property
                          dataType="System.Boolean"
                          description="Returns response data as binary data (e.g. Byte Array). Check this option is response is Zip file, Image file or any non text data which needs to be exported as raw data without any encoding."
                          expressionType="Notify"
                          name="TreatResponseAsBinary">false</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.WebApiDestination</property>
                        <property
                          dataType="System.Boolean"
                          description="Check this option if you want to upload file(s) (i.e. POST RAW file data) or send data using Multi-Part encoding method (i.e. Content-Type: multipart/form-data). Multi-Part request allows you to mix key/value and upload files in same request. On the other hand raw upload allows only single file upload (without any key/value) &#xA;&#xA;==== Raw Upload (Content-Type: application/octet-stream) =====   &#xA;To upload single file in raw mode check this option and specify full file path starting with @ sign in the Body (e.g.  @c:\data\myfile.zip ) &#xA;&#xA;==== Form-Data / Multipart Upload (Content-Type: multipart/form-data) =====   &#xA;To treat your Request data as multi part fields you must specify key/value pairs separated by new lines into RequestData field (i.e. Body). Each key value pair is entered on new-line and key/value are separated using equal sign (=). Preceding and trailing spaces are ignored also blank lines are ignored. &#xA;If field value has some any special character(s) then use escape sequence (e.g. For NewLine: \r\n, For Tab: \t, For at (@): \@). When value of any field starts with at sign (@) its automatically treated as File you want to upload. By default file content type is determined based on extension however you can supply content type manually for any field using this way [ fieldname.Content-Type=some content type ]. In below example we have supplied Content-Type for file2 and SomeField1, all other fields are using default content-type.&#xA;See below Example of uploading multiple files along with additional fields.&#xA;&#xA;file1=@c:\data\Myfile1.txt&#xA;file2=@c:\data\Myfile2.json&#xA;file2.Content-Type=application/json&#xA;SomeField1=aaaaaaa&#xA;SomeField1.Content-Type=text/plain&#xA;SomeField2=12345&#xA;SomeFieldWithNewLineAndTab=This is line1\r\nThis is line2\r\nThis is \ttab \ttab \ttab&#xA;SomeFieldStartingWithAtSign=\@MyTwitterHandle&#xA;"
                          expressionType="Notify"
                          name="IsMultiPartUpload">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Enable this option if your server is expecting &#xA; (i.e. CRLF) after last Multi-Part boundary in the Body. This option is only applicable if you enabled IsMultiPartUpload and sending data in Key=value format (i.e. Mutipart). For raw file upload this option has no effect."
                          expressionType="Notify"
                          name="AddMultiPartPostamble">false</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Read details (throttled).Connections[Connection]"
                          connectionManagerID="Package.ConnectionManagers[HTTP 1]"
                          connectionManagerRefId="Package.ConnectionManagers[HTTP 1]"
                          description="Connection manager for authentication (e.g. HTTP or OAuth Connection)"
                          name="Connection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Read details (throttled).Inputs[WebApiDestinationInput]"
                          errorRowDisposition="FailComponent"
                          hasSideEffects="true"
                          name="WebApiDestinationInput"
                          truncationRowDisposition="FailComponent">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Read details (throttled).Inputs[WebApiDestinationInput].Columns[TemplateOutput]"
                              cachedDataType="nText"
                              cachedName="TemplateOutput"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Read details (throttled).Inputs[WebApiDestinationInput].ExternalColumns[HttpRequestData]"
                              lineageId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Template Transform.Outputs[TemplateTransformOutput].Columns[TemplateOutput]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Read details (throttled).Inputs[WebApiDestinationInput].ExternalColumns[HttpRequestUrl]"
                              dataType="wstr"
                              length="2000"
                              name="HttpRequestUrl" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Read details (throttled).Inputs[WebApiDestinationInput].ExternalColumns[HttpRequestData]"
                              dataType="nText"
                              name="HttpRequestData" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Read details (throttled).Inputs[WebApiDestinationInput].ExternalColumns[HttpHeaders]"
                              dataType="wstr"
                              length="2000"
                              name="HttpHeaders" />
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Read details (throttled).Outputs[WebApiDestination Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="WebApiDestination Error Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Read details (throttled).Inputs[WebApiDestinationInput]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Read details (throttled).Outputs[WebApiDestination Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Read details (throttled).Outputs[WebApiDestination Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Read details (throttled).Outputs[WebApiDestination Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Read details (throttled).Outputs[WebApiDestination Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Read details (throttled).Outputs[WebApiDestination Error Output].Columns[ErrorColumnName]"
                              codePage="1252"
                              dataType="str"
                              length="128"
                              lineageId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Read details (throttled).Outputs[WebApiDestination Error Output].Columns[ErrorColumnName]"
                              name="ErrorColumnName" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Read details (throttled).Outputs[WebApiDestination Error Output].Columns[ErrorMessage]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Read details (throttled).Outputs[WebApiDestination Error Output].Columns[ErrorMessage]"
                              name="ErrorMessage" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Read details (throttled).Outputs[Response Output]"
                          exclusionGroup="1"
                          name="Response Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Read details (throttled).Inputs[WebApiDestinationInput]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Read details (throttled).Outputs[Response Output].Columns[ResponseText]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Read details (throttled).Outputs[Response Output].Columns[ResponseText]"
                              name="ResponseText" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Read details (throttled).Outputs[Response Output].Columns[StatusCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Read details (throttled).Outputs[Response Output].Columns[StatusCode]"
                              name="StatusCode" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\record"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="JSON Parser Transform; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="Parse incoming JSON String into columns. You can also parse and transform single JSON record into multiple rows by filtering data based on JSON Path (e.g. $.Customer.Orders[*])"
                      name="record"
                      usesDispositions="true"
                      version="2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">3</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for any numeric data types"
                          expressionType="Notify"
                          name="TreatBlankNumberAsNull">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for bool data types"
                          expressionType="Notify"
                          name="TreatBlankBoolAsNull">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for any date/time data types"
                          expressionType="Notify"
                          name="TreatBlankDateAsNull">true</property>
                        <property
                          dataType="System.String"
                          description="Sample JSON data used to parse output columns."
                          expressionType="Notify"
                          name="SampleData"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">{"result":[{"id":"3786276","dispatch_status":"upload_succeeded","error_details":null,"xml_file_name":"2604:11586.json","response_log_file":null,"unique_listing_id":"RX34595","listing_portal_id":"58896","alt_id_to_send":null,"premium_settings":null,"listing_portal_meta_data":{"remote_listing_id":8956040,"remote_listing_url":"https:\/\/www.onthemarket.com\/details\/8956040","last_action":"send"},"queue":{"id":"2113860","job_status":"complete","system_ctime":"1600961771","start_time":"1600961788","completion_time":"1600961793","sqs_job_id":"a53f7165-dd20-4983-89bc-c97be6","listing_status_to_send":"current"},"portal_profile":{"id":11,"profile_name":"OnTheMarket SH","profile_agency_id":"2604:11586","portal_definition":{"portal_name":"OnTheMarket SH","portal_state":"active","ftp_ssl":null,"xml_format":"uk_onthemarket","log_parsing_supported":null,"user_metadata_supported":null,"restricted_to_country":null,"ftp_activepassive":null,"is_system":1,"available_for_category_ids":["commercial_rental","commercial_sale","land_sale","residential_rental","residential_sale"],"id":"7"}},"listing":{"id":34595,"listing_category_name":null,"listing_agent_1":{"id":"19527","name":"Nick Siequien","first_name":"Nick","last_name":"Siequien","email_address":"nick.siequien@haart.co.uk","phone_direct":null,"phone_mobile":"447418346975","position":"Senior Property Marketing Consultant","is_account_user":"1","profile_image":null},"listing_agent_2":{"id":"19523","name":"Deana Sultan","first_name":"Deana","last_name":"Sultan","email_address":"deana.sultan@haart.co.uk","phone_direct":null,"phone_mobile":"447418346974","position":"Residential Sales Consultant","is_account_user":"1","profile_image":null},"system_listing_state":"current","price_advertise_as":"\u00a3200,000","available_from_date":null,"meta_other_features":null,"state_value_price":null,"state_date":null,"listing_category":{"id":"residential_sale","text":"Residential Sale"},"listing_subcategory_1":null,"property":{"system_search_key":"56 Wenford, Milton Keynes, Milton Keynes MK10 7AL","adr_longitude":null,"adr_latitude":null,"adr_unit_number":null,"adr_street_number":"56","adr_street_name":"Wenford","adr_state_or_region":"Milton Keynes","adr_locality":null,"adr_suburb_or_town":"Milton Keynes","adr_postcode":"MK10 7AL","adr_country":"uk","adr_estate_name":null,"adr_estate_stage":null,"system_owner_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"adr_building":null,"property_category":{"id":"residential","text":"Residential"},"property_image":{"uri":"rexlive:\/\/1753\/listings\/34595\/images\/img_8304-img_8306_cef1-92ec-1ca9-3339-43f4-68d2-54db-2275_20200721055804.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1753\/listings\/34595\/images\/img_8304-img_8306_cef1-92ec-1ca9-3339-43f4-68d2-54db-2275_20200721055804.jpg","thumbs":{"800x600":{"uri":"rexlive:\/\/1753\/listings\/34595\/images\/img_8304-img_8306_cef1-92ec-1ca9-3339-43f4-68d2-54db-2275_20200721055804_800x600.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1753\/listings\/34595\/images\/img_8304-img_8306_cef1-92ec-1ca9-3339-43f4-68d2-54db-2275_20200721055804_800x600.jpg"},"400x300":{"uri":"rexlive:\/\/1753\/listings\/34595\/images\/img_8304-img_8306_cef1-92ec-1ca9-3339-43f4-68d2-54db-2275_20200721055804_400x300.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1753\/listings\/34595\/images\/img_8304-img_8306_cef1-92ec-1ca9-3339-43f4-68d2-54db-2275_20200721055804_400x300.jpg"},"200x150":{"uri":"rexlive:\/\/1753\/listings\/34595\/images\/img_8304-img_8306_cef1-92ec-1ca9-3339-43f4-68d2-54db-2275_20200721055804_200x150.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1753\/listings\/34595\/images\/img_8304-img_8306_cef1-92ec-1ca9-3339-43f4-68d2-54db-2275_20200721055804_200x150.jpg"},"80x60":{"uri":"rexlive:\/\/1753\/listings\/34595\/images\/img_8304-img_8306_cef1-92ec-1ca9-3339-43f4-68d2-54db-2275_20200721055804_80x60.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1753\/listings\/34595\/images\/img_8304-img_8306_cef1-92ec-1ca9-3339-43f4-68d2-54db-2275_20200721055804_80x60.jpg"}}},"etag":"427588-1598616469","id":"427588"},"listing_primary_image":{"uri":"rexlive:\/\/1753\/listings\/34595\/images\/img_8304-img_8306_cef1-92ec-1ca9-3339-43f4-68d2-54db-2275_20200721055804.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1753\/listings\/34595\/images\/img_8304-img_8306_cef1-92ec-1ca9-3339-43f4-68d2-54db-2275_20200721055804.jpg","thumbs":{"800x600":{"uri":"rexlive:\/\/1753\/listings\/34595\/images\/img_8304-img_8306_cef1-92ec-1ca9-3339-43f4-68d2-54db-2275_20200721055804_800x600.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1753\/listings\/34595\/images\/img_8304-img_8306_cef1-92ec-1ca9-3339-43f4-68d2-54db-2275_20200721055804_800x600.jpg"},"400x300":{"uri":"rexlive:\/\/1753\/listings\/34595\/images\/img_8304-img_8306_cef1-92ec-1ca9-3339-43f4-68d2-54db-2275_20200721055804_400x300.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1753\/listings\/34595\/images\/img_8304-img_8306_cef1-92ec-1ca9-3339-43f4-68d2-54db-2275_20200721055804_400x300.jpg"},"200x150":{"uri":"rexlive:\/\/1753\/listings\/34595\/images\/img_8304-img_8306_cef1-92ec-1ca9-3339-43f4-68d2-54db-2275_20200721055804_200x150.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1753\/listings\/34595\/images\/img_8304-img_8306_cef1-92ec-1ca9-3339-43f4-68d2-54db-2275_20200721055804_200x150.jpg"},"80x60":{"uri":"rexlive:\/\/1753\/listings\/34595\/images\/img_8304-img_8306_cef1-92ec-1ca9-3339-43f4-68d2-54db-2275_20200721055804_80x60.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1753\/listings\/34595\/images\/img_8304-img_8306_cef1-92ec-1ca9-3339-43f4-68d2-54db-2275_20200721055804_80x60.jpg"}}},"location":{"id":"13","text":"haart of Milton Keynes"},"project_stage":null}}],"error":null,"correlation":{"request_id":"1066832c-3f73-443c-936b-ce51ba22feb1","correlation_id":"1066832c-3f73-443c-936b-ce51ba22feb1","async_correlation_id":"1066832c-3f73-443c-936b-ce51ba22feb1"}}
</property>
                        <property
                          dataType="System.Boolean"
                          description="Include all upstream parent columns into output except the one you selected to parse. By default only parsed columns from Input document is included in the output. If you wish to include all other upstream columns in the output too then check this option."
                          expressionType="Notify"
                          name="OutputAllUpstreamColumns">true</property>
                        <property
                          dataType="System.Int32"
                          description="Defines how to handle empty input. By default NULL or Empty input is skipped from parsing."
                          expressionType="Notify"
                          name="EmptyInputProcessingMode"
                          typeConverter="ZappySys.Common.Data.EmptyInputProcessingMode">0</property>
                        <property
                          dataType="System.String"
                          description="Defines how to handle empty input. By default NULL or Empty input is skipped from parsing."
                          expressionType="Notify"
                          name="TreatEmptyInputAs">{ }</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum JSON records to fetch. Set this value to 0 for all records"
                          expressionType="Notify"
                          name="MaxRows">0</property>
                        <property
                          dataType="System.String"
                          description="Enter expression here to filter data.(Example:  $.Users[*].UserName ) This will fetch User names from users records"
                          expressionType="Notify"
                          name="Filter"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">$.result[*]</property>
                        <property
                          dataType="System.Boolean"
                          description="Use this option to include parent properties (Non array) in the output along with Filtered Rows"
                          expressionType="Notify"
                          name="IncludeParentColumns">true</property>
                        <property
                          dataType="System.Boolean"
                          description="By default child and parent information is not included in the output if children not found for specified expression. For example if you want to extract all orders from all customers nodes then you can type $.Customers[*].Orders[*]. This will fetch all orders from all customers. By default customers records without orders wont be included in the output. If you want to include those customers where orders not found then check this option (Output null information for order attributes). This behavior is similar to LEFT OUTER JOIN in SQL (Left side is parent, right side is child). This option is ***resource intensive*** so only check if you really care about this behavior."
                          expressionType="Notify"
                          name="IncludeParentColumnsWhenChildMissing">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to true if you want to output parent columns which are array. By default any parent column which is an array is not included in output. See also FilterForParentColumnsWithArrayType property if you set this property"
                          expressionType="Notify"
                          name="IncludeParentColumnsWithArrayType">false</property>
                        <property
                          dataType="System.String"
                          description="Filter expression to extract value form parent"
                          expressionType="Notify"
                          name="FilterForParentColumnsWithArrayType"></property>
                        <property
                          dataType="System.String"
                          description="Prefix for parent column name. This option is only valid if you have set IncludeParentColumns=True"
                          expressionType="Notify"
                          name="ParentColumnPrefix">P_</property>
                        <property
                          dataType="System.Boolean"
                          description="Throw error if property name specified in filter expression is missing. By default it will ignore any missing property errors."
                          expressionType="Notify"
                          name="ThrowErrorIfPropertyMissing">false</property>
                        <property
                          dataType="System.Int32"
                          description="This property how many nested levels should be scanned to fetch various properties. 0=Scan all child levels."
                          expressionType="Notify"
                          name="MaxLevelsToScan">0</property>
                        <property
                          dataType="System.String"
                          description="List comma separated property names from JSON document which you want to exclude from output. Specify parent property name to exclude all child nodes."
                          expressionType="Notify"
                          name="ExcludedProperties"></property>
                        <property
                          dataType="System.String"
                          description="Property level separator used in generated property name (separator for outer properties - Above selected filter node). Use this if default separator is producing duplicate property name which is conflicting with existing name."
                          expressionType="Notify"
                          name="LevelSeparator">_</property>
                        <property
                          dataType="System.Boolean"
                          description="Enables deep array flattening for selected filtered hierarchy. When you turn on this property it will flatten each property of each array item and expose as column (e.g. If you have Filter set as $.customers[*] and for each customer you have an array of Addresses then you may see output columns like Addresses.1.City, Addresses.1.State, Addresses.2.City, Addresses.2.State .... Addresses.N.City, Addresses.N.State). You can control how many array items you want to flatten by setting MaxArrayItemsToFlatten property."
                          expressionType="Notify"
                          name="EnableArrayFlattening">false</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum number of array items to flatten. inner array flattening. Adjust this property to control how many columns being generated. This option is ignored if you set EnableArrayFlattening=false"
                          expressionType="Notify"
                          name="MaxArrayItemsToFlatten">10</property>
                        <property
                          dataType="System.String"
                          description="Specifies how custom date formatted strings are parsed when reading JSON."
                          expressionType="Notify"
                          name="DateFormatString"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies how date formatted strings, e.g. Date(1198908717056) and 2012-03-21T05:40Z, are parsed when reading JSON."
                          expressionType="Notify"
                          name="DateParseHandling"
                          typeConverter="ZappySys.Common.DateParseHandling">1</property>
                        <property
                          dataType="System.Boolean"
                          description="Output as raw JSON document rather than parsing individual fields. This option is helpful if you have documents stored in a file and you want to pass them downstream as raw JSON string rather than parsing into columns."
                          expressionType="Notify"
                          name="OutputRawDocument">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Indent JSON output so its easy to read."
                          expressionType="Notify"
                          name="IndentOutput">true</property>
                        <property
                          dataType="System.Boolean"
                          description="When this property is true then Column is converted to Row. Pivoted names will appear under  Pivot_Name column and values will appear under Pivot_Value field."
                          expressionType="Notify"
                          name="EnablePivot">false</property>
                        <property
                          dataType="System.Int32"
                          description="Array Transformation you want to apply. Useful for case when you have 2-Dimensional arrays with rows/columns in separate arrays."
                          expressionType="Notify"
                          name="ArrayTransformationType"
                          typeConverter="ZappySys.Json.ArrayTransformType">0</property>
                        <property
                          dataType="System.String"
                          description="Filter expression to use to extract column names for array transformation."
                          expressionType="Notify"
                          name="ArrayTransColumnNameFilter"></property>
                        <property
                          dataType="System.String"
                          description="Filter expression for row values (Not applicable for simple array transformation)."
                          expressionType="Notify"
                          name="ArrayTransRowValueFilter"></property>
                        <property
                          dataType="System.Boolean"
                          description="When you have 2D array but don't have column list specified in a separate array then use this option (e.g. { arr: [[10,11],[21,22]] } )."
                          expressionType="Notify"
                          name="ArrayTransEnableCustomColumns">false</property>
                        <property
                          dataType="System.String"
                          description="When you have 2D array but don't have column list specified in a separate array then use specify column names here. Use comma separated list (e.g col1,col2,col3 ). Column name Order must match value order."
                          expressionType="Notify"
                          name="ArrayTransCustomColumns"></property>
                        <property
                          dataType="System.Int32"
                          description="Metadata scan mode controls how data type and length is determined. By default few records scanned to determine datatype/length. Changing ScanMode affects length/datatype accuracy."
                          expressionType="Notify"
                          name="MetaDataScanMode"
                          typeConverter="ZappySys.Common.Data.MetaDataScanMode">4</property>
                        <property
                          dataType="System.Int32"
                          description="Length for all string column. This option is only valid for MetaDataScanMode=Custom"
                          expressionType="Notify"
                          name="MetaDataCustomLength">1000</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.JsonParserTransform</property>
                        <property
                          dataType="System.Boolean"
                          name="EnableBigNumberHandling">false</property>
                        <property
                          dataType="System.Int32"
                          name="Encoding">0</property>
                        <property
                          dataType="System.String"
                          name="CharacterSet"></property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\record.Inputs[JsonParserTransformInput]"
                          errorRowDisposition="FailComponent"
                          name="JsonParserTransformInput"
                          truncationRowDisposition="FailComponent">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\record.Inputs[JsonParserTransformInput].Columns[ResponseText]"
                              cachedDataType="nText"
                              cachedName="ResponseText"
                              lineageId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Read details (throttled).Outputs[Response Output].Columns[ResponseText]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\record.Inputs[JsonParserTransformInput].Columns[id]"
                              cachedDataType="i4"
                              cachedName="id"
                              cachedSortKeyPosition="1"
                              lineageId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[id]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\record.Outputs[JsonParserTransformOutput].Columns[id]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\record.Inputs[JsonParserTransformInput].Columns[dispatch_status]"
                              cachedDataType="wstr"
                              cachedLength="4000"
                              cachedName="dispatch_status"
                              lineageId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[dispatch_status]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\record.Outputs[JsonParserTransformOutput].Columns[dispatch_status]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\record.Inputs[JsonParserTransformInput].Columns[AccountId]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="4"
                              cachedName="AccountId"
                              lineageId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[AccountId]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\record.Outputs[JsonParserTransformOutput].Columns[AccountId]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\record.Inputs[JsonParserTransformInput].Columns[SQlid]"
                              cachedDataType="i4"
                              cachedName="SQlid"
                              lineageId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[SQlid]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\record.Outputs[JsonParserTransformOutput].Columns[SQlid]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\record.Inputs[JsonParserTransformInput].Columns[TemplateOutput]"
                              cachedDataType="nText"
                              cachedName="TemplateOutput"
                              lineageId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Template Transform.Outputs[TemplateTransformOutput].Columns[TemplateOutput]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\record.Outputs[JsonParserTransformOutput].Columns[TemplateOutput]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\record.Inputs[JsonParserTransformInput].Columns[StatusCode]"
                              cachedDataType="i4"
                              cachedName="StatusCode"
                              lineageId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Read details (throttled).Outputs[Response Output].Columns[StatusCode]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\record.Outputs[JsonParserTransformOutput].Columns[StatusCode]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True" />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\record.Outputs[JsonParserTransformOutput]"
                          errorOrTruncationOperation="Error"
                          errorRowDisposition="FailComponent"
                          name="JsonParserTransformOutput"
                          truncationRowDisposition="FailComponent">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\record.Outputs[JsonParserTransformOutput].Columns[StatusCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\record.Outputs[JsonParserTransformOutput].Columns[StatusCode]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\record.Inputs[JsonParserTransformInput].Columns[StatusCode]"
                              name="StatusCode" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\record.Outputs[JsonParserTransformOutput].Columns[TemplateOutput]"
                              dataType="nText"
                              description="Template output column which will contain replaced text."
                              lineageId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\record.Outputs[JsonParserTransformOutput].Columns[TemplateOutput]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\record.Inputs[JsonParserTransformInput].Columns[TemplateOutput]"
                              name="TemplateOutput" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\record.Outputs[JsonParserTransformOutput].Columns[SQlid]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\record.Outputs[JsonParserTransformOutput].Columns[SQlid]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\record.Inputs[JsonParserTransformInput].Columns[SQlid]"
                              name="SQlid" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\record.Outputs[JsonParserTransformOutput].Columns[AccountId]"
                              codePage="1252"
                              dataType="str"
                              length="4"
                              lineageId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\record.Outputs[JsonParserTransformOutput].Columns[AccountId]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\record.Inputs[JsonParserTransformInput].Columns[AccountId]"
                              name="AccountId" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\record.Outputs[JsonParserTransformOutput].Columns[dispatch_status]"
                              dataType="wstr"
                              length="4000"
                              lineageId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\record.Outputs[JsonParserTransformOutput].Columns[dispatch_status]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\record.Inputs[JsonParserTransformInput].Columns[dispatch_status]"
                              name="dispatch_status" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\record.Outputs[JsonParserTransformOutput].Columns[id]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\record.Outputs[JsonParserTransformOutput].Columns[id]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\record.Inputs[JsonParserTransformInput].Columns[id]"
                              name="id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\record.Outputs[JsonParserTransformOutput].Columns[__DOCUMENT__]"
                              dataType="nText"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\record.Outputs[JsonParserTransformOutput].ExternalColumns[__DOCUMENT__]"
                              lineageId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\record.Outputs[JsonParserTransformOutput].Columns[__DOCUMENT__]"
                              name="__DOCUMENT__" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\record.Outputs[JsonParserTransformOutput].Columns[P_error]"
                              dataType="nText"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\record.Outputs[JsonParserTransformOutput].ExternalColumns[P_error]"
                              lineageId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\record.Outputs[JsonParserTransformOutput].Columns[P_error]"
                              name="P_error" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\record.Outputs[JsonParserTransformOutput].Columns[P_correlation_request_id]"
                              dataType="nText"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\record.Outputs[JsonParserTransformOutput].ExternalColumns[P_correlation_request_id]"
                              lineageId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\record.Outputs[JsonParserTransformOutput].Columns[P_correlation_request_id]"
                              name="P_correlation_request_id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\record.Outputs[JsonParserTransformOutput].Columns[P_correlation_correlation_id]"
                              dataType="nText"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\record.Outputs[JsonParserTransformOutput].ExternalColumns[P_correlation_correlation_id]"
                              lineageId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\record.Outputs[JsonParserTransformOutput].Columns[P_correlation_correlation_id]"
                              name="P_correlation_correlation_id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\record.Outputs[JsonParserTransformOutput].Columns[P_correlation_async_correlation_id]"
                              dataType="nText"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\record.Outputs[JsonParserTransformOutput].ExternalColumns[P_correlation_async_correlation_id]"
                              lineageId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\record.Outputs[JsonParserTransformOutput].Columns[P_correlation_async_correlation_id]"
                              name="P_correlation_async_correlation_id" />
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\record.Outputs[JsonParserTransformOutput].ExternalColumns[P_error]"
                              dataType="nText"
                              name="P_error" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\record.Outputs[JsonParserTransformOutput].ExternalColumns[P_correlation_request_id]"
                              dataType="nText"
                              name="P_correlation_request_id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\record.Outputs[JsonParserTransformOutput].ExternalColumns[P_correlation_correlation_id]"
                              dataType="nText"
                              name="P_correlation_correlation_id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\record.Outputs[JsonParserTransformOutput].ExternalColumns[P_correlation_async_correlation_id]"
                              dataType="nText"
                              name="P_correlation_async_correlation_id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\record.Outputs[JsonParserTransformOutput].ExternalColumns[__DOCUMENT__]"
                              dataType="nText"
                              name="__DOCUMENT__" />
                          </externalMetadataColumns>
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\record.Outputs[JsonParserTransform Error Output]"
                          isErrorOut="true"
                          name="JsonParserTransform Error Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\record.Outputs[JsonParserTransform Error Output].Columns[StatusCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\record.Outputs[JsonParserTransform Error Output].Columns[StatusCode]"
                              name="StatusCode" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\record.Outputs[JsonParserTransform Error Output].Columns[TemplateOutput]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\record.Outputs[JsonParserTransform Error Output].Columns[TemplateOutput]"
                              name="TemplateOutput" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\record.Outputs[JsonParserTransform Error Output].Columns[SQlid]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\record.Outputs[JsonParserTransform Error Output].Columns[SQlid]"
                              name="SQlid" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\record.Outputs[JsonParserTransform Error Output].Columns[AccountId]"
                              codePage="1252"
                              dataType="str"
                              length="4"
                              lineageId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\record.Outputs[JsonParserTransform Error Output].Columns[AccountId]"
                              name="AccountId" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\record.Outputs[JsonParserTransform Error Output].Columns[dispatch_status]"
                              dataType="wstr"
                              length="4000"
                              lineageId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\record.Outputs[JsonParserTransform Error Output].Columns[dispatch_status]"
                              name="dispatch_status" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\record.Outputs[JsonParserTransform Error Output].Columns[id]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\record.Outputs[JsonParserTransform Error Output].Columns[id]"
                              name="id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\record.Outputs[JsonParserTransform Error Output].Columns[__DOCUMENT__]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\record.Outputs[JsonParserTransform Error Output].Columns[__DOCUMENT__]"
                              name="__DOCUMENT__" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\record.Outputs[JsonParserTransform Error Output].Columns[P_error]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\record.Outputs[JsonParserTransform Error Output].Columns[P_error]"
                              name="P_error" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\record.Outputs[JsonParserTransform Error Output].Columns[P_correlation_request_id]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\record.Outputs[JsonParserTransform Error Output].Columns[P_correlation_request_id]"
                              name="P_correlation_request_id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\record.Outputs[JsonParserTransform Error Output].Columns[P_correlation_correlation_id]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\record.Outputs[JsonParserTransform Error Output].Columns[P_correlation_correlation_id]"
                              name="P_correlation_correlation_id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\record.Outputs[JsonParserTransform Error Output].Columns[P_correlation_async_correlation_id]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\record.Outputs[JsonParserTransform Error Output].Columns[P_correlation_async_correlation_id]"
                              name="P_correlation_async_correlation_id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\record.Outputs[JsonParserTransform Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\record.Outputs[JsonParserTransform Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\record.Outputs[JsonParserTransform Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\record.Outputs[JsonParserTransform Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\record.Outputs[JsonParserTransform Error Output].Columns[ErrorColumnName]"
                              codePage="1252"
                              dataType="str"
                              length="128"
                              lineageId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\record.Outputs[JsonParserTransform Error Output].Columns[ErrorColumnName]"
                              name="ErrorColumnName" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\record.Outputs[JsonParserTransform Error Output].Columns[ErrorMessage]"
                              dataType="wstr"
                              length="1024"
                              lineageId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\record.Outputs[JsonParserTransform Error Output].Columns[ErrorMessage]"
                              name="ErrorMessage" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\record.Outputs[JsonParserTransform Error Output].Columns[ErrorRawData]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\record.Outputs[JsonParserTransform Error Output].Columns[ErrorRawData]"
                              name="ErrorRawData" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Search PortalUploadQueueTargets"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="JSON Source (REST API or File); ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="The JSON source is used to read data from JSON files, RESTful Web Service or direct JSON String."
                      name="Search PortalUploadQueueTargets"
                      usesDispositions="true"
                      version="33">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">3</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for any numeric data types"
                          expressionType="Notify"
                          name="TreatBlankNumberAsNull">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for bool data types"
                          expressionType="Notify"
                          name="TreatBlankBoolAsNull">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for any date/time data types"
                          expressionType="Notify"
                          name="TreatBlankDateAsNull">true</property>
                        <property
                          dataType="System.Int32"
                          description="Defines how to read the JSON file or direct string"
                          expressionType="Notify"
                          name="AccessMode"
                          typeConverter="ZappySys.Common.Ssis.FileValueAccessMode">3</property>
                        <property
                          dataType="System.String"
                          description="Defines how to read the JSON file or direct string"
                          expressionType="Notify"
                          name="DirectValue"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.String"
                          description="Variable name which holds JSON string"
                          expressionType="Notify"
                          name="ValueVariable"
                          typeConverter="ZappySys.PowerPack.Converters.VariableEditor,ZappySys.PowerPack130.UI,Version=1.0.0.0,Culture=neutral,PublicKeyToken=1903265a93eae502"></property>
                        <property
                          dataType="System.String"
                          description="Variable name which holds data file path or url"
                          expressionType="Notify"
                          name="PathVariable"
                          typeConverter="ZappySys.PowerPack.Converters.VariableEditor,ZappySys.PowerPack130.UI,Version=1.0.0.0,Culture=neutral,PublicKeyToken=1903265a93eae502">User::RexAPIWebURL</property>
                        <property
                          dataType="System.String"
                          description="JSON file file path (e.g. c:\data\myfile.json) or pattern to process multiple files (e.g. c:\data\*.json)"
                          expressionType="Notify"
                          name="DirectPath"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">https://api.uk.rexsoftware.com/rex.php</property>
                        <property
                          dataType="System.Boolean"
                          description="Include files from sub folders too."
                          expressionType="Notify"
                          name="Recursive">false</property>
                        <property
                          dataType="System.String"
                          description="Set this if you want to set custom Http headers. You may use variable anywhere in the header value using syntax {{User::YourVarName}}. Syntax of Header key value pair is : &amp;lt;request&amp;gt;&amp;lt;header&amp;gt;&amp;lt;name&amp;gt;x-myheader-1&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;AAA&amp;lt;/value&amp;gt;&amp;lt;/header&amp;gt; &amp;lt;header&amp;gt;&amp;lt;name&amp;gt;x-myheader-2&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;BBB&amp;lt;/value&amp;gt;&amp;lt;/header&amp;gt;&amp;lt;/request&amp;gt;"
                          expressionType="Notify"
                          name="HttpHeaders">&lt;request&gt;&lt;header&gt;&lt;name&gt;Accept&lt;/name&gt;&lt;value&gt;*/*&lt;/value&gt;&lt;/header&gt;&lt;header&gt;&lt;name&gt;Cache-Control&lt;/name&gt;&lt;value&gt;no-cache&lt;/value&gt;&lt;/header&gt;&lt;header&gt;&lt;name&gt;X-App-Identifier&lt;/name&gt;&lt;value&gt;client:spicerhaart:{{System::PackageName}}:{{System::TaskName}}&lt;/value&gt;&lt;/header&gt;&lt;/request&gt;</property>
                        <property
                          dataType="System.String"
                          description="User defined data you wish to send along with your HTTP Request (e.g. Upload file data, Form POST data). Usually you have to set content-type of your data but if you select RequestMethod=POST then system will automatically set content-type=application/x-www-form-urlencoded."
                          expressionType="Notify"
                          name="HttpRequestData">{
"method":"PortalUploadQueueTargets::search",
"args":{
	"criteria": 
	[
			{
	       		"name": "system_ctime", 
		       	"type": "&gt;=", 
		        "value": {{User::OneweekAgoUnixDateStamp}}
			}
	],
	"result_format":"ids",
	"limit":50000,
	"offset": &lt;%page%&gt;
	 },
"strip_response_prefixes": true,
"token": "{{User::RexToken}}"
}</property>
                        <property
                          dataType="System.String"
                          description="Http Web Request Method (e.g. POST, GET, PUT, LIST, DELETE...). Refer your API documentation if you are not sure which method you have to use."
                          expressionType="Notify"
                          name="HttpRequestMethod">POST</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies content type for data you wish to POST. If you select Default option then system default content type will be used (i.e. application/x-www-form-urlencoded). If you specify Content-Type header along with this option then header value takes precedence."
                          expressionType="Notify"
                          name="HttpRequestContentType"
                          typeConverter="ZappySys.Common.Web.HttpRequestContentType">2</property>
                        <property
                          dataType="System.Int32"
                          description="Data format coming from HTTP Response. This is useful for example when you have OData service and you want to automatically consume all pages of data using odata.netUrl. Setting JsonFormat=Odata will automatically do it for you. This setting is only applicable if JSON is coming from HTTP WebRequest."
                          expressionType="Notify"
                          name="JsonFormat"
                          typeConverter="ZappySys.Json.JsonFormat">1</property>
                        <property
                          dataType="System.Boolean"
                          description="Enable custom proxy settings (If this is not set then system default proxy will be used. To disable proxy totally uncheck this option and check DoNotUseDefaultProxy option if available)"
                          expressionType="Notify"
                          name="UseProxy">false</property>
                        <property
                          dataType="System.String"
                          description="Web URL of Proxy server (including port  if necessary). [e.g. http://myproxyserver:8080/]"
                          expressionType="Notify"
                          name="ProxyUrl"></property>
                        <property
                          dataType="System.Boolean"
                          description="Enable passing userid and password to proxy server"
                          expressionType="Notify"
                          name="UseProxyCreds">false</property>
                        <property
                          dataType="System.String"
                          description="Proxy username"
                          expressionType="Notify"
                          name="ProxyUserName"></property>
                        <property
                          dataType="System.String"
                          description="Proxy password"
                          expressionType="Notify"
                          name="ProxyPassword"></property>
                        <property
                          dataType="System.String"
                          description="If Service response support pagination using some sort of next url attribute then specify which attribute name in JSON Response string which holds next url. If no attribute found or its null then component will stop fetching next resultset. Example: $.pagingInfo.nextUrl"
                          expressionType="Notify"
                          name="NextUrlAttribute"></property>
                        <property
                          dataType="System.String"
                          description="If Service response support pagination using some sort of prev/next url attribute then specify which previous link attribute name from JSON Response string which holds previous url."
                          expressionType="Notify"
                          name="PrevUrlAttribute"></property>
                        <property
                          dataType="System.String"
                          description="Specifies value for NextUrlAttribute or StopIndicatorAttribute which indicates last page to stop pagination. If you have specified StopIndicatorAttribute then you can use Regular expression rather than static value to indicate last page. To use regular expression value of this property must start with regex= prefix. Example : regex=FALSE|N  (assuming you set StopIndicatorAttribute to something like $.hasMore)"
                          expressionType="Notify"
                          name="NextUrlStopIndicator"></property>
                        <property
                          dataType="System.String"
                          description="Attribute name or expression for attribute which can be used as stop indicator (e.g. hasmore --or-- $.pagination.hasmore). If this value is blank then NextUrlAttribute is used"
                          expressionType="Notify"
                          name="StopIndicatorAttribute"></property>
                        <property
                          dataType="System.String"
                          description="If you want to include certain text (or parameters) at the end of Next url then specify this attribute (e.g. &amp;format=json). Another common usecase of this property is to supply pagination token to next Page URL. You can also use &lt;%nextlink%&gt; or  &lt;%nextlink_encoded%&gt; placeholder (e.g. &amp;cursor=&lt;%nextlink_encoded%&gt; )"
                          expressionType="Notify"
                          name="NextUrlSuffix"></property>
                        <property
                          dataType="System.Int32"
                          description="This property indicates total number of milliseconds you want to wait before sending next request. This option allows you to adjust how many API calls can be made within certain timeframe. If your API Service has no limit then set this option to zero"
                          expressionType="Notify"
                          name="NextUrlWait">0</property>
                        <property
                          dataType="System.Boolean"
                          description="If this option is true then component will continue without exception on 404 error (Url not found). This allows you to consume data gracefully."
                          expressionType="Notify"
                          name="ContinueOnUrlNotFoundError">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Continue when any type of exception occurs during http request"
                          expressionType="Notify"
                          name="ContineOnAnyError">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Continue on error when specified substring found in response"
                          expressionType="Notify"
                          name="ContineOnErrorForMessage">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Continue on error when specified status code returned from web server"
                          expressionType="Notify"
                          name="ContineOnErrorForStatusCode">false</property>
                        <property
                          dataType="System.Boolean"
                          description="When error occurs no data is returned. Use this option to get content eventhough error occurs. When this option is checked you can't use [continue on error when specific string found in response] option"
                          expressionType="Notify"
                          name="ConsumeResponseOnError">false</property>
                        <property
                          dataType="System.Int32"
                          description="Status code to match when error occurs and ContineOnErrorForStatusCode option is true. If Response status code matches to this code then task continues to run"
                          expressionType="Notify"
                          name="ErrorStatusCodeToMatch">404</property>
                        <property
                          dataType="System.String"
                          description="Error substring to match when error occurs and ContineOnErrorForMessage option is true. If Response status code matches to this code then task continues to run"
                          expressionType="Notify"
                          name="ErrorSubstringToMatch"></property>
                        <property
                          dataType="System.String"
                          description="Cookie Container can be used to maintain state between multiple web requests. Example: You can login to site like wordpress and then extract any private page content by simply passing authentication cookies using this variable."
                          expressionType="Notify"
                          name="CookieContainerVariable"></property>
                        <property
                          dataType="System.Int32"
                          description="Http request Timeout in seconds. Set this to 0 if you want to use system default value (i.e. 100 seconds)"
                          expressionType="Notify"
                          name="RequestTimeout">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies which security protocol is supported for HTTPS communication. Using this option you can enable legacy protocol or enforce to use latest version of security protocol (Note: TLS 1.2 is only supported in SSIS 2014 or Higher)."
                          expressionType="Notify"
                          name="SecurityProtocol"
                          typeConverter="ZappySys.PowerPack.Common.HttpsSecurityProtocolType">0</property>
                        <property
                          dataType="System.Boolean"
                          description="Enable support for gzip or deflate compression. When you check this option compressed response automatically de-compressed saving bandwidth. This option is only valid if web server supports compressed response stream. Check your API documentation for more information."
                          expressionType="Notify"
                          name="EnableCompressionSupport">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Ignore SSL certificate related errors. Example: if you getting SSL/TLS errors because of certificate expired or certificate is not from trusted authority or certificate is self-signed. By checking this option you will not get SSL/TLS error."
                          expressionType="Notify"
                          name="IgnoreCertificateErrors">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Allow unsecure ciphers/suites and curves for SSLS/TLS communication. Use this option to communicate with web servers which needs legacy / unsecured ciphers support. This option is only trigged when you change default SSL/TLS Version on advanced settings tab."
                          expressionType="Notify"
                          name="AllowUnsecureSuite">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Use connection to pass credentials for authentication (e.g. Use UserID/Password or Use OAuth Protocol for token based approach)"
                          expressionType="Notify"
                          name="UseConnection">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specified how you want to loop through multiple pages returned by REST API."
                          expressionType="Notify"
                          name="PagingMode"
                          typeConverter="ZappySys.Common.RestApiPagingMode">3</property>
                        <property
                          dataType="System.Boolean"
                          description="If you wish to pass extracted pagination token or current page number in the body of next request then set this option to true. You can use [$pagetoken$] and [$pagetoken$] placeholders anywhere in the Body where you wish to insert extracted Page token. You must set encoded token you can use &lt;%nextlink_encoded%&gt; inside SuffixForNextUrl Property. If you dont use SuffixForNextUrl then raw nextLink or Token will be inserted inside the body. If you dont specify [$pagetoken$] placeholder in the body then NextPage Token will be appended at the end. NextPage Token is extracted by filter expression specified using property NextUrlSuffix"
                          expressionType="Notify"
                          name="EnablePageTokenForBody">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this to true if you wish to specify different URL, Header, Body or Filter for first page and next page (i.e. Paginated response). Some APIs like Amazon MWS, NetSuite, Zuora) you may need to set this to true."
                          expressionType="Notify"
                          name="HasDifferentNextPageInfo">false</property>
                        <property
                          dataType="System.String"
                          description="When HasDifferentNextPageInfo=true you can set this property to indicate first page and next page. You can specify different URL, Header, Body or Filter for first page and next page (i.e. Paginated response). Use [$tag$] as placeholder anywhere in the URL, Header, Body or Filter and at runtime system will replace it with correct value (first page or next page value). Syntax to specify placeholder for first page vs next page is like a connectionstring url=FirstPageValue|NextPageValue;header=FirstPageValue|NextPageValue;body=FirstPageValue|NextPageValue;filter=FirstPageValue|NextPageValue; You can use one or more key/value pairs to make things dynamic (e.g. url, header, body or filter)  .For example if you have pagination in your API and First URL is http://abc.com/api/items/get and to get more records you have to call http://abc.com/api/items/getNext then you can use [$tag$] as placeholder in the URL http://abc.com/api/items/[$tag$] and specify this property with first page tag and next page tag as url=get|getNext  (Tags are separated using vertical bar). "
                          expressionType="Notify"
                          name="PagePlaceholders"></property>
                        <property
                          dataType="System.String"
                          description="Use this property to set request body fragment for first page. HasDifferentNextPageInfo must be set to true to use this property."
                          expressionType="Notify"
                          name="FirstPageBodyPart"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.String"
                          description="Use this property to set request body fragment for any request after first request. HasDifferentNextPageInfo must be set to true to use this property."
                          expressionType="Notify"
                          name="NextPageBodyPart"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.String"
                          description="Expression to extract Maximum pages to loop through. Some APIs don't stop pagination and keep returning last page data when you try to read data after last page. Specify expression (e.g. $.page_count ) to read total pages to loop through using this property."
                          expressionType="Notify"
                          name="PagingMaxPagesExpr">10</property>
                        <property
                          dataType="System.String"
                          description="e.g. Type page_num if URL looks like this =&gt; http://abc.com/?page_num=1&amp;sort=true  (page number via query string)&#xA;--or-- Type &lt;%page%&gt; if page number is inside URL path like this =&gt; http://abc.com/1/?sort=true  (e.g. replace page number in url with placeholder http://abc.com/&lt;%page%&gt;/?sort=true)&#xA;Page number will be incremented by one for next URL until last page is reached or [Max Page Number] is reached"
                          expressionType="Notify"
                          name="PageNumberAttributeNameInUrl">&lt;%page%&gt;</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum page number until which auto increment is allowed. Type zero for no limit. Next URL contains next page number (increment by one) until last page is detected or [Max Page Number] limit is reached."
                          expressionType="Notify"
                          name="MaxPageNumber">0</property>
                        <property
                          dataType="System.String"
                          description="Variable name which will hold starting page number. This is ignored if you useing parameter name from query string to indicate page number."
                          expressionType="Notify"
                          name="StartPageNumberVariable">User::UpsertedCount</property>
                        <property
                          dataType="System.Int32"
                          description="Page counter increment. By default next page is incremented by one if this value is zero. You can also enter negative number if you want to decrease page counter."
                          expressionType="Notify"
                          name="PageNumberIncrement">50000</property>
                        <property
                          dataType="System.Int32"
                          description="Specified how you want detect last page."
                          expressionType="Notify"
                          name="PagingEndStrategy"
                          typeConverter="ZappySys.Common.UrlPagingEndDetectionStrategy">3</property>
                        <property
                          dataType="System.Boolean"
                          description="Condition result to compare to detect last page. Set this property to True if you want detect last page if condition is true else set this to False."
                          expressionType="Notify"
                          name="LastPageWhenConditionEqualsTo">true</property>
                        <property
                          dataType="System.Int32"
                          description="Minimum bytes expected from response."
                          expressionType="Notify"
                          name="ResponseMinBytes">0</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum bytes from response."
                          expressionType="Notify"
                          name="ResponseMaxBytes">3</property>
                        <property
                          dataType="System.String"
                          description="Expected error message sub string from response."
                          expressionType="Notify"
                          name="ResponseErrorString">not found</property>
                        <property
                          dataType="System.Int32"
                          description="Expected status code from response when page number you trying to access not found."
                          expressionType="Notify"
                          name="ResponseStatusCode">404</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum JSON records to fetch. Set this value to 0 for all records"
                          expressionType="Notify"
                          name="MaxRows">0</property>
                        <property
                          dataType="System.String"
                          description="Enter expression here to filter data.(Example:  $.Users[*].UserName ) This will fetch User names from users records"
                          expressionType="Notify"
                          name="Filter"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">$.result.rows[*]</property>
                        <property
                          dataType="System.Boolean"
                          description="Use this option to include parent properties (Non array) in the output along with Filtered Rows"
                          expressionType="Notify"
                          name="IncludeParentColumns">true</property>
                        <property
                          dataType="System.Boolean"
                          description="By default child and parent information is not included in the output if children not found for specified expression. For example if you want to extract all orders from all customers nodes then you can type $.Customers[*].Orders[*]. This will fetch all orders from all customers. By default customers records without orders wont be included in the output. If you want to include those customers where orders not found then check this option (Output null information for order attributes). This behavior is similar to LEFT OUTER JOIN in SQL (Left side is parent, right side is child). This option is ***resource intensive*** so only check if you really care about this behavior."
                          expressionType="Notify"
                          name="IncludeParentColumnsWhenChildMissing">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to true if you want to output parent columns which are array. By default any parent column which is an array is not included in output. See also FilterForParentColumnsWithArrayType property if you set this property"
                          expressionType="Notify"
                          name="IncludeParentColumnsWithArrayType">false</property>
                        <property
                          dataType="System.String"
                          description="Filter expression to extract value form parent"
                          expressionType="Notify"
                          name="FilterForParentColumnsWithArrayType"></property>
                        <property
                          dataType="System.String"
                          description="Prefix for parent column name. This option is only valid if you have set IncludeParentColumns=True"
                          expressionType="Notify"
                          name="ParentColumnPrefix">P_</property>
                        <property
                          dataType="System.Boolean"
                          description="Throw error if property name specified in filter expression is missing. By default it will ignore any missing property errors."
                          expressionType="Notify"
                          name="ThrowErrorIfPropertyMissing">false</property>
                        <property
                          dataType="System.Int32"
                          description="This property how many nested levels should be scanned to fetch various properties. 0=Scan all child levels."
                          expressionType="Notify"
                          name="MaxLevelsToScan">0</property>
                        <property
                          dataType="System.String"
                          description="List comma separated property names from JSON document which you want to exclude from output. Specify parent property name to exclude all child nodes."
                          expressionType="Notify"
                          name="ExcludedProperties"></property>
                        <property
                          dataType="System.String"
                          description="Property level separator used in generated property name (separator for outer properties - Above selected filter node). Use this if default separator is producing duplicate property name which is conflicting with existing name."
                          expressionType="Notify"
                          name="LevelSeparator">_</property>
                        <property
                          dataType="System.Boolean"
                          description="Enables deep array flattening for selected filtered hierarchy. When you turn on this property it will flatten each property of each array item and expose as column (e.g. If you have Filter set as $.customers[*] and for each customer you have an array of Addresses then you may see output columns like Addresses.1.City, Addresses.1.State, Addresses.2.City, Addresses.2.State .... Addresses.N.City, Addresses.N.State). You can control how many array items you want to flatten by setting MaxArrayItemsToFlatten property."
                          expressionType="Notify"
                          name="EnableArrayFlattening">false</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum number of array items to flatten. inner array flattening. Adjust this property to control how many columns being generated. This option is ignored if you set EnableArrayFlattening=false"
                          expressionType="Notify"
                          name="MaxArrayItemsToFlatten">10</property>
                        <property
                          dataType="System.Int32"
                          description="Compression format for source file (e.g. gzip, zip)"
                          expressionType="Notify"
                          name="FileCompressionType"
                          typeConverter="ZappySys.Common.FileCompressionType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Array Transformation you want to apply. Useful for case when you have 2-Dimensional arrays with rows/columns in separate arrays."
                          expressionType="Notify"
                          name="ArrayTransformationType"
                          typeConverter="ZappySys.Json.ArrayTransformType">0</property>
                        <property
                          dataType="System.String"
                          description="Filter expression to use to extract column names for array transformation."
                          expressionType="Notify"
                          name="ArrayTransColumnNameFilter">$.result.rows[*]</property>
                        <property
                          dataType="System.String"
                          description="Filter expression for row values (Not applicable for simple array transformation)."
                          expressionType="Notify"
                          name="ArrayTransRowValueFilter">$.result.rows[*]</property>
                        <property
                          dataType="System.Boolean"
                          description="When you have 2D array but don't have column list specified in a separate array then use this option (e.g. { arr: [[10,11],[21,22]] } )."
                          expressionType="Notify"
                          name="ArrayTransEnableCustomColumns">true</property>
                        <property
                          dataType="System.String"
                          description="When you have 2D array but don't have column list specified in a separate array then use specify column names here. Use comma separated list (e.g col1,col2,col3 ). Column name Order must match value order."
                          expressionType="Notify"
                          name="ArrayTransCustomColumns">MetricID</property>
                        <property
                          dataType="System.String"
                          description="Specifies how custom date formatted strings are parsed when reading JSON."
                          expressionType="Notify"
                          name="DateFormatString"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies how date formatted strings, e.g. Date(1198908717056) and 2012-03-21T05:40Z, are parsed when reading JSON."
                          expressionType="Notify"
                          name="DateParseHandling"
                          typeConverter="ZappySys.Common.DateParseHandling">1</property>
                        <property
                          dataType="System.Boolean"
                          description="Output as raw JSON document rather than parsing individual fields. This option is helpful if you have documents stored in a file and you want to pass them downstream as raw JSON string rather than parsing into columns."
                          expressionType="Notify"
                          name="OutputRawDocument">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indent JSON output so its easy to read."
                          expressionType="Notify"
                          name="IndentOutput">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to true if you want to output FilePath. This option is ignored when you consume DirectValue or data from Url rather than local files. Output column name will be __FilePath"
                          expressionType="Notify"
                          name="OutputFilePath">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to true if you want to output FileName. This option is ignored when you consume DirectValue or data from Url rather than local files. Output column name will be __FileName"
                          expressionType="Notify"
                          name="OutputFileName">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to true if you want to move processed file to archive folder."
                          expressionType="Notify"
                          name="EnableArchiveFile">false</property>
                        <property
                          dataType="System.String"
                          description="Folder path where you want to move processed file."
                          expressionType="Notify"
                          name="ArchiveFolderPath"></property>
                        <property
                          dataType="System.Boolean"
                          description="Folder path where you want to move processed file."
                          expressionType="Notify"
                          name="OverwriteFileInArchiveFolder">false</property>
                        <property
                          dataType="System.String"
                          description="File naming convention for archived file. By default it will same name as original source file processed. But you can control naming format using {%name%} and {%ext%} placeholders. e.g. {%name%}_processed{%ext%} or {%name%}{%ext%}.{{System::ContainerStartTime,yyyyMMdd_HHmmss_fff}}"
                          expressionType="Notify"
                          name="ArchiveFileNamingConvention"></property>
                        <property
                          dataType="System.Boolean"
                          description="When this property is true then Column is converted to Row. Pivoted names will appear under  Pivot_Name column and values will appear under Pivot_Value field."
                          expressionType="Notify"
                          name="EnablePivot">false</property>
                        <property
                          dataType="System.Int32"
                          description="Metadata scan mode controls how data type and length is determined. By default few records scanned to determine datatype/length. Changing ScanMode affects length/datatype accuracy."
                          expressionType="Notify"
                          name="MetaDataScanMode"
                          typeConverter="ZappySys.Common.Data.MetaDataScanMode">4</property>
                        <property
                          dataType="System.Int32"
                          description="Length for all string column. This option is only valid for MetaDataScanMode=Custom"
                          expressionType="Notify"
                          name="MetaDataCustomLength">1000</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.JsonSource</property>
                        <property
                          dataType="System.Int32"
                          description="Encoding of source file"
                          expressionType="Notify"
                          name="Encoding"
                          typeConverter="ZappySys.Common.EncodingType">0</property>
                        <property
                          dataType="System.String"
                          description="Character set for text (e.g. utf-8 )"
                          expressionType="Notify"
                          name="CharacterSet"></property>
                        <property
                          dataType="System.Boolean"
                          description="By default process stops with error if specified local file is not found. Set this property to true if you wish to continue rather than throwing file not found error."
                          expressionType="Notify"
                          name="ContinueOnFileNotFoundError">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Check this option if you want to upload file(s) (i.e. POST RAW file data) or send data using Multi-Part encoding method (i.e. Content-Type: multipart/form-data). Multi-Part request allows you to mix key/value and upload files in same request. On the other hand raw upload allows only single file upload (without any key/value) &#xA;&#xA;==== Raw Upload (Content-Type: application/octet-stream) =====   &#xA;To upload single file in raw mode check this option and specify full file path starting with @ sign in the Body (e.g.  @c:\data\myfile.zip ) &#xA;&#xA;==== Form-Data / Multipart Upload (Content-Type: multipart/form-data) =====   &#xA;To treat your Request data as multi part fields you must specify key/value pairs separated by new lines into RequestData field (i.e. Body). Each key value pair is entered on new-line and key/value are separated using equal sign (=). Preceding and trailing spaces are ignored also blank lines are ignored. &#xA;If field value has some any special character(s) then use escape sequence (e.g. For NewLine: \r\n, For Tab: \t, For at (@): \@). When value of any field starts with at sign (@) its automatically treated as File you want to upload. By default file content type is determined based on extension however you can supply content type manually for any field using this way [ fieldname.Content-Type=some content type ]. In below example we have supplied Content-Type for file2 and SomeField1, all other fields are using default content-type.&#xA;See below Example of uploading multiple files along with additional fields.&#xA;&#xA;file1=@c:\data\Myfile1.txt&#xA;file2=@c:\data\Myfile2.json&#xA;file2.Content-Type=application/json&#xA;SomeField1=aaaaaaa&#xA;SomeField1.Content-Type=text/plain&#xA;SomeField2=12345&#xA;SomeFieldWithNewLineAndTab=This is line1\r\nThis is line2\r\nThis is \ttab \ttab \ttab&#xA;SomeFieldStartingWithAtSign=\@MyTwitterHandle&#xA;"
                          expressionType="Notify"
                          name="IsMultiPartUpload">false</property>
                        <property
                          dataType="System.String"
                          description="Expression to extract Maximum records to loop through. Some APIs don't stop pagination and keep returning last page data when you try to read data after last page. Specify expression (e.g. $.total_rows ) to read total pages to loop through using this property. This setting is ignored if you set PagingMaxPagesExpr."
                          expressionType="Notify"
                          name="PagingMaxRowsExpr"></property>
                        <property
                          dataType="System.String"
                          description="When you enable PagingMaxRowsExpr (end pagination based on MaxRowCount) then you need to count records coming in each response. This expression extract all rows found under specified expression (e.g. $.orders[*] if all records found under orders node)."
                          expressionType="Notify"
                          name="PagingMaxRowsDataPathExpr"></property>
                        <property
                          dataType="System.Boolean"
                          description="When this option is checked, system allows to parse large number (Higher than Int64) in JSON document (i.e. { id: 76000009353950433247780 } ). If you do not turn on this option then it may throw error if large number is encountered. This option is SLOW because it has to perform additional checks in order to avoid Large number overflow error so do not turn on unless you getting Large number error."
                          expressionType="Notify"
                          name="EnableBigNumberHandling">false</property>
                      </properties>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Search PortalUploadQueueTargets.Outputs[JsonSourceOutput]"
                          errorOrTruncationOperation="Error"
                          errorRowDisposition="FailComponent"
                          name="JsonSourceOutput"
                          truncationRowDisposition="FailComponent">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Search PortalUploadQueueTargets.Outputs[JsonSourceOutput].Columns[__FileName]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Search PortalUploadQueueTargets.Outputs[JsonSourceOutput].ExternalColumns[__FileName]"
                              length="600"
                              lineageId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Search PortalUploadQueueTargets.Outputs[JsonSourceOutput].Columns[__FileName]"
                              name="__FileName" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Search PortalUploadQueueTargets.Outputs[JsonSourceOutput].Columns[id]"
                              dataType="i4"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Search PortalUploadQueueTargets.Outputs[JsonSourceOutput].ExternalColumns[rows]"
                              lineageId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Search PortalUploadQueueTargets.Outputs[JsonSourceOutput].Columns[id]"
                              name="id" />
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Search PortalUploadQueueTargets.Outputs[JsonSourceOutput].ExternalColumns[rows]"
                              dataType="wstr"
                              length="28"
                              name="rows" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Search PortalUploadQueueTargets.Outputs[JsonSourceOutput].ExternalColumns[__FileName]"
                              dataType="wstr"
                              length="600"
                              name="__FileName" />
                          </externalMetadataColumns>
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Search PortalUploadQueueTargets.Outputs[JsonSource Error Output]"
                          isErrorOut="true"
                          name="JsonSource Error Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Search PortalUploadQueueTargets.Outputs[JsonSource Error Output].Columns[__FileName]"
                              dataType="wstr"
                              length="600"
                              lineageId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Search PortalUploadQueueTargets.Outputs[JsonSource Error Output].Columns[__FileName]"
                              name="__FileName" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Search PortalUploadQueueTargets.Outputs[JsonSource Error Output].Columns[id]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Search PortalUploadQueueTargets.Outputs[JsonSource Error Output].Columns[id]"
                              name="id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Search PortalUploadQueueTargets.Outputs[JsonSource Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Search PortalUploadQueueTargets.Outputs[JsonSource Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Search PortalUploadQueueTargets.Outputs[JsonSource Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Search PortalUploadQueueTargets.Outputs[JsonSource Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Search PortalUploadQueueTargets.Outputs[JsonSource Error Output].Columns[ErrorColumnName]"
                              codePage="1252"
                              dataType="str"
                              length="128"
                              lineageId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Search PortalUploadQueueTargets.Outputs[JsonSource Error Output].Columns[ErrorColumnName]"
                              name="ErrorColumnName" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Search PortalUploadQueueTargets.Outputs[JsonSource Error Output].Columns[ErrorMessage]"
                              dataType="wstr"
                              length="1024"
                              lineageId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Search PortalUploadQueueTargets.Outputs[JsonSource Error Output].Columns[ErrorMessage]"
                              name="ErrorMessage" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\SQL Sort"
                      componentClassID="Microsoft.Sort"
                      contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
                      name="SQL Sort"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                          name="EliminateDuplicates">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the maximum number of threads to use for sorting."
                          expressionType="Notify"
                          name="MaximumThreads">-1</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\SQL Sort.Inputs[Sort Input]"
                          name="Sort Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\SQL Sort.Inputs[Sort Input].Columns[AccountId]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="4"
                              cachedName="AccountId"
                              lineageId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Extract dispatch status.Outputs[JsonParserTransformOutput].Columns[AccountId]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\SQL Sort.Inputs[Sort Input].Columns[dispatch_status]"
                              cachedDataType="wstr"
                              cachedLength="28"
                              cachedName="dispatch_status"
                              lineageId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Extract dispatch status.Outputs[JsonParserTransformOutput].Columns[dispatch_status]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\SQL Sort.Inputs[Sort Input].Columns[SQlid]"
                              cachedDataType="i4"
                              cachedName="SQlid"
                              lineageId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Extract dispatch status.Outputs[JsonParserTransformOutput].Columns[SQlid]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">1</property>
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\SQL Sort.Outputs[Sort Output]"
                          isSorted="true"
                          name="Sort Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\SQL Sort.Outputs[Sort Output].Columns[AccountId]"
                              codePage="1252"
                              dataType="str"
                              length="4"
                              lineageId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\SQL Sort.Outputs[Sort Output].Columns[AccountId]"
                              name="AccountId">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Extract dispatch status.Outputs[JsonParserTransformOutput].Columns[AccountId]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\SQL Sort.Outputs[Sort Output].Columns[dispatch_status]"
                              dataType="wstr"
                              length="28"
                              lineageId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\SQL Sort.Outputs[Sort Output].Columns[dispatch_status]"
                              name="dispatch_status">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Extract dispatch status.Outputs[JsonParserTransformOutput].Columns[dispatch_status]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\SQL Sort.Outputs[Sort Output].Columns[SQlid]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\SQL Sort.Outputs[Sort Output].Columns[SQlid]"
                              name="SQlid"
                              sortKeyPosition="1">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Extract dispatch status.Outputs[JsonParserTransformOutput].Columns[SQlid]}</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Template Transform"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Template Transform; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="Template transform allows to produce multi line string from template text. You can insert placeholders anywhere in the string. Ideal use case would be produce simple XML or JSON without use of JSON or XML Generator Transform."
                      name="Template Transform"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.String"
                          description="Template text which needs to be replaced. Any where in the text you can use input column names as placeholders (e.g. &lt;%CustomerEmail%&gt; ). You can also use user/system variable as placeholder (e.g. {{User::MyVariable}} )"
                          expressionType="Notify"
                          name="TemplateText"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">{
    "method" : "PortalUploadQueueTargets::read",
    "args" : {
        "id" : &lt;%id%&gt;
    }
}</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.TemplateTransform</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Template Transform.Inputs[TemplateTransformInput]"
                          name="TemplateTransformInput">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Template Transform.Inputs[TemplateTransformInput].Columns[id]"
                              cachedDataType="i4"
                              cachedName="id"
                              cachedSortKeyPosition="1"
                              lineageId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[id]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Template Transform.Outputs[TemplateTransformOutput]"
                          errorOrTruncationOperation="Error"
                          name="TemplateTransformOutput"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Template Transform.Inputs[TemplateTransformInput]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Template Transform.Outputs[TemplateTransformOutput].Columns[TemplateOutput]"
                              dataType="nText"
                              description="Template output column which will contain replaced text."
                              lineageId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Template Transform.Outputs[TemplateTransformOutput].Columns[TemplateOutput]"
                              name="TemplateOutput" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Trash Destination"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Trash Destination; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="The trash destination is used to create dummy destination which ends data path without any processing."
                      name="Trash Destination"
                      version="2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.String"
                          description="File path where you want to save data"
                          expressionType="Notify"
                          name="FilePath"></property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates if you want to save input data to comma separated text file"
                          expressionType="Notify"
                          name="SaveDataToFile">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Append data to file"
                          expressionType="Notify"
                          name="Append">false</property>
                        <property
                          dataType="System.String"
                          description="RowSeparator"
                          expressionType="Notify"
                          name="RowSeparator">{NEWLINE}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether you want to overwrite target file if exists"
                          expressionType="Notify"
                          name="OverwriteFileIfExists">true</property>
                        <property
                          dataType="System.String"
                          description="ColumnSeparator"
                          expressionType="Notify"
                          name="ColumnSeparator">,</property>
                        <property
                          dataType="System.Boolean"
                          description="SupportUnicode"
                          expressionType="Notify"
                          name="SupportUnicode">true</property>
                        <property
                          dataType="System.Boolean"
                          description="ColumnNamesInFirstRow"
                          expressionType="Notify"
                          name="ColumnNamesInFirstRow">true</property>
                        <property
                          dataType="System.Boolean"
                          description="QuoteDataIfNeeded"
                          expressionType="Notify"
                          name="QuoteDataIfNeeded">true</property>
                        <property
                          dataType="System.String"
                          description="Date time format string for any column with DT_DBDATETIME, DT_DBDATETIME2 or DB_DATE format"
                          expressionType="Notify"
                          name="DateTimeFormat">yyyy-MM-dd HH:mm:ss</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.TrashDestination</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Trash Destination.Inputs[TrashDestinationInput]"
                          hasSideEffects="true"
                          name="TrashDestinationInput">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Trash Destination 1"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Trash Destination; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="The trash destination is used to create dummy destination which ends data path without any processing."
                      name="Trash Destination 1"
                      version="2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.String"
                          description="File path where you want to save data"
                          expressionType="Notify"
                          name="FilePath"></property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates if you want to save input data to comma separated text file"
                          expressionType="Notify"
                          name="SaveDataToFile">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Append data to file"
                          expressionType="Notify"
                          name="Append">false</property>
                        <property
                          dataType="System.String"
                          description="RowSeparator"
                          expressionType="Notify"
                          name="RowSeparator">{NEWLINE}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether you want to overwrite target file if exists"
                          expressionType="Notify"
                          name="OverwriteFileIfExists">true</property>
                        <property
                          dataType="System.String"
                          description="ColumnSeparator"
                          expressionType="Notify"
                          name="ColumnSeparator">,</property>
                        <property
                          dataType="System.Boolean"
                          description="SupportUnicode"
                          expressionType="Notify"
                          name="SupportUnicode">true</property>
                        <property
                          dataType="System.Boolean"
                          description="ColumnNamesInFirstRow"
                          expressionType="Notify"
                          name="ColumnNamesInFirstRow">true</property>
                        <property
                          dataType="System.Boolean"
                          description="QuoteDataIfNeeded"
                          expressionType="Notify"
                          name="QuoteDataIfNeeded">true</property>
                        <property
                          dataType="System.String"
                          description="Date time format string for any column with DT_DBDATETIME, DT_DBDATETIME2 or DB_DATE format"
                          expressionType="Notify"
                          name="DateTimeFormat">yyyy-MM-dd HH:mm:ss</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.TrashDestination</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Trash Destination 1.Inputs[TrashDestinationInput]"
                          hasSideEffects="true"
                          name="TrashDestinationInput">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Upsert"
                      componentClassID="Microsoft.OLEDBCommand"
                      contactInfo="OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
                      description="Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time."
                      name="Upsert"
                      usesDispositions="true"
                      version="2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">0</property>
                        <property
                          dataType="System.String"
                          description="The SQL command to be executed."
                          expressionType="Notify"
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">exec UpsertListingPortalUploadQueueTargets ?,?,?</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Upsert.Connections[OleDbConnection]"
                          connectionManagerID="Package.ConnectionManagers[colsqlbi01v.Entities]"
                          connectionManagerRefId="Package.ConnectionManagers[colsqlbi01v.Entities]"
                          description="The OLE DB runtime connection used to access the database."
                          name="OleDbConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Upsert.Inputs[OLE DB Command Input]"
                          errorOrTruncationOperation="Command Execution"
                          errorRowDisposition="FailComponent"
                          hasSideEffects="true"
                          name="OLE DB Command Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Upsert.Inputs[OLE DB Command Input].Columns[Origin]"
                              cachedDataType="i4"
                              cachedName="Origin"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Upsert.Inputs[OLE DB Command Input].ExternalColumns[@Origin]"
                              lineageId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Add accountid and origin 1.Outputs[Derived Column Output].Columns[Origin]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Upsert.Inputs[OLE DB Command Input].Columns[__DOCUMENT__]"
                              cachedDataType="nText"
                              cachedName="__DOCUMENT__"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Upsert.Inputs[OLE DB Command Input].ExternalColumns[@body]"
                              lineageId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\record.Outputs[JsonParserTransformOutput].Columns[__DOCUMENT__]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Upsert.Inputs[OLE DB Command Input].Columns[AccountId]"
                              cachedDataType="i4"
                              cachedName="AccountId"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Upsert.Inputs[OLE DB Command Input].ExternalColumns[@accountid]"
                              lineageId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Add accountid and origin 1.Outputs[Derived Column Output].Columns[AccountId]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Upsert.Inputs[OLE DB Command Input].ExternalColumns[@Origin]"
                              dataType="i2"
                              name="@Origin">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                                  name="DBParamInfoFlags">81</property>
                              </properties>
                            </externalMetadataColumn>
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Upsert.Inputs[OLE DB Command Input].ExternalColumns[@body]"
                              dataType="nText"
                              name="@body">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                                  name="DBParamInfoFlags">193</property>
                              </properties>
                            </externalMetadataColumn>
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Upsert.Inputs[OLE DB Command Input].ExternalColumns[@accountid]"
                              dataType="i4"
                              name="@accountid">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                                  name="DBParamInfoFlags">81</property>
                              </properties>
                            </externalMetadataColumn>
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Upsert.Outputs[OLE DB Command Output]"
                          exclusionGroup="1"
                          name="OLE DB Command Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Upsert.Inputs[OLE DB Command Input]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Upsert.Outputs[OLE DB Command Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="OLE DB Command Error Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Upsert.Inputs[OLE DB Command Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Upsert.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Upsert.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Upsert.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Upsert.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                  </components>
                  <paths>
                    <path
                      refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing.Paths[Derived Column Output]"
                      endId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Multicast.Inputs[Multicast Input 1]"
                      name="Derived Column Output"
                      startId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Add accountid and origin 1.Outputs[Derived Column Output]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing.Paths[ignore]"
                      endId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Trash Destination.Inputs[TrashDestinationInput]"
                      name="ignore"
                      startId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Insert or Ignore.Outputs[ignore]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing.Paths[insert]"
                      endId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Template Transform.Inputs[TemplateTransformInput]"
                      name="insert"
                      startId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Insert or Ignore.Outputs[insert]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing.Paths[JsonParserTransformOutput]"
                      endId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Add accountid and origin 1.Inputs[Derived Column Input]"
                      name="JsonParserTransformOutput"
                      startId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\record.Outputs[JsonParserTransformOutput]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing.Paths[JsonParserTransformOutput1]"
                      endId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\SQL Sort.Inputs[Sort Input]"
                      name="JsonParserTransformOutput"
                      startId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Extract dispatch status.Outputs[JsonParserTransformOutput]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing.Paths[JsonSourceOutput]"
                      endId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\API Sort.Inputs[Sort Input]"
                      name="JsonSourceOutput"
                      startId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Search PortalUploadQueueTargets.Outputs[JsonSourceOutput]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing.Paths[Merge Join Output]"
                      endId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Insert or Ignore.Inputs[Conditional Split Input]"
                      name="Merge Join Output"
                      startId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Merge Join To Find Those to Insert.Outputs[Merge Join Output]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing.Paths[Multicast Output 1]"
                      endId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Upsert.Inputs[OLE DB Command Input]"
                      name="Multicast Output 1"
                      startId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Multicast.Outputs[Multicast Output 1]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing.Paths[OLE DB Source Output]"
                      endId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Extract dispatch status.Inputs[JsonParserTransformInput]"
                      name="OLE DB Source Output"
                      startId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Existing from SQL.Outputs[OLE DB Source Output]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing.Paths[Response Output]"
                      endId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\record.Inputs[JsonParserTransformInput]"
                      name="Response Output"
                      startId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Read details (throttled).Outputs[Response Output]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing.Paths[Sort Output]"
                      endId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Merge Join To Find Those to Insert.Inputs[Merge Join Right Input]"
                      name="Sort Output"
                      startId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\SQL Sort.Outputs[Sort Output]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing.Paths[Sort Output1]"
                      endId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Merge Join To Find Those to Insert.Inputs[Merge Join Left Input]"
                      name="Sort Output"
                      startId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\API Sort.Outputs[Sort Output]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing.Paths[TemplateTransformOutput]"
                      endId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Read details (throttled).Inputs[WebApiDestinationInput]"
                      name="TemplateTransformOutput"
                      startId="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Template Transform.Outputs[TemplateTransformOutput]" />
                  </paths>
                </pipeline>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Iterate Offices\Sequence Container\Reminders"
              DTS:CreationName="Microsoft.Pipeline"
              DTS:Description="Data Flow Task"
              DTS:DTSID="{b643294d-dd0d-4c00-9fe0-a3fbfdfd5e78}"
              DTS:ExecutableType="Microsoft.Pipeline"
              DTS:LocaleID="-1"
              DTS:ObjectName="Reminders"
              DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:ObjectData>
                <pipeline
                  version="1">
                  <components>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Reminders\Add accountid and origin"
                      componentClassID="Microsoft.DerivedColumn"
                      contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                      name="Add accountid and origin"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Reminders\Add accountid and origin.Inputs[Derived Column Input]"
                          description="Input to the Derived Column Transformation"
                          name="Derived Column Input">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Reminders\Add accountid and origin.Outputs[Derived Column Output]"
                          description="Default Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          name="Derived Column Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Reminders\Add accountid and origin.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\Add accountid and origin.Outputs[Derived Column Output].Columns[AccountId]"
                              dataType="i4"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Iterate Offices\Sequence Container\Reminders\Add accountid and origin.Outputs[Derived Column Output].Columns[AccountId]"
                              name="AccountId"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">@[User::RexAccountID]</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">@[User::RexAccountID]</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\Add accountid and origin.Outputs[Derived Column Output].Columns[Origin]"
                              dataType="i4"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Iterate Offices\Sequence Container\Reminders\Add accountid and origin.Outputs[Derived Column Output].Columns[Origin]"
                              name="Origin"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">2</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">2</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Reminders\Add accountid and origin.Outputs[Derived Column Error Output]"
                          description="Error Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Derived Column Error Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Reminders\Add accountid and origin.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\Add accountid and origin.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Reminders\Add accountid and origin.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\Add accountid and origin.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Reminders\Add accountid and origin.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Reminders\API Sort"
                      componentClassID="Microsoft.Sort"
                      contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
                      name="API Sort"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                          name="EliminateDuplicates">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the maximum number of threads to use for sorting."
                          expressionType="Notify"
                          name="MaximumThreads">-1</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Reminders\API Sort.Inputs[Sort Input]"
                          name="Sort Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\API Sort.Inputs[Sort Input].Columns[etag]"
                              cachedDataType="wstr"
                              cachedLength="68"
                              cachedName="etag"
                              lineageId="Package\Iterate Offices\Sequence Container\Reminders\Search Reminders.Outputs[JsonSourceOutput].Columns[etag]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\API Sort.Inputs[Sort Input].Columns[id]"
                              cachedDataType="i4"
                              cachedName="id"
                              lineageId="Package\Iterate Offices\Sequence Container\Reminders\Search Reminders.Outputs[JsonSourceOutput].Columns[id]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">1</property>
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Reminders\API Sort.Outputs[Sort Output]"
                          isSorted="true"
                          name="Sort Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\API Sort.Outputs[Sort Output].Columns[etag]"
                              dataType="wstr"
                              length="68"
                              lineageId="Package\Iterate Offices\Sequence Container\Reminders\API Sort.Outputs[Sort Output].Columns[etag]"
                              name="etag">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Iterate Offices\Sequence Container\Reminders\Search Reminders.Outputs[JsonSourceOutput].Columns[etag]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\API Sort.Outputs[Sort Output].Columns[id]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Reminders\API Sort.Outputs[Sort Output].Columns[id]"
                              name="id"
                              sortKeyPosition="1">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Iterate Offices\Sequence Container\Reminders\Search Reminders.Outputs[JsonSourceOutput].Columns[id]}</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Reminders\Existing Reminders from SQL"
                      componentClassID="Microsoft.OLEDBSource"
                      contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                      description="OLE DB Source"
                      name="Existing Reminders from SQL"
                      usesDispositions="true"
                      version="7">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">0</property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the database object used to open a rowset."
                          name="OpenRowset">[dbo].[vwContacts]</property>
                        <property
                          dataType="System.String"
                          description="Specifies the variable that contains the name of the database object used to open a rowset."
                          name="OpenRowsetVariable"></property>
                        <property
                          dataType="System.String"
                          description="The SQL command to be executed."
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">SELECT [Id], 
       [etag] as etaglead, 
       [AccountId]
FROM [Entities].[dbo].[Reminders] with (NOLOCK)
WHERE [AccountId] = ?</property>
                        <property
                          dataType="System.String"
                          description="The variable that contains the SQL command to be executed."
                          name="SqlCommandVariable"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Boolean"
                          description="Forces the use of the DefaultCodePage property value when describing character data."
                          name="AlwaysUseDefaultCodePage">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the mode used to access the database."
                          name="AccessMode"
                          typeConverter="AccessMode">2</property>
                        <property
                          dataType="System.String"
                          description="The mappings between the parameters in the SQL command and variables."
                          name="ParameterMapping">"Parameter0:Input",{40C273CD-83FA-4737-B171-10500D92D346};</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Iterate Offices\Sequence Container\Reminders\Existing Reminders from SQL.Connections[OleDbConnection]"
                          connectionManagerID="Package.ConnectionManagers[colsqlbi01v.Entities 1]"
                          connectionManagerRefId="Package.ConnectionManagers[colsqlbi01v.Entities 1]"
                          description="The OLE DB runtime connection used to access the database."
                          name="OleDbConnection" />
                      </connections>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Reminders\Existing Reminders from SQL.Outputs[OLE DB Source Output]"
                          name="OLE DB Source Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\Existing Reminders from SQL.Outputs[OLE DB Source Output].Columns[Id]"
                              dataType="i4"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Reminders\Existing Reminders from SQL.Outputs[OLE DB Source Output].ExternalColumns[Id]"
                              lineageId="Package\Iterate Offices\Sequence Container\Reminders\Existing Reminders from SQL.Outputs[OLE DB Source Output].Columns[Id]"
                              name="Id"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\Existing Reminders from SQL.Outputs[OLE DB Source Output].Columns[AccountId]"
                              dataType="i2"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Reminders\Existing Reminders from SQL.Outputs[OLE DB Source Output].ExternalColumns[AccountId]"
                              lineageId="Package\Iterate Offices\Sequence Container\Reminders\Existing Reminders from SQL.Outputs[OLE DB Source Output].Columns[AccountId]"
                              name="AccountId"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\Existing Reminders from SQL.Outputs[OLE DB Source Output].Columns[etaglead]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Reminders\Existing Reminders from SQL.Outputs[OLE DB Source Output].ExternalColumns[etaglead]"
                              length="250"
                              lineageId="Package\Iterate Offices\Sequence Container\Reminders\Existing Reminders from SQL.Outputs[OLE DB Source Output].Columns[etaglead]"
                              name="etaglead"
                              truncationRowDisposition="FailComponent" />
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\Existing Reminders from SQL.Outputs[OLE DB Source Output].ExternalColumns[Id]"
                              dataType="i4"
                              name="Id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\Existing Reminders from SQL.Outputs[OLE DB Source Output].ExternalColumns[AccountId]"
                              codePage="1252"
                              dataType="str"
                              length="4"
                              name="AccountId" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\Existing Reminders from SQL.Outputs[OLE DB Source Output].ExternalColumns[etaglead]"
                              dataType="wstr"
                              length="250"
                              name="etaglead" />
                          </externalMetadataColumns>
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Reminders\Existing Reminders from SQL.Outputs[OLE DB Source Error Output]"
                          isErrorOut="true"
                          name="OLE DB Source Error Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\Existing Reminders from SQL.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Reminders\Existing Reminders from SQL.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\Existing Reminders from SQL.Outputs[OLE DB Source Error Output].Columns[etaglead]"
                              dataType="wstr"
                              length="250"
                              lineageId="Package\Iterate Offices\Sequence Container\Reminders\Existing Reminders from SQL.Outputs[OLE DB Source Error Output].Columns[etaglead]"
                              name="etaglead" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\Existing Reminders from SQL.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Reminders\Existing Reminders from SQL.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\Existing Reminders from SQL.Outputs[OLE DB Source Error Output].Columns[Id]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Reminders\Existing Reminders from SQL.Outputs[OLE DB Source Error Output].Columns[Id]"
                              name="Id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\Existing Reminders from SQL.Outputs[OLE DB Source Error Output].Columns[AccountId]"
                              codePage="1252"
                              dataType="str"
                              length="4"
                              lineageId="Package\Iterate Offices\Sequence Container\Reminders\Existing Reminders from SQL.Outputs[OLE DB Source Error Output].Columns[AccountId]"
                              name="AccountId" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Reminders\Insert or Ignore"
                      componentClassID="Microsoft.ConditionalSplit"
                      contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
                      name="Insert or Ignore"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Reminders\Insert or Ignore.Inputs[Conditional Split Input]"
                          description="Input to the Conditional Split Transformation"
                          name="Conditional Split Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\Insert or Ignore.Inputs[Conditional Split Input].Columns[etag]"
                              cachedDataType="wstr"
                              cachedLength="68"
                              cachedName="etag"
                              lineageId="Package\Iterate Offices\Sequence Container\Reminders\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etag]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\Insert or Ignore.Inputs[Conditional Split Input].Columns[etaglead]"
                              cachedDataType="wstr"
                              cachedLength="250"
                              cachedName="etaglead"
                              lineageId="Package\Iterate Offices\Sequence Container\Reminders\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etaglead]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Reminders\Insert or Ignore.Outputs[upsert]"
                          description="Output 1 of the Conditional Split Transformation"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          exclusionGroup="1"
                          name="upsert"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Reminders\Insert or Ignore.Inputs[Conditional Split Input]"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                              name="Expression">[ISNULL](#{Package\Iterate Offices\Sequence Container\Reminders\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etaglead]}) || (#{Package\Iterate Offices\Sequence Container\Reminders\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etaglead]}) != #{Package\Iterate Offices\Sequence Container\Reminders\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etag]}</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the friendly version of the expression. This expression version uses column names."
                              expressionType="Notify"
                              name="FriendlyExpression">ISNULL(etaglead) || (etaglead) != etag</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                              name="EvaluationOrder">0</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Reminders\Insert or Ignore.Outputs[ignore]"
                          description="Output 2 of the Conditional Split Transformation"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          exclusionGroup="1"
                          name="ignore"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Reminders\Insert or Ignore.Inputs[Conditional Split Input]"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                              name="Expression">![ISNULL](#{Package\Iterate Offices\Sequence Container\Reminders\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etaglead]})</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the friendly version of the expression. This expression version uses column names."
                              expressionType="Notify"
                              name="FriendlyExpression">!ISNULL(etaglead)</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                              name="EvaluationOrder">1</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Reminders\Insert or Ignore.Outputs[Conditional Split Default Output]"
                          description="Default Output of the Conditional Split Transformation"
                          exclusionGroup="1"
                          name="Conditional Split Default Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Reminders\Insert or Ignore.Inputs[Conditional Split Input]">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              name="IsDefaultOut">true</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Reminders\Insert or Ignore.Outputs[Conditional Split Error Output]"
                          description="Error Output of the Conditional Split Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Conditional Split Error Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Reminders\Insert or Ignore.Inputs[Conditional Split Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\Insert or Ignore.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Reminders\Insert or Ignore.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\Insert or Ignore.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Reminders\Insert or Ignore.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Reminders\JSON Generator Transform"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="JSON Generator Transform; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="The JSON generator transform can be used to create JSON document from single or multiple inputs. You can create simple or nested JSON document."
                      name="JSON Generator Transform"
                      version="5">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.Int32"
                          description="Determines JSON format and output mode (e.g. one JSON for all input rows or one JSON for each input row)"
                          expressionType="Notify"
                          name="OutputMode"
                          typeConverter="ZappySys.PowerPack.Transform.JsonGeneratorTransform.JsonOutputMode">2</property>
                        <property
                          dataType="System.String"
                          description="Defines shape of output JSON string"
                          expressionType="Notify"
                          name="LayoutInfo">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;settings ver="3"&gt;
  &lt;dataset id="ds_id729" main="True" inputid="729" readfrominput="True"&gt;&lt;/dataset&gt;
  &lt;map name="method" value="Reminders::read" datatype="String" /&gt;
  &lt;map name="args"&gt;
    &lt;map src="id" name="id" datatype="String" /&gt;
  &lt;/map&gt;
  &lt;map name="strip_response_prefixes" value="true" datatype="Bool" /&gt;
  &lt;map name="token" value="{{User::RexToken}}" /&gt;
&lt;/settings&gt;</property>
                        <property
                          dataType="System.Boolean"
                          description="Do not output attribute if value is NULL. By default null attribute is output as &quot;MyColname&quot; : null "
                          expressionType="Notify"
                          name="DoNotOutputNullAttribute">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indent JSON Text generated by this transform (Pretty Print)"
                          expressionType="Notify"
                          name="IndentOutput">false</property>
                        <property
                          dataType="System.String"
                          description="Default output format for datetime columns"
                          expressionType="Notify"
                          name="DateTimeFormat">yyyy-MM-dd HH:mm:ss</property>
                        <property
                          dataType="System.String"
                          description="Culture setting for this task. This option is useful to control output format for certain data types (e.g. number, decimal) based on regional settings. In USA dot is used for decimal indicator but in Germany it may be comma. Leave this blank if you want to use system default settings."
                          expressionType="Notify"
                          name="Culture"></property>
                        <property
                          dataType="System.Boolean"
                          description="Document Header/Footer text come from upstream column rather than direct string"
                          expressionType="Notify"
                          name="UseColumnForHeaderFooter">false</property>
                        <property
                          dataType="System.String"
                          description="Header text for document (Added before each document in the output)"
                          expressionType="Notify"
                          name="DocumentHeader"></property>
                        <property
                          dataType="System.String"
                          description="Footer text for document (Added after each document in the output)"
                          expressionType="Notify"
                          name="DocumentFooter"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies how many rows to include in each batch (Array records for single dataset array mode). 0=Include all in one batch. This setting is only valid for Mode=[Single Dataset Array]"
                          expressionType="Notify"
                          name="ArrayBatchSize">0</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.JsonGeneratorTransform</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to True if you dont want to output empty nodes of sub document (e.g nested property). This option is only applicable if you enabled DoNotOutputNullProperty. If all child peoprties are NULL for parent node then by default output contains empty nodes (e.g. CountryInfo: { CityInfo: { } } for Json --OR-- &lt;CountryInfo&gt;&lt;CityInfo /&gt;&lt;/CountryInfo&gt; for Xml). You can enable this option to avoid such empty nodes from the output."
                          expressionType="Notify"
                          name="DoNotOutputEmptyNestedAttribute">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to True if you dont want to output empty array nodes when no record found for that array (e.g. &quot;Orders&quot;: [ ] for JSON --OR-- &lt;Orders&gt;&lt;/Orders&gt; for Xml). You can enable this option to avoid such empty nodes from the output."
                          expressionType="Notify"
                          name="DoNotOutputEmptyArrayAttribute">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies encoding for data. If you set CharacterSet property then Encoing is ignored."
                          expressionType="Notify"
                          name="Encoding"
                          typeConverter="ZappySys.Common.EncodingType">2</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Reminders\JSON Generator Transform.Inputs[JsonInput1]"
                          name="JsonInput1">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Id for attached dataset with input. Use JSON Layout Editor to see attached dataset"
                              expressionType="Notify"
                              name="DatasetInputId">729</property>
                          </properties>
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\JSON Generator Transform.Inputs[JsonInput1].Columns[etag]"
                              cachedDataType="wstr"
                              cachedLength="68"
                              cachedName="etag"
                              lineageId="Package\Iterate Offices\Sequence Container\Reminders\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etag]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\JSON Generator Transform.Inputs[JsonInput1].Columns[id]"
                              cachedDataType="i4"
                              cachedName="id"
                              cachedSortKeyPosition="1"
                              lineageId="Package\Iterate Offices\Sequence Container\Reminders\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[id]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\JSON Generator Transform.Inputs[JsonInput1].Columns[etaglead]"
                              cachedDataType="wstr"
                              cachedLength="250"
                              cachedName="etaglead"
                              lineageId="Package\Iterate Offices\Sequence Container\Reminders\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etaglead]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Reminders\JSON Generator Transform.Inputs[JsonInput2]"
                          name="JsonInput2">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Reminders\JSON Generator Transform.Outputs[JsonGeneratorTransformOutput]"
                          errorOrTruncationOperation="Error"
                          name="JsonGeneratorTransformOutput">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\JSON Generator Transform.Outputs[JsonGeneratorTransformOutput].Columns[ZS_JSON_OUT]"
                              dataType="nText"
                              description="This output column contains generated JSON string from JSON generator Transform"
                              lineageId="Package\Iterate Offices\Sequence Container\Reminders\JSON Generator Transform.Outputs[JsonGeneratorTransformOutput].Columns[ZS_JSON_OUT]"
                              name="ZS_JSON_OUT" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Reminders\JSON Parser Add id back in"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="JSON Parser Transform; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="Parse incoming JSON String into columns. You can also parse and transform single JSON record into multiple rows by filtering data based on JSON Path (e.g. $.Customer.Orders[*])"
                      name="JSON Parser Add id back in"
                      usesDispositions="true"
                      version="2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for any numeric data types"
                          expressionType="Notify"
                          name="TreatBlankNumberAsNull">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for bool data types"
                          expressionType="Notify"
                          name="TreatBlankBoolAsNull">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for any date/time data types"
                          expressionType="Notify"
                          name="TreatBlankDateAsNull">true</property>
                        <property
                          dataType="System.String"
                          description="Sample JSON data used to parse output columns."
                          expressionType="Notify"
                          name="SampleData"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">{"method":"CustomFields::readFieldValuesAndRecord","args":{"service_name":"Leads","service_object_id":"28569","return_custom_fields_keyed_by":"field_name"},"strip_response_prefixes":1,"token":"b57c-0be2-04f4-8d65-fd25-a099-6087-07de-1780-19443"}</property>
                        <property
                          dataType="System.Boolean"
                          description="Include all upstream parent columns into output except the one you selected to parse. By default only parsed columns from Input document is included in the output. If you wish to include all other upstream columns in the output too then check this option."
                          expressionType="Notify"
                          name="OutputAllUpstreamColumns">true</property>
                        <property
                          dataType="System.Int32"
                          description="Defines how to handle empty input. By default NULL or Empty input is skipped from parsing."
                          expressionType="Notify"
                          name="EmptyInputProcessingMode"
                          typeConverter="ZappySys.Common.Data.EmptyInputProcessingMode">0</property>
                        <property
                          dataType="System.String"
                          description="Defines how to handle empty input. By default NULL or Empty input is skipped from parsing."
                          expressionType="Notify"
                          name="TreatEmptyInputAs">{ }</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum JSON records to fetch. Set this value to 0 for all records"
                          expressionType="Notify"
                          name="MaxRows">0</property>
                        <property
                          dataType="System.String"
                          description="Enter expression here to filter data.(Example:  $.Users[*].UserName ) This will fetch User names from users records"
                          expressionType="Notify"
                          name="Filter"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.Boolean"
                          description="Use this option to include parent properties (Non array) in the output along with Filtered Rows"
                          expressionType="Notify"
                          name="IncludeParentColumns">true</property>
                        <property
                          dataType="System.Boolean"
                          description="By default child and parent information is not included in the output if children not found for specified expression. For example if you want to extract all orders from all customers nodes then you can type $.Customers[*].Orders[*]. This will fetch all orders from all customers. By default customers records without orders wont be included in the output. If you want to include those customers where orders not found then check this option (Output null information for order attributes). This behavior is similar to LEFT OUTER JOIN in SQL (Left side is parent, right side is child). This option is ***resource intensive*** so only check if you really care about this behavior."
                          expressionType="Notify"
                          name="IncludeParentColumnsWhenChildMissing">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to true if you want to output parent columns which are array. By default any parent column which is an array is not included in output. See also FilterForParentColumnsWithArrayType property if you set this property"
                          expressionType="Notify"
                          name="IncludeParentColumnsWithArrayType">false</property>
                        <property
                          dataType="System.String"
                          description="Filter expression to extract value form parent"
                          expressionType="Notify"
                          name="FilterForParentColumnsWithArrayType"></property>
                        <property
                          dataType="System.String"
                          description="Prefix for parent column name. This option is only valid if you have set IncludeParentColumns=True"
                          expressionType="Notify"
                          name="ParentColumnPrefix">P_</property>
                        <property
                          dataType="System.Boolean"
                          description="Throw error if property name specified in filter expression is missing. By default it will ignore any missing property errors."
                          expressionType="Notify"
                          name="ThrowErrorIfPropertyMissing">false</property>
                        <property
                          dataType="System.Int32"
                          description="This property how many nested levels should be scanned to fetch various properties. 0=Scan all child levels."
                          expressionType="Notify"
                          name="MaxLevelsToScan">0</property>
                        <property
                          dataType="System.String"
                          description="List comma separated property names from JSON document which you want to exclude from output. Specify parent property name to exclude all child nodes."
                          expressionType="Notify"
                          name="ExcludedProperties"></property>
                        <property
                          dataType="System.String"
                          description="Property level separator used in generated property name (separator for outer properties - Above selected filter node). Use this if default separator is producing duplicate property name which is conflicting with existing name."
                          expressionType="Notify"
                          name="LevelSeparator">_</property>
                        <property
                          dataType="System.Boolean"
                          description="Enables deep array flattening for selected filtered hierarchy. When you turn on this property it will flatten each property of each array item and expose as column (e.g. If you have Filter set as $.customers[*] and for each customer you have an array of Addresses then you may see output columns like Addresses.1.City, Addresses.1.State, Addresses.2.City, Addresses.2.State .... Addresses.N.City, Addresses.N.State). You can control how many array items you want to flatten by setting MaxArrayItemsToFlatten property."
                          expressionType="Notify"
                          name="EnableArrayFlattening">false</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum number of array items to flatten. inner array flattening. Adjust this property to control how many columns being generated. This option is ignored if you set EnableArrayFlattening=false"
                          expressionType="Notify"
                          name="MaxArrayItemsToFlatten">10</property>
                        <property
                          dataType="System.String"
                          description="Specifies how custom date formatted strings are parsed when reading JSON."
                          expressionType="Notify"
                          name="DateFormatString"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies how date formatted strings, e.g. Date(1198908717056) and 2012-03-21T05:40Z, are parsed when reading JSON."
                          expressionType="Notify"
                          name="DateParseHandling"
                          typeConverter="ZappySys.Common.DateParseHandling">1</property>
                        <property
                          dataType="System.Boolean"
                          description="Output as raw JSON document rather than parsing individual fields. This option is helpful if you have documents stored in a file and you want to pass them downstream as raw JSON string rather than parsing into columns."
                          expressionType="Notify"
                          name="OutputRawDocument">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indent JSON output so its easy to read."
                          expressionType="Notify"
                          name="IndentOutput">false</property>
                        <property
                          dataType="System.Boolean"
                          description="When this property is true then Column is converted to Row. Pivoted names will appear under  Pivot_Name column and values will appear under Pivot_Value field."
                          expressionType="Notify"
                          name="EnablePivot">false</property>
                        <property
                          dataType="System.Int32"
                          description="Array Transformation you want to apply. Useful for case when you have 2-Dimensional arrays with rows/columns in separate arrays."
                          expressionType="Notify"
                          name="ArrayTransformationType"
                          typeConverter="ZappySys.Json.ArrayTransformType">0</property>
                        <property
                          dataType="System.String"
                          description="Filter expression to use to extract column names for array transformation."
                          expressionType="Notify"
                          name="ArrayTransColumnNameFilter"></property>
                        <property
                          dataType="System.String"
                          description="Filter expression for row values (Not applicable for simple array transformation)."
                          expressionType="Notify"
                          name="ArrayTransRowValueFilter"></property>
                        <property
                          dataType="System.Boolean"
                          description="When you have 2D array but don't have column list specified in a separate array then use this option (e.g. { arr: [[10,11],[21,22]] } )."
                          expressionType="Notify"
                          name="ArrayTransEnableCustomColumns">false</property>
                        <property
                          dataType="System.String"
                          description="When you have 2D array but don't have column list specified in a separate array then use specify column names here. Use comma separated list (e.g col1,col2,col3 ). Column name Order must match value order."
                          expressionType="Notify"
                          name="ArrayTransCustomColumns"></property>
                        <property
                          dataType="System.Int32"
                          description="Metadata scan mode controls how data type and length is determined. By default few records scanned to determine datatype/length. Changing ScanMode affects length/datatype accuracy."
                          expressionType="Notify"
                          name="MetaDataScanMode"
                          typeConverter="ZappySys.Common.Data.MetaDataScanMode">4</property>
                        <property
                          dataType="System.Int32"
                          description="Length for all string column. This option is only valid for MetaDataScanMode=Custom"
                          expressionType="Notify"
                          name="MetaDataCustomLength">1000</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.JsonParserTransform</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Reminders\JSON Parser Add id back in.Inputs[JsonParserTransformInput]"
                          errorRowDisposition="FailComponent"
                          name="JsonParserTransformInput"
                          truncationRowDisposition="FailComponent">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\JSON Parser Add id back in.Inputs[JsonParserTransformInput].Columns[ZS_JSON_OUT]"
                              cachedDataType="nText"
                              cachedName="ZS_JSON_OUT"
                              lineageId="Package\Iterate Offices\Sequence Container\Reminders\JSON Generator Transform.Outputs[JsonGeneratorTransformOutput].Columns[ZS_JSON_OUT]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\JSON Parser Add id back in.Inputs[JsonParserTransformInput].Columns[ResponseText]"
                              cachedDataType="nText"
                              cachedName="ResponseText"
                              lineageId="Package\Iterate Offices\Sequence Container\Reminders\Web API Destination.Outputs[Response Output].Columns[ResponseText]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Reminders\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[ResponseText]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\JSON Parser Add id back in.Inputs[JsonParserTransformInput].Columns[StatusCode]"
                              cachedDataType="i4"
                              cachedName="StatusCode"
                              lineageId="Package\Iterate Offices\Sequence Container\Reminders\Web API Destination.Outputs[Response Output].Columns[StatusCode]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Reminders\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[StatusCode]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True" />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Reminders\JSON Parser Add id back in.Outputs[JsonParserTransformOutput]"
                          errorOrTruncationOperation="Error"
                          errorRowDisposition="FailComponent"
                          name="JsonParserTransformOutput"
                          truncationRowDisposition="FailComponent">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[StatusCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Reminders\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[StatusCode]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Reminders\JSON Parser Add id back in.Inputs[JsonParserTransformInput].Columns[StatusCode]"
                              name="StatusCode" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[ResponseText]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\Reminders\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[ResponseText]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Reminders\JSON Parser Add id back in.Inputs[JsonParserTransformInput].Columns[ResponseText]"
                              name="ResponseText" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[args.service_object_id]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Reminders\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].ExternalColumns[args.service_object_id]"
                              length="20"
                              lineageId="Package\Iterate Offices\Sequence Container\Reminders\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[args.service_object_id]"
                              name="args.service_object_id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[method]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Reminders\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].ExternalColumns[method]"
                              length="152"
                              lineageId="Package\Iterate Offices\Sequence Container\Reminders\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[method]"
                              name="method" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[args.service_name]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Reminders\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].ExternalColumns[args.service_name]"
                              length="20"
                              lineageId="Package\Iterate Offices\Sequence Container\Reminders\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[args.service_name]"
                              name="args.service_name" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[args.return_custom_fields_keyed_by]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Reminders\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].ExternalColumns[args.return_custom_fields_keyed_by]"
                              length="40"
                              lineageId="Package\Iterate Offices\Sequence Container\Reminders\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[args.return_custom_fields_keyed_by]"
                              name="args.return_custom_fields_keyed_by" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[strip_response_prefixes]"
                              dataType="i8"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Reminders\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].ExternalColumns[strip_response_prefixes]"
                              lineageId="Package\Iterate Offices\Sequence Container\Reminders\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[strip_response_prefixes]"
                              name="strip_response_prefixes" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[token]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Reminders\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].ExternalColumns[token]"
                              length="200"
                              lineageId="Package\Iterate Offices\Sequence Container\Reminders\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[token]"
                              name="token" />
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].ExternalColumns[method]"
                              dataType="wstr"
                              length="152"
                              name="method" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].ExternalColumns[args.service_name]"
                              dataType="wstr"
                              length="20"
                              name="args.service_name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].ExternalColumns[args.service_object_id]"
                              dataType="wstr"
                              length="20"
                              name="args.service_object_id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].ExternalColumns[args.return_custom_fields_keyed_by]"
                              dataType="wstr"
                              length="40"
                              name="args.return_custom_fields_keyed_by" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].ExternalColumns[strip_response_prefixes]"
                              dataType="i8"
                              name="strip_response_prefixes" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].ExternalColumns[token]"
                              dataType="wstr"
                              length="200"
                              name="token" />
                          </externalMetadataColumns>
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Reminders\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output]"
                          isErrorOut="true"
                          name="JsonParserTransform Error Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[StatusCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Reminders\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[StatusCode]"
                              name="StatusCode" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[ResponseText]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\Reminders\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[ResponseText]"
                              name="ResponseText" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[args.service_object_id]"
                              dataType="wstr"
                              length="20"
                              lineageId="Package\Iterate Offices\Sequence Container\Reminders\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[args.service_object_id]"
                              name="args.service_object_id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[method]"
                              dataType="wstr"
                              length="152"
                              lineageId="Package\Iterate Offices\Sequence Container\Reminders\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[method]"
                              name="method" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[args.service_name]"
                              dataType="wstr"
                              length="20"
                              lineageId="Package\Iterate Offices\Sequence Container\Reminders\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[args.service_name]"
                              name="args.service_name" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[args.return_custom_fields_keyed_by]"
                              dataType="wstr"
                              length="40"
                              lineageId="Package\Iterate Offices\Sequence Container\Reminders\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[args.return_custom_fields_keyed_by]"
                              name="args.return_custom_fields_keyed_by" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[strip_response_prefixes]"
                              dataType="i8"
                              lineageId="Package\Iterate Offices\Sequence Container\Reminders\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[strip_response_prefixes]"
                              name="strip_response_prefixes" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[token]"
                              dataType="wstr"
                              length="200"
                              lineageId="Package\Iterate Offices\Sequence Container\Reminders\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[token]"
                              name="token" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Reminders\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Reminders\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[ErrorColumnName]"
                              codePage="1252"
                              dataType="str"
                              length="128"
                              lineageId="Package\Iterate Offices\Sequence Container\Reminders\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[ErrorColumnName]"
                              name="ErrorColumnName" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[ErrorMessage]"
                              dataType="wstr"
                              length="1024"
                              lineageId="Package\Iterate Offices\Sequence Container\Reminders\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[ErrorMessage]"
                              name="ErrorMessage" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[ErrorRawData]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\Reminders\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[ErrorRawData]"
                              name="ErrorRawData" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Reminders\Merge Join To Find Those to Insert"
                      componentClassID="Microsoft.MergeJoin"
                      contactInfo="Merge Join;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Combine two sorted data flows into one using the FULL, LEFT, or INNER join. We recommend this transformation when data flows can be sorted at their sources."
                      name="Merge Join To Find Those to Insert"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of join to perform."
                          name="JoinType"
                          typeConverter="JoinType">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the number of columns in the ordering key."
                          name="NumKeyColumns">1</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the null values are treated as equal values."
                          name="TreatNullsAsEqual">true</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates the requested maximum buffers per input before blocking."
                          name="MaxBuffersPerInput">5</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Reminders\Merge Join To Find Those to Insert.Inputs[Merge Join Left Input]"
                          hasSideEffects="true"
                          name="Merge Join Left Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\Merge Join To Find Those to Insert.Inputs[Merge Join Left Input].Columns[etag]"
                              cachedDataType="wstr"
                              cachedLength="68"
                              cachedName="etag"
                              lineageId="Package\Iterate Offices\Sequence Container\Reminders\API Sort.Outputs[Sort Output].Columns[etag]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\Merge Join To Find Those to Insert.Inputs[Merge Join Left Input].Columns[id]"
                              cachedDataType="i4"
                              cachedName="id"
                              cachedSortKeyPosition="1"
                              lineageId="Package\Iterate Offices\Sequence Container\Reminders\API Sort.Outputs[Sort Output].Columns[id]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Reminders\Merge Join To Find Those to Insert.Inputs[Merge Join Right Input]"
                          hasSideEffects="true"
                          name="Merge Join Right Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\Merge Join To Find Those to Insert.Inputs[Merge Join Right Input].Columns[Id]"
                              cachedDataType="i4"
                              cachedName="Id"
                              cachedSortKeyPosition="1"
                              lineageId="Package\Iterate Offices\Sequence Container\Reminders\SQL Sort.Outputs[Sort Output].Columns[Id]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\Merge Join To Find Those to Insert.Inputs[Merge Join Right Input].Columns[etaglead]"
                              cachedDataType="wstr"
                              cachedLength="250"
                              cachedName="etaglead"
                              lineageId="Package\Iterate Offices\Sequence Container\Reminders\SQL Sort.Outputs[Sort Output].Columns[etaglead]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Reminders\Merge Join To Find Those to Insert.Outputs[Merge Join Output]"
                          isSorted="true"
                          name="Merge Join Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etag]"
                              dataType="wstr"
                              length="68"
                              lineageId="Package\Iterate Offices\Sequence Container\Reminders\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etag]"
                              name="etag">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Iterate Offices\Sequence Container\Reminders\Merge Join To Find Those to Insert.Inputs[Merge Join Left Input].Columns[etag]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[id]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Reminders\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[id]"
                              name="id"
                              sortKeyPosition="1">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Iterate Offices\Sequence Container\Reminders\Merge Join To Find Those to Insert.Inputs[Merge Join Left Input].Columns[id]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etaglead]"
                              dataType="wstr"
                              length="250"
                              lineageId="Package\Iterate Offices\Sequence Container\Reminders\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etaglead]"
                              name="etaglead">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Iterate Offices\Sequence Container\Reminders\Merge Join To Find Those to Insert.Inputs[Merge Join Right Input].Columns[etaglead]}</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Reminders\record"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="JSON Parser Transform; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="Parse incoming JSON String into columns. You can also parse and transform single JSON record into multiple rows by filtering data based on JSON Path (e.g. $.Customer.Orders[*])"
                      name="record"
                      usesDispositions="true"
                      version="2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">3</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for any numeric data types"
                          expressionType="Notify"
                          name="TreatBlankNumberAsNull">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for bool data types"
                          expressionType="Notify"
                          name="TreatBlankBoolAsNull">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for any date/time data types"
                          expressionType="Notify"
                          name="TreatBlankDateAsNull">true</property>
                        <property
                          dataType="System.String"
                          description="Sample JSON data used to parse output columns."
                          expressionType="Notify"
                          name="SampleData"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">{"result":{"system_record_state":"active","system_ctime":1547732441,"system_modtime":1547732441,"system_completed_time":null,"reminder_description":"Send newsletter","reminder_date":"2019-01-17","track_instance_id":"953fc27c-191b-47d4-9c9f-6dd36c69f7ed","recur_frequency":null,"recur_unit":null,"recur_week_day":null,"recur_month_type":null,"recur_month_day":null,"recur_month_week_number":null,"recur_after_mode":null,"recurring_reminder_id":null,"recur_stop_after_date":null,"scheduled_send":null,"etag":"4932-1547732441","deferred":null,"security_user_rights":["read","update","purge"],"scheduled_send_time":null,"scheduled_send_connection_id":null,"remindee":{"id":"record_owner","type":"system","display":"Record Owner"},"system_modified_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"system_created_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"contact":{"system_record_state":"active","system_ctime":"1547052879","system_modtime":"1594741628","name":"Laura Sullivan","email_address":"lindsay.davey@spicerhaart.co.uk","phone_number":"07769 661864","fax_number":null,"is_dnd":null,"type":"person","last_contacted_date":"2020-03-02","name_last":"Sullivan","address_postal":"104 Walton Way,\nNEWBURY, RG14 2LJ","address":"104 Walton Way,\nNEWBURY, RG14 2LJ","interest_level":null,"marketing_birthday":null,"marketing_enquiry_source":"Direct Mail","marketing_gender":"female","marketing_postcode":null,"name_legal":"Laura Sullivan","name_salutation":"Laura Sullivan","name_addressee":"Laura Sullivan","system_owner_user":{"id":"18544","name":"Julie Hodgson","first_name":"Julie","last_name":"Hodgson","email_address":"julie.hodgson@haart.co.uk"},"contact_image":null,"marketing_enquiry_method":{"id":"26731","text":"Email"},"etag":"38710-1594741628","id":"38710"},"market_lead":null,"property":null,"project":null,"project_stage":null,"listing":null,"template":null,"track":{"track_name":"ML- Cooling Off","track_color":"#84c6f1","id":2,"instance_id":"953fc27c-191b-47d4-9c9f-6dd36c69f7ed"},"system_completed_by_user":null,"mail_merge_event":null,"scheduled_send_from_user":null,"reminder_type":{"id":"email","text":"Email"},"priority":{"id":"default","text":"Default"},"id":4932},"error":null}
</property>
                        <property
                          dataType="System.Boolean"
                          description="Include all upstream parent columns into output except the one you selected to parse. By default only parsed columns from Input document is included in the output. If you wish to include all other upstream columns in the output too then check this option."
                          expressionType="Notify"
                          name="OutputAllUpstreamColumns">true</property>
                        <property
                          dataType="System.Int32"
                          description="Defines how to handle empty input. By default NULL or Empty input is skipped from parsing."
                          expressionType="Notify"
                          name="EmptyInputProcessingMode"
                          typeConverter="ZappySys.Common.Data.EmptyInputProcessingMode">0</property>
                        <property
                          dataType="System.String"
                          description="Defines how to handle empty input. By default NULL or Empty input is skipped from parsing."
                          expressionType="Notify"
                          name="TreatEmptyInputAs">{ }</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum JSON records to fetch. Set this value to 0 for all records"
                          expressionType="Notify"
                          name="MaxRows">0</property>
                        <property
                          dataType="System.String"
                          description="Enter expression here to filter data.(Example:  $.Users[*].UserName ) This will fetch User names from users records"
                          expressionType="Notify"
                          name="Filter"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">$.result</property>
                        <property
                          dataType="System.Boolean"
                          description="Use this option to include parent properties (Non array) in the output along with Filtered Rows"
                          expressionType="Notify"
                          name="IncludeParentColumns">true</property>
                        <property
                          dataType="System.Boolean"
                          description="By default child and parent information is not included in the output if children not found for specified expression. For example if you want to extract all orders from all customers nodes then you can type $.Customers[*].Orders[*]. This will fetch all orders from all customers. By default customers records without orders wont be included in the output. If you want to include those customers where orders not found then check this option (Output null information for order attributes). This behavior is similar to LEFT OUTER JOIN in SQL (Left side is parent, right side is child). This option is ***resource intensive*** so only check if you really care about this behavior."
                          expressionType="Notify"
                          name="IncludeParentColumnsWhenChildMissing">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to true if you want to output parent columns which are array. By default any parent column which is an array is not included in output. See also FilterForParentColumnsWithArrayType property if you set this property"
                          expressionType="Notify"
                          name="IncludeParentColumnsWithArrayType">false</property>
                        <property
                          dataType="System.String"
                          description="Filter expression to extract value form parent"
                          expressionType="Notify"
                          name="FilterForParentColumnsWithArrayType"></property>
                        <property
                          dataType="System.String"
                          description="Prefix for parent column name. This option is only valid if you have set IncludeParentColumns=True"
                          expressionType="Notify"
                          name="ParentColumnPrefix">P_</property>
                        <property
                          dataType="System.Boolean"
                          description="Throw error if property name specified in filter expression is missing. By default it will ignore any missing property errors."
                          expressionType="Notify"
                          name="ThrowErrorIfPropertyMissing">false</property>
                        <property
                          dataType="System.Int32"
                          description="This property how many nested levels should be scanned to fetch various properties. 0=Scan all child levels."
                          expressionType="Notify"
                          name="MaxLevelsToScan">0</property>
                        <property
                          dataType="System.String"
                          description="List comma separated property names from JSON document which you want to exclude from output. Specify parent property name to exclude all child nodes."
                          expressionType="Notify"
                          name="ExcludedProperties"></property>
                        <property
                          dataType="System.String"
                          description="Property level separator used in generated property name (separator for outer properties - Above selected filter node). Use this if default separator is producing duplicate property name which is conflicting with existing name."
                          expressionType="Notify"
                          name="LevelSeparator">_</property>
                        <property
                          dataType="System.Boolean"
                          description="Enables deep array flattening for selected filtered hierarchy. When you turn on this property it will flatten each property of each array item and expose as column (e.g. If you have Filter set as $.customers[*] and for each customer you have an array of Addresses then you may see output columns like Addresses.1.City, Addresses.1.State, Addresses.2.City, Addresses.2.State .... Addresses.N.City, Addresses.N.State). You can control how many array items you want to flatten by setting MaxArrayItemsToFlatten property."
                          expressionType="Notify"
                          name="EnableArrayFlattening">false</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum number of array items to flatten. inner array flattening. Adjust this property to control how many columns being generated. This option is ignored if you set EnableArrayFlattening=false"
                          expressionType="Notify"
                          name="MaxArrayItemsToFlatten">10</property>
                        <property
                          dataType="System.String"
                          description="Specifies how custom date formatted strings are parsed when reading JSON."
                          expressionType="Notify"
                          name="DateFormatString"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies how date formatted strings, e.g. Date(1198908717056) and 2012-03-21T05:40Z, are parsed when reading JSON."
                          expressionType="Notify"
                          name="DateParseHandling"
                          typeConverter="ZappySys.Common.DateParseHandling">1</property>
                        <property
                          dataType="System.Boolean"
                          description="Output as raw JSON document rather than parsing individual fields. This option is helpful if you have documents stored in a file and you want to pass them downstream as raw JSON string rather than parsing into columns."
                          expressionType="Notify"
                          name="OutputRawDocument">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Indent JSON output so its easy to read."
                          expressionType="Notify"
                          name="IndentOutput">true</property>
                        <property
                          dataType="System.Boolean"
                          description="When this property is true then Column is converted to Row. Pivoted names will appear under  Pivot_Name column and values will appear under Pivot_Value field."
                          expressionType="Notify"
                          name="EnablePivot">false</property>
                        <property
                          dataType="System.Int32"
                          description="Array Transformation you want to apply. Useful for case when you have 2-Dimensional arrays with rows/columns in separate arrays."
                          expressionType="Notify"
                          name="ArrayTransformationType"
                          typeConverter="ZappySys.Json.ArrayTransformType">0</property>
                        <property
                          dataType="System.String"
                          description="Filter expression to use to extract column names for array transformation."
                          expressionType="Notify"
                          name="ArrayTransColumnNameFilter"></property>
                        <property
                          dataType="System.String"
                          description="Filter expression for row values (Not applicable for simple array transformation)."
                          expressionType="Notify"
                          name="ArrayTransRowValueFilter"></property>
                        <property
                          dataType="System.Boolean"
                          description="When you have 2D array but don't have column list specified in a separate array then use this option (e.g. { arr: [[10,11],[21,22]] } )."
                          expressionType="Notify"
                          name="ArrayTransEnableCustomColumns">false</property>
                        <property
                          dataType="System.String"
                          description="When you have 2D array but don't have column list specified in a separate array then use specify column names here. Use comma separated list (e.g col1,col2,col3 ). Column name Order must match value order."
                          expressionType="Notify"
                          name="ArrayTransCustomColumns"></property>
                        <property
                          dataType="System.Int32"
                          description="Metadata scan mode controls how data type and length is determined. By default few records scanned to determine datatype/length. Changing ScanMode affects length/datatype accuracy."
                          expressionType="Notify"
                          name="MetaDataScanMode"
                          typeConverter="ZappySys.Common.Data.MetaDataScanMode">4</property>
                        <property
                          dataType="System.Int32"
                          description="Length for all string column. This option is only valid for MetaDataScanMode=Custom"
                          expressionType="Notify"
                          name="MetaDataCustomLength">1000</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.JsonParserTransform</property>
                        <property
                          dataType="System.Boolean"
                          name="EnableBigNumberHandling">false</property>
                        <property
                          dataType="System.Int32"
                          name="Encoding">0</property>
                        <property
                          dataType="System.String"
                          name="CharacterSet"></property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Reminders\record.Inputs[JsonParserTransformInput]"
                          errorRowDisposition="FailComponent"
                          name="JsonParserTransformInput"
                          truncationRowDisposition="FailComponent">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\record.Inputs[JsonParserTransformInput].Columns[ResponseText]"
                              cachedDataType="nText"
                              cachedName="ResponseText"
                              lineageId="Package\Iterate Offices\Sequence Container\Reminders\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[ResponseText]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\record.Inputs[JsonParserTransformInput].Columns[StatusCode]"
                              cachedDataType="i4"
                              cachedName="StatusCode"
                              lineageId="Package\Iterate Offices\Sequence Container\Reminders\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[StatusCode]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Reminders\record.Outputs[JsonParserTransformOutput].Columns[StatusCode]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\record.Inputs[JsonParserTransformInput].Columns[args.service_object_id]"
                              cachedDataType="wstr"
                              cachedLength="20"
                              cachedName="args.service_object_id"
                              lineageId="Package\Iterate Offices\Sequence Container\Reminders\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[args.service_object_id]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Reminders\record.Outputs[JsonParserTransformOutput].Columns[args.service_object_id]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\record.Inputs[JsonParserTransformInput].Columns[method]"
                              cachedDataType="wstr"
                              cachedLength="152"
                              cachedName="method"
                              lineageId="Package\Iterate Offices\Sequence Container\Reminders\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[method]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Reminders\record.Outputs[JsonParserTransformOutput].Columns[method]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\record.Inputs[JsonParserTransformInput].Columns[args.service_name]"
                              cachedDataType="wstr"
                              cachedLength="20"
                              cachedName="args.service_name"
                              lineageId="Package\Iterate Offices\Sequence Container\Reminders\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[args.service_name]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Reminders\record.Outputs[JsonParserTransformOutput].Columns[args.service_name]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\record.Inputs[JsonParserTransformInput].Columns[args.return_custom_fields_keyed_by]"
                              cachedDataType="wstr"
                              cachedLength="40"
                              cachedName="args.return_custom_fields_keyed_by"
                              lineageId="Package\Iterate Offices\Sequence Container\Reminders\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[args.return_custom_fields_keyed_by]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Reminders\record.Outputs[JsonParserTransformOutput].Columns[args.return_custom_fields_keyed_by]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\record.Inputs[JsonParserTransformInput].Columns[strip_response_prefixes]"
                              cachedDataType="i8"
                              cachedName="strip_response_prefixes"
                              lineageId="Package\Iterate Offices\Sequence Container\Reminders\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[strip_response_prefixes]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Reminders\record.Outputs[JsonParserTransformOutput].Columns[strip_response_prefixes]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\record.Inputs[JsonParserTransformInput].Columns[token]"
                              cachedDataType="wstr"
                              cachedLength="200"
                              cachedName="token"
                              lineageId="Package\Iterate Offices\Sequence Container\Reminders\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[token]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Reminders\record.Outputs[JsonParserTransformOutput].Columns[token]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True" />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Reminders\record.Outputs[JsonParserTransformOutput]"
                          errorOrTruncationOperation="Error"
                          errorRowDisposition="FailComponent"
                          name="JsonParserTransformOutput"
                          truncationRowDisposition="FailComponent">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\record.Outputs[JsonParserTransformOutput].Columns[token]"
                              dataType="wstr"
                              length="200"
                              lineageId="Package\Iterate Offices\Sequence Container\Reminders\record.Outputs[JsonParserTransformOutput].Columns[token]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Reminders\record.Inputs[JsonParserTransformInput].Columns[token]"
                              name="token" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\record.Outputs[JsonParserTransformOutput].Columns[strip_response_prefixes]"
                              dataType="i8"
                              lineageId="Package\Iterate Offices\Sequence Container\Reminders\record.Outputs[JsonParserTransformOutput].Columns[strip_response_prefixes]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Reminders\record.Inputs[JsonParserTransformInput].Columns[strip_response_prefixes]"
                              name="strip_response_prefixes" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\record.Outputs[JsonParserTransformOutput].Columns[args.return_custom_fields_keyed_by]"
                              dataType="wstr"
                              length="40"
                              lineageId="Package\Iterate Offices\Sequence Container\Reminders\record.Outputs[JsonParserTransformOutput].Columns[args.return_custom_fields_keyed_by]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Reminders\record.Inputs[JsonParserTransformInput].Columns[args.return_custom_fields_keyed_by]"
                              name="args.return_custom_fields_keyed_by" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\record.Outputs[JsonParserTransformOutput].Columns[args.service_name]"
                              dataType="wstr"
                              length="20"
                              lineageId="Package\Iterate Offices\Sequence Container\Reminders\record.Outputs[JsonParserTransformOutput].Columns[args.service_name]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Reminders\record.Inputs[JsonParserTransformInput].Columns[args.service_name]"
                              name="args.service_name" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\record.Outputs[JsonParserTransformOutput].Columns[method]"
                              dataType="wstr"
                              length="152"
                              lineageId="Package\Iterate Offices\Sequence Container\Reminders\record.Outputs[JsonParserTransformOutput].Columns[method]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Reminders\record.Inputs[JsonParserTransformInput].Columns[method]"
                              name="method" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\record.Outputs[JsonParserTransformOutput].Columns[args.service_object_id]"
                              dataType="wstr"
                              length="20"
                              lineageId="Package\Iterate Offices\Sequence Container\Reminders\record.Outputs[JsonParserTransformOutput].Columns[args.service_object_id]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Reminders\record.Inputs[JsonParserTransformInput].Columns[args.service_object_id]"
                              name="args.service_object_id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\record.Outputs[JsonParserTransformOutput].Columns[StatusCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Reminders\record.Outputs[JsonParserTransformOutput].Columns[StatusCode]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Reminders\record.Inputs[JsonParserTransformInput].Columns[StatusCode]"
                              name="StatusCode" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\record.Outputs[JsonParserTransformOutput].Columns[__DOCUMENT__]"
                              dataType="nText"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Reminders\record.Outputs[JsonParserTransformOutput].ExternalColumns[__DOCUMENT__]"
                              lineageId="Package\Iterate Offices\Sequence Container\Reminders\record.Outputs[JsonParserTransformOutput].Columns[__DOCUMENT__]"
                              name="__DOCUMENT__" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\record.Outputs[JsonParserTransformOutput].Columns[P_error]"
                              dataType="nText"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Reminders\record.Outputs[JsonParserTransformOutput].ExternalColumns[P_error]"
                              lineageId="Package\Iterate Offices\Sequence Container\Reminders\record.Outputs[JsonParserTransformOutput].Columns[P_error]"
                              name="P_error" />
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\record.Outputs[JsonParserTransformOutput].ExternalColumns[P_error]"
                              dataType="nText"
                              name="P_error" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\record.Outputs[JsonParserTransformOutput].ExternalColumns[__DOCUMENT__]"
                              dataType="nText"
                              name="__DOCUMENT__" />
                          </externalMetadataColumns>
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Reminders\record.Outputs[JsonParserTransform Error Output]"
                          isErrorOut="true"
                          name="JsonParserTransform Error Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\record.Outputs[JsonParserTransform Error Output].Columns[token]"
                              dataType="wstr"
                              length="200"
                              lineageId="Package\Iterate Offices\Sequence Container\Reminders\record.Outputs[JsonParserTransform Error Output].Columns[token]"
                              name="token" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\record.Outputs[JsonParserTransform Error Output].Columns[strip_response_prefixes]"
                              dataType="i8"
                              lineageId="Package\Iterate Offices\Sequence Container\Reminders\record.Outputs[JsonParserTransform Error Output].Columns[strip_response_prefixes]"
                              name="strip_response_prefixes" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\record.Outputs[JsonParserTransform Error Output].Columns[args.return_custom_fields_keyed_by]"
                              dataType="wstr"
                              length="40"
                              lineageId="Package\Iterate Offices\Sequence Container\Reminders\record.Outputs[JsonParserTransform Error Output].Columns[args.return_custom_fields_keyed_by]"
                              name="args.return_custom_fields_keyed_by" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\record.Outputs[JsonParserTransform Error Output].Columns[args.service_name]"
                              dataType="wstr"
                              length="20"
                              lineageId="Package\Iterate Offices\Sequence Container\Reminders\record.Outputs[JsonParserTransform Error Output].Columns[args.service_name]"
                              name="args.service_name" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\record.Outputs[JsonParserTransform Error Output].Columns[method]"
                              dataType="wstr"
                              length="152"
                              lineageId="Package\Iterate Offices\Sequence Container\Reminders\record.Outputs[JsonParserTransform Error Output].Columns[method]"
                              name="method" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\record.Outputs[JsonParserTransform Error Output].Columns[args.service_object_id]"
                              dataType="wstr"
                              length="20"
                              lineageId="Package\Iterate Offices\Sequence Container\Reminders\record.Outputs[JsonParserTransform Error Output].Columns[args.service_object_id]"
                              name="args.service_object_id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\record.Outputs[JsonParserTransform Error Output].Columns[StatusCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Reminders\record.Outputs[JsonParserTransform Error Output].Columns[StatusCode]"
                              name="StatusCode" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\record.Outputs[JsonParserTransform Error Output].Columns[__DOCUMENT__]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\Reminders\record.Outputs[JsonParserTransform Error Output].Columns[__DOCUMENT__]"
                              name="__DOCUMENT__" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\record.Outputs[JsonParserTransform Error Output].Columns[P_error]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\Reminders\record.Outputs[JsonParserTransform Error Output].Columns[P_error]"
                              name="P_error" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\record.Outputs[JsonParserTransform Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Reminders\record.Outputs[JsonParserTransform Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\record.Outputs[JsonParserTransform Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Reminders\record.Outputs[JsonParserTransform Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\record.Outputs[JsonParserTransform Error Output].Columns[ErrorColumnName]"
                              codePage="1252"
                              dataType="str"
                              length="128"
                              lineageId="Package\Iterate Offices\Sequence Container\Reminders\record.Outputs[JsonParserTransform Error Output].Columns[ErrorColumnName]"
                              name="ErrorColumnName" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\record.Outputs[JsonParserTransform Error Output].Columns[ErrorMessage]"
                              dataType="wstr"
                              length="1024"
                              lineageId="Package\Iterate Offices\Sequence Container\Reminders\record.Outputs[JsonParserTransform Error Output].Columns[ErrorMessage]"
                              name="ErrorMessage" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\record.Outputs[JsonParserTransform Error Output].Columns[ErrorRawData]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\Reminders\record.Outputs[JsonParserTransform Error Output].Columns[ErrorRawData]"
                              name="ErrorRawData" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Reminders\Search Reminders"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="JSON Source (REST API or File); ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="The JSON source is used to read data from JSON files, RESTful Web Service or direct JSON String."
                      name="Search Reminders"
                      usesDispositions="true"
                      version="33">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for any numeric data types"
                          expressionType="Notify"
                          name="TreatBlankNumberAsNull">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for bool data types"
                          expressionType="Notify"
                          name="TreatBlankBoolAsNull">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for any date/time data types"
                          expressionType="Notify"
                          name="TreatBlankDateAsNull">true</property>
                        <property
                          dataType="System.Int32"
                          description="Defines how to read the JSON file or direct string"
                          expressionType="Notify"
                          name="AccessMode"
                          typeConverter="ZappySys.Common.Ssis.FileValueAccessMode">3</property>
                        <property
                          dataType="System.String"
                          description="Defines how to read the JSON file or direct string"
                          expressionType="Notify"
                          name="DirectValue"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.String"
                          description="Variable name which holds JSON string"
                          expressionType="Notify"
                          name="ValueVariable"
                          typeConverter="ZappySys.PowerPack.Converters.VariableEditor,ZappySys.PowerPack130.UI,Version=1.0.0.0,Culture=neutral,PublicKeyToken=1903265a93eae502"></property>
                        <property
                          dataType="System.String"
                          description="Variable name which holds data file path or url"
                          expressionType="Notify"
                          name="PathVariable"
                          typeConverter="ZappySys.PowerPack.Converters.VariableEditor,ZappySys.PowerPack130.UI,Version=1.0.0.0,Culture=neutral,PublicKeyToken=1903265a93eae502">User::RexAPIWebURL</property>
                        <property
                          dataType="System.String"
                          description="JSON file file path (e.g. c:\data\myfile.json) or pattern to process multiple files (e.g. c:\data\*.json)"
                          expressionType="Notify"
                          name="DirectPath"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">https://api.uk.rexsoftware.com/rex.php</property>
                        <property
                          dataType="System.Boolean"
                          description="Include files from sub folders too."
                          expressionType="Notify"
                          name="Recursive">false</property>
                        <property
                          dataType="System.String"
                          description="Set this if you want to set custom Http headers. You may use variable anywhere in the header value using syntax {{User::YourVarName}}. Syntax of Header key value pair is : &amp;lt;request&amp;gt;&amp;lt;header&amp;gt;&amp;lt;name&amp;gt;x-myheader-1&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;AAA&amp;lt;/value&amp;gt;&amp;lt;/header&amp;gt; &amp;lt;header&amp;gt;&amp;lt;name&amp;gt;x-myheader-2&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;BBB&amp;lt;/value&amp;gt;&amp;lt;/header&amp;gt;&amp;lt;/request&amp;gt;"
                          expressionType="Notify"
                          name="HttpHeaders">&lt;request&gt;&lt;header&gt;&lt;name&gt;Accept&lt;/name&gt;&lt;value&gt;*/*&lt;/value&gt;&lt;/header&gt;&lt;header&gt;&lt;name&gt;Cache-Control&lt;/name&gt;&lt;value&gt;no-cache&lt;/value&gt;&lt;/header&gt;&lt;header&gt;&lt;name&gt;X-App-Identifier&lt;/name&gt;&lt;value&gt;client:spicerhaart:{{System::PackageName}}:{{System::TaskName}}&lt;/value&gt;&lt;/header&gt;&lt;/request&gt;</property>
                        <property
                          dataType="System.String"
                          description="User defined data you wish to send along with your HTTP Request (e.g. Upload file data, Form POST data). Usually you have to set content-type of your data but if you select RequestMethod=POST then system will automatically set content-type=application/x-www-form-urlencoded."
                          expressionType="Notify"
                          name="HttpRequestData">{
"method":"Reminders::search",
"args":{
	"criteria": 
	[
		
	],
	"result_format":"etags",
	"limit":50000,
	"offset": &lt;%page%&gt;
	 },
"strip_response_prefixes": true,
"token": "{{User::RexToken}}"
}</property>
                        <property
                          dataType="System.String"
                          description="Http Web Request Method (e.g. POST, GET, PUT, LIST, DELETE...). Refer your API documentation if you are not sure which method you have to use."
                          expressionType="Notify"
                          name="HttpRequestMethod">POST</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies content type for data you wish to POST. If you select Default option then system default content type will be used (i.e. application/x-www-form-urlencoded). If you specify Content-Type header along with this option then header value takes precedence."
                          expressionType="Notify"
                          name="HttpRequestContentType"
                          typeConverter="ZappySys.Common.Web.HttpRequestContentType">2</property>
                        <property
                          dataType="System.Int32"
                          description="Data format coming from HTTP Response. This is useful for example when you have OData service and you want to automatically consume all pages of data using odata.netUrl. Setting JsonFormat=Odata will automatically do it for you. This setting is only applicable if JSON is coming from HTTP WebRequest."
                          expressionType="Notify"
                          name="JsonFormat"
                          typeConverter="ZappySys.Json.JsonFormat">1</property>
                        <property
                          dataType="System.Boolean"
                          description="Enable custom proxy settings (If this is not set then system default proxy will be used. To disable proxy totally uncheck this option and check DoNotUseDefaultProxy option if available)"
                          expressionType="Notify"
                          name="UseProxy">false</property>
                        <property
                          dataType="System.String"
                          description="Web URL of Proxy server (including port  if necessary). [e.g. http://myproxyserver:8080/]"
                          expressionType="Notify"
                          name="ProxyUrl"></property>
                        <property
                          dataType="System.Boolean"
                          description="Enable passing userid and password to proxy server"
                          expressionType="Notify"
                          name="UseProxyCreds">false</property>
                        <property
                          dataType="System.String"
                          description="Proxy username"
                          expressionType="Notify"
                          name="ProxyUserName"></property>
                        <property
                          dataType="System.String"
                          description="Proxy password"
                          expressionType="Notify"
                          name="ProxyPassword"></property>
                        <property
                          dataType="System.String"
                          description="If Service response support pagination using some sort of next url attribute then specify which attribute name in JSON Response string which holds next url. If no attribute found or its null then component will stop fetching next resultset. Example: $.pagingInfo.nextUrl"
                          expressionType="Notify"
                          name="NextUrlAttribute"></property>
                        <property
                          dataType="System.String"
                          description="If Service response support pagination using some sort of prev/next url attribute then specify which previous link attribute name from JSON Response string which holds previous url."
                          expressionType="Notify"
                          name="PrevUrlAttribute"></property>
                        <property
                          dataType="System.String"
                          description="Specifies value for NextUrlAttribute or StopIndicatorAttribute which indicates last page to stop pagination. If you have specified StopIndicatorAttribute then you can use Regular expression rather than static value to indicate last page. To use regular expression value of this property must start with regex= prefix. Example : regex=FALSE|N  (assuming you set StopIndicatorAttribute to something like $.hasMore)"
                          expressionType="Notify"
                          name="NextUrlStopIndicator"></property>
                        <property
                          dataType="System.String"
                          description="Attribute name or expression for attribute which can be used as stop indicator (e.g. hasmore --or-- $.pagination.hasmore). If this value is blank then NextUrlAttribute is used"
                          expressionType="Notify"
                          name="StopIndicatorAttribute"></property>
                        <property
                          dataType="System.String"
                          description="If you want to include certain text (or parameters) at the end of Next url then specify this attribute (e.g. &amp;format=json). Another common usecase of this property is to supply pagination token to next Page URL. You can also use &lt;%nextlink%&gt; or  &lt;%nextlink_encoded%&gt; placeholder (e.g. &amp;cursor=&lt;%nextlink_encoded%&gt; )"
                          expressionType="Notify"
                          name="NextUrlSuffix"></property>
                        <property
                          dataType="System.Int32"
                          description="This property indicates total number of milliseconds you want to wait before sending next request. This option allows you to adjust how many API calls can be made within certain timeframe. If your API Service has no limit then set this option to zero"
                          expressionType="Notify"
                          name="NextUrlWait">0</property>
                        <property
                          dataType="System.Boolean"
                          description="If this option is true then component will continue without exception on 404 error (Url not found). This allows you to consume data gracefully."
                          expressionType="Notify"
                          name="ContinueOnUrlNotFoundError">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Continue when any type of exception occurs during http request"
                          expressionType="Notify"
                          name="ContineOnAnyError">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Continue on error when specified substring found in response"
                          expressionType="Notify"
                          name="ContineOnErrorForMessage">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Continue on error when specified status code returned from web server"
                          expressionType="Notify"
                          name="ContineOnErrorForStatusCode">false</property>
                        <property
                          dataType="System.Boolean"
                          description="When error occurs no data is returned. Use this option to get content eventhough error occurs. When this option is checked you can't use [continue on error when specific string found in response] option"
                          expressionType="Notify"
                          name="ConsumeResponseOnError">false</property>
                        <property
                          dataType="System.Int32"
                          description="Status code to match when error occurs and ContineOnErrorForStatusCode option is true. If Response status code matches to this code then task continues to run"
                          expressionType="Notify"
                          name="ErrorStatusCodeToMatch">404</property>
                        <property
                          dataType="System.String"
                          description="Error substring to match when error occurs and ContineOnErrorForMessage option is true. If Response status code matches to this code then task continues to run"
                          expressionType="Notify"
                          name="ErrorSubstringToMatch"></property>
                        <property
                          dataType="System.String"
                          description="Cookie Container can be used to maintain state between multiple web requests. Example: You can login to site like wordpress and then extract any private page content by simply passing authentication cookies using this variable."
                          expressionType="Notify"
                          name="CookieContainerVariable"></property>
                        <property
                          dataType="System.Int32"
                          description="Http request Timeout in seconds. Set this to 0 if you want to use system default value (i.e. 100 seconds)"
                          expressionType="Notify"
                          name="RequestTimeout">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies which security protocol is supported for HTTPS communication. Using this option you can enable legacy protocol or enforce to use latest version of security protocol (Note: TLS 1.2 is only supported in SSIS 2014 or Higher)."
                          expressionType="Notify"
                          name="SecurityProtocol"
                          typeConverter="ZappySys.PowerPack.Common.HttpsSecurityProtocolType">0</property>
                        <property
                          dataType="System.Boolean"
                          description="Enable support for gzip or deflate compression. When you check this option compressed response automatically de-compressed saving bandwidth. This option is only valid if web server supports compressed response stream. Check your API documentation for more information."
                          expressionType="Notify"
                          name="EnableCompressionSupport">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Ignore SSL certificate related errors. Example: if you getting SSL/TLS errors because of certificate expired or certificate is not from trusted authority or certificate is self-signed. By checking this option you will not get SSL/TLS error."
                          expressionType="Notify"
                          name="IgnoreCertificateErrors">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Allow unsecure ciphers/suites and curves for SSLS/TLS communication. Use this option to communicate with web servers which needs legacy / unsecured ciphers support. This option is only trigged when you change default SSL/TLS Version on advanced settings tab."
                          expressionType="Notify"
                          name="AllowUnsecureSuite">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Use connection to pass credentials for authentication (e.g. Use UserID/Password or Use OAuth Protocol for token based approach)"
                          expressionType="Notify"
                          name="UseConnection">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specified how you want to loop through multiple pages returned by REST API."
                          expressionType="Notify"
                          name="PagingMode"
                          typeConverter="ZappySys.Common.RestApiPagingMode">3</property>
                        <property
                          dataType="System.Boolean"
                          description="If you wish to pass extracted pagination token or current page number in the body of next request then set this option to true. You can use [$pagetoken$] and [$pagetoken$] placeholders anywhere in the Body where you wish to insert extracted Page token. You must set encoded token you can use &lt;%nextlink_encoded%&gt; inside SuffixForNextUrl Property. If you dont use SuffixForNextUrl then raw nextLink or Token will be inserted inside the body. If you dont specify [$pagetoken$] placeholder in the body then NextPage Token will be appended at the end. NextPage Token is extracted by filter expression specified using property NextUrlSuffix"
                          expressionType="Notify"
                          name="EnablePageTokenForBody">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this to true if you wish to specify different URL, Header, Body or Filter for first page and next page (i.e. Paginated response). Some APIs like Amazon MWS, NetSuite, Zuora) you may need to set this to true."
                          expressionType="Notify"
                          name="HasDifferentNextPageInfo">false</property>
                        <property
                          dataType="System.String"
                          description="When HasDifferentNextPageInfo=true you can set this property to indicate first page and next page. You can specify different URL, Header, Body or Filter for first page and next page (i.e. Paginated response). Use [$tag$] as placeholder anywhere in the URL, Header, Body or Filter and at runtime system will replace it with correct value (first page or next page value). Syntax to specify placeholder for first page vs next page is like a connectionstring url=FirstPageValue|NextPageValue;header=FirstPageValue|NextPageValue;body=FirstPageValue|NextPageValue;filter=FirstPageValue|NextPageValue; You can use one or more key/value pairs to make things dynamic (e.g. url, header, body or filter)  .For example if you have pagination in your API and First URL is http://abc.com/api/items/get and to get more records you have to call http://abc.com/api/items/getNext then you can use [$tag$] as placeholder in the URL http://abc.com/api/items/[$tag$] and specify this property with first page tag and next page tag as url=get|getNext  (Tags are separated using vertical bar). "
                          expressionType="Notify"
                          name="PagePlaceholders"></property>
                        <property
                          dataType="System.String"
                          description="Use this property to set request body fragment for first page. HasDifferentNextPageInfo must be set to true to use this property."
                          expressionType="Notify"
                          name="FirstPageBodyPart"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.String"
                          description="Use this property to set request body fragment for any request after first request. HasDifferentNextPageInfo must be set to true to use this property."
                          expressionType="Notify"
                          name="NextPageBodyPart"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.String"
                          description="Expression to extract Maximum pages to loop through. Some APIs don't stop pagination and keep returning last page data when you try to read data after last page. Specify expression (e.g. $.page_count ) to read total pages to loop through using this property."
                          expressionType="Notify"
                          name="PagingMaxPagesExpr">$.result.total/50000</property>
                        <property
                          dataType="System.String"
                          description="e.g. Type page_num if URL looks like this =&gt; http://abc.com/?page_num=1&amp;sort=true  (page number via query string)&#xA;--or-- Type &lt;%page%&gt; if page number is inside URL path like this =&gt; http://abc.com/1/?sort=true  (e.g. replace page number in url with placeholder http://abc.com/&lt;%page%&gt;/?sort=true)&#xA;Page number will be incremented by one for next URL until last page is reached or [Max Page Number] is reached"
                          expressionType="Notify"
                          name="PageNumberAttributeNameInUrl">&lt;%page%&gt;</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum page number until which auto increment is allowed. Type zero for no limit. Next URL contains next page number (increment by one) until last page is detected or [Max Page Number] limit is reached."
                          expressionType="Notify"
                          name="MaxPageNumber">0</property>
                        <property
                          dataType="System.String"
                          description="Variable name which will hold starting page number. This is ignored if you useing parameter name from query string to indicate page number."
                          expressionType="Notify"
                          name="StartPageNumberVariable">User::UpsertedCount</property>
                        <property
                          dataType="System.Int32"
                          description="Page counter increment. By default next page is incremented by one if this value is zero. You can also enter negative number if you want to decrease page counter."
                          expressionType="Notify"
                          name="PageNumberIncrement">50000</property>
                        <property
                          dataType="System.Int32"
                          description="Specified how you want detect last page."
                          expressionType="Notify"
                          name="PagingEndStrategy"
                          typeConverter="ZappySys.Common.UrlPagingEndDetectionStrategy">3</property>
                        <property
                          dataType="System.Boolean"
                          description="Condition result to compare to detect last page. Set this property to True if you want detect last page if condition is true else set this to False."
                          expressionType="Notify"
                          name="LastPageWhenConditionEqualsTo">true</property>
                        <property
                          dataType="System.Int32"
                          description="Minimum bytes expected from response."
                          expressionType="Notify"
                          name="ResponseMinBytes">0</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum bytes from response."
                          expressionType="Notify"
                          name="ResponseMaxBytes">3</property>
                        <property
                          dataType="System.String"
                          description="Expected error message sub string from response."
                          expressionType="Notify"
                          name="ResponseErrorString">not found</property>
                        <property
                          dataType="System.Int32"
                          description="Expected status code from response when page number you trying to access not found."
                          expressionType="Notify"
                          name="ResponseStatusCode">404</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum JSON records to fetch. Set this value to 0 for all records"
                          expressionType="Notify"
                          name="MaxRows">0</property>
                        <property
                          dataType="System.String"
                          description="Enter expression here to filter data.(Example:  $.Users[*].UserName ) This will fetch User names from users records"
                          expressionType="Notify"
                          name="Filter"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">$.result.rows[*]</property>
                        <property
                          dataType="System.Boolean"
                          description="Use this option to include parent properties (Non array) in the output along with Filtered Rows"
                          expressionType="Notify"
                          name="IncludeParentColumns">false</property>
                        <property
                          dataType="System.Boolean"
                          description="By default child and parent information is not included in the output if children not found for specified expression. For example if you want to extract all orders from all customers nodes then you can type $.Customers[*].Orders[*]. This will fetch all orders from all customers. By default customers records without orders wont be included in the output. If you want to include those customers where orders not found then check this option (Output null information for order attributes). This behavior is similar to LEFT OUTER JOIN in SQL (Left side is parent, right side is child). This option is ***resource intensive*** so only check if you really care about this behavior."
                          expressionType="Notify"
                          name="IncludeParentColumnsWhenChildMissing">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to true if you want to output parent columns which are array. By default any parent column which is an array is not included in output. See also FilterForParentColumnsWithArrayType property if you set this property"
                          expressionType="Notify"
                          name="IncludeParentColumnsWithArrayType">false</property>
                        <property
                          dataType="System.String"
                          description="Filter expression to extract value form parent"
                          expressionType="Notify"
                          name="FilterForParentColumnsWithArrayType"></property>
                        <property
                          dataType="System.String"
                          description="Prefix for parent column name. This option is only valid if you have set IncludeParentColumns=True"
                          expressionType="Notify"
                          name="ParentColumnPrefix">P_</property>
                        <property
                          dataType="System.Boolean"
                          description="Throw error if property name specified in filter expression is missing. By default it will ignore any missing property errors."
                          expressionType="Notify"
                          name="ThrowErrorIfPropertyMissing">false</property>
                        <property
                          dataType="System.Int32"
                          description="This property how many nested levels should be scanned to fetch various properties. 0=Scan all child levels."
                          expressionType="Notify"
                          name="MaxLevelsToScan">0</property>
                        <property
                          dataType="System.String"
                          description="List comma separated property names from JSON document which you want to exclude from output. Specify parent property name to exclude all child nodes."
                          expressionType="Notify"
                          name="ExcludedProperties"></property>
                        <property
                          dataType="System.String"
                          description="Property level separator used in generated property name (separator for outer properties - Above selected filter node). Use this if default separator is producing duplicate property name which is conflicting with existing name."
                          expressionType="Notify"
                          name="LevelSeparator">_</property>
                        <property
                          dataType="System.Boolean"
                          description="Enables deep array flattening for selected filtered hierarchy. When you turn on this property it will flatten each property of each array item and expose as column (e.g. If you have Filter set as $.customers[*] and for each customer you have an array of Addresses then you may see output columns like Addresses.1.City, Addresses.1.State, Addresses.2.City, Addresses.2.State .... Addresses.N.City, Addresses.N.State). You can control how many array items you want to flatten by setting MaxArrayItemsToFlatten property."
                          expressionType="Notify"
                          name="EnableArrayFlattening">false</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum number of array items to flatten. inner array flattening. Adjust this property to control how many columns being generated. This option is ignored if you set EnableArrayFlattening=false"
                          expressionType="Notify"
                          name="MaxArrayItemsToFlatten">10</property>
                        <property
                          dataType="System.Int32"
                          description="Compression format for source file (e.g. gzip, zip)"
                          expressionType="Notify"
                          name="FileCompressionType"
                          typeConverter="ZappySys.Common.FileCompressionType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Array Transformation you want to apply. Useful for case when you have 2-Dimensional arrays with rows/columns in separate arrays."
                          expressionType="Notify"
                          name="ArrayTransformationType"
                          typeConverter="ZappySys.Json.ArrayTransformType">0</property>
                        <property
                          dataType="System.String"
                          description="Filter expression to use to extract column names for array transformation."
                          expressionType="Notify"
                          name="ArrayTransColumnNameFilter">$.result.rows[*]</property>
                        <property
                          dataType="System.String"
                          description="Filter expression for row values (Not applicable for simple array transformation)."
                          expressionType="Notify"
                          name="ArrayTransRowValueFilter">$.result.rows[*]</property>
                        <property
                          dataType="System.Boolean"
                          description="When you have 2D array but don't have column list specified in a separate array then use this option (e.g. { arr: [[10,11],[21,22]] } )."
                          expressionType="Notify"
                          name="ArrayTransEnableCustomColumns">true</property>
                        <property
                          dataType="System.String"
                          description="When you have 2D array but don't have column list specified in a separate array then use specify column names here. Use comma separated list (e.g col1,col2,col3 ). Column name Order must match value order."
                          expressionType="Notify"
                          name="ArrayTransCustomColumns">MetricID</property>
                        <property
                          dataType="System.String"
                          description="Specifies how custom date formatted strings are parsed when reading JSON."
                          expressionType="Notify"
                          name="DateFormatString"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies how date formatted strings, e.g. Date(1198908717056) and 2012-03-21T05:40Z, are parsed when reading JSON."
                          expressionType="Notify"
                          name="DateParseHandling"
                          typeConverter="ZappySys.Common.DateParseHandling">1</property>
                        <property
                          dataType="System.Boolean"
                          description="Output as raw JSON document rather than parsing individual fields. This option is helpful if you have documents stored in a file and you want to pass them downstream as raw JSON string rather than parsing into columns."
                          expressionType="Notify"
                          name="OutputRawDocument">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indent JSON output so its easy to read."
                          expressionType="Notify"
                          name="IndentOutput">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to true if you want to output FilePath. This option is ignored when you consume DirectValue or data from Url rather than local files. Output column name will be __FilePath"
                          expressionType="Notify"
                          name="OutputFilePath">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to true if you want to output FileName. This option is ignored when you consume DirectValue or data from Url rather than local files. Output column name will be __FileName"
                          expressionType="Notify"
                          name="OutputFileName">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to true if you want to move processed file to archive folder."
                          expressionType="Notify"
                          name="EnableArchiveFile">false</property>
                        <property
                          dataType="System.String"
                          description="Folder path where you want to move processed file."
                          expressionType="Notify"
                          name="ArchiveFolderPath"></property>
                        <property
                          dataType="System.Boolean"
                          description="Folder path where you want to move processed file."
                          expressionType="Notify"
                          name="OverwriteFileInArchiveFolder">false</property>
                        <property
                          dataType="System.String"
                          description="File naming convention for archived file. By default it will same name as original source file processed. But you can control naming format using {%name%} and {%ext%} placeholders. e.g. {%name%}_processed{%ext%} or {%name%}{%ext%}.{{System::ContainerStartTime,yyyyMMdd_HHmmss_fff}}"
                          expressionType="Notify"
                          name="ArchiveFileNamingConvention"></property>
                        <property
                          dataType="System.Boolean"
                          description="When this property is true then Column is converted to Row. Pivoted names will appear under  Pivot_Name column and values will appear under Pivot_Value field."
                          expressionType="Notify"
                          name="EnablePivot">false</property>
                        <property
                          dataType="System.Int32"
                          description="Metadata scan mode controls how data type and length is determined. By default few records scanned to determine datatype/length. Changing ScanMode affects length/datatype accuracy."
                          expressionType="Notify"
                          name="MetaDataScanMode"
                          typeConverter="ZappySys.Common.Data.MetaDataScanMode">4</property>
                        <property
                          dataType="System.Int32"
                          description="Length for all string column. This option is only valid for MetaDataScanMode=Custom"
                          expressionType="Notify"
                          name="MetaDataCustomLength">1000</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.JsonSource</property>
                        <property
                          dataType="System.Int32"
                          description="Encoding of source file"
                          expressionType="Notify"
                          name="Encoding"
                          typeConverter="ZappySys.Common.EncodingType">0</property>
                        <property
                          dataType="System.String"
                          description="Character set for text (e.g. utf-8 )"
                          expressionType="Notify"
                          name="CharacterSet"></property>
                        <property
                          dataType="System.Boolean"
                          description="By default process stops with error if specified local file is not found. Set this property to true if you wish to continue rather than throwing file not found error."
                          expressionType="Notify"
                          name="ContinueOnFileNotFoundError">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Check this option if you want to upload file(s) (i.e. POST RAW file data) or send data using Multi-Part encoding method (i.e. Content-Type: multipart/form-data). Multi-Part request allows you to mix key/value and upload files in same request. On the other hand raw upload allows only single file upload (without any key/value) &#xA;&#xA;==== Raw Upload (Content-Type: application/octet-stream) =====   &#xA;To upload single file in raw mode check this option and specify full file path starting with @ sign in the Body (e.g.  @c:\data\myfile.zip ) &#xA;&#xA;==== Form-Data / Multipart Upload (Content-Type: multipart/form-data) =====   &#xA;To treat your Request data as multi part fields you must specify key/value pairs separated by new lines into RequestData field (i.e. Body). Each key value pair is entered on new-line and key/value are separated using equal sign (=). Preceding and trailing spaces are ignored also blank lines are ignored. &#xA;If field value has some any special character(s) then use escape sequence (e.g. For NewLine: \r\n, For Tab: \t, For at (@): \@). When value of any field starts with at sign (@) its automatically treated as File you want to upload. By default file content type is determined based on extension however you can supply content type manually for any field using this way [ fieldname.Content-Type=some content type ]. In below example we have supplied Content-Type for file2 and SomeField1, all other fields are using default content-type.&#xA;See below Example of uploading multiple files along with additional fields.&#xA;&#xA;file1=@c:\data\Myfile1.txt&#xA;file2=@c:\data\Myfile2.json&#xA;file2.Content-Type=application/json&#xA;SomeField1=aaaaaaa&#xA;SomeField1.Content-Type=text/plain&#xA;SomeField2=12345&#xA;SomeFieldWithNewLineAndTab=This is line1\r\nThis is line2\r\nThis is \ttab \ttab \ttab&#xA;SomeFieldStartingWithAtSign=\@MyTwitterHandle&#xA;"
                          expressionType="Notify"
                          name="IsMultiPartUpload">false</property>
                        <property
                          dataType="System.String"
                          description="Expression to extract Maximum records to loop through. Some APIs don't stop pagination and keep returning last page data when you try to read data after last page. Specify expression (e.g. $.total_rows ) to read total pages to loop through using this property. This setting is ignored if you set PagingMaxPagesExpr."
                          expressionType="Notify"
                          name="PagingMaxRowsExpr"></property>
                        <property
                          dataType="System.String"
                          description="When you enable PagingMaxRowsExpr (end pagination based on MaxRowCount) then you need to count records coming in each response. This expression extract all rows found under specified expression (e.g. $.orders[*] if all records found under orders node)."
                          expressionType="Notify"
                          name="PagingMaxRowsDataPathExpr"></property>
                        <property
                          dataType="System.Boolean"
                          description="When this option is checked, system allows to parse large number (Higher than Int64) in JSON document (i.e. { id: 76000009353950433247780 } ). If you do not turn on this option then it may throw error if large number is encountered. This option is SLOW because it has to perform additional checks in order to avoid Large number overflow error so do not turn on unless you getting Large number error."
                          expressionType="Notify"
                          name="EnableBigNumberHandling">false</property>
                      </properties>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Reminders\Search Reminders.Outputs[JsonSourceOutput]"
                          errorOrTruncationOperation="Error"
                          errorRowDisposition="FailComponent"
                          name="JsonSourceOutput"
                          truncationRowDisposition="FailComponent">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\Search Reminders.Outputs[JsonSourceOutput].Columns[etag]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Reminders\Search Reminders.Outputs[JsonSourceOutput].ExternalColumns[etag]"
                              length="68"
                              lineageId="Package\Iterate Offices\Sequence Container\Reminders\Search Reminders.Outputs[JsonSourceOutput].Columns[etag]"
                              name="etag" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\Search Reminders.Outputs[JsonSourceOutput].Columns[id]"
                              dataType="i4"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Reminders\Search Reminders.Outputs[JsonSourceOutput].ExternalColumns[id]"
                              lineageId="Package\Iterate Offices\Sequence Container\Reminders\Search Reminders.Outputs[JsonSourceOutput].Columns[id]"
                              name="id" />
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\Search Reminders.Outputs[JsonSourceOutput].ExternalColumns[system_record_state]"
                              dataType="wstr"
                              length="24"
                              name="system_record_state" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\Search Reminders.Outputs[JsonSourceOutput].ExternalColumns[system_ctime]"
                              dataType="wstr"
                              length="40"
                              name="system_ctime" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\Search Reminders.Outputs[JsonSourceOutput].ExternalColumns[system_modtime]"
                              dataType="wstr"
                              length="40"
                              name="system_modtime" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\Search Reminders.Outputs[JsonSourceOutput].ExternalColumns[name]"
                              dataType="wstr"
                              length="144"
                              name="name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\Search Reminders.Outputs[JsonSourceOutput].ExternalColumns[email_address]"
                              dataType="wstr"
                              length="180"
                              name="email_address" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\Search Reminders.Outputs[JsonSourceOutput].ExternalColumns[phone_number]"
                              dataType="wstr"
                              length="80"
                              name="phone_number" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\Search Reminders.Outputs[JsonSourceOutput].ExternalColumns[fax_number]"
                              dataType="wstr"
                              length="1020"
                              name="fax_number" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\Search Reminders.Outputs[JsonSourceOutput].ExternalColumns[is_dnd]"
                              dataType="wstr"
                              length="80"
                              name="is_dnd" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\Search Reminders.Outputs[JsonSourceOutput].ExternalColumns[type]"
                              dataType="wstr"
                              length="28"
                              name="type" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\Search Reminders.Outputs[JsonSourceOutput].ExternalColumns[last_contacted_date]"
                              dataType="wstr"
                              length="80"
                              name="last_contacted_date" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\Search Reminders.Outputs[JsonSourceOutput].ExternalColumns[name_last]"
                              dataType="wstr"
                              length="1020"
                              name="name_last" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\Search Reminders.Outputs[JsonSourceOutput].ExternalColumns[address_postal]"
                              dataType="wstr"
                              length="220"
                              name="address_postal" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\Search Reminders.Outputs[JsonSourceOutput].ExternalColumns[address]"
                              dataType="wstr"
                              length="384"
                              name="address" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\Search Reminders.Outputs[JsonSourceOutput].ExternalColumns[interest_level]"
                              dataType="wstr"
                              length="1020"
                              name="interest_level" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\Search Reminders.Outputs[JsonSourceOutput].ExternalColumns[marketing_birthday]"
                              dataType="wstr"
                              length="1020"
                              name="marketing_birthday" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\Search Reminders.Outputs[JsonSourceOutput].ExternalColumns[marketing_enquiry_source]"
                              dataType="wstr"
                              length="1020"
                              name="marketing_enquiry_source" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\Search Reminders.Outputs[JsonSourceOutput].ExternalColumns[marketing_gender]"
                              dataType="wstr"
                              length="1020"
                              name="marketing_gender" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\Search Reminders.Outputs[JsonSourceOutput].ExternalColumns[marketing_postcode]"
                              dataType="wstr"
                              length="80"
                              name="marketing_postcode" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\Search Reminders.Outputs[JsonSourceOutput].ExternalColumns[name_legal]"
                              dataType="wstr"
                              length="1020"
                              name="name_legal" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\Search Reminders.Outputs[JsonSourceOutput].ExternalColumns[name_salutation]"
                              dataType="wstr"
                              length="1020"
                              name="name_salutation" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\Search Reminders.Outputs[JsonSourceOutput].ExternalColumns[name_addressee]"
                              dataType="wstr"
                              length="1020"
                              name="name_addressee" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\Search Reminders.Outputs[JsonSourceOutput].ExternalColumns[system_owner_user.id]"
                              dataType="wstr"
                              length="20"
                              name="system_owner_user.id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\Search Reminders.Outputs[JsonSourceOutput].ExternalColumns[system_owner_user._name]"
                              dataType="wstr"
                              length="36"
                              name="system_owner_user._name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\Search Reminders.Outputs[JsonSourceOutput].ExternalColumns[system_owner_user._first_name]"
                              dataType="wstr"
                              length="20"
                              name="system_owner_user._first_name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\Search Reminders.Outputs[JsonSourceOutput].ExternalColumns[system_owner_user._last_name]"
                              dataType="wstr"
                              length="12"
                              name="system_owner_user._last_name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\Search Reminders.Outputs[JsonSourceOutput].ExternalColumns[system_owner_user._email_address]"
                              dataType="wstr"
                              length="92"
                              name="system_owner_user._email_address" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\Search Reminders.Outputs[JsonSourceOutput].ExternalColumns[system_modified_user.id]"
                              dataType="wstr"
                              length="20"
                              name="system_modified_user.id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\Search Reminders.Outputs[JsonSourceOutput].ExternalColumns[system_modified_user._name]"
                              dataType="wstr"
                              length="48"
                              name="system_modified_user._name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\Search Reminders.Outputs[JsonSourceOutput].ExternalColumns[system_modified_user._first_name]"
                              dataType="wstr"
                              length="24"
                              name="system_modified_user._first_name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\Search Reminders.Outputs[JsonSourceOutput].ExternalColumns[system_modified_user._last_name]"
                              dataType="wstr"
                              length="24"
                              name="system_modified_user._last_name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\Search Reminders.Outputs[JsonSourceOutput].ExternalColumns[system_modified_user._email_address]"
                              dataType="wstr"
                              length="128"
                              name="system_modified_user._email_address" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\Search Reminders.Outputs[JsonSourceOutput].ExternalColumns[system_created_user.id]"
                              dataType="wstr"
                              length="20"
                              name="system_created_user.id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\Search Reminders.Outputs[JsonSourceOutput].ExternalColumns[system_created_user._name]"
                              dataType="wstr"
                              length="36"
                              name="system_created_user._name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\Search Reminders.Outputs[JsonSourceOutput].ExternalColumns[system_created_user._first_name]"
                              dataType="wstr"
                              length="20"
                              name="system_created_user._first_name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\Search Reminders.Outputs[JsonSourceOutput].ExternalColumns[system_created_user._last_name]"
                              dataType="wstr"
                              length="12"
                              name="system_created_user._last_name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\Search Reminders.Outputs[JsonSourceOutput].ExternalColumns[system_created_user._email_address]"
                              dataType="wstr"
                              length="92"
                              name="system_created_user._email_address" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\Search Reminders.Outputs[JsonSourceOutput].ExternalColumns[contact_image]"
                              dataType="wstr"
                              length="1020"
                              name="contact_image" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\Search Reminders.Outputs[JsonSourceOutput].ExternalColumns[marketing_enquiry_method]"
                              dataType="wstr"
                              length="1020"
                              name="marketing_enquiry_method" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\Search Reminders.Outputs[JsonSourceOutput].ExternalColumns[_security_user_rights]"
                              dataType="wstr"
                              length="260"
                              name="_security_user_rights" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\Search Reminders.Outputs[JsonSourceOutput].ExternalColumns[etag]"
                              dataType="wstr"
                              length="68"
                              name="etag" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\Search Reminders.Outputs[JsonSourceOutput].ExternalColumns[id]"
                              dataType="wstr"
                              length="24"
                              name="id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\Search Reminders.Outputs[JsonSourceOutput].ExternalColumns[__FileName]"
                              dataType="wstr"
                              length="600"
                              name="__FileName" />
                          </externalMetadataColumns>
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Reminders\Search Reminders.Outputs[JsonSource Error Output]"
                          isErrorOut="true"
                          name="JsonSource Error Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\Search Reminders.Outputs[JsonSource Error Output].Columns[etag]"
                              dataType="wstr"
                              length="68"
                              lineageId="Package\Iterate Offices\Sequence Container\Reminders\Search Reminders.Outputs[JsonSource Error Output].Columns[etag]"
                              name="etag" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\Search Reminders.Outputs[JsonSource Error Output].Columns[id]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Reminders\Search Reminders.Outputs[JsonSource Error Output].Columns[id]"
                              name="id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\Search Reminders.Outputs[JsonSource Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Reminders\Search Reminders.Outputs[JsonSource Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\Search Reminders.Outputs[JsonSource Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Reminders\Search Reminders.Outputs[JsonSource Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\Search Reminders.Outputs[JsonSource Error Output].Columns[ErrorColumnName]"
                              codePage="1252"
                              dataType="str"
                              length="128"
                              lineageId="Package\Iterate Offices\Sequence Container\Reminders\Search Reminders.Outputs[JsonSource Error Output].Columns[ErrorColumnName]"
                              name="ErrorColumnName" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\Search Reminders.Outputs[JsonSource Error Output].Columns[ErrorMessage]"
                              dataType="wstr"
                              length="1024"
                              lineageId="Package\Iterate Offices\Sequence Container\Reminders\Search Reminders.Outputs[JsonSource Error Output].Columns[ErrorMessage]"
                              name="ErrorMessage" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Reminders\SQL Sort"
                      componentClassID="Microsoft.Sort"
                      contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
                      name="SQL Sort"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                          name="EliminateDuplicates">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the maximum number of threads to use for sorting."
                          expressionType="Notify"
                          name="MaximumThreads">-1</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Reminders\SQL Sort.Inputs[Sort Input]"
                          name="Sort Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\SQL Sort.Inputs[Sort Input].Columns[Id]"
                              cachedDataType="i4"
                              cachedName="Id"
                              lineageId="Package\Iterate Offices\Sequence Container\Reminders\Existing Reminders from SQL.Outputs[OLE DB Source Output].Columns[Id]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">1</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\SQL Sort.Inputs[Sort Input].Columns[AccountId]"
                              cachedDataType="i2"
                              cachedName="AccountId"
                              lineageId="Package\Iterate Offices\Sequence Container\Reminders\Existing Reminders from SQL.Outputs[OLE DB Source Output].Columns[AccountId]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\SQL Sort.Inputs[Sort Input].Columns[etaglead]"
                              cachedDataType="wstr"
                              cachedLength="250"
                              cachedName="etaglead"
                              lineageId="Package\Iterate Offices\Sequence Container\Reminders\Existing Reminders from SQL.Outputs[OLE DB Source Output].Columns[etaglead]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Reminders\SQL Sort.Outputs[Sort Output]"
                          isSorted="true"
                          name="Sort Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\SQL Sort.Outputs[Sort Output].Columns[Id]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Reminders\SQL Sort.Outputs[Sort Output].Columns[Id]"
                              name="Id"
                              sortKeyPosition="1">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Iterate Offices\Sequence Container\Reminders\Existing Reminders from SQL.Outputs[OLE DB Source Output].Columns[Id]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\SQL Sort.Outputs[Sort Output].Columns[AccountId]"
                              dataType="i2"
                              lineageId="Package\Iterate Offices\Sequence Container\Reminders\SQL Sort.Outputs[Sort Output].Columns[AccountId]"
                              name="AccountId">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Iterate Offices\Sequence Container\Reminders\Existing Reminders from SQL.Outputs[OLE DB Source Output].Columns[AccountId]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\SQL Sort.Outputs[Sort Output].Columns[etaglead]"
                              dataType="wstr"
                              length="250"
                              lineageId="Package\Iterate Offices\Sequence Container\Reminders\SQL Sort.Outputs[Sort Output].Columns[etaglead]"
                              name="etaglead">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Iterate Offices\Sequence Container\Reminders\Existing Reminders from SQL.Outputs[OLE DB Source Output].Columns[etaglead]}</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Reminders\Trash Destination"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Trash Destination; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="The trash destination is used to create dummy destination which ends data path without any processing."
                      name="Trash Destination"
                      version="2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.String"
                          description="File path where you want to save data"
                          expressionType="Notify"
                          name="FilePath"></property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates if you want to save input data to comma separated text file"
                          expressionType="Notify"
                          name="SaveDataToFile">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Append data to file"
                          expressionType="Notify"
                          name="Append">false</property>
                        <property
                          dataType="System.String"
                          description="RowSeparator"
                          expressionType="Notify"
                          name="RowSeparator">{NEWLINE}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether you want to overwrite target file if exists"
                          expressionType="Notify"
                          name="OverwriteFileIfExists">true</property>
                        <property
                          dataType="System.String"
                          description="ColumnSeparator"
                          expressionType="Notify"
                          name="ColumnSeparator">,</property>
                        <property
                          dataType="System.Boolean"
                          description="SupportUnicode"
                          expressionType="Notify"
                          name="SupportUnicode">true</property>
                        <property
                          dataType="System.Boolean"
                          description="ColumnNamesInFirstRow"
                          expressionType="Notify"
                          name="ColumnNamesInFirstRow">true</property>
                        <property
                          dataType="System.Boolean"
                          description="QuoteDataIfNeeded"
                          expressionType="Notify"
                          name="QuoteDataIfNeeded">true</property>
                        <property
                          dataType="System.String"
                          description="Date time format string for any column with DT_DBDATETIME, DT_DBDATETIME2 or DB_DATE format"
                          expressionType="Notify"
                          name="DateTimeFormat">yyyy-MM-dd HH:mm:ss</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.TrashDestination</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Reminders\Trash Destination.Inputs[TrashDestinationInput]"
                          hasSideEffects="true"
                          name="TrashDestinationInput">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Reminders\Trash Destination 1"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Trash Destination; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="The trash destination is used to create dummy destination which ends data path without any processing."
                      name="Trash Destination 1"
                      version="2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.String"
                          description="File path where you want to save data"
                          expressionType="Notify"
                          name="FilePath"></property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates if you want to save input data to comma separated text file"
                          expressionType="Notify"
                          name="SaveDataToFile">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Append data to file"
                          expressionType="Notify"
                          name="Append">false</property>
                        <property
                          dataType="System.String"
                          description="RowSeparator"
                          expressionType="Notify"
                          name="RowSeparator">{NEWLINE}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether you want to overwrite target file if exists"
                          expressionType="Notify"
                          name="OverwriteFileIfExists">true</property>
                        <property
                          dataType="System.String"
                          description="ColumnSeparator"
                          expressionType="Notify"
                          name="ColumnSeparator">,</property>
                        <property
                          dataType="System.Boolean"
                          description="SupportUnicode"
                          expressionType="Notify"
                          name="SupportUnicode">true</property>
                        <property
                          dataType="System.Boolean"
                          description="ColumnNamesInFirstRow"
                          expressionType="Notify"
                          name="ColumnNamesInFirstRow">true</property>
                        <property
                          dataType="System.Boolean"
                          description="QuoteDataIfNeeded"
                          expressionType="Notify"
                          name="QuoteDataIfNeeded">true</property>
                        <property
                          dataType="System.String"
                          description="Date time format string for any column with DT_DBDATETIME, DT_DBDATETIME2 or DB_DATE format"
                          expressionType="Notify"
                          name="DateTimeFormat">yyyy-MM-dd HH:mm:ss</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.TrashDestination</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Reminders\Trash Destination 1.Inputs[TrashDestinationInput]"
                          hasSideEffects="true"
                          name="TrashDestinationInput">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Reminders\Upsert Reminders"
                      componentClassID="Microsoft.OLEDBCommand"
                      contactInfo="OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
                      description="Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time."
                      name="Upsert Reminders"
                      usesDispositions="true"
                      version="2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">0</property>
                        <property
                          dataType="System.String"
                          description="The SQL command to be executed."
                          expressionType="Notify"
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">exec [UpsertReminder] ?,?,?</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Iterate Offices\Sequence Container\Reminders\Upsert Reminders.Connections[OleDbConnection]"
                          connectionManagerID="Package.ConnectionManagers[colsqlbi01v.Entities 1]"
                          connectionManagerRefId="Package.ConnectionManagers[colsqlbi01v.Entities 1]"
                          description="The OLE DB runtime connection used to access the database."
                          name="OleDbConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Reminders\Upsert Reminders.Inputs[OLE DB Command Input]"
                          errorOrTruncationOperation="Command Execution"
                          errorRowDisposition="FailComponent"
                          hasSideEffects="true"
                          name="OLE DB Command Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\Upsert Reminders.Inputs[OLE DB Command Input].Columns[Origin]"
                              cachedDataType="i4"
                              cachedName="Origin"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Reminders\Upsert Reminders.Inputs[OLE DB Command Input].ExternalColumns[@Origin]"
                              lineageId="Package\Iterate Offices\Sequence Container\Reminders\Add accountid and origin.Outputs[Derived Column Output].Columns[Origin]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\Upsert Reminders.Inputs[OLE DB Command Input].Columns[AccountId]"
                              cachedDataType="i4"
                              cachedName="AccountId"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Reminders\Upsert Reminders.Inputs[OLE DB Command Input].ExternalColumns[@accountid]"
                              lineageId="Package\Iterate Offices\Sequence Container\Reminders\Add accountid and origin.Outputs[Derived Column Output].Columns[AccountId]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\Upsert Reminders.Inputs[OLE DB Command Input].Columns[__DOCUMENT__]"
                              cachedDataType="nText"
                              cachedName="__DOCUMENT__"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Reminders\Upsert Reminders.Inputs[OLE DB Command Input].ExternalColumns[@body]"
                              lineageId="Package\Iterate Offices\Sequence Container\Reminders\record.Outputs[JsonParserTransformOutput].Columns[__DOCUMENT__]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\Upsert Reminders.Inputs[OLE DB Command Input].ExternalColumns[@Origin]"
                              dataType="i2"
                              name="@Origin">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                                  name="DBParamInfoFlags">81</property>
                              </properties>
                            </externalMetadataColumn>
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\Upsert Reminders.Inputs[OLE DB Command Input].ExternalColumns[@body]"
                              dataType="nText"
                              name="@body">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                                  name="DBParamInfoFlags">193</property>
                              </properties>
                            </externalMetadataColumn>
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\Upsert Reminders.Inputs[OLE DB Command Input].ExternalColumns[@accountid]"
                              dataType="i4"
                              name="@accountid">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                                  name="DBParamInfoFlags">81</property>
                              </properties>
                            </externalMetadataColumn>
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Reminders\Upsert Reminders.Outputs[OLE DB Command Output]"
                          exclusionGroup="1"
                          name="OLE DB Command Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Reminders\Upsert Reminders.Inputs[OLE DB Command Input]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Reminders\Upsert Reminders.Outputs[OLE DB Command Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="OLE DB Command Error Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Reminders\Upsert Reminders.Inputs[OLE DB Command Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\Upsert Reminders.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Reminders\Upsert Reminders.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\Upsert Reminders.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Reminders\Upsert Reminders.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Reminders\Web API Destination"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Web API Destination; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="The Web API destination can be used to send data to Web API URL (e.g. Submit or POST data to REST API/SOAP or other HTTP/HTTPS endpoints)"
                      name="Web API Destination"
                      usesDispositions="true"
                      version="5">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.String"
                          description="API URL you want to access"
                          expressionType="Notify"
                          name="HttpRequestUrl">{{User::RexAPIWebURL}}</property>
                        <property
                          dataType="System.String"
                          description="Http Web Request Method (e.g. POST, GET, PUT, LIST, DELETE...). Refer your API documentation if you are not sure which method you have to use."
                          expressionType="Notify"
                          name="HttpRequestMethod">POST</property>
                        <property
                          dataType="System.String"
                          description="Set this if you want to set custom Http headers. You may use variable anywhere in the header value using syntax {{User::YourVarName}}. Syntax of Header key value pair is : &amp;lt;request&amp;gt;&amp;lt;header&amp;gt;&amp;lt;name&amp;gt;x-myheader-1&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;AAA&amp;lt;/value&amp;gt;&amp;lt;/header&amp;gt; &amp;lt;header&amp;gt;&amp;lt;name&amp;gt;x-myheader-2&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;BBB&amp;lt;/value&amp;gt;&amp;lt;/header&amp;gt;&amp;lt;/request&amp;gt;"
                          expressionType="Notify"
                          name="HttpHeaders"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">&lt;request&gt;&lt;header&gt;&lt;name&gt;Accept&lt;/name&gt;&lt;value&gt;*/*&lt;/value&gt;&lt;/header&gt;&lt;header&gt;&lt;name&gt;Cache-Control&lt;/name&gt;&lt;value&gt;no-cache&lt;/value&gt;&lt;/header&gt;&lt;header&gt;&lt;name&gt;X-App-Identifier&lt;/name&gt;&lt;value&gt;client:spicerhaart:{{System::PackageName}}:{{System::TaskName}}&lt;/value&gt;&lt;/header&gt;&lt;/request&gt;</property>
                        <property
                          dataType="System.String"
                          description="User defined data you wish to send along with your HTTP Request (e.g. Upload file data, Form POST data). Usually you have to set content-type of your data but if you select RequestMethod=POST then system will automatically set content-type=application/x-www-form-urlencoded."
                          expressionType="Notify"
                          name="HttpRequestData"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies content type for data you wish to POST. If you select Default option then system default content type will be used (i.e. application/x-www-form-urlencoded). If you specify Content-Type header along with this option then header value takes precedence."
                          expressionType="Notify"
                          name="HttpRequestContentType"
                          typeConverter="ZappySys.Common.Web.HttpRequestContentType">2</property>
                        <property
                          dataType="System.Boolean"
                          description="If this option is true then component will continue without exception on 404 error (Url not found). This allows you to consume data gracefully."
                          expressionType="Notify"
                          name="ContinueOnUrlNotFoundError">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Ignore SSL certificate related errors. Example: if you getting SSL/TLS errors because of certificate expired or certificate is not from trusted authority or certificate is self-signed. By checking this option you will not get SSL/TLS error."
                          expressionType="Notify"
                          name="IgnoreCertificateErrors">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Allow unsecure ciphers/suites and curves for SSLS/TLS communication. Use this option to communicate with web servers which needs legacy / unsecured ciphers support. This option is only trigged when you change default SSL/TLS Version on advanced settings tab."
                          expressionType="Notify"
                          name="AllowUnsecureSuite">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Enable support for gzip or deflate compression. When you check this option compressed response automatically de-compressed saving bandwidth. This option is only valid if web server supports compressed response stream. Check your API documentation for more information."
                          expressionType="Notify"
                          name="EnableCompressionSupport">true</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies which security protocol is supported for HTTPS communication. Using this option you can enable legacy protocol or enforce to use latest version of security protocol (Note: TLS 1.2 is only supported in SSIS 2014 or Higher)."
                          expressionType="Notify"
                          name="SecurityProtocol"
                          typeConverter="ZappySys.PowerPack.Common.HttpsSecurityProtocolType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Wait time in milliseconds (Pause after each request). 0=No wait. Use this delay time if your API has limit on how many requests you can make in certain time frame."
                          expressionType="Notify"
                          name="WaitTime">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you redirect error to error output by default you get additional information in ErrorMessage column. Check this option if you need exact Response Body (Useful if its in JSON/XML format which needs to be parsed for additional information for later step)."
                          expressionType="Notify"
                          name="OnErrorOutputResponseBody">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Enable multiple requests using parallel threads."
                          expressionType="Notify"
                          name="EnableParallelRequests">true</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum parallel threads to use for processing multiple web requests."
                          expressionType="Notify"
                          name="MaxParallelThreads">3</property>
                        <property
                          dataType="System.Boolean"
                          description="By default one request is sent for each input row. If your API supports multiple records in a single call via HTTP Body then enable this setting. See also BodyBatchSize, BodyHeader, BodyFooter and BodyRowSeparator property."
                          expressionType="Notify"
                          name="EnableBodyBatch">false</property>
                        <property
                          dataType="System.String"
                          description="When you have to wrap input content between opening and closing tags for each call then set this property to specify opening for body content. For Example if you want to build Body like this (send max 100 rows per call) ==&gt; { records : [ {...}, {...}, {...} ] } then you can set BatchSize=100, BodyHeader as &quot;{ records: [&quot; , BodyFooter as &quot;] }&quot; and BodyRowSeperator as comma {,}. This property is ignored if EnableBodyBatch=false."
                          expressionType="Notify"
                          name="BodyHeader"></property>
                        <property
                          dataType="System.String"
                          description="When you have to wrap input content between opening and closing tags for each call then set this property to specify closing for body content. For Example if you want to build Body like this (send max 100 rows per call) ==&gt; { records : [ {...}, {...}, {...} ] } then you can set BatchSize=100, BodyHeader as &quot;{ records: [&quot; , BodyFooter as &quot;] }&quot; and BodyRowSeperator as comma {,}. This property is ignored if EnableBodyBatch=false."
                          expressionType="Notify"
                          name="BodyFooter"></property>
                        <property
                          dataType="System.Int32"
                          description="If your API supports multiple records via HTTP Body then change this setting &gt; 1 to include multiple upstream records into single call. See also BodyHeader, BodyFooter and BodyRowSeparator property. This property is ignored if EnableBodyBatch=false."
                          expressionType="Notify"
                          name="BodyBatchSize">100</property>
                        <property
                          dataType="System.String"
                          description="When you submit multiple rows in a batch you can separate multiple documents / records using custom separator (e.g. in JSON Array you can use comma {,} as record separator if POST document is in array format [ {...}, {...}, {...} ] ). For last row of batch blank separator is used."
                          expressionType="Notify"
                          name="BodyRowSeparator"></property>
                        <property
                          dataType="System.Boolean"
                          description="Returns response data as binary data (e.g. Byte Array). Check this option is response is Zip file, Image file or any non text data which needs to be exported as raw data without any encoding."
                          expressionType="Notify"
                          name="TreatResponseAsBinary">false</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.WebApiDestination</property>
                        <property
                          dataType="System.Boolean"
                          description="Check this option if you want to upload file(s) (i.e. POST RAW file data) or send data using Multi-Part encoding method (i.e. Content-Type: multipart/form-data). Multi-Part request allows you to mix key/value and upload files in same request. On the other hand raw upload allows only single file upload (without any key/value) &#xA;&#xA;==== Raw Upload (Content-Type: application/octet-stream) =====   &#xA;To upload single file in raw mode check this option and specify full file path starting with @ sign in the Body (e.g.  @c:\data\myfile.zip ) &#xA;&#xA;==== Form-Data / Multipart Upload (Content-Type: multipart/form-data) =====   &#xA;To treat your Request data as multi part fields you must specify key/value pairs separated by new lines into RequestData field (i.e. Body). Each key value pair is entered on new-line and key/value are separated using equal sign (=). Preceding and trailing spaces are ignored also blank lines are ignored. &#xA;If field value has some any special character(s) then use escape sequence (e.g. For NewLine: \r\n, For Tab: \t, For at (@): \@). When value of any field starts with at sign (@) its automatically treated as File you want to upload. By default file content type is determined based on extension however you can supply content type manually for any field using this way [ fieldname.Content-Type=some content type ]. In below example we have supplied Content-Type for file2 and SomeField1, all other fields are using default content-type.&#xA;See below Example of uploading multiple files along with additional fields.&#xA;&#xA;file1=@c:\data\Myfile1.txt&#xA;file2=@c:\data\Myfile2.json&#xA;file2.Content-Type=application/json&#xA;SomeField1=aaaaaaa&#xA;SomeField1.Content-Type=text/plain&#xA;SomeField2=12345&#xA;SomeFieldWithNewLineAndTab=This is line1\r\nThis is line2\r\nThis is \ttab \ttab \ttab&#xA;SomeFieldStartingWithAtSign=\@MyTwitterHandle&#xA;"
                          expressionType="Notify"
                          name="IsMultiPartUpload">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Enable this option if your server is expecting &#xA; (i.e. CRLF) after last Multi-Part boundary in the Body. This option is only applicable if you enabled IsMultiPartUpload and sending data in Key=value format (i.e. Mutipart). For raw file upload this option has no effect."
                          expressionType="Notify"
                          name="AddMultiPartPostamble">false</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Iterate Offices\Sequence Container\Reminders\Web API Destination.Connections[Connection]"
                          connectionManagerID="Package.ConnectionManagers[HTTP]"
                          connectionManagerRefId="Package.ConnectionManagers[HTTP]"
                          description="Connection manager for authentication (e.g. HTTP or OAuth Connection)"
                          name="Connection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Reminders\Web API Destination.Inputs[WebApiDestinationInput]"
                          errorRowDisposition="RedirectRow"
                          hasSideEffects="true"
                          name="WebApiDestinationInput"
                          truncationRowDisposition="RedirectRow">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\Web API Destination.Inputs[WebApiDestinationInput].Columns[ZS_JSON_OUT]"
                              cachedDataType="nText"
                              cachedName="ZS_JSON_OUT"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Reminders\Web API Destination.Inputs[WebApiDestinationInput].ExternalColumns[HttpRequestData]"
                              lineageId="Package\Iterate Offices\Sequence Container\Reminders\JSON Generator Transform.Outputs[JsonGeneratorTransformOutput].Columns[ZS_JSON_OUT]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\Web API Destination.Inputs[WebApiDestinationInput].ExternalColumns[HttpRequestUrl]"
                              dataType="wstr"
                              length="2000"
                              name="HttpRequestUrl" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\Web API Destination.Inputs[WebApiDestinationInput].ExternalColumns[HttpRequestData]"
                              dataType="nText"
                              name="HttpRequestData" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\Web API Destination.Inputs[WebApiDestinationInput].ExternalColumns[HttpHeaders]"
                              dataType="wstr"
                              length="2000"
                              name="HttpHeaders" />
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Reminders\Web API Destination.Outputs[WebApiDestination Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="WebApiDestination Error Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Reminders\Web API Destination.Inputs[WebApiDestinationInput]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\Web API Destination.Outputs[WebApiDestination Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Reminders\Web API Destination.Outputs[WebApiDestination Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\Web API Destination.Outputs[WebApiDestination Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Reminders\Web API Destination.Outputs[WebApiDestination Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\Web API Destination.Outputs[WebApiDestination Error Output].Columns[ErrorColumnName]"
                              codePage="1252"
                              dataType="str"
                              length="128"
                              lineageId="Package\Iterate Offices\Sequence Container\Reminders\Web API Destination.Outputs[WebApiDestination Error Output].Columns[ErrorColumnName]"
                              name="ErrorColumnName" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\Web API Destination.Outputs[WebApiDestination Error Output].Columns[ErrorMessage]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\Reminders\Web API Destination.Outputs[WebApiDestination Error Output].Columns[ErrorMessage]"
                              name="ErrorMessage" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Reminders\Web API Destination.Outputs[Response Output]"
                          exclusionGroup="1"
                          name="Response Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Reminders\Web API Destination.Inputs[WebApiDestinationInput]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\Web API Destination.Outputs[Response Output].Columns[ResponseText]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\Reminders\Web API Destination.Outputs[Response Output].Columns[ResponseText]"
                              name="ResponseText" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Reminders\Web API Destination.Outputs[Response Output].Columns[StatusCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Reminders\Web API Destination.Outputs[Response Output].Columns[StatusCode]"
                              name="StatusCode" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                  </components>
                  <paths>
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Reminders.Paths[Derived Column Output]"
                      endId="Package\Iterate Offices\Sequence Container\Reminders\Upsert Reminders.Inputs[OLE DB Command Input]"
                      name="Derived Column Output"
                      startId="Package\Iterate Offices\Sequence Container\Reminders\Add accountid and origin.Outputs[Derived Column Output]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Reminders.Paths[ignore]"
                      endId="Package\Iterate Offices\Sequence Container\Reminders\Trash Destination.Inputs[TrashDestinationInput]"
                      name="ignore"
                      startId="Package\Iterate Offices\Sequence Container\Reminders\Insert or Ignore.Outputs[ignore]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Reminders.Paths[JsonGeneratorTransformOutput]"
                      endId="Package\Iterate Offices\Sequence Container\Reminders\Web API Destination.Inputs[WebApiDestinationInput]"
                      name="JsonGeneratorTransformOutput"
                      startId="Package\Iterate Offices\Sequence Container\Reminders\JSON Generator Transform.Outputs[JsonGeneratorTransformOutput]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Reminders.Paths[JsonParserTransformOutput]"
                      endId="Package\Iterate Offices\Sequence Container\Reminders\Add accountid and origin.Inputs[Derived Column Input]"
                      name="JsonParserTransformOutput"
                      startId="Package\Iterate Offices\Sequence Container\Reminders\record.Outputs[JsonParserTransformOutput]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Reminders.Paths[JsonParserTransformOutput1]"
                      endId="Package\Iterate Offices\Sequence Container\Reminders\record.Inputs[JsonParserTransformInput]"
                      name="JsonParserTransformOutput"
                      startId="Package\Iterate Offices\Sequence Container\Reminders\JSON Parser Add id back in.Outputs[JsonParserTransformOutput]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Reminders.Paths[JsonSourceOutput]"
                      endId="Package\Iterate Offices\Sequence Container\Reminders\API Sort.Inputs[Sort Input]"
                      name="JsonSourceOutput"
                      startId="Package\Iterate Offices\Sequence Container\Reminders\Search Reminders.Outputs[JsonSourceOutput]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Reminders.Paths[Merge Join Output]"
                      endId="Package\Iterate Offices\Sequence Container\Reminders\Insert or Ignore.Inputs[Conditional Split Input]"
                      name="Merge Join Output"
                      startId="Package\Iterate Offices\Sequence Container\Reminders\Merge Join To Find Those to Insert.Outputs[Merge Join Output]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Reminders.Paths[OLE DB Source Output]"
                      endId="Package\Iterate Offices\Sequence Container\Reminders\SQL Sort.Inputs[Sort Input]"
                      name="OLE DB Source Output"
                      startId="Package\Iterate Offices\Sequence Container\Reminders\Existing Reminders from SQL.Outputs[OLE DB Source Output]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Reminders.Paths[Response Output]"
                      endId="Package\Iterate Offices\Sequence Container\Reminders\JSON Parser Add id back in.Inputs[JsonParserTransformInput]"
                      name="Response Output"
                      startId="Package\Iterate Offices\Sequence Container\Reminders\Web API Destination.Outputs[Response Output]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Reminders.Paths[Sort Output]"
                      endId="Package\Iterate Offices\Sequence Container\Reminders\Merge Join To Find Those to Insert.Inputs[Merge Join Right Input]"
                      name="Sort Output"
                      startId="Package\Iterate Offices\Sequence Container\Reminders\SQL Sort.Outputs[Sort Output]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Reminders.Paths[Sort Output1]"
                      endId="Package\Iterate Offices\Sequence Container\Reminders\Merge Join To Find Those to Insert.Inputs[Merge Join Left Input]"
                      name="Sort Output"
                      startId="Package\Iterate Offices\Sequence Container\Reminders\API Sort.Outputs[Sort Output]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Reminders.Paths[upsert]"
                      endId="Package\Iterate Offices\Sequence Container\Reminders\JSON Generator Transform.Inputs[JsonInput1]"
                      name="upsert"
                      startId="Package\Iterate Offices\Sequence Container\Reminders\Insert or Ignore.Outputs[upsert]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Reminders.Paths[WebApiDestination Error Output]"
                      endId="Package\Iterate Offices\Sequence Container\Reminders\Trash Destination 1.Inputs[TrashDestinationInput]"
                      name="WebApiDestination Error Output"
                      startId="Package\Iterate Offices\Sequence Container\Reminders\Web API Destination.Outputs[WebApiDestination Error Output]" />
                  </paths>
                </pipeline>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Iterate Offices\Sequence Container\Set SSIS Variables From XML"
              DTS:CreationName="ZappySys.XmlParserTask"
              DTS:Description="ZS Xml Parser Task"
              DTS:DTSID="{C3A504FC-5057-4E7C-AD7B-B647A8AA434C}"
              DTS:ExecutableType="ZappySys.XmlParserTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Set SSIS Variables From XML"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <XmlParserTask
                  SourceAccessMode="Connection"
                  SourceVariable=""
                  SourceConnection="{4DC76EE1-014A-4815-B0BD-C377F218FC10}"
                  SourceDirectValue="&lt;!-- &#xA;Using XML Parser Task you can extract values from XML document using XPath Expression &#xA;See example in below grid. Read description for each mapping.&#xA;See more examples: https://msdn.microsoft.com/en-us/library/ms256086(v=vs.110).aspx&#xA;--&gt;&#xA;&lt;catalog&gt;&#xA;   &lt;book id=&quot;bk101&quot;&gt;&#xA;      &lt;author&gt;Gambardella, Matthew&lt;/author&gt;&#xA;      &lt;title&gt;XML Developer's Guide&lt;/title&gt;&#xA;      &lt;genre&gt;Computer&lt;/genre&gt;&#xA;      &lt;price&gt;44.95&lt;/price&gt;&#xA;      &lt;publish_date&gt;2000-10-01&lt;/publish_date&gt;&#xA;      &lt;description&gt;An in-depth look at creating applications &#xA;      with XML.&lt;/description&gt;&#xA;   &lt;/book&gt;&#xA;   &lt;book id=&quot;bk102&quot;&gt;&#xA;      &lt;author&gt;Ralls, Kim&lt;/author&gt;&#xA;      &lt;title&gt;Midnight Rain&lt;/title&gt;&#xA;      &lt;genre&gt;Fantasy&lt;/genre&gt;&#xA;      &lt;price&gt;5.95&lt;/price&gt;&#xA;      &lt;publish_date&gt;2000-12-16&lt;/publish_date&gt;&#xA;      &lt;description&gt;A former architect battles corporate zombies, &#xA;      an evil sorceress, and her own childhood to become queen &#xA;      of the world.&lt;/description&gt;&#xA;   &lt;/book&gt;&#xA;   &lt;book id=&quot;bk103&quot;&gt;&#xA;      &lt;author&gt;Corets, Eva&lt;/author&gt;&#xA;      &lt;title&gt;Maeve Ascendant&lt;/title&gt;&#xA;      &lt;genre&gt;Fantasy&lt;/genre&gt;&#xA;      &lt;price&gt;5.95&lt;/price&gt;&#xA;      &lt;publish_date&gt;2000-11-17&lt;/publish_date&gt;&#xA;      &lt;description&gt;After the collapse of a nanotechnology &#xA;      society in England, the young survivors lay the &#xA;      foundation for a new society.&lt;/description&gt;&#xA;   &lt;/book&gt;&#xA;   &lt;book id=&quot;bk104&quot;&gt;&#xA;      &lt;author&gt;Corets, Eva&lt;/author&gt;&#xA;      &lt;title&gt;Oberon's Legacy&lt;/title&gt;&#xA;      &lt;genre&gt;Fantasy&lt;/genre&gt;&#xA;      &lt;price&gt;5.95&lt;/price&gt;&#xA;      &lt;publish_date&gt;2001-03-10&lt;/publish_date&gt;&#xA;      &lt;description&gt;In post-apocalypse England, the mysterious &#xA;      agent known only as Oberon helps to create a new life &#xA;      for the inhabitants of London. Sequel to Maeve &#xA;      Ascendant.&lt;/description&gt;&#xA;   &lt;/book&gt;&#xA;&lt;/catalog&gt;"
                  TargetSettings="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-16&quot;?&gt;&lt;XmlParserSetting xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot;&gt;&lt;Mappings&gt;&lt;XmlParserMapping&gt;&lt;Path&gt;/SSISVariables/RexAPIWebURL&lt;/Path&gt;&lt;Target&gt;User::RexAPIWebURL&lt;/Target&gt;&lt;Required&gt;true&lt;/Required&gt;&lt;Description /&gt;&lt;/XmlParserMapping&gt;&lt;XmlParserMapping&gt;&lt;Path&gt; /SSISVariables/PackageUser&lt;/Path&gt;&lt;Target&gt;User::PackageUser&lt;/Target&gt;&lt;Required&gt;true&lt;/Required&gt;&lt;Description /&gt;&lt;/XmlParserMapping&gt;&lt;XmlParserMapping&gt;&lt;Path&gt;/SSISVariables/PackageErrorEmail&lt;/Path&gt;&lt;Target&gt;User::PackageErrorEmail&lt;/Target&gt;&lt;Required&gt;true&lt;/Required&gt;&lt;Description /&gt;&lt;/XmlParserMapping&gt;&lt;XmlParserMapping&gt;&lt;Path&gt;/SSISVariables/PackagePassword&lt;/Path&gt;&lt;Target&gt;User::PackagePassword&lt;/Target&gt;&lt;Required&gt;true&lt;/Required&gt;&lt;Description /&gt;&lt;/XmlParserMapping&gt;&lt;XmlParserMapping&gt;&lt;Path&gt;/SSISVariables/RexAPIWebURLv1&lt;/Path&gt;&lt;Target&gt;User::RexAPIWebURLv1&lt;/Target&gt;&lt;Required&gt;true&lt;/Required&gt;&lt;Description /&gt;&lt;/XmlParserMapping&gt;&lt;/Mappings&gt;&lt;Path /&gt;&lt;/XmlParserSetting&gt;"
                  LogLevel="Normal"
                  PrefixTimestamp="False" />
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Iterate Offices\Sequence Container.PrecedenceConstraints[Constraint]"
              DTS:CreationName=""
              DTS:DTSID="{00461452-F5EE-4470-985F-04BA17E99B14}"
              DTS:From="Package\Iterate Offices\Sequence Container\Get epoch for 4 days ago"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint"
              DTS:To="Package\Iterate Offices\Sequence Container\Get Auth Key" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Iterate Offices\Sequence Container.PrecedenceConstraints[Constraint 1]"
              DTS:CreationName=""
              DTS:DTSID="{B7F17F39-9ECD-4089-B523-A6773AEDA1AF}"
              DTS:From="Package\Iterate Offices\Sequence Container\Get Auth Key"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 1"
              DTS:To="Package\Iterate Offices\Sequence Container\Reminders" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Iterate Offices\Sequence Container.PrecedenceConstraints[Constraint 12]"
              DTS:CreationName=""
              DTS:DTSID="{B9D7C037-0EC3-43D3-86A0-25906968A003}"
              DTS:From="Package\Iterate Offices\Sequence Container\Get Auth Key"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 12"
              DTS:To="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Iterate Offices\Sequence Container.PrecedenceConstraints[Constraint 14]"
              DTS:CreationName=""
              DTS:DTSID="{6F3AEA37-16F4-48C7-80D3-7C0C2F9E77AA}"
              DTS:From="Package\Iterate Offices\Sequence Container\Get Auth Key"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 14"
              DTS:To="Package\Iterate Offices\Sequence Container\Notes (stream)" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Iterate Offices\Sequence Container.PrecedenceConstraints[Constraint 17]"
              DTS:CreationName=""
              DTS:DTSID="{EC78C69C-A76E-4A80-9805-4100EC3AE0C9}"
              DTS:From="Package\Iterate Offices\Sequence Container\Set SSIS Variables From XML"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 17"
              DTS:To="Package\Iterate Offices\Sequence Container\Get epoch for 4 days ago" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Iterate Offices\Sequence Container.PrecedenceConstraints[Constraint 2]"
              DTS:CreationName=""
              DTS:DTSID="{2D234625-7519-4586-955F-3F3552475069}"
              DTS:From="Package\Iterate Offices\Sequence Container\Get Auth Key"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 2"
              DTS:To="Package\Iterate Offices\Sequence Container\Email Auth Failure"
              DTS:Value="1" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Iterate Offices\Sequence Container.PrecedenceConstraints[Constraint 4]"
              DTS:CreationName=""
              DTS:DTSID="{81F078E8-1C6D-4B71-8250-DDA3ABA511A2}"
              DTS:From="Package\Iterate Offices\Sequence Container\Get Auth Key"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 4"
              DTS:To="Package\Iterate Offices\Sequence Container\Match Profile" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Iterate Offices\Sequence Container.PrecedenceConstraints[Constraint 5]"
              DTS:CreationName=""
              DTS:DTSID="{C8B325A7-F3D5-43B4-AEDC-1E363DAB2271}"
              DTS:From="Package\Iterate Offices\Sequence Container\Get Auth Key"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 5"
              DTS:To="Package\Iterate Offices\Sequence Container\Listing Portal Upload" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Iterate Offices\Sequence Container.PrecedenceConstraints[Constraint 7]"
              DTS:CreationName=""
              DTS:DTSID="{F4E4A0FE-2A5D-45D3-8313-5B57F2110633}"
              DTS:From="Package\Iterate Offices\Sequence Container\Get Auth Key"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 7"
              DTS:To="Package\Iterate Offices\Sequence Container\Offer Contract search" />
          </DTS:PrecedenceConstraints>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{B91797E6-63AA-487A-BE11-A8F52FAC7D42}"
          DTS:ObjectName="{B91797E6-63AA-487A-BE11-A8F52FAC7D42}"
          DTS:ValueIndex="0"
          DTS:VariableName="User::Office_id" />
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{10C419FA-D7D8-4BF5-94CC-7448FA8782DE}"
          DTS:ObjectName="{10C419FA-D7D8-4BF5-94CC-7448FA8782DE}"
          DTS:ValueIndex="1"
          DTS:VariableName="User::RexAccountID" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 8 1]"
      DTS:CreationName=""
      DTS:DTSID="{0A0F3812-0366-4BD3-84EB-15E7276736C3}"
      DTS:From="Package\Get Office List"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 8 1"
      DTS:To="Package\Iterate Offices" />
  </DTS:PrecedenceConstraints>
  <DTS:EventHandlers>
    <DTS:EventHandler
      DTS:refId="Package.EventHandlers[OnError]"
      DTS:CreationName="OnError"
      DTS:DTSID="{484ED11E-A6AC-4E70-9658-1EBEE14193CD}"
      DTS:EventID="0"
      DTS:EventName="OnError"
      DTS:LocaleID="-1">
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="The propagate property of the event"
          DTS:DTSID="{C2BEE040-D254-48D1-89A4-67BFEF7E04F0}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="System"
          DTS:ObjectName="Propagate">
          <DTS:VariableValue
            DTS:DataType="11">-1</DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnError]\Email error"
          DTS:CreationName="ZappySys.HtmlEmailTask"
          DTS:Description="Email Auth Failure"
          DTS:Disabled="True"
          DTS:DTSID="{D4DAA6C4-3804-4987-B310-DB3803CFFBF2}"
          DTS:ExecutableType="ZappySys.HtmlEmailTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Email error"
          DTS:TaskContact="HTML Email Task; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support">
          <DTS:Variables />
          <DTS:ObjectData>
            <HtmlEmailTask
              SmtpConnection="SMTP"
              IsHtmlEmail="True"
              DefaultStyle="&#xA;&lt;style type=&quot;text/css&quot;&gt;&#xA;body,div,p,span,td,th,table {&#xA; font-family: Helvetica, Arial, sans-serif;&#xA; font-size: 10pt; &#xA;}&#xA;h1,h2,h3,h4,h5{&#xA;font-family: Helvetica, Arial, sans-serif;&#xA;}&#xA;&#xA;table { &#xA; border-collapse: &#xA; collapse; border-spacing: 0; &#xA;}&#xA;&#xA;tr.odd    {background-color: #cccccc}&#xA;tr.even   {background-color: #fafafa}&#xA;td, th { border: 1px solid #bbb;padding: 5 5 5 5} &#xA;th { background: #F3F3F3;  font-weight: bold;}&#xA;&lt;/style&gt;&#xA;&#xA;"
              Subject="Error occured in {{System::PackageName}}"
              From="alerts@spicerhaart.co.uk"
              To="{{User::PackageErrorEmail}}"
              Cc=""
              ReplyTo=""
              Bcc=""
              Attachments=""
              EmailPriority="High"
              MessageSourceType="Direct"
              MessageDirectValue="&lt;p&gt;Error occured and could not be logged in database&lt;p /&gt;&#xA;&lt;br&gt;&#xA;&lt;p&gt;Error code: {{System::ErrorCode}}&lt;p /&gt;&#xA;&lt;br&gt;&#xA;&lt;p&gt;Error message: {{System::ErrorDescription}}&lt;p /&gt;"
              MessageFileConnection=""
              MessageVariable=""
              LogLevel="Normal"
              PrefixTimestamp="False" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnError]\Insert error log into database"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{C5915339-0B96-4546-8BE4-2FF6D3EE18C0}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Insert error log into database"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{1ACC4D99-A047-44CB-AAAD-088F42F69A23}"
              SQLTask:SqlStatementSource="INSERT INTO SSISErrorLog&#xA;(PackageName, StartTime, ErrorCode, ErrorDescription, AccountID)&#xA;VALUES&#xA;(?, ?, ?, ?, ?)" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@PackageName"
                SQLTask:DtsVariableName="System::PackageName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@StartTime"
                SQLTask:DtsVariableName="System::StartTime"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="7"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@ErrorCode"
                SQLTask:DtsVariableName="System::ErrorCode"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@ErrorDescription"
                SQLTask:DtsVariableName="System::ErrorDescription"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@AccountID"
                SQLTask:DtsVariableName="User::RexAccountID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package.EventHandlers[OnError].PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{F69F0CE1-871C-47E3-8857-A3899F5E8E05}"
          DTS:From="Package.EventHandlers[OnError]\Insert error log into database"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package.EventHandlers[OnError]\Email error"
          DTS:Value="1" />
      </DTS:PrecedenceConstraints>
    </DTS:EventHandler>
    <DTS:EventHandler
      DTS:refId="Package.EventHandlers[OnTaskFailed]"
      DTS:CreationName="OnTaskFailed"
      DTS:DTSID="{FD5A24DB-4F4A-4758-A7C1-789BB5D566EB}"
      DTS:EventID="0"
      DTS:EventName="OnTaskFailed"
      DTS:LocaleID="-1">
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="The propagate property of the event"
          DTS:DTSID="{D4849399-AA61-4D7D-925C-2829D006BF8A}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="System"
          DTS:ObjectName="Propagate">
          <DTS:VariableValue
            DTS:DataType="11">-1</DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:Executables />
    </DTS:EventHandler>
  </DTS:EventHandlers>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="145,42"
          Id="Package\Get Office List"
          TopLeft="720.5,5.5" />
        <NodeLayout
          Size="164,42"
          Id="Package\Iterate Offices\Sequence Container\Email Auth Failure"
          TopLeft="525.5,311.5" />
        <NodeLayout
          Size="141,42"
          Id="Package\Iterate Offices\Sequence Container\Get Auth Key"
          TopLeft="750,209.5" />
        <NodeLayout
          Size="198,42"
          Id="Package\Iterate Offices\Sequence Container\Get epoch for 4 days ago"
          TopLeft="721.5,107.5" />
        <NodeLayout
          Size="176,42"
          Id="Package\Iterate Offices\Sequence Container\Listing Portal Upload"
          TopLeft="951.5,311.5" />
        <NodeLayout
          Size="140,42"
          Id="Package\Iterate Offices\Sequence Container\Match Profile"
          TopLeft="750.5,311.5" />
        <NodeLayout
          Size="150,42"
          Id="Package\Iterate Offices\Sequence Container\Notes (stream)"
          TopLeft="314.5,311.5" />
        <NodeLayout
          Size="180,42"
          Id="Package\Iterate Offices\Sequence Container\Offer Contract search"
          TopLeft="1188.5,311.5" />
        <NodeLayout
          Size="248,42"
          Id="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing"
          TopLeft="5.5,311.5" />
        <NodeLayout
          Size="216,42"
          Id="Package\Iterate Offices\Sequence Container\Set SSIS Variables From XML"
          TopLeft="712.5,5.49999999999989" />
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container.PrecedenceConstraints[Constraint]"
          TopLeft="820.5,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container.PrecedenceConstraints[Constraint 12]"
          TopLeft="770.625,251.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-641.125,60"
              Start="0,0"
              End="-641.125,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,9.58024691358025" />
                  <mssgle:CubicBezierSegment
                    Point1="0,9.58024691358025"
                    Point2="0,13.5802469135802"
                    Point3="-4,13.5802469135802" />
                  <mssgle:LineSegment
                    End="-637.125,13.5802469135802" />
                  <mssgle:CubicBezierSegment
                    Point1="-637.125,13.5802469135802"
                    Point2="-641.125,13.5802469135802"
                    Point3="-641.125,17.5802469135802" />
                  <mssgle:LineSegment
                    End="-641.125,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container.PrecedenceConstraints[Constraint 14]"
          TopLeft="787.25,251.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-397.75,60"
              Start="0,0"
              End="-397.75,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.7424593967517" />
                  <mssgle:CubicBezierSegment
                    Point1="0,16.7424593967517"
                    Point2="0,20.7424593967517"
                    Point3="-4,20.7424593967517" />
                  <mssgle:LineSegment
                    End="-393.75,20.7424593967517" />
                  <mssgle:CubicBezierSegment
                    Point1="-393.75,20.7424593967517"
                    Point2="-397.75,20.7424593967517"
                    Point3="-397.75,24.7424593967517" />
                  <mssgle:LineSegment
                    End="-397.75,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container.PrecedenceConstraints[Constraint 17]"
          TopLeft="820.5,47.4999999999999">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container.PrecedenceConstraints[Constraint 2]"
          TopLeft="803.875,251.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-196.375,60"
              Start="0,0"
              End="-196.375,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,21.9899497487437" />
                  <mssgle:CubicBezierSegment
                    Point1="0,21.9899497487437"
                    Point2="0,25.9899497487437"
                    Point3="-4,25.9899497487437" />
                  <mssgle:LineSegment
                    End="-192.375,25.9899497487437" />
                  <mssgle:CubicBezierSegment
                    Point1="-192.375,25.9899497487437"
                    Point2="-196.375,25.9899497487437"
                    Point3="-196.375,29.9899497487437" />
                  <mssgle:LineSegment
                    End="-196.375,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-113.42884765625,30.9899497487437,30.4826953125,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container.PrecedenceConstraints[Constraint 4]"
          TopLeft="820.5,251.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container.PrecedenceConstraints[Constraint 5]"
          TopLeft="837.125,251.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="202.375,59.9999999999999"
              Start="0,0"
              End="202.375,52.4999999999999">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,21.9899497487437" />
                  <mssgle:CubicBezierSegment
                    Point1="0,21.9899497487437"
                    Point2="0,25.9899497487437"
                    Point3="4,25.9899497487437" />
                  <mssgle:LineSegment
                    End="198.375,25.9899497487437" />
                  <mssgle:CubicBezierSegment
                    Point1="198.375,25.9899497487437"
                    Point2="202.375,25.9899497487437"
                    Point3="202.375,29.9899497487437" />
                  <mssgle:LineSegment
                    End="202.375,52.4999999999999" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container.PrecedenceConstraints[Constraint 7]"
          TopLeft="853.75,251.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="424.75,59.9999999999999"
              Start="0,0"
              End="424.75,52.4999999999999">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.7424593967517" />
                  <mssgle:CubicBezierSegment
                    Point1="0,16.7424593967517"
                    Point2="0,20.7424593967517"
                    Point3="4,20.7424593967517" />
                  <mssgle:LineSegment
                    End="420.75,20.7424593967517" />
                  <mssgle:CubicBezierSegment
                    Point1="420.75,20.7424593967517"
                    Point2="424.75,20.7424593967517"
                    Point3="424.75,24.7424593967517" />
                  <mssgle:LineSegment
                    End="424.75,52.4999999999999" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="129,42"
          Id="Package\Iterate Offices\Sequence Container\Reminders"
          TopLeft="1429,311.5" />
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container.PrecedenceConstraints[Constraint 1]"
          TopLeft="870.375,251.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="623.125,59.9999999999999"
              Start="0,0"
              End="623.125,52.4999999999999">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,9.58024691358022" />
                  <mssgle:CubicBezierSegment
                    Point1="0,9.58024691358022"
                    Point2="0,13.5802469135802"
                    Point3="4,13.5802469135802" />
                  <mssgle:LineSegment
                    End="619.125,13.5802469135802" />
                  <mssgle:CubicBezierSegment
                    Point1="619.125,13.5802469135802"
                    Point2="623.125,13.5802469135802"
                    Point3="623.125,17.5802469135802" />
                  <mssgle:LineSegment
                    End="623.125,52.4999999999999" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="1564,408"
          Size="1564,452"
          Id="Package\Iterate Offices\Sequence Container"
          TopLeft="5.5,5.5" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="1575,512"
          Size="1575,556"
          Id="Package\Iterate Offices"
          TopLeft="5.5,107.5" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 8 1]"
          TopLeft="793,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60.0000000000001"
              Start="0,0"
              End="0,52.5000000000001">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5000000000001" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <DtsEventHandler
    design-time-name="Package.EventHandlers[OnError]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="131,42"
          Id="Package.EventHandlers[OnError]\Email error"
          TopLeft="NaN,NaN" />
        <NodeLayout
          Size="217,42"
          Id="Package.EventHandlers[OnError]\Insert error log into database"
          TopLeft="195,93" />
        <EdgeLayout
          Id="Package.EventHandlers[OnError].PrecedenceConstraints[Constraint]"
          TopLeft="303.5,135">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="NaN,NaN"
              Start="0,0"
              End="NaN,NaN">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,NaN" />
                  <mssgle:CubicBezierSegment
                    Point1="0,NaN"
                    Point2="0,NaN"
                    Point3="-4,NaN" />
                  <mssgle:LineSegment
                    End="NaN,NaN" />
                  <mssgle:CubicBezierSegment
                    Point1="NaN,NaN"
                    Point2="NaN,NaN"
                    Point3="NaN,NaN" />
                  <mssgle:LineSegment
                    End="NaN,NaN" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-19.24134765625,NaN,30.4826953125,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <DtsEventHandler
    design-time-name="Package.EventHandlers[OnTaskFailed]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="131,42"
          Id="{7B24456E-71A1-42ED-8BF3-CE0C7825D6DF}"
          TopLeft="203,130" />
        <NodeLayout
          Size="178,42"
          Id="{1F31AF16-4BD6-4A53-A279-CE4F8DEAF5C6}"
          TopLeft="179,23" />
        <EdgeLayout
          Id="{160B05A4-98A6-4E8D-887A-A70D0F08AA63}"
          TopLeft="268.25,65">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,65"
              Start="0,0"
              End="0,57.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,57.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <TaskHost
    design-time-name="Package\Iterate Offices\Sequence Container\Listing Portal Upload">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="196,42"
          Id="Package\Iterate Offices\Sequence Container\Listing Portal Upload\Add accountid and origin"
          TopLeft="9.00000000000003,107.5" />
        <NodeLayout
          Size="203,42"
          Id="Package\Iterate Offices\Sequence Container\Listing Portal Upload\Upsert ListingPortalUpload"
          TopLeft="5.50000000000003,209.5" />
        <NodeLayout
          Size="216,42"
          Id="Package\Iterate Offices\Sequence Container\Listing Portal Upload\Search Listings Portal Upload"
          TopLeft="32.5,5.5" />
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Listing Portal Upload.Paths[JsonSourceOutput]"
          TopLeft="140.5,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-33.5,60"
              Start="0,0"
              End="-33.5,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26" />
                  <mssgle:CubicBezierSegment
                    Point1="0,26"
                    Point2="0,30"
                    Point3="-4,30" />
                  <mssgle:LineSegment
                    End="-29.5,30" />
                  <mssgle:CubicBezierSegment
                    Point1="-29.5,30"
                    Point2="-33.5,30"
                    Point3="-33.5,34" />
                  <mssgle:LineSegment
                    End="-33.5,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Listing Portal Upload.Paths[Derived Column Output]"
          TopLeft="107,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <TaskHost
    design-time-name="Package\Iterate Offices\Sequence Container\Match Profile">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="118,42"
          Id="Package\Iterate Offices\Sequence Container\Match Profile\API Sort"
          TopLeft="265,107.5" />
        <NodeLayout
          Size="171,42"
          Id="Package\Iterate Offices\Sequence Container\Match Profile\Trash Destination 1"
          TopLeft="5.50000000000006,617.5" />
        <NodeLayout
          Size="244,42"
          Id="Package\Iterate Offices\Sequence Container\Match Profile\Merge Join To Find Those to Insert"
          TopLeft="202,209.5" />
        <NodeLayout
          Size="162,42"
          Id="Package\Iterate Offices\Sequence Container\Match Profile\Trash Destination"
          TopLeft="14.0000000000001,413.5" />
        <NodeLayout
          Size="180,42"
          Id="Package\Iterate Offices\Sequence Container\Match Profile\Existing MP from SQL"
          TopLeft="19,5.5" />
        <NodeLayout
          Size="120,42"
          Id="Package\Iterate Offices\Sequence Container\Match Profile\SQL Sort"
          TopLeft="84,107.5" />
        <NodeLayout
          Size="173,42"
          Id="Package\Iterate Offices\Sequence Container\Match Profile\Rip out of the result"
          TopLeft="237.5,617.5" />
        <NodeLayout
          Size="188,42"
          Id="Package\Iterate Offices\Sequence Container\Match Profile\Read details (throttled)"
          TopLeft="230,515.5" />
        <NodeLayout
          Size="154,42"
          Id="Package\Iterate Offices\Sequence Container\Match Profile\Insert or Ignore"
          TopLeft="247,311.5" />
        <NodeLayout
          Size="120,42"
          Id="Package\Iterate Offices\Sequence Container\Match Profile\Multicast"
          TopLeft="264,719.5" />
        <NodeLayout
          Size="127,42"
          Id="Package\Iterate Offices\Sequence Container\Match Profile\Upsert MP"
          TopLeft="260.5,923.5" />
        <NodeLayout
          Size="128,42"
          Id="Package\Iterate Offices\Sequence Container\Match Profile\Search MP"
          TopLeft="260,5.5" />
        <NodeLayout
          Size="175,42"
          Id="Package\Iterate Offices\Sequence Container\Match Profile\Template Transform"
          TopLeft="236.5,413.5" />
        <NodeLayout
          Size="196,42"
          Id="Package\Iterate Offices\Sequence Container\Match Profile\Add accountid and origin"
          TopLeft="226,821.5" />
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Match Profile.Paths[Merge Join Output]"
          TopLeft="324,251.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Match Profile.Paths[JsonSourceOutput]"
          TopLeft="324,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Match Profile.Paths[JsonParserTransformOutput]"
          TopLeft="324,659.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Match Profile.Paths[ignore]"
          TopLeft="299.666666666667,353.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-204.666666666667,60"
              Start="0,0"
              End="-204.666666666667,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.3701799485861" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.3701799485861"
                    Point2="0,24.3701799485861"
                    Point3="-4,24.3701799485861" />
                  <mssgle:LineSegment
                    End="-200.666666666667,24.3701799485861" />
                  <mssgle:CubicBezierSegment
                    Point1="-200.666666666667,24.3701799485861"
                    Point2="-204.666666666667,24.3701799485861"
                    Point3="-204.666666666667,28.3701799485861" />
                  <mssgle:LineSegment
                    End="-204.666666666667,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-116.738274739583,29.3701799485861,28.8098828125,11.384765625"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Match Profile.Paths[Derived Column Output]"
          TopLeft="324,863.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Match Profile.Paths[WebApiDestination Error Output]"
          TopLeft="294,557.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-203,60"
              Start="0,0"
              End="-203,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.3037974683544" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.3037974683544"
                    Point2="0,24.3037974683544"
                    Point3="-4,24.3037974683544" />
                  <mssgle:LineSegment
                    End="-199,24.3037974683544" />
                  <mssgle:CubicBezierSegment
                    Point1="-199,24.3037974683544"
                    Point2="-203,24.3037974683544"
                    Point3="-203,28.3037974683544" />
                  <mssgle:LineSegment
                    End="-203,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-173.3215625,29.3037974683544,143.643125,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Match Profile.Paths[upsert]"
          TopLeft="348.333333333333,353.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-24.3333333333333,60"
              Start="0,0"
              End="-24.3333333333333,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.3701799485861" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.3701799485861"
                    Point2="0,24.3701799485861"
                    Point3="-4,24.3701799485861" />
                  <mssgle:LineSegment
                    End="-20.3333333333333,24.3701799485861" />
                  <mssgle:CubicBezierSegment
                    Point1="-20.3333333333333,24.3701799485861"
                    Point2="-24.3333333333333,24.3701799485861"
                    Point3="-24.3333333333333,28.3701799485861" />
                  <mssgle:LineSegment
                    End="-24.3333333333333,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-26.7342057291667,29.3701799485861,29.135078125,11.033203125"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Match Profile.Paths[TemplateTransformOutput]"
          TopLeft="324,455.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Match Profile.Paths[Sort Output1]"
          TopLeft="324,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="39.3333333333333,60"
              Start="0,0"
              End="39.3333333333333,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.7654723127036" />
                  <mssgle:CubicBezierSegment
                    Point1="0,31.7654723127036"
                    Point2="0,35.7654723127036"
                    Point3="4,35.7654723127036" />
                  <mssgle:LineSegment
                    End="35.3333333333333,35.7654723127036" />
                  <mssgle:CubicBezierSegment
                    Point1="35.3333333333333,35.7654723127036"
                    Point2="39.3333333333333,35.7654723127036"
                    Point3="39.3333333333333,39.7654723127036" />
                  <mssgle:LineSegment
                    End="39.3333333333333,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Match Profile.Paths[Sort Output]"
          TopLeft="144,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="140.666666666667,60"
              Start="0,0"
              End="140.666666666667,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.7654723127036" />
                  <mssgle:CubicBezierSegment
                    Point1="0,31.7654723127036"
                    Point2="0,35.7654723127036"
                    Point3="4,35.7654723127036" />
                  <mssgle:LineSegment
                    End="136.666666666667,35.7654723127036" />
                  <mssgle:CubicBezierSegment
                    Point1="136.666666666667,35.7654723127036"
                    Point2="140.666666666667,35.7654723127036"
                    Point3="140.666666666667,39.7654723127036" />
                  <mssgle:LineSegment
                    End="140.666666666667,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Match Profile.Paths[Response Output]"
          TopLeft="354,557.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-30,60"
              Start="0,0"
              End="-30,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.3037974683544" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.3037974683544"
                    Point2="0,24.3037974683544"
                    Point3="-4,24.3037974683544" />
                  <mssgle:LineSegment
                    End="-26,24.3037974683544" />
                  <mssgle:CubicBezierSegment
                    Point1="-26,24.3037974683544"
                    Point2="-30,24.3037974683544"
                    Point3="-30,28.3037974683544" />
                  <mssgle:LineSegment
                    End="-30,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Match Profile.Paths[OLE DB Source Output]"
          TopLeft="109,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="35,60"
              Start="0,0"
              End="35,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26" />
                  <mssgle:CubicBezierSegment
                    Point1="0,26"
                    Point2="0,30"
                    Point3="4,30" />
                  <mssgle:LineSegment
                    End="31,30" />
                  <mssgle:CubicBezierSegment
                    Point1="31,30"
                    Point2="35,30"
                    Point3="35,34" />
                  <mssgle:LineSegment
                    End="35,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Match Profile.Paths[Multicast Output 1]"
          TopLeft="324,761.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Iterate Offices\Sequence Container\Match Profile\Existing MP from SQL">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Iterate Offices\Sequence Container\Notes (stream)">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="244,42"
          Id="Package\Iterate Offices\Sequence Container\Notes (stream)\Merge Join To Find Those to Insert"
          TopLeft="193.5,209.5" />
        <NodeLayout
          Size="171,42"
          Id="Package\Iterate Offices\Sequence Container\Notes (stream)\Trash Destination 1"
          TopLeft="29.0000000000001,617.5" />
        <NodeLayout
          Size="118,42"
          Id="Package\Iterate Offices\Sequence Container\Notes (stream)\API Sort"
          TopLeft="76.5,107.5" />
        <NodeLayout
          Size="120,42"
          Id="Package\Iterate Offices\Sequence Container\Notes (stream)\SQL Sort"
          TopLeft="255.5,107.5" />
        <NodeLayout
          Size="109,42"
          Id="Package\Iterate Offices\Sequence Container\Notes (stream)\record"
          TopLeft="261,617.5" />
        <NodeLayout
          Size="154,42"
          Id="Package\Iterate Offices\Sequence Container\Notes (stream)\Insert or Ignore"
          TopLeft="238.5,311.5" />
        <NodeLayout
          Size="188,42"
          Id="Package\Iterate Offices\Sequence Container\Notes (stream)\Read details (throttled)"
          TopLeft="221.5,515.5" />
        <NodeLayout
          Size="162,42"
          Id="Package\Iterate Offices\Sequence Container\Notes (stream)\Trash Destination"
          TopLeft="5.50000000000006,413.5" />
        <NodeLayout
          Size="141,42"
          Id="Package\Iterate Offices\Sequence Container\Notes (stream)\Search Notes"
          TopLeft="17,5.5" />
        <NodeLayout
          Size="140,42"
          Id="Package\Iterate Offices\Sequence Container\Notes (stream)\Upsert Notes"
          TopLeft="245.5,821.5" />
        <NodeLayout
          Size="193,42"
          Id="Package\Iterate Offices\Sequence Container\Notes (stream)\Existing Notes from SQL"
          TopLeft="219,5.5" />
        <NodeLayout
          Size="175,42"
          Id="Package\Iterate Offices\Sequence Container\Notes (stream)\Template Transform"
          TopLeft="228,413.5" />
        <NodeLayout
          Size="196,42"
          Id="Package\Iterate Offices\Sequence Container\Notes (stream)\Add accountid and origin"
          TopLeft="217.5,719.5" />
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Notes (stream).Paths[TemplateTransformOutput]"
          TopLeft="315.5,455.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Notes (stream).Paths[Sort Output1]"
          TopLeft="135.5,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="140.666666666667,60"
              Start="0,0"
              End="140.666666666667,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.7654723127036" />
                  <mssgle:CubicBezierSegment
                    Point1="0,31.7654723127036"
                    Point2="0,35.7654723127036"
                    Point3="4,35.7654723127036" />
                  <mssgle:LineSegment
                    End="136.666666666667,35.7654723127036" />
                  <mssgle:CubicBezierSegment
                    Point1="136.666666666667,35.7654723127036"
                    Point2="140.666666666667,35.7654723127036"
                    Point3="140.666666666667,39.7654723127036" />
                  <mssgle:LineSegment
                    End="140.666666666667,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Notes (stream).Paths[Sort Output]"
          TopLeft="315.5,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="39.3333333333334,60"
              Start="0,0"
              End="39.3333333333334,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.7654723127036" />
                  <mssgle:CubicBezierSegment
                    Point1="0,31.7654723127036"
                    Point2="0,35.7654723127036"
                    Point3="4,35.7654723127036" />
                  <mssgle:LineSegment
                    End="35.3333333333334,35.7654723127036" />
                  <mssgle:CubicBezierSegment
                    Point1="35.3333333333334,35.7654723127036"
                    Point2="39.3333333333334,35.7654723127036"
                    Point3="39.3333333333334,39.7654723127036" />
                  <mssgle:LineSegment
                    End="39.3333333333334,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Notes (stream).Paths[Response Output]"
          TopLeft="345.5,557.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-30,60"
              Start="0,0"
              End="-30,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.3037974683544" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.3037974683544"
                    Point2="0,24.3037974683544"
                    Point3="-4,24.3037974683544" />
                  <mssgle:LineSegment
                    End="-26,24.3037974683544" />
                  <mssgle:CubicBezierSegment
                    Point1="-26,24.3037974683544"
                    Point2="-30,24.3037974683544"
                    Point3="-30,28.3037974683544" />
                  <mssgle:LineSegment
                    End="-30,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Notes (stream).Paths[OLE DB Source Output]"
          TopLeft="315.5,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Notes (stream).Paths[Merge Join Output]"
          TopLeft="315.5,251.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Notes (stream).Paths[JsonSourceOutput]"
          TopLeft="87.5,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="48,60"
              Start="0,0"
              End="48,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26" />
                  <mssgle:CubicBezierSegment
                    Point1="0,26"
                    Point2="0,30"
                    Point3="4,30" />
                  <mssgle:LineSegment
                    End="44,30" />
                  <mssgle:CubicBezierSegment
                    Point1="44,30"
                    Point2="48,30"
                    Point3="48,34" />
                  <mssgle:LineSegment
                    End="48,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Notes (stream).Paths[JsonParserTransformOutput]"
          TopLeft="315.5,659.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Notes (stream).Paths[ignore]"
          TopLeft="291.166666666667,353.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-204.666666666667,60"
              Start="0,0"
              End="-204.666666666667,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.3701799485861" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.3701799485861"
                    Point2="0,24.3701799485861"
                    Point3="-4,24.3701799485861" />
                  <mssgle:LineSegment
                    End="-200.666666666667,24.3701799485861" />
                  <mssgle:CubicBezierSegment
                    Point1="-200.666666666667,24.3701799485861"
                    Point2="-204.666666666667,24.3701799485861"
                    Point3="-204.666666666667,28.3701799485861" />
                  <mssgle:LineSegment
                    End="-204.666666666667,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-116.738274739584,29.3701799485861,28.8098828125,11.384765625"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Notes (stream).Paths[Derived Column Output]"
          TopLeft="315.5,761.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Notes (stream).Paths[WebApiDestination Error Output]"
          TopLeft="285.5,557.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-171,60"
              Start="0,0"
              End="-171,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.3037974683544" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.3037974683544"
                    Point2="0,24.3037974683544"
                    Point3="-4,24.3037974683544" />
                  <mssgle:LineSegment
                    End="-167,24.3037974683544" />
                  <mssgle:CubicBezierSegment
                    Point1="-167,24.3037974683544"
                    Point2="-171,24.3037974683544"
                    Point3="-171,28.3037974683544" />
                  <mssgle:LineSegment
                    End="-171,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-165.8850390625,29.3037974683544,160.770078125,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Notes (stream).Paths[upsert]"
          TopLeft="339.833333333333,353.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-24.3333333333333,60"
              Start="0,0"
              End="-24.3333333333333,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.3701799485861" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.3701799485861"
                    Point2="0,24.3701799485861"
                    Point3="-4,24.3701799485861" />
                  <mssgle:LineSegment
                    End="-20.3333333333333,24.3701799485861" />
                  <mssgle:CubicBezierSegment
                    Point1="-20.3333333333333,24.3701799485861"
                    Point2="-24.3333333333333,24.3701799485861"
                    Point3="-24.3333333333333,28.3701799485861" />
                  <mssgle:LineSegment
                    End="-24.3333333333333,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-26.7342057291667,29.3701799485861,29.135078125,11.033203125"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Iterate Offices\Sequence Container\Notes (stream)\Existing Notes from SQL">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Iterate Offices\Sequence Container\Offer Contract search">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="137,42"
          Id="Package\Iterate Offices\Sequence Container\Offer Contract search\Upsert Offer"
          TopLeft="266.5,719.5" />
        <NodeLayout
          Size="206,42"
          Id="Package\Iterate Offices\Sequence Container\Offer Contract search\JSON Generator Transform"
          TopLeft="232,413.5" />
        <NodeLayout
          Size="162,42"
          Id="Package\Iterate Offices\Sequence Container\Offer Contract search\Trash Destination"
          TopLeft="499,413.5" />
        <NodeLayout
          Size="244,42"
          Id="Package\Iterate Offices\Sequence Container\Offer Contract search\Merge Join To Find Those to Insert"
          TopLeft="458,209.5" />
        <NodeLayout
          Size="120,42"
          Id="Package\Iterate Offices\Sequence Container\Offer Contract search\SQL Sort"
          TopLeft="520,107.5" />
        <NodeLayout
          Size="171,42"
          Id="Package\Iterate Offices\Sequence Container\Offer Contract search\Trash Destination 1"
          TopLeft="5.50000000000006,617.5" />
        <NodeLayout
          Size="154,42"
          Id="Package\Iterate Offices\Sequence Container\Offer Contract search\Insert or Ignore"
          TopLeft="503,311.5" />
        <NodeLayout
          Size="159,42"
          Id="Package\Iterate Offices\Sequence Container\Offer Contract search\Search Contracts"
          TopLeft="258.5,5.5" />
        <NodeLayout
          Size="118,42"
          Id="Package\Iterate Offices\Sequence Container\Offer Contract search\API Sort"
          TopLeft="341,107.5" />
        <NodeLayout
          Size="176,42"
          Id="Package\Iterate Offices\Sequence Container\Offer Contract search\Web API Destination"
          TopLeft="247,515.5" />
        <NodeLayout
          Size="211,42"
          Id="Package\Iterate Offices\Sequence Container\Offer Contract search\Existing Contracts from SQL"
          TopLeft="474.5,5.5" />
        <NodeLayout
          Size="173,42"
          Id="Package\Iterate Offices\Sequence Container\Offer Contract search\Rip out of the result"
          TopLeft="537,570" />
        <NodeLayout
          Size="196,42"
          Id="Package\Iterate Offices\Sequence Container\Offer Contract search\Add accountid and origin"
          TopLeft="237,617.5" />
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Offer Contract search.Paths[WebApiDestination Error Output]"
          TopLeft="307,557.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-216,60.0000000000001"
              Start="0,0"
              End="-216,52.5000000000001">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.3243243243244" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.3243243243244"
                    Point2="0,24.3243243243244"
                    Point3="-4,24.3243243243244" />
                  <mssgle:LineSegment
                    End="-212,24.3243243243244" />
                  <mssgle:CubicBezierSegment
                    Point1="-212,24.3243243243244"
                    Point2="-216,24.3243243243244"
                    Point3="-216,28.3243243243244" />
                  <mssgle:LineSegment
                    End="-216,52.5000000000001" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-179.8215625,29.3243243243244,143.643125,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Offer Contract search.Paths[upsert]"
          TopLeft="555.666666666667,353.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-220.666666666667,60"
              Start="0,0"
              End="-220.666666666667,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.3701799485861" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.3701799485861"
                    Point2="0,24.3701799485861"
                    Point3="-4,24.3701799485861" />
                  <mssgle:LineSegment
                    End="-216.666666666667,24.3701799485861" />
                  <mssgle:CubicBezierSegment
                    Point1="-216.666666666667,24.3701799485861"
                    Point2="-220.666666666667,24.3701799485861"
                    Point3="-220.666666666667,28.3701799485861" />
                  <mssgle:LineSegment
                    End="-220.666666666667,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-124.900872395834,29.3701799485861,29.135078125,11.033203125"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Offer Contract search.Paths[Sort Output1]"
          TopLeft="400,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="140.666666666667,60"
              Start="0,0"
              End="140.666666666667,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.7654723127036" />
                  <mssgle:CubicBezierSegment
                    Point1="0,31.7654723127036"
                    Point2="0,35.7654723127036"
                    Point3="4,35.7654723127036" />
                  <mssgle:LineSegment
                    End="136.666666666667,35.7654723127036" />
                  <mssgle:CubicBezierSegment
                    Point1="136.666666666667,35.7654723127036"
                    Point2="140.666666666667,35.7654723127036"
                    Point3="140.666666666667,39.7654723127036" />
                  <mssgle:LineSegment
                    End="140.666666666667,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Offer Contract search.Paths[Sort Output]"
          TopLeft="580,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="39.3333333333333,60"
              Start="0,0"
              End="39.3333333333333,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.7654723127036" />
                  <mssgle:CubicBezierSegment
                    Point1="0,31.7654723127036"
                    Point2="0,35.7654723127036"
                    Point3="4,35.7654723127036" />
                  <mssgle:LineSegment
                    End="35.3333333333333,35.7654723127036" />
                  <mssgle:CubicBezierSegment
                    Point1="35.3333333333333,35.7654723127036"
                    Point2="39.3333333333333,35.7654723127036"
                    Point3="39.3333333333333,39.7654723127036" />
                  <mssgle:LineSegment
                    End="39.3333333333333,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Offer Contract search.Paths[Response Output]"
          TopLeft="423,536.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="114,54.5"
              Start="0,0"
              End="106.5,54.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="53,0" />
                  <mssgle:CubicBezierSegment
                    Point1="53,0"
                    Point2="57,0"
                    Point3="57,4" />
                  <mssgle:LineSegment
                    End="57,50.5" />
                  <mssgle:CubicBezierSegment
                    Point1="57,50.5"
                    Point2="57,54.5"
                    Point3="61,54.5" />
                  <mssgle:LineSegment
                    End="106.5,54.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Offer Contract search.Paths[OLE DB Source Output]"
          TopLeft="580,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Offer Contract search.Paths[Merge Join Output]"
          TopLeft="580,251.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Offer Contract search.Paths[JsonSourceOutput]"
          TopLeft="338,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="62,60"
              Start="0,0"
              End="62,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26" />
                  <mssgle:CubicBezierSegment
                    Point1="0,26"
                    Point2="0,30"
                    Point3="4,30" />
                  <mssgle:LineSegment
                    End="58,30" />
                  <mssgle:CubicBezierSegment
                    Point1="58,30"
                    Point2="62,30"
                    Point3="62,34" />
                  <mssgle:LineSegment
                    End="62,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Offer Contract search.Paths[JsonParserTransformOutput]"
          TopLeft="537,596.666666666667">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-104,41.8333333333334"
              Start="0,0"
              End="-96.5,41.8333333333334">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-39.8899082568808,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-39.8899082568808,0"
                    Point2="-43.8899082568808,0"
                    Point3="-43.8899082568808,4" />
                  <mssgle:LineSegment
                    End="-43.8899082568808,37.8333333333334" />
                  <mssgle:CubicBezierSegment
                    Point1="-43.8899082568808,37.8333333333334"
                    Point2="-43.8899082568808,41.8333333333334"
                    Point3="-47.8899082568808,41.8333333333334" />
                  <mssgle:LineSegment
                    End="-96.5,41.8333333333334" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Offer Contract search.Paths[JsonGeneratorTransformOutput]"
          TopLeft="335,455.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Offer Contract search.Paths[ignore]"
          TopLeft="604.333333333333,353.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-24.3333333333334,60"
              Start="0,0"
              End="-24.3333333333334,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.3701799485861" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.3701799485861"
                    Point2="0,24.3701799485861"
                    Point3="-4,24.3701799485861" />
                  <mssgle:LineSegment
                    End="-20.3333333333334,24.3701799485861" />
                  <mssgle:CubicBezierSegment
                    Point1="-20.3333333333334,24.3701799485861"
                    Point2="-24.3333333333334,24.3701799485861"
                    Point3="-24.3333333333334,28.3701799485861" />
                  <mssgle:LineSegment
                    End="-24.3333333333334,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-26.5716080729167,29.3701799485861,28.8098828125,11.384765625"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Offer Contract search.Paths[Derived Column Output]"
          TopLeft="335,659.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Iterate Offices\Sequence Container\Offer Contract search\Existing Contracts from SQL">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="171,42"
          Id="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Trash Destination 1"
          TopLeft="5.50000000000017,923.5" />
        <NodeLayout
          Size="244,42"
          Id="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Merge Join To Find Those to Insert"
          TopLeft="399,311.5" />
        <NodeLayout
          Size="163,42"
          Id="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Existing from SQL"
          TopLeft="165.5,5.5" />
        <NodeLayout
          Size="120,42"
          Id="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\SQL Sort"
          TopLeft="281,209.5" />
        <NodeLayout
          Size="240,42"
          Id="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Search PortalUploadQueueTargets"
          TopLeft="401,107.5" />
        <NodeLayout
          Size="109,42"
          Id="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\record"
          TopLeft="237.5,719.5" />
        <NodeLayout
          Size="162,42"
          Id="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Trash Destination"
          TopLeft="440,515.5" />
        <NodeLayout
          Size="118,42"
          Id="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\API Sort"
          TopLeft="462,209.5" />
        <NodeLayout
          Size="188,42"
          Id="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Read details (throttled)"
          TopLeft="198,617.5" />
        <NodeLayout
          Size="154,42"
          Id="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Insert or Ignore"
          TopLeft="444,413.5" />
        <NodeLayout
          Size="110,42"
          Id="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Upsert"
          TopLeft="237,923.5" />
        <NodeLayout
          Size="175,42"
          Id="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Template Transform"
          TopLeft="204.5,515.5" />
        <NodeLayout
          Size="196,42"
          Id="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Add accountid and origin 1"
          TopLeft="194,821.5" />
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing.Paths[Sort Output]"
          TopLeft="341,251.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="140.666666666667,60"
              Start="0,0"
              End="140.666666666667,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.7654723127036" />
                  <mssgle:CubicBezierSegment
                    Point1="0,31.7654723127036"
                    Point2="0,35.7654723127036"
                    Point3="4,35.7654723127036" />
                  <mssgle:LineSegment
                    End="136.666666666667,35.7654723127036" />
                  <mssgle:CubicBezierSegment
                    Point1="136.666666666667,35.7654723127036"
                    Point2="140.666666666667,35.7654723127036"
                    Point3="140.666666666667,39.7654723127036" />
                  <mssgle:LineSegment
                    End="140.666666666667,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing.Paths[Response Output]"
          TopLeft="292,659.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing.Paths[Merge Join Output]"
          TopLeft="521,353.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing.Paths[JsonSourceOutput]"
          TopLeft="521,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing.Paths[JsonParserTransformOutput]"
          TopLeft="292,761.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing.Paths[insert]"
          TopLeft="496.666666666667,455.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-204.666666666667,60"
              Start="0,0"
              End="-204.666666666667,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.3701799485861" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.3701799485861"
                    Point2="0,24.3701799485861"
                    Point3="-4,24.3701799485861" />
                  <mssgle:LineSegment
                    End="-200.666666666667,24.3701799485861" />
                  <mssgle:CubicBezierSegment
                    Point1="-200.666666666667,24.3701799485861"
                    Point2="-204.666666666667,24.3701799485861"
                    Point3="-204.666666666667,28.3701799485861" />
                  <mssgle:LineSegment
                    End="-204.666666666667,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-115.283313802083,29.3701799485861,25.8999609375,9.451171875"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing.Paths[ignore]"
          TopLeft="545.333333333333,455.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-24.3333333333334,60"
              Start="0,0"
              End="-24.3333333333334,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.3701799485861" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.3701799485861"
                    Point2="0,24.3701799485861"
                    Point3="-4,24.3701799485861" />
                  <mssgle:LineSegment
                    End="-20.3333333333334,24.3701799485861" />
                  <mssgle:CubicBezierSegment
                    Point1="-20.3333333333334,24.3701799485861"
                    Point2="-24.3333333333334,24.3701799485861"
                    Point3="-24.3333333333334,28.3701799485861" />
                  <mssgle:LineSegment
                    End="-24.3333333333334,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-26.5716080729167,29.3701799485861,28.8098828125,11.384765625"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing.Paths[TemplateTransformOutput]"
          TopLeft="292,557.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing.Paths[Sort Output1]"
          TopLeft="521,251.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="39.3333333333334,60"
              Start="0,0"
              End="39.3333333333334,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.7654723127036" />
                  <mssgle:CubicBezierSegment
                    Point1="0,31.7654723127036"
                    Point2="0,35.7654723127036"
                    Point3="4,35.7654723127036" />
                  <mssgle:LineSegment
                    End="35.3333333333334,35.7654723127036" />
                  <mssgle:CubicBezierSegment
                    Point1="35.3333333333334,35.7654723127036"
                    Point2="39.3333333333334,35.7654723127036"
                    Point3="39.3333333333334,39.7654723127036" />
                  <mssgle:LineSegment
                    End="39.3333333333334,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="186,42"
          Id="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Extract dispatch status"
          TopLeft="154,107.5" />
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing.Paths[OLE DB Source Output]"
          TopLeft="247,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing.Paths[JsonParserTransformOutput1]"
          TopLeft="247,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="94.0000000000001,60"
              Start="0,0"
              End="94.0000000000001,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26" />
                  <mssgle:CubicBezierSegment
                    Point1="0,26"
                    Point2="0,30"
                    Point3="4,30" />
                  <mssgle:LineSegment
                    End="90.0000000000001,30" />
                  <mssgle:CubicBezierSegment
                    Point1="90.0000000000001,30"
                    Point2="94.0000000000001,30"
                    Point3="94.0000000000001,34" />
                  <mssgle:LineSegment
                    End="94.0000000000001,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="120,42"
          Id="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Multicast"
          TopLeft="487,878" />
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing.Paths[Derived Column Output]"
          TopLeft="390,842.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="96.9999999999999,56.5"
              Start="0,0"
              End="89.4999999999999,56.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="44.4999999999999,0" />
                  <mssgle:CubicBezierSegment
                    Point1="44.4999999999999,0"
                    Point2="48.4999999999999,0"
                    Point3="48.4999999999999,4" />
                  <mssgle:LineSegment
                    End="48.4999999999999,52.5" />
                  <mssgle:CubicBezierSegment
                    Point1="48.4999999999999,52.5"
                    Point2="48.4999999999999,56.5"
                    Point3="52.4999999999999,56.5" />
                  <mssgle:LineSegment
                    End="89.4999999999999,56.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing.Paths[Multicast Output 1]"
          TopLeft="487,904.666666666667">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-140,39.8333333333334"
              Start="0,0"
              End="-132.5,39.8333333333334">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-55.0825688073395,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-55.0825688073395,0"
                    Point2="-59.0825688073395,0"
                    Point3="-59.0825688073395,4" />
                  <mssgle:LineSegment
                    End="-59.0825688073395,35.8333333333334" />
                  <mssgle:CubicBezierSegment
                    Point1="-59.0825688073395,35.8333333333334"
                    Point2="-59.0825688073395,39.8333333333334"
                    Point3="-63.0825688073395,39.8333333333334" />
                  <mssgle:LineSegment
                    End="-132.5,39.8333333333334" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Iterate Offices\Sequence Container\PortalUploadQueueTargets Ongoing\Existing from SQL">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Iterate Offices\Sequence Container\Reminders">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="162,42"
          Id="Package\Iterate Offices\Sequence Container\Reminders\Trash Destination"
          TopLeft="505,413.5" />
        <NodeLayout
          Size="206,42"
          Id="Package\Iterate Offices\Sequence Container\Reminders\JSON Generator Transform"
          TopLeft="238,413.5" />
        <NodeLayout
          Size="163,42"
          Id="Package\Iterate Offices\Sequence Container\Reminders\Upsert Reminders"
          TopLeft="269.5,923.5" />
        <NodeLayout
          Size="216,42"
          Id="Package\Iterate Offices\Sequence Container\Reminders\Existing Reminders from SQL"
          TopLeft="489.5,5.5" />
        <NodeLayout
          Size="118,42"
          Id="Package\Iterate Offices\Sequence Container\Reminders\API Sort"
          TopLeft="347,107.5" />
        <NodeLayout
          Size="207,42"
          Id="Package\Iterate Offices\Sequence Container\Reminders\JSON Parser Add id back in"
          TopLeft="237.5,617.5" />
        <NodeLayout
          Size="244,42"
          Id="Package\Iterate Offices\Sequence Container\Reminders\Merge Join To Find Those to Insert"
          TopLeft="464,209.5" />
        <NodeLayout
          Size="154,42"
          Id="Package\Iterate Offices\Sequence Container\Reminders\Insert or Ignore"
          TopLeft="509,311.5" />
        <NodeLayout
          Size="120,42"
          Id="Package\Iterate Offices\Sequence Container\Reminders\SQL Sort"
          TopLeft="526,107.5" />
        <NodeLayout
          Size="171,42"
          Id="Package\Iterate Offices\Sequence Container\Reminders\Trash Destination 1"
          TopLeft="5.50000000000011,617.5" />
        <NodeLayout
          Size="176,42"
          Id="Package\Iterate Offices\Sequence Container\Reminders\Web API Destination"
          TopLeft="253,515.5" />
        <NodeLayout
          Size="164,42"
          Id="Package\Iterate Offices\Sequence Container\Reminders\Search Reminders"
          TopLeft="287.5,5.5" />
        <NodeLayout
          Size="196,42"
          Id="Package\Iterate Offices\Sequence Container\Reminders\Add accountid and origin"
          TopLeft="243,821.5" />
        <NodeLayout
          Size="109,42"
          Id="Package\Iterate Offices\Sequence Container\Reminders\record"
          TopLeft="286.5,719.5" />
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Reminders.Paths[WebApiDestination Error Output]"
          TopLeft="313,557.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-222,60.0000000000001"
              Start="0,0"
              End="-222,52.5000000000001">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.3243243243244" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.3243243243244"
                    Point2="0,24.3243243243244"
                    Point3="-4,24.3243243243244" />
                  <mssgle:LineSegment
                    End="-218,24.3243243243244" />
                  <mssgle:CubicBezierSegment
                    Point1="-218,24.3243243243244"
                    Point2="-222,24.3243243243244"
                    Point3="-222,28.3243243243244" />
                  <mssgle:LineSegment
                    End="-222,52.5000000000001" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-182.8215625,29.3243243243244,143.643125,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Reminders.Paths[upsert]"
          TopLeft="561.666666666667,353.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-220.666666666667,60"
              Start="0,0"
              End="-220.666666666667,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.3701799485861" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.3701799485861"
                    Point2="0,24.3701799485861"
                    Point3="-4,24.3701799485861" />
                  <mssgle:LineSegment
                    End="-216.666666666667,24.3701799485861" />
                  <mssgle:CubicBezierSegment
                    Point1="-216.666666666667,24.3701799485861"
                    Point2="-220.666666666667,24.3701799485861"
                    Point3="-220.666666666667,28.3701799485861" />
                  <mssgle:LineSegment
                    End="-220.666666666667,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-124.900872395834,29.3701799485861,29.135078125,11.033203125"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Reminders.Paths[Sort Output1]"
          TopLeft="406,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="140.666666666667,60"
              Start="0,0"
              End="140.666666666667,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.7654723127036" />
                  <mssgle:CubicBezierSegment
                    Point1="0,31.7654723127036"
                    Point2="0,35.7654723127036"
                    Point3="4,35.7654723127036" />
                  <mssgle:LineSegment
                    End="136.666666666667,35.7654723127036" />
                  <mssgle:CubicBezierSegment
                    Point1="136.666666666667,35.7654723127036"
                    Point2="140.666666666667,35.7654723127036"
                    Point3="140.666666666667,39.7654723127036" />
                  <mssgle:LineSegment
                    End="140.666666666667,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Reminders.Paths[Sort Output]"
          TopLeft="586,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="39.3333333333334,60"
              Start="0,0"
              End="39.3333333333334,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.7654723127036" />
                  <mssgle:CubicBezierSegment
                    Point1="0,31.7654723127036"
                    Point2="0,35.7654723127036"
                    Point3="4,35.7654723127036" />
                  <mssgle:LineSegment
                    End="35.3333333333334,35.7654723127036" />
                  <mssgle:CubicBezierSegment
                    Point1="35.3333333333334,35.7654723127036"
                    Point2="39.3333333333334,35.7654723127036"
                    Point3="39.3333333333334,39.7654723127036" />
                  <mssgle:LineSegment
                    End="39.3333333333334,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Reminders.Paths[Response Output]"
          TopLeft="369,557.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-28,60"
              Start="0,0"
              End="-28,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.3243243243243" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.3243243243243"
                    Point2="0,24.3243243243243"
                    Point3="-4,24.3243243243243" />
                  <mssgle:LineSegment
                    End="-24,24.3243243243243" />
                  <mssgle:CubicBezierSegment
                    Point1="-24,24.3243243243243"
                    Point2="-28,24.3243243243243"
                    Point3="-28,28.3243243243243" />
                  <mssgle:LineSegment
                    End="-28,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Reminders.Paths[OLE DB Source Output]"
          TopLeft="597.5,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-11.5,60"
              Start="0,0"
              End="-11.5,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26" />
                  <mssgle:CubicBezierSegment
                    Point1="0,26"
                    Point2="0,30"
                    Point3="-4,30" />
                  <mssgle:LineSegment
                    End="-7.5,30" />
                  <mssgle:CubicBezierSegment
                    Point1="-7.5,30"
                    Point2="-11.5,30"
                    Point3="-11.5,34" />
                  <mssgle:LineSegment
                    End="-11.5,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Reminders.Paths[Merge Join Output]"
          TopLeft="586,251.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Reminders.Paths[JsonSourceOutput]"
          TopLeft="369.5,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="36.5,60"
              Start="0,0"
              End="36.5,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26" />
                  <mssgle:CubicBezierSegment
                    Point1="0,26"
                    Point2="0,30"
                    Point3="4,30" />
                  <mssgle:LineSegment
                    End="32.5,30" />
                  <mssgle:CubicBezierSegment
                    Point1="32.5,30"
                    Point2="36.5,30"
                    Point3="36.5,34" />
                  <mssgle:LineSegment
                    End="36.5,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Reminders.Paths[JsonParserTransformOutput1]"
          TopLeft="341,659.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Reminders.Paths[JsonParserTransformOutput]"
          TopLeft="341,761.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Reminders.Paths[JsonGeneratorTransformOutput]"
          TopLeft="341,455.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Reminders.Paths[ignore]"
          TopLeft="610.333333333333,353.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-24.3333333333334,60"
              Start="0,0"
              End="-24.3333333333334,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.3701799485861" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.3701799485861"
                    Point2="0,24.3701799485861"
                    Point3="-4,24.3701799485861" />
                  <mssgle:LineSegment
                    End="-20.3333333333334,24.3701799485861" />
                  <mssgle:CubicBezierSegment
                    Point1="-20.3333333333334,24.3701799485861"
                    Point2="-24.3333333333334,24.3701799485861"
                    Point3="-24.3333333333334,28.3701799485861" />
                  <mssgle:LineSegment
                    End="-24.3333333333334,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-26.5716080729167,29.3701799485861,28.8098828125,11.384765625"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Reminders.Paths[Derived Column Output]"
          TopLeft="341,863.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="10,60"
              Start="0,0"
              End="10,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26" />
                  <mssgle:CubicBezierSegment
                    Point1="0,26"
                    Point2="0,30"
                    Point3="4,30" />
                  <mssgle:LineSegment
                    End="6,30" />
                  <mssgle:CubicBezierSegment
                    Point1="6,30"
                    Point2="10,30"
                    Point3="10,34" />
                  <mssgle:LineSegment
                    End="10,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>