<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="10/26/2018 4:42:07 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="79000ITD10"
  DTS:CreatorName="SPICERHAART\1901434"
  DTS:DTSID="{EB9C5FC8-BE14-4B3E-82E5-2D284C697DBC}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:FailParentOnFailure="True"
  DTS:LastModifiedProductVersion="15.0.1301.433"
  DTS:LocaleID="2057"
  DTS:ObjectName="EntitySync"
  DTS:PackageType="5"
  DTS:ProtectionLevel="2"
  DTS:VersionBuild="1056"
  DTS:VersionGUID="{B9041E12-D627-4AAD-91E0-C316137A0E02}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[colsqlbi01v.Entities]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{25A5CE9C-414E-4A08-B0A0-2C37CC6AB94E}"
      DTS:ObjectName="colsqlbi01v.Entities">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=colsqlbi01v;User ID=wh_user;Initial Catalog=Entities;Provider=SQLNCLI11.1;Auto Translate=False;">
          <EncryptedData
            Type="http://www.w3.org/2001/04/xmlenc#Element"
            Salt="Eab43XWHgA=="
            IV="ng54kkV7MY0=" xmlns="http://www.w3.org/2001/04/xmlenc#">
            <EncryptionMethod
              Algorithm="http://www.w3.org/2001/04/xmlenc#tripledes-cbc" />
            <CipherData>
              <CipherValue>ng54kkV7MY1M3XxcdSB/GUNfhZqr09pBtCPm5yguD+qvb4cVT4TSaC5Ajx8BJTw3wty8BjmlZzC4oVVX281Qh6nBAZ0fyITiEMKqigSCgXXv6Ed3IeGNj/p38hedOF69GVVMvYGbyY3PtwIpng7VFRpmmuawiBO9</CipherValue>
            </CipherData>
          </EncryptedData>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[colsqlbi01v.Entities1]"
      DTS:CreationName="ADO.NET:SQL"
      DTS:DTSID="{1CDD1504-6BFE-4E29-889A-AFA15992480A}"
      DTS:ObjectName="colsqlbi01v.Entities1">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=colsqlbi01v;Initial Catalog=Entities;Integrated Security=True;Application Name=SSIS-WHSync-{1CDD1504-6BFE-4E29-889A-AFA15992480A}colsqlbi01v.Entities1;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[COLSQLBI01v.Metrics]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{79B92D8A-4C26-48F6-A38B-82302064AB4B}"
      DTS:ObjectName="COLSQLBI01v.Metrics">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=COLSQLBI01v;Initial Catalog=Metrics;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[COLSQLBI01V.RosieWorkBench]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{25C50B51-4998-482E-91C0-28BF02EEBE26}"
      DTS:ObjectName="COLSQLBI01V.RosieWorkBench">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=COLSQLBI01V;Initial Catalog=RosieWorkBench;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[HTTP 1]"
      DTS:CreationName="ZS-HTTP"
      DTS:DTSID="{8E9391D9-15C7-4E65-8402-3DC737C1A052}"
      DTS:ObjectName="HTTP 1">
      <DTS:ObjectData>
        <ConnectionManager
          ConnectionString="Url=https://api.rexsoftware.com/rex.php;CredentialType=Notset;UserName=;Timeout=100000;SoapWssPasswordType=Notset;JwtCustomClaims=;RetainCookies=False;UseProxy=False;ProxyUrl=;UseProxyCreds=False;ProxyUserName=;DoNotUseDefaultProxy=False;UseClientCertificate=False;CertificatePath=;CertificateStorageType=CurrentUser;CertificateStoreName=My;CertificateThumbprint=;RetryMode=None;RetryCountMax=3;RetryWaitTimeMs=2000;RetryMultiplyWaitTime=False;RetryMessageList=;RetryStatusCodeList=;AuthScheme=Bearer;TokenAuthHeader=;TokenUrl=;TokenRequestData=;TokenRequestHeaders=Accept:*/*||Cache-Control:no-cache;TokenRequestMethod=;TokenRequestContentType=Default;TokenRequestIsMultiPart=False;TokenResponseContentFilter=;TokenResponseValueExtractMode=Body;TokenResponseCookie=;TokenResponseHeader=;TokenResponseContentType=None;TokenExpirationTimeInSeconds=3600;EnableRequestHashing=False;HashAlgorithm=sha256;HashSignatureFormat=;HashSignatureFormatForLogin=;ExtraHeaders=;ExtraHeadersForLogin=;HashTimestampFormat=;HashTreatSecretAsNonBase64=False;HashSignWithApiKey=False;RetainSameConnection=False" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[RexSync.xml]"
      DTS:CreationName="FILE"
      DTS:DTSID="{8034D4A8-2FDC-46EC-B494-422098E6D63E}"
      DTS:ObjectName="RexSync.xml">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="C:\SSISVariables\RexSync.xml" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[SMTP]"
      DTS:CreationName="ZS-SMTP"
      DTS:DTSID="{68A63183-C3F1-4188-986B-3CF67E088719}"
      DTS:ObjectName="SMTP">
      <DTS:ObjectData>
        <ConnectionManager
          ConnectionString="SmtpServer=outlookcol;UserName=;Port=25;EnableSsl=False;Timeout=10000;EnableAnonymousAuth=False" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[SMTP Connection Manager]"
      DTS:CreationName="SMTP"
      DTS:DTSID="{1A83B06B-3388-4D9A-B2AE-02A232EA1229}"
      DTS:ObjectName="SMTP Connection Manager">
      <DTS:ObjectData>
        <SmtpConnectionManager
          ConnectionString="SmtpServer=outlookcol;UseWindowsAuthentication=False;EnableSsl=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:PackageParameters>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{2E2C0D89-621F-4D04-A0B8-F8FBD563937D}"
      DTS:ObjectName="Partition">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">ALL</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="3"
      DTS:DTSID="{C636B9BB-0930-468E-8044-D894A11A06E7}"
      DTS:ObjectName="WindowDays">
      <DTS:Property
        DTS:DataType="3"
        DTS:Name="ParameterValue">2</DTS:Property>
    </DTS:PackageParameter>
  </DTS:PackageParameters>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{C493BD5D-D432-484F-A2EB-86C63E40EDF9}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="CalendarObject">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F0B0525A-993C-444A-93B5-702603F005C3}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="CustomfieldsPlaceHolder">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{7C688DC5-2447-4D91-B814-4C52D252F0BC}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="FailedDMACount">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{AC9115EA-57E3-4172-8450-C87FCA353CE3}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="KCode">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{9D6853CA-38A1-4E03-9E4A-889BBE6EA21E}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="KPIActionedAccountUserID">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{1EA15D42-3C6C-4DB2-A407-9C99414FF9B2}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="KPIList">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A55F34E4-0C90-4D3C-B9A0-1B20F771C4B9}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="KPITime">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{2759F243-B788-4EFE-989E-978A537964F4}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="KPIUserID">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A72069A3-6CAC-41C3-A03A-6F06E1181E81}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="KPIValue">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{34EB07A3-4535-4314-90CF-244EAFF90CE4}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="ListingServiceID">
      <DTS:VariableValue
        DTS:DataType="3">1</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{11BCF964-C73D-4F5A-AAE9-71D5617A7383}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="MetricID">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{FA4A5542-C671-4CFB-B9AA-A0C16EB9E635}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="MetricObject">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{8ECC771D-E8E1-4C57-8164-CB81C282B857}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="MetricOrigin">
      <DTS:VariableValue
        DTS:DataType="3">1</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{42A7ADC5-9285-4A5F-A577-60D020784622}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="MetricTotal">
      <DTS:VariableValue
        DTS:DataType="3">-1</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{EC59CC8D-2FB6-49D4-8DCE-1D529DE4C80C}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="MetricUpserted">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{EF4B8F49-B082-44F6-9350-130BD6406A62}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="OfficeList">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{203FC168-422D-4328-AE2E-FF418A561A44}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Office_id">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{E1636027-B852-4EB2-A459-2212435F1264}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="OneweekAgoUnixDateStamp">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F6F04990-DC9E-43EC-B9A7-80C4E918EED5}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="PackageErrorEmail">
      <DTS:VariableValue
        DTS:DataType="8">keith.mills@spicerhaart.co.uk</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{E38FA4F4-0E3D-40F5-BC14-7D988E34275E}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="PackageExecutionInfo">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{3A9AD68B-FAE1-47D8-B058-8C4253896BD4}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="PackagePassword">
      <DTS:VariableValue
        DTS:DataType="8">P4ssword</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{C23EC600-9BBB-4F8A-8D07-7B7CBD1CE87D}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="PackageStartDate">
      <DTS:VariableValue
        DTS:DataType="7">1/1/2020</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{75430169-B20E-420B-945A-08963219F85E}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="PackageStartForNextRun">
      <DTS:VariableValue
        DTS:DataType="7">1/1/2020</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{FF2E3928-C8FC-487E-B93B-A2F2DAED25A6}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="PackageUser">
      <DTS:VariableValue
        DTS:DataType="8">1897047@spicerhaart.com</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{6D90CB5D-4910-4827-932C-7470C3BFEB80}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="ProcessingStart">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{3164D74E-D811-4077-8CAF-90CA9D115953}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="PropertyCategory">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{56653002-C6D5-4D80-B41A-BE06F5FD2DAE}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Record_id">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A862C289-7C8A-4D16-B2A0-03A4E0A89FE2}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ResponseAuth">
      <DTS:VariableValue
        DTS:DataType="8">{ 	"result": { 		"metric": "K006", 		"time": 1574501564, 		"recorded_at": 1574501564, 		"value": 1, 		"recorded_by_user": { 			"id": "25918", 			"_name": "Shannay Jarvis", 			"_first_name": "Shannay", 			"_last_name": "Jarvis", 			"_email_address": "Shannay.Jarvis@haart.co.uk" 		}, 		"labels": [ 			{ 				"label": "service_name", 				"value": "CalendarEvents" 			}, 			{ 				"label": "record_id", 				"value": "32f81cc2-0dd4-11ea-b8c1-5adf458c5229" 			} 		], 		"user_attributions": [ 			{ 				"percentage": 100, 				"user": { 					"id": "25918", 					"_name": "Shannay Jarvis", 					"_first_name": "Shannay", 					"_last_name": "Jarvis", 					"_email_address": "Shannay.Jarvis@haart.co.uk" 				} 			} 		], 		"_id": 698037 	}, 	"error": null }</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{85784138-1436-46CB-98BF-681C4DF33BC4}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ResponseAuthCode">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{40C273CD-83FA-4737-B171-10500D92D346}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="RexAccountID">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{AADA72D3-66F1-452B-8439-F1D4CD966C7C}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="RexAPIWebURL">
      <DTS:VariableValue
        DTS:DataType="8">https://api.uk.rexsoftware.com/rex.php</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B5F64958-D913-48EA-B062-0D010DE3FBC1}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="RexAPIWebURLv1">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{C70D2636-0997-4794-AA2E-CEA2AB61E0AC}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="RexToken">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{FC6EA1E0-B298-4E3B-9E3F-D8E452382531}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="RosieUserID">
      <DTS:VariableValue
        DTS:DataType="3">18382</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{9D34047A-BC5F-413C-8489-AB885C103231}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ServiceName">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{CE18E9EF-AF3C-4E86-88E4-165DB10B8733}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="DATEDIFF(&quot;S&quot;, (DT_DBTIMESTAMP)&quot;1970-01-01&quot;, (DT_DBTIMESTAMP)&quot;2018-09-01&quot;)"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="system_ctime">
      <DTS:VariableValue
        DTS:DataType="3">1535760000</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{197CCC06-13E0-4611-81A8-B3EA09F765F0}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="UpsertedCount">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{9BF2139F-9027-46DD-8C0A-69540C9B8CE3}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="Variable">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Get Office List"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{E6175548-4DF4-458C-A561-CD126DE4E3EE}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Get Office List"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{25A5CE9C-414E-4A08-B0A0-2C37CC6AB94E}"
          SQLTask:BypassPrepare="False"
          SQLTask:SqlStatementSource="SELECT [office_id],  [account_id], &#xA;       [org_id], &#xA;       [office_name]&#xA;FROM [RosieWorkBench].[dbo].[vwAccount]&#xA;WHERE   migrated = 1 and [office_name] not like '%test%'&#xA;order by [office_name]&#xA;"
          SQLTask:ResultType="ResultSetType_Rowset" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ResultBinding
            SQLTask:ResultName="0"
            SQLTask:DtsVariableName="User::OfficeList" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="0"
            SQLTask:DtsVariableName="$Package::Partition"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="129"
            SQLTask:ParameterSize="-1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="1"
            SQLTask:DtsVariableName="$Package::Partition"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="129"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Iterate Offices"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:Description="Foreach Loop Container"
      DTS:DTSID="{23E82F26-B283-4608-9883-F17CEA284DD9}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="-1"
      DTS:ObjectName="Iterate Offices">
      <DTS:ForEachEnumerator
        DTS:CreationName="Microsoft.ForEachADOEnumerator"
        DTS:DTSID="{18752712-BACF-4CB0-9B94-76C2064BAB2A}"
        DTS:ObjectName="{A7CC5C17-CF0B-4BFC-AD97-DC80FF43AE29}">
        <DTS:ObjectData>
          <FEEADO
            EnumType="EnumerateRowsInFirstTable"
            VarName="User::OfficeList" />
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Iterate Offices\Sequence Container"
          DTS:CreationName="STOCK:SEQUENCE"
          DTS:Description="Sequence Container"
          DTS:DTSID="{2EC792A5-43E4-43B6-9371-F7FFAD6157CB}"
          DTS:ExecutableType="STOCK:SEQUENCE"
          DTS:LocaleID="-1"
          DTS:ObjectName="Sequence Container">
          <DTS:Variables />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Iterate Offices\Sequence Container\Appraisals"
              DTS:CreationName="Microsoft.Pipeline"
              DTS:Description="Data Flow Task"
              DTS:DTSID="{c89ba50c-8634-43f7-82fa-0de5273f9d84}"
              DTS:ExecutableType="Microsoft.Pipeline"
              DTS:LocaleID="-1"
              DTS:ObjectName="Appraisals"
              DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:ObjectData>
                <pipeline
                  version="1">
                  <components>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Appraisals\Add accountid and origin"
                      componentClassID="Microsoft.DerivedColumn"
                      contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                      name="Add accountid and origin"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Appraisals\Add accountid and origin.Inputs[Derived Column Input]"
                          description="Input to the Derived Column Transformation"
                          name="Derived Column Input">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Appraisals\Add accountid and origin.Outputs[Derived Column Output]"
                          description="Default Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          name="Derived Column Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Appraisals\Add accountid and origin.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\Add accountid and origin.Outputs[Derived Column Output].Columns[AccountId]"
                              dataType="i4"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Iterate Offices\Sequence Container\Appraisals\Add accountid and origin.Outputs[Derived Column Output].Columns[AccountId]"
                              name="AccountId"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">@[User::RexAccountID]</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">@[User::RexAccountID]</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\Add accountid and origin.Outputs[Derived Column Output].Columns[Origin]"
                              dataType="i4"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Iterate Offices\Sequence Container\Appraisals\Add accountid and origin.Outputs[Derived Column Output].Columns[Origin]"
                              name="Origin"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">2</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">2</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Appraisals\Add accountid and origin.Outputs[Derived Column Error Output]"
                          description="Error Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Derived Column Error Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Appraisals\Add accountid and origin.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\Add accountid and origin.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Appraisals\Add accountid and origin.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\Add accountid and origin.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Appraisals\Add accountid and origin.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Appraisals\API Sort"
                      componentClassID="Microsoft.Sort"
                      contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
                      name="API Sort"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                          name="EliminateDuplicates">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the maximum number of threads to use for sorting."
                          expressionType="Notify"
                          name="MaximumThreads">-1</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Appraisals\API Sort.Inputs[Sort Input]"
                          name="Sort Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\API Sort.Inputs[Sort Input].Columns[etag]"
                              cachedDataType="wstr"
                              cachedLength="68"
                              cachedName="etag"
                              lineageId="Package\Iterate Offices\Sequence Container\Appraisals\Search Appraisals.Outputs[JsonSourceOutput].Columns[etag]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\API Sort.Inputs[Sort Input].Columns[id]"
                              cachedDataType="i4"
                              cachedName="id"
                              lineageId="Package\Iterate Offices\Sequence Container\Appraisals\Search Appraisals.Outputs[JsonSourceOutput].Columns[id]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">1</property>
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Appraisals\API Sort.Outputs[Sort Output]"
                          isSorted="true"
                          name="Sort Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\API Sort.Outputs[Sort Output].Columns[etag]"
                              dataType="wstr"
                              length="68"
                              lineageId="Package\Iterate Offices\Sequence Container\Appraisals\API Sort.Outputs[Sort Output].Columns[etag]"
                              name="etag">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Iterate Offices\Sequence Container\Appraisals\Search Appraisals.Outputs[JsonSourceOutput].Columns[etag]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\API Sort.Outputs[Sort Output].Columns[id]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Appraisals\API Sort.Outputs[Sort Output].Columns[id]"
                              name="id"
                              sortKeyPosition="1">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Iterate Offices\Sequence Container\Appraisals\Search Appraisals.Outputs[JsonSourceOutput].Columns[id]}</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Appraisals\Existing Appraisals from SQL"
                      componentClassID="Microsoft.OLEDBSource"
                      contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                      description="OLE DB Source"
                      name="Existing Appraisals from SQL"
                      usesDispositions="true"
                      version="7">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">0</property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the database object used to open a rowset."
                          name="OpenRowset">[dbo].[vwContacts]</property>
                        <property
                          dataType="System.String"
                          description="Specifies the variable that contains the name of the database object used to open a rowset."
                          name="OpenRowsetVariable"></property>
                        <property
                          dataType="System.String"
                          description="The SQL command to be executed."
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">SELECT [Id], 
       [etag] as etaglead, 
       [AccountId]
FROM [Entities].[dbo].Appraisals with (NOLOCK)
WHERE [AccountId] = ?</property>
                        <property
                          dataType="System.String"
                          description="The variable that contains the SQL command to be executed."
                          name="SqlCommandVariable"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Boolean"
                          description="Forces the use of the DefaultCodePage property value when describing character data."
                          name="AlwaysUseDefaultCodePage">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the mode used to access the database."
                          name="AccessMode"
                          typeConverter="AccessMode">2</property>
                        <property
                          dataType="System.String"
                          description="The mappings between the parameters in the SQL command and variables."
                          name="ParameterMapping">"Parameter0:Input",{40C273CD-83FA-4737-B171-10500D92D346};</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Iterate Offices\Sequence Container\Appraisals\Existing Appraisals from SQL.Connections[OleDbConnection]"
                          connectionManagerID="Package.ConnectionManagers[colsqlbi01v.Entities]"
                          connectionManagerRefId="Package.ConnectionManagers[colsqlbi01v.Entities]"
                          description="The OLE DB runtime connection used to access the database."
                          name="OleDbConnection" />
                      </connections>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Appraisals\Existing Appraisals from SQL.Outputs[OLE DB Source Output]"
                          name="OLE DB Source Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\Existing Appraisals from SQL.Outputs[OLE DB Source Output].Columns[Id]"
                              dataType="i4"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Appraisals\Existing Appraisals from SQL.Outputs[OLE DB Source Output].ExternalColumns[Id]"
                              lineageId="Package\Iterate Offices\Sequence Container\Appraisals\Existing Appraisals from SQL.Outputs[OLE DB Source Output].Columns[Id]"
                              name="Id"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\Existing Appraisals from SQL.Outputs[OLE DB Source Output].Columns[AccountId]"
                              dataType="i2"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Appraisals\Existing Appraisals from SQL.Outputs[OLE DB Source Output].ExternalColumns[AccountId]"
                              lineageId="Package\Iterate Offices\Sequence Container\Appraisals\Existing Appraisals from SQL.Outputs[OLE DB Source Output].Columns[AccountId]"
                              name="AccountId"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\Existing Appraisals from SQL.Outputs[OLE DB Source Output].Columns[etaglead]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Appraisals\Existing Appraisals from SQL.Outputs[OLE DB Source Output].ExternalColumns[etaglead]"
                              length="250"
                              lineageId="Package\Iterate Offices\Sequence Container\Appraisals\Existing Appraisals from SQL.Outputs[OLE DB Source Output].Columns[etaglead]"
                              name="etaglead"
                              truncationRowDisposition="FailComponent" />
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\Existing Appraisals from SQL.Outputs[OLE DB Source Output].ExternalColumns[Id]"
                              dataType="i4"
                              name="Id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\Existing Appraisals from SQL.Outputs[OLE DB Source Output].ExternalColumns[AccountId]"
                              dataType="i2"
                              name="AccountId" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\Existing Appraisals from SQL.Outputs[OLE DB Source Output].ExternalColumns[etaglead]"
                              dataType="wstr"
                              length="250"
                              name="etaglead" />
                          </externalMetadataColumns>
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Appraisals\Existing Appraisals from SQL.Outputs[OLE DB Source Error Output]"
                          isErrorOut="true"
                          name="OLE DB Source Error Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\Existing Appraisals from SQL.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Appraisals\Existing Appraisals from SQL.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\Existing Appraisals from SQL.Outputs[OLE DB Source Error Output].Columns[etaglead]"
                              dataType="wstr"
                              length="250"
                              lineageId="Package\Iterate Offices\Sequence Container\Appraisals\Existing Appraisals from SQL.Outputs[OLE DB Source Error Output].Columns[etaglead]"
                              name="etaglead" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\Existing Appraisals from SQL.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Appraisals\Existing Appraisals from SQL.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\Existing Appraisals from SQL.Outputs[OLE DB Source Error Output].Columns[Id]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Appraisals\Existing Appraisals from SQL.Outputs[OLE DB Source Error Output].Columns[Id]"
                              name="Id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\Existing Appraisals from SQL.Outputs[OLE DB Source Error Output].Columns[AccountId]"
                              dataType="i2"
                              lineageId="Package\Iterate Offices\Sequence Container\Appraisals\Existing Appraisals from SQL.Outputs[OLE DB Source Error Output].Columns[AccountId]"
                              name="AccountId" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Appraisals\Insert or Ignore"
                      componentClassID="Microsoft.ConditionalSplit"
                      contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
                      name="Insert or Ignore"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Appraisals\Insert or Ignore.Inputs[Conditional Split Input]"
                          description="Input to the Conditional Split Transformation"
                          name="Conditional Split Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\Insert or Ignore.Inputs[Conditional Split Input].Columns[etag]"
                              cachedDataType="wstr"
                              cachedLength="68"
                              cachedName="etag"
                              lineageId="Package\Iterate Offices\Sequence Container\Appraisals\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etag]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\Insert or Ignore.Inputs[Conditional Split Input].Columns[etaglead]"
                              cachedDataType="wstr"
                              cachedLength="250"
                              cachedName="etaglead"
                              lineageId="Package\Iterate Offices\Sequence Container\Appraisals\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etaglead]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Appraisals\Insert or Ignore.Outputs[upsert]"
                          description="Output 1 of the Conditional Split Transformation"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          exclusionGroup="1"
                          name="upsert"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Appraisals\Insert or Ignore.Inputs[Conditional Split Input]"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                              name="Expression">[ISNULL](#{Package\Iterate Offices\Sequence Container\Appraisals\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etaglead]}) || (#{Package\Iterate Offices\Sequence Container\Appraisals\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etaglead]}) != #{Package\Iterate Offices\Sequence Container\Appraisals\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etag]}</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the friendly version of the expression. This expression version uses column names."
                              expressionType="Notify"
                              name="FriendlyExpression">ISNULL(etaglead) || (etaglead) != etag</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                              name="EvaluationOrder">0</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Appraisals\Insert or Ignore.Outputs[ignore]"
                          description="Output 2 of the Conditional Split Transformation"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          exclusionGroup="1"
                          name="ignore"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Appraisals\Insert or Ignore.Inputs[Conditional Split Input]"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                              name="Expression">![ISNULL](#{Package\Iterate Offices\Sequence Container\Appraisals\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etaglead]})</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the friendly version of the expression. This expression version uses column names."
                              expressionType="Notify"
                              name="FriendlyExpression">!ISNULL(etaglead)</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                              name="EvaluationOrder">1</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Appraisals\Insert or Ignore.Outputs[Conditional Split Default Output]"
                          description="Default Output of the Conditional Split Transformation"
                          exclusionGroup="1"
                          name="Conditional Split Default Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Appraisals\Insert or Ignore.Inputs[Conditional Split Input]">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              name="IsDefaultOut">true</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Appraisals\Insert or Ignore.Outputs[Conditional Split Error Output]"
                          description="Error Output of the Conditional Split Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Conditional Split Error Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Appraisals\Insert or Ignore.Inputs[Conditional Split Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\Insert or Ignore.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Appraisals\Insert or Ignore.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\Insert or Ignore.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Appraisals\Insert or Ignore.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Appraisals\JSON Generator Transform"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="JSON Generator Transform; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="The JSON generator transform can be used to create JSON document from single or multiple inputs. You can create simple or nested JSON document."
                      name="JSON Generator Transform"
                      version="5">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.Int32"
                          description="Determines JSON format and output mode (e.g. one JSON for all input rows or one JSON for each input row)"
                          expressionType="Notify"
                          name="OutputMode"
                          typeConverter="ZappySys.PowerPack.Transform.JsonGeneratorTransform.JsonOutputMode">2</property>
                        <property
                          dataType="System.String"
                          description="Defines shape of output JSON string"
                          expressionType="Notify"
                          name="LayoutInfo">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;settings ver="3"&gt;
  &lt;dataset id="ds_id729" main="True" inputid="729" readfrominput="True"&gt;&lt;/dataset&gt;
  &lt;map name="method" value="Appraisals::read" datatype="String" /&gt;
  &lt;map name="args"&gt;
    &lt;map src="id" name="id" datatype="String" /&gt;
  &lt;/map&gt;
  &lt;map name="strip_response_prefixes" value="true" datatype="Bool" /&gt;
  &lt;map name="token" value="{{User::RexToken}}" /&gt;
&lt;/settings&gt;</property>
                        <property
                          dataType="System.Boolean"
                          description="Do not output attribute if value is NULL. By default null attribute is output as &quot;MyColname&quot; : null "
                          expressionType="Notify"
                          name="DoNotOutputNullAttribute">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indent JSON Text generated by this transform (Pretty Print)"
                          expressionType="Notify"
                          name="IndentOutput">false</property>
                        <property
                          dataType="System.String"
                          description="Default output format for datetime columns"
                          expressionType="Notify"
                          name="DateTimeFormat">yyyy-MM-dd HH:mm:ss</property>
                        <property
                          dataType="System.String"
                          description="Culture setting for this task. This option is useful to control output format for certain data types (e.g. number, decimal) based on regional settings. In USA dot is used for decimal indicator but in Germany it may be comma. Leave this blank if you want to use system default settings."
                          expressionType="Notify"
                          name="Culture"></property>
                        <property
                          dataType="System.Boolean"
                          description="Document Header/Footer text come from upstream column rather than direct string"
                          expressionType="Notify"
                          name="UseColumnForHeaderFooter">false</property>
                        <property
                          dataType="System.String"
                          description="Header text for document (Added before each document in the output)"
                          expressionType="Notify"
                          name="DocumentHeader"></property>
                        <property
                          dataType="System.String"
                          description="Footer text for document (Added after each document in the output)"
                          expressionType="Notify"
                          name="DocumentFooter"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies how many rows to include in each batch (Array records for single dataset array mode). 0=Include all in one batch. This setting is only valid for Mode=[Single Dataset Array]"
                          expressionType="Notify"
                          name="ArrayBatchSize">0</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.JsonGeneratorTransform</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to True if you dont want to output empty nodes of sub document (e.g nested property). This option is only applicable if you enabled DoNotOutputNullProperty. If all child peoprties are NULL for parent node then by default output contains empty nodes (e.g. CountryInfo: { CityInfo: { } } for Json --OR-- &lt;CountryInfo&gt;&lt;CityInfo /&gt;&lt;/CountryInfo&gt; for Xml). You can enable this option to avoid such empty nodes from the output."
                          expressionType="Notify"
                          name="DoNotOutputEmptyNestedAttribute">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to True if you dont want to output empty array nodes when no record found for that array (e.g. &quot;Orders&quot;: [ ] for JSON --OR-- &lt;Orders&gt;&lt;/Orders&gt; for Xml). You can enable this option to avoid such empty nodes from the output."
                          expressionType="Notify"
                          name="DoNotOutputEmptyArrayAttribute">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies encoding for data. If you set CharacterSet property then Encoing is ignored."
                          expressionType="Notify"
                          name="Encoding"
                          typeConverter="ZappySys.Common.EncodingType">2</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Appraisals\JSON Generator Transform.Inputs[JsonInput1]"
                          name="JsonInput1">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Id for attached dataset with input. Use JSON Layout Editor to see attached dataset"
                              expressionType="Notify"
                              name="DatasetInputId">729</property>
                          </properties>
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\JSON Generator Transform.Inputs[JsonInput1].Columns[etag]"
                              cachedDataType="wstr"
                              cachedLength="68"
                              cachedName="etag"
                              lineageId="Package\Iterate Offices\Sequence Container\Appraisals\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etag]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\JSON Generator Transform.Inputs[JsonInput1].Columns[id]"
                              cachedDataType="i4"
                              cachedName="id"
                              cachedSortKeyPosition="1"
                              lineageId="Package\Iterate Offices\Sequence Container\Appraisals\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[id]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\JSON Generator Transform.Inputs[JsonInput1].Columns[etaglead]"
                              cachedDataType="wstr"
                              cachedLength="250"
                              cachedName="etaglead"
                              lineageId="Package\Iterate Offices\Sequence Container\Appraisals\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etaglead]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Appraisals\JSON Generator Transform.Inputs[JsonInput2]"
                          name="JsonInput2">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Appraisals\JSON Generator Transform.Outputs[JsonGeneratorTransformOutput]"
                          errorOrTruncationOperation="Error"
                          name="JsonGeneratorTransformOutput">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\JSON Generator Transform.Outputs[JsonGeneratorTransformOutput].Columns[ZS_JSON_OUT]"
                              dataType="nText"
                              description="This output column contains generated JSON string from JSON generator Transform"
                              lineageId="Package\Iterate Offices\Sequence Container\Appraisals\JSON Generator Transform.Outputs[JsonGeneratorTransformOutput].Columns[ZS_JSON_OUT]"
                              name="ZS_JSON_OUT" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Appraisals\JSON Parser Add id back in"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="JSON Parser Transform; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="Parse incoming JSON String into columns. You can also parse and transform single JSON record into multiple rows by filtering data based on JSON Path (e.g. $.Customer.Orders[*])"
                      name="JSON Parser Add id back in"
                      usesDispositions="true"
                      version="2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for any numeric data types"
                          expressionType="Notify"
                          name="TreatBlankNumberAsNull">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for bool data types"
                          expressionType="Notify"
                          name="TreatBlankBoolAsNull">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for any date/time data types"
                          expressionType="Notify"
                          name="TreatBlankDateAsNull">true</property>
                        <property
                          dataType="System.String"
                          description="Sample JSON data used to parse output columns."
                          expressionType="Notify"
                          name="SampleData"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">{"method":"CustomFields::readFieldValuesAndRecord","args":{"service_name":"Leads","service_object_id":"28569","return_custom_fields_keyed_by":"field_name"},"strip_response_prefixes":1,"token":"b57c-0be2-04f4-8d65-fd25-a099-6087-07de-1780-19443"}</property>
                        <property
                          dataType="System.Boolean"
                          description="Include all upstream parent columns into output except the one you selected to parse. By default only parsed columns from Input document is included in the output. If you wish to include all other upstream columns in the output too then check this option."
                          expressionType="Notify"
                          name="OutputAllUpstreamColumns">true</property>
                        <property
                          dataType="System.Int32"
                          description="Defines how to handle empty input. By default NULL or Empty input is skipped from parsing."
                          expressionType="Notify"
                          name="EmptyInputProcessingMode"
                          typeConverter="ZappySys.Common.Data.EmptyInputProcessingMode">0</property>
                        <property
                          dataType="System.String"
                          description="Defines how to handle empty input. By default NULL or Empty input is skipped from parsing."
                          expressionType="Notify"
                          name="TreatEmptyInputAs">{ }</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum JSON records to fetch. Set this value to 0 for all records"
                          expressionType="Notify"
                          name="MaxRows">0</property>
                        <property
                          dataType="System.String"
                          description="Enter expression here to filter data.(Example:  $.Users[*].UserName ) This will fetch User names from users records"
                          expressionType="Notify"
                          name="Filter"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.Boolean"
                          description="Use this option to include parent properties (Non array) in the output along with Filtered Rows"
                          expressionType="Notify"
                          name="IncludeParentColumns">true</property>
                        <property
                          dataType="System.Boolean"
                          description="By default child and parent information is not included in the output if children not found for specified expression. For example if you want to extract all orders from all customers nodes then you can type $.Customers[*].Orders[*]. This will fetch all orders from all customers. By default customers records without orders wont be included in the output. If you want to include those customers where orders not found then check this option (Output null information for order attributes). This behavior is similar to LEFT OUTER JOIN in SQL (Left side is parent, right side is child). This option is ***resource intensive*** so only check if you really care about this behavior."
                          expressionType="Notify"
                          name="IncludeParentColumnsWhenChildMissing">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to true if you want to output parent columns which are array. By default any parent column which is an array is not included in output. See also FilterForParentColumnsWithArrayType property if you set this property"
                          expressionType="Notify"
                          name="IncludeParentColumnsWithArrayType">false</property>
                        <property
                          dataType="System.String"
                          description="Filter expression to extract value form parent"
                          expressionType="Notify"
                          name="FilterForParentColumnsWithArrayType"></property>
                        <property
                          dataType="System.String"
                          description="Prefix for parent column name. This option is only valid if you have set IncludeParentColumns=True"
                          expressionType="Notify"
                          name="ParentColumnPrefix">P_</property>
                        <property
                          dataType="System.Boolean"
                          description="Throw error if property name specified in filter expression is missing. By default it will ignore any missing property errors."
                          expressionType="Notify"
                          name="ThrowErrorIfPropertyMissing">false</property>
                        <property
                          dataType="System.Int32"
                          description="This property how many nested levels should be scanned to fetch various properties. 0=Scan all child levels."
                          expressionType="Notify"
                          name="MaxLevelsToScan">0</property>
                        <property
                          dataType="System.String"
                          description="List comma separated property names from JSON document which you want to exclude from output. Specify parent property name to exclude all child nodes."
                          expressionType="Notify"
                          name="ExcludedProperties"></property>
                        <property
                          dataType="System.String"
                          description="Property level separator used in generated property name (separator for outer properties - Above selected filter node). Use this if default separator is producing duplicate property name which is conflicting with existing name."
                          expressionType="Notify"
                          name="LevelSeparator">_</property>
                        <property
                          dataType="System.Boolean"
                          description="Enables deep array flattening for selected filtered hierarchy. When you turn on this property it will flatten each property of each array item and expose as column (e.g. If you have Filter set as $.customers[*] and for each customer you have an array of Addresses then you may see output columns like Addresses.1.City, Addresses.1.State, Addresses.2.City, Addresses.2.State .... Addresses.N.City, Addresses.N.State). You can control how many array items you want to flatten by setting MaxArrayItemsToFlatten property."
                          expressionType="Notify"
                          name="EnableArrayFlattening">false</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum number of array items to flatten. inner array flattening. Adjust this property to control how many columns being generated. This option is ignored if you set EnableArrayFlattening=false"
                          expressionType="Notify"
                          name="MaxArrayItemsToFlatten">10</property>
                        <property
                          dataType="System.String"
                          description="Specifies how custom date formatted strings are parsed when reading JSON."
                          expressionType="Notify"
                          name="DateFormatString"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies how date formatted strings, e.g. Date(1198908717056) and 2012-03-21T05:40Z, are parsed when reading JSON."
                          expressionType="Notify"
                          name="DateParseHandling"
                          typeConverter="ZappySys.Common.DateParseHandling">1</property>
                        <property
                          dataType="System.Boolean"
                          description="Output as raw JSON document rather than parsing individual fields. This option is helpful if you have documents stored in a file and you want to pass them downstream as raw JSON string rather than parsing into columns."
                          expressionType="Notify"
                          name="OutputRawDocument">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indent JSON output so its easy to read."
                          expressionType="Notify"
                          name="IndentOutput">false</property>
                        <property
                          dataType="System.Boolean"
                          description="When this property is true then Column is converted to Row. Pivoted names will appear under  Pivot_Name column and values will appear under Pivot_Value field."
                          expressionType="Notify"
                          name="EnablePivot">false</property>
                        <property
                          dataType="System.Int32"
                          description="Array Transformation you want to apply. Useful for case when you have 2-Dimensional arrays with rows/columns in separate arrays."
                          expressionType="Notify"
                          name="ArrayTransformationType"
                          typeConverter="ZappySys.Json.ArrayTransformType">0</property>
                        <property
                          dataType="System.String"
                          description="Filter expression to use to extract column names for array transformation."
                          expressionType="Notify"
                          name="ArrayTransColumnNameFilter"></property>
                        <property
                          dataType="System.String"
                          description="Filter expression for row values (Not applicable for simple array transformation)."
                          expressionType="Notify"
                          name="ArrayTransRowValueFilter"></property>
                        <property
                          dataType="System.Boolean"
                          description="When you have 2D array but don't have column list specified in a separate array then use this option (e.g. { arr: [[10,11],[21,22]] } )."
                          expressionType="Notify"
                          name="ArrayTransEnableCustomColumns">false</property>
                        <property
                          dataType="System.String"
                          description="When you have 2D array but don't have column list specified in a separate array then use specify column names here. Use comma separated list (e.g col1,col2,col3 ). Column name Order must match value order."
                          expressionType="Notify"
                          name="ArrayTransCustomColumns"></property>
                        <property
                          dataType="System.Int32"
                          description="Metadata scan mode controls how data type and length is determined. By default few records scanned to determine datatype/length. Changing ScanMode affects length/datatype accuracy."
                          expressionType="Notify"
                          name="MetaDataScanMode"
                          typeConverter="ZappySys.Common.Data.MetaDataScanMode">4</property>
                        <property
                          dataType="System.Int32"
                          description="Length for all string column. This option is only valid for MetaDataScanMode=Custom"
                          expressionType="Notify"
                          name="MetaDataCustomLength">1000</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.JsonParserTransform</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Appraisals\JSON Parser Add id back in.Inputs[JsonParserTransformInput]"
                          errorRowDisposition="FailComponent"
                          name="JsonParserTransformInput"
                          truncationRowDisposition="FailComponent">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\JSON Parser Add id back in.Inputs[JsonParserTransformInput].Columns[ZS_JSON_OUT]"
                              cachedDataType="nText"
                              cachedName="ZS_JSON_OUT"
                              lineageId="Package\Iterate Offices\Sequence Container\Appraisals\JSON Generator Transform.Outputs[JsonGeneratorTransformOutput].Columns[ZS_JSON_OUT]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\JSON Parser Add id back in.Inputs[JsonParserTransformInput].Columns[ResponseText]"
                              cachedDataType="nText"
                              cachedName="ResponseText"
                              lineageId="Package\Iterate Offices\Sequence Container\Appraisals\Web API Destination.Outputs[Response Output].Columns[ResponseText]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Appraisals\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[ResponseText]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\JSON Parser Add id back in.Inputs[JsonParserTransformInput].Columns[StatusCode]"
                              cachedDataType="i4"
                              cachedName="StatusCode"
                              lineageId="Package\Iterate Offices\Sequence Container\Appraisals\Web API Destination.Outputs[Response Output].Columns[StatusCode]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Appraisals\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[StatusCode]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True" />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Appraisals\JSON Parser Add id back in.Outputs[JsonParserTransformOutput]"
                          errorOrTruncationOperation="Error"
                          errorRowDisposition="FailComponent"
                          name="JsonParserTransformOutput"
                          truncationRowDisposition="FailComponent">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[StatusCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Appraisals\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[StatusCode]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Appraisals\JSON Parser Add id back in.Inputs[JsonParserTransformInput].Columns[StatusCode]"
                              name="StatusCode" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[ResponseText]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\Appraisals\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[ResponseText]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Appraisals\JSON Parser Add id back in.Inputs[JsonParserTransformInput].Columns[ResponseText]"
                              name="ResponseText" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[args.service_object_id]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Appraisals\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].ExternalColumns[args.service_object_id]"
                              length="20"
                              lineageId="Package\Iterate Offices\Sequence Container\Appraisals\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[args.service_object_id]"
                              name="args.service_object_id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[method]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Appraisals\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].ExternalColumns[method]"
                              length="152"
                              lineageId="Package\Iterate Offices\Sequence Container\Appraisals\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[method]"
                              name="method" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[args.service_name]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Appraisals\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].ExternalColumns[args.service_name]"
                              length="20"
                              lineageId="Package\Iterate Offices\Sequence Container\Appraisals\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[args.service_name]"
                              name="args.service_name" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[args.return_custom_fields_keyed_by]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Appraisals\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].ExternalColumns[args.return_custom_fields_keyed_by]"
                              length="40"
                              lineageId="Package\Iterate Offices\Sequence Container\Appraisals\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[args.return_custom_fields_keyed_by]"
                              name="args.return_custom_fields_keyed_by" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[strip_response_prefixes]"
                              dataType="i8"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Appraisals\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].ExternalColumns[strip_response_prefixes]"
                              lineageId="Package\Iterate Offices\Sequence Container\Appraisals\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[strip_response_prefixes]"
                              name="strip_response_prefixes" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[token]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Appraisals\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].ExternalColumns[token]"
                              length="200"
                              lineageId="Package\Iterate Offices\Sequence Container\Appraisals\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[token]"
                              name="token" />
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].ExternalColumns[method]"
                              dataType="wstr"
                              length="152"
                              name="method" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].ExternalColumns[args.service_name]"
                              dataType="wstr"
                              length="20"
                              name="args.service_name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].ExternalColumns[args.service_object_id]"
                              dataType="wstr"
                              length="20"
                              name="args.service_object_id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].ExternalColumns[args.return_custom_fields_keyed_by]"
                              dataType="wstr"
                              length="40"
                              name="args.return_custom_fields_keyed_by" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].ExternalColumns[strip_response_prefixes]"
                              dataType="i8"
                              name="strip_response_prefixes" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].ExternalColumns[token]"
                              dataType="wstr"
                              length="200"
                              name="token" />
                          </externalMetadataColumns>
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Appraisals\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output]"
                          isErrorOut="true"
                          name="JsonParserTransform Error Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[StatusCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Appraisals\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[StatusCode]"
                              name="StatusCode" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[ResponseText]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\Appraisals\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[ResponseText]"
                              name="ResponseText" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[args.service_object_id]"
                              dataType="wstr"
                              length="20"
                              lineageId="Package\Iterate Offices\Sequence Container\Appraisals\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[args.service_object_id]"
                              name="args.service_object_id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[method]"
                              dataType="wstr"
                              length="152"
                              lineageId="Package\Iterate Offices\Sequence Container\Appraisals\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[method]"
                              name="method" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[args.service_name]"
                              dataType="wstr"
                              length="20"
                              lineageId="Package\Iterate Offices\Sequence Container\Appraisals\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[args.service_name]"
                              name="args.service_name" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[args.return_custom_fields_keyed_by]"
                              dataType="wstr"
                              length="40"
                              lineageId="Package\Iterate Offices\Sequence Container\Appraisals\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[args.return_custom_fields_keyed_by]"
                              name="args.return_custom_fields_keyed_by" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[strip_response_prefixes]"
                              dataType="i8"
                              lineageId="Package\Iterate Offices\Sequence Container\Appraisals\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[strip_response_prefixes]"
                              name="strip_response_prefixes" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[token]"
                              dataType="wstr"
                              length="200"
                              lineageId="Package\Iterate Offices\Sequence Container\Appraisals\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[token]"
                              name="token" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Appraisals\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Appraisals\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[ErrorColumnName]"
                              codePage="1252"
                              dataType="str"
                              length="128"
                              lineageId="Package\Iterate Offices\Sequence Container\Appraisals\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[ErrorColumnName]"
                              name="ErrorColumnName" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[ErrorMessage]"
                              dataType="wstr"
                              length="1024"
                              lineageId="Package\Iterate Offices\Sequence Container\Appraisals\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[ErrorMessage]"
                              name="ErrorMessage" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[ErrorRawData]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\Appraisals\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[ErrorRawData]"
                              name="ErrorRawData" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Appraisals\Merge Join To Find Those to Insert"
                      componentClassID="Microsoft.MergeJoin"
                      contactInfo="Merge Join;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Combine two sorted data flows into one using the FULL, LEFT, or INNER join. We recommend this transformation when data flows can be sorted at their sources."
                      name="Merge Join To Find Those to Insert"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of join to perform."
                          name="JoinType"
                          typeConverter="JoinType">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the number of columns in the ordering key."
                          name="NumKeyColumns">1</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the null values are treated as equal values."
                          name="TreatNullsAsEqual">true</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates the requested maximum buffers per input before blocking."
                          name="MaxBuffersPerInput">5</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Appraisals\Merge Join To Find Those to Insert.Inputs[Merge Join Left Input]"
                          hasSideEffects="true"
                          name="Merge Join Left Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\Merge Join To Find Those to Insert.Inputs[Merge Join Left Input].Columns[etag]"
                              cachedDataType="wstr"
                              cachedLength="68"
                              cachedName="etag"
                              lineageId="Package\Iterate Offices\Sequence Container\Appraisals\API Sort.Outputs[Sort Output].Columns[etag]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\Merge Join To Find Those to Insert.Inputs[Merge Join Left Input].Columns[id]"
                              cachedDataType="i4"
                              cachedName="id"
                              cachedSortKeyPosition="1"
                              lineageId="Package\Iterate Offices\Sequence Container\Appraisals\API Sort.Outputs[Sort Output].Columns[id]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Appraisals\Merge Join To Find Those to Insert.Inputs[Merge Join Right Input]"
                          hasSideEffects="true"
                          name="Merge Join Right Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\Merge Join To Find Those to Insert.Inputs[Merge Join Right Input].Columns[Id]"
                              cachedDataType="i4"
                              cachedName="Id"
                              cachedSortKeyPosition="1"
                              lineageId="Package\Iterate Offices\Sequence Container\Appraisals\SQL Sort.Outputs[Sort Output].Columns[Id]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\Merge Join To Find Those to Insert.Inputs[Merge Join Right Input].Columns[etaglead]"
                              cachedDataType="wstr"
                              cachedLength="250"
                              cachedName="etaglead"
                              lineageId="Package\Iterate Offices\Sequence Container\Appraisals\SQL Sort.Outputs[Sort Output].Columns[etaglead]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Appraisals\Merge Join To Find Those to Insert.Outputs[Merge Join Output]"
                          isSorted="true"
                          name="Merge Join Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etag]"
                              dataType="wstr"
                              length="68"
                              lineageId="Package\Iterate Offices\Sequence Container\Appraisals\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etag]"
                              name="etag">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Iterate Offices\Sequence Container\Appraisals\Merge Join To Find Those to Insert.Inputs[Merge Join Left Input].Columns[etag]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[id]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Appraisals\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[id]"
                              name="id"
                              sortKeyPosition="1">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Iterate Offices\Sequence Container\Appraisals\Merge Join To Find Those to Insert.Inputs[Merge Join Left Input].Columns[id]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etaglead]"
                              dataType="wstr"
                              length="250"
                              lineageId="Package\Iterate Offices\Sequence Container\Appraisals\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etaglead]"
                              name="etaglead">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Iterate Offices\Sequence Container\Appraisals\Merge Join To Find Those to Insert.Inputs[Merge Join Right Input].Columns[etaglead]}</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Appraisals\record"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="JSON Parser Transform; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="Parse incoming JSON String into columns. You can also parse and transform single JSON record into multiple rows by filtering data based on JSON Path (e.g. $.Customer.Orders[*])"
                      name="record"
                      usesDispositions="true"
                      version="2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for any numeric data types"
                          expressionType="Notify"
                          name="TreatBlankNumberAsNull">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for bool data types"
                          expressionType="Notify"
                          name="TreatBlankBoolAsNull">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for any date/time data types"
                          expressionType="Notify"
                          name="TreatBlankDateAsNull">true</property>
                        <property
                          dataType="System.String"
                          description="Sample JSON data used to parse output columns."
                          expressionType="Notify"
                          name="SampleData"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">{"result":{"system_ctime":1623157540,"system_modtime":1623157540,"appraisal_state":"active","archive_date":null,"appraisal_date":"2021-06-12","price_min":null,"price_max":null,"price_asking":null,"price_rent":null,"interest_level":"warm","etag":"508399-1623157540","system_modified_user":{"id":"19934","name":"Amy Freeman","first_name":"Amy","last_name":"Freeman","email_address":"AmyFreeman@bjbmail.com"},"system_created_user":{"id":"19934","name":"Amy Freeman","first_name":"Amy","last_name":"Freeman","email_address":"AmyFreeman@bjbmail.com"},"security_user_rights":["read","update","purge"],"property":{"system_search_key":"30 Cooke Way, Cannock WS12 4FW","adr_longitude":"-2.027518609642","adr_latitude":"52.71439095101","adr_unit_number":null,"adr_street_number":"30","adr_street_name":"Cooke Way","adr_state_or_region":null,"adr_locality":"Staffordshire","adr_suburb_or_town":"Cannock","adr_postcode":"WS12 4FW","adr_country":"uk","adr_estate_name":null,"adr_estate_stage":null,"system_owner_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"adr_building":null,"property_category":{"id":"residential","text":"Residential"},"property_image":null,"etag":"1181203-1623157543","id":"1181203"},"listing":null,"agent_1":{"id":"19933","text":"Andrew Wood"},"agent_2":null,"archive_reason":null,"archive_lost_agency":null,"id":508399},"error":null,"correlation":{"request_id":"1066832c-3f73-443c-936b-ce51ba22feb1","correlation_id":"1066832c-3f73-443c-936b-ce51ba22feb1","async_correlation_id":"1066832c-3f73-443c-936b-ce51ba22feb1"}}
</property>
                        <property
                          dataType="System.Boolean"
                          description="Include all upstream parent columns into output except the one you selected to parse. By default only parsed columns from Input document is included in the output. If you wish to include all other upstream columns in the output too then check this option."
                          expressionType="Notify"
                          name="OutputAllUpstreamColumns">true</property>
                        <property
                          dataType="System.Int32"
                          description="Defines how to handle empty input. By default NULL or Empty input is skipped from parsing."
                          expressionType="Notify"
                          name="EmptyInputProcessingMode"
                          typeConverter="ZappySys.Common.Data.EmptyInputProcessingMode">0</property>
                        <property
                          dataType="System.String"
                          description="Defines how to handle empty input. By default NULL or Empty input is skipped from parsing."
                          expressionType="Notify"
                          name="TreatEmptyInputAs">{ }</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum JSON records to fetch. Set this value to 0 for all records"
                          expressionType="Notify"
                          name="MaxRows">0</property>
                        <property
                          dataType="System.String"
                          description="Enter expression here to filter data.(Example:  $.Users[*].UserName ) This will fetch User names from users records"
                          expressionType="Notify"
                          name="Filter"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">$.result</property>
                        <property
                          dataType="System.Boolean"
                          description="Use this option to include parent properties (Non array) in the output along with Filtered Rows"
                          expressionType="Notify"
                          name="IncludeParentColumns">true</property>
                        <property
                          dataType="System.Boolean"
                          description="By default child and parent information is not included in the output if children not found for specified expression. For example if you want to extract all orders from all customers nodes then you can type $.Customers[*].Orders[*]. This will fetch all orders from all customers. By default customers records without orders wont be included in the output. If you want to include those customers where orders not found then check this option (Output null information for order attributes). This behavior is similar to LEFT OUTER JOIN in SQL (Left side is parent, right side is child). This option is ***resource intensive*** so only check if you really care about this behavior."
                          expressionType="Notify"
                          name="IncludeParentColumnsWhenChildMissing">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to true if you want to output parent columns which are array. By default any parent column which is an array is not included in output. See also FilterForParentColumnsWithArrayType property if you set this property"
                          expressionType="Notify"
                          name="IncludeParentColumnsWithArrayType">false</property>
                        <property
                          dataType="System.String"
                          description="Filter expression to extract value form parent"
                          expressionType="Notify"
                          name="FilterForParentColumnsWithArrayType"></property>
                        <property
                          dataType="System.String"
                          description="Prefix for parent column name. This option is only valid if you have set IncludeParentColumns=True"
                          expressionType="Notify"
                          name="ParentColumnPrefix">P_</property>
                        <property
                          dataType="System.Boolean"
                          description="Throw error if property name specified in filter expression is missing. By default it will ignore any missing property errors."
                          expressionType="Notify"
                          name="ThrowErrorIfPropertyMissing">false</property>
                        <property
                          dataType="System.Int32"
                          description="This property how many nested levels should be scanned to fetch various properties. 0=Scan all child levels."
                          expressionType="Notify"
                          name="MaxLevelsToScan">0</property>
                        <property
                          dataType="System.String"
                          description="List comma separated property names from JSON document which you want to exclude from output. Specify parent property name to exclude all child nodes."
                          expressionType="Notify"
                          name="ExcludedProperties"></property>
                        <property
                          dataType="System.String"
                          description="Property level separator used in generated property name (separator for outer properties - Above selected filter node). Use this if default separator is producing duplicate property name which is conflicting with existing name."
                          expressionType="Notify"
                          name="LevelSeparator">_</property>
                        <property
                          dataType="System.Boolean"
                          description="Enables deep array flattening for selected filtered hierarchy. When you turn on this property it will flatten each property of each array item and expose as column (e.g. If you have Filter set as $.customers[*] and for each customer you have an array of Addresses then you may see output columns like Addresses.1.City, Addresses.1.State, Addresses.2.City, Addresses.2.State .... Addresses.N.City, Addresses.N.State). You can control how many array items you want to flatten by setting MaxArrayItemsToFlatten property."
                          expressionType="Notify"
                          name="EnableArrayFlattening">false</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum number of array items to flatten. inner array flattening. Adjust this property to control how many columns being generated. This option is ignored if you set EnableArrayFlattening=false"
                          expressionType="Notify"
                          name="MaxArrayItemsToFlatten">10</property>
                        <property
                          dataType="System.String"
                          description="Specifies how custom date formatted strings are parsed when reading JSON."
                          expressionType="Notify"
                          name="DateFormatString"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies how date formatted strings, e.g. Date(1198908717056) and 2012-03-21T05:40Z, are parsed when reading JSON."
                          expressionType="Notify"
                          name="DateParseHandling"
                          typeConverter="ZappySys.Common.DateParseHandling">1</property>
                        <property
                          dataType="System.Boolean"
                          description="Output as raw JSON document rather than parsing individual fields. This option is helpful if you have documents stored in a file and you want to pass them downstream as raw JSON string rather than parsing into columns."
                          expressionType="Notify"
                          name="OutputRawDocument">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Indent JSON output so its easy to read."
                          expressionType="Notify"
                          name="IndentOutput">true</property>
                        <property
                          dataType="System.Boolean"
                          description="When this property is true then Column is converted to Row. Pivoted names will appear under  Pivot_Name column and values will appear under Pivot_Value field."
                          expressionType="Notify"
                          name="EnablePivot">false</property>
                        <property
                          dataType="System.Int32"
                          description="Array Transformation you want to apply. Useful for case when you have 2-Dimensional arrays with rows/columns in separate arrays."
                          expressionType="Notify"
                          name="ArrayTransformationType"
                          typeConverter="ZappySys.Json.ArrayTransformType">0</property>
                        <property
                          dataType="System.String"
                          description="Filter expression to use to extract column names for array transformation."
                          expressionType="Notify"
                          name="ArrayTransColumnNameFilter"></property>
                        <property
                          dataType="System.String"
                          description="Filter expression for row values (Not applicable for simple array transformation)."
                          expressionType="Notify"
                          name="ArrayTransRowValueFilter"></property>
                        <property
                          dataType="System.Boolean"
                          description="When you have 2D array but don't have column list specified in a separate array then use this option (e.g. { arr: [[10,11],[21,22]] } )."
                          expressionType="Notify"
                          name="ArrayTransEnableCustomColumns">false</property>
                        <property
                          dataType="System.String"
                          description="When you have 2D array but don't have column list specified in a separate array then use specify column names here. Use comma separated list (e.g col1,col2,col3 ). Column name Order must match value order."
                          expressionType="Notify"
                          name="ArrayTransCustomColumns"></property>
                        <property
                          dataType="System.Int32"
                          description="Metadata scan mode controls how data type and length is determined. By default few records scanned to determine datatype/length. Changing ScanMode affects length/datatype accuracy."
                          expressionType="Notify"
                          name="MetaDataScanMode"
                          typeConverter="ZappySys.Common.Data.MetaDataScanMode">4</property>
                        <property
                          dataType="System.Int32"
                          description="Length for all string column. This option is only valid for MetaDataScanMode=Custom"
                          expressionType="Notify"
                          name="MetaDataCustomLength">1000</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.JsonParserTransform</property>
                        <property
                          dataType="System.Boolean"
                          name="EnableBigNumberHandling">false</property>
                        <property
                          dataType="System.Int32"
                          name="Encoding">0</property>
                        <property
                          dataType="System.String"
                          name="CharacterSet"></property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Appraisals\record.Inputs[JsonParserTransformInput]"
                          errorRowDisposition="FailComponent"
                          name="JsonParserTransformInput"
                          truncationRowDisposition="FailComponent">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\record.Inputs[JsonParserTransformInput].Columns[ResponseText]"
                              cachedDataType="nText"
                              cachedName="ResponseText"
                              lineageId="Package\Iterate Offices\Sequence Container\Appraisals\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[ResponseText]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\record.Inputs[JsonParserTransformInput].Columns[StatusCode]"
                              cachedDataType="i4"
                              cachedName="StatusCode"
                              lineageId="Package\Iterate Offices\Sequence Container\Appraisals\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[StatusCode]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Appraisals\record.Outputs[JsonParserTransformOutput].Columns[StatusCode]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\record.Inputs[JsonParserTransformInput].Columns[args.service_object_id]"
                              cachedDataType="wstr"
                              cachedLength="20"
                              cachedName="args.service_object_id"
                              lineageId="Package\Iterate Offices\Sequence Container\Appraisals\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[args.service_object_id]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Appraisals\record.Outputs[JsonParserTransformOutput].Columns[args.service_object_id]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\record.Inputs[JsonParserTransformInput].Columns[method]"
                              cachedDataType="wstr"
                              cachedLength="152"
                              cachedName="method"
                              lineageId="Package\Iterate Offices\Sequence Container\Appraisals\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[method]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Appraisals\record.Outputs[JsonParserTransformOutput].Columns[method]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\record.Inputs[JsonParserTransformInput].Columns[args.service_name]"
                              cachedDataType="wstr"
                              cachedLength="20"
                              cachedName="args.service_name"
                              lineageId="Package\Iterate Offices\Sequence Container\Appraisals\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[args.service_name]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Appraisals\record.Outputs[JsonParserTransformOutput].Columns[args.service_name]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\record.Inputs[JsonParserTransformInput].Columns[args.return_custom_fields_keyed_by]"
                              cachedDataType="wstr"
                              cachedLength="40"
                              cachedName="args.return_custom_fields_keyed_by"
                              lineageId="Package\Iterate Offices\Sequence Container\Appraisals\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[args.return_custom_fields_keyed_by]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Appraisals\record.Outputs[JsonParserTransformOutput].Columns[args.return_custom_fields_keyed_by]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\record.Inputs[JsonParserTransformInput].Columns[strip_response_prefixes]"
                              cachedDataType="i8"
                              cachedName="strip_response_prefixes"
                              lineageId="Package\Iterate Offices\Sequence Container\Appraisals\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[strip_response_prefixes]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Appraisals\record.Outputs[JsonParserTransformOutput].Columns[strip_response_prefixes]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\record.Inputs[JsonParserTransformInput].Columns[token]"
                              cachedDataType="wstr"
                              cachedLength="200"
                              cachedName="token"
                              lineageId="Package\Iterate Offices\Sequence Container\Appraisals\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[token]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Appraisals\record.Outputs[JsonParserTransformOutput].Columns[token]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True" />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Appraisals\record.Outputs[JsonParserTransformOutput]"
                          errorOrTruncationOperation="Error"
                          errorRowDisposition="FailComponent"
                          name="JsonParserTransformOutput"
                          truncationRowDisposition="FailComponent">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\record.Outputs[JsonParserTransformOutput].Columns[token]"
                              dataType="wstr"
                              length="200"
                              lineageId="Package\Iterate Offices\Sequence Container\Appraisals\record.Outputs[JsonParserTransformOutput].Columns[token]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Appraisals\record.Inputs[JsonParserTransformInput].Columns[token]"
                              name="token" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\record.Outputs[JsonParserTransformOutput].Columns[strip_response_prefixes]"
                              dataType="i8"
                              lineageId="Package\Iterate Offices\Sequence Container\Appraisals\record.Outputs[JsonParserTransformOutput].Columns[strip_response_prefixes]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Appraisals\record.Inputs[JsonParserTransformInput].Columns[strip_response_prefixes]"
                              name="strip_response_prefixes" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\record.Outputs[JsonParserTransformOutput].Columns[args.return_custom_fields_keyed_by]"
                              dataType="wstr"
                              length="40"
                              lineageId="Package\Iterate Offices\Sequence Container\Appraisals\record.Outputs[JsonParserTransformOutput].Columns[args.return_custom_fields_keyed_by]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Appraisals\record.Inputs[JsonParserTransformInput].Columns[args.return_custom_fields_keyed_by]"
                              name="args.return_custom_fields_keyed_by" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\record.Outputs[JsonParserTransformOutput].Columns[args.service_name]"
                              dataType="wstr"
                              length="20"
                              lineageId="Package\Iterate Offices\Sequence Container\Appraisals\record.Outputs[JsonParserTransformOutput].Columns[args.service_name]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Appraisals\record.Inputs[JsonParserTransformInput].Columns[args.service_name]"
                              name="args.service_name" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\record.Outputs[JsonParserTransformOutput].Columns[method]"
                              dataType="wstr"
                              length="152"
                              lineageId="Package\Iterate Offices\Sequence Container\Appraisals\record.Outputs[JsonParserTransformOutput].Columns[method]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Appraisals\record.Inputs[JsonParserTransformInput].Columns[method]"
                              name="method" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\record.Outputs[JsonParserTransformOutput].Columns[args.service_object_id]"
                              dataType="wstr"
                              length="20"
                              lineageId="Package\Iterate Offices\Sequence Container\Appraisals\record.Outputs[JsonParserTransformOutput].Columns[args.service_object_id]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Appraisals\record.Inputs[JsonParserTransformInput].Columns[args.service_object_id]"
                              name="args.service_object_id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\record.Outputs[JsonParserTransformOutput].Columns[StatusCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Appraisals\record.Outputs[JsonParserTransformOutput].Columns[StatusCode]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Appraisals\record.Inputs[JsonParserTransformInput].Columns[StatusCode]"
                              name="StatusCode" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\record.Outputs[JsonParserTransformOutput].Columns[__DOCUMENT__]"
                              dataType="nText"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Appraisals\record.Outputs[JsonParserTransformOutput].ExternalColumns[__DOCUMENT__]"
                              lineageId="Package\Iterate Offices\Sequence Container\Appraisals\record.Outputs[JsonParserTransformOutput].Columns[__DOCUMENT__]"
                              name="__DOCUMENT__" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\record.Outputs[JsonParserTransformOutput].Columns[P_error]"
                              dataType="nText"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Appraisals\record.Outputs[JsonParserTransformOutput].ExternalColumns[P_error]"
                              lineageId="Package\Iterate Offices\Sequence Container\Appraisals\record.Outputs[JsonParserTransformOutput].Columns[P_error]"
                              name="P_error" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\record.Outputs[JsonParserTransformOutput].Columns[P_correlation_request_id]"
                              dataType="nText"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Appraisals\record.Outputs[JsonParserTransformOutput].ExternalColumns[P_correlation_request_id]"
                              lineageId="Package\Iterate Offices\Sequence Container\Appraisals\record.Outputs[JsonParserTransformOutput].Columns[P_correlation_request_id]"
                              name="P_correlation_request_id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\record.Outputs[JsonParserTransformOutput].Columns[P_correlation_correlation_id]"
                              dataType="nText"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Appraisals\record.Outputs[JsonParserTransformOutput].ExternalColumns[P_correlation_correlation_id]"
                              lineageId="Package\Iterate Offices\Sequence Container\Appraisals\record.Outputs[JsonParserTransformOutput].Columns[P_correlation_correlation_id]"
                              name="P_correlation_correlation_id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\record.Outputs[JsonParserTransformOutput].Columns[P_correlation_async_correlation_id]"
                              dataType="nText"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Appraisals\record.Outputs[JsonParserTransformOutput].ExternalColumns[P_correlation_async_correlation_id]"
                              lineageId="Package\Iterate Offices\Sequence Container\Appraisals\record.Outputs[JsonParserTransformOutput].Columns[P_correlation_async_correlation_id]"
                              name="P_correlation_async_correlation_id" />
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\record.Outputs[JsonParserTransformOutput].ExternalColumns[P_error]"
                              dataType="nText"
                              name="P_error" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\record.Outputs[JsonParserTransformOutput].ExternalColumns[P_correlation_request_id]"
                              dataType="nText"
                              name="P_correlation_request_id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\record.Outputs[JsonParserTransformOutput].ExternalColumns[P_correlation_correlation_id]"
                              dataType="nText"
                              name="P_correlation_correlation_id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\record.Outputs[JsonParserTransformOutput].ExternalColumns[P_correlation_async_correlation_id]"
                              dataType="nText"
                              name="P_correlation_async_correlation_id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\record.Outputs[JsonParserTransformOutput].ExternalColumns[__DOCUMENT__]"
                              dataType="nText"
                              name="__DOCUMENT__" />
                          </externalMetadataColumns>
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Appraisals\record.Outputs[JsonParserTransform Error Output]"
                          isErrorOut="true"
                          name="JsonParserTransform Error Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\record.Outputs[JsonParserTransform Error Output].Columns[token]"
                              dataType="wstr"
                              length="200"
                              lineageId="Package\Iterate Offices\Sequence Container\Appraisals\record.Outputs[JsonParserTransform Error Output].Columns[token]"
                              name="token" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\record.Outputs[JsonParserTransform Error Output].Columns[strip_response_prefixes]"
                              dataType="i8"
                              lineageId="Package\Iterate Offices\Sequence Container\Appraisals\record.Outputs[JsonParserTransform Error Output].Columns[strip_response_prefixes]"
                              name="strip_response_prefixes" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\record.Outputs[JsonParserTransform Error Output].Columns[args.return_custom_fields_keyed_by]"
                              dataType="wstr"
                              length="40"
                              lineageId="Package\Iterate Offices\Sequence Container\Appraisals\record.Outputs[JsonParserTransform Error Output].Columns[args.return_custom_fields_keyed_by]"
                              name="args.return_custom_fields_keyed_by" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\record.Outputs[JsonParserTransform Error Output].Columns[args.service_name]"
                              dataType="wstr"
                              length="20"
                              lineageId="Package\Iterate Offices\Sequence Container\Appraisals\record.Outputs[JsonParserTransform Error Output].Columns[args.service_name]"
                              name="args.service_name" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\record.Outputs[JsonParserTransform Error Output].Columns[method]"
                              dataType="wstr"
                              length="152"
                              lineageId="Package\Iterate Offices\Sequence Container\Appraisals\record.Outputs[JsonParserTransform Error Output].Columns[method]"
                              name="method" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\record.Outputs[JsonParserTransform Error Output].Columns[args.service_object_id]"
                              dataType="wstr"
                              length="20"
                              lineageId="Package\Iterate Offices\Sequence Container\Appraisals\record.Outputs[JsonParserTransform Error Output].Columns[args.service_object_id]"
                              name="args.service_object_id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\record.Outputs[JsonParserTransform Error Output].Columns[StatusCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Appraisals\record.Outputs[JsonParserTransform Error Output].Columns[StatusCode]"
                              name="StatusCode" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\record.Outputs[JsonParserTransform Error Output].Columns[__DOCUMENT__]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\Appraisals\record.Outputs[JsonParserTransform Error Output].Columns[__DOCUMENT__]"
                              name="__DOCUMENT__" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\record.Outputs[JsonParserTransform Error Output].Columns[P_error]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\Appraisals\record.Outputs[JsonParserTransform Error Output].Columns[P_error]"
                              name="P_error" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\record.Outputs[JsonParserTransform Error Output].Columns[P_correlation_request_id]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\Appraisals\record.Outputs[JsonParserTransform Error Output].Columns[P_correlation_request_id]"
                              name="P_correlation_request_id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\record.Outputs[JsonParserTransform Error Output].Columns[P_correlation_correlation_id]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\Appraisals\record.Outputs[JsonParserTransform Error Output].Columns[P_correlation_correlation_id]"
                              name="P_correlation_correlation_id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\record.Outputs[JsonParserTransform Error Output].Columns[P_correlation_async_correlation_id]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\Appraisals\record.Outputs[JsonParserTransform Error Output].Columns[P_correlation_async_correlation_id]"
                              name="P_correlation_async_correlation_id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\record.Outputs[JsonParserTransform Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Appraisals\record.Outputs[JsonParserTransform Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\record.Outputs[JsonParserTransform Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Appraisals\record.Outputs[JsonParserTransform Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\record.Outputs[JsonParserTransform Error Output].Columns[ErrorColumnName]"
                              codePage="1252"
                              dataType="str"
                              length="128"
                              lineageId="Package\Iterate Offices\Sequence Container\Appraisals\record.Outputs[JsonParserTransform Error Output].Columns[ErrorColumnName]"
                              name="ErrorColumnName" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\record.Outputs[JsonParserTransform Error Output].Columns[ErrorMessage]"
                              dataType="wstr"
                              length="1024"
                              lineageId="Package\Iterate Offices\Sequence Container\Appraisals\record.Outputs[JsonParserTransform Error Output].Columns[ErrorMessage]"
                              name="ErrorMessage" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\record.Outputs[JsonParserTransform Error Output].Columns[ErrorRawData]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\Appraisals\record.Outputs[JsonParserTransform Error Output].Columns[ErrorRawData]"
                              name="ErrorRawData" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Appraisals\Search Appraisals"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="JSON Source (REST API or File); ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="The JSON source is used to read data from JSON files, RESTful Web Service or direct JSON String."
                      name="Search Appraisals"
                      usesDispositions="true"
                      version="33">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for any numeric data types"
                          expressionType="Notify"
                          name="TreatBlankNumberAsNull">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for bool data types"
                          expressionType="Notify"
                          name="TreatBlankBoolAsNull">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for any date/time data types"
                          expressionType="Notify"
                          name="TreatBlankDateAsNull">true</property>
                        <property
                          dataType="System.Int32"
                          description="Defines how to read the JSON file or direct string"
                          expressionType="Notify"
                          name="AccessMode"
                          typeConverter="ZappySys.Common.Ssis.FileValueAccessMode">3</property>
                        <property
                          dataType="System.String"
                          description="Defines how to read the JSON file or direct string"
                          expressionType="Notify"
                          name="DirectValue"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.String"
                          description="Variable name which holds JSON string"
                          expressionType="Notify"
                          name="ValueVariable"
                          typeConverter="ZappySys.PowerPack.Converters.VariableEditor,ZappySys.PowerPack130.UI,Version=1.0.0.0,Culture=neutral,PublicKeyToken=1903265a93eae502"></property>
                        <property
                          dataType="System.String"
                          description="Variable name which holds data file path or url"
                          expressionType="Notify"
                          name="PathVariable"
                          typeConverter="ZappySys.PowerPack.Converters.VariableEditor,ZappySys.PowerPack130.UI,Version=1.0.0.0,Culture=neutral,PublicKeyToken=1903265a93eae502">User::RexAPIWebURL</property>
                        <property
                          dataType="System.String"
                          description="JSON file file path (e.g. c:\data\myfile.json) or pattern to process multiple files (e.g. c:\data\*.json)"
                          expressionType="Notify"
                          name="DirectPath"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">https://api.uk.rexsoftware.com/rex.php</property>
                        <property
                          dataType="System.Boolean"
                          description="Include files from sub folders too."
                          expressionType="Notify"
                          name="Recursive">false</property>
                        <property
                          dataType="System.String"
                          description="Set this if you want to set custom Http headers. You may use variable anywhere in the header value using syntax {{User::YourVarName}}. Syntax of Header key value pair is : &amp;lt;request&amp;gt;&amp;lt;header&amp;gt;&amp;lt;name&amp;gt;x-myheader-1&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;AAA&amp;lt;/value&amp;gt;&amp;lt;/header&amp;gt; &amp;lt;header&amp;gt;&amp;lt;name&amp;gt;x-myheader-2&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;BBB&amp;lt;/value&amp;gt;&amp;lt;/header&amp;gt;&amp;lt;/request&amp;gt;"
                          expressionType="Notify"
                          name="HttpHeaders">&lt;request&gt;&lt;header&gt;&lt;name&gt;Accept&lt;/name&gt;&lt;value&gt;*/*&lt;/value&gt;&lt;/header&gt;&lt;header&gt;&lt;name&gt;Cache-Control&lt;/name&gt;&lt;value&gt;no-cache&lt;/value&gt;&lt;/header&gt;&lt;header&gt;&lt;name&gt;X-App-Identifier&lt;/name&gt;&lt;value&gt;client:spicerhaart:{{System::PackageName}}:{{System::TaskName}}&lt;/value&gt;&lt;/header&gt;&lt;/request&gt;</property>
                        <property
                          dataType="System.String"
                          description="User defined data you wish to send along with your HTTP Request (e.g. Upload file data, Form POST data). Usually you have to set content-type of your data but if you select RequestMethod=POST then system will automatically set content-type=application/x-www-form-urlencoded."
                          expressionType="Notify"
                          name="HttpRequestData">{
"method":"Appraisals::search",
"args":{
	"criteria": 
	[
		
	],
	"result_format":"etags",
	"limit":50000,
	"offset": &lt;%page%&gt;
	 },
"strip_response_prefixes": true,
"token": "{{User::RexToken}}"
}</property>
                        <property
                          dataType="System.String"
                          description="Http Web Request Method (e.g. POST, GET, PUT, LIST, DELETE...). Refer your API documentation if you are not sure which method you have to use."
                          expressionType="Notify"
                          name="HttpRequestMethod">POST</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies content type for data you wish to POST. If you select Default option then system default content type will be used (i.e. application/x-www-form-urlencoded). If you specify Content-Type header along with this option then header value takes precedence."
                          expressionType="Notify"
                          name="HttpRequestContentType"
                          typeConverter="ZappySys.Common.Web.HttpRequestContentType">2</property>
                        <property
                          dataType="System.Int32"
                          description="Data format coming from HTTP Response. This is useful for example when you have OData service and you want to automatically consume all pages of data using odata.netUrl. Setting JsonFormat=Odata will automatically do it for you. This setting is only applicable if JSON is coming from HTTP WebRequest."
                          expressionType="Notify"
                          name="JsonFormat"
                          typeConverter="ZappySys.Json.JsonFormat">1</property>
                        <property
                          dataType="System.Boolean"
                          description="Enable custom proxy settings (If this is not set then system default proxy will be used. To disable proxy totally uncheck this option and check DoNotUseDefaultProxy option if available)"
                          expressionType="Notify"
                          name="UseProxy">false</property>
                        <property
                          dataType="System.String"
                          description="Web URL of Proxy server (including port  if necessary). [e.g. http://myproxyserver:8080/]"
                          expressionType="Notify"
                          name="ProxyUrl"></property>
                        <property
                          dataType="System.Boolean"
                          description="Enable passing userid and password to proxy server"
                          expressionType="Notify"
                          name="UseProxyCreds">false</property>
                        <property
                          dataType="System.String"
                          description="Proxy username"
                          expressionType="Notify"
                          name="ProxyUserName"></property>
                        <property
                          dataType="System.String"
                          description="Proxy password"
                          expressionType="Notify"
                          name="ProxyPassword"></property>
                        <property
                          dataType="System.String"
                          description="If Service response support pagination using some sort of next url attribute then specify which attribute name in JSON Response string which holds next url. If no attribute found or its null then component will stop fetching next resultset. Example: $.pagingInfo.nextUrl"
                          expressionType="Notify"
                          name="NextUrlAttribute"></property>
                        <property
                          dataType="System.String"
                          description="If Service response support pagination using some sort of prev/next url attribute then specify which previous link attribute name from JSON Response string which holds previous url."
                          expressionType="Notify"
                          name="PrevUrlAttribute"></property>
                        <property
                          dataType="System.String"
                          description="Specifies value for NextUrlAttribute or StopIndicatorAttribute which indicates last page to stop pagination. If you have specified StopIndicatorAttribute then you can use Regular expression rather than static value to indicate last page. To use regular expression value of this property must start with regex= prefix. Example : regex=FALSE|N  (assuming you set StopIndicatorAttribute to something like $.hasMore)"
                          expressionType="Notify"
                          name="NextUrlStopIndicator"></property>
                        <property
                          dataType="System.String"
                          description="Attribute name or expression for attribute which can be used as stop indicator (e.g. hasmore --or-- $.pagination.hasmore). If this value is blank then NextUrlAttribute is used"
                          expressionType="Notify"
                          name="StopIndicatorAttribute"></property>
                        <property
                          dataType="System.String"
                          description="If you want to include certain text (or parameters) at the end of Next url then specify this attribute (e.g. &amp;format=json). Another common usecase of this property is to supply pagination token to next Page URL. You can also use &lt;%nextlink%&gt; or  &lt;%nextlink_encoded%&gt; placeholder (e.g. &amp;cursor=&lt;%nextlink_encoded%&gt; )"
                          expressionType="Notify"
                          name="NextUrlSuffix"></property>
                        <property
                          dataType="System.Int32"
                          description="This property indicates total number of milliseconds you want to wait before sending next request. This option allows you to adjust how many API calls can be made within certain timeframe. If your API Service has no limit then set this option to zero"
                          expressionType="Notify"
                          name="NextUrlWait">0</property>
                        <property
                          dataType="System.Boolean"
                          description="If this option is true then component will continue without exception on 404 error (Url not found). This allows you to consume data gracefully."
                          expressionType="Notify"
                          name="ContinueOnUrlNotFoundError">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Continue when any type of exception occurs during http request"
                          expressionType="Notify"
                          name="ContineOnAnyError">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Continue on error when specified substring found in response"
                          expressionType="Notify"
                          name="ContineOnErrorForMessage">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Continue on error when specified status code returned from web server"
                          expressionType="Notify"
                          name="ContineOnErrorForStatusCode">false</property>
                        <property
                          dataType="System.Boolean"
                          description="When error occurs no data is returned. Use this option to get content eventhough error occurs. When this option is checked you can't use [continue on error when specific string found in response] option"
                          expressionType="Notify"
                          name="ConsumeResponseOnError">false</property>
                        <property
                          dataType="System.Int32"
                          description="Status code to match when error occurs and ContineOnErrorForStatusCode option is true. If Response status code matches to this code then task continues to run"
                          expressionType="Notify"
                          name="ErrorStatusCodeToMatch">404</property>
                        <property
                          dataType="System.String"
                          description="Error substring to match when error occurs and ContineOnErrorForMessage option is true. If Response status code matches to this code then task continues to run"
                          expressionType="Notify"
                          name="ErrorSubstringToMatch"></property>
                        <property
                          dataType="System.String"
                          description="Cookie Container can be used to maintain state between multiple web requests. Example: You can login to site like wordpress and then extract any private page content by simply passing authentication cookies using this variable."
                          expressionType="Notify"
                          name="CookieContainerVariable"></property>
                        <property
                          dataType="System.Int32"
                          description="Http request Timeout in seconds. Set this to 0 if you want to use system default value (i.e. 100 seconds)"
                          expressionType="Notify"
                          name="RequestTimeout">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies which security protocol is supported for HTTPS communication. Using this option you can enable legacy protocol or enforce to use latest version of security protocol (Note: TLS 1.2 is only supported in SSIS 2014 or Higher)."
                          expressionType="Notify"
                          name="SecurityProtocol"
                          typeConverter="ZappySys.PowerPack.Common.HttpsSecurityProtocolType">0</property>
                        <property
                          dataType="System.Boolean"
                          description="Enable support for gzip or deflate compression. When you check this option compressed response automatically de-compressed saving bandwidth. This option is only valid if web server supports compressed response stream. Check your API documentation for more information."
                          expressionType="Notify"
                          name="EnableCompressionSupport">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Ignore SSL certificate related errors. Example: if you getting SSL/TLS errors because of certificate expired or certificate is not from trusted authority or certificate is self-signed. By checking this option you will not get SSL/TLS error."
                          expressionType="Notify"
                          name="IgnoreCertificateErrors">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Allow unsecure ciphers/suites and curves for SSLS/TLS communication. Use this option to communicate with web servers which needs legacy / unsecured ciphers support. This option is only trigged when you change default SSL/TLS Version on advanced settings tab."
                          expressionType="Notify"
                          name="AllowUnsecureSuite">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Use connection to pass credentials for authentication (e.g. Use UserID/Password or Use OAuth Protocol for token based approach)"
                          expressionType="Notify"
                          name="UseConnection">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specified how you want to loop through multiple pages returned by REST API."
                          expressionType="Notify"
                          name="PagingMode"
                          typeConverter="ZappySys.Common.RestApiPagingMode">3</property>
                        <property
                          dataType="System.Boolean"
                          description="If you wish to pass extracted pagination token or current page number in the body of next request then set this option to true. You can use [$pagetoken$] and [$pagetoken$] placeholders anywhere in the Body where you wish to insert extracted Page token. You must set encoded token you can use &lt;%nextlink_encoded%&gt; inside SuffixForNextUrl Property. If you dont use SuffixForNextUrl then raw nextLink or Token will be inserted inside the body. If you dont specify [$pagetoken$] placeholder in the body then NextPage Token will be appended at the end. NextPage Token is extracted by filter expression specified using property NextUrlSuffix"
                          expressionType="Notify"
                          name="EnablePageTokenForBody">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this to true if you wish to specify different URL, Header, Body or Filter for first page and next page (i.e. Paginated response). Some APIs like Amazon MWS, NetSuite, Zuora) you may need to set this to true."
                          expressionType="Notify"
                          name="HasDifferentNextPageInfo">false</property>
                        <property
                          dataType="System.String"
                          description="When HasDifferentNextPageInfo=true you can set this property to indicate first page and next page. You can specify different URL, Header, Body or Filter for first page and next page (i.e. Paginated response). Use [$tag$] as placeholder anywhere in the URL, Header, Body or Filter and at runtime system will replace it with correct value (first page or next page value). Syntax to specify placeholder for first page vs next page is like a connectionstring url=FirstPageValue|NextPageValue;header=FirstPageValue|NextPageValue;body=FirstPageValue|NextPageValue;filter=FirstPageValue|NextPageValue; You can use one or more key/value pairs to make things dynamic (e.g. url, header, body or filter)  .For example if you have pagination in your API and First URL is http://abc.com/api/items/get and to get more records you have to call http://abc.com/api/items/getNext then you can use [$tag$] as placeholder in the URL http://abc.com/api/items/[$tag$] and specify this property with first page tag and next page tag as url=get|getNext  (Tags are separated using vertical bar). "
                          expressionType="Notify"
                          name="PagePlaceholders"></property>
                        <property
                          dataType="System.String"
                          description="Use this property to set request body fragment for first page. HasDifferentNextPageInfo must be set to true to use this property."
                          expressionType="Notify"
                          name="FirstPageBodyPart"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.String"
                          description="Use this property to set request body fragment for any request after first request. HasDifferentNextPageInfo must be set to true to use this property."
                          expressionType="Notify"
                          name="NextPageBodyPart"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.String"
                          description="Expression to extract Maximum pages to loop through. Some APIs don't stop pagination and keep returning last page data when you try to read data after last page. Specify expression (e.g. $.page_count ) to read total pages to loop through using this property."
                          expressionType="Notify"
                          name="PagingMaxPagesExpr">$.result.total/50000</property>
                        <property
                          dataType="System.String"
                          description="e.g. Type page_num if URL looks like this =&gt; http://abc.com/?page_num=1&amp;sort=true  (page number via query string)&#xA;--or-- Type &lt;%page%&gt; if page number is inside URL path like this =&gt; http://abc.com/1/?sort=true  (e.g. replace page number in url with placeholder http://abc.com/&lt;%page%&gt;/?sort=true)&#xA;Page number will be incremented by one for next URL until last page is reached or [Max Page Number] is reached"
                          expressionType="Notify"
                          name="PageNumberAttributeNameInUrl">&lt;%page%&gt;</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum page number until which auto increment is allowed. Type zero for no limit. Next URL contains next page number (increment by one) until last page is detected or [Max Page Number] limit is reached."
                          expressionType="Notify"
                          name="MaxPageNumber">0</property>
                        <property
                          dataType="System.String"
                          description="Variable name which will hold starting page number. This is ignored if you useing parameter name from query string to indicate page number."
                          expressionType="Notify"
                          name="StartPageNumberVariable">User::UpsertedCount</property>
                        <property
                          dataType="System.Int32"
                          description="Page counter increment. By default next page is incremented by one if this value is zero. You can also enter negative number if you want to decrease page counter."
                          expressionType="Notify"
                          name="PageNumberIncrement">50000</property>
                        <property
                          dataType="System.Int32"
                          description="Specified how you want detect last page."
                          expressionType="Notify"
                          name="PagingEndStrategy"
                          typeConverter="ZappySys.Common.UrlPagingEndDetectionStrategy">3</property>
                        <property
                          dataType="System.Boolean"
                          description="Condition result to compare to detect last page. Set this property to True if you want detect last page if condition is true else set this to False."
                          expressionType="Notify"
                          name="LastPageWhenConditionEqualsTo">true</property>
                        <property
                          dataType="System.Int32"
                          description="Minimum bytes expected from response."
                          expressionType="Notify"
                          name="ResponseMinBytes">0</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum bytes from response."
                          expressionType="Notify"
                          name="ResponseMaxBytes">3</property>
                        <property
                          dataType="System.String"
                          description="Expected error message sub string from response."
                          expressionType="Notify"
                          name="ResponseErrorString">not found</property>
                        <property
                          dataType="System.Int32"
                          description="Expected status code from response when page number you trying to access not found."
                          expressionType="Notify"
                          name="ResponseStatusCode">404</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum JSON records to fetch. Set this value to 0 for all records"
                          expressionType="Notify"
                          name="MaxRows">0</property>
                        <property
                          dataType="System.String"
                          description="Enter expression here to filter data.(Example:  $.Users[*].UserName ) This will fetch User names from users records"
                          expressionType="Notify"
                          name="Filter"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">$.result.rows[*]</property>
                        <property
                          dataType="System.Boolean"
                          description="Use this option to include parent properties (Non array) in the output along with Filtered Rows"
                          expressionType="Notify"
                          name="IncludeParentColumns">false</property>
                        <property
                          dataType="System.Boolean"
                          description="By default child and parent information is not included in the output if children not found for specified expression. For example if you want to extract all orders from all customers nodes then you can type $.Customers[*].Orders[*]. This will fetch all orders from all customers. By default customers records without orders wont be included in the output. If you want to include those customers where orders not found then check this option (Output null information for order attributes). This behavior is similar to LEFT OUTER JOIN in SQL (Left side is parent, right side is child). This option is ***resource intensive*** so only check if you really care about this behavior."
                          expressionType="Notify"
                          name="IncludeParentColumnsWhenChildMissing">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to true if you want to output parent columns which are array. By default any parent column which is an array is not included in output. See also FilterForParentColumnsWithArrayType property if you set this property"
                          expressionType="Notify"
                          name="IncludeParentColumnsWithArrayType">false</property>
                        <property
                          dataType="System.String"
                          description="Filter expression to extract value form parent"
                          expressionType="Notify"
                          name="FilterForParentColumnsWithArrayType"></property>
                        <property
                          dataType="System.String"
                          description="Prefix for parent column name. This option is only valid if you have set IncludeParentColumns=True"
                          expressionType="Notify"
                          name="ParentColumnPrefix">P_</property>
                        <property
                          dataType="System.Boolean"
                          description="Throw error if property name specified in filter expression is missing. By default it will ignore any missing property errors."
                          expressionType="Notify"
                          name="ThrowErrorIfPropertyMissing">false</property>
                        <property
                          dataType="System.Int32"
                          description="This property how many nested levels should be scanned to fetch various properties. 0=Scan all child levels."
                          expressionType="Notify"
                          name="MaxLevelsToScan">0</property>
                        <property
                          dataType="System.String"
                          description="List comma separated property names from JSON document which you want to exclude from output. Specify parent property name to exclude all child nodes."
                          expressionType="Notify"
                          name="ExcludedProperties"></property>
                        <property
                          dataType="System.String"
                          description="Property level separator used in generated property name (separator for outer properties - Above selected filter node). Use this if default separator is producing duplicate property name which is conflicting with existing name."
                          expressionType="Notify"
                          name="LevelSeparator">_</property>
                        <property
                          dataType="System.Boolean"
                          description="Enables deep array flattening for selected filtered hierarchy. When you turn on this property it will flatten each property of each array item and expose as column (e.g. If you have Filter set as $.customers[*] and for each customer you have an array of Addresses then you may see output columns like Addresses.1.City, Addresses.1.State, Addresses.2.City, Addresses.2.State .... Addresses.N.City, Addresses.N.State). You can control how many array items you want to flatten by setting MaxArrayItemsToFlatten property."
                          expressionType="Notify"
                          name="EnableArrayFlattening">false</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum number of array items to flatten. inner array flattening. Adjust this property to control how many columns being generated. This option is ignored if you set EnableArrayFlattening=false"
                          expressionType="Notify"
                          name="MaxArrayItemsToFlatten">10</property>
                        <property
                          dataType="System.Int32"
                          description="Compression format for source file (e.g. gzip, zip)"
                          expressionType="Notify"
                          name="FileCompressionType"
                          typeConverter="ZappySys.Common.FileCompressionType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Array Transformation you want to apply. Useful for case when you have 2-Dimensional arrays with rows/columns in separate arrays."
                          expressionType="Notify"
                          name="ArrayTransformationType"
                          typeConverter="ZappySys.Json.ArrayTransformType">0</property>
                        <property
                          dataType="System.String"
                          description="Filter expression to use to extract column names for array transformation."
                          expressionType="Notify"
                          name="ArrayTransColumnNameFilter">$.result.rows[*]</property>
                        <property
                          dataType="System.String"
                          description="Filter expression for row values (Not applicable for simple array transformation)."
                          expressionType="Notify"
                          name="ArrayTransRowValueFilter">$.result.rows[*]</property>
                        <property
                          dataType="System.Boolean"
                          description="When you have 2D array but don't have column list specified in a separate array then use this option (e.g. { arr: [[10,11],[21,22]] } )."
                          expressionType="Notify"
                          name="ArrayTransEnableCustomColumns">true</property>
                        <property
                          dataType="System.String"
                          description="When you have 2D array but don't have column list specified in a separate array then use specify column names here. Use comma separated list (e.g col1,col2,col3 ). Column name Order must match value order."
                          expressionType="Notify"
                          name="ArrayTransCustomColumns">MetricID</property>
                        <property
                          dataType="System.String"
                          description="Specifies how custom date formatted strings are parsed when reading JSON."
                          expressionType="Notify"
                          name="DateFormatString"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies how date formatted strings, e.g. Date(1198908717056) and 2012-03-21T05:40Z, are parsed when reading JSON."
                          expressionType="Notify"
                          name="DateParseHandling"
                          typeConverter="ZappySys.Common.DateParseHandling">1</property>
                        <property
                          dataType="System.Boolean"
                          description="Output as raw JSON document rather than parsing individual fields. This option is helpful if you have documents stored in a file and you want to pass them downstream as raw JSON string rather than parsing into columns."
                          expressionType="Notify"
                          name="OutputRawDocument">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indent JSON output so its easy to read."
                          expressionType="Notify"
                          name="IndentOutput">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to true if you want to output FilePath. This option is ignored when you consume DirectValue or data from Url rather than local files. Output column name will be __FilePath"
                          expressionType="Notify"
                          name="OutputFilePath">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to true if you want to output FileName. This option is ignored when you consume DirectValue or data from Url rather than local files. Output column name will be __FileName"
                          expressionType="Notify"
                          name="OutputFileName">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to true if you want to move processed file to archive folder."
                          expressionType="Notify"
                          name="EnableArchiveFile">false</property>
                        <property
                          dataType="System.String"
                          description="Folder path where you want to move processed file."
                          expressionType="Notify"
                          name="ArchiveFolderPath"></property>
                        <property
                          dataType="System.Boolean"
                          description="Folder path where you want to move processed file."
                          expressionType="Notify"
                          name="OverwriteFileInArchiveFolder">false</property>
                        <property
                          dataType="System.String"
                          description="File naming convention for archived file. By default it will same name as original source file processed. But you can control naming format using {%name%} and {%ext%} placeholders. e.g. {%name%}_processed{%ext%} or {%name%}{%ext%}.{{System::ContainerStartTime,yyyyMMdd_HHmmss_fff}}"
                          expressionType="Notify"
                          name="ArchiveFileNamingConvention"></property>
                        <property
                          dataType="System.Boolean"
                          description="When this property is true then Column is converted to Row. Pivoted names will appear under  Pivot_Name column and values will appear under Pivot_Value field."
                          expressionType="Notify"
                          name="EnablePivot">false</property>
                        <property
                          dataType="System.Int32"
                          description="Metadata scan mode controls how data type and length is determined. By default few records scanned to determine datatype/length. Changing ScanMode affects length/datatype accuracy."
                          expressionType="Notify"
                          name="MetaDataScanMode"
                          typeConverter="ZappySys.Common.Data.MetaDataScanMode">4</property>
                        <property
                          dataType="System.Int32"
                          description="Length for all string column. This option is only valid for MetaDataScanMode=Custom"
                          expressionType="Notify"
                          name="MetaDataCustomLength">1000</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.JsonSource</property>
                        <property
                          dataType="System.Int32"
                          description="Encoding of source file"
                          expressionType="Notify"
                          name="Encoding"
                          typeConverter="ZappySys.Common.EncodingType">0</property>
                        <property
                          dataType="System.String"
                          description="Character set for text (e.g. utf-8 )"
                          expressionType="Notify"
                          name="CharacterSet"></property>
                        <property
                          dataType="System.Boolean"
                          description="By default process stops with error if specified local file is not found. Set this property to true if you wish to continue rather than throwing file not found error."
                          expressionType="Notify"
                          name="ContinueOnFileNotFoundError">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Check this option if you want to upload file(s) (i.e. POST RAW file data) or send data using Multi-Part encoding method (i.e. Content-Type: multipart/form-data). Multi-Part request allows you to mix key/value and upload files in same request. On the other hand raw upload allows only single file upload (without any key/value) &#xA;&#xA;==== Raw Upload (Content-Type: application/octet-stream) =====   &#xA;To upload single file in raw mode check this option and specify full file path starting with @ sign in the Body (e.g.  @c:\data\myfile.zip ) &#xA;&#xA;==== Form-Data / Multipart Upload (Content-Type: multipart/form-data) =====   &#xA;To treat your Request data as multi part fields you must specify key/value pairs separated by new lines into RequestData field (i.e. Body). Each key value pair is entered on new-line and key/value are separated using equal sign (=). Preceding and trailing spaces are ignored also blank lines are ignored. &#xA;If field value has some any special character(s) then use escape sequence (e.g. For NewLine: \r\n, For Tab: \t, For at (@): \@). When value of any field starts with at sign (@) its automatically treated as File you want to upload. By default file content type is determined based on extension however you can supply content type manually for any field using this way [ fieldname.Content-Type=some content type ]. In below example we have supplied Content-Type for file2 and SomeField1, all other fields are using default content-type.&#xA;See below Example of uploading multiple files along with additional fields.&#xA;&#xA;file1=@c:\data\Myfile1.txt&#xA;file2=@c:\data\Myfile2.json&#xA;file2.Content-Type=application/json&#xA;SomeField1=aaaaaaa&#xA;SomeField1.Content-Type=text/plain&#xA;SomeField2=12345&#xA;SomeFieldWithNewLineAndTab=This is line1\r\nThis is line2\r\nThis is \ttab \ttab \ttab&#xA;SomeFieldStartingWithAtSign=\@MyTwitterHandle&#xA;"
                          expressionType="Notify"
                          name="IsMultiPartUpload">false</property>
                        <property
                          dataType="System.String"
                          description="Expression to extract Maximum records to loop through. Some APIs don't stop pagination and keep returning last page data when you try to read data after last page. Specify expression (e.g. $.total_rows ) to read total pages to loop through using this property. This setting is ignored if you set PagingMaxPagesExpr."
                          expressionType="Notify"
                          name="PagingMaxRowsExpr"></property>
                        <property
                          dataType="System.String"
                          description="When you enable PagingMaxRowsExpr (end pagination based on MaxRowCount) then you need to count records coming in each response. This expression extract all rows found under specified expression (e.g. $.orders[*] if all records found under orders node)."
                          expressionType="Notify"
                          name="PagingMaxRowsDataPathExpr"></property>
                        <property
                          dataType="System.Boolean"
                          description="When this option is checked, system allows to parse large number (Higher than Int64) in JSON document (i.e. { id: 76000009353950433247780 } ). If you do not turn on this option then it may throw error if large number is encountered. This option is SLOW because it has to perform additional checks in order to avoid Large number overflow error so do not turn on unless you getting Large number error."
                          expressionType="Notify"
                          name="EnableBigNumberHandling">false</property>
                      </properties>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Appraisals\Search Appraisals.Outputs[JsonSourceOutput]"
                          errorOrTruncationOperation="Error"
                          errorRowDisposition="FailComponent"
                          name="JsonSourceOutput"
                          truncationRowDisposition="FailComponent">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\Search Appraisals.Outputs[JsonSourceOutput].Columns[etag]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Appraisals\Search Appraisals.Outputs[JsonSourceOutput].ExternalColumns[etag]"
                              length="68"
                              lineageId="Package\Iterate Offices\Sequence Container\Appraisals\Search Appraisals.Outputs[JsonSourceOutput].Columns[etag]"
                              name="etag" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\Search Appraisals.Outputs[JsonSourceOutput].Columns[id]"
                              dataType="i4"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Appraisals\Search Appraisals.Outputs[JsonSourceOutput].ExternalColumns[id]"
                              lineageId="Package\Iterate Offices\Sequence Container\Appraisals\Search Appraisals.Outputs[JsonSourceOutput].Columns[id]"
                              name="id" />
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\Search Appraisals.Outputs[JsonSourceOutput].ExternalColumns[system_record_state]"
                              dataType="wstr"
                              length="24"
                              name="system_record_state" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\Search Appraisals.Outputs[JsonSourceOutput].ExternalColumns[system_ctime]"
                              dataType="wstr"
                              length="40"
                              name="system_ctime" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\Search Appraisals.Outputs[JsonSourceOutput].ExternalColumns[system_modtime]"
                              dataType="wstr"
                              length="40"
                              name="system_modtime" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\Search Appraisals.Outputs[JsonSourceOutput].ExternalColumns[name]"
                              dataType="wstr"
                              length="144"
                              name="name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\Search Appraisals.Outputs[JsonSourceOutput].ExternalColumns[email_address]"
                              dataType="wstr"
                              length="180"
                              name="email_address" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\Search Appraisals.Outputs[JsonSourceOutput].ExternalColumns[phone_number]"
                              dataType="wstr"
                              length="80"
                              name="phone_number" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\Search Appraisals.Outputs[JsonSourceOutput].ExternalColumns[fax_number]"
                              dataType="wstr"
                              length="1020"
                              name="fax_number" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\Search Appraisals.Outputs[JsonSourceOutput].ExternalColumns[is_dnd]"
                              dataType="wstr"
                              length="80"
                              name="is_dnd" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\Search Appraisals.Outputs[JsonSourceOutput].ExternalColumns[type]"
                              dataType="wstr"
                              length="28"
                              name="type" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\Search Appraisals.Outputs[JsonSourceOutput].ExternalColumns[last_contacted_date]"
                              dataType="wstr"
                              length="80"
                              name="last_contacted_date" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\Search Appraisals.Outputs[JsonSourceOutput].ExternalColumns[name_last]"
                              dataType="wstr"
                              length="1020"
                              name="name_last" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\Search Appraisals.Outputs[JsonSourceOutput].ExternalColumns[address_postal]"
                              dataType="wstr"
                              length="220"
                              name="address_postal" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\Search Appraisals.Outputs[JsonSourceOutput].ExternalColumns[address]"
                              dataType="wstr"
                              length="384"
                              name="address" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\Search Appraisals.Outputs[JsonSourceOutput].ExternalColumns[interest_level]"
                              dataType="wstr"
                              length="1020"
                              name="interest_level" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\Search Appraisals.Outputs[JsonSourceOutput].ExternalColumns[marketing_birthday]"
                              dataType="wstr"
                              length="1020"
                              name="marketing_birthday" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\Search Appraisals.Outputs[JsonSourceOutput].ExternalColumns[marketing_enquiry_source]"
                              dataType="wstr"
                              length="1020"
                              name="marketing_enquiry_source" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\Search Appraisals.Outputs[JsonSourceOutput].ExternalColumns[marketing_gender]"
                              dataType="wstr"
                              length="1020"
                              name="marketing_gender" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\Search Appraisals.Outputs[JsonSourceOutput].ExternalColumns[marketing_postcode]"
                              dataType="wstr"
                              length="80"
                              name="marketing_postcode" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\Search Appraisals.Outputs[JsonSourceOutput].ExternalColumns[name_legal]"
                              dataType="wstr"
                              length="1020"
                              name="name_legal" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\Search Appraisals.Outputs[JsonSourceOutput].ExternalColumns[name_salutation]"
                              dataType="wstr"
                              length="1020"
                              name="name_salutation" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\Search Appraisals.Outputs[JsonSourceOutput].ExternalColumns[name_addressee]"
                              dataType="wstr"
                              length="1020"
                              name="name_addressee" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\Search Appraisals.Outputs[JsonSourceOutput].ExternalColumns[system_owner_user.id]"
                              dataType="wstr"
                              length="20"
                              name="system_owner_user.id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\Search Appraisals.Outputs[JsonSourceOutput].ExternalColumns[system_owner_user._name]"
                              dataType="wstr"
                              length="36"
                              name="system_owner_user._name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\Search Appraisals.Outputs[JsonSourceOutput].ExternalColumns[system_owner_user._first_name]"
                              dataType="wstr"
                              length="20"
                              name="system_owner_user._first_name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\Search Appraisals.Outputs[JsonSourceOutput].ExternalColumns[system_owner_user._last_name]"
                              dataType="wstr"
                              length="12"
                              name="system_owner_user._last_name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\Search Appraisals.Outputs[JsonSourceOutput].ExternalColumns[system_owner_user._email_address]"
                              dataType="wstr"
                              length="92"
                              name="system_owner_user._email_address" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\Search Appraisals.Outputs[JsonSourceOutput].ExternalColumns[system_modified_user.id]"
                              dataType="wstr"
                              length="20"
                              name="system_modified_user.id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\Search Appraisals.Outputs[JsonSourceOutput].ExternalColumns[system_modified_user._name]"
                              dataType="wstr"
                              length="48"
                              name="system_modified_user._name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\Search Appraisals.Outputs[JsonSourceOutput].ExternalColumns[system_modified_user._first_name]"
                              dataType="wstr"
                              length="24"
                              name="system_modified_user._first_name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\Search Appraisals.Outputs[JsonSourceOutput].ExternalColumns[system_modified_user._last_name]"
                              dataType="wstr"
                              length="24"
                              name="system_modified_user._last_name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\Search Appraisals.Outputs[JsonSourceOutput].ExternalColumns[system_modified_user._email_address]"
                              dataType="wstr"
                              length="128"
                              name="system_modified_user._email_address" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\Search Appraisals.Outputs[JsonSourceOutput].ExternalColumns[system_created_user.id]"
                              dataType="wstr"
                              length="20"
                              name="system_created_user.id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\Search Appraisals.Outputs[JsonSourceOutput].ExternalColumns[system_created_user._name]"
                              dataType="wstr"
                              length="36"
                              name="system_created_user._name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\Search Appraisals.Outputs[JsonSourceOutput].ExternalColumns[system_created_user._first_name]"
                              dataType="wstr"
                              length="20"
                              name="system_created_user._first_name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\Search Appraisals.Outputs[JsonSourceOutput].ExternalColumns[system_created_user._last_name]"
                              dataType="wstr"
                              length="12"
                              name="system_created_user._last_name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\Search Appraisals.Outputs[JsonSourceOutput].ExternalColumns[system_created_user._email_address]"
                              dataType="wstr"
                              length="92"
                              name="system_created_user._email_address" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\Search Appraisals.Outputs[JsonSourceOutput].ExternalColumns[contact_image]"
                              dataType="wstr"
                              length="1020"
                              name="contact_image" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\Search Appraisals.Outputs[JsonSourceOutput].ExternalColumns[marketing_enquiry_method]"
                              dataType="wstr"
                              length="1020"
                              name="marketing_enquiry_method" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\Search Appraisals.Outputs[JsonSourceOutput].ExternalColumns[_security_user_rights]"
                              dataType="wstr"
                              length="260"
                              name="_security_user_rights" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\Search Appraisals.Outputs[JsonSourceOutput].ExternalColumns[etag]"
                              dataType="wstr"
                              length="68"
                              name="etag" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\Search Appraisals.Outputs[JsonSourceOutput].ExternalColumns[id]"
                              dataType="wstr"
                              length="24"
                              name="id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\Search Appraisals.Outputs[JsonSourceOutput].ExternalColumns[__FileName]"
                              dataType="wstr"
                              length="600"
                              name="__FileName" />
                          </externalMetadataColumns>
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Appraisals\Search Appraisals.Outputs[JsonSource Error Output]"
                          isErrorOut="true"
                          name="JsonSource Error Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\Search Appraisals.Outputs[JsonSource Error Output].Columns[etag]"
                              dataType="wstr"
                              length="68"
                              lineageId="Package\Iterate Offices\Sequence Container\Appraisals\Search Appraisals.Outputs[JsonSource Error Output].Columns[etag]"
                              name="etag" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\Search Appraisals.Outputs[JsonSource Error Output].Columns[id]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Appraisals\Search Appraisals.Outputs[JsonSource Error Output].Columns[id]"
                              name="id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\Search Appraisals.Outputs[JsonSource Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Appraisals\Search Appraisals.Outputs[JsonSource Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\Search Appraisals.Outputs[JsonSource Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Appraisals\Search Appraisals.Outputs[JsonSource Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\Search Appraisals.Outputs[JsonSource Error Output].Columns[ErrorColumnName]"
                              codePage="1252"
                              dataType="str"
                              length="128"
                              lineageId="Package\Iterate Offices\Sequence Container\Appraisals\Search Appraisals.Outputs[JsonSource Error Output].Columns[ErrorColumnName]"
                              name="ErrorColumnName" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\Search Appraisals.Outputs[JsonSource Error Output].Columns[ErrorMessage]"
                              dataType="wstr"
                              length="1024"
                              lineageId="Package\Iterate Offices\Sequence Container\Appraisals\Search Appraisals.Outputs[JsonSource Error Output].Columns[ErrorMessage]"
                              name="ErrorMessage" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Appraisals\SQL Sort"
                      componentClassID="Microsoft.Sort"
                      contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
                      name="SQL Sort"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                          name="EliminateDuplicates">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the maximum number of threads to use for sorting."
                          expressionType="Notify"
                          name="MaximumThreads">-1</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Appraisals\SQL Sort.Inputs[Sort Input]"
                          name="Sort Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\SQL Sort.Inputs[Sort Input].Columns[Id]"
                              cachedDataType="i4"
                              cachedName="Id"
                              lineageId="Package\Iterate Offices\Sequence Container\Appraisals\Existing Appraisals from SQL.Outputs[OLE DB Source Output].Columns[Id]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">1</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\SQL Sort.Inputs[Sort Input].Columns[AccountId]"
                              cachedDataType="i2"
                              cachedName="AccountId"
                              lineageId="Package\Iterate Offices\Sequence Container\Appraisals\Existing Appraisals from SQL.Outputs[OLE DB Source Output].Columns[AccountId]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\SQL Sort.Inputs[Sort Input].Columns[etaglead]"
                              cachedDataType="wstr"
                              cachedLength="250"
                              cachedName="etaglead"
                              lineageId="Package\Iterate Offices\Sequence Container\Appraisals\Existing Appraisals from SQL.Outputs[OLE DB Source Output].Columns[etaglead]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Appraisals\SQL Sort.Outputs[Sort Output]"
                          isSorted="true"
                          name="Sort Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\SQL Sort.Outputs[Sort Output].Columns[Id]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Appraisals\SQL Sort.Outputs[Sort Output].Columns[Id]"
                              name="Id"
                              sortKeyPosition="1">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Iterate Offices\Sequence Container\Appraisals\Existing Appraisals from SQL.Outputs[OLE DB Source Output].Columns[Id]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\SQL Sort.Outputs[Sort Output].Columns[AccountId]"
                              dataType="i2"
                              lineageId="Package\Iterate Offices\Sequence Container\Appraisals\SQL Sort.Outputs[Sort Output].Columns[AccountId]"
                              name="AccountId">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Iterate Offices\Sequence Container\Appraisals\Existing Appraisals from SQL.Outputs[OLE DB Source Output].Columns[AccountId]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\SQL Sort.Outputs[Sort Output].Columns[etaglead]"
                              dataType="wstr"
                              length="250"
                              lineageId="Package\Iterate Offices\Sequence Container\Appraisals\SQL Sort.Outputs[Sort Output].Columns[etaglead]"
                              name="etaglead">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Iterate Offices\Sequence Container\Appraisals\Existing Appraisals from SQL.Outputs[OLE DB Source Output].Columns[etaglead]}</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Appraisals\Trash Destination"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Trash Destination; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="The trash destination is used to create dummy destination which ends data path without any processing."
                      name="Trash Destination"
                      version="2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.String"
                          description="File path where you want to save data"
                          expressionType="Notify"
                          name="FilePath"></property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates if you want to save input data to comma separated text file"
                          expressionType="Notify"
                          name="SaveDataToFile">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Append data to file"
                          expressionType="Notify"
                          name="Append">false</property>
                        <property
                          dataType="System.String"
                          description="RowSeparator"
                          expressionType="Notify"
                          name="RowSeparator">{NEWLINE}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether you want to overwrite target file if exists"
                          expressionType="Notify"
                          name="OverwriteFileIfExists">true</property>
                        <property
                          dataType="System.String"
                          description="ColumnSeparator"
                          expressionType="Notify"
                          name="ColumnSeparator">,</property>
                        <property
                          dataType="System.Boolean"
                          description="SupportUnicode"
                          expressionType="Notify"
                          name="SupportUnicode">true</property>
                        <property
                          dataType="System.Boolean"
                          description="ColumnNamesInFirstRow"
                          expressionType="Notify"
                          name="ColumnNamesInFirstRow">true</property>
                        <property
                          dataType="System.Boolean"
                          description="QuoteDataIfNeeded"
                          expressionType="Notify"
                          name="QuoteDataIfNeeded">true</property>
                        <property
                          dataType="System.String"
                          description="Date time format string for any column with DT_DBDATETIME, DT_DBDATETIME2 or DB_DATE format"
                          expressionType="Notify"
                          name="DateTimeFormat">yyyy-MM-dd HH:mm:ss</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.TrashDestination</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Appraisals\Trash Destination.Inputs[TrashDestinationInput]"
                          hasSideEffects="true"
                          name="TrashDestinationInput">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Appraisals\Trash Destination 1"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Trash Destination; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="The trash destination is used to create dummy destination which ends data path without any processing."
                      name="Trash Destination 1"
                      version="2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.String"
                          description="File path where you want to save data"
                          expressionType="Notify"
                          name="FilePath"></property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates if you want to save input data to comma separated text file"
                          expressionType="Notify"
                          name="SaveDataToFile">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Append data to file"
                          expressionType="Notify"
                          name="Append">false</property>
                        <property
                          dataType="System.String"
                          description="RowSeparator"
                          expressionType="Notify"
                          name="RowSeparator">{NEWLINE}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether you want to overwrite target file if exists"
                          expressionType="Notify"
                          name="OverwriteFileIfExists">true</property>
                        <property
                          dataType="System.String"
                          description="ColumnSeparator"
                          expressionType="Notify"
                          name="ColumnSeparator">,</property>
                        <property
                          dataType="System.Boolean"
                          description="SupportUnicode"
                          expressionType="Notify"
                          name="SupportUnicode">true</property>
                        <property
                          dataType="System.Boolean"
                          description="ColumnNamesInFirstRow"
                          expressionType="Notify"
                          name="ColumnNamesInFirstRow">true</property>
                        <property
                          dataType="System.Boolean"
                          description="QuoteDataIfNeeded"
                          expressionType="Notify"
                          name="QuoteDataIfNeeded">true</property>
                        <property
                          dataType="System.String"
                          description="Date time format string for any column with DT_DBDATETIME, DT_DBDATETIME2 or DB_DATE format"
                          expressionType="Notify"
                          name="DateTimeFormat">yyyy-MM-dd HH:mm:ss</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.TrashDestination</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Appraisals\Trash Destination 1.Inputs[TrashDestinationInput]"
                          hasSideEffects="true"
                          name="TrashDestinationInput">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Appraisals\Upsert Appraisals"
                      componentClassID="Microsoft.OLEDBCommand"
                      contactInfo="OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
                      description="Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time."
                      name="Upsert Appraisals"
                      usesDispositions="true"
                      version="2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">0</property>
                        <property
                          dataType="System.String"
                          description="The SQL command to be executed."
                          expressionType="Notify"
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">exec [UpsertAppraisal] ?,?,?</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Iterate Offices\Sequence Container\Appraisals\Upsert Appraisals.Connections[OleDbConnection]"
                          connectionManagerID="Package.ConnectionManagers[colsqlbi01v.Entities]"
                          connectionManagerRefId="Package.ConnectionManagers[colsqlbi01v.Entities]"
                          description="The OLE DB runtime connection used to access the database."
                          name="OleDbConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Appraisals\Upsert Appraisals.Inputs[OLE DB Command Input]"
                          errorOrTruncationOperation="Command Execution"
                          errorRowDisposition="FailComponent"
                          hasSideEffects="true"
                          name="OLE DB Command Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\Upsert Appraisals.Inputs[OLE DB Command Input].Columns[Origin]"
                              cachedDataType="i4"
                              cachedName="Origin"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Appraisals\Upsert Appraisals.Inputs[OLE DB Command Input].ExternalColumns[@Origin]"
                              lineageId="Package\Iterate Offices\Sequence Container\Appraisals\Add accountid and origin.Outputs[Derived Column Output].Columns[Origin]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\Upsert Appraisals.Inputs[OLE DB Command Input].Columns[AccountId]"
                              cachedDataType="i4"
                              cachedName="AccountId"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Appraisals\Upsert Appraisals.Inputs[OLE DB Command Input].ExternalColumns[@accountid]"
                              lineageId="Package\Iterate Offices\Sequence Container\Appraisals\Add accountid and origin.Outputs[Derived Column Output].Columns[AccountId]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\Upsert Appraisals.Inputs[OLE DB Command Input].Columns[__DOCUMENT__]"
                              cachedDataType="nText"
                              cachedName="__DOCUMENT__"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Appraisals\Upsert Appraisals.Inputs[OLE DB Command Input].ExternalColumns[@body]"
                              lineageId="Package\Iterate Offices\Sequence Container\Appraisals\record.Outputs[JsonParserTransformOutput].Columns[__DOCUMENT__]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\Upsert Appraisals.Inputs[OLE DB Command Input].ExternalColumns[@Origin]"
                              dataType="i2"
                              name="@Origin">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                                  name="DBParamInfoFlags">81</property>
                              </properties>
                            </externalMetadataColumn>
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\Upsert Appraisals.Inputs[OLE DB Command Input].ExternalColumns[@body]"
                              dataType="nText"
                              name="@body">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                                  name="DBParamInfoFlags">193</property>
                              </properties>
                            </externalMetadataColumn>
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\Upsert Appraisals.Inputs[OLE DB Command Input].ExternalColumns[@accountid]"
                              dataType="i4"
                              name="@accountid">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                                  name="DBParamInfoFlags">81</property>
                              </properties>
                            </externalMetadataColumn>
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Appraisals\Upsert Appraisals.Outputs[OLE DB Command Output]"
                          exclusionGroup="1"
                          name="OLE DB Command Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Appraisals\Upsert Appraisals.Inputs[OLE DB Command Input]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Appraisals\Upsert Appraisals.Outputs[OLE DB Command Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="OLE DB Command Error Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Appraisals\Upsert Appraisals.Inputs[OLE DB Command Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\Upsert Appraisals.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Appraisals\Upsert Appraisals.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\Upsert Appraisals.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Appraisals\Upsert Appraisals.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Appraisals\Web API Destination"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Web API Destination; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="The Web API destination can be used to send data to Web API URL (e.g. Submit or POST data to REST API/SOAP or other HTTP/HTTPS endpoints)"
                      name="Web API Destination"
                      usesDispositions="true"
                      version="5">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.String"
                          description="API URL you want to access"
                          expressionType="Notify"
                          name="HttpRequestUrl">{{User::RexAPIWebURL}}</property>
                        <property
                          dataType="System.String"
                          description="Http Web Request Method (e.g. POST, GET, PUT, LIST, DELETE...). Refer your API documentation if you are not sure which method you have to use."
                          expressionType="Notify"
                          name="HttpRequestMethod">POST</property>
                        <property
                          dataType="System.String"
                          description="Set this if you want to set custom Http headers. You may use variable anywhere in the header value using syntax {{User::YourVarName}}. Syntax of Header key value pair is : &amp;lt;request&amp;gt;&amp;lt;header&amp;gt;&amp;lt;name&amp;gt;x-myheader-1&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;AAA&amp;lt;/value&amp;gt;&amp;lt;/header&amp;gt; &amp;lt;header&amp;gt;&amp;lt;name&amp;gt;x-myheader-2&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;BBB&amp;lt;/value&amp;gt;&amp;lt;/header&amp;gt;&amp;lt;/request&amp;gt;"
                          expressionType="Notify"
                          name="HttpHeaders"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">&lt;request&gt;&lt;header&gt;&lt;name&gt;Accept&lt;/name&gt;&lt;value&gt;*/*&lt;/value&gt;&lt;/header&gt;&lt;header&gt;&lt;name&gt;Cache-Control&lt;/name&gt;&lt;value&gt;no-cache&lt;/value&gt;&lt;/header&gt;&lt;header&gt;&lt;name&gt;X-App-Identifier&lt;/name&gt;&lt;value&gt;client:spicerhaart:{{System::PackageName}}:{{System::TaskName}}&lt;/value&gt;&lt;/header&gt;&lt;/request&gt;</property>
                        <property
                          dataType="System.String"
                          description="User defined data you wish to send along with your HTTP Request (e.g. Upload file data, Form POST data). Usually you have to set content-type of your data but if you select RequestMethod=POST then system will automatically set content-type=application/x-www-form-urlencoded."
                          expressionType="Notify"
                          name="HttpRequestData"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies content type for data you wish to POST. If you select Default option then system default content type will be used (i.e. application/x-www-form-urlencoded). If you specify Content-Type header along with this option then header value takes precedence."
                          expressionType="Notify"
                          name="HttpRequestContentType"
                          typeConverter="ZappySys.Common.Web.HttpRequestContentType">2</property>
                        <property
                          dataType="System.Boolean"
                          description="If this option is true then component will continue without exception on 404 error (Url not found). This allows you to consume data gracefully."
                          expressionType="Notify"
                          name="ContinueOnUrlNotFoundError">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Ignore SSL certificate related errors. Example: if you getting SSL/TLS errors because of certificate expired or certificate is not from trusted authority or certificate is self-signed. By checking this option you will not get SSL/TLS error."
                          expressionType="Notify"
                          name="IgnoreCertificateErrors">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Allow unsecure ciphers/suites and curves for SSLS/TLS communication. Use this option to communicate with web servers which needs legacy / unsecured ciphers support. This option is only trigged when you change default SSL/TLS Version on advanced settings tab."
                          expressionType="Notify"
                          name="AllowUnsecureSuite">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Enable support for gzip or deflate compression. When you check this option compressed response automatically de-compressed saving bandwidth. This option is only valid if web server supports compressed response stream. Check your API documentation for more information."
                          expressionType="Notify"
                          name="EnableCompressionSupport">true</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies which security protocol is supported for HTTPS communication. Using this option you can enable legacy protocol or enforce to use latest version of security protocol (Note: TLS 1.2 is only supported in SSIS 2014 or Higher)."
                          expressionType="Notify"
                          name="SecurityProtocol"
                          typeConverter="ZappySys.PowerPack.Common.HttpsSecurityProtocolType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Wait time in milliseconds (Pause after each request). 0=No wait. Use this delay time if your API has limit on how many requests you can make in certain time frame."
                          expressionType="Notify"
                          name="WaitTime">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you redirect error to error output by default you get additional information in ErrorMessage column. Check this option if you need exact Response Body (Useful if its in JSON/XML format which needs to be parsed for additional information for later step)."
                          expressionType="Notify"
                          name="OnErrorOutputResponseBody">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Enable multiple requests using parallel threads."
                          expressionType="Notify"
                          name="EnableParallelRequests">true</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum parallel threads to use for processing multiple web requests."
                          expressionType="Notify"
                          name="MaxParallelThreads">3</property>
                        <property
                          dataType="System.Boolean"
                          description="By default one request is sent for each input row. If your API supports multiple records in a single call via HTTP Body then enable this setting. See also BodyBatchSize, BodyHeader, BodyFooter and BodyRowSeparator property."
                          expressionType="Notify"
                          name="EnableBodyBatch">false</property>
                        <property
                          dataType="System.String"
                          description="When you have to wrap input content between opening and closing tags for each call then set this property to specify opening for body content. For Example if you want to build Body like this (send max 100 rows per call) ==&gt; { records : [ {...}, {...}, {...} ] } then you can set BatchSize=100, BodyHeader as &quot;{ records: [&quot; , BodyFooter as &quot;] }&quot; and BodyRowSeperator as comma {,}. This property is ignored if EnableBodyBatch=false."
                          expressionType="Notify"
                          name="BodyHeader"></property>
                        <property
                          dataType="System.String"
                          description="When you have to wrap input content between opening and closing tags for each call then set this property to specify closing for body content. For Example if you want to build Body like this (send max 100 rows per call) ==&gt; { records : [ {...}, {...}, {...} ] } then you can set BatchSize=100, BodyHeader as &quot;{ records: [&quot; , BodyFooter as &quot;] }&quot; and BodyRowSeperator as comma {,}. This property is ignored if EnableBodyBatch=false."
                          expressionType="Notify"
                          name="BodyFooter"></property>
                        <property
                          dataType="System.Int32"
                          description="If your API supports multiple records via HTTP Body then change this setting &gt; 1 to include multiple upstream records into single call. See also BodyHeader, BodyFooter and BodyRowSeparator property. This property is ignored if EnableBodyBatch=false."
                          expressionType="Notify"
                          name="BodyBatchSize">100</property>
                        <property
                          dataType="System.String"
                          description="When you submit multiple rows in a batch you can separate multiple documents / records using custom separator (e.g. in JSON Array you can use comma {,} as record separator if POST document is in array format [ {...}, {...}, {...} ] ). For last row of batch blank separator is used."
                          expressionType="Notify"
                          name="BodyRowSeparator"></property>
                        <property
                          dataType="System.Boolean"
                          description="Returns response data as binary data (e.g. Byte Array). Check this option is response is Zip file, Image file or any non text data which needs to be exported as raw data without any encoding."
                          expressionType="Notify"
                          name="TreatResponseAsBinary">false</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.WebApiDestination</property>
                        <property
                          dataType="System.Boolean"
                          description="Check this option if you want to upload file(s) (i.e. POST RAW file data) or send data using Multi-Part encoding method (i.e. Content-Type: multipart/form-data). Multi-Part request allows you to mix key/value and upload files in same request. On the other hand raw upload allows only single file upload (without any key/value) &#xA;&#xA;==== Raw Upload (Content-Type: application/octet-stream) =====   &#xA;To upload single file in raw mode check this option and specify full file path starting with @ sign in the Body (e.g.  @c:\data\myfile.zip ) &#xA;&#xA;==== Form-Data / Multipart Upload (Content-Type: multipart/form-data) =====   &#xA;To treat your Request data as multi part fields you must specify key/value pairs separated by new lines into RequestData field (i.e. Body). Each key value pair is entered on new-line and key/value are separated using equal sign (=). Preceding and trailing spaces are ignored also blank lines are ignored. &#xA;If field value has some any special character(s) then use escape sequence (e.g. For NewLine: \r\n, For Tab: \t, For at (@): \@). When value of any field starts with at sign (@) its automatically treated as File you want to upload. By default file content type is determined based on extension however you can supply content type manually for any field using this way [ fieldname.Content-Type=some content type ]. In below example we have supplied Content-Type for file2 and SomeField1, all other fields are using default content-type.&#xA;See below Example of uploading multiple files along with additional fields.&#xA;&#xA;file1=@c:\data\Myfile1.txt&#xA;file2=@c:\data\Myfile2.json&#xA;file2.Content-Type=application/json&#xA;SomeField1=aaaaaaa&#xA;SomeField1.Content-Type=text/plain&#xA;SomeField2=12345&#xA;SomeFieldWithNewLineAndTab=This is line1\r\nThis is line2\r\nThis is \ttab \ttab \ttab&#xA;SomeFieldStartingWithAtSign=\@MyTwitterHandle&#xA;"
                          expressionType="Notify"
                          name="IsMultiPartUpload">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Enable this option if your server is expecting &#xA; (i.e. CRLF) after last Multi-Part boundary in the Body. This option is only applicable if you enabled IsMultiPartUpload and sending data in Key=value format (i.e. Mutipart). For raw file upload this option has no effect."
                          expressionType="Notify"
                          name="AddMultiPartPostamble">false</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Iterate Offices\Sequence Container\Appraisals\Web API Destination.Connections[Connection]"
                          connectionManagerID="Package.ConnectionManagers[HTTP 1]"
                          connectionManagerRefId="Package.ConnectionManagers[HTTP 1]"
                          description="Connection manager for authentication (e.g. HTTP or OAuth Connection)"
                          name="Connection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Appraisals\Web API Destination.Inputs[WebApiDestinationInput]"
                          errorRowDisposition="RedirectRow"
                          hasSideEffects="true"
                          name="WebApiDestinationInput"
                          truncationRowDisposition="RedirectRow">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\Web API Destination.Inputs[WebApiDestinationInput].Columns[ZS_JSON_OUT]"
                              cachedDataType="nText"
                              cachedName="ZS_JSON_OUT"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Appraisals\Web API Destination.Inputs[WebApiDestinationInput].ExternalColumns[HttpRequestData]"
                              lineageId="Package\Iterate Offices\Sequence Container\Appraisals\JSON Generator Transform.Outputs[JsonGeneratorTransformOutput].Columns[ZS_JSON_OUT]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\Web API Destination.Inputs[WebApiDestinationInput].ExternalColumns[HttpRequestUrl]"
                              dataType="wstr"
                              length="2000"
                              name="HttpRequestUrl" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\Web API Destination.Inputs[WebApiDestinationInput].ExternalColumns[HttpRequestData]"
                              dataType="nText"
                              name="HttpRequestData" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\Web API Destination.Inputs[WebApiDestinationInput].ExternalColumns[HttpHeaders]"
                              dataType="wstr"
                              length="2000"
                              name="HttpHeaders" />
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Appraisals\Web API Destination.Outputs[WebApiDestination Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="WebApiDestination Error Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Appraisals\Web API Destination.Inputs[WebApiDestinationInput]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\Web API Destination.Outputs[WebApiDestination Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Appraisals\Web API Destination.Outputs[WebApiDestination Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\Web API Destination.Outputs[WebApiDestination Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Appraisals\Web API Destination.Outputs[WebApiDestination Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\Web API Destination.Outputs[WebApiDestination Error Output].Columns[ErrorColumnName]"
                              codePage="1252"
                              dataType="str"
                              length="128"
                              lineageId="Package\Iterate Offices\Sequence Container\Appraisals\Web API Destination.Outputs[WebApiDestination Error Output].Columns[ErrorColumnName]"
                              name="ErrorColumnName" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\Web API Destination.Outputs[WebApiDestination Error Output].Columns[ErrorMessage]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\Appraisals\Web API Destination.Outputs[WebApiDestination Error Output].Columns[ErrorMessage]"
                              name="ErrorMessage" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Appraisals\Web API Destination.Outputs[Response Output]"
                          exclusionGroup="1"
                          name="Response Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Appraisals\Web API Destination.Inputs[WebApiDestinationInput]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\Web API Destination.Outputs[Response Output].Columns[ResponseText]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\Appraisals\Web API Destination.Outputs[Response Output].Columns[ResponseText]"
                              name="ResponseText" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Appraisals\Web API Destination.Outputs[Response Output].Columns[StatusCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Appraisals\Web API Destination.Outputs[Response Output].Columns[StatusCode]"
                              name="StatusCode" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                  </components>
                  <paths>
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Appraisals.Paths[Derived Column Output]"
                      endId="Package\Iterate Offices\Sequence Container\Appraisals\Upsert Appraisals.Inputs[OLE DB Command Input]"
                      name="Derived Column Output"
                      startId="Package\Iterate Offices\Sequence Container\Appraisals\Add accountid and origin.Outputs[Derived Column Output]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Appraisals.Paths[ignore]"
                      endId="Package\Iterate Offices\Sequence Container\Appraisals\Trash Destination.Inputs[TrashDestinationInput]"
                      name="ignore"
                      startId="Package\Iterate Offices\Sequence Container\Appraisals\Insert or Ignore.Outputs[ignore]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Appraisals.Paths[JsonGeneratorTransformOutput]"
                      endId="Package\Iterate Offices\Sequence Container\Appraisals\Web API Destination.Inputs[WebApiDestinationInput]"
                      name="JsonGeneratorTransformOutput"
                      startId="Package\Iterate Offices\Sequence Container\Appraisals\JSON Generator Transform.Outputs[JsonGeneratorTransformOutput]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Appraisals.Paths[JsonParserTransformOutput]"
                      endId="Package\Iterate Offices\Sequence Container\Appraisals\Add accountid and origin.Inputs[Derived Column Input]"
                      name="JsonParserTransformOutput"
                      startId="Package\Iterate Offices\Sequence Container\Appraisals\record.Outputs[JsonParserTransformOutput]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Appraisals.Paths[JsonParserTransformOutput1]"
                      endId="Package\Iterate Offices\Sequence Container\Appraisals\record.Inputs[JsonParserTransformInput]"
                      name="JsonParserTransformOutput"
                      startId="Package\Iterate Offices\Sequence Container\Appraisals\JSON Parser Add id back in.Outputs[JsonParserTransformOutput]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Appraisals.Paths[JsonSourceOutput]"
                      endId="Package\Iterate Offices\Sequence Container\Appraisals\API Sort.Inputs[Sort Input]"
                      name="JsonSourceOutput"
                      startId="Package\Iterate Offices\Sequence Container\Appraisals\Search Appraisals.Outputs[JsonSourceOutput]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Appraisals.Paths[Merge Join Output]"
                      endId="Package\Iterate Offices\Sequence Container\Appraisals\Insert or Ignore.Inputs[Conditional Split Input]"
                      name="Merge Join Output"
                      startId="Package\Iterate Offices\Sequence Container\Appraisals\Merge Join To Find Those to Insert.Outputs[Merge Join Output]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Appraisals.Paths[OLE DB Source Output]"
                      endId="Package\Iterate Offices\Sequence Container\Appraisals\SQL Sort.Inputs[Sort Input]"
                      name="OLE DB Source Output"
                      startId="Package\Iterate Offices\Sequence Container\Appraisals\Existing Appraisals from SQL.Outputs[OLE DB Source Output]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Appraisals.Paths[Response Output]"
                      endId="Package\Iterate Offices\Sequence Container\Appraisals\JSON Parser Add id back in.Inputs[JsonParserTransformInput]"
                      name="Response Output"
                      startId="Package\Iterate Offices\Sequence Container\Appraisals\Web API Destination.Outputs[Response Output]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Appraisals.Paths[Sort Output]"
                      endId="Package\Iterate Offices\Sequence Container\Appraisals\Merge Join To Find Those to Insert.Inputs[Merge Join Right Input]"
                      name="Sort Output"
                      startId="Package\Iterate Offices\Sequence Container\Appraisals\SQL Sort.Outputs[Sort Output]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Appraisals.Paths[Sort Output1]"
                      endId="Package\Iterate Offices\Sequence Container\Appraisals\Merge Join To Find Those to Insert.Inputs[Merge Join Left Input]"
                      name="Sort Output"
                      startId="Package\Iterate Offices\Sequence Container\Appraisals\API Sort.Outputs[Sort Output]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Appraisals.Paths[upsert]"
                      endId="Package\Iterate Offices\Sequence Container\Appraisals\JSON Generator Transform.Inputs[JsonInput1]"
                      name="upsert"
                      startId="Package\Iterate Offices\Sequence Container\Appraisals\Insert or Ignore.Outputs[upsert]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Appraisals.Paths[WebApiDestination Error Output]"
                      endId="Package\Iterate Offices\Sequence Container\Appraisals\Trash Destination 1.Inputs[TrashDestinationInput]"
                      name="WebApiDestination Error Output"
                      startId="Package\Iterate Offices\Sequence Container\Appraisals\Web API Destination.Outputs[WebApiDestination Error Output]" />
                  </paths>
                </pipeline>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Iterate Offices\Sequence Container\Campaign Members"
              DTS:CreationName="Microsoft.Pipeline"
              DTS:Description="Data Flow Task"
              DTS:DTSID="{bd51e43f-008d-4c33-a093-d951e33d9e8b}"
              DTS:ExecutableType="Microsoft.Pipeline"
              DTS:LocaleID="-1"
              DTS:ObjectName="Campaign Members"
              DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:ObjectData>
                <pipeline
                  version="1">
                  <components>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Campaign Members\Add accountid and origin"
                      componentClassID="Microsoft.DerivedColumn"
                      contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                      name="Add accountid and origin"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Campaign Members\Add accountid and origin.Inputs[Derived Column Input]"
                          description="Input to the Derived Column Transformation"
                          name="Derived Column Input">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Campaign Members\Add accountid and origin.Outputs[Derived Column Output]"
                          description="Default Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          name="Derived Column Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Campaign Members\Add accountid and origin.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\Add accountid and origin.Outputs[Derived Column Output].Columns[AccountId]"
                              dataType="i4"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaign Members\Add accountid and origin.Outputs[Derived Column Output].Columns[AccountId]"
                              name="AccountId"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">@[User::RexAccountID]</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">@[User::RexAccountID]</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\Add accountid and origin.Outputs[Derived Column Output].Columns[Origin]"
                              dataType="i4"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaign Members\Add accountid and origin.Outputs[Derived Column Output].Columns[Origin]"
                              name="Origin"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">2</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">2</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Campaign Members\Add accountid and origin.Outputs[Derived Column Error Output]"
                          description="Error Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Derived Column Error Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Campaign Members\Add accountid and origin.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\Add accountid and origin.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaign Members\Add accountid and origin.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\Add accountid and origin.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaign Members\Add accountid and origin.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Campaign Members\API Sort"
                      componentClassID="Microsoft.Sort"
                      contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
                      name="API Sort"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                          name="EliminateDuplicates">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the maximum number of threads to use for sorting."
                          expressionType="Notify"
                          name="MaximumThreads">-1</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Campaign Members\API Sort.Inputs[Sort Input]"
                          name="Sort Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\API Sort.Inputs[Sort Input].Columns[etag]"
                              cachedDataType="wstr"
                              cachedLength="68"
                              cachedName="etag"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaign Members\Search Campaigns.Outputs[JsonSourceOutput].Columns[etag]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\API Sort.Inputs[Sort Input].Columns[id]"
                              cachedDataType="i4"
                              cachedName="id"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaign Members\Search Campaigns.Outputs[JsonSourceOutput].Columns[id]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">1</property>
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Campaign Members\API Sort.Outputs[Sort Output]"
                          isSorted="true"
                          name="Sort Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\API Sort.Outputs[Sort Output].Columns[etag]"
                              dataType="wstr"
                              length="68"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaign Members\API Sort.Outputs[Sort Output].Columns[etag]"
                              name="etag">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Iterate Offices\Sequence Container\Campaign Members\Search Campaigns.Outputs[JsonSourceOutput].Columns[etag]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\API Sort.Outputs[Sort Output].Columns[id]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaign Members\API Sort.Outputs[Sort Output].Columns[id]"
                              name="id"
                              sortKeyPosition="1">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Iterate Offices\Sequence Container\Campaign Members\Search Campaigns.Outputs[JsonSourceOutput].Columns[id]}</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Campaign Members\Build request"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="JSON Generator Transform; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="The JSON generator transform can be used to create JSON document from single or multiple inputs. You can create simple or nested JSON document."
                      name="Build request"
                      version="5">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.Int32"
                          description="Determines JSON format and output mode (e.g. one JSON for all input rows or one JSON for each input row)"
                          expressionType="Notify"
                          name="OutputMode"
                          typeConverter="ZappySys.PowerPack.Transform.JsonGeneratorTransform.JsonOutputMode">2</property>
                        <property
                          dataType="System.String"
                          description="Defines shape of output JSON string"
                          expressionType="Notify"
                          name="LayoutInfo">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;settings ver="3"&gt;
  &lt;dataset id="ds_id729" main="True" inputid="729" readfrominput="True"&gt;&lt;/dataset&gt;
  &lt;map name="method" value="CampaignMembers::read" datatype="String" /&gt;
  &lt;map name="args"&gt;
    &lt;map src="id" name="id" datatype="String" /&gt;
  &lt;/map&gt;
  &lt;map name="strip_response_prefixes" value="true" datatype="Bool" /&gt;
  &lt;map name="token" value="{{User::RexToken}}" /&gt;
&lt;/settings&gt;</property>
                        <property
                          dataType="System.Boolean"
                          description="Do not output attribute if value is NULL. By default null attribute is output as &quot;MyColname&quot; : null "
                          expressionType="Notify"
                          name="DoNotOutputNullAttribute">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indent JSON Text generated by this transform (Pretty Print)"
                          expressionType="Notify"
                          name="IndentOutput">false</property>
                        <property
                          dataType="System.String"
                          description="Default output format for datetime columns"
                          expressionType="Notify"
                          name="DateTimeFormat">yyyy-MM-dd HH:mm:ss</property>
                        <property
                          dataType="System.String"
                          description="Culture setting for this task. This option is useful to control output format for certain data types (e.g. number, decimal) based on regional settings. In USA dot is used for decimal indicator but in Germany it may be comma. Leave this blank if you want to use system default settings."
                          expressionType="Notify"
                          name="Culture"></property>
                        <property
                          dataType="System.Boolean"
                          description="Document Header/Footer text come from upstream column rather than direct string"
                          expressionType="Notify"
                          name="UseColumnForHeaderFooter">false</property>
                        <property
                          dataType="System.String"
                          description="Header text for document (Added before each document in the output)"
                          expressionType="Notify"
                          name="DocumentHeader"></property>
                        <property
                          dataType="System.String"
                          description="Footer text for document (Added after each document in the output)"
                          expressionType="Notify"
                          name="DocumentFooter"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies how many rows to include in each batch (Array records for single dataset array mode). 0=Include all in one batch. This setting is only valid for Mode=[Single Dataset Array]"
                          expressionType="Notify"
                          name="ArrayBatchSize">0</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.JsonGeneratorTransform</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to True if you dont want to output empty nodes of sub document (e.g nested property). This option is only applicable if you enabled DoNotOutputNullProperty. If all child peoprties are NULL for parent node then by default output contains empty nodes (e.g. CountryInfo: { CityInfo: { } } for Json --OR-- &lt;CountryInfo&gt;&lt;CityInfo /&gt;&lt;/CountryInfo&gt; for Xml). You can enable this option to avoid such empty nodes from the output."
                          expressionType="Notify"
                          name="DoNotOutputEmptyNestedAttribute">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to True if you dont want to output empty array nodes when no record found for that array (e.g. &quot;Orders&quot;: [ ] for JSON --OR-- &lt;Orders&gt;&lt;/Orders&gt; for Xml). You can enable this option to avoid such empty nodes from the output."
                          expressionType="Notify"
                          name="DoNotOutputEmptyArrayAttribute">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies encoding for data. If you set CharacterSet property then Encoing is ignored."
                          expressionType="Notify"
                          name="Encoding"
                          typeConverter="ZappySys.Common.EncodingType">2</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Campaign Members\Build request.Inputs[JsonInput1]"
                          name="JsonInput1">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Id for attached dataset with input. Use JSON Layout Editor to see attached dataset"
                              expressionType="Notify"
                              name="DatasetInputId">729</property>
                          </properties>
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\Build request.Inputs[JsonInput1].Columns[etag]"
                              cachedDataType="wstr"
                              cachedLength="68"
                              cachedName="etag"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaign Members\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etag]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\Build request.Inputs[JsonInput1].Columns[id]"
                              cachedDataType="i4"
                              cachedName="id"
                              cachedSortKeyPosition="1"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaign Members\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[id]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\Build request.Inputs[JsonInput1].Columns[etagsql]"
                              cachedDataType="wstr"
                              cachedLength="250"
                              cachedName="etagsql"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaign Members\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etagsql]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Campaign Members\Build request.Inputs[JsonInput2]"
                          name="JsonInput2">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Campaign Members\Build request.Outputs[JsonGeneratorTransformOutput]"
                          errorOrTruncationOperation="Error"
                          name="JsonGeneratorTransformOutput">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\Build request.Outputs[JsonGeneratorTransformOutput].Columns[ZS_JSON_OUT]"
                              dataType="nText"
                              description="This output column contains generated JSON string from JSON generator Transform"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaign Members\Build request.Outputs[JsonGeneratorTransformOutput].Columns[ZS_JSON_OUT]"
                              name="ZS_JSON_OUT" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Campaign Members\Existing Campaign Members from SQL"
                      componentClassID="Microsoft.OLEDBSource"
                      contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                      description="OLE DB Source"
                      name="Existing Campaign Members from SQL"
                      usesDispositions="true"
                      version="7">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">0</property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the database object used to open a rowset."
                          name="OpenRowset">[dbo].[vwContacts]</property>
                        <property
                          dataType="System.String"
                          description="Specifies the variable that contains the name of the database object used to open a rowset."
                          name="OpenRowsetVariable"></property>
                        <property
                          dataType="System.String"
                          description="The SQL command to be executed."
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">SELECT [Id], 
       [etag] as etagsql, 
       [AccountId]
FROM [Entities].[dbo].CampaignMember with (NOLOCK)
WHERE [AccountId] = ?</property>
                        <property
                          dataType="System.String"
                          description="The variable that contains the SQL command to be executed."
                          name="SqlCommandVariable"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Boolean"
                          description="Forces the use of the DefaultCodePage property value when describing character data."
                          name="AlwaysUseDefaultCodePage">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the mode used to access the database."
                          name="AccessMode"
                          typeConverter="AccessMode">2</property>
                        <property
                          dataType="System.String"
                          description="The mappings between the parameters in the SQL command and variables."
                          name="ParameterMapping">"Parameter0:Input",{40C273CD-83FA-4737-B171-10500D92D346};</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Iterate Offices\Sequence Container\Campaign Members\Existing Campaign Members from SQL.Connections[OleDbConnection]"
                          connectionManagerID="Package.ConnectionManagers[colsqlbi01v.Entities]"
                          connectionManagerRefId="Package.ConnectionManagers[colsqlbi01v.Entities]"
                          description="The OLE DB runtime connection used to access the database."
                          name="OleDbConnection" />
                      </connections>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Campaign Members\Existing Campaign Members from SQL.Outputs[OLE DB Source Output]"
                          name="OLE DB Source Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\Existing Campaign Members from SQL.Outputs[OLE DB Source Output].Columns[Id]"
                              dataType="i4"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Campaign Members\Existing Campaign Members from SQL.Outputs[OLE DB Source Output].ExternalColumns[Id]"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaign Members\Existing Campaign Members from SQL.Outputs[OLE DB Source Output].Columns[Id]"
                              name="Id"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\Existing Campaign Members from SQL.Outputs[OLE DB Source Output].Columns[AccountId]"
                              dataType="i2"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Campaign Members\Existing Campaign Members from SQL.Outputs[OLE DB Source Output].ExternalColumns[AccountId]"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaign Members\Existing Campaign Members from SQL.Outputs[OLE DB Source Output].Columns[AccountId]"
                              name="AccountId"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\Existing Campaign Members from SQL.Outputs[OLE DB Source Output].Columns[etagsql]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Campaign Members\Existing Campaign Members from SQL.Outputs[OLE DB Source Output].ExternalColumns[etagsql]"
                              length="250"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaign Members\Existing Campaign Members from SQL.Outputs[OLE DB Source Output].Columns[etagsql]"
                              name="etagsql"
                              truncationRowDisposition="FailComponent" />
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\Existing Campaign Members from SQL.Outputs[OLE DB Source Output].ExternalColumns[Id]"
                              dataType="i4"
                              name="Id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\Existing Campaign Members from SQL.Outputs[OLE DB Source Output].ExternalColumns[AccountId]"
                              codePage="1252"
                              dataType="str"
                              length="4"
                              name="AccountId" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\Existing Campaign Members from SQL.Outputs[OLE DB Source Output].ExternalColumns[etagsql]"
                              dataType="wstr"
                              length="250"
                              name="etagsql" />
                          </externalMetadataColumns>
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Campaign Members\Existing Campaign Members from SQL.Outputs[OLE DB Source Error Output]"
                          isErrorOut="true"
                          name="OLE DB Source Error Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\Existing Campaign Members from SQL.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaign Members\Existing Campaign Members from SQL.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\Existing Campaign Members from SQL.Outputs[OLE DB Source Error Output].Columns[etagsql]"
                              dataType="wstr"
                              length="250"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaign Members\Existing Campaign Members from SQL.Outputs[OLE DB Source Error Output].Columns[etagsql]"
                              name="etagsql" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\Existing Campaign Members from SQL.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaign Members\Existing Campaign Members from SQL.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\Existing Campaign Members from SQL.Outputs[OLE DB Source Error Output].Columns[Id]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaign Members\Existing Campaign Members from SQL.Outputs[OLE DB Source Error Output].Columns[Id]"
                              name="Id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\Existing Campaign Members from SQL.Outputs[OLE DB Source Error Output].Columns[AccountId]"
                              codePage="1252"
                              dataType="str"
                              length="4"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaign Members\Existing Campaign Members from SQL.Outputs[OLE DB Source Error Output].Columns[AccountId]"
                              name="AccountId" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Campaign Members\Insert or Ignore"
                      componentClassID="Microsoft.ConditionalSplit"
                      contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
                      name="Insert or Ignore"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Campaign Members\Insert or Ignore.Inputs[Conditional Split Input]"
                          description="Input to the Conditional Split Transformation"
                          name="Conditional Split Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\Insert or Ignore.Inputs[Conditional Split Input].Columns[etag]"
                              cachedDataType="wstr"
                              cachedLength="68"
                              cachedName="etag"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaign Members\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etag]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\Insert or Ignore.Inputs[Conditional Split Input].Columns[etagsql]"
                              cachedDataType="wstr"
                              cachedLength="250"
                              cachedName="etagsql"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaign Members\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etagsql]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Campaign Members\Insert or Ignore.Outputs[upsert]"
                          description="Output 1 of the Conditional Split Transformation"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          exclusionGroup="1"
                          name="upsert"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Campaign Members\Insert or Ignore.Inputs[Conditional Split Input]"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                              name="Expression">[ISNULL](#{Package\Iterate Offices\Sequence Container\Campaign Members\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etagsql]}) || (#{Package\Iterate Offices\Sequence Container\Campaign Members\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etagsql]}) != #{Package\Iterate Offices\Sequence Container\Campaign Members\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etag]}</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the friendly version of the expression. This expression version uses column names."
                              expressionType="Notify"
                              name="FriendlyExpression">ISNULL(etagsql) || (etagsql) != etag</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                              name="EvaluationOrder">0</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Campaign Members\Insert or Ignore.Outputs[ignore]"
                          description="Output 2 of the Conditional Split Transformation"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          exclusionGroup="1"
                          name="ignore"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Campaign Members\Insert or Ignore.Inputs[Conditional Split Input]"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                              name="Expression">![ISNULL](#{Package\Iterate Offices\Sequence Container\Campaign Members\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etagsql]})</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the friendly version of the expression. This expression version uses column names."
                              expressionType="Notify"
                              name="FriendlyExpression">!ISNULL(etagsql)</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                              name="EvaluationOrder">1</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Campaign Members\Insert or Ignore.Outputs[Conditional Split Default Output]"
                          description="Default Output of the Conditional Split Transformation"
                          exclusionGroup="1"
                          name="Conditional Split Default Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Campaign Members\Insert or Ignore.Inputs[Conditional Split Input]">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              name="IsDefaultOut">true</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Campaign Members\Insert or Ignore.Outputs[Conditional Split Error Output]"
                          description="Error Output of the Conditional Split Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Conditional Split Error Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Campaign Members\Insert or Ignore.Inputs[Conditional Split Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\Insert or Ignore.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaign Members\Insert or Ignore.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\Insert or Ignore.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaign Members\Insert or Ignore.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Campaign Members\JSON Parser Add id back in"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="JSON Parser Transform; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="Parse incoming JSON String into columns. You can also parse and transform single JSON record into multiple rows by filtering data based on JSON Path (e.g. $.Customer.Orders[*])"
                      name="JSON Parser Add id back in"
                      usesDispositions="true"
                      version="2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for any numeric data types"
                          expressionType="Notify"
                          name="TreatBlankNumberAsNull">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for bool data types"
                          expressionType="Notify"
                          name="TreatBlankBoolAsNull">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for any date/time data types"
                          expressionType="Notify"
                          name="TreatBlankDateAsNull">true</property>
                        <property
                          dataType="System.String"
                          description="Sample JSON data used to parse output columns."
                          expressionType="Notify"
                          name="SampleData"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">{
	"method":"MatchProfiles::read",
	"args":
	{
	    "id": 340044
    },
	"strip_response_prefix": true,
	"token": "8a4c-6aa2-cf29-4822-8b51-3dd8-8278-5f64-1824-19443"
}</property>
                        <property
                          dataType="System.Boolean"
                          description="Include all upstream parent columns into output except the one you selected to parse. By default only parsed columns from Input document is included in the output. If you wish to include all other upstream columns in the output too then check this option."
                          expressionType="Notify"
                          name="OutputAllUpstreamColumns">true</property>
                        <property
                          dataType="System.Int32"
                          description="Defines how to handle empty input. By default NULL or Empty input is skipped from parsing."
                          expressionType="Notify"
                          name="EmptyInputProcessingMode"
                          typeConverter="ZappySys.Common.Data.EmptyInputProcessingMode">0</property>
                        <property
                          dataType="System.String"
                          description="Defines how to handle empty input. By default NULL or Empty input is skipped from parsing."
                          expressionType="Notify"
                          name="TreatEmptyInputAs">{ }</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum JSON records to fetch. Set this value to 0 for all records"
                          expressionType="Notify"
                          name="MaxRows">0</property>
                        <property
                          dataType="System.String"
                          description="Enter expression here to filter data.(Example:  $.Users[*].UserName ) This will fetch User names from users records"
                          expressionType="Notify"
                          name="Filter"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.Boolean"
                          description="Use this option to include parent properties (Non array) in the output along with Filtered Rows"
                          expressionType="Notify"
                          name="IncludeParentColumns">true</property>
                        <property
                          dataType="System.Boolean"
                          description="By default child and parent information is not included in the output if children not found for specified expression. For example if you want to extract all orders from all customers nodes then you can type $.Customers[*].Orders[*]. This will fetch all orders from all customers. By default customers records without orders wont be included in the output. If you want to include those customers where orders not found then check this option (Output null information for order attributes). This behavior is similar to LEFT OUTER JOIN in SQL (Left side is parent, right side is child). This option is ***resource intensive*** so only check if you really care about this behavior."
                          expressionType="Notify"
                          name="IncludeParentColumnsWhenChildMissing">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to true if you want to output parent columns which are array. By default any parent column which is an array is not included in output. See also FilterForParentColumnsWithArrayType property if you set this property"
                          expressionType="Notify"
                          name="IncludeParentColumnsWithArrayType">false</property>
                        <property
                          dataType="System.String"
                          description="Filter expression to extract value form parent"
                          expressionType="Notify"
                          name="FilterForParentColumnsWithArrayType"></property>
                        <property
                          dataType="System.String"
                          description="Prefix for parent column name. This option is only valid if you have set IncludeParentColumns=True"
                          expressionType="Notify"
                          name="ParentColumnPrefix">P_</property>
                        <property
                          dataType="System.Boolean"
                          description="Throw error if property name specified in filter expression is missing. By default it will ignore any missing property errors."
                          expressionType="Notify"
                          name="ThrowErrorIfPropertyMissing">false</property>
                        <property
                          dataType="System.Int32"
                          description="This property how many nested levels should be scanned to fetch various properties. 0=Scan all child levels."
                          expressionType="Notify"
                          name="MaxLevelsToScan">0</property>
                        <property
                          dataType="System.String"
                          description="List comma separated property names from JSON document which you want to exclude from output. Specify parent property name to exclude all child nodes."
                          expressionType="Notify"
                          name="ExcludedProperties"></property>
                        <property
                          dataType="System.String"
                          description="Property level separator used in generated property name (separator for outer properties - Above selected filter node). Use this if default separator is producing duplicate property name which is conflicting with existing name."
                          expressionType="Notify"
                          name="LevelSeparator">_</property>
                        <property
                          dataType="System.Boolean"
                          description="Enables deep array flattening for selected filtered hierarchy. When you turn on this property it will flatten each property of each array item and expose as column (e.g. If you have Filter set as $.customers[*] and for each customer you have an array of Addresses then you may see output columns like Addresses.1.City, Addresses.1.State, Addresses.2.City, Addresses.2.State .... Addresses.N.City, Addresses.N.State). You can control how many array items you want to flatten by setting MaxArrayItemsToFlatten property."
                          expressionType="Notify"
                          name="EnableArrayFlattening">false</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum number of array items to flatten. inner array flattening. Adjust this property to control how many columns being generated. This option is ignored if you set EnableArrayFlattening=false"
                          expressionType="Notify"
                          name="MaxArrayItemsToFlatten">10</property>
                        <property
                          dataType="System.String"
                          description="Specifies how custom date formatted strings are parsed when reading JSON."
                          expressionType="Notify"
                          name="DateFormatString"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies how date formatted strings, e.g. Date(1198908717056) and 2012-03-21T05:40Z, are parsed when reading JSON."
                          expressionType="Notify"
                          name="DateParseHandling"
                          typeConverter="ZappySys.Common.DateParseHandling">1</property>
                        <property
                          dataType="System.Boolean"
                          description="Output as raw JSON document rather than parsing individual fields. This option is helpful if you have documents stored in a file and you want to pass them downstream as raw JSON string rather than parsing into columns."
                          expressionType="Notify"
                          name="OutputRawDocument">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indent JSON output so its easy to read."
                          expressionType="Notify"
                          name="IndentOutput">false</property>
                        <property
                          dataType="System.Boolean"
                          description="When this property is true then Column is converted to Row. Pivoted names will appear under  Pivot_Name column and values will appear under Pivot_Value field."
                          expressionType="Notify"
                          name="EnablePivot">false</property>
                        <property
                          dataType="System.Int32"
                          description="Array Transformation you want to apply. Useful for case when you have 2-Dimensional arrays with rows/columns in separate arrays."
                          expressionType="Notify"
                          name="ArrayTransformationType"
                          typeConverter="ZappySys.Json.ArrayTransformType">0</property>
                        <property
                          dataType="System.String"
                          description="Filter expression to use to extract column names for array transformation."
                          expressionType="Notify"
                          name="ArrayTransColumnNameFilter"></property>
                        <property
                          dataType="System.String"
                          description="Filter expression for row values (Not applicable for simple array transformation)."
                          expressionType="Notify"
                          name="ArrayTransRowValueFilter"></property>
                        <property
                          dataType="System.Boolean"
                          description="When you have 2D array but don't have column list specified in a separate array then use this option (e.g. { arr: [[10,11],[21,22]] } )."
                          expressionType="Notify"
                          name="ArrayTransEnableCustomColumns">false</property>
                        <property
                          dataType="System.String"
                          description="When you have 2D array but don't have column list specified in a separate array then use specify column names here. Use comma separated list (e.g col1,col2,col3 ). Column name Order must match value order."
                          expressionType="Notify"
                          name="ArrayTransCustomColumns"></property>
                        <property
                          dataType="System.Int32"
                          description="Metadata scan mode controls how data type and length is determined. By default few records scanned to determine datatype/length. Changing ScanMode affects length/datatype accuracy."
                          expressionType="Notify"
                          name="MetaDataScanMode"
                          typeConverter="ZappySys.Common.Data.MetaDataScanMode">4</property>
                        <property
                          dataType="System.Int32"
                          description="Length for all string column. This option is only valid for MetaDataScanMode=Custom"
                          expressionType="Notify"
                          name="MetaDataCustomLength">1000</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.JsonParserTransform</property>
                        <property
                          dataType="System.Boolean"
                          name="EnableBigNumberHandling">false</property>
                        <property
                          dataType="System.Int32"
                          name="Encoding">0</property>
                        <property
                          dataType="System.String"
                          name="CharacterSet"></property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Campaign Members\JSON Parser Add id back in.Inputs[JsonParserTransformInput]"
                          errorRowDisposition="FailComponent"
                          name="JsonParserTransformInput"
                          truncationRowDisposition="FailComponent">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\JSON Parser Add id back in.Inputs[JsonParserTransformInput].Columns[ZS_JSON_OUT]"
                              cachedDataType="nText"
                              cachedName="ZS_JSON_OUT"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaign Members\Build request.Outputs[JsonGeneratorTransformOutput].Columns[ZS_JSON_OUT]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\JSON Parser Add id back in.Inputs[JsonParserTransformInput].Columns[ResponseText]"
                              cachedDataType="nText"
                              cachedName="ResponseText"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaign Members\Read details.Outputs[Response Output].Columns[ResponseText]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Campaign Members\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[ResponseText]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\JSON Parser Add id back in.Inputs[JsonParserTransformInput].Columns[StatusCode]"
                              cachedDataType="i4"
                              cachedName="StatusCode"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaign Members\Read details.Outputs[Response Output].Columns[StatusCode]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Campaign Members\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[StatusCode]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True" />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Campaign Members\JSON Parser Add id back in.Outputs[JsonParserTransformOutput]"
                          errorOrTruncationOperation="Error"
                          errorRowDisposition="FailComponent"
                          name="JsonParserTransformOutput"
                          truncationRowDisposition="FailComponent">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[StatusCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaign Members\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[StatusCode]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Campaign Members\JSON Parser Add id back in.Inputs[JsonParserTransformInput].Columns[StatusCode]"
                              name="StatusCode" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[ResponseText]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaign Members\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[ResponseText]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Campaign Members\JSON Parser Add id back in.Inputs[JsonParserTransformInput].Columns[ResponseText]"
                              name="ResponseText" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[method]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Campaign Members\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].ExternalColumns[method]"
                              length="76"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaign Members\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[method]"
                              name="method" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[token]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Campaign Members\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].ExternalColumns[token]"
                              length="200"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaign Members\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[token]"
                              name="token" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[args.id]"
                              dataType="i8"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Campaign Members\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].ExternalColumns[args.id]"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaign Members\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[args.id]"
                              name="args.id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[strip_response_prefix]"
                              dataType="bool"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Campaign Members\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].ExternalColumns[strip_response_prefix]"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaign Members\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[strip_response_prefix]"
                              name="strip_response_prefix" />
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].ExternalColumns[method]"
                              dataType="wstr"
                              length="76"
                              name="method" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].ExternalColumns[args.id]"
                              dataType="i8"
                              name="args.id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].ExternalColumns[strip_response_prefix]"
                              dataType="bool"
                              name="strip_response_prefix" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].ExternalColumns[token]"
                              dataType="wstr"
                              length="200"
                              name="token" />
                          </externalMetadataColumns>
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Campaign Members\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output]"
                          isErrorOut="true"
                          name="JsonParserTransform Error Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[StatusCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaign Members\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[StatusCode]"
                              name="StatusCode" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[ResponseText]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaign Members\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[ResponseText]"
                              name="ResponseText" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[method]"
                              dataType="wstr"
                              length="76"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaign Members\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[method]"
                              name="method" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[token]"
                              dataType="wstr"
                              length="200"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaign Members\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[token]"
                              name="token" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[args.id]"
                              dataType="i8"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaign Members\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[args.id]"
                              name="args.id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[strip_response_prefix]"
                              dataType="bool"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaign Members\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[strip_response_prefix]"
                              name="strip_response_prefix" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaign Members\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaign Members\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[ErrorColumnName]"
                              codePage="1252"
                              dataType="str"
                              length="128"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaign Members\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[ErrorColumnName]"
                              name="ErrorColumnName" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[ErrorMessage]"
                              dataType="wstr"
                              length="1024"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaign Members\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[ErrorMessage]"
                              name="ErrorMessage" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[ErrorRawData]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaign Members\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[ErrorRawData]"
                              name="ErrorRawData" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Campaign Members\Merge Join To Find Those to Insert"
                      componentClassID="Microsoft.MergeJoin"
                      contactInfo="Merge Join;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Combine two sorted data flows into one using the FULL, LEFT, or INNER join. We recommend this transformation when data flows can be sorted at their sources."
                      name="Merge Join To Find Those to Insert"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of join to perform."
                          name="JoinType"
                          typeConverter="JoinType">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the number of columns in the ordering key."
                          name="NumKeyColumns">1</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the null values are treated as equal values."
                          name="TreatNullsAsEqual">true</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates the requested maximum buffers per input before blocking."
                          name="MaxBuffersPerInput">5</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Campaign Members\Merge Join To Find Those to Insert.Inputs[Merge Join Left Input]"
                          hasSideEffects="true"
                          name="Merge Join Left Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\Merge Join To Find Those to Insert.Inputs[Merge Join Left Input].Columns[etag]"
                              cachedDataType="wstr"
                              cachedLength="68"
                              cachedName="etag"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaign Members\API Sort.Outputs[Sort Output].Columns[etag]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\Merge Join To Find Those to Insert.Inputs[Merge Join Left Input].Columns[id]"
                              cachedDataType="i4"
                              cachedName="id"
                              cachedSortKeyPosition="1"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaign Members\API Sort.Outputs[Sort Output].Columns[id]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Campaign Members\Merge Join To Find Those to Insert.Inputs[Merge Join Right Input]"
                          hasSideEffects="true"
                          name="Merge Join Right Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\Merge Join To Find Those to Insert.Inputs[Merge Join Right Input].Columns[Id]"
                              cachedDataType="i4"
                              cachedName="Id"
                              cachedSortKeyPosition="1"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaign Members\SQL Sort.Outputs[Sort Output].Columns[Id]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\Merge Join To Find Those to Insert.Inputs[Merge Join Right Input].Columns[etagsql]"
                              cachedDataType="wstr"
                              cachedLength="250"
                              cachedName="etagsql"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaign Members\SQL Sort.Outputs[Sort Output].Columns[etagsql]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Campaign Members\Merge Join To Find Those to Insert.Outputs[Merge Join Output]"
                          isSorted="true"
                          name="Merge Join Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etag]"
                              dataType="wstr"
                              length="68"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaign Members\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etag]"
                              name="etag">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Iterate Offices\Sequence Container\Campaign Members\Merge Join To Find Those to Insert.Inputs[Merge Join Left Input].Columns[etag]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[id]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaign Members\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[id]"
                              name="id"
                              sortKeyPosition="1">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Iterate Offices\Sequence Container\Campaign Members\Merge Join To Find Those to Insert.Inputs[Merge Join Left Input].Columns[id]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etagsql]"
                              dataType="wstr"
                              length="250"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaign Members\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etagsql]"
                              name="etagsql">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Iterate Offices\Sequence Container\Campaign Members\Merge Join To Find Those to Insert.Inputs[Merge Join Right Input].Columns[etagsql]}</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Campaign Members\Read details"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Web API Destination; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="The Web API destination can be used to send data to Web API URL (e.g. Submit or POST data to REST API/SOAP or other HTTP/HTTPS endpoints)"
                      name="Read details"
                      usesDispositions="true"
                      version="5">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.String"
                          description="API URL you want to access"
                          expressionType="Notify"
                          name="HttpRequestUrl">{{User::RexAPIWebURL}}</property>
                        <property
                          dataType="System.String"
                          description="Http Web Request Method (e.g. POST, GET, PUT, LIST, DELETE...). Refer your API documentation if you are not sure which method you have to use."
                          expressionType="Notify"
                          name="HttpRequestMethod">POST</property>
                        <property
                          dataType="System.String"
                          description="Set this if you want to set custom Http headers. You may use variable anywhere in the header value using syntax {{User::YourVarName}}. Syntax of Header key value pair is : &amp;lt;request&amp;gt;&amp;lt;header&amp;gt;&amp;lt;name&amp;gt;x-myheader-1&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;AAA&amp;lt;/value&amp;gt;&amp;lt;/header&amp;gt; &amp;lt;header&amp;gt;&amp;lt;name&amp;gt;x-myheader-2&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;BBB&amp;lt;/value&amp;gt;&amp;lt;/header&amp;gt;&amp;lt;/request&amp;gt;"
                          expressionType="Notify"
                          name="HttpHeaders"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">&lt;request&gt;&lt;header&gt;&lt;name&gt;Accept&lt;/name&gt;&lt;value&gt;*/*&lt;/value&gt;&lt;/header&gt;&lt;header&gt;&lt;name&gt;Cache-Control&lt;/name&gt;&lt;value&gt;no-cache&lt;/value&gt;&lt;/header&gt;&lt;header&gt;&lt;name&gt;X-App-Identifier&lt;/name&gt;&lt;value&gt;client:spicerhaart:{{System::PackageName}}:{{System::TaskName}}&lt;/value&gt;&lt;/header&gt;&lt;/request&gt;</property>
                        <property
                          dataType="System.String"
                          description="User defined data you wish to send along with your HTTP Request (e.g. Upload file data, Form POST data). Usually you have to set content-type of your data but if you select RequestMethod=POST then system will automatically set content-type=application/x-www-form-urlencoded."
                          expressionType="Notify"
                          name="HttpRequestData"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies content type for data you wish to POST. If you select Default option then system default content type will be used (i.e. application/x-www-form-urlencoded). If you specify Content-Type header along with this option then header value takes precedence."
                          expressionType="Notify"
                          name="HttpRequestContentType"
                          typeConverter="ZappySys.Common.Web.HttpRequestContentType">2</property>
                        <property
                          dataType="System.Boolean"
                          description="If this option is true then component will continue without exception on 404 error (Url not found). This allows you to consume data gracefully."
                          expressionType="Notify"
                          name="ContinueOnUrlNotFoundError">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Ignore SSL certificate related errors. Example: if you getting SSL/TLS errors because of certificate expired or certificate is not from trusted authority or certificate is self-signed. By checking this option you will not get SSL/TLS error."
                          expressionType="Notify"
                          name="IgnoreCertificateErrors">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Allow unsecure ciphers/suites and curves for SSLS/TLS communication. Use this option to communicate with web servers which needs legacy / unsecured ciphers support. This option is only trigged when you change default SSL/TLS Version on advanced settings tab."
                          expressionType="Notify"
                          name="AllowUnsecureSuite">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Enable support for gzip or deflate compression. When you check this option compressed response automatically de-compressed saving bandwidth. This option is only valid if web server supports compressed response stream. Check your API documentation for more information."
                          expressionType="Notify"
                          name="EnableCompressionSupport">true</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies which security protocol is supported for HTTPS communication. Using this option you can enable legacy protocol or enforce to use latest version of security protocol (Note: TLS 1.2 is only supported in SSIS 2014 or Higher)."
                          expressionType="Notify"
                          name="SecurityProtocol"
                          typeConverter="ZappySys.PowerPack.Common.HttpsSecurityProtocolType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Wait time in milliseconds (Pause after each request). 0=No wait. Use this delay time if your API has limit on how many requests you can make in certain time frame."
                          expressionType="Notify"
                          name="WaitTime">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you redirect error to error output by default you get additional information in ErrorMessage column. Check this option if you need exact Response Body (Useful if its in JSON/XML format which needs to be parsed for additional information for later step)."
                          expressionType="Notify"
                          name="OnErrorOutputResponseBody">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Enable multiple requests using parallel threads."
                          expressionType="Notify"
                          name="EnableParallelRequests">true</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum parallel threads to use for processing multiple web requests."
                          expressionType="Notify"
                          name="MaxParallelThreads">3</property>
                        <property
                          dataType="System.Boolean"
                          description="By default one request is sent for each input row. If your API supports multiple records in a single call via HTTP Body then enable this setting. See also BodyBatchSize, BodyHeader, BodyFooter and BodyRowSeparator property."
                          expressionType="Notify"
                          name="EnableBodyBatch">false</property>
                        <property
                          dataType="System.String"
                          description="When you have to wrap input content between opening and closing tags for each call then set this property to specify opening for body content. For Example if you want to build Body like this (send max 100 rows per call) ==&gt; { records : [ {...}, {...}, {...} ] } then you can set BatchSize=100, BodyHeader as &quot;{ records: [&quot; , BodyFooter as &quot;] }&quot; and BodyRowSeperator as comma {,}. This property is ignored if EnableBodyBatch=false."
                          expressionType="Notify"
                          name="BodyHeader"></property>
                        <property
                          dataType="System.String"
                          description="When you have to wrap input content between opening and closing tags for each call then set this property to specify closing for body content. For Example if you want to build Body like this (send max 100 rows per call) ==&gt; { records : [ {...}, {...}, {...} ] } then you can set BatchSize=100, BodyHeader as &quot;{ records: [&quot; , BodyFooter as &quot;] }&quot; and BodyRowSeperator as comma {,}. This property is ignored if EnableBodyBatch=false."
                          expressionType="Notify"
                          name="BodyFooter"></property>
                        <property
                          dataType="System.Int32"
                          description="If your API supports multiple records via HTTP Body then change this setting &gt; 1 to include multiple upstream records into single call. See also BodyHeader, BodyFooter and BodyRowSeparator property. This property is ignored if EnableBodyBatch=false."
                          expressionType="Notify"
                          name="BodyBatchSize">100</property>
                        <property
                          dataType="System.String"
                          description="When you submit multiple rows in a batch you can separate multiple documents / records using custom separator (e.g. in JSON Array you can use comma {,} as record separator if POST document is in array format [ {...}, {...}, {...} ] ). For last row of batch blank separator is used."
                          expressionType="Notify"
                          name="BodyRowSeparator"></property>
                        <property
                          dataType="System.Boolean"
                          description="Returns response data as binary data (e.g. Byte Array). Check this option is response is Zip file, Image file or any non text data which needs to be exported as raw data without any encoding."
                          expressionType="Notify"
                          name="TreatResponseAsBinary">false</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.WebApiDestination</property>
                        <property
                          dataType="System.Boolean"
                          description="Check this option if you want to upload file(s) (i.e. POST RAW file data) or send data using Multi-Part encoding method (i.e. Content-Type: multipart/form-data). Multi-Part request allows you to mix key/value and upload files in same request. On the other hand raw upload allows only single file upload (without any key/value) &#xA;&#xA;==== Raw Upload (Content-Type: application/octet-stream) =====   &#xA;To upload single file in raw mode check this option and specify full file path starting with @ sign in the Body (e.g.  @c:\data\myfile.zip ) &#xA;&#xA;==== Form-Data / Multipart Upload (Content-Type: multipart/form-data) =====   &#xA;To treat your Request data as multi part fields you must specify key/value pairs separated by new lines into RequestData field (i.e. Body). Each key value pair is entered on new-line and key/value are separated using equal sign (=). Preceding and trailing spaces are ignored also blank lines are ignored. &#xA;If field value has some any special character(s) then use escape sequence (e.g. For NewLine: \r\n, For Tab: \t, For at (@): \@). When value of any field starts with at sign (@) its automatically treated as File you want to upload. By default file content type is determined based on extension however you can supply content type manually for any field using this way [ fieldname.Content-Type=some content type ]. In below example we have supplied Content-Type for file2 and SomeField1, all other fields are using default content-type.&#xA;See below Example of uploading multiple files along with additional fields.&#xA;&#xA;file1=@c:\data\Myfile1.txt&#xA;file2=@c:\data\Myfile2.json&#xA;file2.Content-Type=application/json&#xA;SomeField1=aaaaaaa&#xA;SomeField1.Content-Type=text/plain&#xA;SomeField2=12345&#xA;SomeFieldWithNewLineAndTab=This is line1\r\nThis is line2\r\nThis is \ttab \ttab \ttab&#xA;SomeFieldStartingWithAtSign=\@MyTwitterHandle&#xA;"
                          expressionType="Notify"
                          name="IsMultiPartUpload">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Enable this option if your server is expecting &#xA; (i.e. CRLF) after last Multi-Part boundary in the Body. This option is only applicable if you enabled IsMultiPartUpload and sending data in Key=value format (i.e. Mutipart). For raw file upload this option has no effect."
                          expressionType="Notify"
                          name="AddMultiPartPostamble">false</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Iterate Offices\Sequence Container\Campaign Members\Read details.Connections[Connection]"
                          connectionManagerID="Package.ConnectionManagers[HTTP 1]"
                          connectionManagerRefId="Package.ConnectionManagers[HTTP 1]"
                          description="Connection manager for authentication (e.g. HTTP or OAuth Connection)"
                          name="Connection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Campaign Members\Read details.Inputs[WebApiDestinationInput]"
                          errorRowDisposition="RedirectRow"
                          hasSideEffects="true"
                          name="WebApiDestinationInput"
                          truncationRowDisposition="RedirectRow">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\Read details.Inputs[WebApiDestinationInput].Columns[ZS_JSON_OUT]"
                              cachedDataType="nText"
                              cachedName="ZS_JSON_OUT"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Campaign Members\Read details.Inputs[WebApiDestinationInput].ExternalColumns[HttpRequestData]"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaign Members\Build request.Outputs[JsonGeneratorTransformOutput].Columns[ZS_JSON_OUT]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\Read details.Inputs[WebApiDestinationInput].ExternalColumns[HttpRequestUrl]"
                              dataType="wstr"
                              length="2000"
                              name="HttpRequestUrl" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\Read details.Inputs[WebApiDestinationInput].ExternalColumns[HttpRequestData]"
                              dataType="nText"
                              name="HttpRequestData" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\Read details.Inputs[WebApiDestinationInput].ExternalColumns[HttpHeaders]"
                              dataType="wstr"
                              length="2000"
                              name="HttpHeaders" />
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Campaign Members\Read details.Outputs[WebApiDestination Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="WebApiDestination Error Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Campaign Members\Read details.Inputs[WebApiDestinationInput]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\Read details.Outputs[WebApiDestination Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaign Members\Read details.Outputs[WebApiDestination Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\Read details.Outputs[WebApiDestination Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaign Members\Read details.Outputs[WebApiDestination Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\Read details.Outputs[WebApiDestination Error Output].Columns[ErrorColumnName]"
                              codePage="1252"
                              dataType="str"
                              length="128"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaign Members\Read details.Outputs[WebApiDestination Error Output].Columns[ErrorColumnName]"
                              name="ErrorColumnName" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\Read details.Outputs[WebApiDestination Error Output].Columns[ErrorMessage]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaign Members\Read details.Outputs[WebApiDestination Error Output].Columns[ErrorMessage]"
                              name="ErrorMessage" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Campaign Members\Read details.Outputs[Response Output]"
                          exclusionGroup="1"
                          name="Response Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Campaign Members\Read details.Inputs[WebApiDestinationInput]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\Read details.Outputs[Response Output].Columns[ResponseText]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaign Members\Read details.Outputs[Response Output].Columns[ResponseText]"
                              name="ResponseText" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\Read details.Outputs[Response Output].Columns[StatusCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaign Members\Read details.Outputs[Response Output].Columns[StatusCode]"
                              name="StatusCode" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Campaign Members\record"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="JSON Parser Transform; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="Parse incoming JSON String into columns. You can also parse and transform single JSON record into multiple rows by filtering data based on JSON Path (e.g. $.Customer.Orders[*])"
                      name="record"
                      usesDispositions="true"
                      version="2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">3</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for any numeric data types"
                          expressionType="Notify"
                          name="TreatBlankNumberAsNull">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for bool data types"
                          expressionType="Notify"
                          name="TreatBlankBoolAsNull">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for any date/time data types"
                          expressionType="Notify"
                          name="TreatBlankDateAsNull">true</property>
                        <property
                          dataType="System.String"
                          description="Sample JSON data used to parse output columns."
                          expressionType="Notify"
                          name="SampleData"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">{"result":{"system_record_state":"active","system_ctime":1547732441,"system_modtime":1547732441,"system_completed_time":null,"reminder_description":"Send newsletter","reminder_date":"2019-01-17","track_instance_id":"953fc27c-191b-47d4-9c9f-6dd36c69f7ed","recur_frequency":null,"recur_unit":null,"recur_week_day":null,"recur_month_type":null,"recur_month_day":null,"recur_month_week_number":null,"recur_after_mode":null,"recurring_reminder_id":null,"recur_stop_after_date":null,"scheduled_send":null,"etag":"4932-1547732441","deferred":null,"security_user_rights":["read","update","purge"],"scheduled_send_time":null,"scheduled_send_connection_id":null,"remindee":{"id":"record_owner","type":"system","display":"Record Owner"},"system_modified_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"system_created_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"contact":{"system_record_state":"active","system_ctime":"1547052879","system_modtime":"1594741628","name":"Laura Sullivan","email_address":"lindsay.davey@spicerhaart.co.uk","phone_number":"07769 661864","fax_number":null,"is_dnd":null,"type":"person","last_contacted_date":"2020-03-02","name_last":"Sullivan","address_postal":"104 Walton Way,\nNEWBURY, RG14 2LJ","address":"104 Walton Way,\nNEWBURY, RG14 2LJ","interest_level":null,"marketing_birthday":null,"marketing_enquiry_source":"Direct Mail","marketing_gender":"female","marketing_postcode":null,"name_legal":"Laura Sullivan","name_salutation":"Laura Sullivan","name_addressee":"Laura Sullivan","system_owner_user":{"id":"18544","name":"Julie Hodgson","first_name":"Julie","last_name":"Hodgson","email_address":"julie.hodgson@haart.co.uk"},"contact_image":null,"marketing_enquiry_method":{"id":"26731","text":"Email"},"etag":"38710-1594741628","id":"38710"},"market_lead":null,"property":null,"project":null,"project_stage":null,"listing":null,"template":null,"track":{"track_name":"ML- Cooling Off","track_color":"#84c6f1","id":2,"instance_id":"953fc27c-191b-47d4-9c9f-6dd36c69f7ed"},"system_completed_by_user":null,"mail_merge_event":null,"scheduled_send_from_user":null,"reminder_type":{"id":"email","text":"Email"},"priority":{"id":"default","text":"Default"},"id":4932},"error":null}
</property>
                        <property
                          dataType="System.Boolean"
                          description="Include all upstream parent columns into output except the one you selected to parse. By default only parsed columns from Input document is included in the output. If you wish to include all other upstream columns in the output too then check this option."
                          expressionType="Notify"
                          name="OutputAllUpstreamColumns">true</property>
                        <property
                          dataType="System.Int32"
                          description="Defines how to handle empty input. By default NULL or Empty input is skipped from parsing."
                          expressionType="Notify"
                          name="EmptyInputProcessingMode"
                          typeConverter="ZappySys.Common.Data.EmptyInputProcessingMode">0</property>
                        <property
                          dataType="System.String"
                          description="Defines how to handle empty input. By default NULL or Empty input is skipped from parsing."
                          expressionType="Notify"
                          name="TreatEmptyInputAs">{ }</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum JSON records to fetch. Set this value to 0 for all records"
                          expressionType="Notify"
                          name="MaxRows">0</property>
                        <property
                          dataType="System.String"
                          description="Enter expression here to filter data.(Example:  $.Users[*].UserName ) This will fetch User names from users records"
                          expressionType="Notify"
                          name="Filter"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">$.result</property>
                        <property
                          dataType="System.Boolean"
                          description="Use this option to include parent properties (Non array) in the output along with Filtered Rows"
                          expressionType="Notify"
                          name="IncludeParentColumns">true</property>
                        <property
                          dataType="System.Boolean"
                          description="By default child and parent information is not included in the output if children not found for specified expression. For example if you want to extract all orders from all customers nodes then you can type $.Customers[*].Orders[*]. This will fetch all orders from all customers. By default customers records without orders wont be included in the output. If you want to include those customers where orders not found then check this option (Output null information for order attributes). This behavior is similar to LEFT OUTER JOIN in SQL (Left side is parent, right side is child). This option is ***resource intensive*** so only check if you really care about this behavior."
                          expressionType="Notify"
                          name="IncludeParentColumnsWhenChildMissing">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to true if you want to output parent columns which are array. By default any parent column which is an array is not included in output. See also FilterForParentColumnsWithArrayType property if you set this property"
                          expressionType="Notify"
                          name="IncludeParentColumnsWithArrayType">false</property>
                        <property
                          dataType="System.String"
                          description="Filter expression to extract value form parent"
                          expressionType="Notify"
                          name="FilterForParentColumnsWithArrayType"></property>
                        <property
                          dataType="System.String"
                          description="Prefix for parent column name. This option is only valid if you have set IncludeParentColumns=True"
                          expressionType="Notify"
                          name="ParentColumnPrefix">P_</property>
                        <property
                          dataType="System.Boolean"
                          description="Throw error if property name specified in filter expression is missing. By default it will ignore any missing property errors."
                          expressionType="Notify"
                          name="ThrowErrorIfPropertyMissing">false</property>
                        <property
                          dataType="System.Int32"
                          description="This property how many nested levels should be scanned to fetch various properties. 0=Scan all child levels."
                          expressionType="Notify"
                          name="MaxLevelsToScan">0</property>
                        <property
                          dataType="System.String"
                          description="List comma separated property names from JSON document which you want to exclude from output. Specify parent property name to exclude all child nodes."
                          expressionType="Notify"
                          name="ExcludedProperties"></property>
                        <property
                          dataType="System.String"
                          description="Property level separator used in generated property name (separator for outer properties - Above selected filter node). Use this if default separator is producing duplicate property name which is conflicting with existing name."
                          expressionType="Notify"
                          name="LevelSeparator">_</property>
                        <property
                          dataType="System.Boolean"
                          description="Enables deep array flattening for selected filtered hierarchy. When you turn on this property it will flatten each property of each array item and expose as column (e.g. If you have Filter set as $.customers[*] and for each customer you have an array of Addresses then you may see output columns like Addresses.1.City, Addresses.1.State, Addresses.2.City, Addresses.2.State .... Addresses.N.City, Addresses.N.State). You can control how many array items you want to flatten by setting MaxArrayItemsToFlatten property."
                          expressionType="Notify"
                          name="EnableArrayFlattening">false</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum number of array items to flatten. inner array flattening. Adjust this property to control how many columns being generated. This option is ignored if you set EnableArrayFlattening=false"
                          expressionType="Notify"
                          name="MaxArrayItemsToFlatten">10</property>
                        <property
                          dataType="System.String"
                          description="Specifies how custom date formatted strings are parsed when reading JSON."
                          expressionType="Notify"
                          name="DateFormatString"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies how date formatted strings, e.g. Date(1198908717056) and 2012-03-21T05:40Z, are parsed when reading JSON."
                          expressionType="Notify"
                          name="DateParseHandling"
                          typeConverter="ZappySys.Common.DateParseHandling">1</property>
                        <property
                          dataType="System.Boolean"
                          description="Output as raw JSON document rather than parsing individual fields. This option is helpful if you have documents stored in a file and you want to pass them downstream as raw JSON string rather than parsing into columns."
                          expressionType="Notify"
                          name="OutputRawDocument">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Indent JSON output so its easy to read."
                          expressionType="Notify"
                          name="IndentOutput">true</property>
                        <property
                          dataType="System.Boolean"
                          description="When this property is true then Column is converted to Row. Pivoted names will appear under  Pivot_Name column and values will appear under Pivot_Value field."
                          expressionType="Notify"
                          name="EnablePivot">false</property>
                        <property
                          dataType="System.Int32"
                          description="Array Transformation you want to apply. Useful for case when you have 2-Dimensional arrays with rows/columns in separate arrays."
                          expressionType="Notify"
                          name="ArrayTransformationType"
                          typeConverter="ZappySys.Json.ArrayTransformType">0</property>
                        <property
                          dataType="System.String"
                          description="Filter expression to use to extract column names for array transformation."
                          expressionType="Notify"
                          name="ArrayTransColumnNameFilter"></property>
                        <property
                          dataType="System.String"
                          description="Filter expression for row values (Not applicable for simple array transformation)."
                          expressionType="Notify"
                          name="ArrayTransRowValueFilter"></property>
                        <property
                          dataType="System.Boolean"
                          description="When you have 2D array but don't have column list specified in a separate array then use this option (e.g. { arr: [[10,11],[21,22]] } )."
                          expressionType="Notify"
                          name="ArrayTransEnableCustomColumns">false</property>
                        <property
                          dataType="System.String"
                          description="When you have 2D array but don't have column list specified in a separate array then use specify column names here. Use comma separated list (e.g col1,col2,col3 ). Column name Order must match value order."
                          expressionType="Notify"
                          name="ArrayTransCustomColumns"></property>
                        <property
                          dataType="System.Int32"
                          description="Metadata scan mode controls how data type and length is determined. By default few records scanned to determine datatype/length. Changing ScanMode affects length/datatype accuracy."
                          expressionType="Notify"
                          name="MetaDataScanMode"
                          typeConverter="ZappySys.Common.Data.MetaDataScanMode">4</property>
                        <property
                          dataType="System.Int32"
                          description="Length for all string column. This option is only valid for MetaDataScanMode=Custom"
                          expressionType="Notify"
                          name="MetaDataCustomLength">1000</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.JsonParserTransform</property>
                        <property
                          dataType="System.Boolean"
                          name="EnableBigNumberHandling">false</property>
                        <property
                          dataType="System.Int32"
                          name="Encoding">0</property>
                        <property
                          dataType="System.String"
                          name="CharacterSet"></property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Campaign Members\record.Inputs[JsonParserTransformInput]"
                          errorRowDisposition="FailComponent"
                          name="JsonParserTransformInput"
                          truncationRowDisposition="FailComponent">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\record.Inputs[JsonParserTransformInput].Columns[ResponseText]"
                              cachedDataType="nText"
                              cachedName="ResponseText"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaign Members\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[ResponseText]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\record.Inputs[JsonParserTransformInput].Columns[StatusCode]"
                              cachedDataType="i4"
                              cachedName="StatusCode"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaign Members\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[StatusCode]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Campaign Members\record.Outputs[JsonParserTransformOutput].Columns[StatusCode]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\record.Inputs[JsonParserTransformInput].Columns[method]"
                              cachedDataType="wstr"
                              cachedLength="76"
                              cachedName="method"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaign Members\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[method]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Campaign Members\record.Outputs[JsonParserTransformOutput].Columns[method]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\record.Inputs[JsonParserTransformInput].Columns[token]"
                              cachedDataType="wstr"
                              cachedLength="200"
                              cachedName="token"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaign Members\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[token]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Campaign Members\record.Outputs[JsonParserTransformOutput].Columns[token]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\record.Inputs[JsonParserTransformInput].Columns[args.id]"
                              cachedDataType="i8"
                              cachedName="args.id"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaign Members\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[args.id]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Campaign Members\record.Outputs[JsonParserTransformOutput].Columns[args.id]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\record.Inputs[JsonParserTransformInput].Columns[strip_response_prefix]"
                              cachedDataType="bool"
                              cachedName="strip_response_prefix"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaign Members\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[strip_response_prefix]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Campaign Members\record.Outputs[JsonParserTransformOutput].Columns[strip_response_prefix]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True" />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Campaign Members\record.Outputs[JsonParserTransformOutput]"
                          errorOrTruncationOperation="Error"
                          errorRowDisposition="FailComponent"
                          name="JsonParserTransformOutput"
                          truncationRowDisposition="FailComponent">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\record.Outputs[JsonParserTransformOutput].Columns[strip_response_prefix]"
                              dataType="bool"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaign Members\record.Outputs[JsonParserTransformOutput].Columns[strip_response_prefix]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Campaign Members\record.Inputs[JsonParserTransformInput].Columns[strip_response_prefix]"
                              name="strip_response_prefix" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\record.Outputs[JsonParserTransformOutput].Columns[args.id]"
                              dataType="i8"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaign Members\record.Outputs[JsonParserTransformOutput].Columns[args.id]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Campaign Members\record.Inputs[JsonParserTransformInput].Columns[args.id]"
                              name="args.id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\record.Outputs[JsonParserTransformOutput].Columns[token]"
                              dataType="wstr"
                              length="200"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaign Members\record.Outputs[JsonParserTransformOutput].Columns[token]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Campaign Members\record.Inputs[JsonParserTransformInput].Columns[token]"
                              name="token" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\record.Outputs[JsonParserTransformOutput].Columns[method]"
                              dataType="wstr"
                              length="76"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaign Members\record.Outputs[JsonParserTransformOutput].Columns[method]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Campaign Members\record.Inputs[JsonParserTransformInput].Columns[method]"
                              name="method" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\record.Outputs[JsonParserTransformOutput].Columns[StatusCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaign Members\record.Outputs[JsonParserTransformOutput].Columns[StatusCode]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Campaign Members\record.Inputs[JsonParserTransformInput].Columns[StatusCode]"
                              name="StatusCode" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\record.Outputs[JsonParserTransformOutput].Columns[__DOCUMENT__]"
                              dataType="nText"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Campaign Members\record.Outputs[JsonParserTransformOutput].ExternalColumns[__DOCUMENT__]"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaign Members\record.Outputs[JsonParserTransformOutput].Columns[__DOCUMENT__]"
                              name="__DOCUMENT__" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\record.Outputs[JsonParserTransformOutput].Columns[P_error]"
                              dataType="nText"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Campaign Members\record.Outputs[JsonParserTransformOutput].ExternalColumns[P_error]"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaign Members\record.Outputs[JsonParserTransformOutput].Columns[P_error]"
                              name="P_error" />
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\record.Outputs[JsonParserTransformOutput].ExternalColumns[P_error]"
                              dataType="nText"
                              name="P_error" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\record.Outputs[JsonParserTransformOutput].ExternalColumns[__DOCUMENT__]"
                              dataType="nText"
                              name="__DOCUMENT__" />
                          </externalMetadataColumns>
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Campaign Members\record.Outputs[JsonParserTransform Error Output]"
                          isErrorOut="true"
                          name="JsonParserTransform Error Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\record.Outputs[JsonParserTransform Error Output].Columns[strip_response_prefix]"
                              dataType="bool"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaign Members\record.Outputs[JsonParserTransform Error Output].Columns[strip_response_prefix]"
                              name="strip_response_prefix" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\record.Outputs[JsonParserTransform Error Output].Columns[args.id]"
                              dataType="i8"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaign Members\record.Outputs[JsonParserTransform Error Output].Columns[args.id]"
                              name="args.id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\record.Outputs[JsonParserTransform Error Output].Columns[token]"
                              dataType="wstr"
                              length="200"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaign Members\record.Outputs[JsonParserTransform Error Output].Columns[token]"
                              name="token" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\record.Outputs[JsonParserTransform Error Output].Columns[method]"
                              dataType="wstr"
                              length="76"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaign Members\record.Outputs[JsonParserTransform Error Output].Columns[method]"
                              name="method" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\record.Outputs[JsonParserTransform Error Output].Columns[StatusCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaign Members\record.Outputs[JsonParserTransform Error Output].Columns[StatusCode]"
                              name="StatusCode" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\record.Outputs[JsonParserTransform Error Output].Columns[__DOCUMENT__]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaign Members\record.Outputs[JsonParserTransform Error Output].Columns[__DOCUMENT__]"
                              name="__DOCUMENT__" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\record.Outputs[JsonParserTransform Error Output].Columns[P_error]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaign Members\record.Outputs[JsonParserTransform Error Output].Columns[P_error]"
                              name="P_error" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\record.Outputs[JsonParserTransform Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaign Members\record.Outputs[JsonParserTransform Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\record.Outputs[JsonParserTransform Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaign Members\record.Outputs[JsonParserTransform Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\record.Outputs[JsonParserTransform Error Output].Columns[ErrorColumnName]"
                              codePage="1252"
                              dataType="str"
                              length="128"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaign Members\record.Outputs[JsonParserTransform Error Output].Columns[ErrorColumnName]"
                              name="ErrorColumnName" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\record.Outputs[JsonParserTransform Error Output].Columns[ErrorMessage]"
                              dataType="wstr"
                              length="1024"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaign Members\record.Outputs[JsonParserTransform Error Output].Columns[ErrorMessage]"
                              name="ErrorMessage" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\record.Outputs[JsonParserTransform Error Output].Columns[ErrorRawData]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaign Members\record.Outputs[JsonParserTransform Error Output].Columns[ErrorRawData]"
                              name="ErrorRawData" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Campaign Members\Search Campaigns"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="JSON Source (REST API or File); ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="The JSON source is used to read data from JSON files, RESTful Web Service or direct JSON String."
                      name="Search Campaigns"
                      usesDispositions="true"
                      version="33">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for any numeric data types"
                          expressionType="Notify"
                          name="TreatBlankNumberAsNull">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for bool data types"
                          expressionType="Notify"
                          name="TreatBlankBoolAsNull">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for any date/time data types"
                          expressionType="Notify"
                          name="TreatBlankDateAsNull">true</property>
                        <property
                          dataType="System.Int32"
                          description="Defines how to read the JSON file or direct string"
                          expressionType="Notify"
                          name="AccessMode"
                          typeConverter="ZappySys.Common.Ssis.FileValueAccessMode">3</property>
                        <property
                          dataType="System.String"
                          description="Defines how to read the JSON file or direct string"
                          expressionType="Notify"
                          name="DirectValue"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.String"
                          description="Variable name which holds JSON string"
                          expressionType="Notify"
                          name="ValueVariable"
                          typeConverter="ZappySys.PowerPack.Converters.VariableEditor,ZappySys.PowerPack130.UI,Version=1.0.0.0,Culture=neutral,PublicKeyToken=1903265a93eae502"></property>
                        <property
                          dataType="System.String"
                          description="Variable name which holds data file path or url"
                          expressionType="Notify"
                          name="PathVariable"
                          typeConverter="ZappySys.PowerPack.Converters.VariableEditor,ZappySys.PowerPack130.UI,Version=1.0.0.0,Culture=neutral,PublicKeyToken=1903265a93eae502">User::RexAPIWebURL</property>
                        <property
                          dataType="System.String"
                          description="JSON file file path (e.g. c:\data\myfile.json) or pattern to process multiple files (e.g. c:\data\*.json)"
                          expressionType="Notify"
                          name="DirectPath"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">https://api.uk.rexsoftware.com/rex.php</property>
                        <property
                          dataType="System.Boolean"
                          description="Include files from sub folders too."
                          expressionType="Notify"
                          name="Recursive">false</property>
                        <property
                          dataType="System.String"
                          description="Set this if you want to set custom Http headers. You may use variable anywhere in the header value using syntax {{User::YourVarName}}. Syntax of Header key value pair is : &amp;lt;request&amp;gt;&amp;lt;header&amp;gt;&amp;lt;name&amp;gt;x-myheader-1&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;AAA&amp;lt;/value&amp;gt;&amp;lt;/header&amp;gt; &amp;lt;header&amp;gt;&amp;lt;name&amp;gt;x-myheader-2&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;BBB&amp;lt;/value&amp;gt;&amp;lt;/header&amp;gt;&amp;lt;/request&amp;gt;"
                          expressionType="Notify"
                          name="HttpHeaders">&lt;request&gt;&lt;header&gt;&lt;name&gt;Accept&lt;/name&gt;&lt;value&gt;*/*&lt;/value&gt;&lt;/header&gt;&lt;header&gt;&lt;name&gt;Cache-Control&lt;/name&gt;&lt;value&gt;no-cache&lt;/value&gt;&lt;/header&gt;&lt;header&gt;&lt;name&gt;X-App-Identifier&lt;/name&gt;&lt;value&gt;client:spicerhaart:{{System::PackageName}}:{{System::TaskName}}&lt;/value&gt;&lt;/header&gt;&lt;/request&gt;</property>
                        <property
                          dataType="System.String"
                          description="User defined data you wish to send along with your HTTP Request (e.g. Upload file data, Form POST data). Usually you have to set content-type of your data but if you select RequestMethod=POST then system will automatically set content-type=application/x-www-form-urlencoded."
                          expressionType="Notify"
                          name="HttpRequestData">{
"method":"CampaignMembers::search",
"args":{
	"criteria": 
	[
		
	],
	"result_format":"etags",
	"limit":50000,
	"offset": &lt;%page%&gt;
	 },
"strip_response_prefixes": true,
"token": "{{User::RexToken}}"
}</property>
                        <property
                          dataType="System.String"
                          description="Http Web Request Method (e.g. POST, GET, PUT, LIST, DELETE...). Refer your API documentation if you are not sure which method you have to use."
                          expressionType="Notify"
                          name="HttpRequestMethod">POST</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies content type for data you wish to POST. If you select Default option then system default content type will be used (i.e. application/x-www-form-urlencoded). If you specify Content-Type header along with this option then header value takes precedence."
                          expressionType="Notify"
                          name="HttpRequestContentType"
                          typeConverter="ZappySys.Common.Web.HttpRequestContentType">2</property>
                        <property
                          dataType="System.Int32"
                          description="Data format coming from HTTP Response. This is useful for example when you have OData service and you want to automatically consume all pages of data using odata.netUrl. Setting JsonFormat=Odata will automatically do it for you. This setting is only applicable if JSON is coming from HTTP WebRequest."
                          expressionType="Notify"
                          name="JsonFormat"
                          typeConverter="ZappySys.Json.JsonFormat">1</property>
                        <property
                          dataType="System.Boolean"
                          description="Enable custom proxy settings (If this is not set then system default proxy will be used. To disable proxy totally uncheck this option and check DoNotUseDefaultProxy option if available)"
                          expressionType="Notify"
                          name="UseProxy">false</property>
                        <property
                          dataType="System.String"
                          description="Web URL of Proxy server (including port  if necessary). [e.g. http://myproxyserver:8080/]"
                          expressionType="Notify"
                          name="ProxyUrl"></property>
                        <property
                          dataType="System.Boolean"
                          description="Enable passing userid and password to proxy server"
                          expressionType="Notify"
                          name="UseProxyCreds">false</property>
                        <property
                          dataType="System.String"
                          description="Proxy username"
                          expressionType="Notify"
                          name="ProxyUserName"></property>
                        <property
                          dataType="System.String"
                          description="Proxy password"
                          expressionType="Notify"
                          name="ProxyPassword"></property>
                        <property
                          dataType="System.String"
                          description="If Service response support pagination using some sort of next url attribute then specify which attribute name in JSON Response string which holds next url. If no attribute found or its null then component will stop fetching next resultset. Example: $.pagingInfo.nextUrl"
                          expressionType="Notify"
                          name="NextUrlAttribute"></property>
                        <property
                          dataType="System.String"
                          description="If Service response support pagination using some sort of prev/next url attribute then specify which previous link attribute name from JSON Response string which holds previous url."
                          expressionType="Notify"
                          name="PrevUrlAttribute"></property>
                        <property
                          dataType="System.String"
                          description="Specifies value for NextUrlAttribute or StopIndicatorAttribute which indicates last page to stop pagination. If you have specified StopIndicatorAttribute then you can use Regular expression rather than static value to indicate last page. To use regular expression value of this property must start with regex= prefix. Example : regex=FALSE|N  (assuming you set StopIndicatorAttribute to something like $.hasMore)"
                          expressionType="Notify"
                          name="NextUrlStopIndicator"></property>
                        <property
                          dataType="System.String"
                          description="Attribute name or expression for attribute which can be used as stop indicator (e.g. hasmore --or-- $.pagination.hasmore). If this value is blank then NextUrlAttribute is used"
                          expressionType="Notify"
                          name="StopIndicatorAttribute"></property>
                        <property
                          dataType="System.String"
                          description="If you want to include certain text (or parameters) at the end of Next url then specify this attribute (e.g. &amp;format=json). Another common usecase of this property is to supply pagination token to next Page URL. You can also use &lt;%nextlink%&gt; or  &lt;%nextlink_encoded%&gt; placeholder (e.g. &amp;cursor=&lt;%nextlink_encoded%&gt; )"
                          expressionType="Notify"
                          name="NextUrlSuffix"></property>
                        <property
                          dataType="System.Int32"
                          description="This property indicates total number of milliseconds you want to wait before sending next request. This option allows you to adjust how many API calls can be made within certain timeframe. If your API Service has no limit then set this option to zero"
                          expressionType="Notify"
                          name="NextUrlWait">0</property>
                        <property
                          dataType="System.Boolean"
                          description="If this option is true then component will continue without exception on 404 error (Url not found). This allows you to consume data gracefully."
                          expressionType="Notify"
                          name="ContinueOnUrlNotFoundError">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Continue when any type of exception occurs during http request"
                          expressionType="Notify"
                          name="ContineOnAnyError">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Continue on error when specified substring found in response"
                          expressionType="Notify"
                          name="ContineOnErrorForMessage">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Continue on error when specified status code returned from web server"
                          expressionType="Notify"
                          name="ContineOnErrorForStatusCode">false</property>
                        <property
                          dataType="System.Boolean"
                          description="When error occurs no data is returned. Use this option to get content eventhough error occurs. When this option is checked you can't use [continue on error when specific string found in response] option"
                          expressionType="Notify"
                          name="ConsumeResponseOnError">false</property>
                        <property
                          dataType="System.Int32"
                          description="Status code to match when error occurs and ContineOnErrorForStatusCode option is true. If Response status code matches to this code then task continues to run"
                          expressionType="Notify"
                          name="ErrorStatusCodeToMatch">404</property>
                        <property
                          dataType="System.String"
                          description="Error substring to match when error occurs and ContineOnErrorForMessage option is true. If Response status code matches to this code then task continues to run"
                          expressionType="Notify"
                          name="ErrorSubstringToMatch"></property>
                        <property
                          dataType="System.String"
                          description="Cookie Container can be used to maintain state between multiple web requests. Example: You can login to site like wordpress and then extract any private page content by simply passing authentication cookies using this variable."
                          expressionType="Notify"
                          name="CookieContainerVariable"></property>
                        <property
                          dataType="System.Int32"
                          description="Http request Timeout in seconds. Set this to 0 if you want to use system default value (i.e. 100 seconds)"
                          expressionType="Notify"
                          name="RequestTimeout">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies which security protocol is supported for HTTPS communication. Using this option you can enable legacy protocol or enforce to use latest version of security protocol (Note: TLS 1.2 is only supported in SSIS 2014 or Higher)."
                          expressionType="Notify"
                          name="SecurityProtocol"
                          typeConverter="ZappySys.PowerPack.Common.HttpsSecurityProtocolType">0</property>
                        <property
                          dataType="System.Boolean"
                          description="Enable support for gzip or deflate compression. When you check this option compressed response automatically de-compressed saving bandwidth. This option is only valid if web server supports compressed response stream. Check your API documentation for more information."
                          expressionType="Notify"
                          name="EnableCompressionSupport">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Ignore SSL certificate related errors. Example: if you getting SSL/TLS errors because of certificate expired or certificate is not from trusted authority or certificate is self-signed. By checking this option you will not get SSL/TLS error."
                          expressionType="Notify"
                          name="IgnoreCertificateErrors">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Allow unsecure ciphers/suites and curves for SSLS/TLS communication. Use this option to communicate with web servers which needs legacy / unsecured ciphers support. This option is only trigged when you change default SSL/TLS Version on advanced settings tab."
                          expressionType="Notify"
                          name="AllowUnsecureSuite">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Use connection to pass credentials for authentication (e.g. Use UserID/Password or Use OAuth Protocol for token based approach)"
                          expressionType="Notify"
                          name="UseConnection">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specified how you want to loop through multiple pages returned by REST API."
                          expressionType="Notify"
                          name="PagingMode"
                          typeConverter="ZappySys.Common.RestApiPagingMode">3</property>
                        <property
                          dataType="System.Boolean"
                          description="If you wish to pass extracted pagination token or current page number in the body of next request then set this option to true. You can use [$pagetoken$] and [$pagetoken$] placeholders anywhere in the Body where you wish to insert extracted Page token. You must set encoded token you can use &lt;%nextlink_encoded%&gt; inside SuffixForNextUrl Property. If you dont use SuffixForNextUrl then raw nextLink or Token will be inserted inside the body. If you dont specify [$pagetoken$] placeholder in the body then NextPage Token will be appended at the end. NextPage Token is extracted by filter expression specified using property NextUrlSuffix"
                          expressionType="Notify"
                          name="EnablePageTokenForBody">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this to true if you wish to specify different URL, Header, Body or Filter for first page and next page (i.e. Paginated response). Some APIs like Amazon MWS, NetSuite, Zuora) you may need to set this to true."
                          expressionType="Notify"
                          name="HasDifferentNextPageInfo">false</property>
                        <property
                          dataType="System.String"
                          description="When HasDifferentNextPageInfo=true you can set this property to indicate first page and next page. You can specify different URL, Header, Body or Filter for first page and next page (i.e. Paginated response). Use [$tag$] as placeholder anywhere in the URL, Header, Body or Filter and at runtime system will replace it with correct value (first page or next page value). Syntax to specify placeholder for first page vs next page is like a connectionstring url=FirstPageValue|NextPageValue;header=FirstPageValue|NextPageValue;body=FirstPageValue|NextPageValue;filter=FirstPageValue|NextPageValue; You can use one or more key/value pairs to make things dynamic (e.g. url, header, body or filter)  .For example if you have pagination in your API and First URL is http://abc.com/api/items/get and to get more records you have to call http://abc.com/api/items/getNext then you can use [$tag$] as placeholder in the URL http://abc.com/api/items/[$tag$] and specify this property with first page tag and next page tag as url=get|getNext  (Tags are separated using vertical bar). "
                          expressionType="Notify"
                          name="PagePlaceholders"></property>
                        <property
                          dataType="System.String"
                          description="Use this property to set request body fragment for first page. HasDifferentNextPageInfo must be set to true to use this property."
                          expressionType="Notify"
                          name="FirstPageBodyPart"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.String"
                          description="Use this property to set request body fragment for any request after first request. HasDifferentNextPageInfo must be set to true to use this property."
                          expressionType="Notify"
                          name="NextPageBodyPart"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.String"
                          description="Expression to extract Maximum pages to loop through. Some APIs don't stop pagination and keep returning last page data when you try to read data after last page. Specify expression (e.g. $.page_count ) to read total pages to loop through using this property."
                          expressionType="Notify"
                          name="PagingMaxPagesExpr">$.result.total/50000</property>
                        <property
                          dataType="System.String"
                          description="e.g. Type page_num if URL looks like this =&gt; http://abc.com/?page_num=1&amp;sort=true  (page number via query string)&#xA;--or-- Type &lt;%page%&gt; if page number is inside URL path like this =&gt; http://abc.com/1/?sort=true  (e.g. replace page number in url with placeholder http://abc.com/&lt;%page%&gt;/?sort=true)&#xA;Page number will be incremented by one for next URL until last page is reached or [Max Page Number] is reached"
                          expressionType="Notify"
                          name="PageNumberAttributeNameInUrl">&lt;%page%&gt;</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum page number until which auto increment is allowed. Type zero for no limit. Next URL contains next page number (increment by one) until last page is detected or [Max Page Number] limit is reached."
                          expressionType="Notify"
                          name="MaxPageNumber">0</property>
                        <property
                          dataType="System.String"
                          description="Variable name which will hold starting page number. This is ignored if you useing parameter name from query string to indicate page number."
                          expressionType="Notify"
                          name="StartPageNumberVariable">User::UpsertedCount</property>
                        <property
                          dataType="System.Int32"
                          description="Page counter increment. By default next page is incremented by one if this value is zero. You can also enter negative number if you want to decrease page counter."
                          expressionType="Notify"
                          name="PageNumberIncrement">50000</property>
                        <property
                          dataType="System.Int32"
                          description="Specified how you want detect last page."
                          expressionType="Notify"
                          name="PagingEndStrategy"
                          typeConverter="ZappySys.Common.UrlPagingEndDetectionStrategy">3</property>
                        <property
                          dataType="System.Boolean"
                          description="Condition result to compare to detect last page. Set this property to True if you want detect last page if condition is true else set this to False."
                          expressionType="Notify"
                          name="LastPageWhenConditionEqualsTo">true</property>
                        <property
                          dataType="System.Int32"
                          description="Minimum bytes expected from response."
                          expressionType="Notify"
                          name="ResponseMinBytes">0</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum bytes from response."
                          expressionType="Notify"
                          name="ResponseMaxBytes">3</property>
                        <property
                          dataType="System.String"
                          description="Expected error message sub string from response."
                          expressionType="Notify"
                          name="ResponseErrorString">not found</property>
                        <property
                          dataType="System.Int32"
                          description="Expected status code from response when page number you trying to access not found."
                          expressionType="Notify"
                          name="ResponseStatusCode">404</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum JSON records to fetch. Set this value to 0 for all records"
                          expressionType="Notify"
                          name="MaxRows">0</property>
                        <property
                          dataType="System.String"
                          description="Enter expression here to filter data.(Example:  $.Users[*].UserName ) This will fetch User names from users records"
                          expressionType="Notify"
                          name="Filter"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">$.result.rows[*]</property>
                        <property
                          dataType="System.Boolean"
                          description="Use this option to include parent properties (Non array) in the output along with Filtered Rows"
                          expressionType="Notify"
                          name="IncludeParentColumns">false</property>
                        <property
                          dataType="System.Boolean"
                          description="By default child and parent information is not included in the output if children not found for specified expression. For example if you want to extract all orders from all customers nodes then you can type $.Customers[*].Orders[*]. This will fetch all orders from all customers. By default customers records without orders wont be included in the output. If you want to include those customers where orders not found then check this option (Output null information for order attributes). This behavior is similar to LEFT OUTER JOIN in SQL (Left side is parent, right side is child). This option is ***resource intensive*** so only check if you really care about this behavior."
                          expressionType="Notify"
                          name="IncludeParentColumnsWhenChildMissing">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to true if you want to output parent columns which are array. By default any parent column which is an array is not included in output. See also FilterForParentColumnsWithArrayType property if you set this property"
                          expressionType="Notify"
                          name="IncludeParentColumnsWithArrayType">false</property>
                        <property
                          dataType="System.String"
                          description="Filter expression to extract value form parent"
                          expressionType="Notify"
                          name="FilterForParentColumnsWithArrayType"></property>
                        <property
                          dataType="System.String"
                          description="Prefix for parent column name. This option is only valid if you have set IncludeParentColumns=True"
                          expressionType="Notify"
                          name="ParentColumnPrefix">P_</property>
                        <property
                          dataType="System.Boolean"
                          description="Throw error if property name specified in filter expression is missing. By default it will ignore any missing property errors."
                          expressionType="Notify"
                          name="ThrowErrorIfPropertyMissing">false</property>
                        <property
                          dataType="System.Int32"
                          description="This property how many nested levels should be scanned to fetch various properties. 0=Scan all child levels."
                          expressionType="Notify"
                          name="MaxLevelsToScan">0</property>
                        <property
                          dataType="System.String"
                          description="List comma separated property names from JSON document which you want to exclude from output. Specify parent property name to exclude all child nodes."
                          expressionType="Notify"
                          name="ExcludedProperties"></property>
                        <property
                          dataType="System.String"
                          description="Property level separator used in generated property name (separator for outer properties - Above selected filter node). Use this if default separator is producing duplicate property name which is conflicting with existing name."
                          expressionType="Notify"
                          name="LevelSeparator">_</property>
                        <property
                          dataType="System.Boolean"
                          description="Enables deep array flattening for selected filtered hierarchy. When you turn on this property it will flatten each property of each array item and expose as column (e.g. If you have Filter set as $.customers[*] and for each customer you have an array of Addresses then you may see output columns like Addresses.1.City, Addresses.1.State, Addresses.2.City, Addresses.2.State .... Addresses.N.City, Addresses.N.State). You can control how many array items you want to flatten by setting MaxArrayItemsToFlatten property."
                          expressionType="Notify"
                          name="EnableArrayFlattening">false</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum number of array items to flatten. inner array flattening. Adjust this property to control how many columns being generated. This option is ignored if you set EnableArrayFlattening=false"
                          expressionType="Notify"
                          name="MaxArrayItemsToFlatten">10</property>
                        <property
                          dataType="System.Int32"
                          description="Compression format for source file (e.g. gzip, zip)"
                          expressionType="Notify"
                          name="FileCompressionType"
                          typeConverter="ZappySys.Common.FileCompressionType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Array Transformation you want to apply. Useful for case when you have 2-Dimensional arrays with rows/columns in separate arrays."
                          expressionType="Notify"
                          name="ArrayTransformationType"
                          typeConverter="ZappySys.Json.ArrayTransformType">0</property>
                        <property
                          dataType="System.String"
                          description="Filter expression to use to extract column names for array transformation."
                          expressionType="Notify"
                          name="ArrayTransColumnNameFilter">$.result.rows[*]</property>
                        <property
                          dataType="System.String"
                          description="Filter expression for row values (Not applicable for simple array transformation)."
                          expressionType="Notify"
                          name="ArrayTransRowValueFilter">$.result.rows[*]</property>
                        <property
                          dataType="System.Boolean"
                          description="When you have 2D array but don't have column list specified in a separate array then use this option (e.g. { arr: [[10,11],[21,22]] } )."
                          expressionType="Notify"
                          name="ArrayTransEnableCustomColumns">true</property>
                        <property
                          dataType="System.String"
                          description="When you have 2D array but don't have column list specified in a separate array then use specify column names here. Use comma separated list (e.g col1,col2,col3 ). Column name Order must match value order."
                          expressionType="Notify"
                          name="ArrayTransCustomColumns">MetricID</property>
                        <property
                          dataType="System.String"
                          description="Specifies how custom date formatted strings are parsed when reading JSON."
                          expressionType="Notify"
                          name="DateFormatString"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies how date formatted strings, e.g. Date(1198908717056) and 2012-03-21T05:40Z, are parsed when reading JSON."
                          expressionType="Notify"
                          name="DateParseHandling"
                          typeConverter="ZappySys.Common.DateParseHandling">1</property>
                        <property
                          dataType="System.Boolean"
                          description="Output as raw JSON document rather than parsing individual fields. This option is helpful if you have documents stored in a file and you want to pass them downstream as raw JSON string rather than parsing into columns."
                          expressionType="Notify"
                          name="OutputRawDocument">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indent JSON output so its easy to read."
                          expressionType="Notify"
                          name="IndentOutput">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to true if you want to output FilePath. This option is ignored when you consume DirectValue or data from Url rather than local files. Output column name will be __FilePath"
                          expressionType="Notify"
                          name="OutputFilePath">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to true if you want to output FileName. This option is ignored when you consume DirectValue or data from Url rather than local files. Output column name will be __FileName"
                          expressionType="Notify"
                          name="OutputFileName">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to true if you want to move processed file to archive folder."
                          expressionType="Notify"
                          name="EnableArchiveFile">false</property>
                        <property
                          dataType="System.String"
                          description="Folder path where you want to move processed file."
                          expressionType="Notify"
                          name="ArchiveFolderPath"></property>
                        <property
                          dataType="System.Boolean"
                          description="Folder path where you want to move processed file."
                          expressionType="Notify"
                          name="OverwriteFileInArchiveFolder">false</property>
                        <property
                          dataType="System.String"
                          description="File naming convention for archived file. By default it will same name as original source file processed. But you can control naming format using {%name%} and {%ext%} placeholders. e.g. {%name%}_processed{%ext%} or {%name%}{%ext%}.{{System::ContainerStartTime,yyyyMMdd_HHmmss_fff}}"
                          expressionType="Notify"
                          name="ArchiveFileNamingConvention"></property>
                        <property
                          dataType="System.Boolean"
                          description="When this property is true then Column is converted to Row. Pivoted names will appear under  Pivot_Name column and values will appear under Pivot_Value field."
                          expressionType="Notify"
                          name="EnablePivot">false</property>
                        <property
                          dataType="System.Int32"
                          description="Metadata scan mode controls how data type and length is determined. By default few records scanned to determine datatype/length. Changing ScanMode affects length/datatype accuracy."
                          expressionType="Notify"
                          name="MetaDataScanMode"
                          typeConverter="ZappySys.Common.Data.MetaDataScanMode">4</property>
                        <property
                          dataType="System.Int32"
                          description="Length for all string column. This option is only valid for MetaDataScanMode=Custom"
                          expressionType="Notify"
                          name="MetaDataCustomLength">1000</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.JsonSource</property>
                        <property
                          dataType="System.Int32"
                          description="Encoding of source file"
                          expressionType="Notify"
                          name="Encoding"
                          typeConverter="ZappySys.Common.EncodingType">0</property>
                        <property
                          dataType="System.String"
                          description="Character set for text (e.g. utf-8 )"
                          expressionType="Notify"
                          name="CharacterSet"></property>
                        <property
                          dataType="System.Boolean"
                          description="By default process stops with error if specified local file is not found. Set this property to true if you wish to continue rather than throwing file not found error."
                          expressionType="Notify"
                          name="ContinueOnFileNotFoundError">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Check this option if you want to upload file(s) (i.e. POST RAW file data) or send data using Multi-Part encoding method (i.e. Content-Type: multipart/form-data). Multi-Part request allows you to mix key/value and upload files in same request. On the other hand raw upload allows only single file upload (without any key/value) &#xA;&#xA;==== Raw Upload (Content-Type: application/octet-stream) =====   &#xA;To upload single file in raw mode check this option and specify full file path starting with @ sign in the Body (e.g.  @c:\data\myfile.zip ) &#xA;&#xA;==== Form-Data / Multipart Upload (Content-Type: multipart/form-data) =====   &#xA;To treat your Request data as multi part fields you must specify key/value pairs separated by new lines into RequestData field (i.e. Body). Each key value pair is entered on new-line and key/value are separated using equal sign (=). Preceding and trailing spaces are ignored also blank lines are ignored. &#xA;If field value has some any special character(s) then use escape sequence (e.g. For NewLine: \r\n, For Tab: \t, For at (@): \@). When value of any field starts with at sign (@) its automatically treated as File you want to upload. By default file content type is determined based on extension however you can supply content type manually for any field using this way [ fieldname.Content-Type=some content type ]. In below example we have supplied Content-Type for file2 and SomeField1, all other fields are using default content-type.&#xA;See below Example of uploading multiple files along with additional fields.&#xA;&#xA;file1=@c:\data\Myfile1.txt&#xA;file2=@c:\data\Myfile2.json&#xA;file2.Content-Type=application/json&#xA;SomeField1=aaaaaaa&#xA;SomeField1.Content-Type=text/plain&#xA;SomeField2=12345&#xA;SomeFieldWithNewLineAndTab=This is line1\r\nThis is line2\r\nThis is \ttab \ttab \ttab&#xA;SomeFieldStartingWithAtSign=\@MyTwitterHandle&#xA;"
                          expressionType="Notify"
                          name="IsMultiPartUpload">false</property>
                        <property
                          dataType="System.String"
                          description="Expression to extract Maximum records to loop through. Some APIs don't stop pagination and keep returning last page data when you try to read data after last page. Specify expression (e.g. $.total_rows ) to read total pages to loop through using this property. This setting is ignored if you set PagingMaxPagesExpr."
                          expressionType="Notify"
                          name="PagingMaxRowsExpr"></property>
                        <property
                          dataType="System.String"
                          description="When you enable PagingMaxRowsExpr (end pagination based on MaxRowCount) then you need to count records coming in each response. This expression extract all rows found under specified expression (e.g. $.orders[*] if all records found under orders node)."
                          expressionType="Notify"
                          name="PagingMaxRowsDataPathExpr"></property>
                        <property
                          dataType="System.Boolean"
                          description="When this option is checked, system allows to parse large number (Higher than Int64) in JSON document (i.e. { id: 76000009353950433247780 } ). If you do not turn on this option then it may throw error if large number is encountered. This option is SLOW because it has to perform additional checks in order to avoid Large number overflow error so do not turn on unless you getting Large number error."
                          expressionType="Notify"
                          name="EnableBigNumberHandling">false</property>
                      </properties>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Campaign Members\Search Campaigns.Outputs[JsonSourceOutput]"
                          errorOrTruncationOperation="Error"
                          errorRowDisposition="FailComponent"
                          name="JsonSourceOutput"
                          truncationRowDisposition="FailComponent">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\Search Campaigns.Outputs[JsonSourceOutput].Columns[etag]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Campaign Members\Search Campaigns.Outputs[JsonSourceOutput].ExternalColumns[etag]"
                              length="68"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaign Members\Search Campaigns.Outputs[JsonSourceOutput].Columns[etag]"
                              name="etag" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\Search Campaigns.Outputs[JsonSourceOutput].Columns[id]"
                              dataType="i4"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Campaign Members\Search Campaigns.Outputs[JsonSourceOutput].ExternalColumns[id]"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaign Members\Search Campaigns.Outputs[JsonSourceOutput].Columns[id]"
                              name="id" />
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\Search Campaigns.Outputs[JsonSourceOutput].ExternalColumns[system_record_state]"
                              dataType="wstr"
                              length="24"
                              name="system_record_state" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\Search Campaigns.Outputs[JsonSourceOutput].ExternalColumns[system_ctime]"
                              dataType="wstr"
                              length="40"
                              name="system_ctime" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\Search Campaigns.Outputs[JsonSourceOutput].ExternalColumns[system_modtime]"
                              dataType="wstr"
                              length="40"
                              name="system_modtime" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\Search Campaigns.Outputs[JsonSourceOutput].ExternalColumns[name]"
                              dataType="wstr"
                              length="144"
                              name="name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\Search Campaigns.Outputs[JsonSourceOutput].ExternalColumns[email_address]"
                              dataType="wstr"
                              length="180"
                              name="email_address" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\Search Campaigns.Outputs[JsonSourceOutput].ExternalColumns[phone_number]"
                              dataType="wstr"
                              length="80"
                              name="phone_number" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\Search Campaigns.Outputs[JsonSourceOutput].ExternalColumns[fax_number]"
                              dataType="wstr"
                              length="1020"
                              name="fax_number" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\Search Campaigns.Outputs[JsonSourceOutput].ExternalColumns[is_dnd]"
                              dataType="wstr"
                              length="80"
                              name="is_dnd" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\Search Campaigns.Outputs[JsonSourceOutput].ExternalColumns[type]"
                              dataType="wstr"
                              length="28"
                              name="type" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\Search Campaigns.Outputs[JsonSourceOutput].ExternalColumns[last_contacted_date]"
                              dataType="wstr"
                              length="80"
                              name="last_contacted_date" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\Search Campaigns.Outputs[JsonSourceOutput].ExternalColumns[name_last]"
                              dataType="wstr"
                              length="1020"
                              name="name_last" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\Search Campaigns.Outputs[JsonSourceOutput].ExternalColumns[address_postal]"
                              dataType="wstr"
                              length="220"
                              name="address_postal" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\Search Campaigns.Outputs[JsonSourceOutput].ExternalColumns[address]"
                              dataType="wstr"
                              length="384"
                              name="address" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\Search Campaigns.Outputs[JsonSourceOutput].ExternalColumns[interest_level]"
                              dataType="wstr"
                              length="1020"
                              name="interest_level" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\Search Campaigns.Outputs[JsonSourceOutput].ExternalColumns[marketing_birthday]"
                              dataType="wstr"
                              length="1020"
                              name="marketing_birthday" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\Search Campaigns.Outputs[JsonSourceOutput].ExternalColumns[marketing_enquiry_source]"
                              dataType="wstr"
                              length="1020"
                              name="marketing_enquiry_source" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\Search Campaigns.Outputs[JsonSourceOutput].ExternalColumns[marketing_gender]"
                              dataType="wstr"
                              length="1020"
                              name="marketing_gender" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\Search Campaigns.Outputs[JsonSourceOutput].ExternalColumns[marketing_postcode]"
                              dataType="wstr"
                              length="80"
                              name="marketing_postcode" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\Search Campaigns.Outputs[JsonSourceOutput].ExternalColumns[name_legal]"
                              dataType="wstr"
                              length="1020"
                              name="name_legal" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\Search Campaigns.Outputs[JsonSourceOutput].ExternalColumns[name_salutation]"
                              dataType="wstr"
                              length="1020"
                              name="name_salutation" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\Search Campaigns.Outputs[JsonSourceOutput].ExternalColumns[name_addressee]"
                              dataType="wstr"
                              length="1020"
                              name="name_addressee" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\Search Campaigns.Outputs[JsonSourceOutput].ExternalColumns[system_owner_user.id]"
                              dataType="wstr"
                              length="20"
                              name="system_owner_user.id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\Search Campaigns.Outputs[JsonSourceOutput].ExternalColumns[system_owner_user._name]"
                              dataType="wstr"
                              length="36"
                              name="system_owner_user._name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\Search Campaigns.Outputs[JsonSourceOutput].ExternalColumns[system_owner_user._first_name]"
                              dataType="wstr"
                              length="20"
                              name="system_owner_user._first_name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\Search Campaigns.Outputs[JsonSourceOutput].ExternalColumns[system_owner_user._last_name]"
                              dataType="wstr"
                              length="12"
                              name="system_owner_user._last_name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\Search Campaigns.Outputs[JsonSourceOutput].ExternalColumns[system_owner_user._email_address]"
                              dataType="wstr"
                              length="92"
                              name="system_owner_user._email_address" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\Search Campaigns.Outputs[JsonSourceOutput].ExternalColumns[system_modified_user.id]"
                              dataType="wstr"
                              length="20"
                              name="system_modified_user.id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\Search Campaigns.Outputs[JsonSourceOutput].ExternalColumns[system_modified_user._name]"
                              dataType="wstr"
                              length="48"
                              name="system_modified_user._name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\Search Campaigns.Outputs[JsonSourceOutput].ExternalColumns[system_modified_user._first_name]"
                              dataType="wstr"
                              length="24"
                              name="system_modified_user._first_name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\Search Campaigns.Outputs[JsonSourceOutput].ExternalColumns[system_modified_user._last_name]"
                              dataType="wstr"
                              length="24"
                              name="system_modified_user._last_name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\Search Campaigns.Outputs[JsonSourceOutput].ExternalColumns[system_modified_user._email_address]"
                              dataType="wstr"
                              length="128"
                              name="system_modified_user._email_address" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\Search Campaigns.Outputs[JsonSourceOutput].ExternalColumns[system_created_user.id]"
                              dataType="wstr"
                              length="20"
                              name="system_created_user.id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\Search Campaigns.Outputs[JsonSourceOutput].ExternalColumns[system_created_user._name]"
                              dataType="wstr"
                              length="36"
                              name="system_created_user._name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\Search Campaigns.Outputs[JsonSourceOutput].ExternalColumns[system_created_user._first_name]"
                              dataType="wstr"
                              length="20"
                              name="system_created_user._first_name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\Search Campaigns.Outputs[JsonSourceOutput].ExternalColumns[system_created_user._last_name]"
                              dataType="wstr"
                              length="12"
                              name="system_created_user._last_name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\Search Campaigns.Outputs[JsonSourceOutput].ExternalColumns[system_created_user._email_address]"
                              dataType="wstr"
                              length="92"
                              name="system_created_user._email_address" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\Search Campaigns.Outputs[JsonSourceOutput].ExternalColumns[contact_image]"
                              dataType="wstr"
                              length="1020"
                              name="contact_image" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\Search Campaigns.Outputs[JsonSourceOutput].ExternalColumns[marketing_enquiry_method]"
                              dataType="wstr"
                              length="1020"
                              name="marketing_enquiry_method" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\Search Campaigns.Outputs[JsonSourceOutput].ExternalColumns[_security_user_rights]"
                              dataType="wstr"
                              length="260"
                              name="_security_user_rights" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\Search Campaigns.Outputs[JsonSourceOutput].ExternalColumns[etag]"
                              dataType="wstr"
                              length="68"
                              name="etag" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\Search Campaigns.Outputs[JsonSourceOutput].ExternalColumns[id]"
                              dataType="wstr"
                              length="24"
                              name="id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\Search Campaigns.Outputs[JsonSourceOutput].ExternalColumns[__FileName]"
                              dataType="wstr"
                              length="600"
                              name="__FileName" />
                          </externalMetadataColumns>
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Campaign Members\Search Campaigns.Outputs[JsonSource Error Output]"
                          isErrorOut="true"
                          name="JsonSource Error Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\Search Campaigns.Outputs[JsonSource Error Output].Columns[etag]"
                              dataType="wstr"
                              length="68"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaign Members\Search Campaigns.Outputs[JsonSource Error Output].Columns[etag]"
                              name="etag" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\Search Campaigns.Outputs[JsonSource Error Output].Columns[id]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaign Members\Search Campaigns.Outputs[JsonSource Error Output].Columns[id]"
                              name="id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\Search Campaigns.Outputs[JsonSource Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaign Members\Search Campaigns.Outputs[JsonSource Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\Search Campaigns.Outputs[JsonSource Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaign Members\Search Campaigns.Outputs[JsonSource Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\Search Campaigns.Outputs[JsonSource Error Output].Columns[ErrorColumnName]"
                              codePage="1252"
                              dataType="str"
                              length="128"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaign Members\Search Campaigns.Outputs[JsonSource Error Output].Columns[ErrorColumnName]"
                              name="ErrorColumnName" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\Search Campaigns.Outputs[JsonSource Error Output].Columns[ErrorMessage]"
                              dataType="wstr"
                              length="1024"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaign Members\Search Campaigns.Outputs[JsonSource Error Output].Columns[ErrorMessage]"
                              name="ErrorMessage" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Campaign Members\SQL Sort"
                      componentClassID="Microsoft.Sort"
                      contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
                      name="SQL Sort"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                          name="EliminateDuplicates">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the maximum number of threads to use for sorting."
                          expressionType="Notify"
                          name="MaximumThreads">-1</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Campaign Members\SQL Sort.Inputs[Sort Input]"
                          name="Sort Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\SQL Sort.Inputs[Sort Input].Columns[Id]"
                              cachedDataType="i4"
                              cachedName="Id"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaign Members\Existing Campaign Members from SQL.Outputs[OLE DB Source Output].Columns[Id]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">1</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\SQL Sort.Inputs[Sort Input].Columns[AccountId]"
                              cachedDataType="i2"
                              cachedName="AccountId"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaign Members\Existing Campaign Members from SQL.Outputs[OLE DB Source Output].Columns[AccountId]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\SQL Sort.Inputs[Sort Input].Columns[etagsql]"
                              cachedDataType="wstr"
                              cachedLength="250"
                              cachedName="etagsql"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaign Members\Existing Campaign Members from SQL.Outputs[OLE DB Source Output].Columns[etagsql]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Campaign Members\SQL Sort.Outputs[Sort Output]"
                          isSorted="true"
                          name="Sort Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\SQL Sort.Outputs[Sort Output].Columns[Id]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaign Members\SQL Sort.Outputs[Sort Output].Columns[Id]"
                              name="Id"
                              sortKeyPosition="1">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Iterate Offices\Sequence Container\Campaign Members\Existing Campaign Members from SQL.Outputs[OLE DB Source Output].Columns[Id]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\SQL Sort.Outputs[Sort Output].Columns[AccountId]"
                              dataType="i2"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaign Members\SQL Sort.Outputs[Sort Output].Columns[AccountId]"
                              name="AccountId">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Iterate Offices\Sequence Container\Campaign Members\Existing Campaign Members from SQL.Outputs[OLE DB Source Output].Columns[AccountId]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\SQL Sort.Outputs[Sort Output].Columns[etagsql]"
                              dataType="wstr"
                              length="250"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaign Members\SQL Sort.Outputs[Sort Output].Columns[etagsql]"
                              name="etagsql">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Iterate Offices\Sequence Container\Campaign Members\Existing Campaign Members from SQL.Outputs[OLE DB Source Output].Columns[etagsql]}</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Campaign Members\Trash Destination"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Trash Destination; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="The trash destination is used to create dummy destination which ends data path without any processing."
                      name="Trash Destination"
                      version="2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.String"
                          description="File path where you want to save data"
                          expressionType="Notify"
                          name="FilePath"></property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates if you want to save input data to comma separated text file"
                          expressionType="Notify"
                          name="SaveDataToFile">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Append data to file"
                          expressionType="Notify"
                          name="Append">false</property>
                        <property
                          dataType="System.String"
                          description="RowSeparator"
                          expressionType="Notify"
                          name="RowSeparator">{NEWLINE}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether you want to overwrite target file if exists"
                          expressionType="Notify"
                          name="OverwriteFileIfExists">true</property>
                        <property
                          dataType="System.String"
                          description="ColumnSeparator"
                          expressionType="Notify"
                          name="ColumnSeparator">,</property>
                        <property
                          dataType="System.Boolean"
                          description="SupportUnicode"
                          expressionType="Notify"
                          name="SupportUnicode">true</property>
                        <property
                          dataType="System.Boolean"
                          description="ColumnNamesInFirstRow"
                          expressionType="Notify"
                          name="ColumnNamesInFirstRow">true</property>
                        <property
                          dataType="System.Boolean"
                          description="QuoteDataIfNeeded"
                          expressionType="Notify"
                          name="QuoteDataIfNeeded">true</property>
                        <property
                          dataType="System.String"
                          description="Date time format string for any column with DT_DBDATETIME, DT_DBDATETIME2 or DB_DATE format"
                          expressionType="Notify"
                          name="DateTimeFormat">yyyy-MM-dd HH:mm:ss</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.TrashDestination</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Campaign Members\Trash Destination.Inputs[TrashDestinationInput]"
                          hasSideEffects="true"
                          name="TrashDestinationInput">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Campaign Members\Trash Destination 1"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Trash Destination; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="The trash destination is used to create dummy destination which ends data path without any processing."
                      name="Trash Destination 1"
                      version="2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.String"
                          description="File path where you want to save data"
                          expressionType="Notify"
                          name="FilePath"></property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates if you want to save input data to comma separated text file"
                          expressionType="Notify"
                          name="SaveDataToFile">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Append data to file"
                          expressionType="Notify"
                          name="Append">false</property>
                        <property
                          dataType="System.String"
                          description="RowSeparator"
                          expressionType="Notify"
                          name="RowSeparator">{NEWLINE}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether you want to overwrite target file if exists"
                          expressionType="Notify"
                          name="OverwriteFileIfExists">true</property>
                        <property
                          dataType="System.String"
                          description="ColumnSeparator"
                          expressionType="Notify"
                          name="ColumnSeparator">,</property>
                        <property
                          dataType="System.Boolean"
                          description="SupportUnicode"
                          expressionType="Notify"
                          name="SupportUnicode">true</property>
                        <property
                          dataType="System.Boolean"
                          description="ColumnNamesInFirstRow"
                          expressionType="Notify"
                          name="ColumnNamesInFirstRow">true</property>
                        <property
                          dataType="System.Boolean"
                          description="QuoteDataIfNeeded"
                          expressionType="Notify"
                          name="QuoteDataIfNeeded">true</property>
                        <property
                          dataType="System.String"
                          description="Date time format string for any column with DT_DBDATETIME, DT_DBDATETIME2 or DB_DATE format"
                          expressionType="Notify"
                          name="DateTimeFormat">yyyy-MM-dd HH:mm:ss</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.TrashDestination</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Campaign Members\Trash Destination 1.Inputs[TrashDestinationInput]"
                          hasSideEffects="true"
                          name="TrashDestinationInput">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Campaign Members\Upsert CampaignMember"
                      componentClassID="Microsoft.OLEDBCommand"
                      contactInfo="OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
                      description="Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time."
                      name="Upsert CampaignMember"
                      usesDispositions="true"
                      version="2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">0</property>
                        <property
                          dataType="System.String"
                          description="The SQL command to be executed."
                          expressionType="Notify"
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">exec [UpsertCampaignMember] ?,?,?</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Iterate Offices\Sequence Container\Campaign Members\Upsert CampaignMember.Connections[OleDbConnection]"
                          connectionManagerID="Package.ConnectionManagers[colsqlbi01v.Entities]"
                          connectionManagerRefId="Package.ConnectionManagers[colsqlbi01v.Entities]"
                          description="The OLE DB runtime connection used to access the database."
                          name="OleDbConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Campaign Members\Upsert CampaignMember.Inputs[OLE DB Command Input]"
                          errorOrTruncationOperation="Command Execution"
                          errorRowDisposition="FailComponent"
                          hasSideEffects="true"
                          name="OLE DB Command Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\Upsert CampaignMember.Inputs[OLE DB Command Input].Columns[Origin]"
                              cachedDataType="i4"
                              cachedName="Origin"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Campaign Members\Upsert CampaignMember.Inputs[OLE DB Command Input].ExternalColumns[@Origin]"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaign Members\Add accountid and origin.Outputs[Derived Column Output].Columns[Origin]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\Upsert CampaignMember.Inputs[OLE DB Command Input].Columns[AccountId]"
                              cachedDataType="i4"
                              cachedName="AccountId"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Campaign Members\Upsert CampaignMember.Inputs[OLE DB Command Input].ExternalColumns[@accountid]"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaign Members\Add accountid and origin.Outputs[Derived Column Output].Columns[AccountId]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\Upsert CampaignMember.Inputs[OLE DB Command Input].Columns[__DOCUMENT__]"
                              cachedDataType="nText"
                              cachedName="__DOCUMENT__"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Campaign Members\Upsert CampaignMember.Inputs[OLE DB Command Input].ExternalColumns[@body]"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaign Members\record.Outputs[JsonParserTransformOutput].Columns[__DOCUMENT__]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\Upsert CampaignMember.Inputs[OLE DB Command Input].ExternalColumns[@Origin]"
                              dataType="i2"
                              name="@Origin">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                                  name="DBParamInfoFlags">81</property>
                              </properties>
                            </externalMetadataColumn>
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\Upsert CampaignMember.Inputs[OLE DB Command Input].ExternalColumns[@body]"
                              dataType="nText"
                              name="@body">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                                  name="DBParamInfoFlags">193</property>
                              </properties>
                            </externalMetadataColumn>
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\Upsert CampaignMember.Inputs[OLE DB Command Input].ExternalColumns[@accountid]"
                              dataType="i4"
                              name="@accountid">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                                  name="DBParamInfoFlags">81</property>
                              </properties>
                            </externalMetadataColumn>
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Campaign Members\Upsert CampaignMember.Outputs[OLE DB Command Output]"
                          exclusionGroup="1"
                          name="OLE DB Command Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Campaign Members\Upsert CampaignMember.Inputs[OLE DB Command Input]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Campaign Members\Upsert CampaignMember.Outputs[OLE DB Command Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="OLE DB Command Error Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Campaign Members\Upsert CampaignMember.Inputs[OLE DB Command Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\Upsert CampaignMember.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaign Members\Upsert CampaignMember.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaign Members\Upsert CampaignMember.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaign Members\Upsert CampaignMember.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                  </components>
                  <paths>
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Campaign Members.Paths[Derived Column Output]"
                      endId="Package\Iterate Offices\Sequence Container\Campaign Members\Upsert CampaignMember.Inputs[OLE DB Command Input]"
                      name="Derived Column Output"
                      startId="Package\Iterate Offices\Sequence Container\Campaign Members\Add accountid and origin.Outputs[Derived Column Output]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Campaign Members.Paths[ignore]"
                      endId="Package\Iterate Offices\Sequence Container\Campaign Members\Trash Destination.Inputs[TrashDestinationInput]"
                      name="ignore"
                      startId="Package\Iterate Offices\Sequence Container\Campaign Members\Insert or Ignore.Outputs[ignore]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Campaign Members.Paths[JsonGeneratorTransformOutput]"
                      endId="Package\Iterate Offices\Sequence Container\Campaign Members\Read details.Inputs[WebApiDestinationInput]"
                      name="JsonGeneratorTransformOutput"
                      startId="Package\Iterate Offices\Sequence Container\Campaign Members\Build request.Outputs[JsonGeneratorTransformOutput]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Campaign Members.Paths[JsonParserTransformOutput]"
                      endId="Package\Iterate Offices\Sequence Container\Campaign Members\Add accountid and origin.Inputs[Derived Column Input]"
                      name="JsonParserTransformOutput"
                      startId="Package\Iterate Offices\Sequence Container\Campaign Members\record.Outputs[JsonParserTransformOutput]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Campaign Members.Paths[JsonParserTransformOutput1]"
                      endId="Package\Iterate Offices\Sequence Container\Campaign Members\record.Inputs[JsonParserTransformInput]"
                      name="JsonParserTransformOutput"
                      startId="Package\Iterate Offices\Sequence Container\Campaign Members\JSON Parser Add id back in.Outputs[JsonParserTransformOutput]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Campaign Members.Paths[JsonSourceOutput]"
                      endId="Package\Iterate Offices\Sequence Container\Campaign Members\API Sort.Inputs[Sort Input]"
                      name="JsonSourceOutput"
                      startId="Package\Iterate Offices\Sequence Container\Campaign Members\Search Campaigns.Outputs[JsonSourceOutput]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Campaign Members.Paths[Merge Join Output]"
                      endId="Package\Iterate Offices\Sequence Container\Campaign Members\Insert or Ignore.Inputs[Conditional Split Input]"
                      name="Merge Join Output"
                      startId="Package\Iterate Offices\Sequence Container\Campaign Members\Merge Join To Find Those to Insert.Outputs[Merge Join Output]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Campaign Members.Paths[OLE DB Source Output]"
                      endId="Package\Iterate Offices\Sequence Container\Campaign Members\SQL Sort.Inputs[Sort Input]"
                      name="OLE DB Source Output"
                      startId="Package\Iterate Offices\Sequence Container\Campaign Members\Existing Campaign Members from SQL.Outputs[OLE DB Source Output]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Campaign Members.Paths[Response Output]"
                      endId="Package\Iterate Offices\Sequence Container\Campaign Members\JSON Parser Add id back in.Inputs[JsonParserTransformInput]"
                      name="Response Output"
                      startId="Package\Iterate Offices\Sequence Container\Campaign Members\Read details.Outputs[Response Output]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Campaign Members.Paths[Sort Output]"
                      endId="Package\Iterate Offices\Sequence Container\Campaign Members\Merge Join To Find Those to Insert.Inputs[Merge Join Right Input]"
                      name="Sort Output"
                      startId="Package\Iterate Offices\Sequence Container\Campaign Members\SQL Sort.Outputs[Sort Output]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Campaign Members.Paths[Sort Output1]"
                      endId="Package\Iterate Offices\Sequence Container\Campaign Members\Merge Join To Find Those to Insert.Inputs[Merge Join Left Input]"
                      name="Sort Output"
                      startId="Package\Iterate Offices\Sequence Container\Campaign Members\API Sort.Outputs[Sort Output]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Campaign Members.Paths[upsert]"
                      endId="Package\Iterate Offices\Sequence Container\Campaign Members\Build request.Inputs[JsonInput1]"
                      name="upsert"
                      startId="Package\Iterate Offices\Sequence Container\Campaign Members\Insert or Ignore.Outputs[upsert]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Campaign Members.Paths[WebApiDestination Error Output]"
                      endId="Package\Iterate Offices\Sequence Container\Campaign Members\Trash Destination 1.Inputs[TrashDestinationInput]"
                      name="WebApiDestination Error Output"
                      startId="Package\Iterate Offices\Sequence Container\Campaign Members\Read details.Outputs[WebApiDestination Error Output]" />
                  </paths>
                </pipeline>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Iterate Offices\Sequence Container\Campaigns"
              DTS:CreationName="Microsoft.Pipeline"
              DTS:Description="Data Flow Task"
              DTS:DTSID="{fd4da63f-1999-43a9-a28a-6554d12a21cd}"
              DTS:ExecutableType="Microsoft.Pipeline"
              DTS:LocaleID="-1"
              DTS:ObjectName="Campaigns"
              DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:ObjectData>
                <pipeline
                  version="1">
                  <components>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Campaigns\Add accountid and origin"
                      componentClassID="Microsoft.DerivedColumn"
                      contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                      name="Add accountid and origin"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Campaigns\Add accountid and origin.Inputs[Derived Column Input]"
                          description="Input to the Derived Column Transformation"
                          name="Derived Column Input">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Campaigns\Add accountid and origin.Outputs[Derived Column Output]"
                          description="Default Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          name="Derived Column Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Campaigns\Add accountid and origin.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\Add accountid and origin.Outputs[Derived Column Output].Columns[AccountId]"
                              dataType="i4"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaigns\Add accountid and origin.Outputs[Derived Column Output].Columns[AccountId]"
                              name="AccountId"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">@[User::RexAccountID]</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">@[User::RexAccountID]</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\Add accountid and origin.Outputs[Derived Column Output].Columns[Origin]"
                              dataType="i4"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaigns\Add accountid and origin.Outputs[Derived Column Output].Columns[Origin]"
                              name="Origin"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">2</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">2</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Campaigns\Add accountid and origin.Outputs[Derived Column Error Output]"
                          description="Error Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Derived Column Error Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Campaigns\Add accountid and origin.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\Add accountid and origin.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaigns\Add accountid and origin.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\Add accountid and origin.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaigns\Add accountid and origin.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Campaigns\API Sort"
                      componentClassID="Microsoft.Sort"
                      contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
                      name="API Sort"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                          name="EliminateDuplicates">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the maximum number of threads to use for sorting."
                          expressionType="Notify"
                          name="MaximumThreads">-1</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Campaigns\API Sort.Inputs[Sort Input]"
                          name="Sort Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\API Sort.Inputs[Sort Input].Columns[etag]"
                              cachedDataType="wstr"
                              cachedLength="68"
                              cachedName="etag"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaigns\Search Campaigns.Outputs[JsonSourceOutput].Columns[etag]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\API Sort.Inputs[Sort Input].Columns[id]"
                              cachedDataType="i4"
                              cachedName="id"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaigns\Search Campaigns.Outputs[JsonSourceOutput].Columns[id]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">1</property>
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Campaigns\API Sort.Outputs[Sort Output]"
                          isSorted="true"
                          name="Sort Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\API Sort.Outputs[Sort Output].Columns[etag]"
                              dataType="wstr"
                              length="68"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaigns\API Sort.Outputs[Sort Output].Columns[etag]"
                              name="etag">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Iterate Offices\Sequence Container\Campaigns\Search Campaigns.Outputs[JsonSourceOutput].Columns[etag]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\API Sort.Outputs[Sort Output].Columns[id]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaigns\API Sort.Outputs[Sort Output].Columns[id]"
                              name="id"
                              sortKeyPosition="1">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Iterate Offices\Sequence Container\Campaigns\Search Campaigns.Outputs[JsonSourceOutput].Columns[id]}</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Campaigns\Build request"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="JSON Generator Transform; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="The JSON generator transform can be used to create JSON document from single or multiple inputs. You can create simple or nested JSON document."
                      name="Build request"
                      version="5">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.Int32"
                          description="Determines JSON format and output mode (e.g. one JSON for all input rows or one JSON for each input row)"
                          expressionType="Notify"
                          name="OutputMode"
                          typeConverter="ZappySys.PowerPack.Transform.JsonGeneratorTransform.JsonOutputMode">2</property>
                        <property
                          dataType="System.String"
                          description="Defines shape of output JSON string"
                          expressionType="Notify"
                          name="LayoutInfo">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;settings ver="3"&gt;
  &lt;dataset id="ds_id729" main="True" inputid="729" readfrominput="True"&gt;&lt;/dataset&gt;
  &lt;map name="method" value="Campaigns::read" datatype="String" /&gt;
  &lt;map name="args"&gt;
    &lt;map src="id" name="id" datatype="String" /&gt;
  &lt;/map&gt;
  &lt;map name="strip_response_prefixes" value="true" datatype="Bool" /&gt;
  &lt;map name="token" value="{{User::RexToken}}" /&gt;
&lt;/settings&gt;</property>
                        <property
                          dataType="System.Boolean"
                          description="Do not output attribute if value is NULL. By default null attribute is output as &quot;MyColname&quot; : null "
                          expressionType="Notify"
                          name="DoNotOutputNullAttribute">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indent JSON Text generated by this transform (Pretty Print)"
                          expressionType="Notify"
                          name="IndentOutput">false</property>
                        <property
                          dataType="System.String"
                          description="Default output format for datetime columns"
                          expressionType="Notify"
                          name="DateTimeFormat">yyyy-MM-dd HH:mm:ss</property>
                        <property
                          dataType="System.String"
                          description="Culture setting for this task. This option is useful to control output format for certain data types (e.g. number, decimal) based on regional settings. In USA dot is used for decimal indicator but in Germany it may be comma. Leave this blank if you want to use system default settings."
                          expressionType="Notify"
                          name="Culture"></property>
                        <property
                          dataType="System.Boolean"
                          description="Document Header/Footer text come from upstream column rather than direct string"
                          expressionType="Notify"
                          name="UseColumnForHeaderFooter">false</property>
                        <property
                          dataType="System.String"
                          description="Header text for document (Added before each document in the output)"
                          expressionType="Notify"
                          name="DocumentHeader"></property>
                        <property
                          dataType="System.String"
                          description="Footer text for document (Added after each document in the output)"
                          expressionType="Notify"
                          name="DocumentFooter"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies how many rows to include in each batch (Array records for single dataset array mode). 0=Include all in one batch. This setting is only valid for Mode=[Single Dataset Array]"
                          expressionType="Notify"
                          name="ArrayBatchSize">0</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.JsonGeneratorTransform</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to True if you dont want to output empty nodes of sub document (e.g nested property). This option is only applicable if you enabled DoNotOutputNullProperty. If all child peoprties are NULL for parent node then by default output contains empty nodes (e.g. CountryInfo: { CityInfo: { } } for Json --OR-- &lt;CountryInfo&gt;&lt;CityInfo /&gt;&lt;/CountryInfo&gt; for Xml). You can enable this option to avoid such empty nodes from the output."
                          expressionType="Notify"
                          name="DoNotOutputEmptyNestedAttribute">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to True if you dont want to output empty array nodes when no record found for that array (e.g. &quot;Orders&quot;: [ ] for JSON --OR-- &lt;Orders&gt;&lt;/Orders&gt; for Xml). You can enable this option to avoid such empty nodes from the output."
                          expressionType="Notify"
                          name="DoNotOutputEmptyArrayAttribute">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies encoding for data. If you set CharacterSet property then Encoing is ignored."
                          expressionType="Notify"
                          name="Encoding"
                          typeConverter="ZappySys.Common.EncodingType">2</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Campaigns\Build request.Inputs[JsonInput1]"
                          name="JsonInput1">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Id for attached dataset with input. Use JSON Layout Editor to see attached dataset"
                              expressionType="Notify"
                              name="DatasetInputId">729</property>
                          </properties>
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\Build request.Inputs[JsonInput1].Columns[etag]"
                              cachedDataType="wstr"
                              cachedLength="68"
                              cachedName="etag"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaigns\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etag]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\Build request.Inputs[JsonInput1].Columns[id]"
                              cachedDataType="i4"
                              cachedName="id"
                              cachedSortKeyPosition="1"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaigns\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[id]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\Build request.Inputs[JsonInput1].Columns[etagsql]"
                              cachedDataType="wstr"
                              cachedLength="250"
                              cachedName="etagsql"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaigns\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etagsql]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Campaigns\Build request.Inputs[JsonInput2]"
                          name="JsonInput2">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Campaigns\Build request.Outputs[JsonGeneratorTransformOutput]"
                          errorOrTruncationOperation="Error"
                          name="JsonGeneratorTransformOutput">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\Build request.Outputs[JsonGeneratorTransformOutput].Columns[ZS_JSON_OUT]"
                              dataType="nText"
                              description="This output column contains generated JSON string from JSON generator Transform"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaigns\Build request.Outputs[JsonGeneratorTransformOutput].Columns[ZS_JSON_OUT]"
                              name="ZS_JSON_OUT" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Campaigns\Existing Campaigns from SQL"
                      componentClassID="Microsoft.OLEDBSource"
                      contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                      description="OLE DB Source"
                      name="Existing Campaigns from SQL"
                      usesDispositions="true"
                      version="7">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">0</property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the database object used to open a rowset."
                          name="OpenRowset">[dbo].[vwContacts]</property>
                        <property
                          dataType="System.String"
                          description="Specifies the variable that contains the name of the database object used to open a rowset."
                          name="OpenRowsetVariable"></property>
                        <property
                          dataType="System.String"
                          description="The SQL command to be executed."
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">SELECT [Id], 
       [etag] as etagsql, 
       [AccountId]
FROM [Entities].[dbo].Campaigns with (NOLOCK)
WHERE [AccountId] = ?</property>
                        <property
                          dataType="System.String"
                          description="The variable that contains the SQL command to be executed."
                          name="SqlCommandVariable"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Boolean"
                          description="Forces the use of the DefaultCodePage property value when describing character data."
                          name="AlwaysUseDefaultCodePage">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the mode used to access the database."
                          name="AccessMode"
                          typeConverter="AccessMode">2</property>
                        <property
                          dataType="System.String"
                          description="The mappings between the parameters in the SQL command and variables."
                          name="ParameterMapping">"Parameter0:Input",{40C273CD-83FA-4737-B171-10500D92D346};</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Iterate Offices\Sequence Container\Campaigns\Existing Campaigns from SQL.Connections[OleDbConnection]"
                          connectionManagerID="Package.ConnectionManagers[colsqlbi01v.Entities]"
                          connectionManagerRefId="Package.ConnectionManagers[colsqlbi01v.Entities]"
                          description="The OLE DB runtime connection used to access the database."
                          name="OleDbConnection" />
                      </connections>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Campaigns\Existing Campaigns from SQL.Outputs[OLE DB Source Output]"
                          name="OLE DB Source Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\Existing Campaigns from SQL.Outputs[OLE DB Source Output].Columns[Id]"
                              dataType="i4"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Campaigns\Existing Campaigns from SQL.Outputs[OLE DB Source Output].ExternalColumns[Id]"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaigns\Existing Campaigns from SQL.Outputs[OLE DB Source Output].Columns[Id]"
                              name="Id"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\Existing Campaigns from SQL.Outputs[OLE DB Source Output].Columns[AccountId]"
                              dataType="i2"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Campaigns\Existing Campaigns from SQL.Outputs[OLE DB Source Output].ExternalColumns[AccountId]"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaigns\Existing Campaigns from SQL.Outputs[OLE DB Source Output].Columns[AccountId]"
                              name="AccountId"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\Existing Campaigns from SQL.Outputs[OLE DB Source Output].Columns[etagsql]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Campaigns\Existing Campaigns from SQL.Outputs[OLE DB Source Output].ExternalColumns[etagsql]"
                              length="250"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaigns\Existing Campaigns from SQL.Outputs[OLE DB Source Output].Columns[etagsql]"
                              name="etagsql"
                              truncationRowDisposition="FailComponent" />
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\Existing Campaigns from SQL.Outputs[OLE DB Source Output].ExternalColumns[Id]"
                              dataType="i4"
                              name="Id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\Existing Campaigns from SQL.Outputs[OLE DB Source Output].ExternalColumns[AccountId]"
                              codePage="1252"
                              dataType="str"
                              length="4"
                              name="AccountId" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\Existing Campaigns from SQL.Outputs[OLE DB Source Output].ExternalColumns[etagsql]"
                              dataType="wstr"
                              length="250"
                              name="etagsql" />
                          </externalMetadataColumns>
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Campaigns\Existing Campaigns from SQL.Outputs[OLE DB Source Error Output]"
                          isErrorOut="true"
                          name="OLE DB Source Error Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\Existing Campaigns from SQL.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaigns\Existing Campaigns from SQL.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\Existing Campaigns from SQL.Outputs[OLE DB Source Error Output].Columns[etagsql]"
                              dataType="wstr"
                              length="250"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaigns\Existing Campaigns from SQL.Outputs[OLE DB Source Error Output].Columns[etagsql]"
                              name="etagsql" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\Existing Campaigns from SQL.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaigns\Existing Campaigns from SQL.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\Existing Campaigns from SQL.Outputs[OLE DB Source Error Output].Columns[Id]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaigns\Existing Campaigns from SQL.Outputs[OLE DB Source Error Output].Columns[Id]"
                              name="Id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\Existing Campaigns from SQL.Outputs[OLE DB Source Error Output].Columns[AccountId]"
                              codePage="1252"
                              dataType="str"
                              length="4"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaigns\Existing Campaigns from SQL.Outputs[OLE DB Source Error Output].Columns[AccountId]"
                              name="AccountId" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Campaigns\Insert or Ignore"
                      componentClassID="Microsoft.ConditionalSplit"
                      contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
                      name="Insert or Ignore"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Campaigns\Insert or Ignore.Inputs[Conditional Split Input]"
                          description="Input to the Conditional Split Transformation"
                          name="Conditional Split Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\Insert or Ignore.Inputs[Conditional Split Input].Columns[etag]"
                              cachedDataType="wstr"
                              cachedLength="68"
                              cachedName="etag"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaigns\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etag]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\Insert or Ignore.Inputs[Conditional Split Input].Columns[etagsql]"
                              cachedDataType="wstr"
                              cachedLength="250"
                              cachedName="etagsql"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaigns\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etagsql]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Campaigns\Insert or Ignore.Outputs[upsert]"
                          description="Output 1 of the Conditional Split Transformation"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          exclusionGroup="1"
                          name="upsert"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Campaigns\Insert or Ignore.Inputs[Conditional Split Input]"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                              name="Expression">[ISNULL](#{Package\Iterate Offices\Sequence Container\Campaigns\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etagsql]}) || (#{Package\Iterate Offices\Sequence Container\Campaigns\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etagsql]}) != #{Package\Iterate Offices\Sequence Container\Campaigns\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etag]}</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the friendly version of the expression. This expression version uses column names."
                              expressionType="Notify"
                              name="FriendlyExpression">ISNULL(etagsql) || (etagsql) != etag</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                              name="EvaluationOrder">0</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Campaigns\Insert or Ignore.Outputs[ignore]"
                          description="Output 2 of the Conditional Split Transformation"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          exclusionGroup="1"
                          name="ignore"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Campaigns\Insert or Ignore.Inputs[Conditional Split Input]"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                              name="Expression">![ISNULL](#{Package\Iterate Offices\Sequence Container\Campaigns\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etagsql]})</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the friendly version of the expression. This expression version uses column names."
                              expressionType="Notify"
                              name="FriendlyExpression">!ISNULL(etagsql)</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                              name="EvaluationOrder">1</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Campaigns\Insert or Ignore.Outputs[Conditional Split Default Output]"
                          description="Default Output of the Conditional Split Transformation"
                          exclusionGroup="1"
                          name="Conditional Split Default Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Campaigns\Insert or Ignore.Inputs[Conditional Split Input]">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              name="IsDefaultOut">true</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Campaigns\Insert or Ignore.Outputs[Conditional Split Error Output]"
                          description="Error Output of the Conditional Split Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Conditional Split Error Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Campaigns\Insert or Ignore.Inputs[Conditional Split Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\Insert or Ignore.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaigns\Insert or Ignore.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\Insert or Ignore.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaigns\Insert or Ignore.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Campaigns\JSON Parser Add id back in"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="JSON Parser Transform; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="Parse incoming JSON String into columns. You can also parse and transform single JSON record into multiple rows by filtering data based on JSON Path (e.g. $.Customer.Orders[*])"
                      name="JSON Parser Add id back in"
                      usesDispositions="true"
                      version="2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for any numeric data types"
                          expressionType="Notify"
                          name="TreatBlankNumberAsNull">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for bool data types"
                          expressionType="Notify"
                          name="TreatBlankBoolAsNull">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for any date/time data types"
                          expressionType="Notify"
                          name="TreatBlankDateAsNull">true</property>
                        <property
                          dataType="System.String"
                          description="Sample JSON data used to parse output columns."
                          expressionType="Notify"
                          name="SampleData"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">{
	"method":"MatchProfiles::read",
	"args":
	{
	    "id": 340044
    },
	"strip_response_prefix": true,
	"token": "8a4c-6aa2-cf29-4822-8b51-3dd8-8278-5f64-1824-19443"
}</property>
                        <property
                          dataType="System.Boolean"
                          description="Include all upstream parent columns into output except the one you selected to parse. By default only parsed columns from Input document is included in the output. If you wish to include all other upstream columns in the output too then check this option."
                          expressionType="Notify"
                          name="OutputAllUpstreamColumns">true</property>
                        <property
                          dataType="System.Int32"
                          description="Defines how to handle empty input. By default NULL or Empty input is skipped from parsing."
                          expressionType="Notify"
                          name="EmptyInputProcessingMode"
                          typeConverter="ZappySys.Common.Data.EmptyInputProcessingMode">0</property>
                        <property
                          dataType="System.String"
                          description="Defines how to handle empty input. By default NULL or Empty input is skipped from parsing."
                          expressionType="Notify"
                          name="TreatEmptyInputAs">{ }</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum JSON records to fetch. Set this value to 0 for all records"
                          expressionType="Notify"
                          name="MaxRows">0</property>
                        <property
                          dataType="System.String"
                          description="Enter expression here to filter data.(Example:  $.Users[*].UserName ) This will fetch User names from users records"
                          expressionType="Notify"
                          name="Filter"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.Boolean"
                          description="Use this option to include parent properties (Non array) in the output along with Filtered Rows"
                          expressionType="Notify"
                          name="IncludeParentColumns">true</property>
                        <property
                          dataType="System.Boolean"
                          description="By default child and parent information is not included in the output if children not found for specified expression. For example if you want to extract all orders from all customers nodes then you can type $.Customers[*].Orders[*]. This will fetch all orders from all customers. By default customers records without orders wont be included in the output. If you want to include those customers where orders not found then check this option (Output null information for order attributes). This behavior is similar to LEFT OUTER JOIN in SQL (Left side is parent, right side is child). This option is ***resource intensive*** so only check if you really care about this behavior."
                          expressionType="Notify"
                          name="IncludeParentColumnsWhenChildMissing">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to true if you want to output parent columns which are array. By default any parent column which is an array is not included in output. See also FilterForParentColumnsWithArrayType property if you set this property"
                          expressionType="Notify"
                          name="IncludeParentColumnsWithArrayType">false</property>
                        <property
                          dataType="System.String"
                          description="Filter expression to extract value form parent"
                          expressionType="Notify"
                          name="FilterForParentColumnsWithArrayType"></property>
                        <property
                          dataType="System.String"
                          description="Prefix for parent column name. This option is only valid if you have set IncludeParentColumns=True"
                          expressionType="Notify"
                          name="ParentColumnPrefix">P_</property>
                        <property
                          dataType="System.Boolean"
                          description="Throw error if property name specified in filter expression is missing. By default it will ignore any missing property errors."
                          expressionType="Notify"
                          name="ThrowErrorIfPropertyMissing">false</property>
                        <property
                          dataType="System.Int32"
                          description="This property how many nested levels should be scanned to fetch various properties. 0=Scan all child levels."
                          expressionType="Notify"
                          name="MaxLevelsToScan">0</property>
                        <property
                          dataType="System.String"
                          description="List comma separated property names from JSON document which you want to exclude from output. Specify parent property name to exclude all child nodes."
                          expressionType="Notify"
                          name="ExcludedProperties"></property>
                        <property
                          dataType="System.String"
                          description="Property level separator used in generated property name (separator for outer properties - Above selected filter node). Use this if default separator is producing duplicate property name which is conflicting with existing name."
                          expressionType="Notify"
                          name="LevelSeparator">_</property>
                        <property
                          dataType="System.Boolean"
                          description="Enables deep array flattening for selected filtered hierarchy. When you turn on this property it will flatten each property of each array item and expose as column (e.g. If you have Filter set as $.customers[*] and for each customer you have an array of Addresses then you may see output columns like Addresses.1.City, Addresses.1.State, Addresses.2.City, Addresses.2.State .... Addresses.N.City, Addresses.N.State). You can control how many array items you want to flatten by setting MaxArrayItemsToFlatten property."
                          expressionType="Notify"
                          name="EnableArrayFlattening">false</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum number of array items to flatten. inner array flattening. Adjust this property to control how many columns being generated. This option is ignored if you set EnableArrayFlattening=false"
                          expressionType="Notify"
                          name="MaxArrayItemsToFlatten">10</property>
                        <property
                          dataType="System.String"
                          description="Specifies how custom date formatted strings are parsed when reading JSON."
                          expressionType="Notify"
                          name="DateFormatString"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies how date formatted strings, e.g. Date(1198908717056) and 2012-03-21T05:40Z, are parsed when reading JSON."
                          expressionType="Notify"
                          name="DateParseHandling"
                          typeConverter="ZappySys.Common.DateParseHandling">1</property>
                        <property
                          dataType="System.Boolean"
                          description="Output as raw JSON document rather than parsing individual fields. This option is helpful if you have documents stored in a file and you want to pass them downstream as raw JSON string rather than parsing into columns."
                          expressionType="Notify"
                          name="OutputRawDocument">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indent JSON output so its easy to read."
                          expressionType="Notify"
                          name="IndentOutput">false</property>
                        <property
                          dataType="System.Boolean"
                          description="When this property is true then Column is converted to Row. Pivoted names will appear under  Pivot_Name column and values will appear under Pivot_Value field."
                          expressionType="Notify"
                          name="EnablePivot">false</property>
                        <property
                          dataType="System.Int32"
                          description="Array Transformation you want to apply. Useful for case when you have 2-Dimensional arrays with rows/columns in separate arrays."
                          expressionType="Notify"
                          name="ArrayTransformationType"
                          typeConverter="ZappySys.Json.ArrayTransformType">0</property>
                        <property
                          dataType="System.String"
                          description="Filter expression to use to extract column names for array transformation."
                          expressionType="Notify"
                          name="ArrayTransColumnNameFilter"></property>
                        <property
                          dataType="System.String"
                          description="Filter expression for row values (Not applicable for simple array transformation)."
                          expressionType="Notify"
                          name="ArrayTransRowValueFilter"></property>
                        <property
                          dataType="System.Boolean"
                          description="When you have 2D array but don't have column list specified in a separate array then use this option (e.g. { arr: [[10,11],[21,22]] } )."
                          expressionType="Notify"
                          name="ArrayTransEnableCustomColumns">false</property>
                        <property
                          dataType="System.String"
                          description="When you have 2D array but don't have column list specified in a separate array then use specify column names here. Use comma separated list (e.g col1,col2,col3 ). Column name Order must match value order."
                          expressionType="Notify"
                          name="ArrayTransCustomColumns"></property>
                        <property
                          dataType="System.Int32"
                          description="Metadata scan mode controls how data type and length is determined. By default few records scanned to determine datatype/length. Changing ScanMode affects length/datatype accuracy."
                          expressionType="Notify"
                          name="MetaDataScanMode"
                          typeConverter="ZappySys.Common.Data.MetaDataScanMode">4</property>
                        <property
                          dataType="System.Int32"
                          description="Length for all string column. This option is only valid for MetaDataScanMode=Custom"
                          expressionType="Notify"
                          name="MetaDataCustomLength">1000</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.JsonParserTransform</property>
                        <property
                          dataType="System.Boolean"
                          name="EnableBigNumberHandling">false</property>
                        <property
                          dataType="System.Int32"
                          name="Encoding">0</property>
                        <property
                          dataType="System.String"
                          name="CharacterSet"></property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Campaigns\JSON Parser Add id back in.Inputs[JsonParserTransformInput]"
                          errorRowDisposition="FailComponent"
                          name="JsonParserTransformInput"
                          truncationRowDisposition="FailComponent">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\JSON Parser Add id back in.Inputs[JsonParserTransformInput].Columns[ZS_JSON_OUT]"
                              cachedDataType="nText"
                              cachedName="ZS_JSON_OUT"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaigns\Build request.Outputs[JsonGeneratorTransformOutput].Columns[ZS_JSON_OUT]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\JSON Parser Add id back in.Inputs[JsonParserTransformInput].Columns[ResponseText]"
                              cachedDataType="nText"
                              cachedName="ResponseText"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaigns\Read details.Outputs[Response Output].Columns[ResponseText]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Campaigns\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[ResponseText]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\JSON Parser Add id back in.Inputs[JsonParserTransformInput].Columns[StatusCode]"
                              cachedDataType="i4"
                              cachedName="StatusCode"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaigns\Read details.Outputs[Response Output].Columns[StatusCode]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Campaigns\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[StatusCode]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True" />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Campaigns\JSON Parser Add id back in.Outputs[JsonParserTransformOutput]"
                          errorOrTruncationOperation="Error"
                          errorRowDisposition="FailComponent"
                          name="JsonParserTransformOutput"
                          truncationRowDisposition="FailComponent">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[StatusCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaigns\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[StatusCode]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Campaigns\JSON Parser Add id back in.Inputs[JsonParserTransformInput].Columns[StatusCode]"
                              name="StatusCode" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[ResponseText]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaigns\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[ResponseText]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Campaigns\JSON Parser Add id back in.Inputs[JsonParserTransformInput].Columns[ResponseText]"
                              name="ResponseText" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[method]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Campaigns\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].ExternalColumns[method]"
                              length="76"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaigns\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[method]"
                              name="method" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[token]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Campaigns\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].ExternalColumns[token]"
                              length="200"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaigns\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[token]"
                              name="token" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[args.id]"
                              dataType="i8"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Campaigns\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].ExternalColumns[args.id]"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaigns\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[args.id]"
                              name="args.id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[strip_response_prefix]"
                              dataType="bool"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Campaigns\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].ExternalColumns[strip_response_prefix]"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaigns\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[strip_response_prefix]"
                              name="strip_response_prefix" />
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].ExternalColumns[method]"
                              dataType="wstr"
                              length="76"
                              name="method" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].ExternalColumns[args.id]"
                              dataType="i8"
                              name="args.id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].ExternalColumns[strip_response_prefix]"
                              dataType="bool"
                              name="strip_response_prefix" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].ExternalColumns[token]"
                              dataType="wstr"
                              length="200"
                              name="token" />
                          </externalMetadataColumns>
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Campaigns\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output]"
                          isErrorOut="true"
                          name="JsonParserTransform Error Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[StatusCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaigns\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[StatusCode]"
                              name="StatusCode" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[ResponseText]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaigns\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[ResponseText]"
                              name="ResponseText" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[method]"
                              dataType="wstr"
                              length="76"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaigns\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[method]"
                              name="method" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[token]"
                              dataType="wstr"
                              length="200"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaigns\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[token]"
                              name="token" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[args.id]"
                              dataType="i8"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaigns\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[args.id]"
                              name="args.id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[strip_response_prefix]"
                              dataType="bool"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaigns\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[strip_response_prefix]"
                              name="strip_response_prefix" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaigns\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaigns\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[ErrorColumnName]"
                              codePage="1252"
                              dataType="str"
                              length="128"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaigns\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[ErrorColumnName]"
                              name="ErrorColumnName" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[ErrorMessage]"
                              dataType="wstr"
                              length="1024"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaigns\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[ErrorMessage]"
                              name="ErrorMessage" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[ErrorRawData]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaigns\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[ErrorRawData]"
                              name="ErrorRawData" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Campaigns\Merge Join To Find Those to Insert"
                      componentClassID="Microsoft.MergeJoin"
                      contactInfo="Merge Join;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Combine two sorted data flows into one using the FULL, LEFT, or INNER join. We recommend this transformation when data flows can be sorted at their sources."
                      name="Merge Join To Find Those to Insert"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of join to perform."
                          name="JoinType"
                          typeConverter="JoinType">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the number of columns in the ordering key."
                          name="NumKeyColumns">1</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the null values are treated as equal values."
                          name="TreatNullsAsEqual">true</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates the requested maximum buffers per input before blocking."
                          name="MaxBuffersPerInput">5</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Campaigns\Merge Join To Find Those to Insert.Inputs[Merge Join Left Input]"
                          hasSideEffects="true"
                          name="Merge Join Left Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\Merge Join To Find Those to Insert.Inputs[Merge Join Left Input].Columns[etag]"
                              cachedDataType="wstr"
                              cachedLength="68"
                              cachedName="etag"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaigns\API Sort.Outputs[Sort Output].Columns[etag]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\Merge Join To Find Those to Insert.Inputs[Merge Join Left Input].Columns[id]"
                              cachedDataType="i4"
                              cachedName="id"
                              cachedSortKeyPosition="1"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaigns\API Sort.Outputs[Sort Output].Columns[id]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Campaigns\Merge Join To Find Those to Insert.Inputs[Merge Join Right Input]"
                          hasSideEffects="true"
                          name="Merge Join Right Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\Merge Join To Find Those to Insert.Inputs[Merge Join Right Input].Columns[Id]"
                              cachedDataType="i4"
                              cachedName="Id"
                              cachedSortKeyPosition="1"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaigns\SQL Sort.Outputs[Sort Output].Columns[Id]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\Merge Join To Find Those to Insert.Inputs[Merge Join Right Input].Columns[etagsql]"
                              cachedDataType="wstr"
                              cachedLength="250"
                              cachedName="etagsql"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaigns\SQL Sort.Outputs[Sort Output].Columns[etagsql]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Campaigns\Merge Join To Find Those to Insert.Outputs[Merge Join Output]"
                          isSorted="true"
                          name="Merge Join Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etag]"
                              dataType="wstr"
                              length="68"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaigns\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etag]"
                              name="etag">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Iterate Offices\Sequence Container\Campaigns\Merge Join To Find Those to Insert.Inputs[Merge Join Left Input].Columns[etag]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[id]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaigns\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[id]"
                              name="id"
                              sortKeyPosition="1">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Iterate Offices\Sequence Container\Campaigns\Merge Join To Find Those to Insert.Inputs[Merge Join Left Input].Columns[id]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etagsql]"
                              dataType="wstr"
                              length="250"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaigns\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etagsql]"
                              name="etagsql">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Iterate Offices\Sequence Container\Campaigns\Merge Join To Find Those to Insert.Inputs[Merge Join Right Input].Columns[etagsql]}</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Campaigns\Read details"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Web API Destination; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="The Web API destination can be used to send data to Web API URL (e.g. Submit or POST data to REST API/SOAP or other HTTP/HTTPS endpoints)"
                      name="Read details"
                      usesDispositions="true"
                      version="5">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.String"
                          description="API URL you want to access"
                          expressionType="Notify"
                          name="HttpRequestUrl">{{User::RexAPIWebURL}}</property>
                        <property
                          dataType="System.String"
                          description="Http Web Request Method (e.g. POST, GET, PUT, LIST, DELETE...). Refer your API documentation if you are not sure which method you have to use."
                          expressionType="Notify"
                          name="HttpRequestMethod">POST</property>
                        <property
                          dataType="System.String"
                          description="Set this if you want to set custom Http headers. You may use variable anywhere in the header value using syntax {{User::YourVarName}}. Syntax of Header key value pair is : &amp;lt;request&amp;gt;&amp;lt;header&amp;gt;&amp;lt;name&amp;gt;x-myheader-1&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;AAA&amp;lt;/value&amp;gt;&amp;lt;/header&amp;gt; &amp;lt;header&amp;gt;&amp;lt;name&amp;gt;x-myheader-2&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;BBB&amp;lt;/value&amp;gt;&amp;lt;/header&amp;gt;&amp;lt;/request&amp;gt;"
                          expressionType="Notify"
                          name="HttpHeaders"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">&lt;request&gt;&lt;header&gt;&lt;name&gt;Accept&lt;/name&gt;&lt;value&gt;*/*&lt;/value&gt;&lt;/header&gt;&lt;header&gt;&lt;name&gt;Cache-Control&lt;/name&gt;&lt;value&gt;no-cache&lt;/value&gt;&lt;/header&gt;&lt;header&gt;&lt;name&gt;X-App-Identifier&lt;/name&gt;&lt;value&gt;client:spicerhaart:{{System::PackageName}}:{{System::TaskName}}&lt;/value&gt;&lt;/header&gt;&lt;/request&gt;</property>
                        <property
                          dataType="System.String"
                          description="User defined data you wish to send along with your HTTP Request (e.g. Upload file data, Form POST data). Usually you have to set content-type of your data but if you select RequestMethod=POST then system will automatically set content-type=application/x-www-form-urlencoded."
                          expressionType="Notify"
                          name="HttpRequestData"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies content type for data you wish to POST. If you select Default option then system default content type will be used (i.e. application/x-www-form-urlencoded). If you specify Content-Type header along with this option then header value takes precedence."
                          expressionType="Notify"
                          name="HttpRequestContentType"
                          typeConverter="ZappySys.Common.Web.HttpRequestContentType">2</property>
                        <property
                          dataType="System.Boolean"
                          description="If this option is true then component will continue without exception on 404 error (Url not found). This allows you to consume data gracefully."
                          expressionType="Notify"
                          name="ContinueOnUrlNotFoundError">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Ignore SSL certificate related errors. Example: if you getting SSL/TLS errors because of certificate expired or certificate is not from trusted authority or certificate is self-signed. By checking this option you will not get SSL/TLS error."
                          expressionType="Notify"
                          name="IgnoreCertificateErrors">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Allow unsecure ciphers/suites and curves for SSLS/TLS communication. Use this option to communicate with web servers which needs legacy / unsecured ciphers support. This option is only trigged when you change default SSL/TLS Version on advanced settings tab."
                          expressionType="Notify"
                          name="AllowUnsecureSuite">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Enable support for gzip or deflate compression. When you check this option compressed response automatically de-compressed saving bandwidth. This option is only valid if web server supports compressed response stream. Check your API documentation for more information."
                          expressionType="Notify"
                          name="EnableCompressionSupport">true</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies which security protocol is supported for HTTPS communication. Using this option you can enable legacy protocol or enforce to use latest version of security protocol (Note: TLS 1.2 is only supported in SSIS 2014 or Higher)."
                          expressionType="Notify"
                          name="SecurityProtocol"
                          typeConverter="ZappySys.PowerPack.Common.HttpsSecurityProtocolType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Wait time in milliseconds (Pause after each request). 0=No wait. Use this delay time if your API has limit on how many requests you can make in certain time frame."
                          expressionType="Notify"
                          name="WaitTime">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you redirect error to error output by default you get additional information in ErrorMessage column. Check this option if you need exact Response Body (Useful if its in JSON/XML format which needs to be parsed for additional information for later step)."
                          expressionType="Notify"
                          name="OnErrorOutputResponseBody">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Enable multiple requests using parallel threads."
                          expressionType="Notify"
                          name="EnableParallelRequests">true</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum parallel threads to use for processing multiple web requests."
                          expressionType="Notify"
                          name="MaxParallelThreads">3</property>
                        <property
                          dataType="System.Boolean"
                          description="By default one request is sent for each input row. If your API supports multiple records in a single call via HTTP Body then enable this setting. See also BodyBatchSize, BodyHeader, BodyFooter and BodyRowSeparator property."
                          expressionType="Notify"
                          name="EnableBodyBatch">false</property>
                        <property
                          dataType="System.String"
                          description="When you have to wrap input content between opening and closing tags for each call then set this property to specify opening for body content. For Example if you want to build Body like this (send max 100 rows per call) ==&gt; { records : [ {...}, {...}, {...} ] } then you can set BatchSize=100, BodyHeader as &quot;{ records: [&quot; , BodyFooter as &quot;] }&quot; and BodyRowSeperator as comma {,}. This property is ignored if EnableBodyBatch=false."
                          expressionType="Notify"
                          name="BodyHeader"></property>
                        <property
                          dataType="System.String"
                          description="When you have to wrap input content between opening and closing tags for each call then set this property to specify closing for body content. For Example if you want to build Body like this (send max 100 rows per call) ==&gt; { records : [ {...}, {...}, {...} ] } then you can set BatchSize=100, BodyHeader as &quot;{ records: [&quot; , BodyFooter as &quot;] }&quot; and BodyRowSeperator as comma {,}. This property is ignored if EnableBodyBatch=false."
                          expressionType="Notify"
                          name="BodyFooter"></property>
                        <property
                          dataType="System.Int32"
                          description="If your API supports multiple records via HTTP Body then change this setting &gt; 1 to include multiple upstream records into single call. See also BodyHeader, BodyFooter and BodyRowSeparator property. This property is ignored if EnableBodyBatch=false."
                          expressionType="Notify"
                          name="BodyBatchSize">100</property>
                        <property
                          dataType="System.String"
                          description="When you submit multiple rows in a batch you can separate multiple documents / records using custom separator (e.g. in JSON Array you can use comma {,} as record separator if POST document is in array format [ {...}, {...}, {...} ] ). For last row of batch blank separator is used."
                          expressionType="Notify"
                          name="BodyRowSeparator"></property>
                        <property
                          dataType="System.Boolean"
                          description="Returns response data as binary data (e.g. Byte Array). Check this option is response is Zip file, Image file or any non text data which needs to be exported as raw data without any encoding."
                          expressionType="Notify"
                          name="TreatResponseAsBinary">false</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.WebApiDestination</property>
                        <property
                          dataType="System.Boolean"
                          description="Check this option if you want to upload file(s) (i.e. POST RAW file data) or send data using Multi-Part encoding method (i.e. Content-Type: multipart/form-data). Multi-Part request allows you to mix key/value and upload files in same request. On the other hand raw upload allows only single file upload (without any key/value) &#xA;&#xA;==== Raw Upload (Content-Type: application/octet-stream) =====   &#xA;To upload single file in raw mode check this option and specify full file path starting with @ sign in the Body (e.g.  @c:\data\myfile.zip ) &#xA;&#xA;==== Form-Data / Multipart Upload (Content-Type: multipart/form-data) =====   &#xA;To treat your Request data as multi part fields you must specify key/value pairs separated by new lines into RequestData field (i.e. Body). Each key value pair is entered on new-line and key/value are separated using equal sign (=). Preceding and trailing spaces are ignored also blank lines are ignored. &#xA;If field value has some any special character(s) then use escape sequence (e.g. For NewLine: \r\n, For Tab: \t, For at (@): \@). When value of any field starts with at sign (@) its automatically treated as File you want to upload. By default file content type is determined based on extension however you can supply content type manually for any field using this way [ fieldname.Content-Type=some content type ]. In below example we have supplied Content-Type for file2 and SomeField1, all other fields are using default content-type.&#xA;See below Example of uploading multiple files along with additional fields.&#xA;&#xA;file1=@c:\data\Myfile1.txt&#xA;file2=@c:\data\Myfile2.json&#xA;file2.Content-Type=application/json&#xA;SomeField1=aaaaaaa&#xA;SomeField1.Content-Type=text/plain&#xA;SomeField2=12345&#xA;SomeFieldWithNewLineAndTab=This is line1\r\nThis is line2\r\nThis is \ttab \ttab \ttab&#xA;SomeFieldStartingWithAtSign=\@MyTwitterHandle&#xA;"
                          expressionType="Notify"
                          name="IsMultiPartUpload">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Enable this option if your server is expecting &#xA; (i.e. CRLF) after last Multi-Part boundary in the Body. This option is only applicable if you enabled IsMultiPartUpload and sending data in Key=value format (i.e. Mutipart). For raw file upload this option has no effect."
                          expressionType="Notify"
                          name="AddMultiPartPostamble">false</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Iterate Offices\Sequence Container\Campaigns\Read details.Connections[Connection]"
                          connectionManagerID="Package.ConnectionManagers[HTTP 1]"
                          connectionManagerRefId="Package.ConnectionManagers[HTTP 1]"
                          description="Connection manager for authentication (e.g. HTTP or OAuth Connection)"
                          name="Connection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Campaigns\Read details.Inputs[WebApiDestinationInput]"
                          errorRowDisposition="RedirectRow"
                          hasSideEffects="true"
                          name="WebApiDestinationInput"
                          truncationRowDisposition="RedirectRow">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\Read details.Inputs[WebApiDestinationInput].Columns[ZS_JSON_OUT]"
                              cachedDataType="nText"
                              cachedName="ZS_JSON_OUT"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Campaigns\Read details.Inputs[WebApiDestinationInput].ExternalColumns[HttpRequestData]"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaigns\Build request.Outputs[JsonGeneratorTransformOutput].Columns[ZS_JSON_OUT]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\Read details.Inputs[WebApiDestinationInput].ExternalColumns[HttpRequestUrl]"
                              dataType="wstr"
                              length="2000"
                              name="HttpRequestUrl" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\Read details.Inputs[WebApiDestinationInput].ExternalColumns[HttpRequestData]"
                              dataType="nText"
                              name="HttpRequestData" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\Read details.Inputs[WebApiDestinationInput].ExternalColumns[HttpHeaders]"
                              dataType="wstr"
                              length="2000"
                              name="HttpHeaders" />
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Campaigns\Read details.Outputs[WebApiDestination Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="WebApiDestination Error Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Campaigns\Read details.Inputs[WebApiDestinationInput]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\Read details.Outputs[WebApiDestination Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaigns\Read details.Outputs[WebApiDestination Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\Read details.Outputs[WebApiDestination Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaigns\Read details.Outputs[WebApiDestination Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\Read details.Outputs[WebApiDestination Error Output].Columns[ErrorColumnName]"
                              codePage="1252"
                              dataType="str"
                              length="128"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaigns\Read details.Outputs[WebApiDestination Error Output].Columns[ErrorColumnName]"
                              name="ErrorColumnName" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\Read details.Outputs[WebApiDestination Error Output].Columns[ErrorMessage]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaigns\Read details.Outputs[WebApiDestination Error Output].Columns[ErrorMessage]"
                              name="ErrorMessage" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Campaigns\Read details.Outputs[Response Output]"
                          exclusionGroup="1"
                          name="Response Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Campaigns\Read details.Inputs[WebApiDestinationInput]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\Read details.Outputs[Response Output].Columns[ResponseText]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaigns\Read details.Outputs[Response Output].Columns[ResponseText]"
                              name="ResponseText" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\Read details.Outputs[Response Output].Columns[StatusCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaigns\Read details.Outputs[Response Output].Columns[StatusCode]"
                              name="StatusCode" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Campaigns\record"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="JSON Parser Transform; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="Parse incoming JSON String into columns. You can also parse and transform single JSON record into multiple rows by filtering data based on JSON Path (e.g. $.Customer.Orders[*])"
                      name="record"
                      usesDispositions="true"
                      version="2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">3</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for any numeric data types"
                          expressionType="Notify"
                          name="TreatBlankNumberAsNull">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for bool data types"
                          expressionType="Notify"
                          name="TreatBlankBoolAsNull">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for any date/time data types"
                          expressionType="Notify"
                          name="TreatBlankDateAsNull">true</property>
                        <property
                          dataType="System.String"
                          description="Sample JSON data used to parse output columns."
                          expressionType="Notify"
                          name="SampleData"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">{"result":{"system_record_state":"active","system_ctime":1547732441,"system_modtime":1547732441,"system_completed_time":null,"reminder_description":"Send newsletter","reminder_date":"2019-01-17","track_instance_id":"953fc27c-191b-47d4-9c9f-6dd36c69f7ed","recur_frequency":null,"recur_unit":null,"recur_week_day":null,"recur_month_type":null,"recur_month_day":null,"recur_month_week_number":null,"recur_after_mode":null,"recurring_reminder_id":null,"recur_stop_after_date":null,"scheduled_send":null,"etag":"4932-1547732441","deferred":null,"security_user_rights":["read","update","purge"],"scheduled_send_time":null,"scheduled_send_connection_id":null,"remindee":{"id":"record_owner","type":"system","display":"Record Owner"},"system_modified_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"system_created_user":{"id":"19443","name":"Rosie API","first_name":"Rosie","last_name":"API","email_address":"rosie@spicerhaart.co.uk"},"contact":{"system_record_state":"active","system_ctime":"1547052879","system_modtime":"1594741628","name":"Laura Sullivan","email_address":"lindsay.davey@spicerhaart.co.uk","phone_number":"07769 661864","fax_number":null,"is_dnd":null,"type":"person","last_contacted_date":"2020-03-02","name_last":"Sullivan","address_postal":"104 Walton Way,\nNEWBURY, RG14 2LJ","address":"104 Walton Way,\nNEWBURY, RG14 2LJ","interest_level":null,"marketing_birthday":null,"marketing_enquiry_source":"Direct Mail","marketing_gender":"female","marketing_postcode":null,"name_legal":"Laura Sullivan","name_salutation":"Laura Sullivan","name_addressee":"Laura Sullivan","system_owner_user":{"id":"18544","name":"Julie Hodgson","first_name":"Julie","last_name":"Hodgson","email_address":"julie.hodgson@haart.co.uk"},"contact_image":null,"marketing_enquiry_method":{"id":"26731","text":"Email"},"etag":"38710-1594741628","id":"38710"},"market_lead":null,"property":null,"project":null,"project_stage":null,"listing":null,"template":null,"track":{"track_name":"ML- Cooling Off","track_color":"#84c6f1","id":2,"instance_id":"953fc27c-191b-47d4-9c9f-6dd36c69f7ed"},"system_completed_by_user":null,"mail_merge_event":null,"scheduled_send_from_user":null,"reminder_type":{"id":"email","text":"Email"},"priority":{"id":"default","text":"Default"},"id":4932},"error":null}
</property>
                        <property
                          dataType="System.Boolean"
                          description="Include all upstream parent columns into output except the one you selected to parse. By default only parsed columns from Input document is included in the output. If you wish to include all other upstream columns in the output too then check this option."
                          expressionType="Notify"
                          name="OutputAllUpstreamColumns">true</property>
                        <property
                          dataType="System.Int32"
                          description="Defines how to handle empty input. By default NULL or Empty input is skipped from parsing."
                          expressionType="Notify"
                          name="EmptyInputProcessingMode"
                          typeConverter="ZappySys.Common.Data.EmptyInputProcessingMode">0</property>
                        <property
                          dataType="System.String"
                          description="Defines how to handle empty input. By default NULL or Empty input is skipped from parsing."
                          expressionType="Notify"
                          name="TreatEmptyInputAs">{ }</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum JSON records to fetch. Set this value to 0 for all records"
                          expressionType="Notify"
                          name="MaxRows">0</property>
                        <property
                          dataType="System.String"
                          description="Enter expression here to filter data.(Example:  $.Users[*].UserName ) This will fetch User names from users records"
                          expressionType="Notify"
                          name="Filter"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">$.result</property>
                        <property
                          dataType="System.Boolean"
                          description="Use this option to include parent properties (Non array) in the output along with Filtered Rows"
                          expressionType="Notify"
                          name="IncludeParentColumns">true</property>
                        <property
                          dataType="System.Boolean"
                          description="By default child and parent information is not included in the output if children not found for specified expression. For example if you want to extract all orders from all customers nodes then you can type $.Customers[*].Orders[*]. This will fetch all orders from all customers. By default customers records without orders wont be included in the output. If you want to include those customers where orders not found then check this option (Output null information for order attributes). This behavior is similar to LEFT OUTER JOIN in SQL (Left side is parent, right side is child). This option is ***resource intensive*** so only check if you really care about this behavior."
                          expressionType="Notify"
                          name="IncludeParentColumnsWhenChildMissing">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to true if you want to output parent columns which are array. By default any parent column which is an array is not included in output. See also FilterForParentColumnsWithArrayType property if you set this property"
                          expressionType="Notify"
                          name="IncludeParentColumnsWithArrayType">false</property>
                        <property
                          dataType="System.String"
                          description="Filter expression to extract value form parent"
                          expressionType="Notify"
                          name="FilterForParentColumnsWithArrayType"></property>
                        <property
                          dataType="System.String"
                          description="Prefix for parent column name. This option is only valid if you have set IncludeParentColumns=True"
                          expressionType="Notify"
                          name="ParentColumnPrefix">P_</property>
                        <property
                          dataType="System.Boolean"
                          description="Throw error if property name specified in filter expression is missing. By default it will ignore any missing property errors."
                          expressionType="Notify"
                          name="ThrowErrorIfPropertyMissing">false</property>
                        <property
                          dataType="System.Int32"
                          description="This property how many nested levels should be scanned to fetch various properties. 0=Scan all child levels."
                          expressionType="Notify"
                          name="MaxLevelsToScan">0</property>
                        <property
                          dataType="System.String"
                          description="List comma separated property names from JSON document which you want to exclude from output. Specify parent property name to exclude all child nodes."
                          expressionType="Notify"
                          name="ExcludedProperties"></property>
                        <property
                          dataType="System.String"
                          description="Property level separator used in generated property name (separator for outer properties - Above selected filter node). Use this if default separator is producing duplicate property name which is conflicting with existing name."
                          expressionType="Notify"
                          name="LevelSeparator">_</property>
                        <property
                          dataType="System.Boolean"
                          description="Enables deep array flattening for selected filtered hierarchy. When you turn on this property it will flatten each property of each array item and expose as column (e.g. If you have Filter set as $.customers[*] and for each customer you have an array of Addresses then you may see output columns like Addresses.1.City, Addresses.1.State, Addresses.2.City, Addresses.2.State .... Addresses.N.City, Addresses.N.State). You can control how many array items you want to flatten by setting MaxArrayItemsToFlatten property."
                          expressionType="Notify"
                          name="EnableArrayFlattening">false</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum number of array items to flatten. inner array flattening. Adjust this property to control how many columns being generated. This option is ignored if you set EnableArrayFlattening=false"
                          expressionType="Notify"
                          name="MaxArrayItemsToFlatten">10</property>
                        <property
                          dataType="System.String"
                          description="Specifies how custom date formatted strings are parsed when reading JSON."
                          expressionType="Notify"
                          name="DateFormatString"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies how date formatted strings, e.g. Date(1198908717056) and 2012-03-21T05:40Z, are parsed when reading JSON."
                          expressionType="Notify"
                          name="DateParseHandling"
                          typeConverter="ZappySys.Common.DateParseHandling">1</property>
                        <property
                          dataType="System.Boolean"
                          description="Output as raw JSON document rather than parsing individual fields. This option is helpful if you have documents stored in a file and you want to pass them downstream as raw JSON string rather than parsing into columns."
                          expressionType="Notify"
                          name="OutputRawDocument">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Indent JSON output so its easy to read."
                          expressionType="Notify"
                          name="IndentOutput">true</property>
                        <property
                          dataType="System.Boolean"
                          description="When this property is true then Column is converted to Row. Pivoted names will appear under  Pivot_Name column and values will appear under Pivot_Value field."
                          expressionType="Notify"
                          name="EnablePivot">false</property>
                        <property
                          dataType="System.Int32"
                          description="Array Transformation you want to apply. Useful for case when you have 2-Dimensional arrays with rows/columns in separate arrays."
                          expressionType="Notify"
                          name="ArrayTransformationType"
                          typeConverter="ZappySys.Json.ArrayTransformType">0</property>
                        <property
                          dataType="System.String"
                          description="Filter expression to use to extract column names for array transformation."
                          expressionType="Notify"
                          name="ArrayTransColumnNameFilter"></property>
                        <property
                          dataType="System.String"
                          description="Filter expression for row values (Not applicable for simple array transformation)."
                          expressionType="Notify"
                          name="ArrayTransRowValueFilter"></property>
                        <property
                          dataType="System.Boolean"
                          description="When you have 2D array but don't have column list specified in a separate array then use this option (e.g. { arr: [[10,11],[21,22]] } )."
                          expressionType="Notify"
                          name="ArrayTransEnableCustomColumns">false</property>
                        <property
                          dataType="System.String"
                          description="When you have 2D array but don't have column list specified in a separate array then use specify column names here. Use comma separated list (e.g col1,col2,col3 ). Column name Order must match value order."
                          expressionType="Notify"
                          name="ArrayTransCustomColumns"></property>
                        <property
                          dataType="System.Int32"
                          description="Metadata scan mode controls how data type and length is determined. By default few records scanned to determine datatype/length. Changing ScanMode affects length/datatype accuracy."
                          expressionType="Notify"
                          name="MetaDataScanMode"
                          typeConverter="ZappySys.Common.Data.MetaDataScanMode">4</property>
                        <property
                          dataType="System.Int32"
                          description="Length for all string column. This option is only valid for MetaDataScanMode=Custom"
                          expressionType="Notify"
                          name="MetaDataCustomLength">1000</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.JsonParserTransform</property>
                        <property
                          dataType="System.Boolean"
                          name="EnableBigNumberHandling">false</property>
                        <property
                          dataType="System.Int32"
                          name="Encoding">0</property>
                        <property
                          dataType="System.String"
                          name="CharacterSet"></property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Campaigns\record.Inputs[JsonParserTransformInput]"
                          errorRowDisposition="FailComponent"
                          name="JsonParserTransformInput"
                          truncationRowDisposition="FailComponent">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\record.Inputs[JsonParserTransformInput].Columns[ResponseText]"
                              cachedDataType="nText"
                              cachedName="ResponseText"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaigns\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[ResponseText]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\record.Inputs[JsonParserTransformInput].Columns[StatusCode]"
                              cachedDataType="i4"
                              cachedName="StatusCode"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaigns\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[StatusCode]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Campaigns\record.Outputs[JsonParserTransformOutput].Columns[StatusCode]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\record.Inputs[JsonParserTransformInput].Columns[method]"
                              cachedDataType="wstr"
                              cachedLength="76"
                              cachedName="method"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaigns\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[method]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Campaigns\record.Outputs[JsonParserTransformOutput].Columns[method]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\record.Inputs[JsonParserTransformInput].Columns[token]"
                              cachedDataType="wstr"
                              cachedLength="200"
                              cachedName="token"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaigns\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[token]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Campaigns\record.Outputs[JsonParserTransformOutput].Columns[token]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\record.Inputs[JsonParserTransformInput].Columns[args.id]"
                              cachedDataType="i8"
                              cachedName="args.id"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaigns\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[args.id]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Campaigns\record.Outputs[JsonParserTransformOutput].Columns[args.id]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\record.Inputs[JsonParserTransformInput].Columns[strip_response_prefix]"
                              cachedDataType="bool"
                              cachedName="strip_response_prefix"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaigns\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[strip_response_prefix]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Campaigns\record.Outputs[JsonParserTransformOutput].Columns[strip_response_prefix]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True" />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Campaigns\record.Outputs[JsonParserTransformOutput]"
                          errorOrTruncationOperation="Error"
                          errorRowDisposition="FailComponent"
                          name="JsonParserTransformOutput"
                          truncationRowDisposition="FailComponent">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\record.Outputs[JsonParserTransformOutput].Columns[strip_response_prefix]"
                              dataType="bool"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaigns\record.Outputs[JsonParserTransformOutput].Columns[strip_response_prefix]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Campaigns\record.Inputs[JsonParserTransformInput].Columns[strip_response_prefix]"
                              name="strip_response_prefix" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\record.Outputs[JsonParserTransformOutput].Columns[args.id]"
                              dataType="i8"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaigns\record.Outputs[JsonParserTransformOutput].Columns[args.id]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Campaigns\record.Inputs[JsonParserTransformInput].Columns[args.id]"
                              name="args.id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\record.Outputs[JsonParserTransformOutput].Columns[token]"
                              dataType="wstr"
                              length="200"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaigns\record.Outputs[JsonParserTransformOutput].Columns[token]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Campaigns\record.Inputs[JsonParserTransformInput].Columns[token]"
                              name="token" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\record.Outputs[JsonParserTransformOutput].Columns[method]"
                              dataType="wstr"
                              length="76"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaigns\record.Outputs[JsonParserTransformOutput].Columns[method]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Campaigns\record.Inputs[JsonParserTransformInput].Columns[method]"
                              name="method" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\record.Outputs[JsonParserTransformOutput].Columns[StatusCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaigns\record.Outputs[JsonParserTransformOutput].Columns[StatusCode]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Campaigns\record.Inputs[JsonParserTransformInput].Columns[StatusCode]"
                              name="StatusCode" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\record.Outputs[JsonParserTransformOutput].Columns[__DOCUMENT__]"
                              dataType="nText"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Campaigns\record.Outputs[JsonParserTransformOutput].ExternalColumns[__DOCUMENT__]"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaigns\record.Outputs[JsonParserTransformOutput].Columns[__DOCUMENT__]"
                              name="__DOCUMENT__" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\record.Outputs[JsonParserTransformOutput].Columns[P_error]"
                              dataType="nText"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Campaigns\record.Outputs[JsonParserTransformOutput].ExternalColumns[P_error]"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaigns\record.Outputs[JsonParserTransformOutput].Columns[P_error]"
                              name="P_error" />
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\record.Outputs[JsonParserTransformOutput].ExternalColumns[P_error]"
                              dataType="nText"
                              name="P_error" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\record.Outputs[JsonParserTransformOutput].ExternalColumns[__DOCUMENT__]"
                              dataType="nText"
                              name="__DOCUMENT__" />
                          </externalMetadataColumns>
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Campaigns\record.Outputs[JsonParserTransform Error Output]"
                          isErrorOut="true"
                          name="JsonParserTransform Error Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\record.Outputs[JsonParserTransform Error Output].Columns[strip_response_prefix]"
                              dataType="bool"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaigns\record.Outputs[JsonParserTransform Error Output].Columns[strip_response_prefix]"
                              name="strip_response_prefix" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\record.Outputs[JsonParserTransform Error Output].Columns[args.id]"
                              dataType="i8"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaigns\record.Outputs[JsonParserTransform Error Output].Columns[args.id]"
                              name="args.id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\record.Outputs[JsonParserTransform Error Output].Columns[token]"
                              dataType="wstr"
                              length="200"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaigns\record.Outputs[JsonParserTransform Error Output].Columns[token]"
                              name="token" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\record.Outputs[JsonParserTransform Error Output].Columns[method]"
                              dataType="wstr"
                              length="76"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaigns\record.Outputs[JsonParserTransform Error Output].Columns[method]"
                              name="method" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\record.Outputs[JsonParserTransform Error Output].Columns[StatusCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaigns\record.Outputs[JsonParserTransform Error Output].Columns[StatusCode]"
                              name="StatusCode" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\record.Outputs[JsonParserTransform Error Output].Columns[__DOCUMENT__]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaigns\record.Outputs[JsonParserTransform Error Output].Columns[__DOCUMENT__]"
                              name="__DOCUMENT__" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\record.Outputs[JsonParserTransform Error Output].Columns[P_error]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaigns\record.Outputs[JsonParserTransform Error Output].Columns[P_error]"
                              name="P_error" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\record.Outputs[JsonParserTransform Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaigns\record.Outputs[JsonParserTransform Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\record.Outputs[JsonParserTransform Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaigns\record.Outputs[JsonParserTransform Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\record.Outputs[JsonParserTransform Error Output].Columns[ErrorColumnName]"
                              codePage="1252"
                              dataType="str"
                              length="128"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaigns\record.Outputs[JsonParserTransform Error Output].Columns[ErrorColumnName]"
                              name="ErrorColumnName" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\record.Outputs[JsonParserTransform Error Output].Columns[ErrorMessage]"
                              dataType="wstr"
                              length="1024"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaigns\record.Outputs[JsonParserTransform Error Output].Columns[ErrorMessage]"
                              name="ErrorMessage" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\record.Outputs[JsonParserTransform Error Output].Columns[ErrorRawData]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaigns\record.Outputs[JsonParserTransform Error Output].Columns[ErrorRawData]"
                              name="ErrorRawData" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Campaigns\Search Campaigns"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="JSON Source (REST API or File); ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="The JSON source is used to read data from JSON files, RESTful Web Service or direct JSON String."
                      name="Search Campaigns"
                      usesDispositions="true"
                      version="33">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for any numeric data types"
                          expressionType="Notify"
                          name="TreatBlankNumberAsNull">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for bool data types"
                          expressionType="Notify"
                          name="TreatBlankBoolAsNull">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for any date/time data types"
                          expressionType="Notify"
                          name="TreatBlankDateAsNull">true</property>
                        <property
                          dataType="System.Int32"
                          description="Defines how to read the JSON file or direct string"
                          expressionType="Notify"
                          name="AccessMode"
                          typeConverter="ZappySys.Common.Ssis.FileValueAccessMode">3</property>
                        <property
                          dataType="System.String"
                          description="Defines how to read the JSON file or direct string"
                          expressionType="Notify"
                          name="DirectValue"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.String"
                          description="Variable name which holds JSON string"
                          expressionType="Notify"
                          name="ValueVariable"
                          typeConverter="ZappySys.PowerPack.Converters.VariableEditor,ZappySys.PowerPack130.UI,Version=1.0.0.0,Culture=neutral,PublicKeyToken=1903265a93eae502"></property>
                        <property
                          dataType="System.String"
                          description="Variable name which holds data file path or url"
                          expressionType="Notify"
                          name="PathVariable"
                          typeConverter="ZappySys.PowerPack.Converters.VariableEditor,ZappySys.PowerPack130.UI,Version=1.0.0.0,Culture=neutral,PublicKeyToken=1903265a93eae502">User::RexAPIWebURL</property>
                        <property
                          dataType="System.String"
                          description="JSON file file path (e.g. c:\data\myfile.json) or pattern to process multiple files (e.g. c:\data\*.json)"
                          expressionType="Notify"
                          name="DirectPath"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">https://api.uk.rexsoftware.com/rex.php</property>
                        <property
                          dataType="System.Boolean"
                          description="Include files from sub folders too."
                          expressionType="Notify"
                          name="Recursive">false</property>
                        <property
                          dataType="System.String"
                          description="Set this if you want to set custom Http headers. You may use variable anywhere in the header value using syntax {{User::YourVarName}}. Syntax of Header key value pair is : &amp;lt;request&amp;gt;&amp;lt;header&amp;gt;&amp;lt;name&amp;gt;x-myheader-1&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;AAA&amp;lt;/value&amp;gt;&amp;lt;/header&amp;gt; &amp;lt;header&amp;gt;&amp;lt;name&amp;gt;x-myheader-2&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;BBB&amp;lt;/value&amp;gt;&amp;lt;/header&amp;gt;&amp;lt;/request&amp;gt;"
                          expressionType="Notify"
                          name="HttpHeaders">&lt;request&gt;&lt;header&gt;&lt;name&gt;Accept&lt;/name&gt;&lt;value&gt;*/*&lt;/value&gt;&lt;/header&gt;&lt;header&gt;&lt;name&gt;Cache-Control&lt;/name&gt;&lt;value&gt;no-cache&lt;/value&gt;&lt;/header&gt;&lt;header&gt;&lt;name&gt;X-App-Identifier&lt;/name&gt;&lt;value&gt;client:spicerhaart:{{System::PackageName}}:{{System::TaskName}}&lt;/value&gt;&lt;/header&gt;&lt;/request&gt;</property>
                        <property
                          dataType="System.String"
                          description="User defined data you wish to send along with your HTTP Request (e.g. Upload file data, Form POST data). Usually you have to set content-type of your data but if you select RequestMethod=POST then system will automatically set content-type=application/x-www-form-urlencoded."
                          expressionType="Notify"
                          name="HttpRequestData">{
"method":"Campaigns::search",
"args":{
	"criteria": 
	[
		
	],
	"result_format":"etags",
	"limit":50000,
	"offset": &lt;%page%&gt;
	 },
"strip_response_prefixes": true,
"token": "{{User::RexToken}}"
}</property>
                        <property
                          dataType="System.String"
                          description="Http Web Request Method (e.g. POST, GET, PUT, LIST, DELETE...). Refer your API documentation if you are not sure which method you have to use."
                          expressionType="Notify"
                          name="HttpRequestMethod">POST</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies content type for data you wish to POST. If you select Default option then system default content type will be used (i.e. application/x-www-form-urlencoded). If you specify Content-Type header along with this option then header value takes precedence."
                          expressionType="Notify"
                          name="HttpRequestContentType"
                          typeConverter="ZappySys.Common.Web.HttpRequestContentType">2</property>
                        <property
                          dataType="System.Int32"
                          description="Data format coming from HTTP Response. This is useful for example when you have OData service and you want to automatically consume all pages of data using odata.netUrl. Setting JsonFormat=Odata will automatically do it for you. This setting is only applicable if JSON is coming from HTTP WebRequest."
                          expressionType="Notify"
                          name="JsonFormat"
                          typeConverter="ZappySys.Json.JsonFormat">1</property>
                        <property
                          dataType="System.Boolean"
                          description="Enable custom proxy settings (If this is not set then system default proxy will be used. To disable proxy totally uncheck this option and check DoNotUseDefaultProxy option if available)"
                          expressionType="Notify"
                          name="UseProxy">false</property>
                        <property
                          dataType="System.String"
                          description="Web URL of Proxy server (including port  if necessary). [e.g. http://myproxyserver:8080/]"
                          expressionType="Notify"
                          name="ProxyUrl"></property>
                        <property
                          dataType="System.Boolean"
                          description="Enable passing userid and password to proxy server"
                          expressionType="Notify"
                          name="UseProxyCreds">false</property>
                        <property
                          dataType="System.String"
                          description="Proxy username"
                          expressionType="Notify"
                          name="ProxyUserName"></property>
                        <property
                          dataType="System.String"
                          description="Proxy password"
                          expressionType="Notify"
                          name="ProxyPassword"></property>
                        <property
                          dataType="System.String"
                          description="If Service response support pagination using some sort of next url attribute then specify which attribute name in JSON Response string which holds next url. If no attribute found or its null then component will stop fetching next resultset. Example: $.pagingInfo.nextUrl"
                          expressionType="Notify"
                          name="NextUrlAttribute"></property>
                        <property
                          dataType="System.String"
                          description="If Service response support pagination using some sort of prev/next url attribute then specify which previous link attribute name from JSON Response string which holds previous url."
                          expressionType="Notify"
                          name="PrevUrlAttribute"></property>
                        <property
                          dataType="System.String"
                          description="Specifies value for NextUrlAttribute or StopIndicatorAttribute which indicates last page to stop pagination. If you have specified StopIndicatorAttribute then you can use Regular expression rather than static value to indicate last page. To use regular expression value of this property must start with regex= prefix. Example : regex=FALSE|N  (assuming you set StopIndicatorAttribute to something like $.hasMore)"
                          expressionType="Notify"
                          name="NextUrlStopIndicator"></property>
                        <property
                          dataType="System.String"
                          description="Attribute name or expression for attribute which can be used as stop indicator (e.g. hasmore --or-- $.pagination.hasmore). If this value is blank then NextUrlAttribute is used"
                          expressionType="Notify"
                          name="StopIndicatorAttribute"></property>
                        <property
                          dataType="System.String"
                          description="If you want to include certain text (or parameters) at the end of Next url then specify this attribute (e.g. &amp;format=json). Another common usecase of this property is to supply pagination token to next Page URL. You can also use &lt;%nextlink%&gt; or  &lt;%nextlink_encoded%&gt; placeholder (e.g. &amp;cursor=&lt;%nextlink_encoded%&gt; )"
                          expressionType="Notify"
                          name="NextUrlSuffix"></property>
                        <property
                          dataType="System.Int32"
                          description="This property indicates total number of milliseconds you want to wait before sending next request. This option allows you to adjust how many API calls can be made within certain timeframe. If your API Service has no limit then set this option to zero"
                          expressionType="Notify"
                          name="NextUrlWait">0</property>
                        <property
                          dataType="System.Boolean"
                          description="If this option is true then component will continue without exception on 404 error (Url not found). This allows you to consume data gracefully."
                          expressionType="Notify"
                          name="ContinueOnUrlNotFoundError">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Continue when any type of exception occurs during http request"
                          expressionType="Notify"
                          name="ContineOnAnyError">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Continue on error when specified substring found in response"
                          expressionType="Notify"
                          name="ContineOnErrorForMessage">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Continue on error when specified status code returned from web server"
                          expressionType="Notify"
                          name="ContineOnErrorForStatusCode">false</property>
                        <property
                          dataType="System.Boolean"
                          description="When error occurs no data is returned. Use this option to get content eventhough error occurs. When this option is checked you can't use [continue on error when specific string found in response] option"
                          expressionType="Notify"
                          name="ConsumeResponseOnError">false</property>
                        <property
                          dataType="System.Int32"
                          description="Status code to match when error occurs and ContineOnErrorForStatusCode option is true. If Response status code matches to this code then task continues to run"
                          expressionType="Notify"
                          name="ErrorStatusCodeToMatch">404</property>
                        <property
                          dataType="System.String"
                          description="Error substring to match when error occurs and ContineOnErrorForMessage option is true. If Response status code matches to this code then task continues to run"
                          expressionType="Notify"
                          name="ErrorSubstringToMatch"></property>
                        <property
                          dataType="System.String"
                          description="Cookie Container can be used to maintain state between multiple web requests. Example: You can login to site like wordpress and then extract any private page content by simply passing authentication cookies using this variable."
                          expressionType="Notify"
                          name="CookieContainerVariable"></property>
                        <property
                          dataType="System.Int32"
                          description="Http request Timeout in seconds. Set this to 0 if you want to use system default value (i.e. 100 seconds)"
                          expressionType="Notify"
                          name="RequestTimeout">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies which security protocol is supported for HTTPS communication. Using this option you can enable legacy protocol or enforce to use latest version of security protocol (Note: TLS 1.2 is only supported in SSIS 2014 or Higher)."
                          expressionType="Notify"
                          name="SecurityProtocol"
                          typeConverter="ZappySys.PowerPack.Common.HttpsSecurityProtocolType">0</property>
                        <property
                          dataType="System.Boolean"
                          description="Enable support for gzip or deflate compression. When you check this option compressed response automatically de-compressed saving bandwidth. This option is only valid if web server supports compressed response stream. Check your API documentation for more information."
                          expressionType="Notify"
                          name="EnableCompressionSupport">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Ignore SSL certificate related errors. Example: if you getting SSL/TLS errors because of certificate expired or certificate is not from trusted authority or certificate is self-signed. By checking this option you will not get SSL/TLS error."
                          expressionType="Notify"
                          name="IgnoreCertificateErrors">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Allow unsecure ciphers/suites and curves for SSLS/TLS communication. Use this option to communicate with web servers which needs legacy / unsecured ciphers support. This option is only trigged when you change default SSL/TLS Version on advanced settings tab."
                          expressionType="Notify"
                          name="AllowUnsecureSuite">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Use connection to pass credentials for authentication (e.g. Use UserID/Password or Use OAuth Protocol for token based approach)"
                          expressionType="Notify"
                          name="UseConnection">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specified how you want to loop through multiple pages returned by REST API."
                          expressionType="Notify"
                          name="PagingMode"
                          typeConverter="ZappySys.Common.RestApiPagingMode">3</property>
                        <property
                          dataType="System.Boolean"
                          description="If you wish to pass extracted pagination token or current page number in the body of next request then set this option to true. You can use [$pagetoken$] and [$pagetoken$] placeholders anywhere in the Body where you wish to insert extracted Page token. You must set encoded token you can use &lt;%nextlink_encoded%&gt; inside SuffixForNextUrl Property. If you dont use SuffixForNextUrl then raw nextLink or Token will be inserted inside the body. If you dont specify [$pagetoken$] placeholder in the body then NextPage Token will be appended at the end. NextPage Token is extracted by filter expression specified using property NextUrlSuffix"
                          expressionType="Notify"
                          name="EnablePageTokenForBody">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this to true if you wish to specify different URL, Header, Body or Filter for first page and next page (i.e. Paginated response). Some APIs like Amazon MWS, NetSuite, Zuora) you may need to set this to true."
                          expressionType="Notify"
                          name="HasDifferentNextPageInfo">false</property>
                        <property
                          dataType="System.String"
                          description="When HasDifferentNextPageInfo=true you can set this property to indicate first page and next page. You can specify different URL, Header, Body or Filter for first page and next page (i.e. Paginated response). Use [$tag$] as placeholder anywhere in the URL, Header, Body or Filter and at runtime system will replace it with correct value (first page or next page value). Syntax to specify placeholder for first page vs next page is like a connectionstring url=FirstPageValue|NextPageValue;header=FirstPageValue|NextPageValue;body=FirstPageValue|NextPageValue;filter=FirstPageValue|NextPageValue; You can use one or more key/value pairs to make things dynamic (e.g. url, header, body or filter)  .For example if you have pagination in your API and First URL is http://abc.com/api/items/get and to get more records you have to call http://abc.com/api/items/getNext then you can use [$tag$] as placeholder in the URL http://abc.com/api/items/[$tag$] and specify this property with first page tag and next page tag as url=get|getNext  (Tags are separated using vertical bar). "
                          expressionType="Notify"
                          name="PagePlaceholders"></property>
                        <property
                          dataType="System.String"
                          description="Use this property to set request body fragment for first page. HasDifferentNextPageInfo must be set to true to use this property."
                          expressionType="Notify"
                          name="FirstPageBodyPart"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.String"
                          description="Use this property to set request body fragment for any request after first request. HasDifferentNextPageInfo must be set to true to use this property."
                          expressionType="Notify"
                          name="NextPageBodyPart"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.String"
                          description="Expression to extract Maximum pages to loop through. Some APIs don't stop pagination and keep returning last page data when you try to read data after last page. Specify expression (e.g. $.page_count ) to read total pages to loop through using this property."
                          expressionType="Notify"
                          name="PagingMaxPagesExpr">$.result.total/50000</property>
                        <property
                          dataType="System.String"
                          description="e.g. Type page_num if URL looks like this =&gt; http://abc.com/?page_num=1&amp;sort=true  (page number via query string)&#xA;--or-- Type &lt;%page%&gt; if page number is inside URL path like this =&gt; http://abc.com/1/?sort=true  (e.g. replace page number in url with placeholder http://abc.com/&lt;%page%&gt;/?sort=true)&#xA;Page number will be incremented by one for next URL until last page is reached or [Max Page Number] is reached"
                          expressionType="Notify"
                          name="PageNumberAttributeNameInUrl">&lt;%page%&gt;</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum page number until which auto increment is allowed. Type zero for no limit. Next URL contains next page number (increment by one) until last page is detected or [Max Page Number] limit is reached."
                          expressionType="Notify"
                          name="MaxPageNumber">0</property>
                        <property
                          dataType="System.String"
                          description="Variable name which will hold starting page number. This is ignored if you useing parameter name from query string to indicate page number."
                          expressionType="Notify"
                          name="StartPageNumberVariable">User::UpsertedCount</property>
                        <property
                          dataType="System.Int32"
                          description="Page counter increment. By default next page is incremented by one if this value is zero. You can also enter negative number if you want to decrease page counter."
                          expressionType="Notify"
                          name="PageNumberIncrement">50000</property>
                        <property
                          dataType="System.Int32"
                          description="Specified how you want detect last page."
                          expressionType="Notify"
                          name="PagingEndStrategy"
                          typeConverter="ZappySys.Common.UrlPagingEndDetectionStrategy">3</property>
                        <property
                          dataType="System.Boolean"
                          description="Condition result to compare to detect last page. Set this property to True if you want detect last page if condition is true else set this to False."
                          expressionType="Notify"
                          name="LastPageWhenConditionEqualsTo">true</property>
                        <property
                          dataType="System.Int32"
                          description="Minimum bytes expected from response."
                          expressionType="Notify"
                          name="ResponseMinBytes">0</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum bytes from response."
                          expressionType="Notify"
                          name="ResponseMaxBytes">3</property>
                        <property
                          dataType="System.String"
                          description="Expected error message sub string from response."
                          expressionType="Notify"
                          name="ResponseErrorString">not found</property>
                        <property
                          dataType="System.Int32"
                          description="Expected status code from response when page number you trying to access not found."
                          expressionType="Notify"
                          name="ResponseStatusCode">404</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum JSON records to fetch. Set this value to 0 for all records"
                          expressionType="Notify"
                          name="MaxRows">0</property>
                        <property
                          dataType="System.String"
                          description="Enter expression here to filter data.(Example:  $.Users[*].UserName ) This will fetch User names from users records"
                          expressionType="Notify"
                          name="Filter"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">$.result.rows[*]</property>
                        <property
                          dataType="System.Boolean"
                          description="Use this option to include parent properties (Non array) in the output along with Filtered Rows"
                          expressionType="Notify"
                          name="IncludeParentColumns">false</property>
                        <property
                          dataType="System.Boolean"
                          description="By default child and parent information is not included in the output if children not found for specified expression. For example if you want to extract all orders from all customers nodes then you can type $.Customers[*].Orders[*]. This will fetch all orders from all customers. By default customers records without orders wont be included in the output. If you want to include those customers where orders not found then check this option (Output null information for order attributes). This behavior is similar to LEFT OUTER JOIN in SQL (Left side is parent, right side is child). This option is ***resource intensive*** so only check if you really care about this behavior."
                          expressionType="Notify"
                          name="IncludeParentColumnsWhenChildMissing">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to true if you want to output parent columns which are array. By default any parent column which is an array is not included in output. See also FilterForParentColumnsWithArrayType property if you set this property"
                          expressionType="Notify"
                          name="IncludeParentColumnsWithArrayType">false</property>
                        <property
                          dataType="System.String"
                          description="Filter expression to extract value form parent"
                          expressionType="Notify"
                          name="FilterForParentColumnsWithArrayType"></property>
                        <property
                          dataType="System.String"
                          description="Prefix for parent column name. This option is only valid if you have set IncludeParentColumns=True"
                          expressionType="Notify"
                          name="ParentColumnPrefix">P_</property>
                        <property
                          dataType="System.Boolean"
                          description="Throw error if property name specified in filter expression is missing. By default it will ignore any missing property errors."
                          expressionType="Notify"
                          name="ThrowErrorIfPropertyMissing">false</property>
                        <property
                          dataType="System.Int32"
                          description="This property how many nested levels should be scanned to fetch various properties. 0=Scan all child levels."
                          expressionType="Notify"
                          name="MaxLevelsToScan">0</property>
                        <property
                          dataType="System.String"
                          description="List comma separated property names from JSON document which you want to exclude from output. Specify parent property name to exclude all child nodes."
                          expressionType="Notify"
                          name="ExcludedProperties"></property>
                        <property
                          dataType="System.String"
                          description="Property level separator used in generated property name (separator for outer properties - Above selected filter node). Use this if default separator is producing duplicate property name which is conflicting with existing name."
                          expressionType="Notify"
                          name="LevelSeparator">_</property>
                        <property
                          dataType="System.Boolean"
                          description="Enables deep array flattening for selected filtered hierarchy. When you turn on this property it will flatten each property of each array item and expose as column (e.g. If you have Filter set as $.customers[*] and for each customer you have an array of Addresses then you may see output columns like Addresses.1.City, Addresses.1.State, Addresses.2.City, Addresses.2.State .... Addresses.N.City, Addresses.N.State). You can control how many array items you want to flatten by setting MaxArrayItemsToFlatten property."
                          expressionType="Notify"
                          name="EnableArrayFlattening">false</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum number of array items to flatten. inner array flattening. Adjust this property to control how many columns being generated. This option is ignored if you set EnableArrayFlattening=false"
                          expressionType="Notify"
                          name="MaxArrayItemsToFlatten">10</property>
                        <property
                          dataType="System.Int32"
                          description="Compression format for source file (e.g. gzip, zip)"
                          expressionType="Notify"
                          name="FileCompressionType"
                          typeConverter="ZappySys.Common.FileCompressionType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Array Transformation you want to apply. Useful for case when you have 2-Dimensional arrays with rows/columns in separate arrays."
                          expressionType="Notify"
                          name="ArrayTransformationType"
                          typeConverter="ZappySys.Json.ArrayTransformType">0</property>
                        <property
                          dataType="System.String"
                          description="Filter expression to use to extract column names for array transformation."
                          expressionType="Notify"
                          name="ArrayTransColumnNameFilter">$.result.rows[*]</property>
                        <property
                          dataType="System.String"
                          description="Filter expression for row values (Not applicable for simple array transformation)."
                          expressionType="Notify"
                          name="ArrayTransRowValueFilter">$.result.rows[*]</property>
                        <property
                          dataType="System.Boolean"
                          description="When you have 2D array but don't have column list specified in a separate array then use this option (e.g. { arr: [[10,11],[21,22]] } )."
                          expressionType="Notify"
                          name="ArrayTransEnableCustomColumns">true</property>
                        <property
                          dataType="System.String"
                          description="When you have 2D array but don't have column list specified in a separate array then use specify column names here. Use comma separated list (e.g col1,col2,col3 ). Column name Order must match value order."
                          expressionType="Notify"
                          name="ArrayTransCustomColumns">MetricID</property>
                        <property
                          dataType="System.String"
                          description="Specifies how custom date formatted strings are parsed when reading JSON."
                          expressionType="Notify"
                          name="DateFormatString"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies how date formatted strings, e.g. Date(1198908717056) and 2012-03-21T05:40Z, are parsed when reading JSON."
                          expressionType="Notify"
                          name="DateParseHandling"
                          typeConverter="ZappySys.Common.DateParseHandling">1</property>
                        <property
                          dataType="System.Boolean"
                          description="Output as raw JSON document rather than parsing individual fields. This option is helpful if you have documents stored in a file and you want to pass them downstream as raw JSON string rather than parsing into columns."
                          expressionType="Notify"
                          name="OutputRawDocument">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indent JSON output so its easy to read."
                          expressionType="Notify"
                          name="IndentOutput">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to true if you want to output FilePath. This option is ignored when you consume DirectValue or data from Url rather than local files. Output column name will be __FilePath"
                          expressionType="Notify"
                          name="OutputFilePath">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to true if you want to output FileName. This option is ignored when you consume DirectValue or data from Url rather than local files. Output column name will be __FileName"
                          expressionType="Notify"
                          name="OutputFileName">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to true if you want to move processed file to archive folder."
                          expressionType="Notify"
                          name="EnableArchiveFile">false</property>
                        <property
                          dataType="System.String"
                          description="Folder path where you want to move processed file."
                          expressionType="Notify"
                          name="ArchiveFolderPath"></property>
                        <property
                          dataType="System.Boolean"
                          description="Folder path where you want to move processed file."
                          expressionType="Notify"
                          name="OverwriteFileInArchiveFolder">false</property>
                        <property
                          dataType="System.String"
                          description="File naming convention for archived file. By default it will same name as original source file processed. But you can control naming format using {%name%} and {%ext%} placeholders. e.g. {%name%}_processed{%ext%} or {%name%}{%ext%}.{{System::ContainerStartTime,yyyyMMdd_HHmmss_fff}}"
                          expressionType="Notify"
                          name="ArchiveFileNamingConvention"></property>
                        <property
                          dataType="System.Boolean"
                          description="When this property is true then Column is converted to Row. Pivoted names will appear under  Pivot_Name column and values will appear under Pivot_Value field."
                          expressionType="Notify"
                          name="EnablePivot">false</property>
                        <property
                          dataType="System.Int32"
                          description="Metadata scan mode controls how data type and length is determined. By default few records scanned to determine datatype/length. Changing ScanMode affects length/datatype accuracy."
                          expressionType="Notify"
                          name="MetaDataScanMode"
                          typeConverter="ZappySys.Common.Data.MetaDataScanMode">4</property>
                        <property
                          dataType="System.Int32"
                          description="Length for all string column. This option is only valid for MetaDataScanMode=Custom"
                          expressionType="Notify"
                          name="MetaDataCustomLength">1000</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.JsonSource</property>
                        <property
                          dataType="System.Int32"
                          description="Encoding of source file"
                          expressionType="Notify"
                          name="Encoding"
                          typeConverter="ZappySys.Common.EncodingType">0</property>
                        <property
                          dataType="System.String"
                          description="Character set for text (e.g. utf-8 )"
                          expressionType="Notify"
                          name="CharacterSet"></property>
                        <property
                          dataType="System.Boolean"
                          description="By default process stops with error if specified local file is not found. Set this property to true if you wish to continue rather than throwing file not found error."
                          expressionType="Notify"
                          name="ContinueOnFileNotFoundError">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Check this option if you want to upload file(s) (i.e. POST RAW file data) or send data using Multi-Part encoding method (i.e. Content-Type: multipart/form-data). Multi-Part request allows you to mix key/value and upload files in same request. On the other hand raw upload allows only single file upload (without any key/value) &#xA;&#xA;==== Raw Upload (Content-Type: application/octet-stream) =====   &#xA;To upload single file in raw mode check this option and specify full file path starting with @ sign in the Body (e.g.  @c:\data\myfile.zip ) &#xA;&#xA;==== Form-Data / Multipart Upload (Content-Type: multipart/form-data) =====   &#xA;To treat your Request data as multi part fields you must specify key/value pairs separated by new lines into RequestData field (i.e. Body). Each key value pair is entered on new-line and key/value are separated using equal sign (=). Preceding and trailing spaces are ignored also blank lines are ignored. &#xA;If field value has some any special character(s) then use escape sequence (e.g. For NewLine: \r\n, For Tab: \t, For at (@): \@). When value of any field starts with at sign (@) its automatically treated as File you want to upload. By default file content type is determined based on extension however you can supply content type manually for any field using this way [ fieldname.Content-Type=some content type ]. In below example we have supplied Content-Type for file2 and SomeField1, all other fields are using default content-type.&#xA;See below Example of uploading multiple files along with additional fields.&#xA;&#xA;file1=@c:\data\Myfile1.txt&#xA;file2=@c:\data\Myfile2.json&#xA;file2.Content-Type=application/json&#xA;SomeField1=aaaaaaa&#xA;SomeField1.Content-Type=text/plain&#xA;SomeField2=12345&#xA;SomeFieldWithNewLineAndTab=This is line1\r\nThis is line2\r\nThis is \ttab \ttab \ttab&#xA;SomeFieldStartingWithAtSign=\@MyTwitterHandle&#xA;"
                          expressionType="Notify"
                          name="IsMultiPartUpload">false</property>
                        <property
                          dataType="System.String"
                          description="Expression to extract Maximum records to loop through. Some APIs don't stop pagination and keep returning last page data when you try to read data after last page. Specify expression (e.g. $.total_rows ) to read total pages to loop through using this property. This setting is ignored if you set PagingMaxPagesExpr."
                          expressionType="Notify"
                          name="PagingMaxRowsExpr"></property>
                        <property
                          dataType="System.String"
                          description="When you enable PagingMaxRowsExpr (end pagination based on MaxRowCount) then you need to count records coming in each response. This expression extract all rows found under specified expression (e.g. $.orders[*] if all records found under orders node)."
                          expressionType="Notify"
                          name="PagingMaxRowsDataPathExpr"></property>
                        <property
                          dataType="System.Boolean"
                          description="When this option is checked, system allows to parse large number (Higher than Int64) in JSON document (i.e. { id: 76000009353950433247780 } ). If you do not turn on this option then it may throw error if large number is encountered. This option is SLOW because it has to perform additional checks in order to avoid Large number overflow error so do not turn on unless you getting Large number error."
                          expressionType="Notify"
                          name="EnableBigNumberHandling">false</property>
                      </properties>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Campaigns\Search Campaigns.Outputs[JsonSourceOutput]"
                          errorOrTruncationOperation="Error"
                          errorRowDisposition="FailComponent"
                          name="JsonSourceOutput"
                          truncationRowDisposition="FailComponent">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\Search Campaigns.Outputs[JsonSourceOutput].Columns[etag]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Campaigns\Search Campaigns.Outputs[JsonSourceOutput].ExternalColumns[etag]"
                              length="68"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaigns\Search Campaigns.Outputs[JsonSourceOutput].Columns[etag]"
                              name="etag" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\Search Campaigns.Outputs[JsonSourceOutput].Columns[id]"
                              dataType="i4"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Campaigns\Search Campaigns.Outputs[JsonSourceOutput].ExternalColumns[id]"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaigns\Search Campaigns.Outputs[JsonSourceOutput].Columns[id]"
                              name="id" />
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\Search Campaigns.Outputs[JsonSourceOutput].ExternalColumns[system_record_state]"
                              dataType="wstr"
                              length="24"
                              name="system_record_state" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\Search Campaigns.Outputs[JsonSourceOutput].ExternalColumns[system_ctime]"
                              dataType="wstr"
                              length="40"
                              name="system_ctime" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\Search Campaigns.Outputs[JsonSourceOutput].ExternalColumns[system_modtime]"
                              dataType="wstr"
                              length="40"
                              name="system_modtime" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\Search Campaigns.Outputs[JsonSourceOutput].ExternalColumns[name]"
                              dataType="wstr"
                              length="144"
                              name="name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\Search Campaigns.Outputs[JsonSourceOutput].ExternalColumns[email_address]"
                              dataType="wstr"
                              length="180"
                              name="email_address" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\Search Campaigns.Outputs[JsonSourceOutput].ExternalColumns[phone_number]"
                              dataType="wstr"
                              length="80"
                              name="phone_number" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\Search Campaigns.Outputs[JsonSourceOutput].ExternalColumns[fax_number]"
                              dataType="wstr"
                              length="1020"
                              name="fax_number" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\Search Campaigns.Outputs[JsonSourceOutput].ExternalColumns[is_dnd]"
                              dataType="wstr"
                              length="80"
                              name="is_dnd" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\Search Campaigns.Outputs[JsonSourceOutput].ExternalColumns[type]"
                              dataType="wstr"
                              length="28"
                              name="type" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\Search Campaigns.Outputs[JsonSourceOutput].ExternalColumns[last_contacted_date]"
                              dataType="wstr"
                              length="80"
                              name="last_contacted_date" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\Search Campaigns.Outputs[JsonSourceOutput].ExternalColumns[name_last]"
                              dataType="wstr"
                              length="1020"
                              name="name_last" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\Search Campaigns.Outputs[JsonSourceOutput].ExternalColumns[address_postal]"
                              dataType="wstr"
                              length="220"
                              name="address_postal" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\Search Campaigns.Outputs[JsonSourceOutput].ExternalColumns[address]"
                              dataType="wstr"
                              length="384"
                              name="address" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\Search Campaigns.Outputs[JsonSourceOutput].ExternalColumns[interest_level]"
                              dataType="wstr"
                              length="1020"
                              name="interest_level" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\Search Campaigns.Outputs[JsonSourceOutput].ExternalColumns[marketing_birthday]"
                              dataType="wstr"
                              length="1020"
                              name="marketing_birthday" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\Search Campaigns.Outputs[JsonSourceOutput].ExternalColumns[marketing_enquiry_source]"
                              dataType="wstr"
                              length="1020"
                              name="marketing_enquiry_source" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\Search Campaigns.Outputs[JsonSourceOutput].ExternalColumns[marketing_gender]"
                              dataType="wstr"
                              length="1020"
                              name="marketing_gender" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\Search Campaigns.Outputs[JsonSourceOutput].ExternalColumns[marketing_postcode]"
                              dataType="wstr"
                              length="80"
                              name="marketing_postcode" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\Search Campaigns.Outputs[JsonSourceOutput].ExternalColumns[name_legal]"
                              dataType="wstr"
                              length="1020"
                              name="name_legal" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\Search Campaigns.Outputs[JsonSourceOutput].ExternalColumns[name_salutation]"
                              dataType="wstr"
                              length="1020"
                              name="name_salutation" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\Search Campaigns.Outputs[JsonSourceOutput].ExternalColumns[name_addressee]"
                              dataType="wstr"
                              length="1020"
                              name="name_addressee" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\Search Campaigns.Outputs[JsonSourceOutput].ExternalColumns[system_owner_user.id]"
                              dataType="wstr"
                              length="20"
                              name="system_owner_user.id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\Search Campaigns.Outputs[JsonSourceOutput].ExternalColumns[system_owner_user._name]"
                              dataType="wstr"
                              length="36"
                              name="system_owner_user._name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\Search Campaigns.Outputs[JsonSourceOutput].ExternalColumns[system_owner_user._first_name]"
                              dataType="wstr"
                              length="20"
                              name="system_owner_user._first_name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\Search Campaigns.Outputs[JsonSourceOutput].ExternalColumns[system_owner_user._last_name]"
                              dataType="wstr"
                              length="12"
                              name="system_owner_user._last_name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\Search Campaigns.Outputs[JsonSourceOutput].ExternalColumns[system_owner_user._email_address]"
                              dataType="wstr"
                              length="92"
                              name="system_owner_user._email_address" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\Search Campaigns.Outputs[JsonSourceOutput].ExternalColumns[system_modified_user.id]"
                              dataType="wstr"
                              length="20"
                              name="system_modified_user.id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\Search Campaigns.Outputs[JsonSourceOutput].ExternalColumns[system_modified_user._name]"
                              dataType="wstr"
                              length="48"
                              name="system_modified_user._name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\Search Campaigns.Outputs[JsonSourceOutput].ExternalColumns[system_modified_user._first_name]"
                              dataType="wstr"
                              length="24"
                              name="system_modified_user._first_name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\Search Campaigns.Outputs[JsonSourceOutput].ExternalColumns[system_modified_user._last_name]"
                              dataType="wstr"
                              length="24"
                              name="system_modified_user._last_name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\Search Campaigns.Outputs[JsonSourceOutput].ExternalColumns[system_modified_user._email_address]"
                              dataType="wstr"
                              length="128"
                              name="system_modified_user._email_address" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\Search Campaigns.Outputs[JsonSourceOutput].ExternalColumns[system_created_user.id]"
                              dataType="wstr"
                              length="20"
                              name="system_created_user.id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\Search Campaigns.Outputs[JsonSourceOutput].ExternalColumns[system_created_user._name]"
                              dataType="wstr"
                              length="36"
                              name="system_created_user._name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\Search Campaigns.Outputs[JsonSourceOutput].ExternalColumns[system_created_user._first_name]"
                              dataType="wstr"
                              length="20"
                              name="system_created_user._first_name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\Search Campaigns.Outputs[JsonSourceOutput].ExternalColumns[system_created_user._last_name]"
                              dataType="wstr"
                              length="12"
                              name="system_created_user._last_name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\Search Campaigns.Outputs[JsonSourceOutput].ExternalColumns[system_created_user._email_address]"
                              dataType="wstr"
                              length="92"
                              name="system_created_user._email_address" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\Search Campaigns.Outputs[JsonSourceOutput].ExternalColumns[contact_image]"
                              dataType="wstr"
                              length="1020"
                              name="contact_image" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\Search Campaigns.Outputs[JsonSourceOutput].ExternalColumns[marketing_enquiry_method]"
                              dataType="wstr"
                              length="1020"
                              name="marketing_enquiry_method" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\Search Campaigns.Outputs[JsonSourceOutput].ExternalColumns[_security_user_rights]"
                              dataType="wstr"
                              length="260"
                              name="_security_user_rights" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\Search Campaigns.Outputs[JsonSourceOutput].ExternalColumns[etag]"
                              dataType="wstr"
                              length="68"
                              name="etag" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\Search Campaigns.Outputs[JsonSourceOutput].ExternalColumns[id]"
                              dataType="wstr"
                              length="24"
                              name="id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\Search Campaigns.Outputs[JsonSourceOutput].ExternalColumns[__FileName]"
                              dataType="wstr"
                              length="600"
                              name="__FileName" />
                          </externalMetadataColumns>
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Campaigns\Search Campaigns.Outputs[JsonSource Error Output]"
                          isErrorOut="true"
                          name="JsonSource Error Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\Search Campaigns.Outputs[JsonSource Error Output].Columns[etag]"
                              dataType="wstr"
                              length="68"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaigns\Search Campaigns.Outputs[JsonSource Error Output].Columns[etag]"
                              name="etag" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\Search Campaigns.Outputs[JsonSource Error Output].Columns[id]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaigns\Search Campaigns.Outputs[JsonSource Error Output].Columns[id]"
                              name="id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\Search Campaigns.Outputs[JsonSource Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaigns\Search Campaigns.Outputs[JsonSource Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\Search Campaigns.Outputs[JsonSource Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaigns\Search Campaigns.Outputs[JsonSource Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\Search Campaigns.Outputs[JsonSource Error Output].Columns[ErrorColumnName]"
                              codePage="1252"
                              dataType="str"
                              length="128"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaigns\Search Campaigns.Outputs[JsonSource Error Output].Columns[ErrorColumnName]"
                              name="ErrorColumnName" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\Search Campaigns.Outputs[JsonSource Error Output].Columns[ErrorMessage]"
                              dataType="wstr"
                              length="1024"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaigns\Search Campaigns.Outputs[JsonSource Error Output].Columns[ErrorMessage]"
                              name="ErrorMessage" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Campaigns\SQL Sort"
                      componentClassID="Microsoft.Sort"
                      contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
                      name="SQL Sort"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                          name="EliminateDuplicates">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the maximum number of threads to use for sorting."
                          expressionType="Notify"
                          name="MaximumThreads">-1</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Campaigns\SQL Sort.Inputs[Sort Input]"
                          name="Sort Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\SQL Sort.Inputs[Sort Input].Columns[Id]"
                              cachedDataType="i4"
                              cachedName="Id"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaigns\Existing Campaigns from SQL.Outputs[OLE DB Source Output].Columns[Id]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">1</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\SQL Sort.Inputs[Sort Input].Columns[AccountId]"
                              cachedDataType="i2"
                              cachedName="AccountId"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaigns\Existing Campaigns from SQL.Outputs[OLE DB Source Output].Columns[AccountId]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\SQL Sort.Inputs[Sort Input].Columns[etagsql]"
                              cachedDataType="wstr"
                              cachedLength="250"
                              cachedName="etagsql"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaigns\Existing Campaigns from SQL.Outputs[OLE DB Source Output].Columns[etagsql]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Campaigns\SQL Sort.Outputs[Sort Output]"
                          isSorted="true"
                          name="Sort Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\SQL Sort.Outputs[Sort Output].Columns[Id]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaigns\SQL Sort.Outputs[Sort Output].Columns[Id]"
                              name="Id"
                              sortKeyPosition="1">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Iterate Offices\Sequence Container\Campaigns\Existing Campaigns from SQL.Outputs[OLE DB Source Output].Columns[Id]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\SQL Sort.Outputs[Sort Output].Columns[AccountId]"
                              dataType="i2"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaigns\SQL Sort.Outputs[Sort Output].Columns[AccountId]"
                              name="AccountId">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Iterate Offices\Sequence Container\Campaigns\Existing Campaigns from SQL.Outputs[OLE DB Source Output].Columns[AccountId]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\SQL Sort.Outputs[Sort Output].Columns[etagsql]"
                              dataType="wstr"
                              length="250"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaigns\SQL Sort.Outputs[Sort Output].Columns[etagsql]"
                              name="etagsql">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Iterate Offices\Sequence Container\Campaigns\Existing Campaigns from SQL.Outputs[OLE DB Source Output].Columns[etagsql]}</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Campaigns\Trash Destination"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Trash Destination; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="The trash destination is used to create dummy destination which ends data path without any processing."
                      name="Trash Destination"
                      version="2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.String"
                          description="File path where you want to save data"
                          expressionType="Notify"
                          name="FilePath"></property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates if you want to save input data to comma separated text file"
                          expressionType="Notify"
                          name="SaveDataToFile">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Append data to file"
                          expressionType="Notify"
                          name="Append">false</property>
                        <property
                          dataType="System.String"
                          description="RowSeparator"
                          expressionType="Notify"
                          name="RowSeparator">{NEWLINE}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether you want to overwrite target file if exists"
                          expressionType="Notify"
                          name="OverwriteFileIfExists">true</property>
                        <property
                          dataType="System.String"
                          description="ColumnSeparator"
                          expressionType="Notify"
                          name="ColumnSeparator">,</property>
                        <property
                          dataType="System.Boolean"
                          description="SupportUnicode"
                          expressionType="Notify"
                          name="SupportUnicode">true</property>
                        <property
                          dataType="System.Boolean"
                          description="ColumnNamesInFirstRow"
                          expressionType="Notify"
                          name="ColumnNamesInFirstRow">true</property>
                        <property
                          dataType="System.Boolean"
                          description="QuoteDataIfNeeded"
                          expressionType="Notify"
                          name="QuoteDataIfNeeded">true</property>
                        <property
                          dataType="System.String"
                          description="Date time format string for any column with DT_DBDATETIME, DT_DBDATETIME2 or DB_DATE format"
                          expressionType="Notify"
                          name="DateTimeFormat">yyyy-MM-dd HH:mm:ss</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.TrashDestination</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Campaigns\Trash Destination.Inputs[TrashDestinationInput]"
                          hasSideEffects="true"
                          name="TrashDestinationInput">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Campaigns\Trash Destination 1"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Trash Destination; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="The trash destination is used to create dummy destination which ends data path without any processing."
                      name="Trash Destination 1"
                      version="2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.String"
                          description="File path where you want to save data"
                          expressionType="Notify"
                          name="FilePath"></property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates if you want to save input data to comma separated text file"
                          expressionType="Notify"
                          name="SaveDataToFile">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Append data to file"
                          expressionType="Notify"
                          name="Append">false</property>
                        <property
                          dataType="System.String"
                          description="RowSeparator"
                          expressionType="Notify"
                          name="RowSeparator">{NEWLINE}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether you want to overwrite target file if exists"
                          expressionType="Notify"
                          name="OverwriteFileIfExists">true</property>
                        <property
                          dataType="System.String"
                          description="ColumnSeparator"
                          expressionType="Notify"
                          name="ColumnSeparator">,</property>
                        <property
                          dataType="System.Boolean"
                          description="SupportUnicode"
                          expressionType="Notify"
                          name="SupportUnicode">true</property>
                        <property
                          dataType="System.Boolean"
                          description="ColumnNamesInFirstRow"
                          expressionType="Notify"
                          name="ColumnNamesInFirstRow">true</property>
                        <property
                          dataType="System.Boolean"
                          description="QuoteDataIfNeeded"
                          expressionType="Notify"
                          name="QuoteDataIfNeeded">true</property>
                        <property
                          dataType="System.String"
                          description="Date time format string for any column with DT_DBDATETIME, DT_DBDATETIME2 or DB_DATE format"
                          expressionType="Notify"
                          name="DateTimeFormat">yyyy-MM-dd HH:mm:ss</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.TrashDestination</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Campaigns\Trash Destination 1.Inputs[TrashDestinationInput]"
                          hasSideEffects="true"
                          name="TrashDestinationInput">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Campaigns\Upsert Campaign"
                      componentClassID="Microsoft.OLEDBCommand"
                      contactInfo="OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
                      description="Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time."
                      name="Upsert Campaign"
                      usesDispositions="true"
                      version="2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">0</property>
                        <property
                          dataType="System.String"
                          description="The SQL command to be executed."
                          expressionType="Notify"
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">exec [UpsertCampaign] ?,?,?</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Iterate Offices\Sequence Container\Campaigns\Upsert Campaign.Connections[OleDbConnection]"
                          connectionManagerID="Package.ConnectionManagers[colsqlbi01v.Entities]"
                          connectionManagerRefId="Package.ConnectionManagers[colsqlbi01v.Entities]"
                          description="The OLE DB runtime connection used to access the database."
                          name="OleDbConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Campaigns\Upsert Campaign.Inputs[OLE DB Command Input]"
                          errorOrTruncationOperation="Command Execution"
                          errorRowDisposition="FailComponent"
                          hasSideEffects="true"
                          name="OLE DB Command Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\Upsert Campaign.Inputs[OLE DB Command Input].Columns[Origin]"
                              cachedDataType="i4"
                              cachedName="Origin"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Campaigns\Upsert Campaign.Inputs[OLE DB Command Input].ExternalColumns[@Origin]"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaigns\Add accountid and origin.Outputs[Derived Column Output].Columns[Origin]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\Upsert Campaign.Inputs[OLE DB Command Input].Columns[AccountId]"
                              cachedDataType="i4"
                              cachedName="AccountId"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Campaigns\Upsert Campaign.Inputs[OLE DB Command Input].ExternalColumns[@accountid]"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaigns\Add accountid and origin.Outputs[Derived Column Output].Columns[AccountId]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\Upsert Campaign.Inputs[OLE DB Command Input].Columns[__DOCUMENT__]"
                              cachedDataType="nText"
                              cachedName="__DOCUMENT__"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Campaigns\Upsert Campaign.Inputs[OLE DB Command Input].ExternalColumns[@body]"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaigns\record.Outputs[JsonParserTransformOutput].Columns[__DOCUMENT__]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\Upsert Campaign.Inputs[OLE DB Command Input].ExternalColumns[@Origin]"
                              dataType="i2"
                              name="@Origin">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                                  name="DBParamInfoFlags">81</property>
                              </properties>
                            </externalMetadataColumn>
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\Upsert Campaign.Inputs[OLE DB Command Input].ExternalColumns[@body]"
                              dataType="nText"
                              name="@body">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                                  name="DBParamInfoFlags">193</property>
                              </properties>
                            </externalMetadataColumn>
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\Upsert Campaign.Inputs[OLE DB Command Input].ExternalColumns[@accountid]"
                              dataType="i4"
                              name="@accountid">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                                  name="DBParamInfoFlags">81</property>
                              </properties>
                            </externalMetadataColumn>
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Campaigns\Upsert Campaign.Outputs[OLE DB Command Output]"
                          exclusionGroup="1"
                          name="OLE DB Command Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Campaigns\Upsert Campaign.Inputs[OLE DB Command Input]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Campaigns\Upsert Campaign.Outputs[OLE DB Command Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="OLE DB Command Error Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Campaigns\Upsert Campaign.Inputs[OLE DB Command Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\Upsert Campaign.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaigns\Upsert Campaign.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Campaigns\Upsert Campaign.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Campaigns\Upsert Campaign.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                  </components>
                  <paths>
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Campaigns.Paths[Derived Column Output]"
                      endId="Package\Iterate Offices\Sequence Container\Campaigns\Upsert Campaign.Inputs[OLE DB Command Input]"
                      name="Derived Column Output"
                      startId="Package\Iterate Offices\Sequence Container\Campaigns\Add accountid and origin.Outputs[Derived Column Output]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Campaigns.Paths[ignore]"
                      endId="Package\Iterate Offices\Sequence Container\Campaigns\Trash Destination.Inputs[TrashDestinationInput]"
                      name="ignore"
                      startId="Package\Iterate Offices\Sequence Container\Campaigns\Insert or Ignore.Outputs[ignore]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Campaigns.Paths[JsonGeneratorTransformOutput]"
                      endId="Package\Iterate Offices\Sequence Container\Campaigns\Read details.Inputs[WebApiDestinationInput]"
                      name="JsonGeneratorTransformOutput"
                      startId="Package\Iterate Offices\Sequence Container\Campaigns\Build request.Outputs[JsonGeneratorTransformOutput]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Campaigns.Paths[JsonParserTransformOutput]"
                      endId="Package\Iterate Offices\Sequence Container\Campaigns\Add accountid and origin.Inputs[Derived Column Input]"
                      name="JsonParserTransformOutput"
                      startId="Package\Iterate Offices\Sequence Container\Campaigns\record.Outputs[JsonParserTransformOutput]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Campaigns.Paths[JsonParserTransformOutput1]"
                      endId="Package\Iterate Offices\Sequence Container\Campaigns\record.Inputs[JsonParserTransformInput]"
                      name="JsonParserTransformOutput"
                      startId="Package\Iterate Offices\Sequence Container\Campaigns\JSON Parser Add id back in.Outputs[JsonParserTransformOutput]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Campaigns.Paths[JsonSourceOutput]"
                      endId="Package\Iterate Offices\Sequence Container\Campaigns\API Sort.Inputs[Sort Input]"
                      name="JsonSourceOutput"
                      startId="Package\Iterate Offices\Sequence Container\Campaigns\Search Campaigns.Outputs[JsonSourceOutput]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Campaigns.Paths[Merge Join Output]"
                      endId="Package\Iterate Offices\Sequence Container\Campaigns\Insert or Ignore.Inputs[Conditional Split Input]"
                      name="Merge Join Output"
                      startId="Package\Iterate Offices\Sequence Container\Campaigns\Merge Join To Find Those to Insert.Outputs[Merge Join Output]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Campaigns.Paths[OLE DB Source Output]"
                      endId="Package\Iterate Offices\Sequence Container\Campaigns\SQL Sort.Inputs[Sort Input]"
                      name="OLE DB Source Output"
                      startId="Package\Iterate Offices\Sequence Container\Campaigns\Existing Campaigns from SQL.Outputs[OLE DB Source Output]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Campaigns.Paths[Response Output]"
                      endId="Package\Iterate Offices\Sequence Container\Campaigns\JSON Parser Add id back in.Inputs[JsonParserTransformInput]"
                      name="Response Output"
                      startId="Package\Iterate Offices\Sequence Container\Campaigns\Read details.Outputs[Response Output]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Campaigns.Paths[Sort Output]"
                      endId="Package\Iterate Offices\Sequence Container\Campaigns\Merge Join To Find Those to Insert.Inputs[Merge Join Right Input]"
                      name="Sort Output"
                      startId="Package\Iterate Offices\Sequence Container\Campaigns\SQL Sort.Outputs[Sort Output]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Campaigns.Paths[Sort Output1]"
                      endId="Package\Iterate Offices\Sequence Container\Campaigns\Merge Join To Find Those to Insert.Inputs[Merge Join Left Input]"
                      name="Sort Output"
                      startId="Package\Iterate Offices\Sequence Container\Campaigns\API Sort.Outputs[Sort Output]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Campaigns.Paths[upsert]"
                      endId="Package\Iterate Offices\Sequence Container\Campaigns\Build request.Inputs[JsonInput1]"
                      name="upsert"
                      startId="Package\Iterate Offices\Sequence Container\Campaigns\Insert or Ignore.Outputs[upsert]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Campaigns.Paths[WebApiDestination Error Output]"
                      endId="Package\Iterate Offices\Sequence Container\Campaigns\Trash Destination 1.Inputs[TrashDestinationInput]"
                      name="WebApiDestination Error Output"
                      startId="Package\Iterate Offices\Sequence Container\Campaigns\Read details.Outputs[WebApiDestination Error Output]" />
                  </paths>
                </pipeline>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Iterate Offices\Sequence Container\Contact search"
              DTS:CreationName="Microsoft.Pipeline"
              DTS:Description="Data Flow Task"
              DTS:DTSID="{D5ACBD0A-1028-4497-9100-B3200D4FB47C}"
              DTS:ExecutableType="Microsoft.Pipeline"
              DTS:LocaleID="-1"
              DTS:ObjectName="Contact search"
              DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:ObjectData>
                <pipeline
                  version="1">
                  <components>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Contact search\Add accountid and origin"
                      componentClassID="Microsoft.DerivedColumn"
                      contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                      name="Add accountid and origin"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Contact search\Add accountid and origin.Inputs[Derived Column Input]"
                          description="Input to the Derived Column Transformation"
                          name="Derived Column Input">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Contact search\Add accountid and origin.Outputs[Derived Column Output]"
                          description="Default Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          name="Derived Column Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Contact search\Add accountid and origin.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\Add accountid and origin.Outputs[Derived Column Output].Columns[AccountId]"
                              dataType="i4"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Iterate Offices\Sequence Container\Contact search\Add accountid and origin.Outputs[Derived Column Output].Columns[AccountId]"
                              name="AccountId"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">@[User::RexAccountID]</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">@[User::RexAccountID]</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\Add accountid and origin.Outputs[Derived Column Output].Columns[Origin]"
                              dataType="i4"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Iterate Offices\Sequence Container\Contact search\Add accountid and origin.Outputs[Derived Column Output].Columns[Origin]"
                              name="Origin"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">2</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">2</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Contact search\Add accountid and origin.Outputs[Derived Column Error Output]"
                          description="Error Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Derived Column Error Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Contact search\Add accountid and origin.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\Add accountid and origin.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Contact search\Add accountid and origin.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\Add accountid and origin.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Contact search\Add accountid and origin.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Contact search\API Sort"
                      componentClassID="Microsoft.Sort"
                      contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
                      name="API Sort"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                          name="EliminateDuplicates">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the maximum number of threads to use for sorting."
                          expressionType="Notify"
                          name="MaximumThreads">-1</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Contact search\API Sort.Inputs[Sort Input]"
                          name="Sort Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\API Sort.Inputs[Sort Input].Columns[etag]"
                              cachedDataType="wstr"
                              cachedLength="68"
                              cachedName="etag"
                              lineageId="Package\Iterate Offices\Sequence Container\Contact search\Search Contacts.Outputs[JsonSourceOutput].Columns[etag]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\API Sort.Inputs[Sort Input].Columns[id]"
                              cachedDataType="i4"
                              cachedName="id"
                              lineageId="Package\Iterate Offices\Sequence Container\Contact search\Search Contacts.Outputs[JsonSourceOutput].Columns[id]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">1</property>
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Contact search\API Sort.Outputs[Sort Output]"
                          isSorted="true"
                          name="Sort Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\API Sort.Outputs[Sort Output].Columns[etag]"
                              dataType="wstr"
                              length="68"
                              lineageId="Package\Iterate Offices\Sequence Container\Contact search\API Sort.Outputs[Sort Output].Columns[etag]"
                              name="etag">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Iterate Offices\Sequence Container\Contact search\Search Contacts.Outputs[JsonSourceOutput].Columns[etag]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\API Sort.Outputs[Sort Output].Columns[id]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Contact search\API Sort.Outputs[Sort Output].Columns[id]"
                              name="id"
                              sortKeyPosition="1">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Iterate Offices\Sequence Container\Contact search\Search Contacts.Outputs[JsonSourceOutput].Columns[id]}</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Contact search\custom"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="JSON Parser Transform; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="Parse incoming JSON String into columns. You can also parse and transform single JSON record into multiple rows by filtering data based on JSON Path (e.g. $.Customer.Orders[*])"
                      name="custom"
                      usesDispositions="true"
                      version="2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for any numeric data types"
                          expressionType="Notify"
                          name="TreatBlankNumberAsNull">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for bool data types"
                          expressionType="Notify"
                          name="TreatBlankBoolAsNull">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for any date/time data types"
                          expressionType="Notify"
                          name="TreatBlankDateAsNull">true</property>
                        <property
                          dataType="System.String"
                          description="Sample JSON data used to parse output columns."
                          expressionType="Notify"
                          name="SampleData"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">{
    "result": {
        "record": {
            "system_record_state": "active",
            "system_ctime": 1545243149,
            "system_modtime": 1545243149,
            "system_search_key": "W Sturt",
            "address": "26 Marine Parade\r\nDovercourt, Harwich\r\nEssex\r\nCO12 3RD",
            "address_postal": null,
            "marketing_postcode": "CO12 3RD",
            "marketing_enquiry_source": null,
            "marketing_gender": null,
            "marketing_birthday": null,
            "notes": null,
            "company_name": "Sturt",
            "company_abn": null,
            "website_url": null,
            "is_dnd": true,
            "type": "person",
            "interest_level": null,
            "last_contacted_date": null,
            "name_legal": null,
            "name_salutation": null,
            "name_addressee": null,
            "last_contacted_at": null,
            "single_view_identity_id": null,
            "single_view_profile_id": null,
            "etag": "28569-1545243149",
            "id": 28569,
            "system_owner_user": {
                "id": "19443",
                "name": "Rosie API",
                "first_name": "Rosie",
                "last_name": "API",
                "email_address": "rosie@spicerhaart.co.uk"
            },
            "system_modified_user": {
                "id": "19443",
                "name": "Rosie API",
                "first_name": "Rosie",
                "last_name": "API",
                "email_address": "rosie@spicerhaart.co.uk"
            },
            "system_created_user": {
                "id": "19443",
                "name": "Rosie API",
                "first_name": "Rosie",
                "last_name": "API",
                "email_address": "rosie@spicerhaart.co.uk"
            },
            "smart_categories": false,
            "contact_image": null,
            "company_size": null,
            "marketing_enquiry_method": null,
            "related": {
                "contact_emails": [],
                "contact_names": [
                    {
                        "name_title": "Mr",
                        "name_first": "W",
                        "name_middle": null,
                        "name_last": "Sturt",
                        "id": 27515
                    }
                ],
                "contact_phones": [],
                "contact_tags": [],
                "contact_documents": [],
                "contact_mailing_lists": [],
                "contact_relationships": [],
                "contact_reln_property": [],
                "contact_reln_listing": []
            },
            "address_wash": {
                "present_on_lists": [],
                "user_override": null,
                "allow": true
            },
            "address_postal_wash": null,
            "security_user_rights": [
                "read",
                "update",
                "archive",
                "trash",
                "perms"
            ]
        },
        "custom_fields": {
            "FS/Legal.Applicant Status.Status": null,
            "FS/Legal.Applicant Status.Expected timescale": null,
            "FS/Legal.Applicant Status.Interested in HTB": null,
            "FS/Legal.Applicant Status.Interested in New Homes": null,
            "FS/Legal.Legal Services.Have services been sold": null,
            "FS/Legal.Legal Services.If no, reason": null,
            "FS/Legal.Legal Services.Date instructed": null,
            "FS/Legal.Legal Services.Instructed by": null,
            "FS/Legal.Legal Services.Product sold": null,
            "FS/Legal.Legal Services.Status": null,
            "FS/Legal.Legal Services.Legal income": null,
            "FS/Legal.Legal Services.Conveyancer": null,
            "FS/Legal.Financial Services.Appointment made": null,
            "FS/Legal.Financial Services.If no, reason": null,
            "FS/Legal.Financial Services.Referred by": null,
            "FS/Legal.Financial Services.Purchasing position": null,
            "FS/Legal.Financial Services.Spoken with broker/lender": null,
            "FS/Legal.Financial Services.Notes, discussions &amp; insight": null,
            "FS/Legal.Financial Services.Deposit available": null,
            "FS/Legal.Financial Services.Mortgage type": null,
            "FS/Legal.Financial Services.Rates quoted": null,
            "FS/Legal.Financial Services Outcomes.Did appt take place?": null,
            "FS/Legal.Financial Services Outcomes.Was an AIP received?": null,
            "FS/Legal.Financial Services Outcomes.New business written?": null,
            "FS/Legal.Record Attribution.Change applicant registration user": null,
            "FS/Legal.Record Attribution.IDBS AppRef": null,
            "FS/Legal.Record Attribution.Employee No": null,
            "FS/Legal.Record Attribution.IDBS PropRef": null,
            "core.contact.Contact Notes.Tel Note": null,
            "core.contact.Contact Notes.Mobile Note": null,
            "core.contact.Contact Notes.Email Note": null,
            "core.contact.Contact Notes.No email?": null,
            "core.contact.More Details.Business Type": null,
            "core.contact.More Details.Business Status": null,
            "api.GDPR Key": null
        }
    },
    "error": null
}</property>
                        <property
                          dataType="System.Boolean"
                          description="Include all upstream parent columns into output except the one you selected to parse. By default only parsed columns from Input document is included in the output. If you wish to include all other upstream columns in the output too then check this option."
                          expressionType="Notify"
                          name="OutputAllUpstreamColumns">true</property>
                        <property
                          dataType="System.Int32"
                          description="Defines how to handle empty input. By default NULL or Empty input is skipped from parsing."
                          expressionType="Notify"
                          name="EmptyInputProcessingMode"
                          typeConverter="ZappySys.Common.Data.EmptyInputProcessingMode">0</property>
                        <property
                          dataType="System.String"
                          description="Defines how to handle empty input. By default NULL or Empty input is skipped from parsing."
                          expressionType="Notify"
                          name="TreatEmptyInputAs">{ }</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum JSON records to fetch. Set this value to 0 for all records"
                          expressionType="Notify"
                          name="MaxRows">0</property>
                        <property
                          dataType="System.String"
                          description="Enter expression here to filter data.(Example:  $.Users[*].UserName ) This will fetch User names from users records"
                          expressionType="Notify"
                          name="Filter"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">$.result.custom_fields</property>
                        <property
                          dataType="System.Boolean"
                          description="Use this option to include parent properties (Non array) in the output along with Filtered Rows"
                          expressionType="Notify"
                          name="IncludeParentColumns">false</property>
                        <property
                          dataType="System.Boolean"
                          description="By default child and parent information is not included in the output if children not found for specified expression. For example if you want to extract all orders from all customers nodes then you can type $.Customers[*].Orders[*]. This will fetch all orders from all customers. By default customers records without orders wont be included in the output. If you want to include those customers where orders not found then check this option (Output null information for order attributes). This behavior is similar to LEFT OUTER JOIN in SQL (Left side is parent, right side is child). This option is ***resource intensive*** so only check if you really care about this behavior."
                          expressionType="Notify"
                          name="IncludeParentColumnsWhenChildMissing">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to true if you want to output parent columns which are array. By default any parent column which is an array is not included in output. See also FilterForParentColumnsWithArrayType property if you set this property"
                          expressionType="Notify"
                          name="IncludeParentColumnsWithArrayType">false</property>
                        <property
                          dataType="System.String"
                          description="Filter expression to extract value form parent"
                          expressionType="Notify"
                          name="FilterForParentColumnsWithArrayType"></property>
                        <property
                          dataType="System.String"
                          description="Prefix for parent column name. This option is only valid if you have set IncludeParentColumns=True"
                          expressionType="Notify"
                          name="ParentColumnPrefix">cf</property>
                        <property
                          dataType="System.Boolean"
                          description="Throw error if property name specified in filter expression is missing. By default it will ignore any missing property errors."
                          expressionType="Notify"
                          name="ThrowErrorIfPropertyMissing">false</property>
                        <property
                          dataType="System.Int32"
                          description="This property how many nested levels should be scanned to fetch various properties. 0=Scan all child levels."
                          expressionType="Notify"
                          name="MaxLevelsToScan">0</property>
                        <property
                          dataType="System.String"
                          description="List comma separated property names from JSON document which you want to exclude from output. Specify parent property name to exclude all child nodes."
                          expressionType="Notify"
                          name="ExcludedProperties"></property>
                        <property
                          dataType="System.String"
                          description="Property level separator used in generated property name (separator for outer properties - Above selected filter node). Use this if default separator is producing duplicate property name which is conflicting with existing name."
                          expressionType="Notify"
                          name="LevelSeparator">_</property>
                        <property
                          dataType="System.Boolean"
                          description="Enables deep array flattening for selected filtered hierarchy. When you turn on this property it will flatten each property of each array item and expose as column (e.g. If you have Filter set as $.customers[*] and for each customer you have an array of Addresses then you may see output columns like Addresses.1.City, Addresses.1.State, Addresses.2.City, Addresses.2.State .... Addresses.N.City, Addresses.N.State). You can control how many array items you want to flatten by setting MaxArrayItemsToFlatten property."
                          expressionType="Notify"
                          name="EnableArrayFlattening">false</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum number of array items to flatten. inner array flattening. Adjust this property to control how many columns being generated. This option is ignored if you set EnableArrayFlattening=false"
                          expressionType="Notify"
                          name="MaxArrayItemsToFlatten">10</property>
                        <property
                          dataType="System.String"
                          description="Specifies how custom date formatted strings are parsed when reading JSON."
                          expressionType="Notify"
                          name="DateFormatString"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies how date formatted strings, e.g. Date(1198908717056) and 2012-03-21T05:40Z, are parsed when reading JSON."
                          expressionType="Notify"
                          name="DateParseHandling"
                          typeConverter="ZappySys.Common.DateParseHandling">1</property>
                        <property
                          dataType="System.Boolean"
                          description="Output as raw JSON document rather than parsing individual fields. This option is helpful if you have documents stored in a file and you want to pass them downstream as raw JSON string rather than parsing into columns."
                          expressionType="Notify"
                          name="OutputRawDocument">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Indent JSON output so its easy to read."
                          expressionType="Notify"
                          name="IndentOutput">false</property>
                        <property
                          dataType="System.Boolean"
                          description="When this property is true then Column is converted to Row. Pivoted names will appear under  Pivot_Name column and values will appear under Pivot_Value field."
                          expressionType="Notify"
                          name="EnablePivot">false</property>
                        <property
                          dataType="System.Int32"
                          description="Array Transformation you want to apply. Useful for case when you have 2-Dimensional arrays with rows/columns in separate arrays."
                          expressionType="Notify"
                          name="ArrayTransformationType"
                          typeConverter="ZappySys.Json.ArrayTransformType">0</property>
                        <property
                          dataType="System.String"
                          description="Filter expression to use to extract column names for array transformation."
                          expressionType="Notify"
                          name="ArrayTransColumnNameFilter"></property>
                        <property
                          dataType="System.String"
                          description="Filter expression for row values (Not applicable for simple array transformation)."
                          expressionType="Notify"
                          name="ArrayTransRowValueFilter"></property>
                        <property
                          dataType="System.Boolean"
                          description="When you have 2D array but don't have column list specified in a separate array then use this option (e.g. { arr: [[10,11],[21,22]] } )."
                          expressionType="Notify"
                          name="ArrayTransEnableCustomColumns">false</property>
                        <property
                          dataType="System.String"
                          description="When you have 2D array but don't have column list specified in a separate array then use specify column names here. Use comma separated list (e.g col1,col2,col3 ). Column name Order must match value order."
                          expressionType="Notify"
                          name="ArrayTransCustomColumns"></property>
                        <property
                          dataType="System.Int32"
                          description="Metadata scan mode controls how data type and length is determined. By default few records scanned to determine datatype/length. Changing ScanMode affects length/datatype accuracy."
                          expressionType="Notify"
                          name="MetaDataScanMode"
                          typeConverter="ZappySys.Common.Data.MetaDataScanMode">4</property>
                        <property
                          dataType="System.Int32"
                          description="Length for all string column. This option is only valid for MetaDataScanMode=Custom"
                          expressionType="Notify"
                          name="MetaDataCustomLength">1000</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.JsonParserTransform</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Contact search\custom.Inputs[JsonParserTransformInput]"
                          errorRowDisposition="FailComponent"
                          name="JsonParserTransformInput"
                          truncationRowDisposition="FailComponent">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\custom.Inputs[JsonParserTransformInput].Columns[ResponseText]"
                              cachedDataType="nText"
                              cachedName="ResponseText"
                              lineageId="Package\Iterate Offices\Sequence Container\Contact search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[ResponseText]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\custom.Inputs[JsonParserTransformInput].Columns[StatusCode]"
                              cachedDataType="i4"
                              cachedName="StatusCode"
                              lineageId="Package\Iterate Offices\Sequence Container\Contact search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[StatusCode]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Contact search\custom.Outputs[JsonParserTransformOutput].Columns[StatusCode]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\custom.Inputs[JsonParserTransformInput].Columns[args.service_object_id]"
                              cachedDataType="i8"
                              cachedName="args.service_object_id"
                              lineageId="Package\Iterate Offices\Sequence Container\Contact search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[args.service_object_id]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Contact search\custom.Outputs[JsonParserTransformOutput].Columns[args.service_object_id]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True" />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Contact search\custom.Outputs[JsonParserTransformOutput]"
                          errorOrTruncationOperation="Error"
                          errorRowDisposition="FailComponent"
                          name="JsonParserTransformOutput"
                          truncationRowDisposition="FailComponent">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\custom.Outputs[JsonParserTransformOutput].Columns[args.service_object_id]"
                              dataType="i8"
                              lineageId="Package\Iterate Offices\Sequence Container\Contact search\custom.Outputs[JsonParserTransformOutput].Columns[args.service_object_id]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Contact search\custom.Inputs[JsonParserTransformInput].Columns[args.service_object_id]"
                              name="args.service_object_id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\custom.Outputs[JsonParserTransformOutput].Columns[StatusCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Contact search\custom.Outputs[JsonParserTransformOutput].Columns[StatusCode]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Contact search\custom.Inputs[JsonParserTransformInput].Columns[StatusCode]"
                              name="StatusCode" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\custom.Outputs[JsonParserTransformOutput].Columns[custdoc]"
                              dataType="nText"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Contact search\custom.Outputs[JsonParserTransformOutput].ExternalColumns[__DOCUMENT__]"
                              lineageId="Package\Iterate Offices\Sequence Container\Contact search\custom.Outputs[JsonParserTransformOutput].Columns[custdoc]"
                              name="custdoc" />
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\custom.Outputs[JsonParserTransformOutput].ExternalColumns[__DOCUMENT__]"
                              dataType="nText"
                              name="__DOCUMENT__" />
                          </externalMetadataColumns>
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Contact search\custom.Outputs[JsonParserTransform Error Output]"
                          isErrorOut="true"
                          name="JsonParserTransform Error Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\custom.Outputs[JsonParserTransform Error Output].Columns[args.service_object_id]"
                              dataType="i8"
                              lineageId="Package\Iterate Offices\Sequence Container\Contact search\custom.Outputs[JsonParserTransform Error Output].Columns[args.service_object_id]"
                              name="args.service_object_id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\custom.Outputs[JsonParserTransform Error Output].Columns[StatusCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Contact search\custom.Outputs[JsonParserTransform Error Output].Columns[StatusCode]"
                              name="StatusCode" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\custom.Outputs[JsonParserTransform Error Output].Columns[custdoc]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\Contact search\custom.Outputs[JsonParserTransform Error Output].Columns[custdoc]"
                              name="custdoc" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\custom.Outputs[JsonParserTransform Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Contact search\custom.Outputs[JsonParserTransform Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\custom.Outputs[JsonParserTransform Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Contact search\custom.Outputs[JsonParserTransform Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\custom.Outputs[JsonParserTransform Error Output].Columns[ErrorColumnName]"
                              codePage="1252"
                              dataType="str"
                              length="128"
                              lineageId="Package\Iterate Offices\Sequence Container\Contact search\custom.Outputs[JsonParserTransform Error Output].Columns[ErrorColumnName]"
                              name="ErrorColumnName" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\custom.Outputs[JsonParserTransform Error Output].Columns[ErrorMessage]"
                              dataType="wstr"
                              length="1024"
                              lineageId="Package\Iterate Offices\Sequence Container\Contact search\custom.Outputs[JsonParserTransform Error Output].Columns[ErrorMessage]"
                              name="ErrorMessage" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\custom.Outputs[JsonParserTransform Error Output].Columns[ErrorRawData]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\Contact search\custom.Outputs[JsonParserTransform Error Output].Columns[ErrorRawData]"
                              name="ErrorRawData" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Contact search\Existing Contacts from SQL"
                      componentClassID="Microsoft.OLEDBSource"
                      contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                      description="OLE DB Source"
                      name="Existing Contacts from SQL"
                      usesDispositions="true"
                      version="7">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">0</property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the database object used to open a rowset."
                          name="OpenRowset">[dbo].[vwContacts]</property>
                        <property
                          dataType="System.String"
                          description="Specifies the variable that contains the name of the database object used to open a rowset."
                          name="OpenRowsetVariable"></property>
                        <property
                          dataType="System.String"
                          description="The SQL command to be executed."
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">SELECT [Id], 
       [etag_contact], 
       [AccountId]
FROM [Entities].[dbo].[vwContacts] with (nolock)
WHERE [AccountId] = ?</property>
                        <property
                          dataType="System.String"
                          description="The variable that contains the SQL command to be executed."
                          name="SqlCommandVariable"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Boolean"
                          description="Forces the use of the DefaultCodePage property value when describing character data."
                          name="AlwaysUseDefaultCodePage">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the mode used to access the database."
                          name="AccessMode"
                          typeConverter="AccessMode">2</property>
                        <property
                          dataType="System.String"
                          description="The mappings between the parameters in the SQL command and variables."
                          name="ParameterMapping">"Parameter0:Input",{40C273CD-83FA-4737-B171-10500D92D346};</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Iterate Offices\Sequence Container\Contact search\Existing Contacts from SQL.Connections[OleDbConnection]"
                          connectionManagerID="Package.ConnectionManagers[colsqlbi01v.Entities]"
                          connectionManagerRefId="Package.ConnectionManagers[colsqlbi01v.Entities]"
                          description="The OLE DB runtime connection used to access the database."
                          name="OleDbConnection" />
                      </connections>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Contact search\Existing Contacts from SQL.Outputs[OLE DB Source Output]"
                          name="OLE DB Source Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\Existing Contacts from SQL.Outputs[OLE DB Source Output].Columns[Id]"
                              dataType="i4"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Contact search\Existing Contacts from SQL.Outputs[OLE DB Source Output].ExternalColumns[Id]"
                              lineageId="Package\Iterate Offices\Sequence Container\Contact search\Existing Contacts from SQL.Outputs[OLE DB Source Output].Columns[Id]"
                              name="Id"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\Existing Contacts from SQL.Outputs[OLE DB Source Output].Columns[etag_contact]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Contact search\Existing Contacts from SQL.Outputs[OLE DB Source Output].ExternalColumns[etag_contact]"
                              length="250"
                              lineageId="Package\Iterate Offices\Sequence Container\Contact search\Existing Contacts from SQL.Outputs[OLE DB Source Output].Columns[etag_contact]"
                              name="etag_contact"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\Existing Contacts from SQL.Outputs[OLE DB Source Output].Columns[AccountId]"
                              dataType="i2"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Contact search\Existing Contacts from SQL.Outputs[OLE DB Source Output].ExternalColumns[AccountId]"
                              lineageId="Package\Iterate Offices\Sequence Container\Contact search\Existing Contacts from SQL.Outputs[OLE DB Source Output].Columns[AccountId]"
                              name="AccountId"
                              truncationRowDisposition="FailComponent" />
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\Existing Contacts from SQL.Outputs[OLE DB Source Output].ExternalColumns[Id]"
                              dataType="i4"
                              name="Id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\Existing Contacts from SQL.Outputs[OLE DB Source Output].ExternalColumns[etag_contact]"
                              dataType="wstr"
                              length="250"
                              name="etag_contact" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\Existing Contacts from SQL.Outputs[OLE DB Source Output].ExternalColumns[AccountId]"
                              dataType="i2"
                              name="AccountId" />
                          </externalMetadataColumns>
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Contact search\Existing Contacts from SQL.Outputs[OLE DB Source Error Output]"
                          isErrorOut="true"
                          name="OLE DB Source Error Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\Existing Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Contact search\Existing Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\Existing Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Contact search\Existing Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\Existing Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[Id]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Contact search\Existing Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[Id]"
                              name="Id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\Existing Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[etag_contact]"
                              dataType="wstr"
                              length="250"
                              lineageId="Package\Iterate Offices\Sequence Container\Contact search\Existing Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[etag_contact]"
                              name="etag_contact" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\Existing Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[AccountId]"
                              dataType="i2"
                              lineageId="Package\Iterate Offices\Sequence Container\Contact search\Existing Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[AccountId]"
                              name="AccountId" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Contact search\Insert or Ignore"
                      componentClassID="Microsoft.ConditionalSplit"
                      contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
                      name="Insert or Ignore"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Contact search\Insert or Ignore.Inputs[Conditional Split Input]"
                          description="Input to the Conditional Split Transformation"
                          name="Conditional Split Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\Insert or Ignore.Inputs[Conditional Split Input].Columns[etag_contact]"
                              cachedDataType="wstr"
                              cachedLength="250"
                              cachedName="etag_contact"
                              lineageId="Package\Iterate Offices\Sequence Container\Contact search\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etag_contact]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\Insert or Ignore.Inputs[Conditional Split Input].Columns[etag]"
                              cachedDataType="wstr"
                              cachedLength="68"
                              cachedName="etag"
                              lineageId="Package\Iterate Offices\Sequence Container\Contact search\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etag]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Contact search\Insert or Ignore.Outputs[upsert]"
                          description="Output 1 of the Conditional Split Transformation"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          exclusionGroup="1"
                          name="upsert"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Contact search\Insert or Ignore.Inputs[Conditional Split Input]"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                              name="Expression">[ISNULL](#{Package\Iterate Offices\Sequence Container\Contact search\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etag_contact]}) || #{Package\Iterate Offices\Sequence Container\Contact search\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etag_contact]} != #{Package\Iterate Offices\Sequence Container\Contact search\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etag]}</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the friendly version of the expression. This expression version uses column names."
                              expressionType="Notify"
                              name="FriendlyExpression">ISNULL(etag_contact) || etag_contact != etag</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                              name="EvaluationOrder">0</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Contact search\Insert or Ignore.Outputs[ignore]"
                          description="Output 2 of the Conditional Split Transformation"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          exclusionGroup="1"
                          name="ignore"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Contact search\Insert or Ignore.Inputs[Conditional Split Input]"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                              name="Expression">![ISNULL](#{Package\Iterate Offices\Sequence Container\Contact search\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etag_contact]})</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the friendly version of the expression. This expression version uses column names."
                              expressionType="Notify"
                              name="FriendlyExpression">!ISNULL(etag_contact)</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                              name="EvaluationOrder">1</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Contact search\Insert or Ignore.Outputs[Conditional Split Default Output]"
                          description="Default Output of the Conditional Split Transformation"
                          exclusionGroup="1"
                          name="Conditional Split Default Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Contact search\Insert or Ignore.Inputs[Conditional Split Input]">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              name="IsDefaultOut">true</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Contact search\Insert or Ignore.Outputs[Conditional Split Error Output]"
                          description="Error Output of the Conditional Split Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Conditional Split Error Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Contact search\Insert or Ignore.Inputs[Conditional Split Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\Insert or Ignore.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Contact search\Insert or Ignore.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\Insert or Ignore.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Contact search\Insert or Ignore.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Contact search\JSON Generator Transform"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="JSON Generator Transform; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="The JSON generator transform can be used to create JSON document from single or multiple inputs. You can create simple or nested JSON document."
                      name="JSON Generator Transform"
                      version="5">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.Int32"
                          description="Determines JSON format and output mode (e.g. one JSON for all input rows or one JSON for each input row)"
                          expressionType="Notify"
                          name="OutputMode"
                          typeConverter="ZappySys.PowerPack.Transform.JsonGeneratorTransform.JsonOutputMode">2</property>
                        <property
                          dataType="System.String"
                          description="Defines shape of output JSON string"
                          expressionType="Notify"
                          name="LayoutInfo">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;settings ver="3"&gt;
  &lt;dataset id="ds_id729" main="True" inputid="729" readfrominput="True"&gt;&lt;/dataset&gt;
  &lt;map name="method" value="CustomFields::readFieldValuesAndRecord" datatype="String" /&gt;
  &lt;map name="args"&gt;
    &lt;map name="service_name" value="Contacts" datatype="String" /&gt;
    &lt;map src="id" name="service_object_id" datatype="String" /&gt;
    &lt;map name="return_custom_fields_keyed_by" value="field_name" /&gt;
  &lt;/map&gt;
  &lt;map name="strip_response_prefixes" value="true" datatype="Bool" /&gt;
  &lt;map name="token" value="{{User::RexToken}}" /&gt;
&lt;/settings&gt;</property>
                        <property
                          dataType="System.Boolean"
                          description="Do not output attribute if value is NULL. By default null attribute is output as &quot;MyColname&quot; : null "
                          expressionType="Notify"
                          name="DoNotOutputNullAttribute">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indent JSON Text generated by this transform (Pretty Print)"
                          expressionType="Notify"
                          name="IndentOutput">false</property>
                        <property
                          dataType="System.String"
                          description="Default output format for datetime columns"
                          expressionType="Notify"
                          name="DateTimeFormat">yyyy-MM-dd HH:mm:ss</property>
                        <property
                          dataType="System.String"
                          description="Culture setting for this task. This option is useful to control output format for certain data types (e.g. number, decimal) based on regional settings. In USA dot is used for decimal indicator but in Germany it may be comma. Leave this blank if you want to use system default settings."
                          expressionType="Notify"
                          name="Culture"></property>
                        <property
                          dataType="System.Boolean"
                          description="Document Header/Footer text come from upstream column rather than direct string"
                          expressionType="Notify"
                          name="UseColumnForHeaderFooter">false</property>
                        <property
                          dataType="System.String"
                          description="Header text for document (Added before each document in the output)"
                          expressionType="Notify"
                          name="DocumentHeader"></property>
                        <property
                          dataType="System.String"
                          description="Footer text for document (Added after each document in the output)"
                          expressionType="Notify"
                          name="DocumentFooter"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies how many rows to include in each batch (Array records for single dataset array mode). 0=Include all in one batch. This setting is only valid for Mode=[Single Dataset Array]"
                          expressionType="Notify"
                          name="ArrayBatchSize">0</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.JsonGeneratorTransform</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to True if you dont want to output empty nodes of sub document (e.g nested property). This option is only applicable if you enabled DoNotOutputNullProperty. If all child peoprties are NULL for parent node then by default output contains empty nodes (e.g. CountryInfo: { CityInfo: { } } for Json --OR-- &lt;CountryInfo&gt;&lt;CityInfo /&gt;&lt;/CountryInfo&gt; for Xml). You can enable this option to avoid such empty nodes from the output."
                          expressionType="Notify"
                          name="DoNotOutputEmptyNestedAttribute">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to True if you dont want to output empty array nodes when no record found for that array (e.g. &quot;Orders&quot;: [ ] for JSON --OR-- &lt;Orders&gt;&lt;/Orders&gt; for Xml). You can enable this option to avoid such empty nodes from the output."
                          expressionType="Notify"
                          name="DoNotOutputEmptyArrayAttribute">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies encoding for data. If you set CharacterSet property then Encoing is ignored."
                          expressionType="Notify"
                          name="Encoding"
                          typeConverter="ZappySys.Common.EncodingType">2</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Contact search\JSON Generator Transform.Inputs[JsonInput1]"
                          name="JsonInput1">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Id for attached dataset with input. Use JSON Layout Editor to see attached dataset"
                              expressionType="Notify"
                              name="DatasetInputId">729</property>
                          </properties>
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\JSON Generator Transform.Inputs[JsonInput1].Columns[etag_contact]"
                              cachedDataType="wstr"
                              cachedLength="250"
                              cachedName="etag_contact"
                              lineageId="Package\Iterate Offices\Sequence Container\Contact search\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etag_contact]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\JSON Generator Transform.Inputs[JsonInput1].Columns[etag]"
                              cachedDataType="wstr"
                              cachedLength="68"
                              cachedName="etag"
                              lineageId="Package\Iterate Offices\Sequence Container\Contact search\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etag]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\JSON Generator Transform.Inputs[JsonInput1].Columns[id]"
                              cachedDataType="i4"
                              cachedName="id"
                              cachedSortKeyPosition="1"
                              lineageId="Package\Iterate Offices\Sequence Container\Contact search\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[id]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Contact search\JSON Generator Transform.Inputs[JsonInput2]"
                          name="JsonInput2">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Contact search\JSON Generator Transform.Outputs[JsonGeneratorTransformOutput]"
                          errorOrTruncationOperation="Error"
                          name="JsonGeneratorTransformOutput">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\JSON Generator Transform.Outputs[JsonGeneratorTransformOutput].Columns[ZS_JSON_OUT]"
                              dataType="nText"
                              description="This output column contains generated JSON string from JSON generator Transform"
                              lineageId="Package\Iterate Offices\Sequence Container\Contact search\JSON Generator Transform.Outputs[JsonGeneratorTransformOutput].Columns[ZS_JSON_OUT]"
                              name="ZS_JSON_OUT" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Contact search\JSON Parser Add id back in"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="JSON Parser Transform; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="Parse incoming JSON String into columns. You can also parse and transform single JSON record into multiple rows by filtering data based on JSON Path (e.g. $.Customer.Orders[*])"
                      name="JSON Parser Add id back in"
                      usesDispositions="true"
                      version="2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for any numeric data types"
                          expressionType="Notify"
                          name="TreatBlankNumberAsNull">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for bool data types"
                          expressionType="Notify"
                          name="TreatBlankBoolAsNull">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for any date/time data types"
                          expressionType="Notify"
                          name="TreatBlankDateAsNull">true</property>
                        <property
                          dataType="System.String"
                          description="Sample JSON data used to parse output columns."
                          expressionType="Notify"
                          name="SampleData"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">{"method":"CustomFields::readFieldValuesAndRecord","args":{"service_name":"Contacts","service_object_id":"28569","return_custom_fields_keyed_by":"field_name"},"strip_response_prefixes":1,"token":"b57c-0be2-04f4-8d65-fd25-a099-6087-07de-1780-19443"}</property>
                        <property
                          dataType="System.Boolean"
                          description="Include all upstream parent columns into output except the one you selected to parse. By default only parsed columns from Input document is included in the output. If you wish to include all other upstream columns in the output too then check this option."
                          expressionType="Notify"
                          name="OutputAllUpstreamColumns">true</property>
                        <property
                          dataType="System.Int32"
                          description="Defines how to handle empty input. By default NULL or Empty input is skipped from parsing."
                          expressionType="Notify"
                          name="EmptyInputProcessingMode"
                          typeConverter="ZappySys.Common.Data.EmptyInputProcessingMode">0</property>
                        <property
                          dataType="System.String"
                          description="Defines how to handle empty input. By default NULL or Empty input is skipped from parsing."
                          expressionType="Notify"
                          name="TreatEmptyInputAs">{ }</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum JSON records to fetch. Set this value to 0 for all records"
                          expressionType="Notify"
                          name="MaxRows">0</property>
                        <property
                          dataType="System.String"
                          description="Enter expression here to filter data.(Example:  $.Users[*].UserName ) This will fetch User names from users records"
                          expressionType="Notify"
                          name="Filter"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.Boolean"
                          description="Use this option to include parent properties (Non array) in the output along with Filtered Rows"
                          expressionType="Notify"
                          name="IncludeParentColumns">true</property>
                        <property
                          dataType="System.Boolean"
                          description="By default child and parent information is not included in the output if children not found for specified expression. For example if you want to extract all orders from all customers nodes then you can type $.Customers[*].Orders[*]. This will fetch all orders from all customers. By default customers records without orders wont be included in the output. If you want to include those customers where orders not found then check this option (Output null information for order attributes). This behavior is similar to LEFT OUTER JOIN in SQL (Left side is parent, right side is child). This option is ***resource intensive*** so only check if you really care about this behavior."
                          expressionType="Notify"
                          name="IncludeParentColumnsWhenChildMissing">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to true if you want to output parent columns which are array. By default any parent column which is an array is not included in output. See also FilterForParentColumnsWithArrayType property if you set this property"
                          expressionType="Notify"
                          name="IncludeParentColumnsWithArrayType">false</property>
                        <property
                          dataType="System.String"
                          description="Filter expression to extract value form parent"
                          expressionType="Notify"
                          name="FilterForParentColumnsWithArrayType"></property>
                        <property
                          dataType="System.String"
                          description="Prefix for parent column name. This option is only valid if you have set IncludeParentColumns=True"
                          expressionType="Notify"
                          name="ParentColumnPrefix">P_</property>
                        <property
                          dataType="System.Boolean"
                          description="Throw error if property name specified in filter expression is missing. By default it will ignore any missing property errors."
                          expressionType="Notify"
                          name="ThrowErrorIfPropertyMissing">false</property>
                        <property
                          dataType="System.Int32"
                          description="This property how many nested levels should be scanned to fetch various properties. 0=Scan all child levels."
                          expressionType="Notify"
                          name="MaxLevelsToScan">0</property>
                        <property
                          dataType="System.String"
                          description="List comma separated property names from JSON document which you want to exclude from output. Specify parent property name to exclude all child nodes."
                          expressionType="Notify"
                          name="ExcludedProperties"></property>
                        <property
                          dataType="System.String"
                          description="Property level separator used in generated property name (separator for outer properties - Above selected filter node). Use this if default separator is producing duplicate property name which is conflicting with existing name."
                          expressionType="Notify"
                          name="LevelSeparator">_</property>
                        <property
                          dataType="System.Boolean"
                          description="Enables deep array flattening for selected filtered hierarchy. When you turn on this property it will flatten each property of each array item and expose as column (e.g. If you have Filter set as $.customers[*] and for each customer you have an array of Addresses then you may see output columns like Addresses.1.City, Addresses.1.State, Addresses.2.City, Addresses.2.State .... Addresses.N.City, Addresses.N.State). You can control how many array items you want to flatten by setting MaxArrayItemsToFlatten property."
                          expressionType="Notify"
                          name="EnableArrayFlattening">false</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum number of array items to flatten. inner array flattening. Adjust this property to control how many columns being generated. This option is ignored if you set EnableArrayFlattening=false"
                          expressionType="Notify"
                          name="MaxArrayItemsToFlatten">10</property>
                        <property
                          dataType="System.String"
                          description="Specifies how custom date formatted strings are parsed when reading JSON."
                          expressionType="Notify"
                          name="DateFormatString"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies how date formatted strings, e.g. Date(1198908717056) and 2012-03-21T05:40Z, are parsed when reading JSON."
                          expressionType="Notify"
                          name="DateParseHandling"
                          typeConverter="ZappySys.Common.DateParseHandling">1</property>
                        <property
                          dataType="System.Boolean"
                          description="Output as raw JSON document rather than parsing individual fields. This option is helpful if you have documents stored in a file and you want to pass them downstream as raw JSON string rather than parsing into columns."
                          expressionType="Notify"
                          name="OutputRawDocument">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indent JSON output so its easy to read."
                          expressionType="Notify"
                          name="IndentOutput">false</property>
                        <property
                          dataType="System.Boolean"
                          description="When this property is true then Column is converted to Row. Pivoted names will appear under  Pivot_Name column and values will appear under Pivot_Value field."
                          expressionType="Notify"
                          name="EnablePivot">false</property>
                        <property
                          dataType="System.Int32"
                          description="Array Transformation you want to apply. Useful for case when you have 2-Dimensional arrays with rows/columns in separate arrays."
                          expressionType="Notify"
                          name="ArrayTransformationType"
                          typeConverter="ZappySys.Json.ArrayTransformType">0</property>
                        <property
                          dataType="System.String"
                          description="Filter expression to use to extract column names for array transformation."
                          expressionType="Notify"
                          name="ArrayTransColumnNameFilter"></property>
                        <property
                          dataType="System.String"
                          description="Filter expression for row values (Not applicable for simple array transformation)."
                          expressionType="Notify"
                          name="ArrayTransRowValueFilter"></property>
                        <property
                          dataType="System.Boolean"
                          description="When you have 2D array but don't have column list specified in a separate array then use this option (e.g. { arr: [[10,11],[21,22]] } )."
                          expressionType="Notify"
                          name="ArrayTransEnableCustomColumns">false</property>
                        <property
                          dataType="System.String"
                          description="When you have 2D array but don't have column list specified in a separate array then use specify column names here. Use comma separated list (e.g col1,col2,col3 ). Column name Order must match value order."
                          expressionType="Notify"
                          name="ArrayTransCustomColumns"></property>
                        <property
                          dataType="System.Int32"
                          description="Metadata scan mode controls how data type and length is determined. By default few records scanned to determine datatype/length. Changing ScanMode affects length/datatype accuracy."
                          expressionType="Notify"
                          name="MetaDataScanMode"
                          typeConverter="ZappySys.Common.Data.MetaDataScanMode">4</property>
                        <property
                          dataType="System.Int32"
                          description="Length for all string column. This option is only valid for MetaDataScanMode=Custom"
                          expressionType="Notify"
                          name="MetaDataCustomLength">1000</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.JsonParserTransform</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Contact search\JSON Parser Add id back in.Inputs[JsonParserTransformInput]"
                          errorRowDisposition="FailComponent"
                          name="JsonParserTransformInput"
                          truncationRowDisposition="FailComponent">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\JSON Parser Add id back in.Inputs[JsonParserTransformInput].Columns[ZS_JSON_OUT]"
                              cachedDataType="nText"
                              cachedName="ZS_JSON_OUT"
                              lineageId="Package\Iterate Offices\Sequence Container\Contact search\JSON Generator Transform.Outputs[JsonGeneratorTransformOutput].Columns[ZS_JSON_OUT]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\JSON Parser Add id back in.Inputs[JsonParserTransformInput].Columns[ResponseText]"
                              cachedDataType="nText"
                              cachedName="ResponseText"
                              lineageId="Package\Iterate Offices\Sequence Container\Contact search\Web API Destination.Outputs[Response Output].Columns[ResponseText]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Contact search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[ResponseText]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\JSON Parser Add id back in.Inputs[JsonParserTransformInput].Columns[StatusCode]"
                              cachedDataType="i4"
                              cachedName="StatusCode"
                              lineageId="Package\Iterate Offices\Sequence Container\Contact search\Web API Destination.Outputs[Response Output].Columns[StatusCode]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Contact search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[StatusCode]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True" />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Contact search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput]"
                          errorOrTruncationOperation="Error"
                          errorRowDisposition="FailComponent"
                          name="JsonParserTransformOutput"
                          truncationRowDisposition="FailComponent">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[StatusCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Contact search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[StatusCode]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Contact search\JSON Parser Add id back in.Inputs[JsonParserTransformInput].Columns[StatusCode]"
                              name="StatusCode" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[ResponseText]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\Contact search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[ResponseText]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Contact search\JSON Parser Add id back in.Inputs[JsonParserTransformInput].Columns[ResponseText]"
                              name="ResponseText" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[args.service_object_id]"
                              dataType="i8"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Contact search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].ExternalColumns[args.service_object_id]"
                              lineageId="Package\Iterate Offices\Sequence Container\Contact search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[args.service_object_id]"
                              name="args.service_object_id" />
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].ExternalColumns[method]"
                              dataType="wstr"
                              length="152"
                              name="method" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].ExternalColumns[args.service_name]"
                              dataType="wstr"
                              length="32"
                              name="args.service_name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].ExternalColumns[args.service_object_id]"
                              dataType="wstr"
                              length="20"
                              name="args.service_object_id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].ExternalColumns[args.return_custom_fields_keyed_by]"
                              dataType="wstr"
                              length="40"
                              name="args.return_custom_fields_keyed_by" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].ExternalColumns[strip_response_prefixes]"
                              dataType="i8"
                              name="strip_response_prefixes" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].ExternalColumns[token]"
                              dataType="wstr"
                              length="200"
                              name="token" />
                          </externalMetadataColumns>
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Contact search\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output]"
                          isErrorOut="true"
                          name="JsonParserTransform Error Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[StatusCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Contact search\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[StatusCode]"
                              name="StatusCode" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[ResponseText]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\Contact search\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[ResponseText]"
                              name="ResponseText" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[args.service_object_id]"
                              dataType="i8"
                              lineageId="Package\Iterate Offices\Sequence Container\Contact search\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[args.service_object_id]"
                              name="args.service_object_id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Contact search\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Contact search\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[ErrorColumnName]"
                              codePage="1252"
                              dataType="str"
                              length="128"
                              lineageId="Package\Iterate Offices\Sequence Container\Contact search\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[ErrorColumnName]"
                              name="ErrorColumnName" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[ErrorMessage]"
                              dataType="wstr"
                              length="1024"
                              lineageId="Package\Iterate Offices\Sequence Container\Contact search\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[ErrorMessage]"
                              name="ErrorMessage" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[ErrorRawData]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\Contact search\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[ErrorRawData]"
                              name="ErrorRawData" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Contact search\Merge Join"
                      componentClassID="Microsoft.MergeJoin"
                      contactInfo="Merge Join;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Combine two sorted data flows into one using the FULL, LEFT, or INNER join. We recommend this transformation when data flows can be sorted at their sources."
                      name="Merge Join"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of join to perform."
                          name="JoinType"
                          typeConverter="JoinType">2</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the number of columns in the ordering key."
                          name="NumKeyColumns">1</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the null values are treated as equal values."
                          name="TreatNullsAsEqual">true</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates the requested maximum buffers per input before blocking."
                          name="MaxBuffersPerInput">5</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Contact search\Merge Join.Inputs[Merge Join Left Input]"
                          hasSideEffects="true"
                          name="Merge Join Left Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\Merge Join.Inputs[Merge Join Left Input].Columns[args.service_object_id2]"
                              cachedDataType="i8"
                              cachedName="args.service_object_id2"
                              cachedSortKeyPosition="1"
                              lineageId="Package\Iterate Offices\Sequence Container\Contact search\Sort.Outputs[Sort Output].Columns[args.service_object_id2]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\Merge Join.Inputs[Merge Join Left Input].Columns[StatusCode]"
                              cachedDataType="i4"
                              cachedName="StatusCode"
                              lineageId="Package\Iterate Offices\Sequence Container\Contact search\Sort.Outputs[Sort Output].Columns[StatusCode]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\Merge Join.Inputs[Merge Join Left Input].Columns[custdoc]"
                              cachedDataType="nText"
                              cachedName="custdoc"
                              lineageId="Package\Iterate Offices\Sequence Container\Contact search\Sort.Outputs[Sort Output].Columns[custdoc]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Contact search\Merge Join.Inputs[Merge Join Right Input]"
                          hasSideEffects="true"
                          name="Merge Join Right Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\Merge Join.Inputs[Merge Join Right Input].Columns[args.service_object_id1]"
                              cachedDataType="i8"
                              cachedName="args.service_object_id1"
                              cachedSortKeyPosition="1"
                              lineageId="Package\Iterate Offices\Sequence Container\Contact search\Sort 1.Outputs[Sort Output].Columns[args.service_object_id1]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\Merge Join.Inputs[Merge Join Right Input].Columns[recorddoc]"
                              cachedDataType="nText"
                              cachedName="recorddoc"
                              lineageId="Package\Iterate Offices\Sequence Container\Contact search\Sort 1.Outputs[Sort Output].Columns[recorddoc]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Contact search\Merge Join.Outputs[Merge Join Output]"
                          isSorted="true"
                          name="Merge Join Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\Merge Join.Outputs[Merge Join Output].Columns[args.service_object_id]"
                              dataType="i8"
                              lineageId="Package\Iterate Offices\Sequence Container\Contact search\Merge Join.Outputs[Merge Join Output].Columns[args.service_object_id]"
                              name="args.service_object_id"
                              sortKeyPosition="1">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Iterate Offices\Sequence Container\Contact search\Merge Join.Inputs[Merge Join Left Input].Columns[args.service_object_id2]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\Merge Join.Outputs[Merge Join Output].Columns[StatusCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Contact search\Merge Join.Outputs[Merge Join Output].Columns[StatusCode]"
                              name="StatusCode">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Iterate Offices\Sequence Container\Contact search\Merge Join.Inputs[Merge Join Left Input].Columns[StatusCode]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\Merge Join.Outputs[Merge Join Output].Columns[recorddoc]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\Contact search\Merge Join.Outputs[Merge Join Output].Columns[recorddoc]"
                              name="recorddoc">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Iterate Offices\Sequence Container\Contact search\Merge Join.Inputs[Merge Join Right Input].Columns[recorddoc]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\Merge Join.Outputs[Merge Join Output].Columns[custdoc]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\Contact search\Merge Join.Outputs[Merge Join Output].Columns[custdoc]"
                              name="custdoc">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Iterate Offices\Sequence Container\Contact search\Merge Join.Inputs[Merge Join Left Input].Columns[custdoc]}</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Contact search\Merge Join To Find Those to Insert"
                      componentClassID="Microsoft.MergeJoin"
                      contactInfo="Merge Join;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Combine two sorted data flows into one using the FULL, LEFT, or INNER join. We recommend this transformation when data flows can be sorted at their sources."
                      name="Merge Join To Find Those to Insert"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of join to perform."
                          name="JoinType"
                          typeConverter="JoinType">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the number of columns in the ordering key."
                          name="NumKeyColumns">1</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the null values are treated as equal values."
                          name="TreatNullsAsEqual">true</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates the requested maximum buffers per input before blocking."
                          name="MaxBuffersPerInput">5</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Contact search\Merge Join To Find Those to Insert.Inputs[Merge Join Left Input]"
                          hasSideEffects="true"
                          name="Merge Join Left Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\Merge Join To Find Those to Insert.Inputs[Merge Join Left Input].Columns[etag]"
                              cachedDataType="wstr"
                              cachedLength="68"
                              cachedName="etag"
                              lineageId="Package\Iterate Offices\Sequence Container\Contact search\API Sort.Outputs[Sort Output].Columns[etag]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\Merge Join To Find Those to Insert.Inputs[Merge Join Left Input].Columns[id]"
                              cachedDataType="i4"
                              cachedName="id"
                              cachedSortKeyPosition="1"
                              lineageId="Package\Iterate Offices\Sequence Container\Contact search\API Sort.Outputs[Sort Output].Columns[id]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Contact search\Merge Join To Find Those to Insert.Inputs[Merge Join Right Input]"
                          hasSideEffects="true"
                          name="Merge Join Right Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\Merge Join To Find Those to Insert.Inputs[Merge Join Right Input].Columns[Id]"
                              cachedDataType="i4"
                              cachedName="Id"
                              cachedSortKeyPosition="1"
                              lineageId="Package\Iterate Offices\Sequence Container\Contact search\SQL Sort.Outputs[Sort Output].Columns[Id]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\Merge Join To Find Those to Insert.Inputs[Merge Join Right Input].Columns[etag_contact]"
                              cachedDataType="wstr"
                              cachedLength="250"
                              cachedName="etag_contact"
                              lineageId="Package\Iterate Offices\Sequence Container\Contact search\SQL Sort.Outputs[Sort Output].Columns[etag_contact]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Contact search\Merge Join To Find Those to Insert.Outputs[Merge Join Output]"
                          isSorted="true"
                          name="Merge Join Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etag_contact]"
                              dataType="wstr"
                              length="250"
                              lineageId="Package\Iterate Offices\Sequence Container\Contact search\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etag_contact]"
                              name="etag_contact">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Iterate Offices\Sequence Container\Contact search\Merge Join To Find Those to Insert.Inputs[Merge Join Right Input].Columns[etag_contact]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etag]"
                              dataType="wstr"
                              length="68"
                              lineageId="Package\Iterate Offices\Sequence Container\Contact search\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etag]"
                              name="etag">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Iterate Offices\Sequence Container\Contact search\Merge Join To Find Those to Insert.Inputs[Merge Join Left Input].Columns[etag]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[id]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Contact search\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[id]"
                              name="id"
                              sortKeyPosition="1">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Iterate Offices\Sequence Container\Contact search\Merge Join To Find Those to Insert.Inputs[Merge Join Left Input].Columns[id]}</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Contact search\Multicast"
                      componentClassID="Microsoft.Multicast"
                      contactInfo="Multicast;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Distributes every input row to every row in one or more outputs. For example, branch your data flow to make a copy of data so that some values can be masked before sharing with external partners."
                      name="Multicast">
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Contact search\Multicast.Inputs[Multicast Input 1]"
                          name="Multicast Input 1">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Contact search\Multicast.Outputs[Multicast Output 2]"
                          deleteOutputOnPathDetached="true"
                          name="Multicast Output 2"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Contact search\Multicast.Inputs[Multicast Input 1]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Contact search\Multicast.Outputs[Multicast Output 1]"
                          deleteOutputOnPathDetached="true"
                          name="Multicast Output 1"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Contact search\Multicast.Inputs[Multicast Input 1]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Contact search\Multicast.Outputs[Multicast Output 4]"
                          dangling="true"
                          deleteOutputOnPathDetached="true"
                          name="Multicast Output 4"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Contact search\Multicast.Inputs[Multicast Input 1]">
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Contact search\record"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="JSON Parser Transform; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="Parse incoming JSON String into columns. You can also parse and transform single JSON record into multiple rows by filtering data based on JSON Path (e.g. $.Customer.Orders[*])"
                      name="record"
                      usesDispositions="true"
                      version="2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">3</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for any numeric data types"
                          expressionType="Notify"
                          name="TreatBlankNumberAsNull">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for bool data types"
                          expressionType="Notify"
                          name="TreatBlankBoolAsNull">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for any date/time data types"
                          expressionType="Notify"
                          name="TreatBlankDateAsNull">true</property>
                        <property
                          dataType="System.String"
                          description="Sample JSON data used to parse output columns."
                          expressionType="Notify"
                          name="SampleData"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">{
    "result": {
        "record": {
            "system_record_state": "active",
            "system_ctime": 1545243149,
            "system_modtime": 1545243149,
            "system_search_key": "W Sturt",
            "address": "26 Marine Parade\r\nDovercourt, Harwich\r\nEssex\r\nCO12 3RD",
            "address_postal": null,
            "marketing_postcode": "CO12 3RD",
            "marketing_enquiry_source": null,
            "marketing_gender": null,
            "marketing_birthday": null,
            "notes": null,
            "company_name": "Sturt",
            "company_abn": null,
            "website_url": null,
            "is_dnd": true,
            "type": "person",
            "interest_level": null,
            "last_contacted_date": null,
            "name_legal": null,
            "name_salutation": null,
            "name_addressee": null,
            "last_contacted_at": null,
            "single_view_identity_id": null,
            "single_view_profile_id": null,
            "etag": "28569-1545243149",
            "id": 28569,
            "system_owner_user": {
                "id": "19443",
                "name": "Rosie API",
                "first_name": "Rosie",
                "last_name": "API",
                "email_address": "rosie@spicerhaart.co.uk"
            },
            "system_modified_user": {
                "id": "19443",
                "name": "Rosie API",
                "first_name": "Rosie",
                "last_name": "API",
                "email_address": "rosie@spicerhaart.co.uk"
            },
            "system_created_user": {
                "id": "19443",
                "name": "Rosie API",
                "first_name": "Rosie",
                "last_name": "API",
                "email_address": "rosie@spicerhaart.co.uk"
            },
            "smart_categories": false,
            "contact_image": null,
            "company_size": null,
            "marketing_enquiry_method": null,
            "related": {
                "contact_emails": [],
                "contact_names": [
                    {
                        "name_title": "Mr",
                        "name_first": "W",
                        "name_middle": null,
                        "name_last": "Sturt",
                        "id": 27515
                    }
                ],
                "contact_phones": [],
                "contact_tags": [],
                "contact_documents": [],
                "contact_mailing_lists": [],
                "contact_relationships": [],
                "contact_reln_property": [],
                "contact_reln_listing": []
            },
            "address_wash": {
                "present_on_lists": [],
                "user_override": null,
                "allow": true
            },
            "address_postal_wash": null,
            "security_user_rights": [
                "read",
                "update",
                "archive",
                "trash",
                "perms"
            ]
        },
        "custom_fields": {
            "FS/Legal.Applicant Status.Status": null,
            "FS/Legal.Applicant Status.Expected timescale": null,
            "FS/Legal.Applicant Status.Interested in HTB": null,
            "FS/Legal.Applicant Status.Interested in New Homes": null,
            "FS/Legal.Legal Services.Have services been sold": null,
            "FS/Legal.Legal Services.If no, reason": null,
            "FS/Legal.Legal Services.Date instructed": null,
            "FS/Legal.Legal Services.Instructed by": null,
            "FS/Legal.Legal Services.Product sold": null,
            "FS/Legal.Legal Services.Status": null,
            "FS/Legal.Legal Services.Legal income": null,
            "FS/Legal.Legal Services.Conveyancer": null,
            "FS/Legal.Financial Services.Appointment made": null,
            "FS/Legal.Financial Services.If no, reason": null,
            "FS/Legal.Financial Services.Referred by": null,
            "FS/Legal.Financial Services.Purchasing position": null,
            "FS/Legal.Financial Services.Spoken with broker/lender": null,
            "FS/Legal.Financial Services.Notes, discussions &amp; insight": null,
            "FS/Legal.Financial Services.Deposit available": null,
            "FS/Legal.Financial Services.Mortgage type": null,
            "FS/Legal.Financial Services.Rates quoted": null,
            "FS/Legal.Financial Services Outcomes.Did appt take place?": null,
            "FS/Legal.Financial Services Outcomes.Was an AIP received?": null,
            "FS/Legal.Financial Services Outcomes.New business written?": null,
            "FS/Legal.Record Attribution.Change applicant registration user": null,
            "FS/Legal.Record Attribution.IDBS AppRef": null,
            "FS/Legal.Record Attribution.Employee No": null,
            "FS/Legal.Record Attribution.IDBS PropRef": null,
            "core.contact.Contact Notes.Tel Note": null,
            "core.contact.Contact Notes.Mobile Note": null,
            "core.contact.Contact Notes.Email Note": null,
            "core.contact.Contact Notes.No email?": null,
            "core.contact.More Details.Business Type": null,
            "core.contact.More Details.Business Status": null,
            "api.GDPR Key": null
        }
    },
    "error": null
}</property>
                        <property
                          dataType="System.Boolean"
                          description="Include all upstream parent columns into output except the one you selected to parse. By default only parsed columns from Input document is included in the output. If you wish to include all other upstream columns in the output too then check this option."
                          expressionType="Notify"
                          name="OutputAllUpstreamColumns">true</property>
                        <property
                          dataType="System.Int32"
                          description="Defines how to handle empty input. By default NULL or Empty input is skipped from parsing."
                          expressionType="Notify"
                          name="EmptyInputProcessingMode"
                          typeConverter="ZappySys.Common.Data.EmptyInputProcessingMode">0</property>
                        <property
                          dataType="System.String"
                          description="Defines how to handle empty input. By default NULL or Empty input is skipped from parsing."
                          expressionType="Notify"
                          name="TreatEmptyInputAs">{ }</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum JSON records to fetch. Set this value to 0 for all records"
                          expressionType="Notify"
                          name="MaxRows">0</property>
                        <property
                          dataType="System.String"
                          description="Enter expression here to filter data.(Example:  $.Users[*].UserName ) This will fetch User names from users records"
                          expressionType="Notify"
                          name="Filter"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">$.result.record</property>
                        <property
                          dataType="System.Boolean"
                          description="Use this option to include parent properties (Non array) in the output along with Filtered Rows"
                          expressionType="Notify"
                          name="IncludeParentColumns">false</property>
                        <property
                          dataType="System.Boolean"
                          description="By default child and parent information is not included in the output if children not found for specified expression. For example if you want to extract all orders from all customers nodes then you can type $.Customers[*].Orders[*]. This will fetch all orders from all customers. By default customers records without orders wont be included in the output. If you want to include those customers where orders not found then check this option (Output null information for order attributes). This behavior is similar to LEFT OUTER JOIN in SQL (Left side is parent, right side is child). This option is ***resource intensive*** so only check if you really care about this behavior."
                          expressionType="Notify"
                          name="IncludeParentColumnsWhenChildMissing">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to true if you want to output parent columns which are array. By default any parent column which is an array is not included in output. See also FilterForParentColumnsWithArrayType property if you set this property"
                          expressionType="Notify"
                          name="IncludeParentColumnsWithArrayType">false</property>
                        <property
                          dataType="System.String"
                          description="Filter expression to extract value form parent"
                          expressionType="Notify"
                          name="FilterForParentColumnsWithArrayType"></property>
                        <property
                          dataType="System.String"
                          description="Prefix for parent column name. This option is only valid if you have set IncludeParentColumns=True"
                          expressionType="Notify"
                          name="ParentColumnPrefix">P_</property>
                        <property
                          dataType="System.Boolean"
                          description="Throw error if property name specified in filter expression is missing. By default it will ignore any missing property errors."
                          expressionType="Notify"
                          name="ThrowErrorIfPropertyMissing">false</property>
                        <property
                          dataType="System.Int32"
                          description="This property how many nested levels should be scanned to fetch various properties. 0=Scan all child levels."
                          expressionType="Notify"
                          name="MaxLevelsToScan">0</property>
                        <property
                          dataType="System.String"
                          description="List comma separated property names from JSON document which you want to exclude from output. Specify parent property name to exclude all child nodes."
                          expressionType="Notify"
                          name="ExcludedProperties"></property>
                        <property
                          dataType="System.String"
                          description="Property level separator used in generated property name (separator for outer properties - Above selected filter node). Use this if default separator is producing duplicate property name which is conflicting with existing name."
                          expressionType="Notify"
                          name="LevelSeparator">_</property>
                        <property
                          dataType="System.Boolean"
                          description="Enables deep array flattening for selected filtered hierarchy. When you turn on this property it will flatten each property of each array item and expose as column (e.g. If you have Filter set as $.customers[*] and for each customer you have an array of Addresses then you may see output columns like Addresses.1.City, Addresses.1.State, Addresses.2.City, Addresses.2.State .... Addresses.N.City, Addresses.N.State). You can control how many array items you want to flatten by setting MaxArrayItemsToFlatten property."
                          expressionType="Notify"
                          name="EnableArrayFlattening">false</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum number of array items to flatten. inner array flattening. Adjust this property to control how many columns being generated. This option is ignored if you set EnableArrayFlattening=false"
                          expressionType="Notify"
                          name="MaxArrayItemsToFlatten">10</property>
                        <property
                          dataType="System.String"
                          description="Specifies how custom date formatted strings are parsed when reading JSON."
                          expressionType="Notify"
                          name="DateFormatString"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies how date formatted strings, e.g. Date(1198908717056) and 2012-03-21T05:40Z, are parsed when reading JSON."
                          expressionType="Notify"
                          name="DateParseHandling"
                          typeConverter="ZappySys.Common.DateParseHandling">1</property>
                        <property
                          dataType="System.Boolean"
                          description="Output as raw JSON document rather than parsing individual fields. This option is helpful if you have documents stored in a file and you want to pass them downstream as raw JSON string rather than parsing into columns."
                          expressionType="Notify"
                          name="OutputRawDocument">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Indent JSON output so its easy to read."
                          expressionType="Notify"
                          name="IndentOutput">true</property>
                        <property
                          dataType="System.Boolean"
                          description="When this property is true then Column is converted to Row. Pivoted names will appear under  Pivot_Name column and values will appear under Pivot_Value field."
                          expressionType="Notify"
                          name="EnablePivot">false</property>
                        <property
                          dataType="System.Int32"
                          description="Array Transformation you want to apply. Useful for case when you have 2-Dimensional arrays with rows/columns in separate arrays."
                          expressionType="Notify"
                          name="ArrayTransformationType"
                          typeConverter="ZappySys.Json.ArrayTransformType">0</property>
                        <property
                          dataType="System.String"
                          description="Filter expression to use to extract column names for array transformation."
                          expressionType="Notify"
                          name="ArrayTransColumnNameFilter"></property>
                        <property
                          dataType="System.String"
                          description="Filter expression for row values (Not applicable for simple array transformation)."
                          expressionType="Notify"
                          name="ArrayTransRowValueFilter"></property>
                        <property
                          dataType="System.Boolean"
                          description="When you have 2D array but don't have column list specified in a separate array then use this option (e.g. { arr: [[10,11],[21,22]] } )."
                          expressionType="Notify"
                          name="ArrayTransEnableCustomColumns">false</property>
                        <property
                          dataType="System.String"
                          description="When you have 2D array but don't have column list specified in a separate array then use specify column names here. Use comma separated list (e.g col1,col2,col3 ). Column name Order must match value order."
                          expressionType="Notify"
                          name="ArrayTransCustomColumns"></property>
                        <property
                          dataType="System.Int32"
                          description="Metadata scan mode controls how data type and length is determined. By default few records scanned to determine datatype/length. Changing ScanMode affects length/datatype accuracy."
                          expressionType="Notify"
                          name="MetaDataScanMode"
                          typeConverter="ZappySys.Common.Data.MetaDataScanMode">4</property>
                        <property
                          dataType="System.Int32"
                          description="Length for all string column. This option is only valid for MetaDataScanMode=Custom"
                          expressionType="Notify"
                          name="MetaDataCustomLength">1000</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.JsonParserTransform</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Contact search\record.Inputs[JsonParserTransformInput]"
                          errorRowDisposition="FailComponent"
                          name="JsonParserTransformInput"
                          truncationRowDisposition="FailComponent">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\record.Inputs[JsonParserTransformInput].Columns[ResponseText]"
                              cachedDataType="nText"
                              cachedName="ResponseText"
                              lineageId="Package\Iterate Offices\Sequence Container\Contact search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[ResponseText]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\record.Inputs[JsonParserTransformInput].Columns[StatusCode]"
                              cachedDataType="i4"
                              cachedName="StatusCode"
                              lineageId="Package\Iterate Offices\Sequence Container\Contact search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[StatusCode]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Contact search\record.Outputs[JsonParserTransformOutput].Columns[StatusCode]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\record.Inputs[JsonParserTransformInput].Columns[args.service_object_id]"
                              cachedDataType="i8"
                              cachedName="args.service_object_id"
                              lineageId="Package\Iterate Offices\Sequence Container\Contact search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[args.service_object_id]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Contact search\record.Outputs[JsonParserTransformOutput].Columns[args.service_object_id]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True" />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Contact search\record.Outputs[JsonParserTransformOutput]"
                          errorOrTruncationOperation="Error"
                          errorRowDisposition="FailComponent"
                          name="JsonParserTransformOutput"
                          truncationRowDisposition="FailComponent">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\record.Outputs[JsonParserTransformOutput].Columns[args.service_object_id]"
                              dataType="i8"
                              lineageId="Package\Iterate Offices\Sequence Container\Contact search\record.Outputs[JsonParserTransformOutput].Columns[args.service_object_id]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Contact search\record.Inputs[JsonParserTransformInput].Columns[args.service_object_id]"
                              name="args.service_object_id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\record.Outputs[JsonParserTransformOutput].Columns[StatusCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Contact search\record.Outputs[JsonParserTransformOutput].Columns[StatusCode]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Contact search\record.Inputs[JsonParserTransformInput].Columns[StatusCode]"
                              name="StatusCode" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\record.Outputs[JsonParserTransformOutput].Columns[recorddoc]"
                              dataType="nText"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Contact search\record.Outputs[JsonParserTransformOutput].ExternalColumns[__DOCUMENT__]"
                              lineageId="Package\Iterate Offices\Sequence Container\Contact search\record.Outputs[JsonParserTransformOutput].Columns[recorddoc]"
                              name="recorddoc" />
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\record.Outputs[JsonParserTransformOutput].ExternalColumns[__DOCUMENT__]"
                              dataType="nText"
                              name="__DOCUMENT__" />
                          </externalMetadataColumns>
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Contact search\record.Outputs[JsonParserTransform Error Output]"
                          isErrorOut="true"
                          name="JsonParserTransform Error Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\record.Outputs[JsonParserTransform Error Output].Columns[args.service_object_id]"
                              dataType="i8"
                              lineageId="Package\Iterate Offices\Sequence Container\Contact search\record.Outputs[JsonParserTransform Error Output].Columns[args.service_object_id]"
                              name="args.service_object_id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\record.Outputs[JsonParserTransform Error Output].Columns[StatusCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Contact search\record.Outputs[JsonParserTransform Error Output].Columns[StatusCode]"
                              name="StatusCode" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\record.Outputs[JsonParserTransform Error Output].Columns[recorddoc]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\Contact search\record.Outputs[JsonParserTransform Error Output].Columns[recorddoc]"
                              name="recorddoc" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\record.Outputs[JsonParserTransform Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Contact search\record.Outputs[JsonParserTransform Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\record.Outputs[JsonParserTransform Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Contact search\record.Outputs[JsonParserTransform Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\record.Outputs[JsonParserTransform Error Output].Columns[ErrorColumnName]"
                              codePage="1252"
                              dataType="str"
                              length="128"
                              lineageId="Package\Iterate Offices\Sequence Container\Contact search\record.Outputs[JsonParserTransform Error Output].Columns[ErrorColumnName]"
                              name="ErrorColumnName" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\record.Outputs[JsonParserTransform Error Output].Columns[ErrorMessage]"
                              dataType="wstr"
                              length="1024"
                              lineageId="Package\Iterate Offices\Sequence Container\Contact search\record.Outputs[JsonParserTransform Error Output].Columns[ErrorMessage]"
                              name="ErrorMessage" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\record.Outputs[JsonParserTransform Error Output].Columns[ErrorRawData]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\Contact search\record.Outputs[JsonParserTransform Error Output].Columns[ErrorRawData]"
                              name="ErrorRawData" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Contact search\Search Contacts"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="JSON Source (REST API or File); ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="The JSON source is used to read data from JSON files, RESTful Web Service or direct JSON String."
                      name="Search Contacts"
                      usesDispositions="true"
                      version="33">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for any numeric data types"
                          expressionType="Notify"
                          name="TreatBlankNumberAsNull">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for bool data types"
                          expressionType="Notify"
                          name="TreatBlankBoolAsNull">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for any date/time data types"
                          expressionType="Notify"
                          name="TreatBlankDateAsNull">true</property>
                        <property
                          dataType="System.Int32"
                          description="Defines how to read the JSON file or direct string"
                          expressionType="Notify"
                          name="AccessMode"
                          typeConverter="ZappySys.Common.Ssis.FileValueAccessMode">3</property>
                        <property
                          dataType="System.String"
                          description="Defines how to read the JSON file or direct string"
                          expressionType="Notify"
                          name="DirectValue"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.String"
                          description="Variable name which holds JSON string"
                          expressionType="Notify"
                          name="ValueVariable"
                          typeConverter="ZappySys.PowerPack.Converters.VariableEditor,ZappySys.PowerPack130.UI,Version=1.0.0.0,Culture=neutral,PublicKeyToken=1903265a93eae502"></property>
                        <property
                          dataType="System.String"
                          description="Variable name which holds data file path or url"
                          expressionType="Notify"
                          name="PathVariable"
                          typeConverter="ZappySys.PowerPack.Converters.VariableEditor,ZappySys.PowerPack130.UI,Version=1.0.0.0,Culture=neutral,PublicKeyToken=1903265a93eae502">User::RexAPIWebURL</property>
                        <property
                          dataType="System.String"
                          description="JSON file file path (e.g. c:\data\myfile.json) or pattern to process multiple files (e.g. c:\data\*.json)"
                          expressionType="Notify"
                          name="DirectPath"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">https://api.uk.rexsoftware.com/rex.php</property>
                        <property
                          dataType="System.Boolean"
                          description="Include files from sub folders too."
                          expressionType="Notify"
                          name="Recursive">false</property>
                        <property
                          dataType="System.String"
                          description="Set this if you want to set custom Http headers. You may use variable anywhere in the header value using syntax {{User::YourVarName}}. Syntax of Header key value pair is : &amp;lt;request&amp;gt;&amp;lt;header&amp;gt;&amp;lt;name&amp;gt;x-myheader-1&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;AAA&amp;lt;/value&amp;gt;&amp;lt;/header&amp;gt; &amp;lt;header&amp;gt;&amp;lt;name&amp;gt;x-myheader-2&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;BBB&amp;lt;/value&amp;gt;&amp;lt;/header&amp;gt;&amp;lt;/request&amp;gt;"
                          expressionType="Notify"
                          name="HttpHeaders">&lt;request&gt;&lt;header&gt;&lt;name&gt;Accept&lt;/name&gt;&lt;value&gt;*/*&lt;/value&gt;&lt;/header&gt;&lt;header&gt;&lt;name&gt;Cache-Control&lt;/name&gt;&lt;value&gt;no-cache&lt;/value&gt;&lt;/header&gt;&lt;header&gt;&lt;name&gt;X-App-Identifier&lt;/name&gt;&lt;value&gt;client:spicerhaart:{{System::PackageName}}:{{System::TaskName}}&lt;/value&gt;&lt;/header&gt;&lt;/request&gt;</property>
                        <property
                          dataType="System.String"
                          description="User defined data you wish to send along with your HTTP Request (e.g. Upload file data, Form POST data). Usually you have to set content-type of your data but if you select RequestMethod=POST then system will automatically set content-type=application/x-www-form-urlencoded."
                          expressionType="Notify"
                          name="HttpRequestData">{
"method":"Contacts::search",
"args":{
	"criteria": 
	[
		
	],
	"result_format":"etags",
	"limit":50000,
	"offset": &lt;%page%&gt;
	 },
"strip_response_prefixes": true,
"token": "{{User::RexToken}}"
}</property>
                        <property
                          dataType="System.String"
                          description="Http Web Request Method (e.g. POST, GET, PUT, LIST, DELETE...). Refer your API documentation if you are not sure which method you have to use."
                          expressionType="Notify"
                          name="HttpRequestMethod">POST</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies content type for data you wish to POST. If you select Default option then system default content type will be used (i.e. application/x-www-form-urlencoded). If you specify Content-Type header along with this option then header value takes precedence."
                          expressionType="Notify"
                          name="HttpRequestContentType"
                          typeConverter="ZappySys.Common.Web.HttpRequestContentType">2</property>
                        <property
                          dataType="System.Int32"
                          description="Data format coming from HTTP Response. This is useful for example when you have OData service and you want to automatically consume all pages of data using odata.netUrl. Setting JsonFormat=Odata will automatically do it for you. This setting is only applicable if JSON is coming from HTTP WebRequest."
                          expressionType="Notify"
                          name="JsonFormat"
                          typeConverter="ZappySys.Json.JsonFormat">1</property>
                        <property
                          dataType="System.Boolean"
                          description="Enable custom proxy settings (If this is not set then system default proxy will be used. To disable proxy totally uncheck this option and check DoNotUseDefaultProxy option if available)"
                          expressionType="Notify"
                          name="UseProxy">false</property>
                        <property
                          dataType="System.String"
                          description="Web URL of Proxy server (including port  if necessary). [e.g. http://myproxyserver:8080/]"
                          expressionType="Notify"
                          name="ProxyUrl"></property>
                        <property
                          dataType="System.Boolean"
                          description="Enable passing userid and password to proxy server"
                          expressionType="Notify"
                          name="UseProxyCreds">false</property>
                        <property
                          dataType="System.String"
                          description="Proxy username"
                          expressionType="Notify"
                          name="ProxyUserName"></property>
                        <property
                          dataType="System.String"
                          description="Proxy password"
                          expressionType="Notify"
                          name="ProxyPassword"></property>
                        <property
                          dataType="System.String"
                          description="If Service response support pagination using some sort of next url attribute then specify which attribute name in JSON Response string which holds next url. If no attribute found or its null then component will stop fetching next resultset. Example: $.pagingInfo.nextUrl"
                          expressionType="Notify"
                          name="NextUrlAttribute"></property>
                        <property
                          dataType="System.String"
                          description="If Service response support pagination using some sort of prev/next url attribute then specify which previous link attribute name from JSON Response string which holds previous url."
                          expressionType="Notify"
                          name="PrevUrlAttribute"></property>
                        <property
                          dataType="System.String"
                          description="Specifies value for NextUrlAttribute or StopIndicatorAttribute which indicates last page to stop pagination. If you have specified StopIndicatorAttribute then you can use Regular expression rather than static value to indicate last page. To use regular expression value of this property must start with regex= prefix. Example : regex=FALSE|N  (assuming you set StopIndicatorAttribute to something like $.hasMore)"
                          expressionType="Notify"
                          name="NextUrlStopIndicator"></property>
                        <property
                          dataType="System.String"
                          description="Attribute name or expression for attribute which can be used as stop indicator (e.g. hasmore --or-- $.pagination.hasmore). If this value is blank then NextUrlAttribute is used"
                          expressionType="Notify"
                          name="StopIndicatorAttribute"></property>
                        <property
                          dataType="System.String"
                          description="If you want to include certain text (or parameters) at the end of Next url then specify this attribute (e.g. &amp;format=json). Another common usecase of this property is to supply pagination token to next Page URL. You can also use &lt;%nextlink%&gt; or  &lt;%nextlink_encoded%&gt; placeholder (e.g. &amp;cursor=&lt;%nextlink_encoded%&gt; )"
                          expressionType="Notify"
                          name="NextUrlSuffix"></property>
                        <property
                          dataType="System.Int32"
                          description="This property indicates total number of milliseconds you want to wait before sending next request. This option allows you to adjust how many API calls can be made within certain timeframe. If your API Service has no limit then set this option to zero"
                          expressionType="Notify"
                          name="NextUrlWait">0</property>
                        <property
                          dataType="System.Boolean"
                          description="If this option is true then component will continue without exception on 404 error (Url not found). This allows you to consume data gracefully."
                          expressionType="Notify"
                          name="ContinueOnUrlNotFoundError">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Continue when any type of exception occurs during http request"
                          expressionType="Notify"
                          name="ContineOnAnyError">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Continue on error when specified substring found in response"
                          expressionType="Notify"
                          name="ContineOnErrorForMessage">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Continue on error when specified status code returned from web server"
                          expressionType="Notify"
                          name="ContineOnErrorForStatusCode">false</property>
                        <property
                          dataType="System.Boolean"
                          description="When error occurs no data is returned. Use this option to get content eventhough error occurs. When this option is checked you can't use [continue on error when specific string found in response] option"
                          expressionType="Notify"
                          name="ConsumeResponseOnError">false</property>
                        <property
                          dataType="System.Int32"
                          description="Status code to match when error occurs and ContineOnErrorForStatusCode option is true. If Response status code matches to this code then task continues to run"
                          expressionType="Notify"
                          name="ErrorStatusCodeToMatch">404</property>
                        <property
                          dataType="System.String"
                          description="Error substring to match when error occurs and ContineOnErrorForMessage option is true. If Response status code matches to this code then task continues to run"
                          expressionType="Notify"
                          name="ErrorSubstringToMatch"></property>
                        <property
                          dataType="System.String"
                          description="Cookie Container can be used to maintain state between multiple web requests. Example: You can login to site like wordpress and then extract any private page content by simply passing authentication cookies using this variable."
                          expressionType="Notify"
                          name="CookieContainerVariable"></property>
                        <property
                          dataType="System.Int32"
                          description="Http request Timeout in seconds. Set this to 0 if you want to use system default value (i.e. 100 seconds)"
                          expressionType="Notify"
                          name="RequestTimeout">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies which security protocol is supported for HTTPS communication. Using this option you can enable legacy protocol or enforce to use latest version of security protocol (Note: TLS 1.2 is only supported in SSIS 2014 or Higher)."
                          expressionType="Notify"
                          name="SecurityProtocol"
                          typeConverter="ZappySys.PowerPack.Common.HttpsSecurityProtocolType">0</property>
                        <property
                          dataType="System.Boolean"
                          description="Enable support for gzip or deflate compression. When you check this option compressed response automatically de-compressed saving bandwidth. This option is only valid if web server supports compressed response stream. Check your API documentation for more information."
                          expressionType="Notify"
                          name="EnableCompressionSupport">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Ignore SSL certificate related errors. Example: if you getting SSL/TLS errors because of certificate expired or certificate is not from trusted authority or certificate is self-signed. By checking this option you will not get SSL/TLS error."
                          expressionType="Notify"
                          name="IgnoreCertificateErrors">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Allow unsecure ciphers/suites and curves for SSLS/TLS communication. Use this option to communicate with web servers which needs legacy / unsecured ciphers support. This option is only trigged when you change default SSL/TLS Version on advanced settings tab."
                          expressionType="Notify"
                          name="AllowUnsecureSuite">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Use connection to pass credentials for authentication (e.g. Use UserID/Password or Use OAuth Protocol for token based approach)"
                          expressionType="Notify"
                          name="UseConnection">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specified how you want to loop through multiple pages returned by REST API."
                          expressionType="Notify"
                          name="PagingMode"
                          typeConverter="ZappySys.Common.RestApiPagingMode">3</property>
                        <property
                          dataType="System.Boolean"
                          description="If you wish to pass extracted pagination token or current page number in the body of next request then set this option to true. You can use [$pagetoken$] and [$pagetoken$] placeholders anywhere in the Body where you wish to insert extracted Page token. You must set encoded token you can use &lt;%nextlink_encoded%&gt; inside SuffixForNextUrl Property. If you dont use SuffixForNextUrl then raw nextLink or Token will be inserted inside the body. If you dont specify [$pagetoken$] placeholder in the body then NextPage Token will be appended at the end. NextPage Token is extracted by filter expression specified using property NextUrlSuffix"
                          expressionType="Notify"
                          name="EnablePageTokenForBody">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this to true if you wish to specify different URL, Header, Body or Filter for first page and next page (i.e. Paginated response). Some APIs like Amazon MWS, NetSuite, Zuora) you may need to set this to true."
                          expressionType="Notify"
                          name="HasDifferentNextPageInfo">false</property>
                        <property
                          dataType="System.String"
                          description="When HasDifferentNextPageInfo=true you can set this property to indicate first page and next page. You can specify different URL, Header, Body or Filter for first page and next page (i.e. Paginated response). Use [$tag$] as placeholder anywhere in the URL, Header, Body or Filter and at runtime system will replace it with correct value (first page or next page value). Syntax to specify placeholder for first page vs next page is like a connectionstring url=FirstPageValue|NextPageValue;header=FirstPageValue|NextPageValue;body=FirstPageValue|NextPageValue;filter=FirstPageValue|NextPageValue; You can use one or more key/value pairs to make things dynamic (e.g. url, header, body or filter)  .For example if you have pagination in your API and First URL is http://abc.com/api/items/get and to get more records you have to call http://abc.com/api/items/getNext then you can use [$tag$] as placeholder in the URL http://abc.com/api/items/[$tag$] and specify this property with first page tag and next page tag as url=get|getNext  (Tags are separated using vertical bar). "
                          expressionType="Notify"
                          name="PagePlaceholders"></property>
                        <property
                          dataType="System.String"
                          description="Use this property to set request body fragment for first page. HasDifferentNextPageInfo must be set to true to use this property."
                          expressionType="Notify"
                          name="FirstPageBodyPart"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.String"
                          description="Use this property to set request body fragment for any request after first request. HasDifferentNextPageInfo must be set to true to use this property."
                          expressionType="Notify"
                          name="NextPageBodyPart"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.String"
                          description="Expression to extract Maximum pages to loop through. Some APIs don't stop pagination and keep returning last page data when you try to read data after last page. Specify expression (e.g. $.page_count ) to read total pages to loop through using this property."
                          expressionType="Notify"
                          name="PagingMaxPagesExpr">$.result.total/50000</property>
                        <property
                          dataType="System.String"
                          description="e.g. Type page_num if URL looks like this =&gt; http://abc.com/?page_num=1&amp;sort=true  (page number via query string)&#xA;--or-- Type &lt;%page%&gt; if page number is inside URL path like this =&gt; http://abc.com/1/?sort=true  (e.g. replace page number in url with placeholder http://abc.com/&lt;%page%&gt;/?sort=true)&#xA;Page number will be incremented by one for next URL until last page is reached or [Max Page Number] is reached"
                          expressionType="Notify"
                          name="PageNumberAttributeNameInUrl">&lt;%page%&gt;</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum page number until which auto increment is allowed. Type zero for no limit. Next URL contains next page number (increment by one) until last page is detected or [Max Page Number] limit is reached."
                          expressionType="Notify"
                          name="MaxPageNumber">0</property>
                        <property
                          dataType="System.String"
                          description="Variable name which will hold starting page number. This is ignored if you useing parameter name from query string to indicate page number."
                          expressionType="Notify"
                          name="StartPageNumberVariable">User::UpsertedCount</property>
                        <property
                          dataType="System.Int32"
                          description="Page counter increment. By default next page is incremented by one if this value is zero. You can also enter negative number if you want to decrease page counter."
                          expressionType="Notify"
                          name="PageNumberIncrement">50000</property>
                        <property
                          dataType="System.Int32"
                          description="Specified how you want detect last page."
                          expressionType="Notify"
                          name="PagingEndStrategy"
                          typeConverter="ZappySys.Common.UrlPagingEndDetectionStrategy">3</property>
                        <property
                          dataType="System.Boolean"
                          description="Condition result to compare to detect last page. Set this property to True if you want detect last page if condition is true else set this to False."
                          expressionType="Notify"
                          name="LastPageWhenConditionEqualsTo">true</property>
                        <property
                          dataType="System.Int32"
                          description="Minimum bytes expected from response."
                          expressionType="Notify"
                          name="ResponseMinBytes">0</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum bytes from response."
                          expressionType="Notify"
                          name="ResponseMaxBytes">3</property>
                        <property
                          dataType="System.String"
                          description="Expected error message sub string from response."
                          expressionType="Notify"
                          name="ResponseErrorString">not found</property>
                        <property
                          dataType="System.Int32"
                          description="Expected status code from response when page number you trying to access not found."
                          expressionType="Notify"
                          name="ResponseStatusCode">404</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum JSON records to fetch. Set this value to 0 for all records"
                          expressionType="Notify"
                          name="MaxRows">0</property>
                        <property
                          dataType="System.String"
                          description="Enter expression here to filter data.(Example:  $.Users[*].UserName ) This will fetch User names from users records"
                          expressionType="Notify"
                          name="Filter"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">$.result.rows[*]</property>
                        <property
                          dataType="System.Boolean"
                          description="Use this option to include parent properties (Non array) in the output along with Filtered Rows"
                          expressionType="Notify"
                          name="IncludeParentColumns">false</property>
                        <property
                          dataType="System.Boolean"
                          description="By default child and parent information is not included in the output if children not found for specified expression. For example if you want to extract all orders from all customers nodes then you can type $.Customers[*].Orders[*]. This will fetch all orders from all customers. By default customers records without orders wont be included in the output. If you want to include those customers where orders not found then check this option (Output null information for order attributes). This behavior is similar to LEFT OUTER JOIN in SQL (Left side is parent, right side is child). This option is ***resource intensive*** so only check if you really care about this behavior."
                          expressionType="Notify"
                          name="IncludeParentColumnsWhenChildMissing">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to true if you want to output parent columns which are array. By default any parent column which is an array is not included in output. See also FilterForParentColumnsWithArrayType property if you set this property"
                          expressionType="Notify"
                          name="IncludeParentColumnsWithArrayType">false</property>
                        <property
                          dataType="System.String"
                          description="Filter expression to extract value form parent"
                          expressionType="Notify"
                          name="FilterForParentColumnsWithArrayType"></property>
                        <property
                          dataType="System.String"
                          description="Prefix for parent column name. This option is only valid if you have set IncludeParentColumns=True"
                          expressionType="Notify"
                          name="ParentColumnPrefix">P_</property>
                        <property
                          dataType="System.Boolean"
                          description="Throw error if property name specified in filter expression is missing. By default it will ignore any missing property errors."
                          expressionType="Notify"
                          name="ThrowErrorIfPropertyMissing">false</property>
                        <property
                          dataType="System.Int32"
                          description="This property how many nested levels should be scanned to fetch various properties. 0=Scan all child levels."
                          expressionType="Notify"
                          name="MaxLevelsToScan">0</property>
                        <property
                          dataType="System.String"
                          description="List comma separated property names from JSON document which you want to exclude from output. Specify parent property name to exclude all child nodes."
                          expressionType="Notify"
                          name="ExcludedProperties"></property>
                        <property
                          dataType="System.String"
                          description="Property level separator used in generated property name (separator for outer properties - Above selected filter node). Use this if default separator is producing duplicate property name which is conflicting with existing name."
                          expressionType="Notify"
                          name="LevelSeparator">_</property>
                        <property
                          dataType="System.Boolean"
                          description="Enables deep array flattening for selected filtered hierarchy. When you turn on this property it will flatten each property of each array item and expose as column (e.g. If you have Filter set as $.customers[*] and for each customer you have an array of Addresses then you may see output columns like Addresses.1.City, Addresses.1.State, Addresses.2.City, Addresses.2.State .... Addresses.N.City, Addresses.N.State). You can control how many array items you want to flatten by setting MaxArrayItemsToFlatten property."
                          expressionType="Notify"
                          name="EnableArrayFlattening">false</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum number of array items to flatten. inner array flattening. Adjust this property to control how many columns being generated. This option is ignored if you set EnableArrayFlattening=false"
                          expressionType="Notify"
                          name="MaxArrayItemsToFlatten">10</property>
                        <property
                          dataType="System.Int32"
                          description="Compression format for source file (e.g. gzip, zip)"
                          expressionType="Notify"
                          name="FileCompressionType"
                          typeConverter="ZappySys.Common.FileCompressionType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Array Transformation you want to apply. Useful for case when you have 2-Dimensional arrays with rows/columns in separate arrays."
                          expressionType="Notify"
                          name="ArrayTransformationType"
                          typeConverter="ZappySys.Json.ArrayTransformType">0</property>
                        <property
                          dataType="System.String"
                          description="Filter expression to use to extract column names for array transformation."
                          expressionType="Notify"
                          name="ArrayTransColumnNameFilter">$.result.rows[*]</property>
                        <property
                          dataType="System.String"
                          description="Filter expression for row values (Not applicable for simple array transformation)."
                          expressionType="Notify"
                          name="ArrayTransRowValueFilter">$.result.rows[*]</property>
                        <property
                          dataType="System.Boolean"
                          description="When you have 2D array but don't have column list specified in a separate array then use this option (e.g. { arr: [[10,11],[21,22]] } )."
                          expressionType="Notify"
                          name="ArrayTransEnableCustomColumns">true</property>
                        <property
                          dataType="System.String"
                          description="When you have 2D array but don't have column list specified in a separate array then use specify column names here. Use comma separated list (e.g col1,col2,col3 ). Column name Order must match value order."
                          expressionType="Notify"
                          name="ArrayTransCustomColumns">MetricID</property>
                        <property
                          dataType="System.String"
                          description="Specifies how custom date formatted strings are parsed when reading JSON."
                          expressionType="Notify"
                          name="DateFormatString"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies how date formatted strings, e.g. Date(1198908717056) and 2012-03-21T05:40Z, are parsed when reading JSON."
                          expressionType="Notify"
                          name="DateParseHandling"
                          typeConverter="ZappySys.Common.DateParseHandling">1</property>
                        <property
                          dataType="System.Boolean"
                          description="Output as raw JSON document rather than parsing individual fields. This option is helpful if you have documents stored in a file and you want to pass them downstream as raw JSON string rather than parsing into columns."
                          expressionType="Notify"
                          name="OutputRawDocument">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indent JSON output so its easy to read."
                          expressionType="Notify"
                          name="IndentOutput">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to true if you want to output FilePath. This option is ignored when you consume DirectValue or data from Url rather than local files. Output column name will be __FilePath"
                          expressionType="Notify"
                          name="OutputFilePath">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to true if you want to output FileName. This option is ignored when you consume DirectValue or data from Url rather than local files. Output column name will be __FileName"
                          expressionType="Notify"
                          name="OutputFileName">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to true if you want to move processed file to archive folder."
                          expressionType="Notify"
                          name="EnableArchiveFile">false</property>
                        <property
                          dataType="System.String"
                          description="Folder path where you want to move processed file."
                          expressionType="Notify"
                          name="ArchiveFolderPath"></property>
                        <property
                          dataType="System.Boolean"
                          description="Folder path where you want to move processed file."
                          expressionType="Notify"
                          name="OverwriteFileInArchiveFolder">false</property>
                        <property
                          dataType="System.String"
                          description="File naming convention for archived file. By default it will same name as original source file processed. But you can control naming format using {%name%} and {%ext%} placeholders. e.g. {%name%}_processed{%ext%} or {%name%}{%ext%}.{{System::ContainerStartTime,yyyyMMdd_HHmmss_fff}}"
                          expressionType="Notify"
                          name="ArchiveFileNamingConvention"></property>
                        <property
                          dataType="System.Boolean"
                          description="When this property is true then Column is converted to Row. Pivoted names will appear under  Pivot_Name column and values will appear under Pivot_Value field."
                          expressionType="Notify"
                          name="EnablePivot">false</property>
                        <property
                          dataType="System.Int32"
                          description="Metadata scan mode controls how data type and length is determined. By default few records scanned to determine datatype/length. Changing ScanMode affects length/datatype accuracy."
                          expressionType="Notify"
                          name="MetaDataScanMode"
                          typeConverter="ZappySys.Common.Data.MetaDataScanMode">4</property>
                        <property
                          dataType="System.Int32"
                          description="Length for all string column. This option is only valid for MetaDataScanMode=Custom"
                          expressionType="Notify"
                          name="MetaDataCustomLength">1000</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.JsonSource</property>
                        <property
                          dataType="System.Int32"
                          description="Encoding of source file"
                          expressionType="Notify"
                          name="Encoding"
                          typeConverter="ZappySys.Common.EncodingType">0</property>
                        <property
                          dataType="System.String"
                          description="Character set for text (e.g. utf-8 )"
                          expressionType="Notify"
                          name="CharacterSet"></property>
                        <property
                          dataType="System.Boolean"
                          description="By default process stops with error if specified local file is not found. Set this property to true if you wish to continue rather than throwing file not found error."
                          expressionType="Notify"
                          name="ContinueOnFileNotFoundError">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Check this option if you want to upload file(s) (i.e. POST RAW file data) or send data using Multi-Part encoding method (i.e. Content-Type: multipart/form-data). Multi-Part request allows you to mix key/value and upload files in same request. On the other hand raw upload allows only single file upload (without any key/value) &#xA;&#xA;==== Raw Upload (Content-Type: application/octet-stream) =====   &#xA;To upload single file in raw mode check this option and specify full file path starting with @ sign in the Body (e.g.  @c:\data\myfile.zip ) &#xA;&#xA;==== Form-Data / Multipart Upload (Content-Type: multipart/form-data) =====   &#xA;To treat your Request data as multi part fields you must specify key/value pairs separated by new lines into RequestData field (i.e. Body). Each key value pair is entered on new-line and key/value are separated using equal sign (=). Preceding and trailing spaces are ignored also blank lines are ignored. &#xA;If field value has some any special character(s) then use escape sequence (e.g. For NewLine: \r\n, For Tab: \t, For at (@): \@). When value of any field starts with at sign (@) its automatically treated as File you want to upload. By default file content type is determined based on extension however you can supply content type manually for any field using this way [ fieldname.Content-Type=some content type ]. In below example we have supplied Content-Type for file2 and SomeField1, all other fields are using default content-type.&#xA;See below Example of uploading multiple files along with additional fields.&#xA;&#xA;file1=@c:\data\Myfile1.txt&#xA;file2=@c:\data\Myfile2.json&#xA;file2.Content-Type=application/json&#xA;SomeField1=aaaaaaa&#xA;SomeField1.Content-Type=text/plain&#xA;SomeField2=12345&#xA;SomeFieldWithNewLineAndTab=This is line1\r\nThis is line2\r\nThis is \ttab \ttab \ttab&#xA;SomeFieldStartingWithAtSign=\@MyTwitterHandle&#xA;"
                          expressionType="Notify"
                          name="IsMultiPartUpload">false</property>
                        <property
                          dataType="System.String"
                          description="Expression to extract Maximum records to loop through. Some APIs don't stop pagination and keep returning last page data when you try to read data after last page. Specify expression (e.g. $.total_rows ) to read total pages to loop through using this property. This setting is ignored if you set PagingMaxPagesExpr."
                          expressionType="Notify"
                          name="PagingMaxRowsExpr"></property>
                        <property
                          dataType="System.String"
                          description="When you enable PagingMaxRowsExpr (end pagination based on MaxRowCount) then you need to count records coming in each response. This expression extract all rows found under specified expression (e.g. $.orders[*] if all records found under orders node)."
                          expressionType="Notify"
                          name="PagingMaxRowsDataPathExpr"></property>
                        <property
                          dataType="System.Boolean"
                          description="When this option is checked, system allows to parse large number (Higher than Int64) in JSON document (i.e. { id: 76000009353950433247780 } ). If you do not turn on this option then it may throw error if large number is encountered. This option is SLOW because it has to perform additional checks in order to avoid Large number overflow error so do not turn on unless you getting Large number error."
                          expressionType="Notify"
                          name="EnableBigNumberHandling">false</property>
                      </properties>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Contact search\Search Contacts.Outputs[JsonSourceOutput]"
                          errorOrTruncationOperation="Error"
                          errorRowDisposition="FailComponent"
                          name="JsonSourceOutput"
                          truncationRowDisposition="FailComponent">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\Search Contacts.Outputs[JsonSourceOutput].Columns[etag]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Contact search\Search Contacts.Outputs[JsonSourceOutput].ExternalColumns[etag]"
                              length="68"
                              lineageId="Package\Iterate Offices\Sequence Container\Contact search\Search Contacts.Outputs[JsonSourceOutput].Columns[etag]"
                              name="etag" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\Search Contacts.Outputs[JsonSourceOutput].Columns[id]"
                              dataType="i4"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Contact search\Search Contacts.Outputs[JsonSourceOutput].ExternalColumns[id]"
                              lineageId="Package\Iterate Offices\Sequence Container\Contact search\Search Contacts.Outputs[JsonSourceOutput].Columns[id]"
                              name="id" />
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\Search Contacts.Outputs[JsonSourceOutput].ExternalColumns[system_record_state]"
                              dataType="wstr"
                              length="24"
                              name="system_record_state" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\Search Contacts.Outputs[JsonSourceOutput].ExternalColumns[system_ctime]"
                              dataType="wstr"
                              length="40"
                              name="system_ctime" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\Search Contacts.Outputs[JsonSourceOutput].ExternalColumns[system_modtime]"
                              dataType="wstr"
                              length="40"
                              name="system_modtime" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\Search Contacts.Outputs[JsonSourceOutput].ExternalColumns[name]"
                              dataType="wstr"
                              length="144"
                              name="name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\Search Contacts.Outputs[JsonSourceOutput].ExternalColumns[email_address]"
                              dataType="wstr"
                              length="180"
                              name="email_address" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\Search Contacts.Outputs[JsonSourceOutput].ExternalColumns[phone_number]"
                              dataType="wstr"
                              length="80"
                              name="phone_number" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\Search Contacts.Outputs[JsonSourceOutput].ExternalColumns[fax_number]"
                              dataType="wstr"
                              length="1020"
                              name="fax_number" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\Search Contacts.Outputs[JsonSourceOutput].ExternalColumns[is_dnd]"
                              dataType="wstr"
                              length="80"
                              name="is_dnd" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\Search Contacts.Outputs[JsonSourceOutput].ExternalColumns[type]"
                              dataType="wstr"
                              length="28"
                              name="type" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\Search Contacts.Outputs[JsonSourceOutput].ExternalColumns[last_contacted_date]"
                              dataType="wstr"
                              length="80"
                              name="last_contacted_date" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\Search Contacts.Outputs[JsonSourceOutput].ExternalColumns[name_last]"
                              dataType="wstr"
                              length="1020"
                              name="name_last" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\Search Contacts.Outputs[JsonSourceOutput].ExternalColumns[address_postal]"
                              dataType="wstr"
                              length="220"
                              name="address_postal" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\Search Contacts.Outputs[JsonSourceOutput].ExternalColumns[address]"
                              dataType="wstr"
                              length="384"
                              name="address" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\Search Contacts.Outputs[JsonSourceOutput].ExternalColumns[interest_level]"
                              dataType="wstr"
                              length="1020"
                              name="interest_level" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\Search Contacts.Outputs[JsonSourceOutput].ExternalColumns[marketing_birthday]"
                              dataType="wstr"
                              length="1020"
                              name="marketing_birthday" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\Search Contacts.Outputs[JsonSourceOutput].ExternalColumns[marketing_enquiry_source]"
                              dataType="wstr"
                              length="1020"
                              name="marketing_enquiry_source" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\Search Contacts.Outputs[JsonSourceOutput].ExternalColumns[marketing_gender]"
                              dataType="wstr"
                              length="1020"
                              name="marketing_gender" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\Search Contacts.Outputs[JsonSourceOutput].ExternalColumns[marketing_postcode]"
                              dataType="wstr"
                              length="80"
                              name="marketing_postcode" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\Search Contacts.Outputs[JsonSourceOutput].ExternalColumns[name_legal]"
                              dataType="wstr"
                              length="1020"
                              name="name_legal" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\Search Contacts.Outputs[JsonSourceOutput].ExternalColumns[name_salutation]"
                              dataType="wstr"
                              length="1020"
                              name="name_salutation" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\Search Contacts.Outputs[JsonSourceOutput].ExternalColumns[name_addressee]"
                              dataType="wstr"
                              length="1020"
                              name="name_addressee" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\Search Contacts.Outputs[JsonSourceOutput].ExternalColumns[system_owner_user.id]"
                              dataType="wstr"
                              length="20"
                              name="system_owner_user.id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\Search Contacts.Outputs[JsonSourceOutput].ExternalColumns[system_owner_user._name]"
                              dataType="wstr"
                              length="36"
                              name="system_owner_user._name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\Search Contacts.Outputs[JsonSourceOutput].ExternalColumns[system_owner_user._first_name]"
                              dataType="wstr"
                              length="20"
                              name="system_owner_user._first_name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\Search Contacts.Outputs[JsonSourceOutput].ExternalColumns[system_owner_user._last_name]"
                              dataType="wstr"
                              length="12"
                              name="system_owner_user._last_name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\Search Contacts.Outputs[JsonSourceOutput].ExternalColumns[system_owner_user._email_address]"
                              dataType="wstr"
                              length="92"
                              name="system_owner_user._email_address" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\Search Contacts.Outputs[JsonSourceOutput].ExternalColumns[system_modified_user.id]"
                              dataType="wstr"
                              length="20"
                              name="system_modified_user.id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\Search Contacts.Outputs[JsonSourceOutput].ExternalColumns[system_modified_user._name]"
                              dataType="wstr"
                              length="48"
                              name="system_modified_user._name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\Search Contacts.Outputs[JsonSourceOutput].ExternalColumns[system_modified_user._first_name]"
                              dataType="wstr"
                              length="24"
                              name="system_modified_user._first_name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\Search Contacts.Outputs[JsonSourceOutput].ExternalColumns[system_modified_user._last_name]"
                              dataType="wstr"
                              length="24"
                              name="system_modified_user._last_name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\Search Contacts.Outputs[JsonSourceOutput].ExternalColumns[system_modified_user._email_address]"
                              dataType="wstr"
                              length="128"
                              name="system_modified_user._email_address" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\Search Contacts.Outputs[JsonSourceOutput].ExternalColumns[system_created_user.id]"
                              dataType="wstr"
                              length="20"
                              name="system_created_user.id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\Search Contacts.Outputs[JsonSourceOutput].ExternalColumns[system_created_user._name]"
                              dataType="wstr"
                              length="36"
                              name="system_created_user._name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\Search Contacts.Outputs[JsonSourceOutput].ExternalColumns[system_created_user._first_name]"
                              dataType="wstr"
                              length="20"
                              name="system_created_user._first_name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\Search Contacts.Outputs[JsonSourceOutput].ExternalColumns[system_created_user._last_name]"
                              dataType="wstr"
                              length="12"
                              name="system_created_user._last_name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\Search Contacts.Outputs[JsonSourceOutput].ExternalColumns[system_created_user._email_address]"
                              dataType="wstr"
                              length="92"
                              name="system_created_user._email_address" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\Search Contacts.Outputs[JsonSourceOutput].ExternalColumns[contact_image]"
                              dataType="wstr"
                              length="1020"
                              name="contact_image" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\Search Contacts.Outputs[JsonSourceOutput].ExternalColumns[marketing_enquiry_method]"
                              dataType="wstr"
                              length="1020"
                              name="marketing_enquiry_method" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\Search Contacts.Outputs[JsonSourceOutput].ExternalColumns[_security_user_rights]"
                              dataType="wstr"
                              length="260"
                              name="_security_user_rights" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\Search Contacts.Outputs[JsonSourceOutput].ExternalColumns[etag]"
                              dataType="wstr"
                              length="68"
                              name="etag" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\Search Contacts.Outputs[JsonSourceOutput].ExternalColumns[id]"
                              dataType="wstr"
                              length="24"
                              name="id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\Search Contacts.Outputs[JsonSourceOutput].ExternalColumns[__FileName]"
                              dataType="wstr"
                              length="600"
                              name="__FileName" />
                          </externalMetadataColumns>
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Contact search\Search Contacts.Outputs[JsonSource Error Output]"
                          isErrorOut="true"
                          name="JsonSource Error Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\Search Contacts.Outputs[JsonSource Error Output].Columns[etag]"
                              dataType="wstr"
                              length="68"
                              lineageId="Package\Iterate Offices\Sequence Container\Contact search\Search Contacts.Outputs[JsonSource Error Output].Columns[etag]"
                              name="etag" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\Search Contacts.Outputs[JsonSource Error Output].Columns[id]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Contact search\Search Contacts.Outputs[JsonSource Error Output].Columns[id]"
                              name="id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\Search Contacts.Outputs[JsonSource Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Contact search\Search Contacts.Outputs[JsonSource Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\Search Contacts.Outputs[JsonSource Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Contact search\Search Contacts.Outputs[JsonSource Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\Search Contacts.Outputs[JsonSource Error Output].Columns[ErrorColumnName]"
                              codePage="1252"
                              dataType="str"
                              length="128"
                              lineageId="Package\Iterate Offices\Sequence Container\Contact search\Search Contacts.Outputs[JsonSource Error Output].Columns[ErrorColumnName]"
                              name="ErrorColumnName" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\Search Contacts.Outputs[JsonSource Error Output].Columns[ErrorMessage]"
                              dataType="wstr"
                              length="1024"
                              lineageId="Package\Iterate Offices\Sequence Container\Contact search\Search Contacts.Outputs[JsonSource Error Output].Columns[ErrorMessage]"
                              name="ErrorMessage" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Contact search\Sort"
                      componentClassID="Microsoft.Sort"
                      contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
                      name="Sort"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                          name="EliminateDuplicates">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the maximum number of threads to use for sorting."
                          expressionType="Notify"
                          name="MaximumThreads">-1</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Contact search\Sort.Inputs[Sort Input]"
                          name="Sort Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\Sort.Inputs[Sort Input].Columns[args.service_object_id]"
                              cachedDataType="i8"
                              cachedName="args.service_object_id"
                              lineageId="Package\Iterate Offices\Sequence Container\Contact search\custom.Outputs[JsonParserTransformOutput].Columns[args.service_object_id]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">1</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\Sort.Inputs[Sort Input].Columns[StatusCode]"
                              cachedDataType="i4"
                              cachedName="StatusCode"
                              lineageId="Package\Iterate Offices\Sequence Container\Contact search\custom.Outputs[JsonParserTransformOutput].Columns[StatusCode]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\Sort.Inputs[Sort Input].Columns[custdoc]"
                              cachedDataType="nText"
                              cachedName="custdoc"
                              lineageId="Package\Iterate Offices\Sequence Container\Contact search\custom.Outputs[JsonParserTransformOutput].Columns[custdoc]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Contact search\Sort.Outputs[Sort Output]"
                          isSorted="true"
                          name="Sort Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\Sort.Outputs[Sort Output].Columns[args.service_object_id2]"
                              dataType="i8"
                              lineageId="Package\Iterate Offices\Sequence Container\Contact search\Sort.Outputs[Sort Output].Columns[args.service_object_id2]"
                              name="args.service_object_id2"
                              sortKeyPosition="1">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Iterate Offices\Sequence Container\Contact search\custom.Outputs[JsonParserTransformOutput].Columns[args.service_object_id]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\Sort.Outputs[Sort Output].Columns[StatusCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Contact search\Sort.Outputs[Sort Output].Columns[StatusCode]"
                              name="StatusCode">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Iterate Offices\Sequence Container\Contact search\custom.Outputs[JsonParserTransformOutput].Columns[StatusCode]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\Sort.Outputs[Sort Output].Columns[custdoc]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\Contact search\Sort.Outputs[Sort Output].Columns[custdoc]"
                              name="custdoc">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Iterate Offices\Sequence Container\Contact search\custom.Outputs[JsonParserTransformOutput].Columns[custdoc]}</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Contact search\Sort 1"
                      componentClassID="Microsoft.Sort"
                      contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
                      name="Sort 1"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                          name="EliminateDuplicates">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the maximum number of threads to use for sorting."
                          expressionType="Notify"
                          name="MaximumThreads">-1</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Contact search\Sort 1.Inputs[Sort Input]"
                          name="Sort Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\Sort 1.Inputs[Sort Input].Columns[args.service_object_id]"
                              cachedDataType="i8"
                              cachedName="args.service_object_id"
                              lineageId="Package\Iterate Offices\Sequence Container\Contact search\record.Outputs[JsonParserTransformOutput].Columns[args.service_object_id]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">1</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\Sort 1.Inputs[Sort Input].Columns[StatusCode]"
                              cachedDataType="i4"
                              cachedName="StatusCode"
                              lineageId="Package\Iterate Offices\Sequence Container\Contact search\record.Outputs[JsonParserTransformOutput].Columns[StatusCode]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\Sort 1.Inputs[Sort Input].Columns[recorddoc]"
                              cachedDataType="nText"
                              cachedName="recorddoc"
                              lineageId="Package\Iterate Offices\Sequence Container\Contact search\record.Outputs[JsonParserTransformOutput].Columns[recorddoc]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Contact search\Sort 1.Outputs[Sort Output]"
                          isSorted="true"
                          name="Sort Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\Sort 1.Outputs[Sort Output].Columns[args.service_object_id1]"
                              dataType="i8"
                              lineageId="Package\Iterate Offices\Sequence Container\Contact search\Sort 1.Outputs[Sort Output].Columns[args.service_object_id1]"
                              name="args.service_object_id1"
                              sortKeyPosition="1">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Iterate Offices\Sequence Container\Contact search\record.Outputs[JsonParserTransformOutput].Columns[args.service_object_id]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\Sort 1.Outputs[Sort Output].Columns[StatusCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Contact search\Sort 1.Outputs[Sort Output].Columns[StatusCode]"
                              name="StatusCode">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Iterate Offices\Sequence Container\Contact search\record.Outputs[JsonParserTransformOutput].Columns[StatusCode]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\Sort 1.Outputs[Sort Output].Columns[recorddoc]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\Contact search\Sort 1.Outputs[Sort Output].Columns[recorddoc]"
                              name="recorddoc">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Iterate Offices\Sequence Container\Contact search\record.Outputs[JsonParserTransformOutput].Columns[recorddoc]}</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Contact search\SQL Sort"
                      componentClassID="Microsoft.Sort"
                      contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
                      name="SQL Sort"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                          name="EliminateDuplicates">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the maximum number of threads to use for sorting."
                          expressionType="Notify"
                          name="MaximumThreads">-1</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Contact search\SQL Sort.Inputs[Sort Input]"
                          name="Sort Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\SQL Sort.Inputs[Sort Input].Columns[Id]"
                              cachedDataType="i4"
                              cachedName="Id"
                              lineageId="Package\Iterate Offices\Sequence Container\Contact search\Existing Contacts from SQL.Outputs[OLE DB Source Output].Columns[Id]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">1</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\SQL Sort.Inputs[Sort Input].Columns[etag_contact]"
                              cachedDataType="wstr"
                              cachedLength="250"
                              cachedName="etag_contact"
                              lineageId="Package\Iterate Offices\Sequence Container\Contact search\Existing Contacts from SQL.Outputs[OLE DB Source Output].Columns[etag_contact]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\SQL Sort.Inputs[Sort Input].Columns[AccountId]"
                              cachedDataType="i2"
                              cachedName="AccountId"
                              lineageId="Package\Iterate Offices\Sequence Container\Contact search\Existing Contacts from SQL.Outputs[OLE DB Source Output].Columns[AccountId]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Contact search\SQL Sort.Outputs[Sort Output]"
                          isSorted="true"
                          name="Sort Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\SQL Sort.Outputs[Sort Output].Columns[Id]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Contact search\SQL Sort.Outputs[Sort Output].Columns[Id]"
                              name="Id"
                              sortKeyPosition="1">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Iterate Offices\Sequence Container\Contact search\Existing Contacts from SQL.Outputs[OLE DB Source Output].Columns[Id]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\SQL Sort.Outputs[Sort Output].Columns[etag_contact]"
                              dataType="wstr"
                              length="250"
                              lineageId="Package\Iterate Offices\Sequence Container\Contact search\SQL Sort.Outputs[Sort Output].Columns[etag_contact]"
                              name="etag_contact">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Iterate Offices\Sequence Container\Contact search\Existing Contacts from SQL.Outputs[OLE DB Source Output].Columns[etag_contact]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\SQL Sort.Outputs[Sort Output].Columns[AccountId]"
                              dataType="i2"
                              lineageId="Package\Iterate Offices\Sequence Container\Contact search\SQL Sort.Outputs[Sort Output].Columns[AccountId]"
                              name="AccountId">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Iterate Offices\Sequence Container\Contact search\Existing Contacts from SQL.Outputs[OLE DB Source Output].Columns[AccountId]}</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Contact search\Trash Destination"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Trash Destination; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="The trash destination is used to create dummy destination which ends data path without any processing."
                      name="Trash Destination"
                      version="2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.String"
                          description="File path where you want to save data"
                          expressionType="Notify"
                          name="FilePath"></property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates if you want to save input data to comma separated text file"
                          expressionType="Notify"
                          name="SaveDataToFile">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Append data to file"
                          expressionType="Notify"
                          name="Append">false</property>
                        <property
                          dataType="System.String"
                          description="RowSeparator"
                          expressionType="Notify"
                          name="RowSeparator">{NEWLINE}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether you want to overwrite target file if exists"
                          expressionType="Notify"
                          name="OverwriteFileIfExists">true</property>
                        <property
                          dataType="System.String"
                          description="ColumnSeparator"
                          expressionType="Notify"
                          name="ColumnSeparator">,</property>
                        <property
                          dataType="System.Boolean"
                          description="SupportUnicode"
                          expressionType="Notify"
                          name="SupportUnicode">true</property>
                        <property
                          dataType="System.Boolean"
                          description="ColumnNamesInFirstRow"
                          expressionType="Notify"
                          name="ColumnNamesInFirstRow">true</property>
                        <property
                          dataType="System.Boolean"
                          description="QuoteDataIfNeeded"
                          expressionType="Notify"
                          name="QuoteDataIfNeeded">true</property>
                        <property
                          dataType="System.String"
                          description="Date time format string for any column with DT_DBDATETIME, DT_DBDATETIME2 or DB_DATE format"
                          expressionType="Notify"
                          name="DateTimeFormat">yyyy-MM-dd HH:mm:ss</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.TrashDestination</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Contact search\Trash Destination.Inputs[TrashDestinationInput]"
                          hasSideEffects="true"
                          name="TrashDestinationInput">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Contact search\Trash Destination 1"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Trash Destination; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="The trash destination is used to create dummy destination which ends data path without any processing."
                      name="Trash Destination 1"
                      version="2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.String"
                          description="File path where you want to save data"
                          expressionType="Notify"
                          name="FilePath"></property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates if you want to save input data to comma separated text file"
                          expressionType="Notify"
                          name="SaveDataToFile">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Append data to file"
                          expressionType="Notify"
                          name="Append">false</property>
                        <property
                          dataType="System.String"
                          description="RowSeparator"
                          expressionType="Notify"
                          name="RowSeparator">{NEWLINE}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether you want to overwrite target file if exists"
                          expressionType="Notify"
                          name="OverwriteFileIfExists">true</property>
                        <property
                          dataType="System.String"
                          description="ColumnSeparator"
                          expressionType="Notify"
                          name="ColumnSeparator">,</property>
                        <property
                          dataType="System.Boolean"
                          description="SupportUnicode"
                          expressionType="Notify"
                          name="SupportUnicode">true</property>
                        <property
                          dataType="System.Boolean"
                          description="ColumnNamesInFirstRow"
                          expressionType="Notify"
                          name="ColumnNamesInFirstRow">true</property>
                        <property
                          dataType="System.Boolean"
                          description="QuoteDataIfNeeded"
                          expressionType="Notify"
                          name="QuoteDataIfNeeded">true</property>
                        <property
                          dataType="System.String"
                          description="Date time format string for any column with DT_DBDATETIME, DT_DBDATETIME2 or DB_DATE format"
                          expressionType="Notify"
                          name="DateTimeFormat">yyyy-MM-dd HH:mm:ss</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.TrashDestination</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Contact search\Trash Destination 1.Inputs[TrashDestinationInput]"
                          hasSideEffects="true"
                          name="TrashDestinationInput">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Contact search\Upsert Contact"
                      componentClassID="Microsoft.OLEDBCommand"
                      contactInfo="OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
                      description="Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time."
                      name="Upsert Contact"
                      usesDispositions="true"
                      version="2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">0</property>
                        <property
                          dataType="System.String"
                          description="The SQL command to be executed."
                          expressionType="Notify"
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">exec [UpsertContact] ?,?,?,?</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Iterate Offices\Sequence Container\Contact search\Upsert Contact.Connections[OleDbConnection]"
                          connectionManagerID="Package.ConnectionManagers[colsqlbi01v.Entities]"
                          connectionManagerRefId="Package.ConnectionManagers[colsqlbi01v.Entities]"
                          description="The OLE DB runtime connection used to access the database."
                          name="OleDbConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Contact search\Upsert Contact.Inputs[OLE DB Command Input]"
                          errorOrTruncationOperation="Command Execution"
                          errorRowDisposition="FailComponent"
                          hasSideEffects="true"
                          name="OLE DB Command Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\Upsert Contact.Inputs[OLE DB Command Input].Columns[Origin]"
                              cachedDataType="i4"
                              cachedName="Origin"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Contact search\Upsert Contact.Inputs[OLE DB Command Input].ExternalColumns[@Origin]"
                              lineageId="Package\Iterate Offices\Sequence Container\Contact search\Add accountid and origin.Outputs[Derived Column Output].Columns[Origin]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\Upsert Contact.Inputs[OLE DB Command Input].Columns[recorddoc]"
                              cachedDataType="nText"
                              cachedName="recorddoc"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Contact search\Upsert Contact.Inputs[OLE DB Command Input].ExternalColumns[@body]"
                              lineageId="Package\Iterate Offices\Sequence Container\Contact search\Merge Join.Outputs[Merge Join Output].Columns[recorddoc]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\Upsert Contact.Inputs[OLE DB Command Input].Columns[custdoc]"
                              cachedDataType="nText"
                              cachedName="custdoc"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Contact search\Upsert Contact.Inputs[OLE DB Command Input].ExternalColumns[@custom]"
                              lineageId="Package\Iterate Offices\Sequence Container\Contact search\Merge Join.Outputs[Merge Join Output].Columns[custdoc]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\Upsert Contact.Inputs[OLE DB Command Input].Columns[AccountId]"
                              cachedDataType="i4"
                              cachedName="AccountId"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Contact search\Upsert Contact.Inputs[OLE DB Command Input].ExternalColumns[@accountid]"
                              lineageId="Package\Iterate Offices\Sequence Container\Contact search\Add accountid and origin.Outputs[Derived Column Output].Columns[AccountId]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\Upsert Contact.Inputs[OLE DB Command Input].ExternalColumns[@Origin]"
                              dataType="i2"
                              name="@Origin">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                                  name="DBParamInfoFlags">81</property>
                              </properties>
                            </externalMetadataColumn>
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\Upsert Contact.Inputs[OLE DB Command Input].ExternalColumns[@body]"
                              dataType="nText"
                              name="@body">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                                  name="DBParamInfoFlags">193</property>
                              </properties>
                            </externalMetadataColumn>
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\Upsert Contact.Inputs[OLE DB Command Input].ExternalColumns[@custom]"
                              dataType="nText"
                              name="@custom">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                                  name="DBParamInfoFlags">193</property>
                              </properties>
                            </externalMetadataColumn>
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\Upsert Contact.Inputs[OLE DB Command Input].ExternalColumns[@accountid]"
                              dataType="i4"
                              name="@accountid">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                                  name="DBParamInfoFlags">81</property>
                              </properties>
                            </externalMetadataColumn>
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Contact search\Upsert Contact.Outputs[OLE DB Command Output]"
                          exclusionGroup="1"
                          name="OLE DB Command Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Contact search\Upsert Contact.Inputs[OLE DB Command Input]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Contact search\Upsert Contact.Outputs[OLE DB Command Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="OLE DB Command Error Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Contact search\Upsert Contact.Inputs[OLE DB Command Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\Upsert Contact.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Contact search\Upsert Contact.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\Upsert Contact.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Contact search\Upsert Contact.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Contact search\Web API Destination"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Web API Destination; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="The Web API destination can be used to send data to Web API URL (e.g. Submit or POST data to REST API/SOAP or other HTTP/HTTPS endpoints)"
                      name="Web API Destination"
                      usesDispositions="true"
                      version="5">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.String"
                          description="API URL you want to access"
                          expressionType="Notify"
                          name="HttpRequestUrl">{{User::RexAPIWebURL}}</property>
                        <property
                          dataType="System.String"
                          description="Http Web Request Method (e.g. POST, GET, PUT, LIST, DELETE...). Refer your API documentation if you are not sure which method you have to use."
                          expressionType="Notify"
                          name="HttpRequestMethod">POST</property>
                        <property
                          dataType="System.String"
                          description="Set this if you want to set custom Http headers. You may use variable anywhere in the header value using syntax {{User::YourVarName}}. Syntax of Header key value pair is : &amp;lt;request&amp;gt;&amp;lt;header&amp;gt;&amp;lt;name&amp;gt;x-myheader-1&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;AAA&amp;lt;/value&amp;gt;&amp;lt;/header&amp;gt; &amp;lt;header&amp;gt;&amp;lt;name&amp;gt;x-myheader-2&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;BBB&amp;lt;/value&amp;gt;&amp;lt;/header&amp;gt;&amp;lt;/request&amp;gt;"
                          expressionType="Notify"
                          name="HttpHeaders"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">&lt;request&gt;&lt;header&gt;&lt;name&gt;Accept&lt;/name&gt;&lt;value&gt;*/*&lt;/value&gt;&lt;/header&gt;&lt;header&gt;&lt;name&gt;Cache-Control&lt;/name&gt;&lt;value&gt;no-cache&lt;/value&gt;&lt;/header&gt;&lt;header&gt;&lt;name&gt;X-App-Identifier&lt;/name&gt;&lt;value&gt;client:spicerhaart:{{System::PackageName}}:{{System::TaskName}}&lt;/value&gt;&lt;/header&gt;&lt;/request&gt;</property>
                        <property
                          dataType="System.String"
                          description="User defined data you wish to send along with your HTTP Request (e.g. Upload file data, Form POST data). Usually you have to set content-type of your data but if you select RequestMethod=POST then system will automatically set content-type=application/x-www-form-urlencoded."
                          expressionType="Notify"
                          name="HttpRequestData"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies content type for data you wish to POST. If you select Default option then system default content type will be used (i.e. application/x-www-form-urlencoded). If you specify Content-Type header along with this option then header value takes precedence."
                          expressionType="Notify"
                          name="HttpRequestContentType"
                          typeConverter="ZappySys.Common.Web.HttpRequestContentType">0</property>
                        <property
                          dataType="System.Boolean"
                          description="If this option is true then component will continue without exception on 404 error (Url not found). This allows you to consume data gracefully."
                          expressionType="Notify"
                          name="ContinueOnUrlNotFoundError">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Ignore SSL certificate related errors. Example: if you getting SSL/TLS errors because of certificate expired or certificate is not from trusted authority or certificate is self-signed. By checking this option you will not get SSL/TLS error."
                          expressionType="Notify"
                          name="IgnoreCertificateErrors">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Allow unsecure ciphers/suites and curves for SSLS/TLS communication. Use this option to communicate with web servers which needs legacy / unsecured ciphers support. This option is only trigged when you change default SSL/TLS Version on advanced settings tab."
                          expressionType="Notify"
                          name="AllowUnsecureSuite">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Enable support for gzip or deflate compression. When you check this option compressed response automatically de-compressed saving bandwidth. This option is only valid if web server supports compressed response stream. Check your API documentation for more information."
                          expressionType="Notify"
                          name="EnableCompressionSupport">true</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies which security protocol is supported for HTTPS communication. Using this option you can enable legacy protocol or enforce to use latest version of security protocol (Note: TLS 1.2 is only supported in SSIS 2014 or Higher)."
                          expressionType="Notify"
                          name="SecurityProtocol"
                          typeConverter="ZappySys.PowerPack.Common.HttpsSecurityProtocolType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Wait time in milliseconds (Pause after each request). 0=No wait. Use this delay time if your API has limit on how many requests you can make in certain time frame."
                          expressionType="Notify"
                          name="WaitTime">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you redirect error to error output by default you get additional information in ErrorMessage column. Check this option if you need exact Response Body (Useful if its in JSON/XML format which needs to be parsed for additional information for later step)."
                          expressionType="Notify"
                          name="OnErrorOutputResponseBody">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Enable multiple requests using parallel threads."
                          expressionType="Notify"
                          name="EnableParallelRequests">false</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum parallel threads to use for processing multiple web requests."
                          expressionType="Notify"
                          name="MaxParallelThreads">3</property>
                        <property
                          dataType="System.Boolean"
                          description="By default one request is sent for each input row. If your API supports multiple records in a single call via HTTP Body then enable this setting. See also BodyBatchSize, BodyHeader, BodyFooter and BodyRowSeparator property."
                          expressionType="Notify"
                          name="EnableBodyBatch">false</property>
                        <property
                          dataType="System.String"
                          description="When you have to wrap input content between opening and closing tags for each call then set this property to specify opening for body content. For Example if you want to build Body like this (send max 100 rows per call) ==&gt; { records : [ {...}, {...}, {...} ] } then you can set BatchSize=100, BodyHeader as &quot;{ records: [&quot; , BodyFooter as &quot;] }&quot; and BodyRowSeperator as comma {,}. This property is ignored if EnableBodyBatch=false."
                          expressionType="Notify"
                          name="BodyHeader"></property>
                        <property
                          dataType="System.String"
                          description="When you have to wrap input content between opening and closing tags for each call then set this property to specify closing for body content. For Example if you want to build Body like this (send max 100 rows per call) ==&gt; { records : [ {...}, {...}, {...} ] } then you can set BatchSize=100, BodyHeader as &quot;{ records: [&quot; , BodyFooter as &quot;] }&quot; and BodyRowSeperator as comma {,}. This property is ignored if EnableBodyBatch=false."
                          expressionType="Notify"
                          name="BodyFooter"></property>
                        <property
                          dataType="System.Int32"
                          description="If your API supports multiple records via HTTP Body then change this setting &gt; 1 to include multiple upstream records into single call. See also BodyHeader, BodyFooter and BodyRowSeparator property. This property is ignored if EnableBodyBatch=false."
                          expressionType="Notify"
                          name="BodyBatchSize">100</property>
                        <property
                          dataType="System.String"
                          description="When you submit multiple rows in a batch you can separate multiple documents / records using custom separator (e.g. in JSON Array you can use comma {,} as record separator if POST document is in array format [ {...}, {...}, {...} ] ). For last row of batch blank separator is used."
                          expressionType="Notify"
                          name="BodyRowSeparator"></property>
                        <property
                          dataType="System.Boolean"
                          description="Returns response data as binary data (e.g. Byte Array). Check this option is response is Zip file, Image file or any non text data which needs to be exported as raw data without any encoding."
                          expressionType="Notify"
                          name="TreatResponseAsBinary">false</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.WebApiDestination</property>
                        <property
                          dataType="System.Boolean"
                          description="Check this option if you want to upload file(s) (i.e. POST RAW file data) or send data using Multi-Part encoding method (i.e. Content-Type: multipart/form-data). Multi-Part request allows you to mix key/value and upload files in same request. On the other hand raw upload allows only single file upload (without any key/value) &#xA;&#xA;==== Raw Upload (Content-Type: application/octet-stream) =====   &#xA;To upload single file in raw mode check this option and specify full file path starting with @ sign in the Body (e.g.  @c:\data\myfile.zip ) &#xA;&#xA;==== Form-Data / Multipart Upload (Content-Type: multipart/form-data) =====   &#xA;To treat your Request data as multi part fields you must specify key/value pairs separated by new lines into RequestData field (i.e. Body). Each key value pair is entered on new-line and key/value are separated using equal sign (=). Preceding and trailing spaces are ignored also blank lines are ignored. &#xA;If field value has some any special character(s) then use escape sequence (e.g. For NewLine: \r\n, For Tab: \t, For at (@): \@). When value of any field starts with at sign (@) its automatically treated as File you want to upload. By default file content type is determined based on extension however you can supply content type manually for any field using this way [ fieldname.Content-Type=some content type ]. In below example we have supplied Content-Type for file2 and SomeField1, all other fields are using default content-type.&#xA;See below Example of uploading multiple files along with additional fields.&#xA;&#xA;file1=@c:\data\Myfile1.txt&#xA;file2=@c:\data\Myfile2.json&#xA;file2.Content-Type=application/json&#xA;SomeField1=aaaaaaa&#xA;SomeField1.Content-Type=text/plain&#xA;SomeField2=12345&#xA;SomeFieldWithNewLineAndTab=This is line1\r\nThis is line2\r\nThis is \ttab \ttab \ttab&#xA;SomeFieldStartingWithAtSign=\@MyTwitterHandle&#xA;"
                          expressionType="Notify"
                          name="IsMultiPartUpload">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Enable this option if your server is expecting &#xA; (i.e. CRLF) after last Multi-Part boundary in the Body. This option is only applicable if you enabled IsMultiPartUpload and sending data in Key=value format (i.e. Mutipart). For raw file upload this option has no effect."
                          expressionType="Notify"
                          name="AddMultiPartPostamble">false</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Iterate Offices\Sequence Container\Contact search\Web API Destination.Connections[Connection]"
                          connectionManagerID="Package.ConnectionManagers[HTTP 1]"
                          connectionManagerRefId="Package.ConnectionManagers[HTTP 1]"
                          description="Connection manager for authentication (e.g. HTTP or OAuth Connection)"
                          name="Connection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Contact search\Web API Destination.Inputs[WebApiDestinationInput]"
                          errorRowDisposition="RedirectRow"
                          hasSideEffects="true"
                          name="WebApiDestinationInput"
                          truncationRowDisposition="RedirectRow">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\Web API Destination.Inputs[WebApiDestinationInput].Columns[ZS_JSON_OUT]"
                              cachedDataType="nText"
                              cachedName="ZS_JSON_OUT"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Contact search\Web API Destination.Inputs[WebApiDestinationInput].ExternalColumns[HttpRequestData]"
                              lineageId="Package\Iterate Offices\Sequence Container\Contact search\JSON Generator Transform.Outputs[JsonGeneratorTransformOutput].Columns[ZS_JSON_OUT]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\Web API Destination.Inputs[WebApiDestinationInput].ExternalColumns[HttpRequestUrl]"
                              dataType="wstr"
                              length="2000"
                              name="HttpRequestUrl" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\Web API Destination.Inputs[WebApiDestinationInput].ExternalColumns[HttpRequestData]"
                              dataType="nText"
                              name="HttpRequestData" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\Web API Destination.Inputs[WebApiDestinationInput].ExternalColumns[HttpHeaders]"
                              dataType="wstr"
                              length="2000"
                              name="HttpHeaders" />
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Contact search\Web API Destination.Outputs[WebApiDestination Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="WebApiDestination Error Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Contact search\Web API Destination.Inputs[WebApiDestinationInput]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\Web API Destination.Outputs[WebApiDestination Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Contact search\Web API Destination.Outputs[WebApiDestination Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\Web API Destination.Outputs[WebApiDestination Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Contact search\Web API Destination.Outputs[WebApiDestination Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\Web API Destination.Outputs[WebApiDestination Error Output].Columns[ErrorColumnName]"
                              codePage="1252"
                              dataType="str"
                              length="128"
                              lineageId="Package\Iterate Offices\Sequence Container\Contact search\Web API Destination.Outputs[WebApiDestination Error Output].Columns[ErrorColumnName]"
                              name="ErrorColumnName" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\Web API Destination.Outputs[WebApiDestination Error Output].Columns[ErrorMessage]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\Contact search\Web API Destination.Outputs[WebApiDestination Error Output].Columns[ErrorMessage]"
                              name="ErrorMessage" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Contact search\Web API Destination.Outputs[Response Output]"
                          exclusionGroup="1"
                          name="Response Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Contact search\Web API Destination.Inputs[WebApiDestinationInput]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\Web API Destination.Outputs[Response Output].Columns[ResponseText]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\Contact search\Web API Destination.Outputs[Response Output].Columns[ResponseText]"
                              name="ResponseText" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Contact search\Web API Destination.Outputs[Response Output].Columns[StatusCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Contact search\Web API Destination.Outputs[Response Output].Columns[StatusCode]"
                              name="StatusCode" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                  </components>
                  <paths>
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Contact search.Paths[Derived Column Output]"
                      endId="Package\Iterate Offices\Sequence Container\Contact search\Upsert Contact.Inputs[OLE DB Command Input]"
                      name="Derived Column Output"
                      startId="Package\Iterate Offices\Sequence Container\Contact search\Add accountid and origin.Outputs[Derived Column Output]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Contact search.Paths[ignore]"
                      endId="Package\Iterate Offices\Sequence Container\Contact search\Trash Destination.Inputs[TrashDestinationInput]"
                      name="ignore"
                      startId="Package\Iterate Offices\Sequence Container\Contact search\Insert or Ignore.Outputs[ignore]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Contact search.Paths[JsonGeneratorTransformOutput]"
                      endId="Package\Iterate Offices\Sequence Container\Contact search\Web API Destination.Inputs[WebApiDestinationInput]"
                      name="JsonGeneratorTransformOutput"
                      startId="Package\Iterate Offices\Sequence Container\Contact search\JSON Generator Transform.Outputs[JsonGeneratorTransformOutput]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Contact search.Paths[JsonParserTransformOutput]"
                      endId="Package\Iterate Offices\Sequence Container\Contact search\Sort.Inputs[Sort Input]"
                      name="JsonParserTransformOutput"
                      startId="Package\Iterate Offices\Sequence Container\Contact search\custom.Outputs[JsonParserTransformOutput]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Contact search.Paths[JsonParserTransformOutput1]"
                      endId="Package\Iterate Offices\Sequence Container\Contact search\Sort 1.Inputs[Sort Input]"
                      name="JsonParserTransformOutput"
                      startId="Package\Iterate Offices\Sequence Container\Contact search\record.Outputs[JsonParserTransformOutput]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Contact search.Paths[JsonParserTransformOutput2]"
                      endId="Package\Iterate Offices\Sequence Container\Contact search\Multicast.Inputs[Multicast Input 1]"
                      name="JsonParserTransformOutput"
                      startId="Package\Iterate Offices\Sequence Container\Contact search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Contact search.Paths[JsonSourceOutput]"
                      endId="Package\Iterate Offices\Sequence Container\Contact search\API Sort.Inputs[Sort Input]"
                      name="JsonSourceOutput"
                      startId="Package\Iterate Offices\Sequence Container\Contact search\Search Contacts.Outputs[JsonSourceOutput]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Contact search.Paths[Merge Join Output]"
                      endId="Package\Iterate Offices\Sequence Container\Contact search\Insert or Ignore.Inputs[Conditional Split Input]"
                      name="Merge Join Output"
                      startId="Package\Iterate Offices\Sequence Container\Contact search\Merge Join To Find Those to Insert.Outputs[Merge Join Output]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Contact search.Paths[Merge Join Output1]"
                      endId="Package\Iterate Offices\Sequence Container\Contact search\Add accountid and origin.Inputs[Derived Column Input]"
                      name="Merge Join Output"
                      startId="Package\Iterate Offices\Sequence Container\Contact search\Merge Join.Outputs[Merge Join Output]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Contact search.Paths[Multicast Output 1]"
                      endId="Package\Iterate Offices\Sequence Container\Contact search\custom.Inputs[JsonParserTransformInput]"
                      name="Multicast Output 1"
                      startId="Package\Iterate Offices\Sequence Container\Contact search\Multicast.Outputs[Multicast Output 1]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Contact search.Paths[Multicast Output 2]"
                      endId="Package\Iterate Offices\Sequence Container\Contact search\record.Inputs[JsonParserTransformInput]"
                      name="Multicast Output 2"
                      startId="Package\Iterate Offices\Sequence Container\Contact search\Multicast.Outputs[Multicast Output 2]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Contact search.Paths[OLE DB Source Output]"
                      endId="Package\Iterate Offices\Sequence Container\Contact search\SQL Sort.Inputs[Sort Input]"
                      name="OLE DB Source Output"
                      startId="Package\Iterate Offices\Sequence Container\Contact search\Existing Contacts from SQL.Outputs[OLE DB Source Output]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Contact search.Paths[Response Output]"
                      endId="Package\Iterate Offices\Sequence Container\Contact search\JSON Parser Add id back in.Inputs[JsonParserTransformInput]"
                      name="Response Output"
                      startId="Package\Iterate Offices\Sequence Container\Contact search\Web API Destination.Outputs[Response Output]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Contact search.Paths[Sort Output]"
                      endId="Package\Iterate Offices\Sequence Container\Contact search\Merge Join.Inputs[Merge Join Left Input]"
                      name="Sort Output"
                      startId="Package\Iterate Offices\Sequence Container\Contact search\Sort.Outputs[Sort Output]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Contact search.Paths[Sort Output1]"
                      endId="Package\Iterate Offices\Sequence Container\Contact search\Merge Join To Find Those to Insert.Inputs[Merge Join Right Input]"
                      name="Sort Output"
                      startId="Package\Iterate Offices\Sequence Container\Contact search\SQL Sort.Outputs[Sort Output]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Contact search.Paths[Sort Output2]"
                      endId="Package\Iterate Offices\Sequence Container\Contact search\Merge Join.Inputs[Merge Join Right Input]"
                      name="Sort Output"
                      startId="Package\Iterate Offices\Sequence Container\Contact search\Sort 1.Outputs[Sort Output]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Contact search.Paths[Sort Output3]"
                      endId="Package\Iterate Offices\Sequence Container\Contact search\Merge Join To Find Those to Insert.Inputs[Merge Join Left Input]"
                      name="Sort Output"
                      startId="Package\Iterate Offices\Sequence Container\Contact search\API Sort.Outputs[Sort Output]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Contact search.Paths[upsert]"
                      endId="Package\Iterate Offices\Sequence Container\Contact search\JSON Generator Transform.Inputs[JsonInput1]"
                      name="upsert"
                      startId="Package\Iterate Offices\Sequence Container\Contact search\Insert or Ignore.Outputs[upsert]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Contact search.Paths[WebApiDestination Error Output]"
                      endId="Package\Iterate Offices\Sequence Container\Contact search\Trash Destination 1.Inputs[TrashDestinationInput]"
                      name="WebApiDestination Error Output"
                      startId="Package\Iterate Offices\Sequence Container\Contact search\Web API Destination.Outputs[WebApiDestination Error Output]" />
                  </paths>
                </pipeline>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Iterate Offices\Sequence Container\Email Auth Failure"
              DTS:CreationName="ZappySys.HtmlEmailTask"
              DTS:Description="Email Auth Failure"
              DTS:DTSID="{55B57F4C-E61B-492B-B025-069F95CB50CB}"
              DTS:ExecutableType="ZappySys.HtmlEmailTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Email Auth Failure"
              DTS:TaskContact="HTML Email Task; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <HtmlEmailTask
                  SmtpConnection="SMTP"
                  IsHtmlEmail="True"
                  DefaultStyle="&#xA;&lt;style type=&quot;text/css&quot;&gt;&#xA;body,div,p,span,td,th,table {&#xA; font-family: Helvetica, Arial, sans-serif;&#xA; font-size: 10pt; &#xA;}&#xA;h1,h2,h3,h4,h5{&#xA;font-family: Helvetica, Arial, sans-serif;&#xA;}&#xA;&#xA;table { &#xA; border-collapse: &#xA; collapse; border-spacing: 0; &#xA;}&#xA;&#xA;tr.odd    {background-color: #cccccc}&#xA;tr.even   {background-color: #fafafa}&#xA;td, th { border: 1px solid #bbb;padding: 5 5 5 5} &#xA;th { background: #F3F3F3;  font-weight: bold;}&#xA;&lt;/style&gt;&#xA;&#xA;"
                  Subject="Error occured in {{System::PackageName}}"
                  From="alerts@spicerhaart.co.uk"
                  To="{{User::PackageErrorEmail}}"
                  Cc=""
                  ReplyTo=""
                  Bcc=""
                  Attachments=""
                  EmailPriority="High"
                  MessageSourceType="Direct"
                  MessageDirectValue="&lt;b&gt;Failed to get Authorization Key&lt;/b&gt;&lt;p /&gt;&#xA;&#xA;&lt;p&gt; Response Code =&gt; {{User::ResponseAuthCode}} &lt;p /&gt;&#xA;&#xA;"
                  MessageFileConnection=""
                  MessageVariable=""
                  LogLevel="Normal"
                  PrefixTimestamp="False" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Iterate Offices\Sequence Container\Get Auth Key"
              DTS:CreationName="ZappySys.RestApiTask"
              DTS:Description="ZS REST API Task"
              DTS:DTSID="{5F00F8E1-EC5C-4666-9EE5-742CEE5570C3}"
              DTS:ExecutableType="ZappySys.RestApiTask"
              DTS:FailPackageOnFailure="True"
              DTS:LocaleID="-1"
              DTS:ObjectName="Get Auth Key"
              DTS:TaskContact="REST API Task; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <RestApiTask
                  RequestAccessMode="DirectUrl"
                  RequestUrlVariable=""
                  EnableStatusCheck="False"
                  StatusCheckMaxWaitSeconds="0"
                  StatusFieldFilterType="None"
                  StatusFieldFilterExpr=""
                  StatusCheckIterationWaitSeconds="0"
                  StatusCheckForFailedValue="False"
                  StatusSuccessValue=""
                  StatusContinueValue=""
                  StatusFailedValue=""
                  IsMultiPartUpload="False"
                  AddMultiPartPostamble="False"
                  PreventAutoRedirect="False"
                  RequestTimeoutMs="0"
                  SecurityProtocol="Default"
                  EnableCompressionSupport="True"
                  AllowUnsecureSuite="False"
                  IgnoreCertificateErrors="False"
                  RequestUrl="{{User::RexAPIWebURL}}"
                  RequestUrlConnection=""
                  RequestMethod="POST"
                  RequestContentType="ApplicationJson"
                  OverrideConnectionUrl="False"
                  RequestHeaders="&lt;request&gt;&lt;header&gt;&lt;name&gt;Accept&lt;/name&gt;&lt;value&gt;*/*&lt;/value&gt;&lt;/header&gt;&lt;header&gt;&lt;name&gt;Cache-Control&lt;/name&gt;&lt;value&gt;no-cache&lt;/value&gt;&lt;/header&gt;&lt;header&gt;&lt;name&gt;X-App-Identifier&lt;/name&gt;&lt;value&gt;client:spicerhaart:{{System::PackageName}}:{{System::TaskName}}&lt;/value&gt;&lt;/header&gt;&lt;/request&gt;"
                  RequestData="{&#xA;&quot;method&quot;:&quot;Authentication::login&quot;,&#xA;&quot;args&quot;:{&#xA;&quot;email&quot;:&quot;{{User::PackageUser}}&quot;,&#xA;&quot;password&quot;:&quot;{{User::PackagePassword}}&quot;,&#xA;&quot;account_id&quot;:&quot;{{User::RexAccountID}}&quot;,&#xA;&quot;application&quot;:&quot;rex&quot;&#xA;}&#xA;}"
                  SaveResponse="True"
                  SaveResponseStatusCode="True"
                  ResponseAccessMode="Variable"
                  SaveAsBinary="False"
                  ResponseDataFilePath=""
                  ResponseHeaderMappings="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-16&quot;?&gt;&lt;ArrayOfKeyValueMapping xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot;&gt;&lt;KeyValueMapping&gt;&lt;Key&gt;Transfer-Encoding&lt;/Key&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;/KeyValueMapping&gt;&lt;KeyValueMapping&gt;&lt;Key&gt;Connection&lt;/Key&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;/KeyValueMapping&gt;&lt;KeyValueMapping&gt;&lt;Key&gt;Access-Control-Allow-Origin&lt;/Key&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;/KeyValueMapping&gt;&lt;KeyValueMapping&gt;&lt;Key&gt;Access-Control-Allow-Headers&lt;/Key&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;/KeyValueMapping&gt;&lt;KeyValueMapping&gt;&lt;Key&gt;Access-Control-Allow-Methods&lt;/Key&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;/KeyValueMapping&gt;&lt;KeyValueMapping&gt;&lt;Key&gt;Access-Control-Max-Age&lt;/Key&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;/KeyValueMapping&gt;&lt;KeyValueMapping&gt;&lt;Key&gt;Vary&lt;/Key&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;/KeyValueMapping&gt;&lt;KeyValueMapping&gt;&lt;Key&gt;Content-Encoding&lt;/Key&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;/KeyValueMapping&gt;&lt;KeyValueMapping&gt;&lt;Key&gt;Content-Type&lt;/Key&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;/KeyValueMapping&gt;&lt;KeyValueMapping&gt;&lt;Key&gt;Date&lt;/Key&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;/KeyValueMapping&gt;&lt;KeyValueMapping&gt;&lt;Key&gt;Server&lt;/Key&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;/KeyValueMapping&gt;&lt;/ArrayOfKeyValueMapping&gt;"
                  ResponseCookieMappings="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-16&quot;?&gt;&lt;ArrayOfKeyValueMapping xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; /&gt;"
                  CookieContainerVariable=""
                  ConvertXmlToJson="False"
                  ResponseDataVariable="User::RexToken"
                  ResponseStatusCodeVariable="User::ResponseAuthCode"
                  ResponseContentType="Json"
                  ResponseContentFilter="$.result"
                  ResponseCharset=""
                  ValidateResponse="False"
                  ValidationRules="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-16&quot;?&gt;&lt;ResponseValidationSetting xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot;&gt;&lt;MatchAny&gt;false&lt;/MatchAny&gt;&lt;Rules&gt;&lt;ResponseValidationRule xsi:type=&quot;StatusCodeValidationRule&quot;&gt;&lt;Enabled&gt;false&lt;/Enabled&gt;&lt;Operator&gt;Eq&lt;/Operator&gt;&lt;StatusCode&gt;200&lt;/StatusCode&gt;&lt;/ResponseValidationRule&gt;&lt;ResponseValidationRule xsi:type=&quot;ContentValidationRule&quot;&gt;&lt;Enabled&gt;false&lt;/Enabled&gt;&lt;Operator&gt;Eq&lt;/Operator&gt;&lt;Value /&gt;&lt;/ResponseValidationRule&gt;&lt;ResponseValidationRule xsi:type=&quot;HeaderValidationRule&quot;&gt;&lt;Enabled&gt;false&lt;/Enabled&gt;&lt;Operator&gt;Eq&lt;/Operator&gt;&lt;KeyName /&gt;&lt;Value /&gt;&lt;DataType&gt;String&lt;/DataType&gt;&lt;/ResponseValidationRule&gt;&lt;/Rules&gt;&lt;/ResponseValidationSetting&gt;"
                  ConsumeResponseOnError="False"
                  ContineOnAnyError="False"
                  ContineOnErrorForMessage="False"
                  ContineOnErrorForStatusCode="False"
                  ErrorStatusCodeToMatch="404"
                  MatchForEqual="True"
                  ErrorSubstringToMatch=""
                  ContineOn404Error="False"
                  SaveErrorFlagToVariable="False"
                  ErrorFlagVariableName=""
                  LogLevel="Normal"
                  PrefixTimestamp="False" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Iterate Offices\Sequence Container\Get epoch for 3 days ago"
              DTS:CreationName="Microsoft.ExpressionTask"
              DTS:Description="Expression Task"
              DTS:DTSID="{891F65B1-168B-4955-9E2E-B7816CF69296}"
              DTS:ExecutableType="Microsoft.ExpressionTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Get epoch for 3 days ago"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <ExpressionTask
                  Expression="@[User::OneweekAgoUnixDateStamp] = DATEDIFF(&quot;SECOND&quot;,(DT_DBTIMESTAMP)&quot;01/01/1970&quot;, DATEADD( &quot;Day&quot;, -3,GETDATE() )   )" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Iterate Offices\Sequence Container\Lead search"
              DTS:CreationName="Microsoft.Pipeline"
              DTS:Description="Data Flow Task"
              DTS:DTSID="{15c61be2-b26a-40ad-8c6d-78a625c611d1}"
              DTS:ExecutableType="Microsoft.Pipeline"
              DTS:LocaleID="-1"
              DTS:ObjectName="Lead search"
              DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:ObjectData>
                <pipeline
                  version="1">
                  <components>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Lead search\Add accountid and origin"
                      componentClassID="Microsoft.DerivedColumn"
                      contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                      name="Add accountid and origin"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Lead search\Add accountid and origin.Inputs[Derived Column Input]"
                          description="Input to the Derived Column Transformation"
                          name="Derived Column Input">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Lead search\Add accountid and origin.Outputs[Derived Column Output]"
                          description="Default Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          name="Derived Column Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Lead search\Add accountid and origin.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\Add accountid and origin.Outputs[Derived Column Output].Columns[AccountId]"
                              dataType="i4"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Iterate Offices\Sequence Container\Lead search\Add accountid and origin.Outputs[Derived Column Output].Columns[AccountId]"
                              name="AccountId"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">@[User::RexAccountID]</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">@[User::RexAccountID]</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\Add accountid and origin.Outputs[Derived Column Output].Columns[Origin]"
                              dataType="i4"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Iterate Offices\Sequence Container\Lead search\Add accountid and origin.Outputs[Derived Column Output].Columns[Origin]"
                              name="Origin"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">2</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">2</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Lead search\Add accountid and origin.Outputs[Derived Column Error Output]"
                          description="Error Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Derived Column Error Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Lead search\Add accountid and origin.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\Add accountid and origin.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Lead search\Add accountid and origin.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\Add accountid and origin.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Lead search\Add accountid and origin.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Lead search\API Sort"
                      componentClassID="Microsoft.Sort"
                      contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
                      name="API Sort"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                          name="EliminateDuplicates">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the maximum number of threads to use for sorting."
                          expressionType="Notify"
                          name="MaximumThreads">-1</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Lead search\API Sort.Inputs[Sort Input]"
                          name="Sort Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\API Sort.Inputs[Sort Input].Columns[etag]"
                              cachedDataType="wstr"
                              cachedLength="68"
                              cachedName="etag"
                              lineageId="Package\Iterate Offices\Sequence Container\Lead search\Search Leads.Outputs[JsonSourceOutput].Columns[etag]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\API Sort.Inputs[Sort Input].Columns[id]"
                              cachedDataType="i4"
                              cachedName="id"
                              lineageId="Package\Iterate Offices\Sequence Container\Lead search\Search Leads.Outputs[JsonSourceOutput].Columns[id]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">1</property>
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Lead search\API Sort.Outputs[Sort Output]"
                          isSorted="true"
                          name="Sort Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\API Sort.Outputs[Sort Output].Columns[etag]"
                              dataType="wstr"
                              length="68"
                              lineageId="Package\Iterate Offices\Sequence Container\Lead search\API Sort.Outputs[Sort Output].Columns[etag]"
                              name="etag">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Iterate Offices\Sequence Container\Lead search\Search Leads.Outputs[JsonSourceOutput].Columns[etag]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\API Sort.Outputs[Sort Output].Columns[id]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Lead search\API Sort.Outputs[Sort Output].Columns[id]"
                              name="id"
                              sortKeyPosition="1">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Iterate Offices\Sequence Container\Lead search\Search Leads.Outputs[JsonSourceOutput].Columns[id]}</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Lead search\Conditional Split"
                      componentClassID="Microsoft.ConditionalSplit"
                      contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
                      name="Conditional Split"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Lead search\Conditional Split.Inputs[Conditional Split Input]"
                          description="Input to the Conditional Split Transformation"
                          name="Conditional Split Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\Conditional Split.Inputs[Conditional Split Input].Columns[__DOCUMENT__]"
                              cachedDataType="nText"
                              cachedName="__DOCUMENT__"
                              lineageId="Package\Iterate Offices\Sequence Container\Lead search\record.Outputs[JsonParserTransformOutput].Columns[__DOCUMENT__]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Lead search\Conditional Split.Outputs[Case 1]"
                          description="Output 1 of the Conditional Split Transformation"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          exclusionGroup="1"
                          name="Case 1"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Lead search\Conditional Split.Inputs[Conditional Split Input]"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                              name="Expression">[ISNULL](#{Package\Iterate Offices\Sequence Container\Lead search\record.Outputs[JsonParserTransformOutput].Columns[__DOCUMENT__]}) ==  FALSE </property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the friendly version of the expression. This expression version uses column names."
                              expressionType="Notify"
                              name="FriendlyExpression">ISNULL(__DOCUMENT__) ==  FALSE </property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                              name="EvaluationOrder">0</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Lead search\Conditional Split.Outputs[Conditional Split Default Output]"
                          description="Default Output of the Conditional Split Transformation"
                          exclusionGroup="1"
                          name="Conditional Split Default Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Lead search\Conditional Split.Inputs[Conditional Split Input]">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              name="IsDefaultOut">true</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Lead search\Conditional Split.Outputs[Conditional Split Error Output]"
                          description="Error Output of the Conditional Split Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Conditional Split Error Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Lead search\Conditional Split.Inputs[Conditional Split Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Lead search\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Lead search\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Lead search\Existing Leads from SQL"
                      componentClassID="Microsoft.OLEDBSource"
                      contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                      description="OLE DB Source"
                      name="Existing Leads from SQL"
                      usesDispositions="true"
                      version="7">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">0</property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the database object used to open a rowset."
                          name="OpenRowset">[dbo].[vwContacts]</property>
                        <property
                          dataType="System.String"
                          description="Specifies the variable that contains the name of the database object used to open a rowset."
                          name="OpenRowsetVariable"></property>
                        <property
                          dataType="System.String"
                          description="The SQL command to be executed."
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">SELECT [Id], 
       [etag] as etaglead, 
       [AccountId]
FROM [Entities].[dbo].[vwLeadBase] with (NOLOCK)
WHERE [AccountId] = ?</property>
                        <property
                          dataType="System.String"
                          description="The variable that contains the SQL command to be executed."
                          name="SqlCommandVariable"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Boolean"
                          description="Forces the use of the DefaultCodePage property value when describing character data."
                          name="AlwaysUseDefaultCodePage">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the mode used to access the database."
                          name="AccessMode"
                          typeConverter="AccessMode">2</property>
                        <property
                          dataType="System.String"
                          description="The mappings between the parameters in the SQL command and variables."
                          name="ParameterMapping">"Parameter0:Input",{40C273CD-83FA-4737-B171-10500D92D346};</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Iterate Offices\Sequence Container\Lead search\Existing Leads from SQL.Connections[OleDbConnection]"
                          connectionManagerID="Package.ConnectionManagers[colsqlbi01v.Entities]"
                          connectionManagerRefId="Package.ConnectionManagers[colsqlbi01v.Entities]"
                          description="The OLE DB runtime connection used to access the database."
                          name="OleDbConnection" />
                      </connections>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Lead search\Existing Leads from SQL.Outputs[OLE DB Source Output]"
                          name="OLE DB Source Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\Existing Leads from SQL.Outputs[OLE DB Source Output].Columns[Id]"
                              dataType="i4"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Lead search\Existing Leads from SQL.Outputs[OLE DB Source Output].ExternalColumns[Id]"
                              lineageId="Package\Iterate Offices\Sequence Container\Lead search\Existing Leads from SQL.Outputs[OLE DB Source Output].Columns[Id]"
                              name="Id"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\Existing Leads from SQL.Outputs[OLE DB Source Output].Columns[AccountId]"
                              dataType="i2"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Lead search\Existing Leads from SQL.Outputs[OLE DB Source Output].ExternalColumns[AccountId]"
                              lineageId="Package\Iterate Offices\Sequence Container\Lead search\Existing Leads from SQL.Outputs[OLE DB Source Output].Columns[AccountId]"
                              name="AccountId"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\Existing Leads from SQL.Outputs[OLE DB Source Output].Columns[etaglead]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Lead search\Existing Leads from SQL.Outputs[OLE DB Source Output].ExternalColumns[etaglead]"
                              length="250"
                              lineageId="Package\Iterate Offices\Sequence Container\Lead search\Existing Leads from SQL.Outputs[OLE DB Source Output].Columns[etaglead]"
                              name="etaglead"
                              truncationRowDisposition="FailComponent" />
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\Existing Leads from SQL.Outputs[OLE DB Source Output].ExternalColumns[Id]"
                              dataType="i4"
                              name="Id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\Existing Leads from SQL.Outputs[OLE DB Source Output].ExternalColumns[AccountId]"
                              codePage="1252"
                              dataType="str"
                              length="4"
                              name="AccountId" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\Existing Leads from SQL.Outputs[OLE DB Source Output].ExternalColumns[etaglead]"
                              dataType="wstr"
                              length="250"
                              name="etaglead" />
                          </externalMetadataColumns>
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Lead search\Existing Leads from SQL.Outputs[OLE DB Source Error Output]"
                          isErrorOut="true"
                          name="OLE DB Source Error Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\Existing Leads from SQL.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Lead search\Existing Leads from SQL.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\Existing Leads from SQL.Outputs[OLE DB Source Error Output].Columns[etaglead]"
                              dataType="wstr"
                              length="250"
                              lineageId="Package\Iterate Offices\Sequence Container\Lead search\Existing Leads from SQL.Outputs[OLE DB Source Error Output].Columns[etaglead]"
                              name="etaglead" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\Existing Leads from SQL.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Lead search\Existing Leads from SQL.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\Existing Leads from SQL.Outputs[OLE DB Source Error Output].Columns[Id]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Lead search\Existing Leads from SQL.Outputs[OLE DB Source Error Output].Columns[Id]"
                              name="Id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\Existing Leads from SQL.Outputs[OLE DB Source Error Output].Columns[AccountId]"
                              codePage="1252"
                              dataType="str"
                              length="4"
                              lineageId="Package\Iterate Offices\Sequence Container\Lead search\Existing Leads from SQL.Outputs[OLE DB Source Error Output].Columns[AccountId]"
                              name="AccountId" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Lead search\Insert or Ignore"
                      componentClassID="Microsoft.ConditionalSplit"
                      contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
                      name="Insert or Ignore"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Lead search\Insert or Ignore.Inputs[Conditional Split Input]"
                          description="Input to the Conditional Split Transformation"
                          name="Conditional Split Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\Insert or Ignore.Inputs[Conditional Split Input].Columns[etag]"
                              cachedDataType="wstr"
                              cachedLength="68"
                              cachedName="etag"
                              lineageId="Package\Iterate Offices\Sequence Container\Lead search\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etag]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\Insert or Ignore.Inputs[Conditional Split Input].Columns[etaglead]"
                              cachedDataType="wstr"
                              cachedLength="250"
                              cachedName="etaglead"
                              lineageId="Package\Iterate Offices\Sequence Container\Lead search\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etaglead]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Lead search\Insert or Ignore.Outputs[upsert]"
                          description="Output 1 of the Conditional Split Transformation"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          exclusionGroup="1"
                          name="upsert"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Lead search\Insert or Ignore.Inputs[Conditional Split Input]"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                              name="Expression">[ISNULL](#{Package\Iterate Offices\Sequence Container\Lead search\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etaglead]}) || (#{Package\Iterate Offices\Sequence Container\Lead search\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etaglead]}) != #{Package\Iterate Offices\Sequence Container\Lead search\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etag]}</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the friendly version of the expression. This expression version uses column names."
                              expressionType="Notify"
                              name="FriendlyExpression">ISNULL(etaglead) || (etaglead) != etag</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                              name="EvaluationOrder">0</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Lead search\Insert or Ignore.Outputs[ignore]"
                          description="Output 2 of the Conditional Split Transformation"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          exclusionGroup="1"
                          name="ignore"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Lead search\Insert or Ignore.Inputs[Conditional Split Input]"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                              name="Expression">![ISNULL](#{Package\Iterate Offices\Sequence Container\Lead search\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etaglead]})</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the friendly version of the expression. This expression version uses column names."
                              expressionType="Notify"
                              name="FriendlyExpression">!ISNULL(etaglead)</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                              name="EvaluationOrder">1</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Lead search\Insert or Ignore.Outputs[Conditional Split Default Output]"
                          description="Default Output of the Conditional Split Transformation"
                          exclusionGroup="1"
                          name="Conditional Split Default Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Lead search\Insert or Ignore.Inputs[Conditional Split Input]">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              name="IsDefaultOut">true</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Lead search\Insert or Ignore.Outputs[Conditional Split Error Output]"
                          description="Error Output of the Conditional Split Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Conditional Split Error Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Lead search\Insert or Ignore.Inputs[Conditional Split Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\Insert or Ignore.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Lead search\Insert or Ignore.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\Insert or Ignore.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Lead search\Insert or Ignore.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Lead search\JSON Generator Transform"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="JSON Generator Transform; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="The JSON generator transform can be used to create JSON document from single or multiple inputs. You can create simple or nested JSON document."
                      name="JSON Generator Transform"
                      version="5">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.Int32"
                          description="Determines JSON format and output mode (e.g. one JSON for all input rows or one JSON for each input row)"
                          expressionType="Notify"
                          name="OutputMode"
                          typeConverter="ZappySys.PowerPack.Transform.JsonGeneratorTransform.JsonOutputMode">2</property>
                        <property
                          dataType="System.String"
                          description="Defines shape of output JSON string"
                          expressionType="Notify"
                          name="LayoutInfo">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;settings ver="3"&gt;
  &lt;dataset id="ds_id729" main="True" inputid="729" readfrominput="True"&gt;&lt;/dataset&gt;
  &lt;map name="method" value="Leads::read" datatype="String" /&gt;
  &lt;map name="args"&gt;
    &lt;map src="id" name="id" datatype="String" /&gt;
  &lt;/map&gt;
  &lt;map name="strip_response_prefixes" value="true" datatype="Bool" /&gt;
  &lt;map name="token" value="{{User::RexToken}}" /&gt;
&lt;/settings&gt;</property>
                        <property
                          dataType="System.Boolean"
                          description="Do not output attribute if value is NULL. By default null attribute is output as &quot;MyColname&quot; : null "
                          expressionType="Notify"
                          name="DoNotOutputNullAttribute">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indent JSON Text generated by this transform (Pretty Print)"
                          expressionType="Notify"
                          name="IndentOutput">false</property>
                        <property
                          dataType="System.String"
                          description="Default output format for datetime columns"
                          expressionType="Notify"
                          name="DateTimeFormat">yyyy-MM-dd HH:mm:ss</property>
                        <property
                          dataType="System.String"
                          description="Culture setting for this task. This option is useful to control output format for certain data types (e.g. number, decimal) based on regional settings. In USA dot is used for decimal indicator but in Germany it may be comma. Leave this blank if you want to use system default settings."
                          expressionType="Notify"
                          name="Culture"></property>
                        <property
                          dataType="System.Boolean"
                          description="Document Header/Footer text come from upstream column rather than direct string"
                          expressionType="Notify"
                          name="UseColumnForHeaderFooter">false</property>
                        <property
                          dataType="System.String"
                          description="Header text for document (Added before each document in the output)"
                          expressionType="Notify"
                          name="DocumentHeader"></property>
                        <property
                          dataType="System.String"
                          description="Footer text for document (Added after each document in the output)"
                          expressionType="Notify"
                          name="DocumentFooter"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies how many rows to include in each batch (Array records for single dataset array mode). 0=Include all in one batch. This setting is only valid for Mode=[Single Dataset Array]"
                          expressionType="Notify"
                          name="ArrayBatchSize">0</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.JsonGeneratorTransform</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to True if you dont want to output empty nodes of sub document (e.g nested property). This option is only applicable if you enabled DoNotOutputNullProperty. If all child peoprties are NULL for parent node then by default output contains empty nodes (e.g. CountryInfo: { CityInfo: { } } for Json --OR-- &lt;CountryInfo&gt;&lt;CityInfo /&gt;&lt;/CountryInfo&gt; for Xml). You can enable this option to avoid such empty nodes from the output."
                          expressionType="Notify"
                          name="DoNotOutputEmptyNestedAttribute">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to True if you dont want to output empty array nodes when no record found for that array (e.g. &quot;Orders&quot;: [ ] for JSON --OR-- &lt;Orders&gt;&lt;/Orders&gt; for Xml). You can enable this option to avoid such empty nodes from the output."
                          expressionType="Notify"
                          name="DoNotOutputEmptyArrayAttribute">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies encoding for data. If you set CharacterSet property then Encoing is ignored."
                          expressionType="Notify"
                          name="Encoding"
                          typeConverter="ZappySys.Common.EncodingType">2</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Lead search\JSON Generator Transform.Inputs[JsonInput1]"
                          name="JsonInput1">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Id for attached dataset with input. Use JSON Layout Editor to see attached dataset"
                              expressionType="Notify"
                              name="DatasetInputId">729</property>
                          </properties>
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\JSON Generator Transform.Inputs[JsonInput1].Columns[etag]"
                              cachedDataType="wstr"
                              cachedLength="68"
                              cachedName="etag"
                              lineageId="Package\Iterate Offices\Sequence Container\Lead search\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etag]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\JSON Generator Transform.Inputs[JsonInput1].Columns[id]"
                              cachedDataType="i4"
                              cachedName="id"
                              cachedSortKeyPosition="1"
                              lineageId="Package\Iterate Offices\Sequence Container\Lead search\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[id]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\JSON Generator Transform.Inputs[JsonInput1].Columns[etaglead]"
                              cachedDataType="wstr"
                              cachedLength="250"
                              cachedName="etaglead"
                              lineageId="Package\Iterate Offices\Sequence Container\Lead search\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etaglead]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Lead search\JSON Generator Transform.Inputs[JsonInput2]"
                          name="JsonInput2">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Lead search\JSON Generator Transform.Outputs[JsonGeneratorTransformOutput]"
                          errorOrTruncationOperation="Error"
                          name="JsonGeneratorTransformOutput">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\JSON Generator Transform.Outputs[JsonGeneratorTransformOutput].Columns[ZS_JSON_OUT]"
                              dataType="nText"
                              description="This output column contains generated JSON string from JSON generator Transform"
                              lineageId="Package\Iterate Offices\Sequence Container\Lead search\JSON Generator Transform.Outputs[JsonGeneratorTransformOutput].Columns[ZS_JSON_OUT]"
                              name="ZS_JSON_OUT" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Lead search\JSON Parser Add id back in"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="JSON Parser Transform; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="Parse incoming JSON String into columns. You can also parse and transform single JSON record into multiple rows by filtering data based on JSON Path (e.g. $.Customer.Orders[*])"
                      name="JSON Parser Add id back in"
                      usesDispositions="true"
                      version="2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for any numeric data types"
                          expressionType="Notify"
                          name="TreatBlankNumberAsNull">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for bool data types"
                          expressionType="Notify"
                          name="TreatBlankBoolAsNull">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for any date/time data types"
                          expressionType="Notify"
                          name="TreatBlankDateAsNull">true</property>
                        <property
                          dataType="System.String"
                          description="Sample JSON data used to parse output columns."
                          expressionType="Notify"
                          name="SampleData"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">{"method":"CustomFields::readFieldValuesAndRecord","args":{"service_name":"Leads","service_object_id":"28569","return_custom_fields_keyed_by":"field_name"},"strip_response_prefixes":1,"token":"b57c-0be2-04f4-8d65-fd25-a099-6087-07de-1780-19443"}</property>
                        <property
                          dataType="System.Boolean"
                          description="Include all upstream parent columns into output except the one you selected to parse. By default only parsed columns from Input document is included in the output. If you wish to include all other upstream columns in the output too then check this option."
                          expressionType="Notify"
                          name="OutputAllUpstreamColumns">true</property>
                        <property
                          dataType="System.Int32"
                          description="Defines how to handle empty input. By default NULL or Empty input is skipped from parsing."
                          expressionType="Notify"
                          name="EmptyInputProcessingMode"
                          typeConverter="ZappySys.Common.Data.EmptyInputProcessingMode">0</property>
                        <property
                          dataType="System.String"
                          description="Defines how to handle empty input. By default NULL or Empty input is skipped from parsing."
                          expressionType="Notify"
                          name="TreatEmptyInputAs">{ }</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum JSON records to fetch. Set this value to 0 for all records"
                          expressionType="Notify"
                          name="MaxRows">0</property>
                        <property
                          dataType="System.String"
                          description="Enter expression here to filter data.(Example:  $.Users[*].UserName ) This will fetch User names from users records"
                          expressionType="Notify"
                          name="Filter"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.Boolean"
                          description="Use this option to include parent properties (Non array) in the output along with Filtered Rows"
                          expressionType="Notify"
                          name="IncludeParentColumns">true</property>
                        <property
                          dataType="System.Boolean"
                          description="By default child and parent information is not included in the output if children not found for specified expression. For example if you want to extract all orders from all customers nodes then you can type $.Customers[*].Orders[*]. This will fetch all orders from all customers. By default customers records without orders wont be included in the output. If you want to include those customers where orders not found then check this option (Output null information for order attributes). This behavior is similar to LEFT OUTER JOIN in SQL (Left side is parent, right side is child). This option is ***resource intensive*** so only check if you really care about this behavior."
                          expressionType="Notify"
                          name="IncludeParentColumnsWhenChildMissing">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to true if you want to output parent columns which are array. By default any parent column which is an array is not included in output. See also FilterForParentColumnsWithArrayType property if you set this property"
                          expressionType="Notify"
                          name="IncludeParentColumnsWithArrayType">false</property>
                        <property
                          dataType="System.String"
                          description="Filter expression to extract value form parent"
                          expressionType="Notify"
                          name="FilterForParentColumnsWithArrayType"></property>
                        <property
                          dataType="System.String"
                          description="Prefix for parent column name. This option is only valid if you have set IncludeParentColumns=True"
                          expressionType="Notify"
                          name="ParentColumnPrefix">P_</property>
                        <property
                          dataType="System.Boolean"
                          description="Throw error if property name specified in filter expression is missing. By default it will ignore any missing property errors."
                          expressionType="Notify"
                          name="ThrowErrorIfPropertyMissing">false</property>
                        <property
                          dataType="System.Int32"
                          description="This property how many nested levels should be scanned to fetch various properties. 0=Scan all child levels."
                          expressionType="Notify"
                          name="MaxLevelsToScan">0</property>
                        <property
                          dataType="System.String"
                          description="List comma separated property names from JSON document which you want to exclude from output. Specify parent property name to exclude all child nodes."
                          expressionType="Notify"
                          name="ExcludedProperties"></property>
                        <property
                          dataType="System.String"
                          description="Property level separator used in generated property name (separator for outer properties - Above selected filter node). Use this if default separator is producing duplicate property name which is conflicting with existing name."
                          expressionType="Notify"
                          name="LevelSeparator">_</property>
                        <property
                          dataType="System.Boolean"
                          description="Enables deep array flattening for selected filtered hierarchy. When you turn on this property it will flatten each property of each array item and expose as column (e.g. If you have Filter set as $.customers[*] and for each customer you have an array of Addresses then you may see output columns like Addresses.1.City, Addresses.1.State, Addresses.2.City, Addresses.2.State .... Addresses.N.City, Addresses.N.State). You can control how many array items you want to flatten by setting MaxArrayItemsToFlatten property."
                          expressionType="Notify"
                          name="EnableArrayFlattening">false</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum number of array items to flatten. inner array flattening. Adjust this property to control how many columns being generated. This option is ignored if you set EnableArrayFlattening=false"
                          expressionType="Notify"
                          name="MaxArrayItemsToFlatten">10</property>
                        <property
                          dataType="System.String"
                          description="Specifies how custom date formatted strings are parsed when reading JSON."
                          expressionType="Notify"
                          name="DateFormatString"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies how date formatted strings, e.g. Date(1198908717056) and 2012-03-21T05:40Z, are parsed when reading JSON."
                          expressionType="Notify"
                          name="DateParseHandling"
                          typeConverter="ZappySys.Common.DateParseHandling">1</property>
                        <property
                          dataType="System.Boolean"
                          description="Output as raw JSON document rather than parsing individual fields. This option is helpful if you have documents stored in a file and you want to pass them downstream as raw JSON string rather than parsing into columns."
                          expressionType="Notify"
                          name="OutputRawDocument">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indent JSON output so its easy to read."
                          expressionType="Notify"
                          name="IndentOutput">false</property>
                        <property
                          dataType="System.Boolean"
                          description="When this property is true then Column is converted to Row. Pivoted names will appear under  Pivot_Name column and values will appear under Pivot_Value field."
                          expressionType="Notify"
                          name="EnablePivot">false</property>
                        <property
                          dataType="System.Int32"
                          description="Array Transformation you want to apply. Useful for case when you have 2-Dimensional arrays with rows/columns in separate arrays."
                          expressionType="Notify"
                          name="ArrayTransformationType"
                          typeConverter="ZappySys.Json.ArrayTransformType">0</property>
                        <property
                          dataType="System.String"
                          description="Filter expression to use to extract column names for array transformation."
                          expressionType="Notify"
                          name="ArrayTransColumnNameFilter"></property>
                        <property
                          dataType="System.String"
                          description="Filter expression for row values (Not applicable for simple array transformation)."
                          expressionType="Notify"
                          name="ArrayTransRowValueFilter"></property>
                        <property
                          dataType="System.Boolean"
                          description="When you have 2D array but don't have column list specified in a separate array then use this option (e.g. { arr: [[10,11],[21,22]] } )."
                          expressionType="Notify"
                          name="ArrayTransEnableCustomColumns">false</property>
                        <property
                          dataType="System.String"
                          description="When you have 2D array but don't have column list specified in a separate array then use specify column names here. Use comma separated list (e.g col1,col2,col3 ). Column name Order must match value order."
                          expressionType="Notify"
                          name="ArrayTransCustomColumns"></property>
                        <property
                          dataType="System.Int32"
                          description="Metadata scan mode controls how data type and length is determined. By default few records scanned to determine datatype/length. Changing ScanMode affects length/datatype accuracy."
                          expressionType="Notify"
                          name="MetaDataScanMode"
                          typeConverter="ZappySys.Common.Data.MetaDataScanMode">4</property>
                        <property
                          dataType="System.Int32"
                          description="Length for all string column. This option is only valid for MetaDataScanMode=Custom"
                          expressionType="Notify"
                          name="MetaDataCustomLength">1000</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.JsonParserTransform</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Lead search\JSON Parser Add id back in.Inputs[JsonParserTransformInput]"
                          errorRowDisposition="FailComponent"
                          name="JsonParserTransformInput"
                          truncationRowDisposition="FailComponent">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\JSON Parser Add id back in.Inputs[JsonParserTransformInput].Columns[ZS_JSON_OUT]"
                              cachedDataType="nText"
                              cachedName="ZS_JSON_OUT"
                              lineageId="Package\Iterate Offices\Sequence Container\Lead search\JSON Generator Transform.Outputs[JsonGeneratorTransformOutput].Columns[ZS_JSON_OUT]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\JSON Parser Add id back in.Inputs[JsonParserTransformInput].Columns[ResponseText]"
                              cachedDataType="nText"
                              cachedName="ResponseText"
                              lineageId="Package\Iterate Offices\Sequence Container\Lead search\Web API Destination.Outputs[Response Output].Columns[ResponseText]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Lead search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[ResponseText]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\JSON Parser Add id back in.Inputs[JsonParserTransformInput].Columns[StatusCode]"
                              cachedDataType="i4"
                              cachedName="StatusCode"
                              lineageId="Package\Iterate Offices\Sequence Container\Lead search\Web API Destination.Outputs[Response Output].Columns[StatusCode]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Lead search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[StatusCode]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True" />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Lead search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput]"
                          errorOrTruncationOperation="Error"
                          errorRowDisposition="FailComponent"
                          name="JsonParserTransformOutput"
                          truncationRowDisposition="FailComponent">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[StatusCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Lead search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[StatusCode]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Lead search\JSON Parser Add id back in.Inputs[JsonParserTransformInput].Columns[StatusCode]"
                              name="StatusCode" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[ResponseText]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\Lead search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[ResponseText]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Lead search\JSON Parser Add id back in.Inputs[JsonParserTransformInput].Columns[ResponseText]"
                              name="ResponseText" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[args.service_object_id]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Lead search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].ExternalColumns[args.service_object_id]"
                              length="20"
                              lineageId="Package\Iterate Offices\Sequence Container\Lead search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[args.service_object_id]"
                              name="args.service_object_id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[method]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Lead search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].ExternalColumns[method]"
                              length="152"
                              lineageId="Package\Iterate Offices\Sequence Container\Lead search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[method]"
                              name="method" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[args.service_name]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Lead search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].ExternalColumns[args.service_name]"
                              length="20"
                              lineageId="Package\Iterate Offices\Sequence Container\Lead search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[args.service_name]"
                              name="args.service_name" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[args.return_custom_fields_keyed_by]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Lead search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].ExternalColumns[args.return_custom_fields_keyed_by]"
                              length="40"
                              lineageId="Package\Iterate Offices\Sequence Container\Lead search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[args.return_custom_fields_keyed_by]"
                              name="args.return_custom_fields_keyed_by" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[strip_response_prefixes]"
                              dataType="i8"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Lead search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].ExternalColumns[strip_response_prefixes]"
                              lineageId="Package\Iterate Offices\Sequence Container\Lead search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[strip_response_prefixes]"
                              name="strip_response_prefixes" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[token]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Lead search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].ExternalColumns[token]"
                              length="200"
                              lineageId="Package\Iterate Offices\Sequence Container\Lead search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[token]"
                              name="token" />
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].ExternalColumns[method]"
                              dataType="wstr"
                              length="152"
                              name="method" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].ExternalColumns[args.service_name]"
                              dataType="wstr"
                              length="20"
                              name="args.service_name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].ExternalColumns[args.service_object_id]"
                              dataType="wstr"
                              length="20"
                              name="args.service_object_id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].ExternalColumns[args.return_custom_fields_keyed_by]"
                              dataType="wstr"
                              length="40"
                              name="args.return_custom_fields_keyed_by" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].ExternalColumns[strip_response_prefixes]"
                              dataType="i8"
                              name="strip_response_prefixes" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].ExternalColumns[token]"
                              dataType="wstr"
                              length="200"
                              name="token" />
                          </externalMetadataColumns>
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Lead search\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output]"
                          isErrorOut="true"
                          name="JsonParserTransform Error Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[StatusCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Lead search\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[StatusCode]"
                              name="StatusCode" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[ResponseText]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\Lead search\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[ResponseText]"
                              name="ResponseText" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[args.service_object_id]"
                              dataType="wstr"
                              length="20"
                              lineageId="Package\Iterate Offices\Sequence Container\Lead search\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[args.service_object_id]"
                              name="args.service_object_id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[method]"
                              dataType="wstr"
                              length="152"
                              lineageId="Package\Iterate Offices\Sequence Container\Lead search\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[method]"
                              name="method" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[args.service_name]"
                              dataType="wstr"
                              length="20"
                              lineageId="Package\Iterate Offices\Sequence Container\Lead search\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[args.service_name]"
                              name="args.service_name" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[args.return_custom_fields_keyed_by]"
                              dataType="wstr"
                              length="40"
                              lineageId="Package\Iterate Offices\Sequence Container\Lead search\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[args.return_custom_fields_keyed_by]"
                              name="args.return_custom_fields_keyed_by" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[strip_response_prefixes]"
                              dataType="i8"
                              lineageId="Package\Iterate Offices\Sequence Container\Lead search\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[strip_response_prefixes]"
                              name="strip_response_prefixes" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[token]"
                              dataType="wstr"
                              length="200"
                              lineageId="Package\Iterate Offices\Sequence Container\Lead search\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[token]"
                              name="token" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Lead search\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Lead search\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[ErrorColumnName]"
                              codePage="1252"
                              dataType="str"
                              length="128"
                              lineageId="Package\Iterate Offices\Sequence Container\Lead search\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[ErrorColumnName]"
                              name="ErrorColumnName" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[ErrorMessage]"
                              dataType="wstr"
                              length="1024"
                              lineageId="Package\Iterate Offices\Sequence Container\Lead search\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[ErrorMessage]"
                              name="ErrorMessage" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[ErrorRawData]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\Lead search\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[ErrorRawData]"
                              name="ErrorRawData" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Lead search\Merge Join To Find Those to Insert"
                      componentClassID="Microsoft.MergeJoin"
                      contactInfo="Merge Join;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Combine two sorted data flows into one using the FULL, LEFT, or INNER join. We recommend this transformation when data flows can be sorted at their sources."
                      name="Merge Join To Find Those to Insert"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of join to perform."
                          name="JoinType"
                          typeConverter="JoinType">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the number of columns in the ordering key."
                          name="NumKeyColumns">1</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the null values are treated as equal values."
                          name="TreatNullsAsEqual">true</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates the requested maximum buffers per input before blocking."
                          name="MaxBuffersPerInput">5</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Lead search\Merge Join To Find Those to Insert.Inputs[Merge Join Left Input]"
                          hasSideEffects="true"
                          name="Merge Join Left Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\Merge Join To Find Those to Insert.Inputs[Merge Join Left Input].Columns[etag]"
                              cachedDataType="wstr"
                              cachedLength="68"
                              cachedName="etag"
                              lineageId="Package\Iterate Offices\Sequence Container\Lead search\API Sort.Outputs[Sort Output].Columns[etag]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\Merge Join To Find Those to Insert.Inputs[Merge Join Left Input].Columns[id]"
                              cachedDataType="i4"
                              cachedName="id"
                              cachedSortKeyPosition="1"
                              lineageId="Package\Iterate Offices\Sequence Container\Lead search\API Sort.Outputs[Sort Output].Columns[id]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Lead search\Merge Join To Find Those to Insert.Inputs[Merge Join Right Input]"
                          hasSideEffects="true"
                          name="Merge Join Right Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\Merge Join To Find Those to Insert.Inputs[Merge Join Right Input].Columns[Id]"
                              cachedDataType="i4"
                              cachedName="Id"
                              cachedSortKeyPosition="1"
                              lineageId="Package\Iterate Offices\Sequence Container\Lead search\SQL Sort.Outputs[Sort Output].Columns[Id]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\Merge Join To Find Those to Insert.Inputs[Merge Join Right Input].Columns[etaglead]"
                              cachedDataType="wstr"
                              cachedLength="250"
                              cachedName="etaglead"
                              lineageId="Package\Iterate Offices\Sequence Container\Lead search\SQL Sort.Outputs[Sort Output].Columns[etaglead]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Lead search\Merge Join To Find Those to Insert.Outputs[Merge Join Output]"
                          isSorted="true"
                          name="Merge Join Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etag]"
                              dataType="wstr"
                              length="68"
                              lineageId="Package\Iterate Offices\Sequence Container\Lead search\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etag]"
                              name="etag">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Iterate Offices\Sequence Container\Lead search\Merge Join To Find Those to Insert.Inputs[Merge Join Left Input].Columns[etag]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[id]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Lead search\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[id]"
                              name="id"
                              sortKeyPosition="1">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Iterate Offices\Sequence Container\Lead search\Merge Join To Find Those to Insert.Inputs[Merge Join Left Input].Columns[id]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etaglead]"
                              dataType="wstr"
                              length="250"
                              lineageId="Package\Iterate Offices\Sequence Container\Lead search\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etaglead]"
                              name="etaglead">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Iterate Offices\Sequence Container\Lead search\Merge Join To Find Those to Insert.Inputs[Merge Join Right Input].Columns[etaglead]}</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Lead search\record"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="JSON Parser Transform; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="Parse incoming JSON String into columns. You can also parse and transform single JSON record into multiple rows by filtering data based on JSON Path (e.g. $.Customer.Orders[*])"
                      name="record"
                      usesDispositions="true"
                      version="2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">3</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for any numeric data types"
                          expressionType="Notify"
                          name="TreatBlankNumberAsNull">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for bool data types"
                          expressionType="Notify"
                          name="TreatBlankBoolAsNull">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for any date/time data types"
                          expressionType="Notify"
                          name="TreatBlankDateAsNull">true</property>
                        <property
                          dataType="System.String"
                          description="Sample JSON data used to parse output columns."
                          expressionType="Notify"
                          name="SampleData"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">{"result":{"system_record_state":"active","system_ctime":"1560776325","system_modtime":"1560776406","system_completed_time":"1560776432","system_assigned_time":"1560776406","is_email_lead":null,"body_snippet":"Hello there, \r\n\r\n\r\n\r\nIm currently in receipt of two offers on my own property and advised by my agent that I am likely to receive a third.\r\n\r\n\r\n\r\nI  am downsizing and moving from Kent and as a result will not require a mortgage. \r\n\r\n\r\n\r\nIf possible I woul","security_user_rights":["read","update","purge","trash"],"contact":{"name":"Mrs Lisa Deller","email_address":"lisacdeller@hugs-online.com","phone_number":"07570 091093","fax_number":null,"address_postal":null,"address":"37 Emerald Crescent\r\nSITTINGBOURNE\r\nME10 5JJ","id":"311215"},"project":null,"project_stage":null,"listing":{"id":4375,"listing_agent_1":{"id":"19724","name":"Darren Campbell","first_name":"Darren","last_name":"Campbell","email_address":"Darren.Campbell@haart.co.uk","phone_direct":"01255879450","phone_mobile":"447418346273","position":"Property Marketing Consultant","is_account_user":"1","profile_image":null},"listing_agent_2":null,"listing_category":{"id":"residential_sale","text":"Residential Sale"},"listing_primary_image":{"uri":"rexlive:\/\/1780\/listings\/4375\/images\/img_3501-img_3503_9784-9f3f-ebcb-42e1-71c5-20d4-f70f-0670_20190405084823.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1780\/listings\/4375\/images\/img_3501-img_3503_9784-9f3f-ebcb-42e1-71c5-20d4-f70f-0670_20190405084823.jpg","thumbs":{"800x600":{"uri":"rexlive:\/\/1780\/listings\/4375\/images\/img_3501-img_3503_9784-9f3f-ebcb-42e1-71c5-20d4-f70f-0670_20190405084823_800x600.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1780\/listings\/4375\/images\/img_3501-img_3503_9784-9f3f-ebcb-42e1-71c5-20d4-f70f-0670_20190405084823_800x600.jpg"},"400x300":{"uri":"rexlive:\/\/1780\/listings\/4375\/images\/img_3501-img_3503_9784-9f3f-ebcb-42e1-71c5-20d4-f70f-0670_20190405084823_400x300.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1780\/listings\/4375\/images\/img_3501-img_3503_9784-9f3f-ebcb-42e1-71c5-20d4-f70f-0670_20190405084823_400x300.jpg"},"200x150":{"uri":"rexlive:\/\/1780\/listings\/4375\/images\/img_3501-img_3503_9784-9f3f-ebcb-42e1-71c5-20d4-f70f-0670_20190405084823_200x150.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1780\/listings\/4375\/images\/img_3501-img_3503_9784-9f3f-ebcb-42e1-71c5-20d4-f70f-0670_20190405084823_200x150.jpg"},"80x60":{"uri":"rexlive:\/\/1780\/listings\/4375\/images\/img_3501-img_3503_9784-9f3f-ebcb-42e1-71c5-20d4-f70f-0670_20190405084823_80x60.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1780\/listings\/4375\/images\/img_3501-img_3503_9784-9f3f-ebcb-42e1-71c5-20d4-f70f-0670_20190405084823_80x60.jpg"}}},"location":{"id":"22","text":"haart of Harwich"},"project_stage":null,"property":{"system_search_key":"49 Clayton Road, HARWICH CO12 4TH","adr_unit_number":null,"adr_street_number":"49","adr_street_name":"Clayton Road","adr_state_or_region":null,"adr_suburb_or_town":"HARWICH","adr_postcode":"CO12 4TH","adr_country":"uk","id":"3643597"}},"property":null,"assignee":{"id":"19721","name":"Faith Hanmore-Jones","first_name":"Faith","last_name":"Hanmore-Jones","email_address":"Faith.Hanmore-Jones@haart.co.uk"},"system_completed_by_user":{"id":"19721","name":"Faith Hanmore-Jones","first_name":"Faith","last_name":"Hanmore-Jones","email_address":"Faith.Hanmore-Jones@haart.co.uk"},"system_modified_user":{"id":"19721","name":"Faith Hanmore-Jones","first_name":"Faith","last_name":"Hanmore-Jones","email_address":"Faith.Hanmore-Jones@haart.co.uk"},"system_created_user":{"id":0,"name":"System User","first_name":"System","last_name":"User","email_address":"no-reply@rexsoftware.com.au"},"system_assigned_by_user":{"id":"19721","name":"Faith Hanmore-Jones","first_name":"Faith","last_name":"Hanmore-Jones","email_address":"Faith.Hanmore-Jones@haart.co.uk"},"lead_type":{"id":"general","text":"General"},"lead_source":{"id":"26611","text":"Internet - Rightmove"},"etag":"18067-1560776406","id":"18067","note":"Hello there, \r\n\r\n\r\n\r\nIm currently in receipt of two offers on my own property and advised by my agent that I am likely to receive a third.\r\n\r\n\r\n\r\nI  am downsizing and moving from Kent and as a result will not require a mortgage. \r\n\r\n\r\n\r\nIf possible I would like to arrange a viewing of this property for Sunday 23rd June . \r\n\r\n\r\n\r\nPlease note, my property is on the market with Connells and I have spoken with their financial advisor.\r\n\r\nPropertyRef -  HRT038000100\r\nCustomer Day Phone -  07570091093\r\nCustomer Evening Phone -  \r\nCustomer Postcode -  ME10 5JJ\r\nCustomer Address -  37 Emerald Crescent\r\nPortal Source -  RightMove\r\n\r\nProperty To Sell -  True \r\nArrange Valuation -  False \r\nArrange Viewing -  True \r\nSend Property Details -  False \r\n\r\nContact Details: \r\nName: Mrs Lisa Deller\r\nEmail Address: lisacdeller@hugs-online.com\r\nMobile: 07570091093\r\n\r\nListing Details: \r\nId: 4375\r\nAddress: 49 Clayton Road"},"error":null}</property>
                        <property
                          dataType="System.Boolean"
                          description="Include all upstream parent columns into output except the one you selected to parse. By default only parsed columns from Input document is included in the output. If you wish to include all other upstream columns in the output too then check this option."
                          expressionType="Notify"
                          name="OutputAllUpstreamColumns">true</property>
                        <property
                          dataType="System.Int32"
                          description="Defines how to handle empty input. By default NULL or Empty input is skipped from parsing."
                          expressionType="Notify"
                          name="EmptyInputProcessingMode"
                          typeConverter="ZappySys.Common.Data.EmptyInputProcessingMode">0</property>
                        <property
                          dataType="System.String"
                          description="Defines how to handle empty input. By default NULL or Empty input is skipped from parsing."
                          expressionType="Notify"
                          name="TreatEmptyInputAs">{ }</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum JSON records to fetch. Set this value to 0 for all records"
                          expressionType="Notify"
                          name="MaxRows">0</property>
                        <property
                          dataType="System.String"
                          description="Enter expression here to filter data.(Example:  $.Users[*].UserName ) This will fetch User names from users records"
                          expressionType="Notify"
                          name="Filter"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">$.result</property>
                        <property
                          dataType="System.Boolean"
                          description="Use this option to include parent properties (Non array) in the output along with Filtered Rows"
                          expressionType="Notify"
                          name="IncludeParentColumns">true</property>
                        <property
                          dataType="System.Boolean"
                          description="By default child and parent information is not included in the output if children not found for specified expression. For example if you want to extract all orders from all customers nodes then you can type $.Customers[*].Orders[*]. This will fetch all orders from all customers. By default customers records without orders wont be included in the output. If you want to include those customers where orders not found then check this option (Output null information for order attributes). This behavior is similar to LEFT OUTER JOIN in SQL (Left side is parent, right side is child). This option is ***resource intensive*** so only check if you really care about this behavior."
                          expressionType="Notify"
                          name="IncludeParentColumnsWhenChildMissing">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to true if you want to output parent columns which are array. By default any parent column which is an array is not included in output. See also FilterForParentColumnsWithArrayType property if you set this property"
                          expressionType="Notify"
                          name="IncludeParentColumnsWithArrayType">false</property>
                        <property
                          dataType="System.String"
                          description="Filter expression to extract value form parent"
                          expressionType="Notify"
                          name="FilterForParentColumnsWithArrayType"></property>
                        <property
                          dataType="System.String"
                          description="Prefix for parent column name. This option is only valid if you have set IncludeParentColumns=True"
                          expressionType="Notify"
                          name="ParentColumnPrefix">P_</property>
                        <property
                          dataType="System.Boolean"
                          description="Throw error if property name specified in filter expression is missing. By default it will ignore any missing property errors."
                          expressionType="Notify"
                          name="ThrowErrorIfPropertyMissing">false</property>
                        <property
                          dataType="System.Int32"
                          description="This property how many nested levels should be scanned to fetch various properties. 0=Scan all child levels."
                          expressionType="Notify"
                          name="MaxLevelsToScan">0</property>
                        <property
                          dataType="System.String"
                          description="List comma separated property names from JSON document which you want to exclude from output. Specify parent property name to exclude all child nodes."
                          expressionType="Notify"
                          name="ExcludedProperties"></property>
                        <property
                          dataType="System.String"
                          description="Property level separator used in generated property name (separator for outer properties - Above selected filter node). Use this if default separator is producing duplicate property name which is conflicting with existing name."
                          expressionType="Notify"
                          name="LevelSeparator">_</property>
                        <property
                          dataType="System.Boolean"
                          description="Enables deep array flattening for selected filtered hierarchy. When you turn on this property it will flatten each property of each array item and expose as column (e.g. If you have Filter set as $.customers[*] and for each customer you have an array of Addresses then you may see output columns like Addresses.1.City, Addresses.1.State, Addresses.2.City, Addresses.2.State .... Addresses.N.City, Addresses.N.State). You can control how many array items you want to flatten by setting MaxArrayItemsToFlatten property."
                          expressionType="Notify"
                          name="EnableArrayFlattening">false</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum number of array items to flatten. inner array flattening. Adjust this property to control how many columns being generated. This option is ignored if you set EnableArrayFlattening=false"
                          expressionType="Notify"
                          name="MaxArrayItemsToFlatten">10</property>
                        <property
                          dataType="System.String"
                          description="Specifies how custom date formatted strings are parsed when reading JSON."
                          expressionType="Notify"
                          name="DateFormatString"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies how date formatted strings, e.g. Date(1198908717056) and 2012-03-21T05:40Z, are parsed when reading JSON."
                          expressionType="Notify"
                          name="DateParseHandling"
                          typeConverter="ZappySys.Common.DateParseHandling">1</property>
                        <property
                          dataType="System.Boolean"
                          description="Output as raw JSON document rather than parsing individual fields. This option is helpful if you have documents stored in a file and you want to pass them downstream as raw JSON string rather than parsing into columns."
                          expressionType="Notify"
                          name="OutputRawDocument">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Indent JSON output so its easy to read."
                          expressionType="Notify"
                          name="IndentOutput">true</property>
                        <property
                          dataType="System.Boolean"
                          description="When this property is true then Column is converted to Row. Pivoted names will appear under  Pivot_Name column and values will appear under Pivot_Value field."
                          expressionType="Notify"
                          name="EnablePivot">false</property>
                        <property
                          dataType="System.Int32"
                          description="Array Transformation you want to apply. Useful for case when you have 2-Dimensional arrays with rows/columns in separate arrays."
                          expressionType="Notify"
                          name="ArrayTransformationType"
                          typeConverter="ZappySys.Json.ArrayTransformType">0</property>
                        <property
                          dataType="System.String"
                          description="Filter expression to use to extract column names for array transformation."
                          expressionType="Notify"
                          name="ArrayTransColumnNameFilter"></property>
                        <property
                          dataType="System.String"
                          description="Filter expression for row values (Not applicable for simple array transformation)."
                          expressionType="Notify"
                          name="ArrayTransRowValueFilter"></property>
                        <property
                          dataType="System.Boolean"
                          description="When you have 2D array but don't have column list specified in a separate array then use this option (e.g. { arr: [[10,11],[21,22]] } )."
                          expressionType="Notify"
                          name="ArrayTransEnableCustomColumns">false</property>
                        <property
                          dataType="System.String"
                          description="When you have 2D array but don't have column list specified in a separate array then use specify column names here. Use comma separated list (e.g col1,col2,col3 ). Column name Order must match value order."
                          expressionType="Notify"
                          name="ArrayTransCustomColumns"></property>
                        <property
                          dataType="System.Int32"
                          description="Metadata scan mode controls how data type and length is determined. By default few records scanned to determine datatype/length. Changing ScanMode affects length/datatype accuracy."
                          expressionType="Notify"
                          name="MetaDataScanMode"
                          typeConverter="ZappySys.Common.Data.MetaDataScanMode">4</property>
                        <property
                          dataType="System.Int32"
                          description="Length for all string column. This option is only valid for MetaDataScanMode=Custom"
                          expressionType="Notify"
                          name="MetaDataCustomLength">1000</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.JsonParserTransform</property>
                        <property
                          dataType="System.Boolean"
                          name="EnableBigNumberHandling">false</property>
                        <property
                          dataType="System.Int32"
                          name="Encoding">0</property>
                        <property
                          dataType="System.String"
                          name="CharacterSet"></property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Lead search\record.Inputs[JsonParserTransformInput]"
                          errorRowDisposition="FailComponent"
                          name="JsonParserTransformInput"
                          truncationRowDisposition="FailComponent">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\record.Inputs[JsonParserTransformInput].Columns[ResponseText]"
                              cachedDataType="nText"
                              cachedName="ResponseText"
                              lineageId="Package\Iterate Offices\Sequence Container\Lead search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[ResponseText]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\record.Inputs[JsonParserTransformInput].Columns[StatusCode]"
                              cachedDataType="i4"
                              cachedName="StatusCode"
                              lineageId="Package\Iterate Offices\Sequence Container\Lead search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[StatusCode]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Lead search\record.Outputs[JsonParserTransformOutput].Columns[StatusCode]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\record.Inputs[JsonParserTransformInput].Columns[args.service_object_id]"
                              cachedDataType="wstr"
                              cachedLength="20"
                              cachedName="args.service_object_id"
                              lineageId="Package\Iterate Offices\Sequence Container\Lead search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[args.service_object_id]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Lead search\record.Outputs[JsonParserTransformOutput].Columns[args.service_object_id]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\record.Inputs[JsonParserTransformInput].Columns[method]"
                              cachedDataType="wstr"
                              cachedLength="152"
                              cachedName="method"
                              lineageId="Package\Iterate Offices\Sequence Container\Lead search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[method]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Lead search\record.Outputs[JsonParserTransformOutput].Columns[method]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\record.Inputs[JsonParserTransformInput].Columns[args.service_name]"
                              cachedDataType="wstr"
                              cachedLength="20"
                              cachedName="args.service_name"
                              lineageId="Package\Iterate Offices\Sequence Container\Lead search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[args.service_name]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Lead search\record.Outputs[JsonParserTransformOutput].Columns[args.service_name]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\record.Inputs[JsonParserTransformInput].Columns[args.return_custom_fields_keyed_by]"
                              cachedDataType="wstr"
                              cachedLength="40"
                              cachedName="args.return_custom_fields_keyed_by"
                              lineageId="Package\Iterate Offices\Sequence Container\Lead search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[args.return_custom_fields_keyed_by]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Lead search\record.Outputs[JsonParserTransformOutput].Columns[args.return_custom_fields_keyed_by]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\record.Inputs[JsonParserTransformInput].Columns[strip_response_prefixes]"
                              cachedDataType="i8"
                              cachedName="strip_response_prefixes"
                              lineageId="Package\Iterate Offices\Sequence Container\Lead search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[strip_response_prefixes]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Lead search\record.Outputs[JsonParserTransformOutput].Columns[strip_response_prefixes]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\record.Inputs[JsonParserTransformInput].Columns[token]"
                              cachedDataType="wstr"
                              cachedLength="200"
                              cachedName="token"
                              lineageId="Package\Iterate Offices\Sequence Container\Lead search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[token]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Lead search\record.Outputs[JsonParserTransformOutput].Columns[token]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True" />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Lead search\record.Outputs[JsonParserTransformOutput]"
                          errorOrTruncationOperation="Error"
                          errorRowDisposition="FailComponent"
                          name="JsonParserTransformOutput"
                          truncationRowDisposition="FailComponent">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\record.Outputs[JsonParserTransformOutput].Columns[token]"
                              dataType="wstr"
                              length="200"
                              lineageId="Package\Iterate Offices\Sequence Container\Lead search\record.Outputs[JsonParserTransformOutput].Columns[token]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Lead search\record.Inputs[JsonParserTransformInput].Columns[token]"
                              name="token" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\record.Outputs[JsonParserTransformOutput].Columns[strip_response_prefixes]"
                              dataType="i8"
                              lineageId="Package\Iterate Offices\Sequence Container\Lead search\record.Outputs[JsonParserTransformOutput].Columns[strip_response_prefixes]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Lead search\record.Inputs[JsonParserTransformInput].Columns[strip_response_prefixes]"
                              name="strip_response_prefixes" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\record.Outputs[JsonParserTransformOutput].Columns[args.return_custom_fields_keyed_by]"
                              dataType="wstr"
                              length="40"
                              lineageId="Package\Iterate Offices\Sequence Container\Lead search\record.Outputs[JsonParserTransformOutput].Columns[args.return_custom_fields_keyed_by]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Lead search\record.Inputs[JsonParserTransformInput].Columns[args.return_custom_fields_keyed_by]"
                              name="args.return_custom_fields_keyed_by" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\record.Outputs[JsonParserTransformOutput].Columns[args.service_name]"
                              dataType="wstr"
                              length="20"
                              lineageId="Package\Iterate Offices\Sequence Container\Lead search\record.Outputs[JsonParserTransformOutput].Columns[args.service_name]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Lead search\record.Inputs[JsonParserTransformInput].Columns[args.service_name]"
                              name="args.service_name" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\record.Outputs[JsonParserTransformOutput].Columns[method]"
                              dataType="wstr"
                              length="152"
                              lineageId="Package\Iterate Offices\Sequence Container\Lead search\record.Outputs[JsonParserTransformOutput].Columns[method]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Lead search\record.Inputs[JsonParserTransformInput].Columns[method]"
                              name="method" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\record.Outputs[JsonParserTransformOutput].Columns[args.service_object_id]"
                              dataType="wstr"
                              length="20"
                              lineageId="Package\Iterate Offices\Sequence Container\Lead search\record.Outputs[JsonParserTransformOutput].Columns[args.service_object_id]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Lead search\record.Inputs[JsonParserTransformInput].Columns[args.service_object_id]"
                              name="args.service_object_id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\record.Outputs[JsonParserTransformOutput].Columns[StatusCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Lead search\record.Outputs[JsonParserTransformOutput].Columns[StatusCode]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Lead search\record.Inputs[JsonParserTransformInput].Columns[StatusCode]"
                              name="StatusCode" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\record.Outputs[JsonParserTransformOutput].Columns[__DOCUMENT__]"
                              dataType="nText"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Lead search\record.Outputs[JsonParserTransformOutput].ExternalColumns[__DOCUMENT__]"
                              lineageId="Package\Iterate Offices\Sequence Container\Lead search\record.Outputs[JsonParserTransformOutput].Columns[__DOCUMENT__]"
                              name="__DOCUMENT__" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\record.Outputs[JsonParserTransformOutput].Columns[P_error]"
                              dataType="nText"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Lead search\record.Outputs[JsonParserTransformOutput].ExternalColumns[P_error]"
                              lineageId="Package\Iterate Offices\Sequence Container\Lead search\record.Outputs[JsonParserTransformOutput].Columns[P_error]"
                              name="P_error" />
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\record.Outputs[JsonParserTransformOutput].ExternalColumns[P_error]"
                              dataType="nText"
                              name="P_error" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\record.Outputs[JsonParserTransformOutput].ExternalColumns[__DOCUMENT__]"
                              dataType="nText"
                              name="__DOCUMENT__" />
                          </externalMetadataColumns>
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Lead search\record.Outputs[JsonParserTransform Error Output]"
                          isErrorOut="true"
                          name="JsonParserTransform Error Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\record.Outputs[JsonParserTransform Error Output].Columns[token]"
                              dataType="wstr"
                              length="200"
                              lineageId="Package\Iterate Offices\Sequence Container\Lead search\record.Outputs[JsonParserTransform Error Output].Columns[token]"
                              name="token" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\record.Outputs[JsonParserTransform Error Output].Columns[strip_response_prefixes]"
                              dataType="i8"
                              lineageId="Package\Iterate Offices\Sequence Container\Lead search\record.Outputs[JsonParserTransform Error Output].Columns[strip_response_prefixes]"
                              name="strip_response_prefixes" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\record.Outputs[JsonParserTransform Error Output].Columns[args.return_custom_fields_keyed_by]"
                              dataType="wstr"
                              length="40"
                              lineageId="Package\Iterate Offices\Sequence Container\Lead search\record.Outputs[JsonParserTransform Error Output].Columns[args.return_custom_fields_keyed_by]"
                              name="args.return_custom_fields_keyed_by" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\record.Outputs[JsonParserTransform Error Output].Columns[args.service_name]"
                              dataType="wstr"
                              length="20"
                              lineageId="Package\Iterate Offices\Sequence Container\Lead search\record.Outputs[JsonParserTransform Error Output].Columns[args.service_name]"
                              name="args.service_name" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\record.Outputs[JsonParserTransform Error Output].Columns[method]"
                              dataType="wstr"
                              length="152"
                              lineageId="Package\Iterate Offices\Sequence Container\Lead search\record.Outputs[JsonParserTransform Error Output].Columns[method]"
                              name="method" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\record.Outputs[JsonParserTransform Error Output].Columns[args.service_object_id]"
                              dataType="wstr"
                              length="20"
                              lineageId="Package\Iterate Offices\Sequence Container\Lead search\record.Outputs[JsonParserTransform Error Output].Columns[args.service_object_id]"
                              name="args.service_object_id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\record.Outputs[JsonParserTransform Error Output].Columns[StatusCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Lead search\record.Outputs[JsonParserTransform Error Output].Columns[StatusCode]"
                              name="StatusCode" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\record.Outputs[JsonParserTransform Error Output].Columns[__DOCUMENT__]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\Lead search\record.Outputs[JsonParserTransform Error Output].Columns[__DOCUMENT__]"
                              name="__DOCUMENT__" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\record.Outputs[JsonParserTransform Error Output].Columns[P_error]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\Lead search\record.Outputs[JsonParserTransform Error Output].Columns[P_error]"
                              name="P_error" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\record.Outputs[JsonParserTransform Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Lead search\record.Outputs[JsonParserTransform Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\record.Outputs[JsonParserTransform Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Lead search\record.Outputs[JsonParserTransform Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\record.Outputs[JsonParserTransform Error Output].Columns[ErrorColumnName]"
                              codePage="1252"
                              dataType="str"
                              length="128"
                              lineageId="Package\Iterate Offices\Sequence Container\Lead search\record.Outputs[JsonParserTransform Error Output].Columns[ErrorColumnName]"
                              name="ErrorColumnName" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\record.Outputs[JsonParserTransform Error Output].Columns[ErrorMessage]"
                              dataType="wstr"
                              length="1024"
                              lineageId="Package\Iterate Offices\Sequence Container\Lead search\record.Outputs[JsonParserTransform Error Output].Columns[ErrorMessage]"
                              name="ErrorMessage" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\record.Outputs[JsonParserTransform Error Output].Columns[ErrorRawData]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\Lead search\record.Outputs[JsonParserTransform Error Output].Columns[ErrorRawData]"
                              name="ErrorRawData" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Lead search\Search Leads"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="JSON Source (REST API or File); ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="The JSON source is used to read data from JSON files, RESTful Web Service or direct JSON String."
                      name="Search Leads"
                      usesDispositions="true"
                      version="33">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for any numeric data types"
                          expressionType="Notify"
                          name="TreatBlankNumberAsNull">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for bool data types"
                          expressionType="Notify"
                          name="TreatBlankBoolAsNull">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for any date/time data types"
                          expressionType="Notify"
                          name="TreatBlankDateAsNull">true</property>
                        <property
                          dataType="System.Int32"
                          description="Defines how to read the JSON file or direct string"
                          expressionType="Notify"
                          name="AccessMode"
                          typeConverter="ZappySys.Common.Ssis.FileValueAccessMode">3</property>
                        <property
                          dataType="System.String"
                          description="Defines how to read the JSON file or direct string"
                          expressionType="Notify"
                          name="DirectValue"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.String"
                          description="Variable name which holds JSON string"
                          expressionType="Notify"
                          name="ValueVariable"
                          typeConverter="ZappySys.PowerPack.Converters.VariableEditor,ZappySys.PowerPack130.UI,Version=1.0.0.0,Culture=neutral,PublicKeyToken=1903265a93eae502"></property>
                        <property
                          dataType="System.String"
                          description="Variable name which holds data file path or url"
                          expressionType="Notify"
                          name="PathVariable"
                          typeConverter="ZappySys.PowerPack.Converters.VariableEditor,ZappySys.PowerPack130.UI,Version=1.0.0.0,Culture=neutral,PublicKeyToken=1903265a93eae502">User::RexAPIWebURL</property>
                        <property
                          dataType="System.String"
                          description="JSON file file path (e.g. c:\data\myfile.json) or pattern to process multiple files (e.g. c:\data\*.json)"
                          expressionType="Notify"
                          name="DirectPath"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">https://api.uk.rexsoftware.com/rex.php</property>
                        <property
                          dataType="System.Boolean"
                          description="Include files from sub folders too."
                          expressionType="Notify"
                          name="Recursive">false</property>
                        <property
                          dataType="System.String"
                          description="Set this if you want to set custom Http headers. You may use variable anywhere in the header value using syntax {{User::YourVarName}}. Syntax of Header key value pair is : &amp;lt;request&amp;gt;&amp;lt;header&amp;gt;&amp;lt;name&amp;gt;x-myheader-1&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;AAA&amp;lt;/value&amp;gt;&amp;lt;/header&amp;gt; &amp;lt;header&amp;gt;&amp;lt;name&amp;gt;x-myheader-2&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;BBB&amp;lt;/value&amp;gt;&amp;lt;/header&amp;gt;&amp;lt;/request&amp;gt;"
                          expressionType="Notify"
                          name="HttpHeaders">&lt;request&gt;&lt;header&gt;&lt;name&gt;Accept&lt;/name&gt;&lt;value&gt;*/*&lt;/value&gt;&lt;/header&gt;&lt;header&gt;&lt;name&gt;Cache-Control&lt;/name&gt;&lt;value&gt;no-cache&lt;/value&gt;&lt;/header&gt;&lt;header&gt;&lt;name&gt;X-App-Identifier&lt;/name&gt;&lt;value&gt;client:spicerhaart:{{System::PackageName}}:{{System::TaskName}}&lt;/value&gt;&lt;/header&gt;&lt;/request&gt;</property>
                        <property
                          dataType="System.String"
                          description="User defined data you wish to send along with your HTTP Request (e.g. Upload file data, Form POST data). Usually you have to set content-type of your data but if you select RequestMethod=POST then system will automatically set content-type=application/x-www-form-urlencoded."
                          expressionType="Notify"
                          name="HttpRequestData">{
"method":"Leads::search",
"args":{
	"criteria": 
	[
		
	],
	"result_format":"etags",
	"limit":50000,
	"offset": &lt;%page%&gt;
	 },
"strip_response_prefixes": true,
"token": "{{User::RexToken}}"
}</property>
                        <property
                          dataType="System.String"
                          description="Http Web Request Method (e.g. POST, GET, PUT, LIST, DELETE...). Refer your API documentation if you are not sure which method you have to use."
                          expressionType="Notify"
                          name="HttpRequestMethod">POST</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies content type for data you wish to POST. If you select Default option then system default content type will be used (i.e. application/x-www-form-urlencoded). If you specify Content-Type header along with this option then header value takes precedence."
                          expressionType="Notify"
                          name="HttpRequestContentType"
                          typeConverter="ZappySys.Common.Web.HttpRequestContentType">2</property>
                        <property
                          dataType="System.Int32"
                          description="Data format coming from HTTP Response. This is useful for example when you have OData service and you want to automatically consume all pages of data using odata.netUrl. Setting JsonFormat=Odata will automatically do it for you. This setting is only applicable if JSON is coming from HTTP WebRequest."
                          expressionType="Notify"
                          name="JsonFormat"
                          typeConverter="ZappySys.Json.JsonFormat">1</property>
                        <property
                          dataType="System.Boolean"
                          description="Enable custom proxy settings (If this is not set then system default proxy will be used. To disable proxy totally uncheck this option and check DoNotUseDefaultProxy option if available)"
                          expressionType="Notify"
                          name="UseProxy">false</property>
                        <property
                          dataType="System.String"
                          description="Web URL of Proxy server (including port  if necessary). [e.g. http://myproxyserver:8080/]"
                          expressionType="Notify"
                          name="ProxyUrl"></property>
                        <property
                          dataType="System.Boolean"
                          description="Enable passing userid and password to proxy server"
                          expressionType="Notify"
                          name="UseProxyCreds">false</property>
                        <property
                          dataType="System.String"
                          description="Proxy username"
                          expressionType="Notify"
                          name="ProxyUserName"></property>
                        <property
                          dataType="System.String"
                          description="Proxy password"
                          expressionType="Notify"
                          name="ProxyPassword"></property>
                        <property
                          dataType="System.String"
                          description="If Service response support pagination using some sort of next url attribute then specify which attribute name in JSON Response string which holds next url. If no attribute found or its null then component will stop fetching next resultset. Example: $.pagingInfo.nextUrl"
                          expressionType="Notify"
                          name="NextUrlAttribute"></property>
                        <property
                          dataType="System.String"
                          description="If Service response support pagination using some sort of prev/next url attribute then specify which previous link attribute name from JSON Response string which holds previous url."
                          expressionType="Notify"
                          name="PrevUrlAttribute"></property>
                        <property
                          dataType="System.String"
                          description="Specifies value for NextUrlAttribute or StopIndicatorAttribute which indicates last page to stop pagination. If you have specified StopIndicatorAttribute then you can use Regular expression rather than static value to indicate last page. To use regular expression value of this property must start with regex= prefix. Example : regex=FALSE|N  (assuming you set StopIndicatorAttribute to something like $.hasMore)"
                          expressionType="Notify"
                          name="NextUrlStopIndicator"></property>
                        <property
                          dataType="System.String"
                          description="Attribute name or expression for attribute which can be used as stop indicator (e.g. hasmore --or-- $.pagination.hasmore). If this value is blank then NextUrlAttribute is used"
                          expressionType="Notify"
                          name="StopIndicatorAttribute"></property>
                        <property
                          dataType="System.String"
                          description="If you want to include certain text (or parameters) at the end of Next url then specify this attribute (e.g. &amp;format=json). Another common usecase of this property is to supply pagination token to next Page URL. You can also use &lt;%nextlink%&gt; or  &lt;%nextlink_encoded%&gt; placeholder (e.g. &amp;cursor=&lt;%nextlink_encoded%&gt; )"
                          expressionType="Notify"
                          name="NextUrlSuffix"></property>
                        <property
                          dataType="System.Int32"
                          description="This property indicates total number of milliseconds you want to wait before sending next request. This option allows you to adjust how many API calls can be made within certain timeframe. If your API Service has no limit then set this option to zero"
                          expressionType="Notify"
                          name="NextUrlWait">0</property>
                        <property
                          dataType="System.Boolean"
                          description="If this option is true then component will continue without exception on 404 error (Url not found). This allows you to consume data gracefully."
                          expressionType="Notify"
                          name="ContinueOnUrlNotFoundError">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Continue when any type of exception occurs during http request"
                          expressionType="Notify"
                          name="ContineOnAnyError">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Continue on error when specified substring found in response"
                          expressionType="Notify"
                          name="ContineOnErrorForMessage">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Continue on error when specified status code returned from web server"
                          expressionType="Notify"
                          name="ContineOnErrorForStatusCode">false</property>
                        <property
                          dataType="System.Boolean"
                          description="When error occurs no data is returned. Use this option to get content eventhough error occurs. When this option is checked you can't use [continue on error when specific string found in response] option"
                          expressionType="Notify"
                          name="ConsumeResponseOnError">false</property>
                        <property
                          dataType="System.Int32"
                          description="Status code to match when error occurs and ContineOnErrorForStatusCode option is true. If Response status code matches to this code then task continues to run"
                          expressionType="Notify"
                          name="ErrorStatusCodeToMatch">404</property>
                        <property
                          dataType="System.String"
                          description="Error substring to match when error occurs and ContineOnErrorForMessage option is true. If Response status code matches to this code then task continues to run"
                          expressionType="Notify"
                          name="ErrorSubstringToMatch"></property>
                        <property
                          dataType="System.String"
                          description="Cookie Container can be used to maintain state between multiple web requests. Example: You can login to site like wordpress and then extract any private page content by simply passing authentication cookies using this variable."
                          expressionType="Notify"
                          name="CookieContainerVariable"></property>
                        <property
                          dataType="System.Int32"
                          description="Http request Timeout in seconds. Set this to 0 if you want to use system default value (i.e. 100 seconds)"
                          expressionType="Notify"
                          name="RequestTimeout">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies which security protocol is supported for HTTPS communication. Using this option you can enable legacy protocol or enforce to use latest version of security protocol (Note: TLS 1.2 is only supported in SSIS 2014 or Higher)."
                          expressionType="Notify"
                          name="SecurityProtocol"
                          typeConverter="ZappySys.PowerPack.Common.HttpsSecurityProtocolType">0</property>
                        <property
                          dataType="System.Boolean"
                          description="Enable support for gzip or deflate compression. When you check this option compressed response automatically de-compressed saving bandwidth. This option is only valid if web server supports compressed response stream. Check your API documentation for more information."
                          expressionType="Notify"
                          name="EnableCompressionSupport">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Ignore SSL certificate related errors. Example: if you getting SSL/TLS errors because of certificate expired or certificate is not from trusted authority or certificate is self-signed. By checking this option you will not get SSL/TLS error."
                          expressionType="Notify"
                          name="IgnoreCertificateErrors">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Allow unsecure ciphers/suites and curves for SSLS/TLS communication. Use this option to communicate with web servers which needs legacy / unsecured ciphers support. This option is only trigged when you change default SSL/TLS Version on advanced settings tab."
                          expressionType="Notify"
                          name="AllowUnsecureSuite">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Use connection to pass credentials for authentication (e.g. Use UserID/Password or Use OAuth Protocol for token based approach)"
                          expressionType="Notify"
                          name="UseConnection">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specified how you want to loop through multiple pages returned by REST API."
                          expressionType="Notify"
                          name="PagingMode"
                          typeConverter="ZappySys.Common.RestApiPagingMode">3</property>
                        <property
                          dataType="System.Boolean"
                          description="If you wish to pass extracted pagination token or current page number in the body of next request then set this option to true. You can use [$pagetoken$] and [$pagetoken$] placeholders anywhere in the Body where you wish to insert extracted Page token. You must set encoded token you can use &lt;%nextlink_encoded%&gt; inside SuffixForNextUrl Property. If you dont use SuffixForNextUrl then raw nextLink or Token will be inserted inside the body. If you dont specify [$pagetoken$] placeholder in the body then NextPage Token will be appended at the end. NextPage Token is extracted by filter expression specified using property NextUrlSuffix"
                          expressionType="Notify"
                          name="EnablePageTokenForBody">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this to true if you wish to specify different URL, Header, Body or Filter for first page and next page (i.e. Paginated response). Some APIs like Amazon MWS, NetSuite, Zuora) you may need to set this to true."
                          expressionType="Notify"
                          name="HasDifferentNextPageInfo">false</property>
                        <property
                          dataType="System.String"
                          description="When HasDifferentNextPageInfo=true you can set this property to indicate first page and next page. You can specify different URL, Header, Body or Filter for first page and next page (i.e. Paginated response). Use [$tag$] as placeholder anywhere in the URL, Header, Body or Filter and at runtime system will replace it with correct value (first page or next page value). Syntax to specify placeholder for first page vs next page is like a connectionstring url=FirstPageValue|NextPageValue;header=FirstPageValue|NextPageValue;body=FirstPageValue|NextPageValue;filter=FirstPageValue|NextPageValue; You can use one or more key/value pairs to make things dynamic (e.g. url, header, body or filter)  .For example if you have pagination in your API and First URL is http://abc.com/api/items/get and to get more records you have to call http://abc.com/api/items/getNext then you can use [$tag$] as placeholder in the URL http://abc.com/api/items/[$tag$] and specify this property with first page tag and next page tag as url=get|getNext  (Tags are separated using vertical bar). "
                          expressionType="Notify"
                          name="PagePlaceholders"></property>
                        <property
                          dataType="System.String"
                          description="Use this property to set request body fragment for first page. HasDifferentNextPageInfo must be set to true to use this property."
                          expressionType="Notify"
                          name="FirstPageBodyPart"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.String"
                          description="Use this property to set request body fragment for any request after first request. HasDifferentNextPageInfo must be set to true to use this property."
                          expressionType="Notify"
                          name="NextPageBodyPart"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.String"
                          description="Expression to extract Maximum pages to loop through. Some APIs don't stop pagination and keep returning last page data when you try to read data after last page. Specify expression (e.g. $.page_count ) to read total pages to loop through using this property."
                          expressionType="Notify"
                          name="PagingMaxPagesExpr">$.result.total/50000</property>
                        <property
                          dataType="System.String"
                          description="e.g. Type page_num if URL looks like this =&gt; http://abc.com/?page_num=1&amp;sort=true  (page number via query string)&#xA;--or-- Type &lt;%page%&gt; if page number is inside URL path like this =&gt; http://abc.com/1/?sort=true  (e.g. replace page number in url with placeholder http://abc.com/&lt;%page%&gt;/?sort=true)&#xA;Page number will be incremented by one for next URL until last page is reached or [Max Page Number] is reached"
                          expressionType="Notify"
                          name="PageNumberAttributeNameInUrl">&lt;%page%&gt;</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum page number until which auto increment is allowed. Type zero for no limit. Next URL contains next page number (increment by one) until last page is detected or [Max Page Number] limit is reached."
                          expressionType="Notify"
                          name="MaxPageNumber">0</property>
                        <property
                          dataType="System.String"
                          description="Variable name which will hold starting page number. This is ignored if you useing parameter name from query string to indicate page number."
                          expressionType="Notify"
                          name="StartPageNumberVariable">User::UpsertedCount</property>
                        <property
                          dataType="System.Int32"
                          description="Page counter increment. By default next page is incremented by one if this value is zero. You can also enter negative number if you want to decrease page counter."
                          expressionType="Notify"
                          name="PageNumberIncrement">50000</property>
                        <property
                          dataType="System.Int32"
                          description="Specified how you want detect last page."
                          expressionType="Notify"
                          name="PagingEndStrategy"
                          typeConverter="ZappySys.Common.UrlPagingEndDetectionStrategy">3</property>
                        <property
                          dataType="System.Boolean"
                          description="Condition result to compare to detect last page. Set this property to True if you want detect last page if condition is true else set this to False."
                          expressionType="Notify"
                          name="LastPageWhenConditionEqualsTo">true</property>
                        <property
                          dataType="System.Int32"
                          description="Minimum bytes expected from response."
                          expressionType="Notify"
                          name="ResponseMinBytes">0</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum bytes from response."
                          expressionType="Notify"
                          name="ResponseMaxBytes">3</property>
                        <property
                          dataType="System.String"
                          description="Expected error message sub string from response."
                          expressionType="Notify"
                          name="ResponseErrorString">not found</property>
                        <property
                          dataType="System.Int32"
                          description="Expected status code from response when page number you trying to access not found."
                          expressionType="Notify"
                          name="ResponseStatusCode">404</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum JSON records to fetch. Set this value to 0 for all records"
                          expressionType="Notify"
                          name="MaxRows">0</property>
                        <property
                          dataType="System.String"
                          description="Enter expression here to filter data.(Example:  $.Users[*].UserName ) This will fetch User names from users records"
                          expressionType="Notify"
                          name="Filter"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">$.result.rows[*]</property>
                        <property
                          dataType="System.Boolean"
                          description="Use this option to include parent properties (Non array) in the output along with Filtered Rows"
                          expressionType="Notify"
                          name="IncludeParentColumns">false</property>
                        <property
                          dataType="System.Boolean"
                          description="By default child and parent information is not included in the output if children not found for specified expression. For example if you want to extract all orders from all customers nodes then you can type $.Customers[*].Orders[*]. This will fetch all orders from all customers. By default customers records without orders wont be included in the output. If you want to include those customers where orders not found then check this option (Output null information for order attributes). This behavior is similar to LEFT OUTER JOIN in SQL (Left side is parent, right side is child). This option is ***resource intensive*** so only check if you really care about this behavior."
                          expressionType="Notify"
                          name="IncludeParentColumnsWhenChildMissing">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to true if you want to output parent columns which are array. By default any parent column which is an array is not included in output. See also FilterForParentColumnsWithArrayType property if you set this property"
                          expressionType="Notify"
                          name="IncludeParentColumnsWithArrayType">false</property>
                        <property
                          dataType="System.String"
                          description="Filter expression to extract value form parent"
                          expressionType="Notify"
                          name="FilterForParentColumnsWithArrayType"></property>
                        <property
                          dataType="System.String"
                          description="Prefix for parent column name. This option is only valid if you have set IncludeParentColumns=True"
                          expressionType="Notify"
                          name="ParentColumnPrefix">P_</property>
                        <property
                          dataType="System.Boolean"
                          description="Throw error if property name specified in filter expression is missing. By default it will ignore any missing property errors."
                          expressionType="Notify"
                          name="ThrowErrorIfPropertyMissing">false</property>
                        <property
                          dataType="System.Int32"
                          description="This property how many nested levels should be scanned to fetch various properties. 0=Scan all child levels."
                          expressionType="Notify"
                          name="MaxLevelsToScan">0</property>
                        <property
                          dataType="System.String"
                          description="List comma separated property names from JSON document which you want to exclude from output. Specify parent property name to exclude all child nodes."
                          expressionType="Notify"
                          name="ExcludedProperties"></property>
                        <property
                          dataType="System.String"
                          description="Property level separator used in generated property name (separator for outer properties - Above selected filter node). Use this if default separator is producing duplicate property name which is conflicting with existing name."
                          expressionType="Notify"
                          name="LevelSeparator">_</property>
                        <property
                          dataType="System.Boolean"
                          description="Enables deep array flattening for selected filtered hierarchy. When you turn on this property it will flatten each property of each array item and expose as column (e.g. If you have Filter set as $.customers[*] and for each customer you have an array of Addresses then you may see output columns like Addresses.1.City, Addresses.1.State, Addresses.2.City, Addresses.2.State .... Addresses.N.City, Addresses.N.State). You can control how many array items you want to flatten by setting MaxArrayItemsToFlatten property."
                          expressionType="Notify"
                          name="EnableArrayFlattening">false</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum number of array items to flatten. inner array flattening. Adjust this property to control how many columns being generated. This option is ignored if you set EnableArrayFlattening=false"
                          expressionType="Notify"
                          name="MaxArrayItemsToFlatten">10</property>
                        <property
                          dataType="System.Int32"
                          description="Compression format for source file (e.g. gzip, zip)"
                          expressionType="Notify"
                          name="FileCompressionType"
                          typeConverter="ZappySys.Common.FileCompressionType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Array Transformation you want to apply. Useful for case when you have 2-Dimensional arrays with rows/columns in separate arrays."
                          expressionType="Notify"
                          name="ArrayTransformationType"
                          typeConverter="ZappySys.Json.ArrayTransformType">0</property>
                        <property
                          dataType="System.String"
                          description="Filter expression to use to extract column names for array transformation."
                          expressionType="Notify"
                          name="ArrayTransColumnNameFilter">$.result.rows[*]</property>
                        <property
                          dataType="System.String"
                          description="Filter expression for row values (Not applicable for simple array transformation)."
                          expressionType="Notify"
                          name="ArrayTransRowValueFilter">$.result.rows[*]</property>
                        <property
                          dataType="System.Boolean"
                          description="When you have 2D array but don't have column list specified in a separate array then use this option (e.g. { arr: [[10,11],[21,22]] } )."
                          expressionType="Notify"
                          name="ArrayTransEnableCustomColumns">true</property>
                        <property
                          dataType="System.String"
                          description="When you have 2D array but don't have column list specified in a separate array then use specify column names here. Use comma separated list (e.g col1,col2,col3 ). Column name Order must match value order."
                          expressionType="Notify"
                          name="ArrayTransCustomColumns">MetricID</property>
                        <property
                          dataType="System.String"
                          description="Specifies how custom date formatted strings are parsed when reading JSON."
                          expressionType="Notify"
                          name="DateFormatString"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies how date formatted strings, e.g. Date(1198908717056) and 2012-03-21T05:40Z, are parsed when reading JSON."
                          expressionType="Notify"
                          name="DateParseHandling"
                          typeConverter="ZappySys.Common.DateParseHandling">1</property>
                        <property
                          dataType="System.Boolean"
                          description="Output as raw JSON document rather than parsing individual fields. This option is helpful if you have documents stored in a file and you want to pass them downstream as raw JSON string rather than parsing into columns."
                          expressionType="Notify"
                          name="OutputRawDocument">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indent JSON output so its easy to read."
                          expressionType="Notify"
                          name="IndentOutput">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to true if you want to output FilePath. This option is ignored when you consume DirectValue or data from Url rather than local files. Output column name will be __FilePath"
                          expressionType="Notify"
                          name="OutputFilePath">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to true if you want to output FileName. This option is ignored when you consume DirectValue or data from Url rather than local files. Output column name will be __FileName"
                          expressionType="Notify"
                          name="OutputFileName">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to true if you want to move processed file to archive folder."
                          expressionType="Notify"
                          name="EnableArchiveFile">false</property>
                        <property
                          dataType="System.String"
                          description="Folder path where you want to move processed file."
                          expressionType="Notify"
                          name="ArchiveFolderPath"></property>
                        <property
                          dataType="System.Boolean"
                          description="Folder path where you want to move processed file."
                          expressionType="Notify"
                          name="OverwriteFileInArchiveFolder">false</property>
                        <property
                          dataType="System.String"
                          description="File naming convention for archived file. By default it will same name as original source file processed. But you can control naming format using {%name%} and {%ext%} placeholders. e.g. {%name%}_processed{%ext%} or {%name%}{%ext%}.{{System::ContainerStartTime,yyyyMMdd_HHmmss_fff}}"
                          expressionType="Notify"
                          name="ArchiveFileNamingConvention"></property>
                        <property
                          dataType="System.Boolean"
                          description="When this property is true then Column is converted to Row. Pivoted names will appear under  Pivot_Name column and values will appear under Pivot_Value field."
                          expressionType="Notify"
                          name="EnablePivot">false</property>
                        <property
                          dataType="System.Int32"
                          description="Metadata scan mode controls how data type and length is determined. By default few records scanned to determine datatype/length. Changing ScanMode affects length/datatype accuracy."
                          expressionType="Notify"
                          name="MetaDataScanMode"
                          typeConverter="ZappySys.Common.Data.MetaDataScanMode">4</property>
                        <property
                          dataType="System.Int32"
                          description="Length for all string column. This option is only valid for MetaDataScanMode=Custom"
                          expressionType="Notify"
                          name="MetaDataCustomLength">1000</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.JsonSource</property>
                        <property
                          dataType="System.Int32"
                          description="Encoding of source file"
                          expressionType="Notify"
                          name="Encoding"
                          typeConverter="ZappySys.Common.EncodingType">0</property>
                        <property
                          dataType="System.String"
                          description="Character set for text (e.g. utf-8 )"
                          expressionType="Notify"
                          name="CharacterSet"></property>
                        <property
                          dataType="System.Boolean"
                          description="By default process stops with error if specified local file is not found. Set this property to true if you wish to continue rather than throwing file not found error."
                          expressionType="Notify"
                          name="ContinueOnFileNotFoundError">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Check this option if you want to upload file(s) (i.e. POST RAW file data) or send data using Multi-Part encoding method (i.e. Content-Type: multipart/form-data). Multi-Part request allows you to mix key/value and upload files in same request. On the other hand raw upload allows only single file upload (without any key/value) &#xA;&#xA;==== Raw Upload (Content-Type: application/octet-stream) =====   &#xA;To upload single file in raw mode check this option and specify full file path starting with @ sign in the Body (e.g.  @c:\data\myfile.zip ) &#xA;&#xA;==== Form-Data / Multipart Upload (Content-Type: multipart/form-data) =====   &#xA;To treat your Request data as multi part fields you must specify key/value pairs separated by new lines into RequestData field (i.e. Body). Each key value pair is entered on new-line and key/value are separated using equal sign (=). Preceding and trailing spaces are ignored also blank lines are ignored. &#xA;If field value has some any special character(s) then use escape sequence (e.g. For NewLine: \r\n, For Tab: \t, For at (@): \@). When value of any field starts with at sign (@) its automatically treated as File you want to upload. By default file content type is determined based on extension however you can supply content type manually for any field using this way [ fieldname.Content-Type=some content type ]. In below example we have supplied Content-Type for file2 and SomeField1, all other fields are using default content-type.&#xA;See below Example of uploading multiple files along with additional fields.&#xA;&#xA;file1=@c:\data\Myfile1.txt&#xA;file2=@c:\data\Myfile2.json&#xA;file2.Content-Type=application/json&#xA;SomeField1=aaaaaaa&#xA;SomeField1.Content-Type=text/plain&#xA;SomeField2=12345&#xA;SomeFieldWithNewLineAndTab=This is line1\r\nThis is line2\r\nThis is \ttab \ttab \ttab&#xA;SomeFieldStartingWithAtSign=\@MyTwitterHandle&#xA;"
                          expressionType="Notify"
                          name="IsMultiPartUpload">false</property>
                        <property
                          dataType="System.String"
                          description="Expression to extract Maximum records to loop through. Some APIs don't stop pagination and keep returning last page data when you try to read data after last page. Specify expression (e.g. $.total_rows ) to read total pages to loop through using this property. This setting is ignored if you set PagingMaxPagesExpr."
                          expressionType="Notify"
                          name="PagingMaxRowsExpr"></property>
                        <property
                          dataType="System.String"
                          description="When you enable PagingMaxRowsExpr (end pagination based on MaxRowCount) then you need to count records coming in each response. This expression extract all rows found under specified expression (e.g. $.orders[*] if all records found under orders node)."
                          expressionType="Notify"
                          name="PagingMaxRowsDataPathExpr"></property>
                        <property
                          dataType="System.Boolean"
                          description="When this option is checked, system allows to parse large number (Higher than Int64) in JSON document (i.e. { id: 76000009353950433247780 } ). If you do not turn on this option then it may throw error if large number is encountered. This option is SLOW because it has to perform additional checks in order to avoid Large number overflow error so do not turn on unless you getting Large number error."
                          expressionType="Notify"
                          name="EnableBigNumberHandling">false</property>
                      </properties>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Lead search\Search Leads.Outputs[JsonSourceOutput]"
                          errorOrTruncationOperation="Error"
                          errorRowDisposition="FailComponent"
                          name="JsonSourceOutput"
                          truncationRowDisposition="FailComponent">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\Search Leads.Outputs[JsonSourceOutput].Columns[etag]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Lead search\Search Leads.Outputs[JsonSourceOutput].ExternalColumns[etag]"
                              length="68"
                              lineageId="Package\Iterate Offices\Sequence Container\Lead search\Search Leads.Outputs[JsonSourceOutput].Columns[etag]"
                              name="etag" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\Search Leads.Outputs[JsonSourceOutput].Columns[id]"
                              dataType="i4"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Lead search\Search Leads.Outputs[JsonSourceOutput].ExternalColumns[id]"
                              lineageId="Package\Iterate Offices\Sequence Container\Lead search\Search Leads.Outputs[JsonSourceOutput].Columns[id]"
                              name="id" />
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\Search Leads.Outputs[JsonSourceOutput].ExternalColumns[system_record_state]"
                              dataType="wstr"
                              length="24"
                              name="system_record_state" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\Search Leads.Outputs[JsonSourceOutput].ExternalColumns[system_ctime]"
                              dataType="wstr"
                              length="40"
                              name="system_ctime" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\Search Leads.Outputs[JsonSourceOutput].ExternalColumns[system_modtime]"
                              dataType="wstr"
                              length="40"
                              name="system_modtime" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\Search Leads.Outputs[JsonSourceOutput].ExternalColumns[name]"
                              dataType="wstr"
                              length="144"
                              name="name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\Search Leads.Outputs[JsonSourceOutput].ExternalColumns[email_address]"
                              dataType="wstr"
                              length="180"
                              name="email_address" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\Search Leads.Outputs[JsonSourceOutput].ExternalColumns[phone_number]"
                              dataType="wstr"
                              length="80"
                              name="phone_number" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\Search Leads.Outputs[JsonSourceOutput].ExternalColumns[fax_number]"
                              dataType="wstr"
                              length="1020"
                              name="fax_number" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\Search Leads.Outputs[JsonSourceOutput].ExternalColumns[is_dnd]"
                              dataType="wstr"
                              length="80"
                              name="is_dnd" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\Search Leads.Outputs[JsonSourceOutput].ExternalColumns[type]"
                              dataType="wstr"
                              length="28"
                              name="type" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\Search Leads.Outputs[JsonSourceOutput].ExternalColumns[last_contacted_date]"
                              dataType="wstr"
                              length="80"
                              name="last_contacted_date" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\Search Leads.Outputs[JsonSourceOutput].ExternalColumns[name_last]"
                              dataType="wstr"
                              length="1020"
                              name="name_last" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\Search Leads.Outputs[JsonSourceOutput].ExternalColumns[address_postal]"
                              dataType="wstr"
                              length="220"
                              name="address_postal" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\Search Leads.Outputs[JsonSourceOutput].ExternalColumns[address]"
                              dataType="wstr"
                              length="384"
                              name="address" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\Search Leads.Outputs[JsonSourceOutput].ExternalColumns[interest_level]"
                              dataType="wstr"
                              length="1020"
                              name="interest_level" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\Search Leads.Outputs[JsonSourceOutput].ExternalColumns[marketing_birthday]"
                              dataType="wstr"
                              length="1020"
                              name="marketing_birthday" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\Search Leads.Outputs[JsonSourceOutput].ExternalColumns[marketing_enquiry_source]"
                              dataType="wstr"
                              length="1020"
                              name="marketing_enquiry_source" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\Search Leads.Outputs[JsonSourceOutput].ExternalColumns[marketing_gender]"
                              dataType="wstr"
                              length="1020"
                              name="marketing_gender" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\Search Leads.Outputs[JsonSourceOutput].ExternalColumns[marketing_postcode]"
                              dataType="wstr"
                              length="80"
                              name="marketing_postcode" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\Search Leads.Outputs[JsonSourceOutput].ExternalColumns[name_legal]"
                              dataType="wstr"
                              length="1020"
                              name="name_legal" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\Search Leads.Outputs[JsonSourceOutput].ExternalColumns[name_salutation]"
                              dataType="wstr"
                              length="1020"
                              name="name_salutation" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\Search Leads.Outputs[JsonSourceOutput].ExternalColumns[name_addressee]"
                              dataType="wstr"
                              length="1020"
                              name="name_addressee" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\Search Leads.Outputs[JsonSourceOutput].ExternalColumns[system_owner_user.id]"
                              dataType="wstr"
                              length="20"
                              name="system_owner_user.id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\Search Leads.Outputs[JsonSourceOutput].ExternalColumns[system_owner_user._name]"
                              dataType="wstr"
                              length="36"
                              name="system_owner_user._name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\Search Leads.Outputs[JsonSourceOutput].ExternalColumns[system_owner_user._first_name]"
                              dataType="wstr"
                              length="20"
                              name="system_owner_user._first_name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\Search Leads.Outputs[JsonSourceOutput].ExternalColumns[system_owner_user._last_name]"
                              dataType="wstr"
                              length="12"
                              name="system_owner_user._last_name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\Search Leads.Outputs[JsonSourceOutput].ExternalColumns[system_owner_user._email_address]"
                              dataType="wstr"
                              length="92"
                              name="system_owner_user._email_address" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\Search Leads.Outputs[JsonSourceOutput].ExternalColumns[system_modified_user.id]"
                              dataType="wstr"
                              length="20"
                              name="system_modified_user.id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\Search Leads.Outputs[JsonSourceOutput].ExternalColumns[system_modified_user._name]"
                              dataType="wstr"
                              length="48"
                              name="system_modified_user._name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\Search Leads.Outputs[JsonSourceOutput].ExternalColumns[system_modified_user._first_name]"
                              dataType="wstr"
                              length="24"
                              name="system_modified_user._first_name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\Search Leads.Outputs[JsonSourceOutput].ExternalColumns[system_modified_user._last_name]"
                              dataType="wstr"
                              length="24"
                              name="system_modified_user._last_name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\Search Leads.Outputs[JsonSourceOutput].ExternalColumns[system_modified_user._email_address]"
                              dataType="wstr"
                              length="128"
                              name="system_modified_user._email_address" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\Search Leads.Outputs[JsonSourceOutput].ExternalColumns[system_created_user.id]"
                              dataType="wstr"
                              length="20"
                              name="system_created_user.id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\Search Leads.Outputs[JsonSourceOutput].ExternalColumns[system_created_user._name]"
                              dataType="wstr"
                              length="36"
                              name="system_created_user._name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\Search Leads.Outputs[JsonSourceOutput].ExternalColumns[system_created_user._first_name]"
                              dataType="wstr"
                              length="20"
                              name="system_created_user._first_name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\Search Leads.Outputs[JsonSourceOutput].ExternalColumns[system_created_user._last_name]"
                              dataType="wstr"
                              length="12"
                              name="system_created_user._last_name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\Search Leads.Outputs[JsonSourceOutput].ExternalColumns[system_created_user._email_address]"
                              dataType="wstr"
                              length="92"
                              name="system_created_user._email_address" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\Search Leads.Outputs[JsonSourceOutput].ExternalColumns[contact_image]"
                              dataType="wstr"
                              length="1020"
                              name="contact_image" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\Search Leads.Outputs[JsonSourceOutput].ExternalColumns[marketing_enquiry_method]"
                              dataType="wstr"
                              length="1020"
                              name="marketing_enquiry_method" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\Search Leads.Outputs[JsonSourceOutput].ExternalColumns[_security_user_rights]"
                              dataType="wstr"
                              length="260"
                              name="_security_user_rights" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\Search Leads.Outputs[JsonSourceOutput].ExternalColumns[etag]"
                              dataType="wstr"
                              length="68"
                              name="etag" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\Search Leads.Outputs[JsonSourceOutput].ExternalColumns[id]"
                              dataType="wstr"
                              length="24"
                              name="id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\Search Leads.Outputs[JsonSourceOutput].ExternalColumns[__FileName]"
                              dataType="wstr"
                              length="600"
                              name="__FileName" />
                          </externalMetadataColumns>
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Lead search\Search Leads.Outputs[JsonSource Error Output]"
                          isErrorOut="true"
                          name="JsonSource Error Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\Search Leads.Outputs[JsonSource Error Output].Columns[etag]"
                              dataType="wstr"
                              length="68"
                              lineageId="Package\Iterate Offices\Sequence Container\Lead search\Search Leads.Outputs[JsonSource Error Output].Columns[etag]"
                              name="etag" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\Search Leads.Outputs[JsonSource Error Output].Columns[id]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Lead search\Search Leads.Outputs[JsonSource Error Output].Columns[id]"
                              name="id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\Search Leads.Outputs[JsonSource Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Lead search\Search Leads.Outputs[JsonSource Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\Search Leads.Outputs[JsonSource Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Lead search\Search Leads.Outputs[JsonSource Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\Search Leads.Outputs[JsonSource Error Output].Columns[ErrorColumnName]"
                              codePage="1252"
                              dataType="str"
                              length="128"
                              lineageId="Package\Iterate Offices\Sequence Container\Lead search\Search Leads.Outputs[JsonSource Error Output].Columns[ErrorColumnName]"
                              name="ErrorColumnName" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\Search Leads.Outputs[JsonSource Error Output].Columns[ErrorMessage]"
                              dataType="wstr"
                              length="1024"
                              lineageId="Package\Iterate Offices\Sequence Container\Lead search\Search Leads.Outputs[JsonSource Error Output].Columns[ErrorMessage]"
                              name="ErrorMessage" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Lead search\SQL Sort"
                      componentClassID="Microsoft.Sort"
                      contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
                      name="SQL Sort"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                          name="EliminateDuplicates">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the maximum number of threads to use for sorting."
                          expressionType="Notify"
                          name="MaximumThreads">-1</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Lead search\SQL Sort.Inputs[Sort Input]"
                          name="Sort Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\SQL Sort.Inputs[Sort Input].Columns[Id]"
                              cachedDataType="i4"
                              cachedName="Id"
                              lineageId="Package\Iterate Offices\Sequence Container\Lead search\Existing Leads from SQL.Outputs[OLE DB Source Output].Columns[Id]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">1</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\SQL Sort.Inputs[Sort Input].Columns[AccountId]"
                              cachedDataType="i2"
                              cachedName="AccountId"
                              lineageId="Package\Iterate Offices\Sequence Container\Lead search\Existing Leads from SQL.Outputs[OLE DB Source Output].Columns[AccountId]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\SQL Sort.Inputs[Sort Input].Columns[etaglead]"
                              cachedDataType="wstr"
                              cachedLength="250"
                              cachedName="etaglead"
                              lineageId="Package\Iterate Offices\Sequence Container\Lead search\Existing Leads from SQL.Outputs[OLE DB Source Output].Columns[etaglead]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Lead search\SQL Sort.Outputs[Sort Output]"
                          isSorted="true"
                          name="Sort Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\SQL Sort.Outputs[Sort Output].Columns[Id]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Lead search\SQL Sort.Outputs[Sort Output].Columns[Id]"
                              name="Id"
                              sortKeyPosition="1">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Iterate Offices\Sequence Container\Lead search\Existing Leads from SQL.Outputs[OLE DB Source Output].Columns[Id]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\SQL Sort.Outputs[Sort Output].Columns[AccountId]"
                              dataType="i2"
                              lineageId="Package\Iterate Offices\Sequence Container\Lead search\SQL Sort.Outputs[Sort Output].Columns[AccountId]"
                              name="AccountId">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Iterate Offices\Sequence Container\Lead search\Existing Leads from SQL.Outputs[OLE DB Source Output].Columns[AccountId]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\SQL Sort.Outputs[Sort Output].Columns[etaglead]"
                              dataType="wstr"
                              length="250"
                              lineageId="Package\Iterate Offices\Sequence Container\Lead search\SQL Sort.Outputs[Sort Output].Columns[etaglead]"
                              name="etaglead">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Iterate Offices\Sequence Container\Lead search\Existing Leads from SQL.Outputs[OLE DB Source Output].Columns[etaglead]}</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Lead search\Trash Destination"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Trash Destination; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="The trash destination is used to create dummy destination which ends data path without any processing."
                      name="Trash Destination"
                      version="2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.String"
                          description="File path where you want to save data"
                          expressionType="Notify"
                          name="FilePath"></property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates if you want to save input data to comma separated text file"
                          expressionType="Notify"
                          name="SaveDataToFile">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Append data to file"
                          expressionType="Notify"
                          name="Append">false</property>
                        <property
                          dataType="System.String"
                          description="RowSeparator"
                          expressionType="Notify"
                          name="RowSeparator">{NEWLINE}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether you want to overwrite target file if exists"
                          expressionType="Notify"
                          name="OverwriteFileIfExists">true</property>
                        <property
                          dataType="System.String"
                          description="ColumnSeparator"
                          expressionType="Notify"
                          name="ColumnSeparator">,</property>
                        <property
                          dataType="System.Boolean"
                          description="SupportUnicode"
                          expressionType="Notify"
                          name="SupportUnicode">true</property>
                        <property
                          dataType="System.Boolean"
                          description="ColumnNamesInFirstRow"
                          expressionType="Notify"
                          name="ColumnNamesInFirstRow">true</property>
                        <property
                          dataType="System.Boolean"
                          description="QuoteDataIfNeeded"
                          expressionType="Notify"
                          name="QuoteDataIfNeeded">true</property>
                        <property
                          dataType="System.String"
                          description="Date time format string for any column with DT_DBDATETIME, DT_DBDATETIME2 or DB_DATE format"
                          expressionType="Notify"
                          name="DateTimeFormat">yyyy-MM-dd HH:mm:ss</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.TrashDestination</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Lead search\Trash Destination.Inputs[TrashDestinationInput]"
                          hasSideEffects="true"
                          name="TrashDestinationInput">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Lead search\Trash Destination 1"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Trash Destination; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="The trash destination is used to create dummy destination which ends data path without any processing."
                      name="Trash Destination 1"
                      version="2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.String"
                          description="File path where you want to save data"
                          expressionType="Notify"
                          name="FilePath"></property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates if you want to save input data to comma separated text file"
                          expressionType="Notify"
                          name="SaveDataToFile">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Append data to file"
                          expressionType="Notify"
                          name="Append">false</property>
                        <property
                          dataType="System.String"
                          description="RowSeparator"
                          expressionType="Notify"
                          name="RowSeparator">{NEWLINE}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether you want to overwrite target file if exists"
                          expressionType="Notify"
                          name="OverwriteFileIfExists">true</property>
                        <property
                          dataType="System.String"
                          description="ColumnSeparator"
                          expressionType="Notify"
                          name="ColumnSeparator">,</property>
                        <property
                          dataType="System.Boolean"
                          description="SupportUnicode"
                          expressionType="Notify"
                          name="SupportUnicode">true</property>
                        <property
                          dataType="System.Boolean"
                          description="ColumnNamesInFirstRow"
                          expressionType="Notify"
                          name="ColumnNamesInFirstRow">true</property>
                        <property
                          dataType="System.Boolean"
                          description="QuoteDataIfNeeded"
                          expressionType="Notify"
                          name="QuoteDataIfNeeded">true</property>
                        <property
                          dataType="System.String"
                          description="Date time format string for any column with DT_DBDATETIME, DT_DBDATETIME2 or DB_DATE format"
                          expressionType="Notify"
                          name="DateTimeFormat">yyyy-MM-dd HH:mm:ss</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.TrashDestination</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Lead search\Trash Destination 1.Inputs[TrashDestinationInput]"
                          hasSideEffects="true"
                          name="TrashDestinationInput">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Lead search\Upsert Leads"
                      componentClassID="Microsoft.OLEDBCommand"
                      contactInfo="OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
                      description="Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time."
                      name="Upsert Leads"
                      usesDispositions="true"
                      version="2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">0</property>
                        <property
                          dataType="System.String"
                          description="The SQL command to be executed."
                          expressionType="Notify"
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">exec [UpsertLead] ?,?,?</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Iterate Offices\Sequence Container\Lead search\Upsert Leads.Connections[OleDbConnection]"
                          connectionManagerID="Package.ConnectionManagers[colsqlbi01v.Entities]"
                          connectionManagerRefId="Package.ConnectionManagers[colsqlbi01v.Entities]"
                          description="The OLE DB runtime connection used to access the database."
                          name="OleDbConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Lead search\Upsert Leads.Inputs[OLE DB Command Input]"
                          errorOrTruncationOperation="Command Execution"
                          errorRowDisposition="FailComponent"
                          hasSideEffects="true"
                          name="OLE DB Command Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\Upsert Leads.Inputs[OLE DB Command Input].Columns[Origin]"
                              cachedDataType="i4"
                              cachedName="Origin"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Lead search\Upsert Leads.Inputs[OLE DB Command Input].ExternalColumns[@Origin]"
                              lineageId="Package\Iterate Offices\Sequence Container\Lead search\Add accountid and origin.Outputs[Derived Column Output].Columns[Origin]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\Upsert Leads.Inputs[OLE DB Command Input].Columns[AccountId]"
                              cachedDataType="i4"
                              cachedName="AccountId"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Lead search\Upsert Leads.Inputs[OLE DB Command Input].ExternalColumns[@accountid]"
                              lineageId="Package\Iterate Offices\Sequence Container\Lead search\Add accountid and origin.Outputs[Derived Column Output].Columns[AccountId]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\Upsert Leads.Inputs[OLE DB Command Input].Columns[__DOCUMENT__]"
                              cachedDataType="nText"
                              cachedName="__DOCUMENT__"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Lead search\Upsert Leads.Inputs[OLE DB Command Input].ExternalColumns[@body]"
                              lineageId="Package\Iterate Offices\Sequence Container\Lead search\record.Outputs[JsonParserTransformOutput].Columns[__DOCUMENT__]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\Upsert Leads.Inputs[OLE DB Command Input].ExternalColumns[@Origin]"
                              dataType="i2"
                              name="@Origin">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                                  name="DBParamInfoFlags">81</property>
                              </properties>
                            </externalMetadataColumn>
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\Upsert Leads.Inputs[OLE DB Command Input].ExternalColumns[@body]"
                              dataType="nText"
                              name="@body">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                                  name="DBParamInfoFlags">193</property>
                              </properties>
                            </externalMetadataColumn>
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\Upsert Leads.Inputs[OLE DB Command Input].ExternalColumns[@accountid]"
                              dataType="i4"
                              name="@accountid">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                                  name="DBParamInfoFlags">81</property>
                              </properties>
                            </externalMetadataColumn>
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Lead search\Upsert Leads.Outputs[OLE DB Command Output]"
                          exclusionGroup="1"
                          name="OLE DB Command Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Lead search\Upsert Leads.Inputs[OLE DB Command Input]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Lead search\Upsert Leads.Outputs[OLE DB Command Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="OLE DB Command Error Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Lead search\Upsert Leads.Inputs[OLE DB Command Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\Upsert Leads.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Lead search\Upsert Leads.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\Upsert Leads.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Lead search\Upsert Leads.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Lead search\Web API Destination"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Web API Destination; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="The Web API destination can be used to send data to Web API URL (e.g. Submit or POST data to REST API/SOAP or other HTTP/HTTPS endpoints)"
                      name="Web API Destination"
                      usesDispositions="true"
                      version="5">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.String"
                          description="API URL you want to access"
                          expressionType="Notify"
                          name="HttpRequestUrl">{{User::RexAPIWebURL}}</property>
                        <property
                          dataType="System.String"
                          description="Http Web Request Method (e.g. POST, GET, PUT, LIST, DELETE...). Refer your API documentation if you are not sure which method you have to use."
                          expressionType="Notify"
                          name="HttpRequestMethod">POST</property>
                        <property
                          dataType="System.String"
                          description="Set this if you want to set custom Http headers. You may use variable anywhere in the header value using syntax {{User::YourVarName}}. Syntax of Header key value pair is : &amp;lt;request&amp;gt;&amp;lt;header&amp;gt;&amp;lt;name&amp;gt;x-myheader-1&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;AAA&amp;lt;/value&amp;gt;&amp;lt;/header&amp;gt; &amp;lt;header&amp;gt;&amp;lt;name&amp;gt;x-myheader-2&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;BBB&amp;lt;/value&amp;gt;&amp;lt;/header&amp;gt;&amp;lt;/request&amp;gt;"
                          expressionType="Notify"
                          name="HttpHeaders"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">&lt;request&gt;&lt;header&gt;&lt;name&gt;Accept&lt;/name&gt;&lt;value&gt;*/*&lt;/value&gt;&lt;/header&gt;&lt;header&gt;&lt;name&gt;Cache-Control&lt;/name&gt;&lt;value&gt;no-cache&lt;/value&gt;&lt;/header&gt;&lt;header&gt;&lt;name&gt;X-App-Identifier&lt;/name&gt;&lt;value&gt;client:spicerhaart:{{System::PackageName}}:{{System::TaskName}}&lt;/value&gt;&lt;/header&gt;&lt;/request&gt;</property>
                        <property
                          dataType="System.String"
                          description="User defined data you wish to send along with your HTTP Request (e.g. Upload file data, Form POST data). Usually you have to set content-type of your data but if you select RequestMethod=POST then system will automatically set content-type=application/x-www-form-urlencoded."
                          expressionType="Notify"
                          name="HttpRequestData"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies content type for data you wish to POST. If you select Default option then system default content type will be used (i.e. application/x-www-form-urlencoded). If you specify Content-Type header along with this option then header value takes precedence."
                          expressionType="Notify"
                          name="HttpRequestContentType"
                          typeConverter="ZappySys.Common.Web.HttpRequestContentType">2</property>
                        <property
                          dataType="System.Boolean"
                          description="If this option is true then component will continue without exception on 404 error (Url not found). This allows you to consume data gracefully."
                          expressionType="Notify"
                          name="ContinueOnUrlNotFoundError">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Ignore SSL certificate related errors. Example: if you getting SSL/TLS errors because of certificate expired or certificate is not from trusted authority or certificate is self-signed. By checking this option you will not get SSL/TLS error."
                          expressionType="Notify"
                          name="IgnoreCertificateErrors">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Allow unsecure ciphers/suites and curves for SSLS/TLS communication. Use this option to communicate with web servers which needs legacy / unsecured ciphers support. This option is only trigged when you change default SSL/TLS Version on advanced settings tab."
                          expressionType="Notify"
                          name="AllowUnsecureSuite">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Enable support for gzip or deflate compression. When you check this option compressed response automatically de-compressed saving bandwidth. This option is only valid if web server supports compressed response stream. Check your API documentation for more information."
                          expressionType="Notify"
                          name="EnableCompressionSupport">true</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies which security protocol is supported for HTTPS communication. Using this option you can enable legacy protocol or enforce to use latest version of security protocol (Note: TLS 1.2 is only supported in SSIS 2014 or Higher)."
                          expressionType="Notify"
                          name="SecurityProtocol"
                          typeConverter="ZappySys.PowerPack.Common.HttpsSecurityProtocolType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Wait time in milliseconds (Pause after each request). 0=No wait. Use this delay time if your API has limit on how many requests you can make in certain time frame."
                          expressionType="Notify"
                          name="WaitTime">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you redirect error to error output by default you get additional information in ErrorMessage column. Check this option if you need exact Response Body (Useful if its in JSON/XML format which needs to be parsed for additional information for later step)."
                          expressionType="Notify"
                          name="OnErrorOutputResponseBody">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Enable multiple requests using parallel threads."
                          expressionType="Notify"
                          name="EnableParallelRequests">true</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum parallel threads to use for processing multiple web requests."
                          expressionType="Notify"
                          name="MaxParallelThreads">3</property>
                        <property
                          dataType="System.Boolean"
                          description="By default one request is sent for each input row. If your API supports multiple records in a single call via HTTP Body then enable this setting. See also BodyBatchSize, BodyHeader, BodyFooter and BodyRowSeparator property."
                          expressionType="Notify"
                          name="EnableBodyBatch">false</property>
                        <property
                          dataType="System.String"
                          description="When you have to wrap input content between opening and closing tags for each call then set this property to specify opening for body content. For Example if you want to build Body like this (send max 100 rows per call) ==&gt; { records : [ {...}, {...}, {...} ] } then you can set BatchSize=100, BodyHeader as &quot;{ records: [&quot; , BodyFooter as &quot;] }&quot; and BodyRowSeperator as comma {,}. This property is ignored if EnableBodyBatch=false."
                          expressionType="Notify"
                          name="BodyHeader"></property>
                        <property
                          dataType="System.String"
                          description="When you have to wrap input content between opening and closing tags for each call then set this property to specify closing for body content. For Example if you want to build Body like this (send max 100 rows per call) ==&gt; { records : [ {...}, {...}, {...} ] } then you can set BatchSize=100, BodyHeader as &quot;{ records: [&quot; , BodyFooter as &quot;] }&quot; and BodyRowSeperator as comma {,}. This property is ignored if EnableBodyBatch=false."
                          expressionType="Notify"
                          name="BodyFooter"></property>
                        <property
                          dataType="System.Int32"
                          description="If your API supports multiple records via HTTP Body then change this setting &gt; 1 to include multiple upstream records into single call. See also BodyHeader, BodyFooter and BodyRowSeparator property. This property is ignored if EnableBodyBatch=false."
                          expressionType="Notify"
                          name="BodyBatchSize">100</property>
                        <property
                          dataType="System.String"
                          description="When you submit multiple rows in a batch you can separate multiple documents / records using custom separator (e.g. in JSON Array you can use comma {,} as record separator if POST document is in array format [ {...}, {...}, {...} ] ). For last row of batch blank separator is used."
                          expressionType="Notify"
                          name="BodyRowSeparator"></property>
                        <property
                          dataType="System.Boolean"
                          description="Returns response data as binary data (e.g. Byte Array). Check this option is response is Zip file, Image file or any non text data which needs to be exported as raw data without any encoding."
                          expressionType="Notify"
                          name="TreatResponseAsBinary">false</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.WebApiDestination</property>
                        <property
                          dataType="System.Boolean"
                          description="Check this option if you want to upload file(s) (i.e. POST RAW file data) or send data using Multi-Part encoding method (i.e. Content-Type: multipart/form-data). Multi-Part request allows you to mix key/value and upload files in same request. On the other hand raw upload allows only single file upload (without any key/value) &#xA;&#xA;==== Raw Upload (Content-Type: application/octet-stream) =====   &#xA;To upload single file in raw mode check this option and specify full file path starting with @ sign in the Body (e.g.  @c:\data\myfile.zip ) &#xA;&#xA;==== Form-Data / Multipart Upload (Content-Type: multipart/form-data) =====   &#xA;To treat your Request data as multi part fields you must specify key/value pairs separated by new lines into RequestData field (i.e. Body). Each key value pair is entered on new-line and key/value are separated using equal sign (=). Preceding and trailing spaces are ignored also blank lines are ignored. &#xA;If field value has some any special character(s) then use escape sequence (e.g. For NewLine: \r\n, For Tab: \t, For at (@): \@). When value of any field starts with at sign (@) its automatically treated as File you want to upload. By default file content type is determined based on extension however you can supply content type manually for any field using this way [ fieldname.Content-Type=some content type ]. In below example we have supplied Content-Type for file2 and SomeField1, all other fields are using default content-type.&#xA;See below Example of uploading multiple files along with additional fields.&#xA;&#xA;file1=@c:\data\Myfile1.txt&#xA;file2=@c:\data\Myfile2.json&#xA;file2.Content-Type=application/json&#xA;SomeField1=aaaaaaa&#xA;SomeField1.Content-Type=text/plain&#xA;SomeField2=12345&#xA;SomeFieldWithNewLineAndTab=This is line1\r\nThis is line2\r\nThis is \ttab \ttab \ttab&#xA;SomeFieldStartingWithAtSign=\@MyTwitterHandle&#xA;"
                          expressionType="Notify"
                          name="IsMultiPartUpload">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Enable this option if your server is expecting &#xA; (i.e. CRLF) after last Multi-Part boundary in the Body. This option is only applicable if you enabled IsMultiPartUpload and sending data in Key=value format (i.e. Mutipart). For raw file upload this option has no effect."
                          expressionType="Notify"
                          name="AddMultiPartPostamble">false</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Iterate Offices\Sequence Container\Lead search\Web API Destination.Connections[Connection]"
                          connectionManagerID="Package.ConnectionManagers[HTTP 1]"
                          connectionManagerRefId="Package.ConnectionManagers[HTTP 1]"
                          description="Connection manager for authentication (e.g. HTTP or OAuth Connection)"
                          name="Connection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Lead search\Web API Destination.Inputs[WebApiDestinationInput]"
                          errorRowDisposition="RedirectRow"
                          hasSideEffects="true"
                          name="WebApiDestinationInput"
                          truncationRowDisposition="RedirectRow">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\Web API Destination.Inputs[WebApiDestinationInput].Columns[ZS_JSON_OUT]"
                              cachedDataType="nText"
                              cachedName="ZS_JSON_OUT"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Lead search\Web API Destination.Inputs[WebApiDestinationInput].ExternalColumns[HttpRequestData]"
                              lineageId="Package\Iterate Offices\Sequence Container\Lead search\JSON Generator Transform.Outputs[JsonGeneratorTransformOutput].Columns[ZS_JSON_OUT]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\Web API Destination.Inputs[WebApiDestinationInput].ExternalColumns[HttpRequestUrl]"
                              dataType="wstr"
                              length="2000"
                              name="HttpRequestUrl" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\Web API Destination.Inputs[WebApiDestinationInput].ExternalColumns[HttpRequestData]"
                              dataType="nText"
                              name="HttpRequestData" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\Web API Destination.Inputs[WebApiDestinationInput].ExternalColumns[HttpHeaders]"
                              dataType="wstr"
                              length="2000"
                              name="HttpHeaders" />
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Lead search\Web API Destination.Outputs[WebApiDestination Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="WebApiDestination Error Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Lead search\Web API Destination.Inputs[WebApiDestinationInput]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\Web API Destination.Outputs[WebApiDestination Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Lead search\Web API Destination.Outputs[WebApiDestination Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\Web API Destination.Outputs[WebApiDestination Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Lead search\Web API Destination.Outputs[WebApiDestination Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\Web API Destination.Outputs[WebApiDestination Error Output].Columns[ErrorColumnName]"
                              codePage="1252"
                              dataType="str"
                              length="128"
                              lineageId="Package\Iterate Offices\Sequence Container\Lead search\Web API Destination.Outputs[WebApiDestination Error Output].Columns[ErrorColumnName]"
                              name="ErrorColumnName" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\Web API Destination.Outputs[WebApiDestination Error Output].Columns[ErrorMessage]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\Lead search\Web API Destination.Outputs[WebApiDestination Error Output].Columns[ErrorMessage]"
                              name="ErrorMessage" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Lead search\Web API Destination.Outputs[Response Output]"
                          exclusionGroup="1"
                          name="Response Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Lead search\Web API Destination.Inputs[WebApiDestinationInput]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\Web API Destination.Outputs[Response Output].Columns[ResponseText]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\Lead search\Web API Destination.Outputs[Response Output].Columns[ResponseText]"
                              name="ResponseText" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Lead search\Web API Destination.Outputs[Response Output].Columns[StatusCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Lead search\Web API Destination.Outputs[Response Output].Columns[StatusCode]"
                              name="StatusCode" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                  </components>
                  <paths>
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Lead search.Paths[Case 1]"
                      endId="Package\Iterate Offices\Sequence Container\Lead search\Add accountid and origin.Inputs[Derived Column Input]"
                      name="Case 1"
                      startId="Package\Iterate Offices\Sequence Container\Lead search\Conditional Split.Outputs[Case 1]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Lead search.Paths[Derived Column Output]"
                      endId="Package\Iterate Offices\Sequence Container\Lead search\Upsert Leads.Inputs[OLE DB Command Input]"
                      name="Derived Column Output"
                      startId="Package\Iterate Offices\Sequence Container\Lead search\Add accountid and origin.Outputs[Derived Column Output]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Lead search.Paths[ignore]"
                      endId="Package\Iterate Offices\Sequence Container\Lead search\Trash Destination.Inputs[TrashDestinationInput]"
                      name="ignore"
                      startId="Package\Iterate Offices\Sequence Container\Lead search\Insert or Ignore.Outputs[ignore]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Lead search.Paths[JsonGeneratorTransformOutput]"
                      endId="Package\Iterate Offices\Sequence Container\Lead search\Web API Destination.Inputs[WebApiDestinationInput]"
                      name="JsonGeneratorTransformOutput"
                      startId="Package\Iterate Offices\Sequence Container\Lead search\JSON Generator Transform.Outputs[JsonGeneratorTransformOutput]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Lead search.Paths[JsonParserTransformOutput]"
                      endId="Package\Iterate Offices\Sequence Container\Lead search\record.Inputs[JsonParserTransformInput]"
                      name="JsonParserTransformOutput"
                      startId="Package\Iterate Offices\Sequence Container\Lead search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Lead search.Paths[JsonParserTransformOutput1]"
                      endId="Package\Iterate Offices\Sequence Container\Lead search\Conditional Split.Inputs[Conditional Split Input]"
                      name="JsonParserTransformOutput"
                      startId="Package\Iterate Offices\Sequence Container\Lead search\record.Outputs[JsonParserTransformOutput]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Lead search.Paths[JsonSourceOutput]"
                      endId="Package\Iterate Offices\Sequence Container\Lead search\API Sort.Inputs[Sort Input]"
                      name="JsonSourceOutput"
                      startId="Package\Iterate Offices\Sequence Container\Lead search\Search Leads.Outputs[JsonSourceOutput]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Lead search.Paths[Merge Join Output]"
                      endId="Package\Iterate Offices\Sequence Container\Lead search\Insert or Ignore.Inputs[Conditional Split Input]"
                      name="Merge Join Output"
                      startId="Package\Iterate Offices\Sequence Container\Lead search\Merge Join To Find Those to Insert.Outputs[Merge Join Output]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Lead search.Paths[OLE DB Source Output]"
                      endId="Package\Iterate Offices\Sequence Container\Lead search\SQL Sort.Inputs[Sort Input]"
                      name="OLE DB Source Output"
                      startId="Package\Iterate Offices\Sequence Container\Lead search\Existing Leads from SQL.Outputs[OLE DB Source Output]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Lead search.Paths[Response Output]"
                      endId="Package\Iterate Offices\Sequence Container\Lead search\JSON Parser Add id back in.Inputs[JsonParserTransformInput]"
                      name="Response Output"
                      startId="Package\Iterate Offices\Sequence Container\Lead search\Web API Destination.Outputs[Response Output]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Lead search.Paths[Sort Output]"
                      endId="Package\Iterate Offices\Sequence Container\Lead search\Merge Join To Find Those to Insert.Inputs[Merge Join Right Input]"
                      name="Sort Output"
                      startId="Package\Iterate Offices\Sequence Container\Lead search\SQL Sort.Outputs[Sort Output]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Lead search.Paths[Sort Output1]"
                      endId="Package\Iterate Offices\Sequence Container\Lead search\Merge Join To Find Those to Insert.Inputs[Merge Join Left Input]"
                      name="Sort Output"
                      startId="Package\Iterate Offices\Sequence Container\Lead search\API Sort.Outputs[Sort Output]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Lead search.Paths[upsert]"
                      endId="Package\Iterate Offices\Sequence Container\Lead search\JSON Generator Transform.Inputs[JsonInput1]"
                      name="upsert"
                      startId="Package\Iterate Offices\Sequence Container\Lead search\Insert or Ignore.Outputs[upsert]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Lead search.Paths[WebApiDestination Error Output]"
                      endId="Package\Iterate Offices\Sequence Container\Lead search\Trash Destination 1.Inputs[TrashDestinationInput]"
                      name="WebApiDestination Error Output"
                      startId="Package\Iterate Offices\Sequence Container\Lead search\Web API Destination.Outputs[WebApiDestination Error Output]" />
                  </paths>
                </pipeline>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Iterate Offices\Sequence Container\Listing search"
              DTS:CreationName="Microsoft.Pipeline"
              DTS:Description="Data Flow Task"
              DTS:DTSID="{fc944c42-a2d2-4eae-97e2-dbfc0af39e8b}"
              DTS:ExecutableType="Microsoft.Pipeline"
              DTS:LocaleID="-1"
              DTS:ObjectName="Listing search"
              DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:ObjectData>
                <pipeline
                  version="1">
                  <components>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Listing search\Add accountid and origin"
                      componentClassID="Microsoft.DerivedColumn"
                      contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                      name="Add accountid and origin"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Listing search\Add accountid and origin.Inputs[Derived Column Input]"
                          description="Input to the Derived Column Transformation"
                          name="Derived Column Input">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Listing search\Add accountid and origin.Outputs[Derived Column Output]"
                          description="Default Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          name="Derived Column Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Listing search\Add accountid and origin.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Add accountid and origin.Outputs[Derived Column Output].Columns[AccountId]"
                              dataType="i4"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\Add accountid and origin.Outputs[Derived Column Output].Columns[AccountId]"
                              name="AccountId"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">@[User::RexAccountID]</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">@[User::RexAccountID]</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Add accountid and origin.Outputs[Derived Column Output].Columns[Origin]"
                              dataType="i4"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\Add accountid and origin.Outputs[Derived Column Output].Columns[Origin]"
                              name="Origin"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">2</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">2</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Listing search\Add accountid and origin.Outputs[Derived Column Error Output]"
                          description="Error Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Derived Column Error Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Listing search\Add accountid and origin.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Add accountid and origin.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\Add accountid and origin.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Add accountid and origin.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\Add accountid and origin.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Listing search\API Sort"
                      componentClassID="Microsoft.Sort"
                      contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
                      name="API Sort"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                          name="EliminateDuplicates">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the maximum number of threads to use for sorting."
                          expressionType="Notify"
                          name="MaximumThreads">-1</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Listing search\API Sort.Inputs[Sort Input]"
                          name="Sort Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\API Sort.Inputs[Sort Input].Columns[etag]"
                              cachedDataType="wstr"
                              cachedLength="68"
                              cachedName="etag"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\Search Listings.Outputs[JsonSourceOutput].Columns[etag]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\API Sort.Inputs[Sort Input].Columns[id]"
                              cachedDataType="i4"
                              cachedName="id"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\Search Listings.Outputs[JsonSourceOutput].Columns[id]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">1</property>
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Listing search\API Sort.Outputs[Sort Output]"
                          isSorted="true"
                          name="Sort Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\API Sort.Outputs[Sort Output].Columns[etag]"
                              dataType="wstr"
                              length="68"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\API Sort.Outputs[Sort Output].Columns[etag]"
                              name="etag">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Iterate Offices\Sequence Container\Listing search\Search Listings.Outputs[JsonSourceOutput].Columns[etag]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\API Sort.Outputs[Sort Output].Columns[id]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\API Sort.Outputs[Sort Output].Columns[id]"
                              name="id"
                              sortKeyPosition="1">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Iterate Offices\Sequence Container\Listing search\Search Listings.Outputs[JsonSourceOutput].Columns[id]}</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Listing search\custom"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="JSON Parser Transform; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="Parse incoming JSON String into columns. You can also parse and transform single JSON record into multiple rows by filtering data based on JSON Path (e.g. $.Customer.Orders[*])"
                      name="custom"
                      usesDispositions="true"
                      version="2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for any numeric data types"
                          expressionType="Notify"
                          name="TreatBlankNumberAsNull">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for bool data types"
                          expressionType="Notify"
                          name="TreatBlankBoolAsNull">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for any date/time data types"
                          expressionType="Notify"
                          name="TreatBlankDateAsNull">true</property>
                        <property
                          dataType="System.String"
                          description="Sample JSON data used to parse output columns."
                          expressionType="Notify"
                          name="SampleData"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">{
    "result": {
        "record": {
            "system_listing_state": "current",
            "system_ctime": 1589475863,
            "system_modtime": 1592229475,
            "system_publication_time": 1592229455,
            "system_publication_user_id": 27084,
            "system_publication_status": "published",
            "system_overpayment_balance": null,
            "system_has_preupload_errors": null,
            "authority_date_start": "2020-05-14",
            "authority_duration_days": 62,
            "authority_date_expires": "2020-07-14",
            "price_advertise_as": "£185,000",
            "price_est_rent_pw": null,
            "price_rent": null,
            "price_match": 185000,
            "price_match_sale": 185000,
            "price_match_rent_pa_inc_tax": null,
            "price_bond": null,
            "price_rent_per_m2": null,
            "available_from_date": null,
            "inspection_key_detail": null,
            "inspection_alarm_code": null,
            "inspection_notes": null,
            "tenancy_type": "unknown",
            "outgoings_annual": null,
            "outgoings_rent_is_plus": null,
            "meta_highlight_1": null,
            "meta_highlight_2": null,
            "meta_highlight_3": null,
            "meta_other_features": null,
            "feedback_offer_level": 185000,
            "feedback_price_rank": 4,
            "feedback_notes": null,
            "legal_prop_lot": null,
            "legal_prop_subdivision": null,
            "legal_prop_address": null,
            "legal_prop_titleref": null,
            "legal_vendor_name": null,
            "legal_vendor_residence": null,
            "state_value_price": null,
            "state_value_deposit": null,
            "state_date": null,
            "state_reason_id": null,
            "state_reason_note": null,
            "state_lost_agency_id": null,
            "state_change_timestamp": null,
            "legal_solicitor_contact_id": null,
            "inbound_unique_id": "BJB090597945",
            "inbound_last_update": null,
            "publish_to_portals": true,
            "publish_to_automatch": true,
            "publish_to_external": true,
            "publish_to_general": true,
            "status_is_not_for_sale": null,
            "baseline_price": null,
            "parent_listing_id": null,
            "new_home": null,
            "comm_amount_fixed": null,
            "comm_amount_percentage": 1,
            "comm_is_inc_tax": null,
            "comm_est_based_on_service": "Listings",
            "comm_est_based_on_object_id": "29679",
            "comm_est_based_on_amount": "185000",
            "comm_est_amount_net_of_tax": 1850,
            "comm_est_amount_inc_tax": 2220,
            "comm_base_amount_override": null,
            "etag": "29679-1592229475",
            "_id": 29679,
            "system_owner_user": {
                "id": "27084",
                "_name": "Claire Baverstock",
                "_first_name": "Claire",
                "_last_name": "Baverstock",
                "_email_address": "ClaireBaverstock@bjbmail.com"
            },
            "system_modified_user": {
                "id": 0,
                "_name": "System User",
                "_first_name": "System",
                "_last_name": "User",
                "_email_address": "no-reply@rexsoftware.com.au"
            },
            "system_created_user": {
                "id": "27084",
                "_name": "Claire Baverstock",
                "_first_name": "Claire",
                "_last_name": "Baverstock",
                "_email_address": "ClaireBaverstock@bjbmail.com"
            },
            "listing_agent_1": {
                "id": "27084",
                "_name": "Claire Baverstock",
                "_first_name": "Claire",
                "_last_name": "Baverstock",
                "_email_address": "ClaireBaverstock@bjbmail.com",
                "_phone_direct": "01206363619",
                "_phone_mobile": "447418346444",
                "_position": "Branch Manager",
                "_is_account_user": "1",
                "_profile_image": null
            },
            "listing_agent_2": null,
            "legal_solicitor": null,
            "project_stage": null,
            "location": {
                "id": "26",
                "text": "BJB Alsager"
            },
            "authority_type": {
                "id": "sole",
                "text": "Sole"
            },
            "exclusivity": null,
            "inspection_key_location": null,
            "inspection_type": null,
            "listing_category": {
                "id": "residential_sale",
                "text": "Residential Sale"
            },
            "price_rent_period": null,
            "price_rent_tax": null,
            "comm_structure": null,
            "comm_amount_model": {
                "id": "percentage",
                "text": "Percentage"
            },
            "epc_current_eer": null,
            "epc_potential_eer": null,
            "epc_current_eir": null,
            "epc_potential_eir": null,
            "epc_lodgement_date": null,
            "epc_expiry_date": null,
            "epc_not_required": null,
            "epc_not_required_reason": null,
            "property": {
                "system_record_state": "active",
                "system_ctime": 1551717144,
                "system_modtime": 1592229439,
                "system_search_key": "8 Elsby Road, Stoke-On-Trent ST7 2RH",
                "system_geo_location": null,
                "adr_unit_number": null,
                "adr_street_number": "8",
                "adr_street_name": "Elsby Road",
                "adr_suburb_or_town": "Stoke-On-Trent",
                "adr_locality": "Cheshire",
                "adr_state_or_region": null,
                "adr_postcode": "ST7 2RH",
                "adr_country": "uk",
                "adr_estate_name": null,
                "adr_estate_stage": null,
                "property_subcategory_id": null,
                "meta_rates_council": null,
                "meta_rates_bodycorp": null,
                "meta_rates_water": null,
                "meta_rates_land": null,
                "meta_rates_other": null,
                "meta_parking_notes": null,
                "meta_zone": "78267",
                "is_dnd": null,
                "business_name": null,
                "etag": "3655832-1592229439",
                "system_owner_user": {
                    "id": "19443",
                    "_name": "Rosie API",
                    "_first_name": "Rosie",
                    "_last_name": "API",
                    "_email_address": "rosie@spicerhaart.co.uk"
                },
                "system_modified_user": {
                    "id": "27084",
                    "_name": "Claire Baverstock",
                    "_first_name": "Claire",
                    "_last_name": "Baverstock",
                    "_email_address": "ClaireBaverstock@bjbmail.com"
                },
                "system_created_user": {
                    "id": "19443",
                    "_name": "Rosie API",
                    "_first_name": "Rosie",
                    "_last_name": "API",
                    "_email_address": "rosie@spicerhaart.co.uk"
                },
                "adr_latitude": "",
                "adr_longitude": null,
                "attr_bedrooms": 3,
                "attr_bathrooms": 1,
                "attr_ensuites": null,
                "attr_toilets": null,
                "attr_living_areas": null,
                "attr_garages": null,
                "attr_carports": null,
                "attr_open_spaces": null,
                "attr_total_car_accom": null,
                "attr_buildarea": null,
                "attr_buildarea_m2": null,
                "attr_landarea": null,
                "attr_landarea_m2": null,
                "attr_energy_rating": null,
                "attr_build_year": null,
                "attr_sleeps": null,
                "attr_roi_pa": null,
                "attr_takings": null,
                "attr_valuation_date": null,
                "attr_valuation_amount": null,
                "attr_valuation_land_amount": null,
                "attr_is_house_land": null,
                "attr_is_franchise": null,
                "attr_is_corner_block": null,
                "attr_land_depth_rear": null,
                "attr_land_depth_left": null,
                "attr_land_depth_right": null,
                "attr_land_frontage": null,
                "attr_tenure_ground_rent": null,
                "attr_tenure_service_charge": null,
                "attr_tenure_expiry_year": null,
                "attr_tenure_other": null,
                "rural_fences": null,
                "rural_annual_rainfall": null,
                "rural_soil_types": null,
                "rural_improvements": null,
                "rural_irrigation": null,
                "rural_carrying_capacity": null,
                "rural_services": null,
                "adr_building": null,
                "attr_buildarea_unit": null,
                "attr_landarea_unit": null,
                "attr_roof": null,
                "attr_exterior": {
                    "id": "212",
                    "text": "Brick"
                },
                "attr_whole_part": null,
                "attr_land_crossover": null,
                "attr_tenure": {
                    "id": "freehold",
                    "text": "Freehold"
                },
                "attr_tenure_agent": null,
                "property_category": {
                    "id": "residential",
                    "text": "Residential"
                },
                "property_image": null,
                "_security_user_rights": [
                    "read",
                    "update",
                    "archive",
                    "trash",
                    "perms"
                ],
                "id": 3655832
            },
            "_related": {
                "property_features": [],
                "property_views": [],
                "property_tags": [],
                "contact_reln_listing": [
                    {
                        "do_not_contact": null,
                        "_id": 53889,
                        "reln_type": {
                            "id": "owner",
                            "text": "Listing Owner"
                        },
                        "contact": {
                            "_system_record_state": "active",
                            "_system_ctime": "1592227485",
                            "_system_modtime": "1592228399",
                            "_name": "Charles Smalley",
                            "_email_address": "claire.ellis@poolealcock.co.uk",
                            "_phone_number": "01260 275337",
                            "_fax_number": null,
                            "_is_dnd": null,
                            "_type": "person",
                            "_last_contacted_date": null,
                            "_name_last": "Smalley",
                            "_address_postal": null,
                            "_address": null,
                            "_interest_level": null,
                            "_marketing_birthday": null,
                            "_marketing_enquiry_source": null,
                            "_marketing_gender": null,
                            "_marketing_postcode": null,
                            "_name_legal": null,
                            "_name_salutation": null,
                            "_name_addressee": null,
                            "_system_owner_user": {
                                "id": "27084",
                                "_name": "Claire Baverstock",
                                "_first_name": "Claire",
                                "_last_name": "Baverstock",
                                "_email_address": "ClaireBaverstock@bjbmail.com"
                            },
                            "_contact_image": null,
                            "_marketing_enquiry_method": null,
                            "_etag": "1657569-1592228399",
                            "id": "1657569"
                        }
                    }
                ],
                "listing_idealfors": [],
                "listing_allowances": [],
                "listing_adverts": [
                    {
                        "advert_type": "internet",
                        "advert_heading": "A three bedroom semi-detached dormer bungalow situated in a highly regarded location close to the centre of Alsager. The property is well presented and is offered for sale with NO ONWARD CHAIN!",
                        "advert_body": "The well presented accommodation comprises; entrance hall, kitchen, spacious lounge/dining room, conservatory, three bedrooms and bathroom. To the front of the property there is ample driveway parking with garden to the rear. Local amenities, supermarket and bus routes are all within walking distance."
                    },
                    {
                        "advert_type": "brochure",
                        "advert_heading": null,
                        "advert_body": null
                    },
                    {
                        "advert_type": "stocklist",
                        "advert_heading": null,
                        "advert_body": null
                    }
                ],
                "listing_events": [],
                "listing_images": [
                    {
                        "uri": "rexlive://1790/listings/29679/images/IMG_1160_b657-3454-6cc0-bb30-2307-7b01-d7f2-e4f2_20200515035136.jpg",
                        "_url": "//app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com/app/livestore/accounts/1790/listings/29679/images/IMG_1160_b657-3454-6cc0-bb30-2307-7b01-d7f2-e4f2_20200515035136.jpg",
                        "_thumbs": {
                            "800x600": {
                                "uri": "rexlive://1790/listings/29679/images/IMG_1160_b657-3454-6cc0-bb30-2307-7b01-d7f2-e4f2_20200515035136_800x600.jpg",
                                "_url": "//app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com/app/livestore/accounts/1790/listings/29679/images/IMG_1160_b657-3454-6cc0-bb30-2307-7b01-d7f2-e4f2_20200515035136_800x600.jpg"
                            },
                            "400x300": {
                                "uri": "rexlive://1790/listings/29679/images/IMG_1160_b657-3454-6cc0-bb30-2307-7b01-d7f2-e4f2_20200515035136_400x300.jpg",
                                "_url": "//app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com/app/livestore/accounts/1790/listings/29679/images/IMG_1160_b657-3454-6cc0-bb30-2307-7b01-d7f2-e4f2_20200515035136_400x300.jpg"
                            },
                            "200x150": {
                                "uri": "rexlive://1790/listings/29679/images/IMG_1160_b657-3454-6cc0-bb30-2307-7b01-d7f2-e4f2_20200515035136_200x150.jpg",
                                "_url": "//app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com/app/livestore/accounts/1790/listings/29679/images/IMG_1160_b657-3454-6cc0-bb30-2307-7b01-d7f2-e4f2_20200515035136_200x150.jpg"
                            },
                            "80x60": {
                                "uri": "rexlive://1790/listings/29679/images/IMG_1160_b657-3454-6cc0-bb30-2307-7b01-d7f2-e4f2_20200515035136_80x60.jpg",
                                "_url": "//app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com/app/livestore/accounts/1790/listings/29679/images/IMG_1160_b657-3454-6cc0-bb30-2307-7b01-d7f2-e4f2_20200515035136_80x60.jpg"
                            }
                        },
                        "_id": 419904,
                        "system_modtime": 1589478738,
                        "priority": "1",
                        "inbound_original_src_url": null,
                        "inbound_last_update": null,
                        "inbound_index": null
                    },
                    {
                        "uri": "rexlive://1790/listings/29679/images/IMG_1155_be4e-aa75-d6b5-d318-eae1-793c-80c3-4171_20200515035156.jpg",
                        "_url": "//app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com/app/livestore/accounts/1790/listings/29679/images/IMG_1155_be4e-aa75-d6b5-d318-eae1-793c-80c3-4171_20200515035156.jpg",
                        "_thumbs": {
                            "800x600": {
                                "uri": "rexlive://1790/listings/29679/images/IMG_1155_be4e-aa75-d6b5-d318-eae1-793c-80c3-4171_20200515035156_800x600.jpg",
                                "_url": "//app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com/app/livestore/accounts/1790/listings/29679/images/IMG_1155_be4e-aa75-d6b5-d318-eae1-793c-80c3-4171_20200515035156_800x600.jpg"
                            },
                            "400x300": {
                                "uri": "rexlive://1790/listings/29679/images/IMG_1155_be4e-aa75-d6b5-d318-eae1-793c-80c3-4171_20200515035156_400x300.jpg",
                                "_url": "//app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com/app/livestore/accounts/1790/listings/29679/images/IMG_1155_be4e-aa75-d6b5-d318-eae1-793c-80c3-4171_20200515035156_400x300.jpg"
                            },
                            "200x150": {
                                "uri": "rexlive://1790/listings/29679/images/IMG_1155_be4e-aa75-d6b5-d318-eae1-793c-80c3-4171_20200515035156_200x150.jpg",
                                "_url": "//app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com/app/livestore/accounts/1790/listings/29679/images/IMG_1155_be4e-aa75-d6b5-d318-eae1-793c-80c3-4171_20200515035156_200x150.jpg"
                            },
                            "80x60": {
                                "uri": "rexlive://1790/listings/29679/images/IMG_1155_be4e-aa75-d6b5-d318-eae1-793c-80c3-4171_20200515035156_80x60.jpg",
                                "_url": "//app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com/app/livestore/accounts/1790/listings/29679/images/IMG_1155_be4e-aa75-d6b5-d318-eae1-793c-80c3-4171_20200515035156_80x60.jpg"
                            }
                        },
                        "_id": 419905,
                        "system_modtime": 1589478738,
                        "priority": "2",
                        "inbound_original_src_url": null,
                        "inbound_last_update": null,
                        "inbound_index": null
                    },
                    {
                        "uri": "rexlive://1790/listings/29679/images/IMG_1156_550b-f343-0a8b-1271-066a-fbae-ba21-54f6_20200515035128.jpg",
                        "_url": "//app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com/app/livestore/accounts/1790/listings/29679/images/IMG_1156_550b-f343-0a8b-1271-066a-fbae-ba21-54f6_20200515035128.jpg",
                        "_thumbs": {
                            "800x600": {
                                "uri": "rexlive://1790/listings/29679/images/IMG_1156_550b-f343-0a8b-1271-066a-fbae-ba21-54f6_20200515035128_800x600.jpg",
                                "_url": "//app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com/app/livestore/accounts/1790/listings/29679/images/IMG_1156_550b-f343-0a8b-1271-066a-fbae-ba21-54f6_20200515035128_800x600.jpg"
                            },
                            "400x300": {
                                "uri": "rexlive://1790/listings/29679/images/IMG_1156_550b-f343-0a8b-1271-066a-fbae-ba21-54f6_20200515035128_400x300.jpg",
                                "_url": "//app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com/app/livestore/accounts/1790/listings/29679/images/IMG_1156_550b-f343-0a8b-1271-066a-fbae-ba21-54f6_20200515035128_400x300.jpg"
                            },
                            "200x150": {
                                "uri": "rexlive://1790/listings/29679/images/IMG_1156_550b-f343-0a8b-1271-066a-fbae-ba21-54f6_20200515035128_200x150.jpg",
                                "_url": "//app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com/app/livestore/accounts/1790/listings/29679/images/IMG_1156_550b-f343-0a8b-1271-066a-fbae-ba21-54f6_20200515035128_200x150.jpg"
                            },
                            "80x60": {
                                "uri": "rexlive://1790/listings/29679/images/IMG_1156_550b-f343-0a8b-1271-066a-fbae-ba21-54f6_20200515035128_80x60.jpg",
                                "_url": "//app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com/app/livestore/accounts/1790/listings/29679/images/IMG_1156_550b-f343-0a8b-1271-066a-fbae-ba21-54f6_20200515035128_80x60.jpg"
                            }
                        },
                        "_id": 419906,
                        "system_modtime": 1589478738,
                        "priority": "3",
                        "inbound_original_src_url": null,
                        "inbound_last_update": null,
                        "inbound_index": null
                    },
                    {
                        "uri": "rexlive://1790/listings/29679/images/IMG_1151_538d-3208-0607-221d-6a04-7ff3-b9d8-10ce_20200515035111.jpg",
                        "_url": "//app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com/app/livestore/accounts/1790/listings/29679/images/IMG_1151_538d-3208-0607-221d-6a04-7ff3-b9d8-10ce_20200515035111.jpg",
                        "_thumbs": {
                            "800x600": {
                                "uri": "rexlive://1790/listings/29679/images/IMG_1151_538d-3208-0607-221d-6a04-7ff3-b9d8-10ce_20200515035111_800x600.jpg",
                                "_url": "//app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com/app/livestore/accounts/1790/listings/29679/images/IMG_1151_538d-3208-0607-221d-6a04-7ff3-b9d8-10ce_20200515035111_800x600.jpg"
                            },
                            "400x300": {
                                "uri": "rexlive://1790/listings/29679/images/IMG_1151_538d-3208-0607-221d-6a04-7ff3-b9d8-10ce_20200515035111_400x300.jpg",
                                "_url": "//app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com/app/livestore/accounts/1790/listings/29679/images/IMG_1151_538d-3208-0607-221d-6a04-7ff3-b9d8-10ce_20200515035111_400x300.jpg"
                            },
                            "200x150": {
                                "uri": "rexlive://1790/listings/29679/images/IMG_1151_538d-3208-0607-221d-6a04-7ff3-b9d8-10ce_20200515035111_200x150.jpg",
                                "_url": "//app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com/app/livestore/accounts/1790/listings/29679/images/IMG_1151_538d-3208-0607-221d-6a04-7ff3-b9d8-10ce_20200515035111_200x150.jpg"
                            },
                            "80x60": {
                                "uri": "rexlive://1790/listings/29679/images/IMG_1151_538d-3208-0607-221d-6a04-7ff3-b9d8-10ce_20200515035111_80x60.jpg",
                                "_url": "//app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com/app/livestore/accounts/1790/listings/29679/images/IMG_1151_538d-3208-0607-221d-6a04-7ff3-b9d8-10ce_20200515035111_80x60.jpg"
                            }
                        },
                        "_id": 419907,
                        "system_modtime": 1589478738,
                        "priority": "4",
                        "inbound_original_src_url": null,
                        "inbound_last_update": null,
                        "inbound_index": null
                    },
                    {
                        "uri": "rexlive://1790/listings/29679/images/IMG_1159_2222-fc2f-b4cc-ebfd-bd6b-32c0-59b9-9b4f_20200515035133.jpg",
                        "_url": "//app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com/app/livestore/accounts/1790/listings/29679/images/IMG_1159_2222-fc2f-b4cc-ebfd-bd6b-32c0-59b9-9b4f_20200515035133.jpg",
                        "_thumbs": {
                            "800x600": {
                                "uri": "rexlive://1790/listings/29679/images/IMG_1159_2222-fc2f-b4cc-ebfd-bd6b-32c0-59b9-9b4f_20200515035133_800x600.jpg",
                                "_url": "//app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com/app/livestore/accounts/1790/listings/29679/images/IMG_1159_2222-fc2f-b4cc-ebfd-bd6b-32c0-59b9-9b4f_20200515035133_800x600.jpg"
                            },
                            "400x300": {
                                "uri": "rexlive://1790/listings/29679/images/IMG_1159_2222-fc2f-b4cc-ebfd-bd6b-32c0-59b9-9b4f_20200515035133_400x300.jpg",
                                "_url": "//app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com/app/livestore/accounts/1790/listings/29679/images/IMG_1159_2222-fc2f-b4cc-ebfd-bd6b-32c0-59b9-9b4f_20200515035133_400x300.jpg"
                            },
                            "200x150": {
                                "uri": "rexlive://1790/listings/29679/images/IMG_1159_2222-fc2f-b4cc-ebfd-bd6b-32c0-59b9-9b4f_20200515035133_200x150.jpg",
                                "_url": "//app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com/app/livestore/accounts/1790/listings/29679/images/IMG_1159_2222-fc2f-b4cc-ebfd-bd6b-32c0-59b9-9b4f_20200515035133_200x150.jpg"
                            },
                            "80x60": {
                                "uri": "rexlive://1790/listings/29679/images/IMG_1159_2222-fc2f-b4cc-ebfd-bd6b-32c0-59b9-9b4f_20200515035133_80x60.jpg",
                                "_url": "//app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com/app/livestore/accounts/1790/listings/29679/images/IMG_1159_2222-fc2f-b4cc-ebfd-bd6b-32c0-59b9-9b4f_20200515035133_80x60.jpg"
                            }
                        },
                        "_id": 419908,
                        "system_modtime": 1589478738,
                        "priority": "5",
                        "inbound_original_src_url": null,
                        "inbound_last_update": null,
                        "inbound_index": null
                    },
                    {
                        "uri": "rexlive://1790/listings/29679/images/IMG_1157_91f2-31b8-879e-0000-2417-7a75-4028-ba26_20200515035131.jpg",
                        "_url": "//app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com/app/livestore/accounts/1790/listings/29679/images/IMG_1157_91f2-31b8-879e-0000-2417-7a75-4028-ba26_20200515035131.jpg",
                        "_thumbs": {
                            "800x600": {
                                "uri": "rexlive://1790/listings/29679/images/IMG_1157_91f2-31b8-879e-0000-2417-7a75-4028-ba26_20200515035131_800x600.jpg",
                                "_url": "//app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com/app/livestore/accounts/1790/listings/29679/images/IMG_1157_91f2-31b8-879e-0000-2417-7a75-4028-ba26_20200515035131_800x600.jpg"
                            },
                            "400x300": {
                                "uri": "rexlive://1790/listings/29679/images/IMG_1157_91f2-31b8-879e-0000-2417-7a75-4028-ba26_20200515035131_400x300.jpg",
                                "_url": "//app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com/app/livestore/accounts/1790/listings/29679/images/IMG_1157_91f2-31b8-879e-0000-2417-7a75-4028-ba26_20200515035131_400x300.jpg"
                            },
                            "200x150": {
                                "uri": "rexlive://1790/listings/29679/images/IMG_1157_91f2-31b8-879e-0000-2417-7a75-4028-ba26_20200515035131_200x150.jpg",
                                "_url": "//app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com/app/livestore/accounts/1790/listings/29679/images/IMG_1157_91f2-31b8-879e-0000-2417-7a75-4028-ba26_20200515035131_200x150.jpg"
                            },
                            "80x60": {
                                "uri": "rexlive://1790/listings/29679/images/IMG_1157_91f2-31b8-879e-0000-2417-7a75-4028-ba26_20200515035131_80x60.jpg",
                                "_url": "//app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com/app/livestore/accounts/1790/listings/29679/images/IMG_1157_91f2-31b8-879e-0000-2417-7a75-4028-ba26_20200515035131_80x60.jpg"
                            }
                        },
                        "_id": 419909,
                        "system_modtime": 1589478738,
                        "priority": "6",
                        "inbound_original_src_url": null,
                        "inbound_last_update": null,
                        "inbound_index": null
                    },
                    {
                        "uri": "rexlive://1790/listings/29679/images/IMG_1154_679b-2e2f-0883-d90d-293e-3115-691e-0b4e_20200515035125.jpg",
                        "_url": "//app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com/app/livestore/accounts/1790/listings/29679/images/IMG_1154_679b-2e2f-0883-d90d-293e-3115-691e-0b4e_20200515035125.jpg",
                        "_thumbs": {
                            "800x600": {
                                "uri": "rexlive://1790/listings/29679/images/IMG_1154_679b-2e2f-0883-d90d-293e-3115-691e-0b4e_20200515035125_800x600.jpg",
                                "_url": "//app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com/app/livestore/accounts/1790/listings/29679/images/IMG_1154_679b-2e2f-0883-d90d-293e-3115-691e-0b4e_20200515035125_800x600.jpg"
                            },
                            "400x300": {
                                "uri": "rexlive://1790/listings/29679/images/IMG_1154_679b-2e2f-0883-d90d-293e-3115-691e-0b4e_20200515035125_400x300.jpg",
                                "_url": "//app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com/app/livestore/accounts/1790/listings/29679/images/IMG_1154_679b-2e2f-0883-d90d-293e-3115-691e-0b4e_20200515035125_400x300.jpg"
                            },
                            "200x150": {
                                "uri": "rexlive://1790/listings/29679/images/IMG_1154_679b-2e2f-0883-d90d-293e-3115-691e-0b4e_20200515035125_200x150.jpg",
                                "_url": "//app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com/app/livestore/accounts/1790/listings/29679/images/IMG_1154_679b-2e2f-0883-d90d-293e-3115-691e-0b4e_20200515035125_200x150.jpg"
                            },
                            "80x60": {
                                "uri": "rexlive://1790/listings/29679/images/IMG_1154_679b-2e2f-0883-d90d-293e-3115-691e-0b4e_20200515035125_80x60.jpg",
                                "_url": "//app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com/app/livestore/accounts/1790/listings/29679/images/IMG_1154_679b-2e2f-0883-d90d-293e-3115-691e-0b4e_20200515035125_80x60.jpg"
                            }
                        },
                        "_id": 419910,
                        "system_modtime": 1589478738,
                        "priority": "7",
                        "inbound_original_src_url": null,
                        "inbound_last_update": null,
                        "inbound_index": null
                    },
                    {
                        "uri": "rexlive://1790/listings/29679/images/IMG_1152_d57b-4dc7-b968-ba48-1503-2114-3b42-0f5c_20200515035120.jpg",
                        "_url": "//app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com/app/livestore/accounts/1790/listings/29679/images/IMG_1152_d57b-4dc7-b968-ba48-1503-2114-3b42-0f5c_20200515035120.jpg",
                        "_thumbs": {
                            "800x600": {
                                "uri": "rexlive://1790/listings/29679/images/IMG_1152_d57b-4dc7-b968-ba48-1503-2114-3b42-0f5c_20200515035120_800x600.jpg",
                                "_url": "//app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com/app/livestore/accounts/1790/listings/29679/images/IMG_1152_d57b-4dc7-b968-ba48-1503-2114-3b42-0f5c_20200515035120_800x600.jpg"
                            },
                            "400x300": {
                                "uri": "rexlive://1790/listings/29679/images/IMG_1152_d57b-4dc7-b968-ba48-1503-2114-3b42-0f5c_20200515035120_400x300.jpg",
                                "_url": "//app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com/app/livestore/accounts/1790/listings/29679/images/IMG_1152_d57b-4dc7-b968-ba48-1503-2114-3b42-0f5c_20200515035120_400x300.jpg"
                            },
                            "200x150": {
                                "uri": "rexlive://1790/listings/29679/images/IMG_1152_d57b-4dc7-b968-ba48-1503-2114-3b42-0f5c_20200515035120_200x150.jpg",
                                "_url": "//app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com/app/livestore/accounts/1790/listings/29679/images/IMG_1152_d57b-4dc7-b968-ba48-1503-2114-3b42-0f5c_20200515035120_200x150.jpg"
                            },
                            "80x60": {
                                "uri": "rexlive://1790/listings/29679/images/IMG_1152_d57b-4dc7-b968-ba48-1503-2114-3b42-0f5c_20200515035120_80x60.jpg",
                                "_url": "//app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com/app/livestore/accounts/1790/listings/29679/images/IMG_1152_d57b-4dc7-b968-ba48-1503-2114-3b42-0f5c_20200515035120_80x60.jpg"
                            }
                        },
                        "_id": 419911,
                        "system_modtime": 1589478738,
                        "priority": "8",
                        "inbound_original_src_url": null,
                        "inbound_last_update": null,
                        "inbound_index": null
                    }
                ],
                "listing_documents": [
                    {
                        "system_ctime": 1592229380,
                        "system_modtime": 1592229439,
                        "system_size_mb": 0.65,
                        "description": "BJB  Agency Agreement  8 Elsby.pdf",
                        "uri": "rexlive://1790/listings/29679/documents/BJB-Agency-Agreement_8d5a-ca96-b9bf-965f-2b28-ba0c-13db-e766_20200615115543.pdf",
                        "upload_date": null,
                        "show_in_open_homes": null,
                        "_id": 106895,
                        "system_modified_user": {
                            "id": "27084",
                            "_name": "Claire Baverstock",
                            "_first_name": "Claire",
                            "_last_name": "Baverstock",
                            "_email_address": "ClaireBaverstock@bjbmail.com"
                        },
                        "system_created_user": {
                            "id": "27084",
                            "_name": "Claire Baverstock",
                            "_first_name": "Claire",
                            "_last_name": "Baverstock",
                            "_email_address": "ClaireBaverstock@bjbmail.com"
                        },
                        "type": {
                            "id": "contract",
                            "text": "Contract"
                        },
                        "privacy": {
                            "id": "private",
                            "text": "Private"
                        },
                        "_url": "//app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com/app/livestore/accounts/1790/listings/29679/documents/BJB-Agency-Agreement_8d5a-ca96-b9bf-965f-2b28-ba0c-13db-e766_20200615115543.pdf"
                    },
                    {
                        "system_ctime": 1592229380,
                        "system_modtime": 1592229439,
                        "system_size_mb": 0.65,
                        "description": "BJB  Agency Agreement  8 Elsby.pdf",
                        "uri": "rexlive://1790/listings/29679/documents/BJB-Agency-Agreement_eff0-f7c9-59a4-5807-2621-837f-5c0e-af75_20200615115552.pdf",
                        "upload_date": null,
                        "show_in_open_homes": null,
                        "_id": 106896,
                        "system_modified_user": {
                            "id": "27084",
                            "_name": "Claire Baverstock",
                            "_first_name": "Claire",
                            "_last_name": "Baverstock",
                            "_email_address": "ClaireBaverstock@bjbmail.com"
                        },
                        "system_created_user": {
                            "id": "27084",
                            "_name": "Claire Baverstock",
                            "_first_name": "Claire",
                            "_last_name": "Baverstock",
                            "_email_address": "ClaireBaverstock@bjbmail.com"
                        },
                        "type": {
                            "id": "26649",
                            "text": "Sellers Checklist"
                        },
                        "privacy": {
                            "id": "private",
                            "text": "Private"
                        },
                        "_url": "//app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com/app/livestore/accounts/1790/listings/29679/documents/BJB-Agency-Agreement_eff0-f7c9-59a4-5807-2621-837f-5c0e-af75_20200615115552.pdf"
                    }
                ],
                "listing_floorplans": [],
                "listing_holidaybookings": [],
                "listing_links": [],
                "listing_subcategories": [
                    {
                        "priority": 1,
                        "_id": 27613,
                        "subcategory": {
                            "id": "26528",
                            "text": "Semi-detached bungalow"
                        }
                    }
                ],
                "listing_highlights": [
                    {
                        "priority": "1",
                        "description": "Dormer bunglaow",
                        "_id": 184785
                    },
                    {
                        "priority": "2",
                        "description": "Three bedrooms",
                        "_id": 184786
                    },
                    {
                        "priority": "3",
                        "description": "Spacious lounge/dining room",
                        "_id": 184787
                    },
                    {
                        "priority": "4",
                        "description": "Conservatory",
                        "_id": 184788
                    },
                    {
                        "priority": "5",
                        "description": "Garden to the rear",
                        "_id": 184789
                    },
                    {
                        "priority": "6",
                        "description": "Ample driveway parking",
                        "_id": 184790
                    },
                    {
                        "priority": "7",
                        "description": "No onward chain",
                        "_id": 184791
                    }
                ],
                "listing_rooms": [
                    {
                        "room_type": "Lounge/Diner",
                        "description": "Fireplace with feature surround. Double glazed window to the rear elevation. Stairs to first floor. Patio doors through to conservatory. Radiator.",
                        "dimensions": null,
                        "priority": "1",
                        "width": 6.94,
                        "length": 4.66,
                        "dimension_unit": "m",
                        "_id": 255870,
                        "images": []
                    },
                    {
                        "room_type": "Kitchen",
                        "description": "Fitted with wall and base units with worksurface over and matching breakfast bar. Stainless steel sink unit and drainer. Integrated hob and oven. Space for appliances. Double glazed windows to the front and side elevations. Radiator.",
                        "dimensions": null,
                        "priority": "2",
                        "width": 3.28,
                        "length": 3,
                        "dimension_unit": "m",
                        "_id": 255871,
                        "images": []
                    },
                    {
                        "room_type": "Conservatory",
                        "description": "UPVC framed conservatory having patio doors opening onto the rear garden.",
                        "dimensions": null,
                        "priority": "3",
                        "width": 2.73,
                        "length": 2.45,
                        "dimension_unit": "m",
                        "_id": 255872,
                        "images": []
                    },
                    {
                        "room_type": "Shower Room",
                        "description": "Modern white suite comprising; low level WC, hand wash basin set in vanity unit and corner shower unit. Double glazed window to the side elevation. Radiator.",
                        "dimensions": null,
                        "priority": "4",
                        "width": null,
                        "length": null,
                        "dimension_unit": null,
                        "_id": 256968,
                        "images": []
                    },
                    {
                        "room_type": "Bedroom",
                        "description": "Having fitted wardrobes and dressing table. Double glazed window to the front elevation. Radiator.",
                        "dimensions": null,
                        "priority": "5",
                        "width": 3.58,
                        "length": 3.48,
                        "dimension_unit": "m",
                        "_id": 257028,
                        "images": []
                    },
                    {
                        "room_type": "Bedroom Two",
                        "description": "Double glazed window to the front elevation. Eaves storage. Radiator.",
                        "dimensions": null,
                        "priority": "6",
                        "width": 3.49,
                        "length": 3.13,
                        "dimension_unit": "m",
                        "_id": 257029,
                        "images": []
                    },
                    {
                        "room_type": "Bedroom Three",
                        "description": "Double glazed window to the rear elevation. Eaves storage. Raditor.",
                        "dimensions": null,
                        "priority": "7",
                        "width": 4.37,
                        "length": 3.06,
                        "dimension_unit": "m",
                        "_id": 257030,
                        "images": []
                    }
                ]
            },
            "epc_combined_chart": null,
            "epc_eer_chart": null,
            "epc_eir_chart": null,
            "_security_user_rights": [
                "read",
                "update",
                "archive",
                "perms"
            ]
        },
        "custom_fields": {
            "core.key_details.Other Details.Category": null,
            "core.key_details.Other Details.Contract type": null,
            "core.key_details.Other Details.Situation": null,
            "core.key_details.Other Details.Board": null,
            "core.key_details.Other Details.Viewings": null,
            "core.key_details.Other Details.Web flash": null,
            "core.key_details.Other Details.Rental Value": null,
            "core.key_details.Other Details.HTB scheme": null,
            "core.key_details.Other Details.EPC ordered": null,
            "core.key_details.Other Details.Resend PIN": null,
            "core.key_details.Other Details.Campaign": null,
            "core.key_details.Other Details.Source": "Fresh to Market",
            "core.marketing.Our Websites.Website AIDA": null,
            "core.marketing.Our Websites.Discreet marketing?": null,
            "core.marketing.Our Websites.Block loading?": null,
            "core.legal.Section 21 Disclosable Interest.Section 21 disclosable": null,
            "core.legal.Section 21 Disclosable Interest.Region Partner Approved?": null,
            "core.events.Auction Lot.Lot No": null,
            "core.events.Auction Lot.Lot Status": null,
            "core.marketing.Brochure Approvals.Branch Approved": null,
            "core.marketing.Brochure Approvals.Customer Approved": null,
            "core.marketing.Brochure Approvals.Brochure Link": null,
            "core.marketing.Other Systems.SPOS Ordering": "http://89.213.252.250/servlets/SPO/servlet/servlets.PrepopulateSalesDetailsServlet?PASSWORD=spicer999&amp;BRANCH_ID=090510&amp;BRAND=BAI&amp;PROPERTY_REFERENCE=BJB090597945",
            "core.marketing.Other Systems.Process QSP": "http://qsp.spicerhaart.com/?propertyReference=BJB090597945",
            "core.marketing.Other Systems.Long QSP Link": null,
            "core.marketing.Other Systems.Short QSP Link": null,
            "api.stop_epc_upload_workaround": null,
            "api.Early Bird removed": null
        }
    },
    "error": null
}</property>
                        <property
                          dataType="System.Boolean"
                          description="Include all upstream parent columns into output except the one you selected to parse. By default only parsed columns from Input document is included in the output. If you wish to include all other upstream columns in the output too then check this option."
                          expressionType="Notify"
                          name="OutputAllUpstreamColumns">true</property>
                        <property
                          dataType="System.Int32"
                          description="Defines how to handle empty input. By default NULL or Empty input is skipped from parsing."
                          expressionType="Notify"
                          name="EmptyInputProcessingMode"
                          typeConverter="ZappySys.Common.Data.EmptyInputProcessingMode">0</property>
                        <property
                          dataType="System.String"
                          description="Defines how to handle empty input. By default NULL or Empty input is skipped from parsing."
                          expressionType="Notify"
                          name="TreatEmptyInputAs">{ }</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum JSON records to fetch. Set this value to 0 for all records"
                          expressionType="Notify"
                          name="MaxRows">0</property>
                        <property
                          dataType="System.String"
                          description="Enter expression here to filter data.(Example:  $.Users[*].UserName ) This will fetch User names from users records"
                          expressionType="Notify"
                          name="Filter"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">$.result.custom_fields</property>
                        <property
                          dataType="System.Boolean"
                          description="Use this option to include parent properties (Non array) in the output along with Filtered Rows"
                          expressionType="Notify"
                          name="IncludeParentColumns">false</property>
                        <property
                          dataType="System.Boolean"
                          description="By default child and parent information is not included in the output if children not found for specified expression. For example if you want to extract all orders from all customers nodes then you can type $.Customers[*].Orders[*]. This will fetch all orders from all customers. By default customers records without orders wont be included in the output. If you want to include those customers where orders not found then check this option (Output null information for order attributes). This behavior is similar to LEFT OUTER JOIN in SQL (Left side is parent, right side is child). This option is ***resource intensive*** so only check if you really care about this behavior."
                          expressionType="Notify"
                          name="IncludeParentColumnsWhenChildMissing">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to true if you want to output parent columns which are array. By default any parent column which is an array is not included in output. See also FilterForParentColumnsWithArrayType property if you set this property"
                          expressionType="Notify"
                          name="IncludeParentColumnsWithArrayType">false</property>
                        <property
                          dataType="System.String"
                          description="Filter expression to extract value form parent"
                          expressionType="Notify"
                          name="FilterForParentColumnsWithArrayType"></property>
                        <property
                          dataType="System.String"
                          description="Prefix for parent column name. This option is only valid if you have set IncludeParentColumns=True"
                          expressionType="Notify"
                          name="ParentColumnPrefix">cf</property>
                        <property
                          dataType="System.Boolean"
                          description="Throw error if property name specified in filter expression is missing. By default it will ignore any missing property errors."
                          expressionType="Notify"
                          name="ThrowErrorIfPropertyMissing">false</property>
                        <property
                          dataType="System.Int32"
                          description="This property how many nested levels should be scanned to fetch various properties. 0=Scan all child levels."
                          expressionType="Notify"
                          name="MaxLevelsToScan">0</property>
                        <property
                          dataType="System.String"
                          description="List comma separated property names from JSON document which you want to exclude from output. Specify parent property name to exclude all child nodes."
                          expressionType="Notify"
                          name="ExcludedProperties"></property>
                        <property
                          dataType="System.String"
                          description="Property level separator used in generated property name (separator for outer properties - Above selected filter node). Use this if default separator is producing duplicate property name which is conflicting with existing name."
                          expressionType="Notify"
                          name="LevelSeparator">_</property>
                        <property
                          dataType="System.Boolean"
                          description="Enables deep array flattening for selected filtered hierarchy. When you turn on this property it will flatten each property of each array item and expose as column (e.g. If you have Filter set as $.customers[*] and for each customer you have an array of Addresses then you may see output columns like Addresses.1.City, Addresses.1.State, Addresses.2.City, Addresses.2.State .... Addresses.N.City, Addresses.N.State). You can control how many array items you want to flatten by setting MaxArrayItemsToFlatten property."
                          expressionType="Notify"
                          name="EnableArrayFlattening">false</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum number of array items to flatten. inner array flattening. Adjust this property to control how many columns being generated. This option is ignored if you set EnableArrayFlattening=false"
                          expressionType="Notify"
                          name="MaxArrayItemsToFlatten">10</property>
                        <property
                          dataType="System.String"
                          description="Specifies how custom date formatted strings are parsed when reading JSON."
                          expressionType="Notify"
                          name="DateFormatString"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies how date formatted strings, e.g. Date(1198908717056) and 2012-03-21T05:40Z, are parsed when reading JSON."
                          expressionType="Notify"
                          name="DateParseHandling"
                          typeConverter="ZappySys.Common.DateParseHandling">1</property>
                        <property
                          dataType="System.Boolean"
                          description="Output as raw JSON document rather than parsing individual fields. This option is helpful if you have documents stored in a file and you want to pass them downstream as raw JSON string rather than parsing into columns."
                          expressionType="Notify"
                          name="OutputRawDocument">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Indent JSON output so its easy to read."
                          expressionType="Notify"
                          name="IndentOutput">false</property>
                        <property
                          dataType="System.Boolean"
                          description="When this property is true then Column is converted to Row. Pivoted names will appear under  Pivot_Name column and values will appear under Pivot_Value field."
                          expressionType="Notify"
                          name="EnablePivot">false</property>
                        <property
                          dataType="System.Int32"
                          description="Array Transformation you want to apply. Useful for case when you have 2-Dimensional arrays with rows/columns in separate arrays."
                          expressionType="Notify"
                          name="ArrayTransformationType"
                          typeConverter="ZappySys.Json.ArrayTransformType">0</property>
                        <property
                          dataType="System.String"
                          description="Filter expression to use to extract column names for array transformation."
                          expressionType="Notify"
                          name="ArrayTransColumnNameFilter"></property>
                        <property
                          dataType="System.String"
                          description="Filter expression for row values (Not applicable for simple array transformation)."
                          expressionType="Notify"
                          name="ArrayTransRowValueFilter"></property>
                        <property
                          dataType="System.Boolean"
                          description="When you have 2D array but don't have column list specified in a separate array then use this option (e.g. { arr: [[10,11],[21,22]] } )."
                          expressionType="Notify"
                          name="ArrayTransEnableCustomColumns">false</property>
                        <property
                          dataType="System.String"
                          description="When you have 2D array but don't have column list specified in a separate array then use specify column names here. Use comma separated list (e.g col1,col2,col3 ). Column name Order must match value order."
                          expressionType="Notify"
                          name="ArrayTransCustomColumns"></property>
                        <property
                          dataType="System.Int32"
                          description="Metadata scan mode controls how data type and length is determined. By default few records scanned to determine datatype/length. Changing ScanMode affects length/datatype accuracy."
                          expressionType="Notify"
                          name="MetaDataScanMode"
                          typeConverter="ZappySys.Common.Data.MetaDataScanMode">4</property>
                        <property
                          dataType="System.Int32"
                          description="Length for all string column. This option is only valid for MetaDataScanMode=Custom"
                          expressionType="Notify"
                          name="MetaDataCustomLength">1000</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.JsonParserTransform</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Listing search\custom.Inputs[JsonParserTransformInput]"
                          errorRowDisposition="FailComponent"
                          name="JsonParserTransformInput"
                          truncationRowDisposition="FailComponent">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\custom.Inputs[JsonParserTransformInput].Columns[ResponseText]"
                              cachedDataType="nText"
                              cachedName="ResponseText"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[ResponseText]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\custom.Inputs[JsonParserTransformInput].Columns[StatusCode]"
                              cachedDataType="i4"
                              cachedName="StatusCode"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[StatusCode]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Listing search\custom.Outputs[JsonParserTransformOutput].Columns[StatusCode]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\custom.Inputs[JsonParserTransformInput].Columns[args.service_object_id]"
                              cachedDataType="i8"
                              cachedName="args.service_object_id"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[args.service_object_id]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Listing search\custom.Outputs[JsonParserTransformOutput].Columns[args.service_object_id]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True" />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Listing search\custom.Outputs[JsonParserTransformOutput]"
                          errorOrTruncationOperation="Error"
                          errorRowDisposition="FailComponent"
                          name="JsonParserTransformOutput"
                          truncationRowDisposition="FailComponent">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\custom.Outputs[JsonParserTransformOutput].Columns[args.service_object_id]"
                              dataType="i8"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\custom.Outputs[JsonParserTransformOutput].Columns[args.service_object_id]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Listing search\custom.Inputs[JsonParserTransformInput].Columns[args.service_object_id]"
                              name="args.service_object_id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\custom.Outputs[JsonParserTransformOutput].Columns[StatusCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\custom.Outputs[JsonParserTransformOutput].Columns[StatusCode]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Listing search\custom.Inputs[JsonParserTransformInput].Columns[StatusCode]"
                              name="StatusCode" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\custom.Outputs[JsonParserTransformOutput].Columns[custdoc]"
                              dataType="nText"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Listing search\custom.Outputs[JsonParserTransformOutput].ExternalColumns[__DOCUMENT__]"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\custom.Outputs[JsonParserTransformOutput].Columns[custdoc]"
                              name="custdoc" />
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\custom.Outputs[JsonParserTransformOutput].ExternalColumns[__DOCUMENT__]"
                              dataType="nText"
                              name="__DOCUMENT__" />
                          </externalMetadataColumns>
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Listing search\custom.Outputs[JsonParserTransform Error Output]"
                          isErrorOut="true"
                          name="JsonParserTransform Error Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\custom.Outputs[JsonParserTransform Error Output].Columns[args.service_object_id]"
                              dataType="i8"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\custom.Outputs[JsonParserTransform Error Output].Columns[args.service_object_id]"
                              name="args.service_object_id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\custom.Outputs[JsonParserTransform Error Output].Columns[StatusCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\custom.Outputs[JsonParserTransform Error Output].Columns[StatusCode]"
                              name="StatusCode" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\custom.Outputs[JsonParserTransform Error Output].Columns[custdoc]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\custom.Outputs[JsonParserTransform Error Output].Columns[custdoc]"
                              name="custdoc" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\custom.Outputs[JsonParserTransform Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\custom.Outputs[JsonParserTransform Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\custom.Outputs[JsonParserTransform Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\custom.Outputs[JsonParserTransform Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\custom.Outputs[JsonParserTransform Error Output].Columns[ErrorColumnName]"
                              codePage="1252"
                              dataType="str"
                              length="128"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\custom.Outputs[JsonParserTransform Error Output].Columns[ErrorColumnName]"
                              name="ErrorColumnName" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\custom.Outputs[JsonParserTransform Error Output].Columns[ErrorMessage]"
                              dataType="wstr"
                              length="1024"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\custom.Outputs[JsonParserTransform Error Output].Columns[ErrorMessage]"
                              name="ErrorMessage" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\custom.Outputs[JsonParserTransform Error Output].Columns[ErrorRawData]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\custom.Outputs[JsonParserTransform Error Output].Columns[ErrorRawData]"
                              name="ErrorRawData" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Listing search\Existing Listings from SQL"
                      componentClassID="Microsoft.OLEDBSource"
                      contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                      description="OLE DB Source"
                      name="Existing Listings from SQL"
                      usesDispositions="true"
                      version="7">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">0</property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the database object used to open a rowset."
                          name="OpenRowset">[dbo].[vwContacts]</property>
                        <property
                          dataType="System.String"
                          description="Specifies the variable that contains the name of the database object used to open a rowset."
                          name="OpenRowsetVariable"></property>
                        <property
                          dataType="System.String"
                          description="The SQL command to be executed."
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">SELECT [Id], 
       [etag] as etaglisting, 
       [AccountId]
FROM [Entities].[dbo].[vwListingBase] with (NOLOCK)
WHERE [AccountId] = ?</property>
                        <property
                          dataType="System.String"
                          description="The variable that contains the SQL command to be executed."
                          name="SqlCommandVariable"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Boolean"
                          description="Forces the use of the DefaultCodePage property value when describing character data."
                          name="AlwaysUseDefaultCodePage">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the mode used to access the database."
                          name="AccessMode"
                          typeConverter="AccessMode">2</property>
                        <property
                          dataType="System.String"
                          description="The mappings between the parameters in the SQL command and variables."
                          name="ParameterMapping">"Parameter0:Input",{40C273CD-83FA-4737-B171-10500D92D346};</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Iterate Offices\Sequence Container\Listing search\Existing Listings from SQL.Connections[OleDbConnection]"
                          connectionManagerID="Package.ConnectionManagers[colsqlbi01v.Entities]"
                          connectionManagerRefId="Package.ConnectionManagers[colsqlbi01v.Entities]"
                          description="The OLE DB runtime connection used to access the database."
                          name="OleDbConnection" />
                      </connections>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Listing search\Existing Listings from SQL.Outputs[OLE DB Source Output]"
                          name="OLE DB Source Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Existing Listings from SQL.Outputs[OLE DB Source Output].Columns[Id]"
                              dataType="i4"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Listing search\Existing Listings from SQL.Outputs[OLE DB Source Output].ExternalColumns[Id]"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\Existing Listings from SQL.Outputs[OLE DB Source Output].Columns[Id]"
                              name="Id"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Existing Listings from SQL.Outputs[OLE DB Source Output].Columns[AccountId]"
                              dataType="i2"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Listing search\Existing Listings from SQL.Outputs[OLE DB Source Output].ExternalColumns[AccountId]"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\Existing Listings from SQL.Outputs[OLE DB Source Output].Columns[AccountId]"
                              name="AccountId"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Existing Listings from SQL.Outputs[OLE DB Source Output].Columns[etaglisting]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Listing search\Existing Listings from SQL.Outputs[OLE DB Source Output].ExternalColumns[etaglisting]"
                              length="250"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\Existing Listings from SQL.Outputs[OLE DB Source Output].Columns[etaglisting]"
                              name="etaglisting"
                              truncationRowDisposition="FailComponent" />
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Existing Listings from SQL.Outputs[OLE DB Source Output].ExternalColumns[Id]"
                              dataType="i4"
                              name="Id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Existing Listings from SQL.Outputs[OLE DB Source Output].ExternalColumns[AccountId]"
                              codePage="1252"
                              dataType="str"
                              length="4"
                              name="AccountId" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Existing Listings from SQL.Outputs[OLE DB Source Output].ExternalColumns[etaglisting]"
                              dataType="wstr"
                              length="250"
                              name="etaglisting" />
                          </externalMetadataColumns>
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Listing search\Existing Listings from SQL.Outputs[OLE DB Source Error Output]"
                          isErrorOut="true"
                          name="OLE DB Source Error Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Existing Listings from SQL.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\Existing Listings from SQL.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Existing Listings from SQL.Outputs[OLE DB Source Error Output].Columns[etaglisting]"
                              dataType="wstr"
                              length="250"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\Existing Listings from SQL.Outputs[OLE DB Source Error Output].Columns[etaglisting]"
                              name="etaglisting" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Existing Listings from SQL.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\Existing Listings from SQL.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Existing Listings from SQL.Outputs[OLE DB Source Error Output].Columns[Id]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\Existing Listings from SQL.Outputs[OLE DB Source Error Output].Columns[Id]"
                              name="Id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Existing Listings from SQL.Outputs[OLE DB Source Error Output].Columns[AccountId]"
                              codePage="1252"
                              dataType="str"
                              length="4"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\Existing Listings from SQL.Outputs[OLE DB Source Error Output].Columns[AccountId]"
                              name="AccountId" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Listing search\Insert or Ignore"
                      componentClassID="Microsoft.ConditionalSplit"
                      contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
                      name="Insert or Ignore"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Listing search\Insert or Ignore.Inputs[Conditional Split Input]"
                          description="Input to the Conditional Split Transformation"
                          name="Conditional Split Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Insert or Ignore.Inputs[Conditional Split Input].Columns[etag]"
                              cachedDataType="wstr"
                              cachedLength="68"
                              cachedName="etag"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etag]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Insert or Ignore.Inputs[Conditional Split Input].Columns[etaglisting]"
                              cachedDataType="wstr"
                              cachedLength="250"
                              cachedName="etaglisting"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etaglisting]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Listing search\Insert or Ignore.Outputs[upsert]"
                          description="Output 1 of the Conditional Split Transformation"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          exclusionGroup="1"
                          name="upsert"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Listing search\Insert or Ignore.Inputs[Conditional Split Input]"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                              name="Expression">[ISNULL](#{Package\Iterate Offices\Sequence Container\Listing search\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etaglisting]}) || (#{Package\Iterate Offices\Sequence Container\Listing search\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etaglisting]}) != #{Package\Iterate Offices\Sequence Container\Listing search\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etag]}</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the friendly version of the expression. This expression version uses column names."
                              expressionType="Notify"
                              name="FriendlyExpression">ISNULL(etaglisting) || (etaglisting) != etag</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                              name="EvaluationOrder">0</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Listing search\Insert or Ignore.Outputs[ignore]"
                          description="Output 2 of the Conditional Split Transformation"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          exclusionGroup="1"
                          name="ignore"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Listing search\Insert or Ignore.Inputs[Conditional Split Input]"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                              name="Expression">![ISNULL](#{Package\Iterate Offices\Sequence Container\Listing search\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etaglisting]})</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the friendly version of the expression. This expression version uses column names."
                              expressionType="Notify"
                              name="FriendlyExpression">!ISNULL(etaglisting)</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                              name="EvaluationOrder">1</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Listing search\Insert or Ignore.Outputs[Conditional Split Default Output]"
                          description="Default Output of the Conditional Split Transformation"
                          exclusionGroup="1"
                          name="Conditional Split Default Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Listing search\Insert or Ignore.Inputs[Conditional Split Input]">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              name="IsDefaultOut">true</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Listing search\Insert or Ignore.Outputs[Conditional Split Error Output]"
                          description="Error Output of the Conditional Split Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Conditional Split Error Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Listing search\Insert or Ignore.Inputs[Conditional Split Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Insert or Ignore.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\Insert or Ignore.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Insert or Ignore.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\Insert or Ignore.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Listing search\JSON Generator Transform"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="JSON Generator Transform; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="The JSON generator transform can be used to create JSON document from single or multiple inputs. You can create simple or nested JSON document."
                      name="JSON Generator Transform"
                      version="5">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.Int32"
                          description="Determines JSON format and output mode (e.g. one JSON for all input rows or one JSON for each input row)"
                          expressionType="Notify"
                          name="OutputMode"
                          typeConverter="ZappySys.PowerPack.Transform.JsonGeneratorTransform.JsonOutputMode">2</property>
                        <property
                          dataType="System.String"
                          description="Defines shape of output JSON string"
                          expressionType="Notify"
                          name="LayoutInfo">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;settings ver="3"&gt;
  &lt;dataset id="ds_id729" main="True" inputid="729" readfrominput="True"&gt;&lt;/dataset&gt;
  &lt;map name="method" value="CustomFields::readFieldValuesAndRecord" datatype="String" /&gt;
  &lt;map name="args"&gt;
    &lt;map name="service_name" value="Listings" datatype="String" /&gt;
    &lt;map src="id" name="service_object_id" datatype="String" /&gt;
    &lt;map name="return_custom_fields_keyed_by" value="field_name" /&gt;
  &lt;/map&gt;
  &lt;map name="strip_response_prefixes" value="true" datatype="Bool" /&gt;
  &lt;map name="token" value="{{User::RexToken}}" /&gt;
&lt;/settings&gt;</property>
                        <property
                          dataType="System.Boolean"
                          description="Do not output attribute if value is NULL. By default null attribute is output as &quot;MyColname&quot; : null "
                          expressionType="Notify"
                          name="DoNotOutputNullAttribute">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indent JSON Text generated by this transform (Pretty Print)"
                          expressionType="Notify"
                          name="IndentOutput">false</property>
                        <property
                          dataType="System.String"
                          description="Default output format for datetime columns"
                          expressionType="Notify"
                          name="DateTimeFormat">yyyy-MM-dd HH:mm:ss</property>
                        <property
                          dataType="System.String"
                          description="Culture setting for this task. This option is useful to control output format for certain data types (e.g. number, decimal) based on regional settings. In USA dot is used for decimal indicator but in Germany it may be comma. Leave this blank if you want to use system default settings."
                          expressionType="Notify"
                          name="Culture"></property>
                        <property
                          dataType="System.Boolean"
                          description="Document Header/Footer text come from upstream column rather than direct string"
                          expressionType="Notify"
                          name="UseColumnForHeaderFooter">false</property>
                        <property
                          dataType="System.String"
                          description="Header text for document (Added before each document in the output)"
                          expressionType="Notify"
                          name="DocumentHeader"></property>
                        <property
                          dataType="System.String"
                          description="Footer text for document (Added after each document in the output)"
                          expressionType="Notify"
                          name="DocumentFooter"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies how many rows to include in each batch (Array records for single dataset array mode). 0=Include all in one batch. This setting is only valid for Mode=[Single Dataset Array]"
                          expressionType="Notify"
                          name="ArrayBatchSize">0</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.JsonGeneratorTransform</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to True if you dont want to output empty nodes of sub document (e.g nested property). This option is only applicable if you enabled DoNotOutputNullProperty. If all child peoprties are NULL for parent node then by default output contains empty nodes (e.g. CountryInfo: { CityInfo: { } } for Json --OR-- &lt;CountryInfo&gt;&lt;CityInfo /&gt;&lt;/CountryInfo&gt; for Xml). You can enable this option to avoid such empty nodes from the output."
                          expressionType="Notify"
                          name="DoNotOutputEmptyNestedAttribute">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to True if you dont want to output empty array nodes when no record found for that array (e.g. &quot;Orders&quot;: [ ] for JSON --OR-- &lt;Orders&gt;&lt;/Orders&gt; for Xml). You can enable this option to avoid such empty nodes from the output."
                          expressionType="Notify"
                          name="DoNotOutputEmptyArrayAttribute">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies encoding for data. If you set CharacterSet property then Encoing is ignored."
                          expressionType="Notify"
                          name="Encoding"
                          typeConverter="ZappySys.Common.EncodingType">2</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Listing search\JSON Generator Transform.Inputs[JsonInput1]"
                          name="JsonInput1">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Id for attached dataset with input. Use JSON Layout Editor to see attached dataset"
                              expressionType="Notify"
                              name="DatasetInputId">729</property>
                          </properties>
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\JSON Generator Transform.Inputs[JsonInput1].Columns[etag]"
                              cachedDataType="wstr"
                              cachedLength="68"
                              cachedName="etag"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etag]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\JSON Generator Transform.Inputs[JsonInput1].Columns[id]"
                              cachedDataType="i4"
                              cachedName="id"
                              cachedSortKeyPosition="1"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[id]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\JSON Generator Transform.Inputs[JsonInput1].Columns[etaglisting]"
                              cachedDataType="wstr"
                              cachedLength="250"
                              cachedName="etaglisting"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etaglisting]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Listing search\JSON Generator Transform.Inputs[JsonInput2]"
                          name="JsonInput2">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Listing search\JSON Generator Transform.Outputs[JsonGeneratorTransformOutput]"
                          errorOrTruncationOperation="Error"
                          name="JsonGeneratorTransformOutput">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\JSON Generator Transform.Outputs[JsonGeneratorTransformOutput].Columns[ZS_JSON_OUT]"
                              dataType="nText"
                              description="This output column contains generated JSON string from JSON generator Transform"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\JSON Generator Transform.Outputs[JsonGeneratorTransformOutput].Columns[ZS_JSON_OUT]"
                              name="ZS_JSON_OUT" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Listing search\JSON Parser Add id back in"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="JSON Parser Transform; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="Parse incoming JSON String into columns. You can also parse and transform single JSON record into multiple rows by filtering data based on JSON Path (e.g. $.Customer.Orders[*])"
                      name="JSON Parser Add id back in"
                      usesDispositions="true"
                      version="2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for any numeric data types"
                          expressionType="Notify"
                          name="TreatBlankNumberAsNull">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for bool data types"
                          expressionType="Notify"
                          name="TreatBlankBoolAsNull">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for any date/time data types"
                          expressionType="Notify"
                          name="TreatBlankDateAsNull">true</property>
                        <property
                          dataType="System.String"
                          description="Sample JSON data used to parse output columns."
                          expressionType="Notify"
                          name="SampleData"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">{"method":"CustomFields::readFieldValuesAndRecord","args":{"service_name":"Listings","service_object_id":"28569","return_custom_fields_keyed_by":"field_name"},"strip_response_prefixes":1,"token":"b57c-0be2-04f4-8d65-fd25-a099-6087-07de-1780-19443"}</property>
                        <property
                          dataType="System.Boolean"
                          description="Include all upstream parent columns into output except the one you selected to parse. By default only parsed columns from Input document is included in the output. If you wish to include all other upstream columns in the output too then check this option."
                          expressionType="Notify"
                          name="OutputAllUpstreamColumns">true</property>
                        <property
                          dataType="System.Int32"
                          description="Defines how to handle empty input. By default NULL or Empty input is skipped from parsing."
                          expressionType="Notify"
                          name="EmptyInputProcessingMode"
                          typeConverter="ZappySys.Common.Data.EmptyInputProcessingMode">0</property>
                        <property
                          dataType="System.String"
                          description="Defines how to handle empty input. By default NULL or Empty input is skipped from parsing."
                          expressionType="Notify"
                          name="TreatEmptyInputAs">{ }</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum JSON records to fetch. Set this value to 0 for all records"
                          expressionType="Notify"
                          name="MaxRows">0</property>
                        <property
                          dataType="System.String"
                          description="Enter expression here to filter data.(Example:  $.Users[*].UserName ) This will fetch User names from users records"
                          expressionType="Notify"
                          name="Filter"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.Boolean"
                          description="Use this option to include parent properties (Non array) in the output along with Filtered Rows"
                          expressionType="Notify"
                          name="IncludeParentColumns">true</property>
                        <property
                          dataType="System.Boolean"
                          description="By default child and parent information is not included in the output if children not found for specified expression. For example if you want to extract all orders from all customers nodes then you can type $.Customers[*].Orders[*]. This will fetch all orders from all customers. By default customers records without orders wont be included in the output. If you want to include those customers where orders not found then check this option (Output null information for order attributes). This behavior is similar to LEFT OUTER JOIN in SQL (Left side is parent, right side is child). This option is ***resource intensive*** so only check if you really care about this behavior."
                          expressionType="Notify"
                          name="IncludeParentColumnsWhenChildMissing">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to true if you want to output parent columns which are array. By default any parent column which is an array is not included in output. See also FilterForParentColumnsWithArrayType property if you set this property"
                          expressionType="Notify"
                          name="IncludeParentColumnsWithArrayType">false</property>
                        <property
                          dataType="System.String"
                          description="Filter expression to extract value form parent"
                          expressionType="Notify"
                          name="FilterForParentColumnsWithArrayType"></property>
                        <property
                          dataType="System.String"
                          description="Prefix for parent column name. This option is only valid if you have set IncludeParentColumns=True"
                          expressionType="Notify"
                          name="ParentColumnPrefix">P_</property>
                        <property
                          dataType="System.Boolean"
                          description="Throw error if property name specified in filter expression is missing. By default it will ignore any missing property errors."
                          expressionType="Notify"
                          name="ThrowErrorIfPropertyMissing">false</property>
                        <property
                          dataType="System.Int32"
                          description="This property how many nested levels should be scanned to fetch various properties. 0=Scan all child levels."
                          expressionType="Notify"
                          name="MaxLevelsToScan">0</property>
                        <property
                          dataType="System.String"
                          description="List comma separated property names from JSON document which you want to exclude from output. Specify parent property name to exclude all child nodes."
                          expressionType="Notify"
                          name="ExcludedProperties"></property>
                        <property
                          dataType="System.String"
                          description="Property level separator used in generated property name (separator for outer properties - Above selected filter node). Use this if default separator is producing duplicate property name which is conflicting with existing name."
                          expressionType="Notify"
                          name="LevelSeparator">_</property>
                        <property
                          dataType="System.Boolean"
                          description="Enables deep array flattening for selected filtered hierarchy. When you turn on this property it will flatten each property of each array item and expose as column (e.g. If you have Filter set as $.customers[*] and for each customer you have an array of Addresses then you may see output columns like Addresses.1.City, Addresses.1.State, Addresses.2.City, Addresses.2.State .... Addresses.N.City, Addresses.N.State). You can control how many array items you want to flatten by setting MaxArrayItemsToFlatten property."
                          expressionType="Notify"
                          name="EnableArrayFlattening">false</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum number of array items to flatten. inner array flattening. Adjust this property to control how many columns being generated. This option is ignored if you set EnableArrayFlattening=false"
                          expressionType="Notify"
                          name="MaxArrayItemsToFlatten">10</property>
                        <property
                          dataType="System.String"
                          description="Specifies how custom date formatted strings are parsed when reading JSON."
                          expressionType="Notify"
                          name="DateFormatString"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies how date formatted strings, e.g. Date(1198908717056) and 2012-03-21T05:40Z, are parsed when reading JSON."
                          expressionType="Notify"
                          name="DateParseHandling"
                          typeConverter="ZappySys.Common.DateParseHandling">1</property>
                        <property
                          dataType="System.Boolean"
                          description="Output as raw JSON document rather than parsing individual fields. This option is helpful if you have documents stored in a file and you want to pass them downstream as raw JSON string rather than parsing into columns."
                          expressionType="Notify"
                          name="OutputRawDocument">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indent JSON output so its easy to read."
                          expressionType="Notify"
                          name="IndentOutput">false</property>
                        <property
                          dataType="System.Boolean"
                          description="When this property is true then Column is converted to Row. Pivoted names will appear under  Pivot_Name column and values will appear under Pivot_Value field."
                          expressionType="Notify"
                          name="EnablePivot">false</property>
                        <property
                          dataType="System.Int32"
                          description="Array Transformation you want to apply. Useful for case when you have 2-Dimensional arrays with rows/columns in separate arrays."
                          expressionType="Notify"
                          name="ArrayTransformationType"
                          typeConverter="ZappySys.Json.ArrayTransformType">0</property>
                        <property
                          dataType="System.String"
                          description="Filter expression to use to extract column names for array transformation."
                          expressionType="Notify"
                          name="ArrayTransColumnNameFilter"></property>
                        <property
                          dataType="System.String"
                          description="Filter expression for row values (Not applicable for simple array transformation)."
                          expressionType="Notify"
                          name="ArrayTransRowValueFilter"></property>
                        <property
                          dataType="System.Boolean"
                          description="When you have 2D array but don't have column list specified in a separate array then use this option (e.g. { arr: [[10,11],[21,22]] } )."
                          expressionType="Notify"
                          name="ArrayTransEnableCustomColumns">false</property>
                        <property
                          dataType="System.String"
                          description="When you have 2D array but don't have column list specified in a separate array then use specify column names here. Use comma separated list (e.g col1,col2,col3 ). Column name Order must match value order."
                          expressionType="Notify"
                          name="ArrayTransCustomColumns"></property>
                        <property
                          dataType="System.Int32"
                          description="Metadata scan mode controls how data type and length is determined. By default few records scanned to determine datatype/length. Changing ScanMode affects length/datatype accuracy."
                          expressionType="Notify"
                          name="MetaDataScanMode"
                          typeConverter="ZappySys.Common.Data.MetaDataScanMode">4</property>
                        <property
                          dataType="System.Int32"
                          description="Length for all string column. This option is only valid for MetaDataScanMode=Custom"
                          expressionType="Notify"
                          name="MetaDataCustomLength">1000</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.JsonParserTransform</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Listing search\JSON Parser Add id back in.Inputs[JsonParserTransformInput]"
                          errorRowDisposition="FailComponent"
                          name="JsonParserTransformInput"
                          truncationRowDisposition="FailComponent">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\JSON Parser Add id back in.Inputs[JsonParserTransformInput].Columns[ZS_JSON_OUT]"
                              cachedDataType="nText"
                              cachedName="ZS_JSON_OUT"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\JSON Generator Transform.Outputs[JsonGeneratorTransformOutput].Columns[ZS_JSON_OUT]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\JSON Parser Add id back in.Inputs[JsonParserTransformInput].Columns[ResponseText]"
                              cachedDataType="nText"
                              cachedName="ResponseText"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\Web API Destination.Outputs[Response Output].Columns[ResponseText]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Listing search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[ResponseText]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\JSON Parser Add id back in.Inputs[JsonParserTransformInput].Columns[StatusCode]"
                              cachedDataType="i4"
                              cachedName="StatusCode"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\Web API Destination.Outputs[Response Output].Columns[StatusCode]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Listing search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[StatusCode]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True" />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Listing search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput]"
                          errorOrTruncationOperation="Error"
                          errorRowDisposition="FailComponent"
                          name="JsonParserTransformOutput"
                          truncationRowDisposition="FailComponent">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[StatusCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[StatusCode]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Listing search\JSON Parser Add id back in.Inputs[JsonParserTransformInput].Columns[StatusCode]"
                              name="StatusCode" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[ResponseText]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[ResponseText]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Listing search\JSON Parser Add id back in.Inputs[JsonParserTransformInput].Columns[ResponseText]"
                              name="ResponseText" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[args.service_object_id]"
                              dataType="i8"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Listing search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].ExternalColumns[args.service_object_id]"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[args.service_object_id]"
                              name="args.service_object_id" />
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].ExternalColumns[method]"
                              dataType="wstr"
                              length="152"
                              name="method" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].ExternalColumns[args.service_name]"
                              dataType="wstr"
                              length="32"
                              name="args.service_name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].ExternalColumns[args.service_object_id]"
                              dataType="wstr"
                              length="20"
                              name="args.service_object_id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].ExternalColumns[args.return_custom_fields_keyed_by]"
                              dataType="wstr"
                              length="40"
                              name="args.return_custom_fields_keyed_by" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].ExternalColumns[strip_response_prefixes]"
                              dataType="i8"
                              name="strip_response_prefixes" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].ExternalColumns[token]"
                              dataType="wstr"
                              length="200"
                              name="token" />
                          </externalMetadataColumns>
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Listing search\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output]"
                          isErrorOut="true"
                          name="JsonParserTransform Error Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[StatusCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[StatusCode]"
                              name="StatusCode" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[ResponseText]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[ResponseText]"
                              name="ResponseText" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[args.service_object_id]"
                              dataType="i8"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[args.service_object_id]"
                              name="args.service_object_id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[ErrorColumnName]"
                              codePage="1252"
                              dataType="str"
                              length="128"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[ErrorColumnName]"
                              name="ErrorColumnName" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[ErrorMessage]"
                              dataType="wstr"
                              length="1024"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[ErrorMessage]"
                              name="ErrorMessage" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[ErrorRawData]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[ErrorRawData]"
                              name="ErrorRawData" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Listing search\Merge Join"
                      componentClassID="Microsoft.MergeJoin"
                      contactInfo="Merge Join;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Combine two sorted data flows into one using the FULL, LEFT, or INNER join. We recommend this transformation when data flows can be sorted at their sources."
                      name="Merge Join"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of join to perform."
                          name="JoinType"
                          typeConverter="JoinType">2</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the number of columns in the ordering key."
                          name="NumKeyColumns">1</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the null values are treated as equal values."
                          name="TreatNullsAsEqual">true</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates the requested maximum buffers per input before blocking."
                          name="MaxBuffersPerInput">5</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Listing search\Merge Join.Inputs[Merge Join Left Input]"
                          hasSideEffects="true"
                          name="Merge Join Left Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Merge Join.Inputs[Merge Join Left Input].Columns[args.service_object_id2]"
                              cachedDataType="i8"
                              cachedName="args.service_object_id2"
                              cachedSortKeyPosition="1"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\Sort.Outputs[Sort Output].Columns[args.service_object_id2]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Merge Join.Inputs[Merge Join Left Input].Columns[StatusCode]"
                              cachedDataType="i4"
                              cachedName="StatusCode"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\Sort.Outputs[Sort Output].Columns[StatusCode]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Merge Join.Inputs[Merge Join Left Input].Columns[custdoc]"
                              cachedDataType="nText"
                              cachedName="custdoc"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\Sort.Outputs[Sort Output].Columns[custdoc]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Listing search\Merge Join.Inputs[Merge Join Right Input]"
                          hasSideEffects="true"
                          name="Merge Join Right Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Merge Join.Inputs[Merge Join Right Input].Columns[args.service_object_id1]"
                              cachedDataType="i8"
                              cachedName="args.service_object_id1"
                              cachedSortKeyPosition="1"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\Sort 1.Outputs[Sort Output].Columns[args.service_object_id1]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Merge Join.Inputs[Merge Join Right Input].Columns[recorddoc]"
                              cachedDataType="nText"
                              cachedName="recorddoc"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\Sort 1.Outputs[Sort Output].Columns[recorddoc]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Listing search\Merge Join.Outputs[Merge Join Output]"
                          isSorted="true"
                          name="Merge Join Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Merge Join.Outputs[Merge Join Output].Columns[args.service_object_id]"
                              dataType="i8"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\Merge Join.Outputs[Merge Join Output].Columns[args.service_object_id]"
                              name="args.service_object_id"
                              sortKeyPosition="1">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Iterate Offices\Sequence Container\Listing search\Merge Join.Inputs[Merge Join Left Input].Columns[args.service_object_id2]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Merge Join.Outputs[Merge Join Output].Columns[StatusCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\Merge Join.Outputs[Merge Join Output].Columns[StatusCode]"
                              name="StatusCode">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Iterate Offices\Sequence Container\Listing search\Merge Join.Inputs[Merge Join Left Input].Columns[StatusCode]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Merge Join.Outputs[Merge Join Output].Columns[recorddoc]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\Merge Join.Outputs[Merge Join Output].Columns[recorddoc]"
                              name="recorddoc">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Iterate Offices\Sequence Container\Listing search\Merge Join.Inputs[Merge Join Right Input].Columns[recorddoc]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Merge Join.Outputs[Merge Join Output].Columns[custdoc]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\Merge Join.Outputs[Merge Join Output].Columns[custdoc]"
                              name="custdoc">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Iterate Offices\Sequence Container\Listing search\Merge Join.Inputs[Merge Join Left Input].Columns[custdoc]}</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Listing search\Merge Join To Find Those to Insert"
                      componentClassID="Microsoft.MergeJoin"
                      contactInfo="Merge Join;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Combine two sorted data flows into one using the FULL, LEFT, or INNER join. We recommend this transformation when data flows can be sorted at their sources."
                      name="Merge Join To Find Those to Insert"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of join to perform."
                          name="JoinType"
                          typeConverter="JoinType">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the number of columns in the ordering key."
                          name="NumKeyColumns">1</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the null values are treated as equal values."
                          name="TreatNullsAsEqual">true</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates the requested maximum buffers per input before blocking."
                          name="MaxBuffersPerInput">5</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Listing search\Merge Join To Find Those to Insert.Inputs[Merge Join Left Input]"
                          hasSideEffects="true"
                          name="Merge Join Left Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Merge Join To Find Those to Insert.Inputs[Merge Join Left Input].Columns[etag]"
                              cachedDataType="wstr"
                              cachedLength="68"
                              cachedName="etag"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\API Sort.Outputs[Sort Output].Columns[etag]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Merge Join To Find Those to Insert.Inputs[Merge Join Left Input].Columns[id]"
                              cachedDataType="i4"
                              cachedName="id"
                              cachedSortKeyPosition="1"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\API Sort.Outputs[Sort Output].Columns[id]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Listing search\Merge Join To Find Those to Insert.Inputs[Merge Join Right Input]"
                          hasSideEffects="true"
                          name="Merge Join Right Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Merge Join To Find Those to Insert.Inputs[Merge Join Right Input].Columns[Id]"
                              cachedDataType="i4"
                              cachedName="Id"
                              cachedSortKeyPosition="1"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\SQL Sort.Outputs[Sort Output].Columns[Id]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Merge Join To Find Those to Insert.Inputs[Merge Join Right Input].Columns[etaglisting]"
                              cachedDataType="wstr"
                              cachedLength="250"
                              cachedName="etaglisting"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\SQL Sort.Outputs[Sort Output].Columns[etaglisting]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Listing search\Merge Join To Find Those to Insert.Outputs[Merge Join Output]"
                          isSorted="true"
                          name="Merge Join Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etag]"
                              dataType="wstr"
                              length="68"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etag]"
                              name="etag">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Iterate Offices\Sequence Container\Listing search\Merge Join To Find Those to Insert.Inputs[Merge Join Left Input].Columns[etag]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[id]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[id]"
                              name="id"
                              sortKeyPosition="1">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Iterate Offices\Sequence Container\Listing search\Merge Join To Find Those to Insert.Inputs[Merge Join Left Input].Columns[id]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etaglisting]"
                              dataType="wstr"
                              length="250"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etaglisting]"
                              name="etaglisting">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Iterate Offices\Sequence Container\Listing search\Merge Join To Find Those to Insert.Inputs[Merge Join Right Input].Columns[etaglisting]}</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Listing search\Multicast"
                      componentClassID="Microsoft.Multicast"
                      contactInfo="Multicast;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Distributes every input row to every row in one or more outputs. For example, branch your data flow to make a copy of data so that some values can be masked before sharing with external partners."
                      name="Multicast">
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Listing search\Multicast.Inputs[Multicast Input 1]"
                          name="Multicast Input 1">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Listing search\Multicast.Outputs[Multicast Output 2]"
                          deleteOutputOnPathDetached="true"
                          name="Multicast Output 2"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Listing search\Multicast.Inputs[Multicast Input 1]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Listing search\Multicast.Outputs[Multicast Output 1]"
                          deleteOutputOnPathDetached="true"
                          name="Multicast Output 1"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Listing search\Multicast.Inputs[Multicast Input 1]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Listing search\Multicast.Outputs[Multicast Output 4]"
                          dangling="true"
                          deleteOutputOnPathDetached="true"
                          name="Multicast Output 4"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Listing search\Multicast.Inputs[Multicast Input 1]">
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Listing search\record"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="JSON Parser Transform; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="Parse incoming JSON String into columns. You can also parse and transform single JSON record into multiple rows by filtering data based on JSON Path (e.g. $.Customer.Orders[*])"
                      name="record"
                      usesDispositions="true"
                      version="2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">3</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for any numeric data types"
                          expressionType="Notify"
                          name="TreatBlankNumberAsNull">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for bool data types"
                          expressionType="Notify"
                          name="TreatBlankBoolAsNull">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for any date/time data types"
                          expressionType="Notify"
                          name="TreatBlankDateAsNull">true</property>
                        <property
                          dataType="System.String"
                          description="Sample JSON data used to parse output columns."
                          expressionType="Notify"
                          name="SampleData"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">{
    "result": {
        "record": {
            "system_listing_state": "current",
            "system_ctime": 1589475863,
            "system_modtime": 1592229475,
            "system_publication_time": 1592229455,
            "system_publication_user_id": 27084,
            "system_publication_status": "published",
            "system_overpayment_balance": null,
            "system_has_preupload_errors": null,
            "authority_date_start": "2020-05-14",
            "authority_duration_days": 62,
            "authority_date_expires": "2020-07-14",
            "price_advertise_as": "£185,000",
            "price_est_rent_pw": null,
            "price_rent": null,
            "price_match": 185000,
            "price_match_sale": 185000,
            "price_match_rent_pa_inc_tax": null,
            "price_bond": null,
            "price_rent_per_m2": null,
            "available_from_date": null,
            "inspection_key_detail": null,
            "inspection_alarm_code": null,
            "inspection_notes": null,
            "tenancy_type": "unknown",
            "outgoings_annual": null,
            "outgoings_rent_is_plus": null,
            "meta_highlight_1": null,
            "meta_highlight_2": null,
            "meta_highlight_3": null,
            "meta_other_features": null,
            "feedback_offer_level": 185000,
            "feedback_price_rank": 4,
            "feedback_notes": null,
            "legal_prop_lot": null,
            "legal_prop_subdivision": null,
            "legal_prop_address": null,
            "legal_prop_titleref": null,
            "legal_vendor_name": null,
            "legal_vendor_residence": null,
            "state_value_price": null,
            "state_value_deposit": null,
            "state_date": null,
            "state_reason_id": null,
            "state_reason_note": null,
            "state_lost_agency_id": null,
            "state_change_timestamp": null,
            "legal_solicitor_contact_id": null,
            "inbound_unique_id": "BJB090597945",
            "inbound_last_update": null,
            "publish_to_portals": true,
            "publish_to_automatch": true,
            "publish_to_external": true,
            "publish_to_general": true,
            "status_is_not_for_sale": null,
            "baseline_price": null,
            "parent_listing_id": null,
            "new_home": null,
            "comm_amount_fixed": null,
            "comm_amount_percentage": 1,
            "comm_is_inc_tax": null,
            "comm_est_based_on_service": "Listings",
            "comm_est_based_on_object_id": "29679",
            "comm_est_based_on_amount": "185000",
            "comm_est_amount_net_of_tax": 1850,
            "comm_est_amount_inc_tax": 2220,
            "comm_base_amount_override": null,
            "etag": "29679-1592229475",
            "_id": 29679,
            "system_owner_user": {
                "id": "27084",
                "_name": "Claire Baverstock",
                "_first_name": "Claire",
                "_last_name": "Baverstock",
                "_email_address": "ClaireBaverstock@bjbmail.com"
            },
            "system_modified_user": {
                "id": 0,
                "_name": "System User",
                "_first_name": "System",
                "_last_name": "User",
                "_email_address": "no-reply@rexsoftware.com.au"
            },
            "system_created_user": {
                "id": "27084",
                "_name": "Claire Baverstock",
                "_first_name": "Claire",
                "_last_name": "Baverstock",
                "_email_address": "ClaireBaverstock@bjbmail.com"
            },
            "listing_agent_1": {
                "id": "27084",
                "_name": "Claire Baverstock",
                "_first_name": "Claire",
                "_last_name": "Baverstock",
                "_email_address": "ClaireBaverstock@bjbmail.com",
                "_phone_direct": "01206363619",
                "_phone_mobile": "447418346444",
                "_position": "Branch Manager",
                "_is_account_user": "1",
                "_profile_image": null
            },
            "listing_agent_2": null,
            "legal_solicitor": null,
            "project_stage": null,
            "location": {
                "id": "26",
                "text": "BJB Alsager"
            },
            "authority_type": {
                "id": "sole",
                "text": "Sole"
            },
            "exclusivity": null,
            "inspection_key_location": null,
            "inspection_type": null,
            "listing_category": {
                "id": "residential_sale",
                "text": "Residential Sale"
            },
            "price_rent_period": null,
            "price_rent_tax": null,
            "comm_structure": null,
            "comm_amount_model": {
                "id": "percentage",
                "text": "Percentage"
            },
            "epc_current_eer": null,
            "epc_potential_eer": null,
            "epc_current_eir": null,
            "epc_potential_eir": null,
            "epc_lodgement_date": null,
            "epc_expiry_date": null,
            "epc_not_required": null,
            "epc_not_required_reason": null,
            "property": {
                "system_record_state": "active",
                "system_ctime": 1551717144,
                "system_modtime": 1592229439,
                "system_search_key": "8 Elsby Road, Stoke-On-Trent ST7 2RH",
                "system_geo_location": null,
                "adr_unit_number": null,
                "adr_street_number": "8",
                "adr_street_name": "Elsby Road",
                "adr_suburb_or_town": "Stoke-On-Trent",
                "adr_locality": "Cheshire",
                "adr_state_or_region": null,
                "adr_postcode": "ST7 2RH",
                "adr_country": "uk",
                "adr_estate_name": null,
                "adr_estate_stage": null,
                "property_subcategory_id": null,
                "meta_rates_council": null,
                "meta_rates_bodycorp": null,
                "meta_rates_water": null,
                "meta_rates_land": null,
                "meta_rates_other": null,
                "meta_parking_notes": null,
                "meta_zone": "78267",
                "is_dnd": null,
                "business_name": null,
                "etag": "3655832-1592229439",
                "system_owner_user": {
                    "id": "19443",
                    "_name": "Rosie API",
                    "_first_name": "Rosie",
                    "_last_name": "API",
                    "_email_address": "rosie@spicerhaart.co.uk"
                },
                "system_modified_user": {
                    "id": "27084",
                    "_name": "Claire Baverstock",
                    "_first_name": "Claire",
                    "_last_name": "Baverstock",
                    "_email_address": "ClaireBaverstock@bjbmail.com"
                },
                "system_created_user": {
                    "id": "19443",
                    "_name": "Rosie API",
                    "_first_name": "Rosie",
                    "_last_name": "API",
                    "_email_address": "rosie@spicerhaart.co.uk"
                },
                "adr_latitude": "",
                "adr_longitude": null,
                "attr_bedrooms": 3,
                "attr_bathrooms": 1,
                "attr_ensuites": null,
                "attr_toilets": null,
                "attr_living_areas": null,
                "attr_garages": null,
                "attr_carports": null,
                "attr_open_spaces": null,
                "attr_total_car_accom": null,
                "attr_buildarea": null,
                "attr_buildarea_m2": null,
                "attr_landarea": null,
                "attr_landarea_m2": null,
                "attr_energy_rating": null,
                "attr_build_year": null,
                "attr_sleeps": null,
                "attr_roi_pa": null,
                "attr_takings": null,
                "attr_valuation_date": null,
                "attr_valuation_amount": null,
                "attr_valuation_land_amount": null,
                "attr_is_house_land": null,
                "attr_is_franchise": null,
                "attr_is_corner_block": null,
                "attr_land_depth_rear": null,
                "attr_land_depth_left": null,
                "attr_land_depth_right": null,
                "attr_land_frontage": null,
                "attr_tenure_ground_rent": null,
                "attr_tenure_service_charge": null,
                "attr_tenure_expiry_year": null,
                "attr_tenure_other": null,
                "rural_fences": null,
                "rural_annual_rainfall": null,
                "rural_soil_types": null,
                "rural_improvements": null,
                "rural_irrigation": null,
                "rural_carrying_capacity": null,
                "rural_services": null,
                "adr_building": null,
                "attr_buildarea_unit": null,
                "attr_landarea_unit": null,
                "attr_roof": null,
                "attr_exterior": {
                    "id": "212",
                    "text": "Brick"
                },
                "attr_whole_part": null,
                "attr_land_crossover": null,
                "attr_tenure": {
                    "id": "freehold",
                    "text": "Freehold"
                },
                "attr_tenure_agent": null,
                "property_category": {
                    "id": "residential",
                    "text": "Residential"
                },
                "property_image": null,
                "_security_user_rights": [
                    "read",
                    "update",
                    "archive",
                    "trash",
                    "perms"
                ],
                "id": 3655832
            },
            "_related": {
                "property_features": [],
                "property_views": [],
                "property_tags": [],
                "contact_reln_listing": [
                    {
                        "do_not_contact": null,
                        "_id": 53889,
                        "reln_type": {
                            "id": "owner",
                            "text": "Listing Owner"
                        },
                        "contact": {
                            "_system_record_state": "active",
                            "_system_ctime": "1592227485",
                            "_system_modtime": "1592228399",
                            "_name": "Charles Smalley",
                            "_email_address": "claire.ellis@poolealcock.co.uk",
                            "_phone_number": "01260 275337",
                            "_fax_number": null,
                            "_is_dnd": null,
                            "_type": "person",
                            "_last_contacted_date": null,
                            "_name_last": "Smalley",
                            "_address_postal": null,
                            "_address": null,
                            "_interest_level": null,
                            "_marketing_birthday": null,
                            "_marketing_enquiry_source": null,
                            "_marketing_gender": null,
                            "_marketing_postcode": null,
                            "_name_legal": null,
                            "_name_salutation": null,
                            "_name_addressee": null,
                            "_system_owner_user": {
                                "id": "27084",
                                "_name": "Claire Baverstock",
                                "_first_name": "Claire",
                                "_last_name": "Baverstock",
                                "_email_address": "ClaireBaverstock@bjbmail.com"
                            },
                            "_contact_image": null,
                            "_marketing_enquiry_method": null,
                            "_etag": "1657569-1592228399",
                            "id": "1657569"
                        }
                    }
                ],
                "listing_idealfors": [],
                "listing_allowances": [],
                "listing_adverts": [
                    {
                        "advert_type": "internet",
                        "advert_heading": "A three bedroom semi-detached dormer bungalow situated in a highly regarded location close to the centre of Alsager. The property is well presented and is offered for sale with NO ONWARD CHAIN!",
                        "advert_body": "The well presented accommodation comprises; entrance hall, kitchen, spacious lounge/dining room, conservatory, three bedrooms and bathroom. To the front of the property there is ample driveway parking with garden to the rear. Local amenities, supermarket and bus routes are all within walking distance."
                    },
                    {
                        "advert_type": "brochure",
                        "advert_heading": null,
                        "advert_body": null
                    },
                    {
                        "advert_type": "stocklist",
                        "advert_heading": null,
                        "advert_body": null
                    }
                ],
                "listing_events": [],
                "listing_images": [
                    {
                        "uri": "rexlive://1790/listings/29679/images/IMG_1160_b657-3454-6cc0-bb30-2307-7b01-d7f2-e4f2_20200515035136.jpg",
                        "_url": "//app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com/app/livestore/accounts/1790/listings/29679/images/IMG_1160_b657-3454-6cc0-bb30-2307-7b01-d7f2-e4f2_20200515035136.jpg",
                        "_thumbs": {
                            "800x600": {
                                "uri": "rexlive://1790/listings/29679/images/IMG_1160_b657-3454-6cc0-bb30-2307-7b01-d7f2-e4f2_20200515035136_800x600.jpg",
                                "_url": "//app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com/app/livestore/accounts/1790/listings/29679/images/IMG_1160_b657-3454-6cc0-bb30-2307-7b01-d7f2-e4f2_20200515035136_800x600.jpg"
                            },
                            "400x300": {
                                "uri": "rexlive://1790/listings/29679/images/IMG_1160_b657-3454-6cc0-bb30-2307-7b01-d7f2-e4f2_20200515035136_400x300.jpg",
                                "_url": "//app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com/app/livestore/accounts/1790/listings/29679/images/IMG_1160_b657-3454-6cc0-bb30-2307-7b01-d7f2-e4f2_20200515035136_400x300.jpg"
                            },
                            "200x150": {
                                "uri": "rexlive://1790/listings/29679/images/IMG_1160_b657-3454-6cc0-bb30-2307-7b01-d7f2-e4f2_20200515035136_200x150.jpg",
                                "_url": "//app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com/app/livestore/accounts/1790/listings/29679/images/IMG_1160_b657-3454-6cc0-bb30-2307-7b01-d7f2-e4f2_20200515035136_200x150.jpg"
                            },
                            "80x60": {
                                "uri": "rexlive://1790/listings/29679/images/IMG_1160_b657-3454-6cc0-bb30-2307-7b01-d7f2-e4f2_20200515035136_80x60.jpg",
                                "_url": "//app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com/app/livestore/accounts/1790/listings/29679/images/IMG_1160_b657-3454-6cc0-bb30-2307-7b01-d7f2-e4f2_20200515035136_80x60.jpg"
                            }
                        },
                        "_id": 419904,
                        "system_modtime": 1589478738,
                        "priority": "1",
                        "inbound_original_src_url": null,
                        "inbound_last_update": null,
                        "inbound_index": null
                    },
                    {
                        "uri": "rexlive://1790/listings/29679/images/IMG_1155_be4e-aa75-d6b5-d318-eae1-793c-80c3-4171_20200515035156.jpg",
                        "_url": "//app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com/app/livestore/accounts/1790/listings/29679/images/IMG_1155_be4e-aa75-d6b5-d318-eae1-793c-80c3-4171_20200515035156.jpg",
                        "_thumbs": {
                            "800x600": {
                                "uri": "rexlive://1790/listings/29679/images/IMG_1155_be4e-aa75-d6b5-d318-eae1-793c-80c3-4171_20200515035156_800x600.jpg",
                                "_url": "//app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com/app/livestore/accounts/1790/listings/29679/images/IMG_1155_be4e-aa75-d6b5-d318-eae1-793c-80c3-4171_20200515035156_800x600.jpg"
                            },
                            "400x300": {
                                "uri": "rexlive://1790/listings/29679/images/IMG_1155_be4e-aa75-d6b5-d318-eae1-793c-80c3-4171_20200515035156_400x300.jpg",
                                "_url": "//app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com/app/livestore/accounts/1790/listings/29679/images/IMG_1155_be4e-aa75-d6b5-d318-eae1-793c-80c3-4171_20200515035156_400x300.jpg"
                            },
                            "200x150": {
                                "uri": "rexlive://1790/listings/29679/images/IMG_1155_be4e-aa75-d6b5-d318-eae1-793c-80c3-4171_20200515035156_200x150.jpg",
                                "_url": "//app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com/app/livestore/accounts/1790/listings/29679/images/IMG_1155_be4e-aa75-d6b5-d318-eae1-793c-80c3-4171_20200515035156_200x150.jpg"
                            },
                            "80x60": {
                                "uri": "rexlive://1790/listings/29679/images/IMG_1155_be4e-aa75-d6b5-d318-eae1-793c-80c3-4171_20200515035156_80x60.jpg",
                                "_url": "//app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com/app/livestore/accounts/1790/listings/29679/images/IMG_1155_be4e-aa75-d6b5-d318-eae1-793c-80c3-4171_20200515035156_80x60.jpg"
                            }
                        },
                        "_id": 419905,
                        "system_modtime": 1589478738,
                        "priority": "2",
                        "inbound_original_src_url": null,
                        "inbound_last_update": null,
                        "inbound_index": null
                    },
                    {
                        "uri": "rexlive://1790/listings/29679/images/IMG_1156_550b-f343-0a8b-1271-066a-fbae-ba21-54f6_20200515035128.jpg",
                        "_url": "//app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com/app/livestore/accounts/1790/listings/29679/images/IMG_1156_550b-f343-0a8b-1271-066a-fbae-ba21-54f6_20200515035128.jpg",
                        "_thumbs": {
                            "800x600": {
                                "uri": "rexlive://1790/listings/29679/images/IMG_1156_550b-f343-0a8b-1271-066a-fbae-ba21-54f6_20200515035128_800x600.jpg",
                                "_url": "//app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com/app/livestore/accounts/1790/listings/29679/images/IMG_1156_550b-f343-0a8b-1271-066a-fbae-ba21-54f6_20200515035128_800x600.jpg"
                            },
                            "400x300": {
                                "uri": "rexlive://1790/listings/29679/images/IMG_1156_550b-f343-0a8b-1271-066a-fbae-ba21-54f6_20200515035128_400x300.jpg",
                                "_url": "//app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com/app/livestore/accounts/1790/listings/29679/images/IMG_1156_550b-f343-0a8b-1271-066a-fbae-ba21-54f6_20200515035128_400x300.jpg"
                            },
                            "200x150": {
                                "uri": "rexlive://1790/listings/29679/images/IMG_1156_550b-f343-0a8b-1271-066a-fbae-ba21-54f6_20200515035128_200x150.jpg",
                                "_url": "//app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com/app/livestore/accounts/1790/listings/29679/images/IMG_1156_550b-f343-0a8b-1271-066a-fbae-ba21-54f6_20200515035128_200x150.jpg"
                            },
                            "80x60": {
                                "uri": "rexlive://1790/listings/29679/images/IMG_1156_550b-f343-0a8b-1271-066a-fbae-ba21-54f6_20200515035128_80x60.jpg",
                                "_url": "//app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com/app/livestore/accounts/1790/listings/29679/images/IMG_1156_550b-f343-0a8b-1271-066a-fbae-ba21-54f6_20200515035128_80x60.jpg"
                            }
                        },
                        "_id": 419906,
                        "system_modtime": 1589478738,
                        "priority": "3",
                        "inbound_original_src_url": null,
                        "inbound_last_update": null,
                        "inbound_index": null
                    },
                    {
                        "uri": "rexlive://1790/listings/29679/images/IMG_1151_538d-3208-0607-221d-6a04-7ff3-b9d8-10ce_20200515035111.jpg",
                        "_url": "//app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com/app/livestore/accounts/1790/listings/29679/images/IMG_1151_538d-3208-0607-221d-6a04-7ff3-b9d8-10ce_20200515035111.jpg",
                        "_thumbs": {
                            "800x600": {
                                "uri": "rexlive://1790/listings/29679/images/IMG_1151_538d-3208-0607-221d-6a04-7ff3-b9d8-10ce_20200515035111_800x600.jpg",
                                "_url": "//app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com/app/livestore/accounts/1790/listings/29679/images/IMG_1151_538d-3208-0607-221d-6a04-7ff3-b9d8-10ce_20200515035111_800x600.jpg"
                            },
                            "400x300": {
                                "uri": "rexlive://1790/listings/29679/images/IMG_1151_538d-3208-0607-221d-6a04-7ff3-b9d8-10ce_20200515035111_400x300.jpg",
                                "_url": "//app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com/app/livestore/accounts/1790/listings/29679/images/IMG_1151_538d-3208-0607-221d-6a04-7ff3-b9d8-10ce_20200515035111_400x300.jpg"
                            },
                            "200x150": {
                                "uri": "rexlive://1790/listings/29679/images/IMG_1151_538d-3208-0607-221d-6a04-7ff3-b9d8-10ce_20200515035111_200x150.jpg",
                                "_url": "//app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com/app/livestore/accounts/1790/listings/29679/images/IMG_1151_538d-3208-0607-221d-6a04-7ff3-b9d8-10ce_20200515035111_200x150.jpg"
                            },
                            "80x60": {
                                "uri": "rexlive://1790/listings/29679/images/IMG_1151_538d-3208-0607-221d-6a04-7ff3-b9d8-10ce_20200515035111_80x60.jpg",
                                "_url": "//app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com/app/livestore/accounts/1790/listings/29679/images/IMG_1151_538d-3208-0607-221d-6a04-7ff3-b9d8-10ce_20200515035111_80x60.jpg"
                            }
                        },
                        "_id": 419907,
                        "system_modtime": 1589478738,
                        "priority": "4",
                        "inbound_original_src_url": null,
                        "inbound_last_update": null,
                        "inbound_index": null
                    },
                    {
                        "uri": "rexlive://1790/listings/29679/images/IMG_1159_2222-fc2f-b4cc-ebfd-bd6b-32c0-59b9-9b4f_20200515035133.jpg",
                        "_url": "//app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com/app/livestore/accounts/1790/listings/29679/images/IMG_1159_2222-fc2f-b4cc-ebfd-bd6b-32c0-59b9-9b4f_20200515035133.jpg",
                        "_thumbs": {
                            "800x600": {
                                "uri": "rexlive://1790/listings/29679/images/IMG_1159_2222-fc2f-b4cc-ebfd-bd6b-32c0-59b9-9b4f_20200515035133_800x600.jpg",
                                "_url": "//app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com/app/livestore/accounts/1790/listings/29679/images/IMG_1159_2222-fc2f-b4cc-ebfd-bd6b-32c0-59b9-9b4f_20200515035133_800x600.jpg"
                            },
                            "400x300": {
                                "uri": "rexlive://1790/listings/29679/images/IMG_1159_2222-fc2f-b4cc-ebfd-bd6b-32c0-59b9-9b4f_20200515035133_400x300.jpg",
                                "_url": "//app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com/app/livestore/accounts/1790/listings/29679/images/IMG_1159_2222-fc2f-b4cc-ebfd-bd6b-32c0-59b9-9b4f_20200515035133_400x300.jpg"
                            },
                            "200x150": {
                                "uri": "rexlive://1790/listings/29679/images/IMG_1159_2222-fc2f-b4cc-ebfd-bd6b-32c0-59b9-9b4f_20200515035133_200x150.jpg",
                                "_url": "//app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com/app/livestore/accounts/1790/listings/29679/images/IMG_1159_2222-fc2f-b4cc-ebfd-bd6b-32c0-59b9-9b4f_20200515035133_200x150.jpg"
                            },
                            "80x60": {
                                "uri": "rexlive://1790/listings/29679/images/IMG_1159_2222-fc2f-b4cc-ebfd-bd6b-32c0-59b9-9b4f_20200515035133_80x60.jpg",
                                "_url": "//app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com/app/livestore/accounts/1790/listings/29679/images/IMG_1159_2222-fc2f-b4cc-ebfd-bd6b-32c0-59b9-9b4f_20200515035133_80x60.jpg"
                            }
                        },
                        "_id": 419908,
                        "system_modtime": 1589478738,
                        "priority": "5",
                        "inbound_original_src_url": null,
                        "inbound_last_update": null,
                        "inbound_index": null
                    },
                    {
                        "uri": "rexlive://1790/listings/29679/images/IMG_1157_91f2-31b8-879e-0000-2417-7a75-4028-ba26_20200515035131.jpg",
                        "_url": "//app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com/app/livestore/accounts/1790/listings/29679/images/IMG_1157_91f2-31b8-879e-0000-2417-7a75-4028-ba26_20200515035131.jpg",
                        "_thumbs": {
                            "800x600": {
                                "uri": "rexlive://1790/listings/29679/images/IMG_1157_91f2-31b8-879e-0000-2417-7a75-4028-ba26_20200515035131_800x600.jpg",
                                "_url": "//app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com/app/livestore/accounts/1790/listings/29679/images/IMG_1157_91f2-31b8-879e-0000-2417-7a75-4028-ba26_20200515035131_800x600.jpg"
                            },
                            "400x300": {
                                "uri": "rexlive://1790/listings/29679/images/IMG_1157_91f2-31b8-879e-0000-2417-7a75-4028-ba26_20200515035131_400x300.jpg",
                                "_url": "//app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com/app/livestore/accounts/1790/listings/29679/images/IMG_1157_91f2-31b8-879e-0000-2417-7a75-4028-ba26_20200515035131_400x300.jpg"
                            },
                            "200x150": {
                                "uri": "rexlive://1790/listings/29679/images/IMG_1157_91f2-31b8-879e-0000-2417-7a75-4028-ba26_20200515035131_200x150.jpg",
                                "_url": "//app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com/app/livestore/accounts/1790/listings/29679/images/IMG_1157_91f2-31b8-879e-0000-2417-7a75-4028-ba26_20200515035131_200x150.jpg"
                            },
                            "80x60": {
                                "uri": "rexlive://1790/listings/29679/images/IMG_1157_91f2-31b8-879e-0000-2417-7a75-4028-ba26_20200515035131_80x60.jpg",
                                "_url": "//app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com/app/livestore/accounts/1790/listings/29679/images/IMG_1157_91f2-31b8-879e-0000-2417-7a75-4028-ba26_20200515035131_80x60.jpg"
                            }
                        },
                        "_id": 419909,
                        "system_modtime": 1589478738,
                        "priority": "6",
                        "inbound_original_src_url": null,
                        "inbound_last_update": null,
                        "inbound_index": null
                    },
                    {
                        "uri": "rexlive://1790/listings/29679/images/IMG_1154_679b-2e2f-0883-d90d-293e-3115-691e-0b4e_20200515035125.jpg",
                        "_url": "//app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com/app/livestore/accounts/1790/listings/29679/images/IMG_1154_679b-2e2f-0883-d90d-293e-3115-691e-0b4e_20200515035125.jpg",
                        "_thumbs": {
                            "800x600": {
                                "uri": "rexlive://1790/listings/29679/images/IMG_1154_679b-2e2f-0883-d90d-293e-3115-691e-0b4e_20200515035125_800x600.jpg",
                                "_url": "//app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com/app/livestore/accounts/1790/listings/29679/images/IMG_1154_679b-2e2f-0883-d90d-293e-3115-691e-0b4e_20200515035125_800x600.jpg"
                            },
                            "400x300": {
                                "uri": "rexlive://1790/listings/29679/images/IMG_1154_679b-2e2f-0883-d90d-293e-3115-691e-0b4e_20200515035125_400x300.jpg",
                                "_url": "//app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com/app/livestore/accounts/1790/listings/29679/images/IMG_1154_679b-2e2f-0883-d90d-293e-3115-691e-0b4e_20200515035125_400x300.jpg"
                            },
                            "200x150": {
                                "uri": "rexlive://1790/listings/29679/images/IMG_1154_679b-2e2f-0883-d90d-293e-3115-691e-0b4e_20200515035125_200x150.jpg",
                                "_url": "//app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com/app/livestore/accounts/1790/listings/29679/images/IMG_1154_679b-2e2f-0883-d90d-293e-3115-691e-0b4e_20200515035125_200x150.jpg"
                            },
                            "80x60": {
                                "uri": "rexlive://1790/listings/29679/images/IMG_1154_679b-2e2f-0883-d90d-293e-3115-691e-0b4e_20200515035125_80x60.jpg",
                                "_url": "//app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com/app/livestore/accounts/1790/listings/29679/images/IMG_1154_679b-2e2f-0883-d90d-293e-3115-691e-0b4e_20200515035125_80x60.jpg"
                            }
                        },
                        "_id": 419910,
                        "system_modtime": 1589478738,
                        "priority": "7",
                        "inbound_original_src_url": null,
                        "inbound_last_update": null,
                        "inbound_index": null
                    },
                    {
                        "uri": "rexlive://1790/listings/29679/images/IMG_1152_d57b-4dc7-b968-ba48-1503-2114-3b42-0f5c_20200515035120.jpg",
                        "_url": "//app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com/app/livestore/accounts/1790/listings/29679/images/IMG_1152_d57b-4dc7-b968-ba48-1503-2114-3b42-0f5c_20200515035120.jpg",
                        "_thumbs": {
                            "800x600": {
                                "uri": "rexlive://1790/listings/29679/images/IMG_1152_d57b-4dc7-b968-ba48-1503-2114-3b42-0f5c_20200515035120_800x600.jpg",
                                "_url": "//app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com/app/livestore/accounts/1790/listings/29679/images/IMG_1152_d57b-4dc7-b968-ba48-1503-2114-3b42-0f5c_20200515035120_800x600.jpg"
                            },
                            "400x300": {
                                "uri": "rexlive://1790/listings/29679/images/IMG_1152_d57b-4dc7-b968-ba48-1503-2114-3b42-0f5c_20200515035120_400x300.jpg",
                                "_url": "//app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com/app/livestore/accounts/1790/listings/29679/images/IMG_1152_d57b-4dc7-b968-ba48-1503-2114-3b42-0f5c_20200515035120_400x300.jpg"
                            },
                            "200x150": {
                                "uri": "rexlive://1790/listings/29679/images/IMG_1152_d57b-4dc7-b968-ba48-1503-2114-3b42-0f5c_20200515035120_200x150.jpg",
                                "_url": "//app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com/app/livestore/accounts/1790/listings/29679/images/IMG_1152_d57b-4dc7-b968-ba48-1503-2114-3b42-0f5c_20200515035120_200x150.jpg"
                            },
                            "80x60": {
                                "uri": "rexlive://1790/listings/29679/images/IMG_1152_d57b-4dc7-b968-ba48-1503-2114-3b42-0f5c_20200515035120_80x60.jpg",
                                "_url": "//app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com/app/livestore/accounts/1790/listings/29679/images/IMG_1152_d57b-4dc7-b968-ba48-1503-2114-3b42-0f5c_20200515035120_80x60.jpg"
                            }
                        },
                        "_id": 419911,
                        "system_modtime": 1589478738,
                        "priority": "8",
                        "inbound_original_src_url": null,
                        "inbound_last_update": null,
                        "inbound_index": null
                    }
                ],
                "listing_documents": [
                    {
                        "system_ctime": 1592229380,
                        "system_modtime": 1592229439,
                        "system_size_mb": 0.65,
                        "description": "BJB  Agency Agreement  8 Elsby.pdf",
                        "uri": "rexlive://1790/listings/29679/documents/BJB-Agency-Agreement_8d5a-ca96-b9bf-965f-2b28-ba0c-13db-e766_20200615115543.pdf",
                        "upload_date": null,
                        "show_in_open_homes": null,
                        "_id": 106895,
                        "system_modified_user": {
                            "id": "27084",
                            "_name": "Claire Baverstock",
                            "_first_name": "Claire",
                            "_last_name": "Baverstock",
                            "_email_address": "ClaireBaverstock@bjbmail.com"
                        },
                        "system_created_user": {
                            "id": "27084",
                            "_name": "Claire Baverstock",
                            "_first_name": "Claire",
                            "_last_name": "Baverstock",
                            "_email_address": "ClaireBaverstock@bjbmail.com"
                        },
                        "type": {
                            "id": "contract",
                            "text": "Contract"
                        },
                        "privacy": {
                            "id": "private",
                            "text": "Private"
                        },
                        "_url": "//app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com/app/livestore/accounts/1790/listings/29679/documents/BJB-Agency-Agreement_8d5a-ca96-b9bf-965f-2b28-ba0c-13db-e766_20200615115543.pdf"
                    },
                    {
                        "system_ctime": 1592229380,
                        "system_modtime": 1592229439,
                        "system_size_mb": 0.65,
                        "description": "BJB  Agency Agreement  8 Elsby.pdf",
                        "uri": "rexlive://1790/listings/29679/documents/BJB-Agency-Agreement_eff0-f7c9-59a4-5807-2621-837f-5c0e-af75_20200615115552.pdf",
                        "upload_date": null,
                        "show_in_open_homes": null,
                        "_id": 106896,
                        "system_modified_user": {
                            "id": "27084",
                            "_name": "Claire Baverstock",
                            "_first_name": "Claire",
                            "_last_name": "Baverstock",
                            "_email_address": "ClaireBaverstock@bjbmail.com"
                        },
                        "system_created_user": {
                            "id": "27084",
                            "_name": "Claire Baverstock",
                            "_first_name": "Claire",
                            "_last_name": "Baverstock",
                            "_email_address": "ClaireBaverstock@bjbmail.com"
                        },
                        "type": {
                            "id": "26649",
                            "text": "Sellers Checklist"
                        },
                        "privacy": {
                            "id": "private",
                            "text": "Private"
                        },
                        "_url": "//app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com/app/livestore/accounts/1790/listings/29679/documents/BJB-Agency-Agreement_eff0-f7c9-59a4-5807-2621-837f-5c0e-af75_20200615115552.pdf"
                    }
                ],
                "listing_floorplans": [],
                "listing_holidaybookings": [],
                "listing_links": [],
                "listing_subcategories": [
                    {
                        "priority": 1,
                        "_id": 27613,
                        "subcategory": {
                            "id": "26528",
                            "text": "Semi-detached bungalow"
                        }
                    }
                ],
                "listing_highlights": [
                    {
                        "priority": "1",
                        "description": "Dormer bunglaow",
                        "_id": 184785
                    },
                    {
                        "priority": "2",
                        "description": "Three bedrooms",
                        "_id": 184786
                    },
                    {
                        "priority": "3",
                        "description": "Spacious lounge/dining room",
                        "_id": 184787
                    },
                    {
                        "priority": "4",
                        "description": "Conservatory",
                        "_id": 184788
                    },
                    {
                        "priority": "5",
                        "description": "Garden to the rear",
                        "_id": 184789
                    },
                    {
                        "priority": "6",
                        "description": "Ample driveway parking",
                        "_id": 184790
                    },
                    {
                        "priority": "7",
                        "description": "No onward chain",
                        "_id": 184791
                    }
                ],
                "listing_rooms": [
                    {
                        "room_type": "Lounge/Diner",
                        "description": "Fireplace with feature surround. Double glazed window to the rear elevation. Stairs to first floor. Patio doors through to conservatory. Radiator.",
                        "dimensions": null,
                        "priority": "1",
                        "width": 6.94,
                        "length": 4.66,
                        "dimension_unit": "m",
                        "_id": 255870,
                        "images": []
                    },
                    {
                        "room_type": "Kitchen",
                        "description": "Fitted with wall and base units with worksurface over and matching breakfast bar. Stainless steel sink unit and drainer. Integrated hob and oven. Space for appliances. Double glazed windows to the front and side elevations. Radiator.",
                        "dimensions": null,
                        "priority": "2",
                        "width": 3.28,
                        "length": 3,
                        "dimension_unit": "m",
                        "_id": 255871,
                        "images": []
                    },
                    {
                        "room_type": "Conservatory",
                        "description": "UPVC framed conservatory having patio doors opening onto the rear garden.",
                        "dimensions": null,
                        "priority": "3",
                        "width": 2.73,
                        "length": 2.45,
                        "dimension_unit": "m",
                        "_id": 255872,
                        "images": []
                    },
                    {
                        "room_type": "Shower Room",
                        "description": "Modern white suite comprising; low level WC, hand wash basin set in vanity unit and corner shower unit. Double glazed window to the side elevation. Radiator.",
                        "dimensions": null,
                        "priority": "4",
                        "width": null,
                        "length": null,
                        "dimension_unit": null,
                        "_id": 256968,
                        "images": []
                    },
                    {
                        "room_type": "Bedroom",
                        "description": "Having fitted wardrobes and dressing table. Double glazed window to the front elevation. Radiator.",
                        "dimensions": null,
                        "priority": "5",
                        "width": 3.58,
                        "length": 3.48,
                        "dimension_unit": "m",
                        "_id": 257028,
                        "images": []
                    },
                    {
                        "room_type": "Bedroom Two",
                        "description": "Double glazed window to the front elevation. Eaves storage. Radiator.",
                        "dimensions": null,
                        "priority": "6",
                        "width": 3.49,
                        "length": 3.13,
                        "dimension_unit": "m",
                        "_id": 257029,
                        "images": []
                    },
                    {
                        "room_type": "Bedroom Three",
                        "description": "Double glazed window to the rear elevation. Eaves storage. Raditor.",
                        "dimensions": null,
                        "priority": "7",
                        "width": 4.37,
                        "length": 3.06,
                        "dimension_unit": "m",
                        "_id": 257030,
                        "images": []
                    }
                ]
            },
            "epc_combined_chart": null,
            "epc_eer_chart": null,
            "epc_eir_chart": null,
            "_security_user_rights": [
                "read",
                "update",
                "archive",
                "perms"
            ]
        },
        "custom_fields": {
            "core.key_details.Other Details.Category": null,
            "core.key_details.Other Details.Contract type": null,
            "core.key_details.Other Details.Situation": null,
            "core.key_details.Other Details.Board": null,
            "core.key_details.Other Details.Viewings": null,
            "core.key_details.Other Details.Web flash": null,
            "core.key_details.Other Details.Rental Value": null,
            "core.key_details.Other Details.HTB scheme": null,
            "core.key_details.Other Details.EPC ordered": null,
            "core.key_details.Other Details.Resend PIN": null,
            "core.key_details.Other Details.Campaign": null,
            "core.key_details.Other Details.Source": "Fresh to Market",
            "core.marketing.Our Websites.Website AIDA": null,
            "core.marketing.Our Websites.Discreet marketing?": null,
            "core.marketing.Our Websites.Block loading?": null,
            "core.legal.Section 21 Disclosable Interest.Section 21 disclosable": null,
            "core.legal.Section 21 Disclosable Interest.Region Partner Approved?": null,
            "core.events.Auction Lot.Lot No": null,
            "core.events.Auction Lot.Lot Status": null,
            "core.marketing.Brochure Approvals.Branch Approved": null,
            "core.marketing.Brochure Approvals.Customer Approved": null,
            "core.marketing.Brochure Approvals.Brochure Link": null,
            "core.marketing.Other Systems.SPOS Ordering": "http://89.213.252.250/servlets/SPO/servlet/servlets.PrepopulateSalesDetailsServlet?PASSWORD=spicer999&amp;BRANCH_ID=090510&amp;BRAND=BAI&amp;PROPERTY_REFERENCE=BJB090597945",
            "core.marketing.Other Systems.Process QSP": "http://qsp.spicerhaart.com/?propertyReference=BJB090597945",
            "core.marketing.Other Systems.Long QSP Link": null,
            "core.marketing.Other Systems.Short QSP Link": null,
            "api.stop_epc_upload_workaround": null,
            "api.Early Bird removed": null
        }
    },
    "error": null
}</property>
                        <property
                          dataType="System.Boolean"
                          description="Include all upstream parent columns into output except the one you selected to parse. By default only parsed columns from Input document is included in the output. If you wish to include all other upstream columns in the output too then check this option."
                          expressionType="Notify"
                          name="OutputAllUpstreamColumns">true</property>
                        <property
                          dataType="System.Int32"
                          description="Defines how to handle empty input. By default NULL or Empty input is skipped from parsing."
                          expressionType="Notify"
                          name="EmptyInputProcessingMode"
                          typeConverter="ZappySys.Common.Data.EmptyInputProcessingMode">0</property>
                        <property
                          dataType="System.String"
                          description="Defines how to handle empty input. By default NULL or Empty input is skipped from parsing."
                          expressionType="Notify"
                          name="TreatEmptyInputAs">{ }</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum JSON records to fetch. Set this value to 0 for all records"
                          expressionType="Notify"
                          name="MaxRows">0</property>
                        <property
                          dataType="System.String"
                          description="Enter expression here to filter data.(Example:  $.Users[*].UserName ) This will fetch User names from users records"
                          expressionType="Notify"
                          name="Filter"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">$.result.record</property>
                        <property
                          dataType="System.Boolean"
                          description="Use this option to include parent properties (Non array) in the output along with Filtered Rows"
                          expressionType="Notify"
                          name="IncludeParentColumns">false</property>
                        <property
                          dataType="System.Boolean"
                          description="By default child and parent information is not included in the output if children not found for specified expression. For example if you want to extract all orders from all customers nodes then you can type $.Customers[*].Orders[*]. This will fetch all orders from all customers. By default customers records without orders wont be included in the output. If you want to include those customers where orders not found then check this option (Output null information for order attributes). This behavior is similar to LEFT OUTER JOIN in SQL (Left side is parent, right side is child). This option is ***resource intensive*** so only check if you really care about this behavior."
                          expressionType="Notify"
                          name="IncludeParentColumnsWhenChildMissing">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to true if you want to output parent columns which are array. By default any parent column which is an array is not included in output. See also FilterForParentColumnsWithArrayType property if you set this property"
                          expressionType="Notify"
                          name="IncludeParentColumnsWithArrayType">false</property>
                        <property
                          dataType="System.String"
                          description="Filter expression to extract value form parent"
                          expressionType="Notify"
                          name="FilterForParentColumnsWithArrayType"></property>
                        <property
                          dataType="System.String"
                          description="Prefix for parent column name. This option is only valid if you have set IncludeParentColumns=True"
                          expressionType="Notify"
                          name="ParentColumnPrefix">P_</property>
                        <property
                          dataType="System.Boolean"
                          description="Throw error if property name specified in filter expression is missing. By default it will ignore any missing property errors."
                          expressionType="Notify"
                          name="ThrowErrorIfPropertyMissing">false</property>
                        <property
                          dataType="System.Int32"
                          description="This property how many nested levels should be scanned to fetch various properties. 0=Scan all child levels."
                          expressionType="Notify"
                          name="MaxLevelsToScan">0</property>
                        <property
                          dataType="System.String"
                          description="List comma separated property names from JSON document which you want to exclude from output. Specify parent property name to exclude all child nodes."
                          expressionType="Notify"
                          name="ExcludedProperties"></property>
                        <property
                          dataType="System.String"
                          description="Property level separator used in generated property name (separator for outer properties - Above selected filter node). Use this if default separator is producing duplicate property name which is conflicting with existing name."
                          expressionType="Notify"
                          name="LevelSeparator">_</property>
                        <property
                          dataType="System.Boolean"
                          description="Enables deep array flattening for selected filtered hierarchy. When you turn on this property it will flatten each property of each array item and expose as column (e.g. If you have Filter set as $.customers[*] and for each customer you have an array of Addresses then you may see output columns like Addresses.1.City, Addresses.1.State, Addresses.2.City, Addresses.2.State .... Addresses.N.City, Addresses.N.State). You can control how many array items you want to flatten by setting MaxArrayItemsToFlatten property."
                          expressionType="Notify"
                          name="EnableArrayFlattening">false</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum number of array items to flatten. inner array flattening. Adjust this property to control how many columns being generated. This option is ignored if you set EnableArrayFlattening=false"
                          expressionType="Notify"
                          name="MaxArrayItemsToFlatten">10</property>
                        <property
                          dataType="System.String"
                          description="Specifies how custom date formatted strings are parsed when reading JSON."
                          expressionType="Notify"
                          name="DateFormatString"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies how date formatted strings, e.g. Date(1198908717056) and 2012-03-21T05:40Z, are parsed when reading JSON."
                          expressionType="Notify"
                          name="DateParseHandling"
                          typeConverter="ZappySys.Common.DateParseHandling">1</property>
                        <property
                          dataType="System.Boolean"
                          description="Output as raw JSON document rather than parsing individual fields. This option is helpful if you have documents stored in a file and you want to pass them downstream as raw JSON string rather than parsing into columns."
                          expressionType="Notify"
                          name="OutputRawDocument">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Indent JSON output so its easy to read."
                          expressionType="Notify"
                          name="IndentOutput">true</property>
                        <property
                          dataType="System.Boolean"
                          description="When this property is true then Column is converted to Row. Pivoted names will appear under  Pivot_Name column and values will appear under Pivot_Value field."
                          expressionType="Notify"
                          name="EnablePivot">false</property>
                        <property
                          dataType="System.Int32"
                          description="Array Transformation you want to apply. Useful for case when you have 2-Dimensional arrays with rows/columns in separate arrays."
                          expressionType="Notify"
                          name="ArrayTransformationType"
                          typeConverter="ZappySys.Json.ArrayTransformType">0</property>
                        <property
                          dataType="System.String"
                          description="Filter expression to use to extract column names for array transformation."
                          expressionType="Notify"
                          name="ArrayTransColumnNameFilter"></property>
                        <property
                          dataType="System.String"
                          description="Filter expression for row values (Not applicable for simple array transformation)."
                          expressionType="Notify"
                          name="ArrayTransRowValueFilter"></property>
                        <property
                          dataType="System.Boolean"
                          description="When you have 2D array but don't have column list specified in a separate array then use this option (e.g. { arr: [[10,11],[21,22]] } )."
                          expressionType="Notify"
                          name="ArrayTransEnableCustomColumns">false</property>
                        <property
                          dataType="System.String"
                          description="When you have 2D array but don't have column list specified in a separate array then use specify column names here. Use comma separated list (e.g col1,col2,col3 ). Column name Order must match value order."
                          expressionType="Notify"
                          name="ArrayTransCustomColumns"></property>
                        <property
                          dataType="System.Int32"
                          description="Metadata scan mode controls how data type and length is determined. By default few records scanned to determine datatype/length. Changing ScanMode affects length/datatype accuracy."
                          expressionType="Notify"
                          name="MetaDataScanMode"
                          typeConverter="ZappySys.Common.Data.MetaDataScanMode">4</property>
                        <property
                          dataType="System.Int32"
                          description="Length for all string column. This option is only valid for MetaDataScanMode=Custom"
                          expressionType="Notify"
                          name="MetaDataCustomLength">1000</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.JsonParserTransform</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Listing search\record.Inputs[JsonParserTransformInput]"
                          errorRowDisposition="FailComponent"
                          name="JsonParserTransformInput"
                          truncationRowDisposition="FailComponent">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\record.Inputs[JsonParserTransformInput].Columns[ResponseText]"
                              cachedDataType="nText"
                              cachedName="ResponseText"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[ResponseText]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\record.Inputs[JsonParserTransformInput].Columns[StatusCode]"
                              cachedDataType="i4"
                              cachedName="StatusCode"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[StatusCode]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Listing search\record.Outputs[JsonParserTransformOutput].Columns[StatusCode]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\record.Inputs[JsonParserTransformInput].Columns[args.service_object_id]"
                              cachedDataType="i8"
                              cachedName="args.service_object_id"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[args.service_object_id]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Listing search\record.Outputs[JsonParserTransformOutput].Columns[args.service_object_id]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True" />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Listing search\record.Outputs[JsonParserTransformOutput]"
                          errorOrTruncationOperation="Error"
                          errorRowDisposition="FailComponent"
                          name="JsonParserTransformOutput"
                          truncationRowDisposition="FailComponent">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\record.Outputs[JsonParserTransformOutput].Columns[args.service_object_id]"
                              dataType="i8"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\record.Outputs[JsonParserTransformOutput].Columns[args.service_object_id]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Listing search\record.Inputs[JsonParserTransformInput].Columns[args.service_object_id]"
                              name="args.service_object_id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\record.Outputs[JsonParserTransformOutput].Columns[StatusCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\record.Outputs[JsonParserTransformOutput].Columns[StatusCode]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Listing search\record.Inputs[JsonParserTransformInput].Columns[StatusCode]"
                              name="StatusCode" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\record.Outputs[JsonParserTransformOutput].Columns[recorddoc]"
                              dataType="nText"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Listing search\record.Outputs[JsonParserTransformOutput].ExternalColumns[__DOCUMENT__]"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\record.Outputs[JsonParserTransformOutput].Columns[recorddoc]"
                              name="recorddoc" />
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\record.Outputs[JsonParserTransformOutput].ExternalColumns[__DOCUMENT__]"
                              dataType="nText"
                              name="__DOCUMENT__" />
                          </externalMetadataColumns>
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Listing search\record.Outputs[JsonParserTransform Error Output]"
                          isErrorOut="true"
                          name="JsonParserTransform Error Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\record.Outputs[JsonParserTransform Error Output].Columns[args.service_object_id]"
                              dataType="i8"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\record.Outputs[JsonParserTransform Error Output].Columns[args.service_object_id]"
                              name="args.service_object_id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\record.Outputs[JsonParserTransform Error Output].Columns[StatusCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\record.Outputs[JsonParserTransform Error Output].Columns[StatusCode]"
                              name="StatusCode" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\record.Outputs[JsonParserTransform Error Output].Columns[recorddoc]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\record.Outputs[JsonParserTransform Error Output].Columns[recorddoc]"
                              name="recorddoc" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\record.Outputs[JsonParserTransform Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\record.Outputs[JsonParserTransform Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\record.Outputs[JsonParserTransform Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\record.Outputs[JsonParserTransform Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\record.Outputs[JsonParserTransform Error Output].Columns[ErrorColumnName]"
                              codePage="1252"
                              dataType="str"
                              length="128"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\record.Outputs[JsonParserTransform Error Output].Columns[ErrorColumnName]"
                              name="ErrorColumnName" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\record.Outputs[JsonParserTransform Error Output].Columns[ErrorMessage]"
                              dataType="wstr"
                              length="1024"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\record.Outputs[JsonParserTransform Error Output].Columns[ErrorMessage]"
                              name="ErrorMessage" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\record.Outputs[JsonParserTransform Error Output].Columns[ErrorRawData]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\record.Outputs[JsonParserTransform Error Output].Columns[ErrorRawData]"
                              name="ErrorRawData" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Listing search\Search Listings"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="JSON Source (REST API or File); ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="The JSON source is used to read data from JSON files, RESTful Web Service or direct JSON String."
                      name="Search Listings"
                      usesDispositions="true"
                      version="33">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for any numeric data types"
                          expressionType="Notify"
                          name="TreatBlankNumberAsNull">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for bool data types"
                          expressionType="Notify"
                          name="TreatBlankBoolAsNull">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for any date/time data types"
                          expressionType="Notify"
                          name="TreatBlankDateAsNull">true</property>
                        <property
                          dataType="System.Int32"
                          description="Defines how to read the JSON file or direct string"
                          expressionType="Notify"
                          name="AccessMode"
                          typeConverter="ZappySys.Common.Ssis.FileValueAccessMode">3</property>
                        <property
                          dataType="System.String"
                          description="Defines how to read the JSON file or direct string"
                          expressionType="Notify"
                          name="DirectValue"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.String"
                          description="Variable name which holds JSON string"
                          expressionType="Notify"
                          name="ValueVariable"
                          typeConverter="ZappySys.PowerPack.Converters.VariableEditor,ZappySys.PowerPack130.UI,Version=1.0.0.0,Culture=neutral,PublicKeyToken=1903265a93eae502"></property>
                        <property
                          dataType="System.String"
                          description="Variable name which holds data file path or url"
                          expressionType="Notify"
                          name="PathVariable"
                          typeConverter="ZappySys.PowerPack.Converters.VariableEditor,ZappySys.PowerPack130.UI,Version=1.0.0.0,Culture=neutral,PublicKeyToken=1903265a93eae502">User::RexAPIWebURL</property>
                        <property
                          dataType="System.String"
                          description="JSON file file path (e.g. c:\data\myfile.json) or pattern to process multiple files (e.g. c:\data\*.json)"
                          expressionType="Notify"
                          name="DirectPath"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">https://api.uk.rexsoftware.com/rex.php</property>
                        <property
                          dataType="System.Boolean"
                          description="Include files from sub folders too."
                          expressionType="Notify"
                          name="Recursive">false</property>
                        <property
                          dataType="System.String"
                          description="Set this if you want to set custom Http headers. You may use variable anywhere in the header value using syntax {{User::YourVarName}}. Syntax of Header key value pair is : &amp;lt;request&amp;gt;&amp;lt;header&amp;gt;&amp;lt;name&amp;gt;x-myheader-1&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;AAA&amp;lt;/value&amp;gt;&amp;lt;/header&amp;gt; &amp;lt;header&amp;gt;&amp;lt;name&amp;gt;x-myheader-2&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;BBB&amp;lt;/value&amp;gt;&amp;lt;/header&amp;gt;&amp;lt;/request&amp;gt;"
                          expressionType="Notify"
                          name="HttpHeaders">&lt;request&gt;&lt;header&gt;&lt;name&gt;Accept&lt;/name&gt;&lt;value&gt;*/*&lt;/value&gt;&lt;/header&gt;&lt;header&gt;&lt;name&gt;Cache-Control&lt;/name&gt;&lt;value&gt;no-cache&lt;/value&gt;&lt;/header&gt;&lt;header&gt;&lt;name&gt;X-App-Identifier&lt;/name&gt;&lt;value&gt;client:spicerhaart:{{System::PackageName}}:{{System::TaskName}}&lt;/value&gt;&lt;/header&gt;&lt;/request&gt;</property>
                        <property
                          dataType="System.String"
                          description="User defined data you wish to send along with your HTTP Request (e.g. Upload file data, Form POST data). Usually you have to set content-type of your data but if you select RequestMethod=POST then system will automatically set content-type=application/x-www-form-urlencoded."
                          expressionType="Notify"
                          name="HttpRequestData">{
"method":"Listings::search",
"args":{
	"criteria": 
	[
		
	],
	"result_format":"etags",
	"limit":50000,
	"offset": &lt;%page%&gt;
	 },
"strip_response_prefixes": true,
"token": "{{User::RexToken}}"
}</property>
                        <property
                          dataType="System.String"
                          description="Http Web Request Method (e.g. POST, GET, PUT, LIST, DELETE...). Refer your API documentation if you are not sure which method you have to use."
                          expressionType="Notify"
                          name="HttpRequestMethod">POST</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies content type for data you wish to POST. If you select Default option then system default content type will be used (i.e. application/x-www-form-urlencoded). If you specify Content-Type header along with this option then header value takes precedence."
                          expressionType="Notify"
                          name="HttpRequestContentType"
                          typeConverter="ZappySys.Common.Web.HttpRequestContentType">2</property>
                        <property
                          dataType="System.Int32"
                          description="Data format coming from HTTP Response. This is useful for example when you have OData service and you want to automatically consume all pages of data using odata.netUrl. Setting JsonFormat=Odata will automatically do it for you. This setting is only applicable if JSON is coming from HTTP WebRequest."
                          expressionType="Notify"
                          name="JsonFormat"
                          typeConverter="ZappySys.Json.JsonFormat">1</property>
                        <property
                          dataType="System.Boolean"
                          description="Enable custom proxy settings (If this is not set then system default proxy will be used. To disable proxy totally uncheck this option and check DoNotUseDefaultProxy option if available)"
                          expressionType="Notify"
                          name="UseProxy">false</property>
                        <property
                          dataType="System.String"
                          description="Web URL of Proxy server (including port  if necessary). [e.g. http://myproxyserver:8080/]"
                          expressionType="Notify"
                          name="ProxyUrl"></property>
                        <property
                          dataType="System.Boolean"
                          description="Enable passing userid and password to proxy server"
                          expressionType="Notify"
                          name="UseProxyCreds">false</property>
                        <property
                          dataType="System.String"
                          description="Proxy username"
                          expressionType="Notify"
                          name="ProxyUserName"></property>
                        <property
                          dataType="System.String"
                          description="Proxy password"
                          expressionType="Notify"
                          name="ProxyPassword"></property>
                        <property
                          dataType="System.String"
                          description="If Service response support pagination using some sort of next url attribute then specify which attribute name in JSON Response string which holds next url. If no attribute found or its null then component will stop fetching next resultset. Example: $.pagingInfo.nextUrl"
                          expressionType="Notify"
                          name="NextUrlAttribute"></property>
                        <property
                          dataType="System.String"
                          description="If Service response support pagination using some sort of prev/next url attribute then specify which previous link attribute name from JSON Response string which holds previous url."
                          expressionType="Notify"
                          name="PrevUrlAttribute"></property>
                        <property
                          dataType="System.String"
                          description="Specifies value for NextUrlAttribute or StopIndicatorAttribute which indicates last page to stop pagination. If you have specified StopIndicatorAttribute then you can use Regular expression rather than static value to indicate last page. To use regular expression value of this property must start with regex= prefix. Example : regex=FALSE|N  (assuming you set StopIndicatorAttribute to something like $.hasMore)"
                          expressionType="Notify"
                          name="NextUrlStopIndicator"></property>
                        <property
                          dataType="System.String"
                          description="Attribute name or expression for attribute which can be used as stop indicator (e.g. hasmore --or-- $.pagination.hasmore). If this value is blank then NextUrlAttribute is used"
                          expressionType="Notify"
                          name="StopIndicatorAttribute"></property>
                        <property
                          dataType="System.String"
                          description="If you want to include certain text (or parameters) at the end of Next url then specify this attribute (e.g. &amp;format=json). Another common usecase of this property is to supply pagination token to next Page URL. You can also use &lt;%nextlink%&gt; or  &lt;%nextlink_encoded%&gt; placeholder (e.g. &amp;cursor=&lt;%nextlink_encoded%&gt; )"
                          expressionType="Notify"
                          name="NextUrlSuffix"></property>
                        <property
                          dataType="System.Int32"
                          description="This property indicates total number of milliseconds you want to wait before sending next request. This option allows you to adjust how many API calls can be made within certain timeframe. If your API Service has no limit then set this option to zero"
                          expressionType="Notify"
                          name="NextUrlWait">0</property>
                        <property
                          dataType="System.Boolean"
                          description="If this option is true then component will continue without exception on 404 error (Url not found). This allows you to consume data gracefully."
                          expressionType="Notify"
                          name="ContinueOnUrlNotFoundError">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Continue when any type of exception occurs during http request"
                          expressionType="Notify"
                          name="ContineOnAnyError">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Continue on error when specified substring found in response"
                          expressionType="Notify"
                          name="ContineOnErrorForMessage">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Continue on error when specified status code returned from web server"
                          expressionType="Notify"
                          name="ContineOnErrorForStatusCode">false</property>
                        <property
                          dataType="System.Boolean"
                          description="When error occurs no data is returned. Use this option to get content eventhough error occurs. When this option is checked you can't use [continue on error when specific string found in response] option"
                          expressionType="Notify"
                          name="ConsumeResponseOnError">false</property>
                        <property
                          dataType="System.Int32"
                          description="Status code to match when error occurs and ContineOnErrorForStatusCode option is true. If Response status code matches to this code then task continues to run"
                          expressionType="Notify"
                          name="ErrorStatusCodeToMatch">404</property>
                        <property
                          dataType="System.String"
                          description="Error substring to match when error occurs and ContineOnErrorForMessage option is true. If Response status code matches to this code then task continues to run"
                          expressionType="Notify"
                          name="ErrorSubstringToMatch"></property>
                        <property
                          dataType="System.String"
                          description="Cookie Container can be used to maintain state between multiple web requests. Example: You can login to site like wordpress and then extract any private page content by simply passing authentication cookies using this variable."
                          expressionType="Notify"
                          name="CookieContainerVariable"></property>
                        <property
                          dataType="System.Int32"
                          description="Http request Timeout in seconds. Set this to 0 if you want to use system default value (i.e. 100 seconds)"
                          expressionType="Notify"
                          name="RequestTimeout">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies which security protocol is supported for HTTPS communication. Using this option you can enable legacy protocol or enforce to use latest version of security protocol (Note: TLS 1.2 is only supported in SSIS 2014 or Higher)."
                          expressionType="Notify"
                          name="SecurityProtocol"
                          typeConverter="ZappySys.PowerPack.Common.HttpsSecurityProtocolType">0</property>
                        <property
                          dataType="System.Boolean"
                          description="Enable support for gzip or deflate compression. When you check this option compressed response automatically de-compressed saving bandwidth. This option is only valid if web server supports compressed response stream. Check your API documentation for more information."
                          expressionType="Notify"
                          name="EnableCompressionSupport">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Ignore SSL certificate related errors. Example: if you getting SSL/TLS errors because of certificate expired or certificate is not from trusted authority or certificate is self-signed. By checking this option you will not get SSL/TLS error."
                          expressionType="Notify"
                          name="IgnoreCertificateErrors">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Allow unsecure ciphers/suites and curves for SSLS/TLS communication. Use this option to communicate with web servers which needs legacy / unsecured ciphers support. This option is only trigged when you change default SSL/TLS Version on advanced settings tab."
                          expressionType="Notify"
                          name="AllowUnsecureSuite">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Use connection to pass credentials for authentication (e.g. Use UserID/Password or Use OAuth Protocol for token based approach)"
                          expressionType="Notify"
                          name="UseConnection">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specified how you want to loop through multiple pages returned by REST API."
                          expressionType="Notify"
                          name="PagingMode"
                          typeConverter="ZappySys.Common.RestApiPagingMode">3</property>
                        <property
                          dataType="System.Boolean"
                          description="If you wish to pass extracted pagination token or current page number in the body of next request then set this option to true. You can use [$pagetoken$] and [$pagetoken$] placeholders anywhere in the Body where you wish to insert extracted Page token. You must set encoded token you can use &lt;%nextlink_encoded%&gt; inside SuffixForNextUrl Property. If you dont use SuffixForNextUrl then raw nextLink or Token will be inserted inside the body. If you dont specify [$pagetoken$] placeholder in the body then NextPage Token will be appended at the end. NextPage Token is extracted by filter expression specified using property NextUrlSuffix"
                          expressionType="Notify"
                          name="EnablePageTokenForBody">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this to true if you wish to specify different URL, Header, Body or Filter for first page and next page (i.e. Paginated response). Some APIs like Amazon MWS, NetSuite, Zuora) you may need to set this to true."
                          expressionType="Notify"
                          name="HasDifferentNextPageInfo">false</property>
                        <property
                          dataType="System.String"
                          description="When HasDifferentNextPageInfo=true you can set this property to indicate first page and next page. You can specify different URL, Header, Body or Filter for first page and next page (i.e. Paginated response). Use [$tag$] as placeholder anywhere in the URL, Header, Body or Filter and at runtime system will replace it with correct value (first page or next page value). Syntax to specify placeholder for first page vs next page is like a connectionstring url=FirstPageValue|NextPageValue;header=FirstPageValue|NextPageValue;body=FirstPageValue|NextPageValue;filter=FirstPageValue|NextPageValue; You can use one or more key/value pairs to make things dynamic (e.g. url, header, body or filter)  .For example if you have pagination in your API and First URL is http://abc.com/api/items/get and to get more records you have to call http://abc.com/api/items/getNext then you can use [$tag$] as placeholder in the URL http://abc.com/api/items/[$tag$] and specify this property with first page tag and next page tag as url=get|getNext  (Tags are separated using vertical bar). "
                          expressionType="Notify"
                          name="PagePlaceholders"></property>
                        <property
                          dataType="System.String"
                          description="Use this property to set request body fragment for first page. HasDifferentNextPageInfo must be set to true to use this property."
                          expressionType="Notify"
                          name="FirstPageBodyPart"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.String"
                          description="Use this property to set request body fragment for any request after first request. HasDifferentNextPageInfo must be set to true to use this property."
                          expressionType="Notify"
                          name="NextPageBodyPart"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.String"
                          description="Expression to extract Maximum pages to loop through. Some APIs don't stop pagination and keep returning last page data when you try to read data after last page. Specify expression (e.g. $.page_count ) to read total pages to loop through using this property."
                          expressionType="Notify"
                          name="PagingMaxPagesExpr">$.result.total/50000</property>
                        <property
                          dataType="System.String"
                          description="e.g. Type page_num if URL looks like this =&gt; http://abc.com/?page_num=1&amp;sort=true  (page number via query string)&#xA;--or-- Type &lt;%page%&gt; if page number is inside URL path like this =&gt; http://abc.com/1/?sort=true  (e.g. replace page number in url with placeholder http://abc.com/&lt;%page%&gt;/?sort=true)&#xA;Page number will be incremented by one for next URL until last page is reached or [Max Page Number] is reached"
                          expressionType="Notify"
                          name="PageNumberAttributeNameInUrl">&lt;%page%&gt;</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum page number until which auto increment is allowed. Type zero for no limit. Next URL contains next page number (increment by one) until last page is detected or [Max Page Number] limit is reached."
                          expressionType="Notify"
                          name="MaxPageNumber">0</property>
                        <property
                          dataType="System.String"
                          description="Variable name which will hold starting page number. This is ignored if you useing parameter name from query string to indicate page number."
                          expressionType="Notify"
                          name="StartPageNumberVariable">User::UpsertedCount</property>
                        <property
                          dataType="System.Int32"
                          description="Page counter increment. By default next page is incremented by one if this value is zero. You can also enter negative number if you want to decrease page counter."
                          expressionType="Notify"
                          name="PageNumberIncrement">50000</property>
                        <property
                          dataType="System.Int32"
                          description="Specified how you want detect last page."
                          expressionType="Notify"
                          name="PagingEndStrategy"
                          typeConverter="ZappySys.Common.UrlPagingEndDetectionStrategy">3</property>
                        <property
                          dataType="System.Boolean"
                          description="Condition result to compare to detect last page. Set this property to True if you want detect last page if condition is true else set this to False."
                          expressionType="Notify"
                          name="LastPageWhenConditionEqualsTo">true</property>
                        <property
                          dataType="System.Int32"
                          description="Minimum bytes expected from response."
                          expressionType="Notify"
                          name="ResponseMinBytes">0</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum bytes from response."
                          expressionType="Notify"
                          name="ResponseMaxBytes">3</property>
                        <property
                          dataType="System.String"
                          description="Expected error message sub string from response."
                          expressionType="Notify"
                          name="ResponseErrorString">not found</property>
                        <property
                          dataType="System.Int32"
                          description="Expected status code from response when page number you trying to access not found."
                          expressionType="Notify"
                          name="ResponseStatusCode">404</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum JSON records to fetch. Set this value to 0 for all records"
                          expressionType="Notify"
                          name="MaxRows">0</property>
                        <property
                          dataType="System.String"
                          description="Enter expression here to filter data.(Example:  $.Users[*].UserName ) This will fetch User names from users records"
                          expressionType="Notify"
                          name="Filter"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">$.result.rows[*]</property>
                        <property
                          dataType="System.Boolean"
                          description="Use this option to include parent properties (Non array) in the output along with Filtered Rows"
                          expressionType="Notify"
                          name="IncludeParentColumns">false</property>
                        <property
                          dataType="System.Boolean"
                          description="By default child and parent information is not included in the output if children not found for specified expression. For example if you want to extract all orders from all customers nodes then you can type $.Customers[*].Orders[*]. This will fetch all orders from all customers. By default customers records without orders wont be included in the output. If you want to include those customers where orders not found then check this option (Output null information for order attributes). This behavior is similar to LEFT OUTER JOIN in SQL (Left side is parent, right side is child). This option is ***resource intensive*** so only check if you really care about this behavior."
                          expressionType="Notify"
                          name="IncludeParentColumnsWhenChildMissing">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to true if you want to output parent columns which are array. By default any parent column which is an array is not included in output. See also FilterForParentColumnsWithArrayType property if you set this property"
                          expressionType="Notify"
                          name="IncludeParentColumnsWithArrayType">false</property>
                        <property
                          dataType="System.String"
                          description="Filter expression to extract value form parent"
                          expressionType="Notify"
                          name="FilterForParentColumnsWithArrayType"></property>
                        <property
                          dataType="System.String"
                          description="Prefix for parent column name. This option is only valid if you have set IncludeParentColumns=True"
                          expressionType="Notify"
                          name="ParentColumnPrefix">P_</property>
                        <property
                          dataType="System.Boolean"
                          description="Throw error if property name specified in filter expression is missing. By default it will ignore any missing property errors."
                          expressionType="Notify"
                          name="ThrowErrorIfPropertyMissing">false</property>
                        <property
                          dataType="System.Int32"
                          description="This property how many nested levels should be scanned to fetch various properties. 0=Scan all child levels."
                          expressionType="Notify"
                          name="MaxLevelsToScan">0</property>
                        <property
                          dataType="System.String"
                          description="List comma separated property names from JSON document which you want to exclude from output. Specify parent property name to exclude all child nodes."
                          expressionType="Notify"
                          name="ExcludedProperties"></property>
                        <property
                          dataType="System.String"
                          description="Property level separator used in generated property name (separator for outer properties - Above selected filter node). Use this if default separator is producing duplicate property name which is conflicting with existing name."
                          expressionType="Notify"
                          name="LevelSeparator">_</property>
                        <property
                          dataType="System.Boolean"
                          description="Enables deep array flattening for selected filtered hierarchy. When you turn on this property it will flatten each property of each array item and expose as column (e.g. If you have Filter set as $.customers[*] and for each customer you have an array of Addresses then you may see output columns like Addresses.1.City, Addresses.1.State, Addresses.2.City, Addresses.2.State .... Addresses.N.City, Addresses.N.State). You can control how many array items you want to flatten by setting MaxArrayItemsToFlatten property."
                          expressionType="Notify"
                          name="EnableArrayFlattening">false</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum number of array items to flatten. inner array flattening. Adjust this property to control how many columns being generated. This option is ignored if you set EnableArrayFlattening=false"
                          expressionType="Notify"
                          name="MaxArrayItemsToFlatten">10</property>
                        <property
                          dataType="System.Int32"
                          description="Compression format for source file (e.g. gzip, zip)"
                          expressionType="Notify"
                          name="FileCompressionType"
                          typeConverter="ZappySys.Common.FileCompressionType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Array Transformation you want to apply. Useful for case when you have 2-Dimensional arrays with rows/columns in separate arrays."
                          expressionType="Notify"
                          name="ArrayTransformationType"
                          typeConverter="ZappySys.Json.ArrayTransformType">0</property>
                        <property
                          dataType="System.String"
                          description="Filter expression to use to extract column names for array transformation."
                          expressionType="Notify"
                          name="ArrayTransColumnNameFilter">$.result.rows[*]</property>
                        <property
                          dataType="System.String"
                          description="Filter expression for row values (Not applicable for simple array transformation)."
                          expressionType="Notify"
                          name="ArrayTransRowValueFilter">$.result.rows[*]</property>
                        <property
                          dataType="System.Boolean"
                          description="When you have 2D array but don't have column list specified in a separate array then use this option (e.g. { arr: [[10,11],[21,22]] } )."
                          expressionType="Notify"
                          name="ArrayTransEnableCustomColumns">true</property>
                        <property
                          dataType="System.String"
                          description="When you have 2D array but don't have column list specified in a separate array then use specify column names here. Use comma separated list (e.g col1,col2,col3 ). Column name Order must match value order."
                          expressionType="Notify"
                          name="ArrayTransCustomColumns">MetricID</property>
                        <property
                          dataType="System.String"
                          description="Specifies how custom date formatted strings are parsed when reading JSON."
                          expressionType="Notify"
                          name="DateFormatString"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies how date formatted strings, e.g. Date(1198908717056) and 2012-03-21T05:40Z, are parsed when reading JSON."
                          expressionType="Notify"
                          name="DateParseHandling"
                          typeConverter="ZappySys.Common.DateParseHandling">1</property>
                        <property
                          dataType="System.Boolean"
                          description="Output as raw JSON document rather than parsing individual fields. This option is helpful if you have documents stored in a file and you want to pass them downstream as raw JSON string rather than parsing into columns."
                          expressionType="Notify"
                          name="OutputRawDocument">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indent JSON output so its easy to read."
                          expressionType="Notify"
                          name="IndentOutput">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to true if you want to output FilePath. This option is ignored when you consume DirectValue or data from Url rather than local files. Output column name will be __FilePath"
                          expressionType="Notify"
                          name="OutputFilePath">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to true if you want to output FileName. This option is ignored when you consume DirectValue or data from Url rather than local files. Output column name will be __FileName"
                          expressionType="Notify"
                          name="OutputFileName">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to true if you want to move processed file to archive folder."
                          expressionType="Notify"
                          name="EnableArchiveFile">false</property>
                        <property
                          dataType="System.String"
                          description="Folder path where you want to move processed file."
                          expressionType="Notify"
                          name="ArchiveFolderPath"></property>
                        <property
                          dataType="System.Boolean"
                          description="Folder path where you want to move processed file."
                          expressionType="Notify"
                          name="OverwriteFileInArchiveFolder">false</property>
                        <property
                          dataType="System.String"
                          description="File naming convention for archived file. By default it will same name as original source file processed. But you can control naming format using {%name%} and {%ext%} placeholders. e.g. {%name%}_processed{%ext%} or {%name%}{%ext%}.{{System::ContainerStartTime,yyyyMMdd_HHmmss_fff}}"
                          expressionType="Notify"
                          name="ArchiveFileNamingConvention"></property>
                        <property
                          dataType="System.Boolean"
                          description="When this property is true then Column is converted to Row. Pivoted names will appear under  Pivot_Name column and values will appear under Pivot_Value field."
                          expressionType="Notify"
                          name="EnablePivot">false</property>
                        <property
                          dataType="System.Int32"
                          description="Metadata scan mode controls how data type and length is determined. By default few records scanned to determine datatype/length. Changing ScanMode affects length/datatype accuracy."
                          expressionType="Notify"
                          name="MetaDataScanMode"
                          typeConverter="ZappySys.Common.Data.MetaDataScanMode">4</property>
                        <property
                          dataType="System.Int32"
                          description="Length for all string column. This option is only valid for MetaDataScanMode=Custom"
                          expressionType="Notify"
                          name="MetaDataCustomLength">1000</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.JsonSource</property>
                        <property
                          dataType="System.Int32"
                          description="Encoding of source file"
                          expressionType="Notify"
                          name="Encoding"
                          typeConverter="ZappySys.Common.EncodingType">0</property>
                        <property
                          dataType="System.String"
                          description="Character set for text (e.g. utf-8 )"
                          expressionType="Notify"
                          name="CharacterSet"></property>
                        <property
                          dataType="System.Boolean"
                          description="By default process stops with error if specified local file is not found. Set this property to true if you wish to continue rather than throwing file not found error."
                          expressionType="Notify"
                          name="ContinueOnFileNotFoundError">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Check this option if you want to upload file(s) (i.e. POST RAW file data) or send data using Multi-Part encoding method (i.e. Content-Type: multipart/form-data). Multi-Part request allows you to mix key/value and upload files in same request. On the other hand raw upload allows only single file upload (without any key/value) &#xA;&#xA;==== Raw Upload (Content-Type: application/octet-stream) =====   &#xA;To upload single file in raw mode check this option and specify full file path starting with @ sign in the Body (e.g.  @c:\data\myfile.zip ) &#xA;&#xA;==== Form-Data / Multipart Upload (Content-Type: multipart/form-data) =====   &#xA;To treat your Request data as multi part fields you must specify key/value pairs separated by new lines into RequestData field (i.e. Body). Each key value pair is entered on new-line and key/value are separated using equal sign (=). Preceding and trailing spaces are ignored also blank lines are ignored. &#xA;If field value has some any special character(s) then use escape sequence (e.g. For NewLine: \r\n, For Tab: \t, For at (@): \@). When value of any field starts with at sign (@) its automatically treated as File you want to upload. By default file content type is determined based on extension however you can supply content type manually for any field using this way [ fieldname.Content-Type=some content type ]. In below example we have supplied Content-Type for file2 and SomeField1, all other fields are using default content-type.&#xA;See below Example of uploading multiple files along with additional fields.&#xA;&#xA;file1=@c:\data\Myfile1.txt&#xA;file2=@c:\data\Myfile2.json&#xA;file2.Content-Type=application/json&#xA;SomeField1=aaaaaaa&#xA;SomeField1.Content-Type=text/plain&#xA;SomeField2=12345&#xA;SomeFieldWithNewLineAndTab=This is line1\r\nThis is line2\r\nThis is \ttab \ttab \ttab&#xA;SomeFieldStartingWithAtSign=\@MyTwitterHandle&#xA;"
                          expressionType="Notify"
                          name="IsMultiPartUpload">false</property>
                        <property
                          dataType="System.String"
                          description="Expression to extract Maximum records to loop through. Some APIs don't stop pagination and keep returning last page data when you try to read data after last page. Specify expression (e.g. $.total_rows ) to read total pages to loop through using this property. This setting is ignored if you set PagingMaxPagesExpr."
                          expressionType="Notify"
                          name="PagingMaxRowsExpr"></property>
                        <property
                          dataType="System.String"
                          description="When you enable PagingMaxRowsExpr (end pagination based on MaxRowCount) then you need to count records coming in each response. This expression extract all rows found under specified expression (e.g. $.orders[*] if all records found under orders node)."
                          expressionType="Notify"
                          name="PagingMaxRowsDataPathExpr"></property>
                        <property
                          dataType="System.Boolean"
                          description="When this option is checked, system allows to parse large number (Higher than Int64) in JSON document (i.e. { id: 76000009353950433247780 } ). If you do not turn on this option then it may throw error if large number is encountered. This option is SLOW because it has to perform additional checks in order to avoid Large number overflow error so do not turn on unless you getting Large number error."
                          expressionType="Notify"
                          name="EnableBigNumberHandling">false</property>
                      </properties>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Listing search\Search Listings.Outputs[JsonSourceOutput]"
                          errorOrTruncationOperation="Error"
                          errorRowDisposition="FailComponent"
                          name="JsonSourceOutput"
                          truncationRowDisposition="FailComponent">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Search Listings.Outputs[JsonSourceOutput].Columns[etag]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Listing search\Search Listings.Outputs[JsonSourceOutput].ExternalColumns[etag]"
                              length="68"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\Search Listings.Outputs[JsonSourceOutput].Columns[etag]"
                              name="etag" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Search Listings.Outputs[JsonSourceOutput].Columns[id]"
                              dataType="i4"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Listing search\Search Listings.Outputs[JsonSourceOutput].ExternalColumns[id]"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\Search Listings.Outputs[JsonSourceOutput].Columns[id]"
                              name="id" />
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Search Listings.Outputs[JsonSourceOutput].ExternalColumns[system_record_state]"
                              dataType="wstr"
                              length="24"
                              name="system_record_state" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Search Listings.Outputs[JsonSourceOutput].ExternalColumns[system_ctime]"
                              dataType="wstr"
                              length="40"
                              name="system_ctime" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Search Listings.Outputs[JsonSourceOutput].ExternalColumns[system_modtime]"
                              dataType="wstr"
                              length="40"
                              name="system_modtime" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Search Listings.Outputs[JsonSourceOutput].ExternalColumns[name]"
                              dataType="wstr"
                              length="144"
                              name="name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Search Listings.Outputs[JsonSourceOutput].ExternalColumns[email_address]"
                              dataType="wstr"
                              length="180"
                              name="email_address" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Search Listings.Outputs[JsonSourceOutput].ExternalColumns[phone_number]"
                              dataType="wstr"
                              length="80"
                              name="phone_number" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Search Listings.Outputs[JsonSourceOutput].ExternalColumns[fax_number]"
                              dataType="wstr"
                              length="1020"
                              name="fax_number" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Search Listings.Outputs[JsonSourceOutput].ExternalColumns[is_dnd]"
                              dataType="wstr"
                              length="80"
                              name="is_dnd" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Search Listings.Outputs[JsonSourceOutput].ExternalColumns[type]"
                              dataType="wstr"
                              length="28"
                              name="type" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Search Listings.Outputs[JsonSourceOutput].ExternalColumns[last_contacted_date]"
                              dataType="wstr"
                              length="80"
                              name="last_contacted_date" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Search Listings.Outputs[JsonSourceOutput].ExternalColumns[name_last]"
                              dataType="wstr"
                              length="1020"
                              name="name_last" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Search Listings.Outputs[JsonSourceOutput].ExternalColumns[address_postal]"
                              dataType="wstr"
                              length="220"
                              name="address_postal" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Search Listings.Outputs[JsonSourceOutput].ExternalColumns[address]"
                              dataType="wstr"
                              length="384"
                              name="address" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Search Listings.Outputs[JsonSourceOutput].ExternalColumns[interest_level]"
                              dataType="wstr"
                              length="1020"
                              name="interest_level" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Search Listings.Outputs[JsonSourceOutput].ExternalColumns[marketing_birthday]"
                              dataType="wstr"
                              length="1020"
                              name="marketing_birthday" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Search Listings.Outputs[JsonSourceOutput].ExternalColumns[marketing_enquiry_source]"
                              dataType="wstr"
                              length="1020"
                              name="marketing_enquiry_source" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Search Listings.Outputs[JsonSourceOutput].ExternalColumns[marketing_gender]"
                              dataType="wstr"
                              length="1020"
                              name="marketing_gender" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Search Listings.Outputs[JsonSourceOutput].ExternalColumns[marketing_postcode]"
                              dataType="wstr"
                              length="80"
                              name="marketing_postcode" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Search Listings.Outputs[JsonSourceOutput].ExternalColumns[name_legal]"
                              dataType="wstr"
                              length="1020"
                              name="name_legal" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Search Listings.Outputs[JsonSourceOutput].ExternalColumns[name_salutation]"
                              dataType="wstr"
                              length="1020"
                              name="name_salutation" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Search Listings.Outputs[JsonSourceOutput].ExternalColumns[name_addressee]"
                              dataType="wstr"
                              length="1020"
                              name="name_addressee" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Search Listings.Outputs[JsonSourceOutput].ExternalColumns[system_owner_user.id]"
                              dataType="wstr"
                              length="20"
                              name="system_owner_user.id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Search Listings.Outputs[JsonSourceOutput].ExternalColumns[system_owner_user._name]"
                              dataType="wstr"
                              length="36"
                              name="system_owner_user._name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Search Listings.Outputs[JsonSourceOutput].ExternalColumns[system_owner_user._first_name]"
                              dataType="wstr"
                              length="20"
                              name="system_owner_user._first_name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Search Listings.Outputs[JsonSourceOutput].ExternalColumns[system_owner_user._last_name]"
                              dataType="wstr"
                              length="12"
                              name="system_owner_user._last_name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Search Listings.Outputs[JsonSourceOutput].ExternalColumns[system_owner_user._email_address]"
                              dataType="wstr"
                              length="92"
                              name="system_owner_user._email_address" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Search Listings.Outputs[JsonSourceOutput].ExternalColumns[system_modified_user.id]"
                              dataType="wstr"
                              length="20"
                              name="system_modified_user.id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Search Listings.Outputs[JsonSourceOutput].ExternalColumns[system_modified_user._name]"
                              dataType="wstr"
                              length="48"
                              name="system_modified_user._name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Search Listings.Outputs[JsonSourceOutput].ExternalColumns[system_modified_user._first_name]"
                              dataType="wstr"
                              length="24"
                              name="system_modified_user._first_name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Search Listings.Outputs[JsonSourceOutput].ExternalColumns[system_modified_user._last_name]"
                              dataType="wstr"
                              length="24"
                              name="system_modified_user._last_name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Search Listings.Outputs[JsonSourceOutput].ExternalColumns[system_modified_user._email_address]"
                              dataType="wstr"
                              length="128"
                              name="system_modified_user._email_address" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Search Listings.Outputs[JsonSourceOutput].ExternalColumns[system_created_user.id]"
                              dataType="wstr"
                              length="20"
                              name="system_created_user.id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Search Listings.Outputs[JsonSourceOutput].ExternalColumns[system_created_user._name]"
                              dataType="wstr"
                              length="36"
                              name="system_created_user._name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Search Listings.Outputs[JsonSourceOutput].ExternalColumns[system_created_user._first_name]"
                              dataType="wstr"
                              length="20"
                              name="system_created_user._first_name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Search Listings.Outputs[JsonSourceOutput].ExternalColumns[system_created_user._last_name]"
                              dataType="wstr"
                              length="12"
                              name="system_created_user._last_name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Search Listings.Outputs[JsonSourceOutput].ExternalColumns[system_created_user._email_address]"
                              dataType="wstr"
                              length="92"
                              name="system_created_user._email_address" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Search Listings.Outputs[JsonSourceOutput].ExternalColumns[contact_image]"
                              dataType="wstr"
                              length="1020"
                              name="contact_image" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Search Listings.Outputs[JsonSourceOutput].ExternalColumns[marketing_enquiry_method]"
                              dataType="wstr"
                              length="1020"
                              name="marketing_enquiry_method" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Search Listings.Outputs[JsonSourceOutput].ExternalColumns[_security_user_rights]"
                              dataType="wstr"
                              length="260"
                              name="_security_user_rights" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Search Listings.Outputs[JsonSourceOutput].ExternalColumns[etag]"
                              dataType="wstr"
                              length="68"
                              name="etag" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Search Listings.Outputs[JsonSourceOutput].ExternalColumns[id]"
                              dataType="wstr"
                              length="24"
                              name="id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Search Listings.Outputs[JsonSourceOutput].ExternalColumns[__FileName]"
                              dataType="wstr"
                              length="600"
                              name="__FileName" />
                          </externalMetadataColumns>
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Listing search\Search Listings.Outputs[JsonSource Error Output]"
                          isErrorOut="true"
                          name="JsonSource Error Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Search Listings.Outputs[JsonSource Error Output].Columns[etag]"
                              dataType="wstr"
                              length="68"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\Search Listings.Outputs[JsonSource Error Output].Columns[etag]"
                              name="etag" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Search Listings.Outputs[JsonSource Error Output].Columns[id]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\Search Listings.Outputs[JsonSource Error Output].Columns[id]"
                              name="id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Search Listings.Outputs[JsonSource Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\Search Listings.Outputs[JsonSource Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Search Listings.Outputs[JsonSource Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\Search Listings.Outputs[JsonSource Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Search Listings.Outputs[JsonSource Error Output].Columns[ErrorColumnName]"
                              codePage="1252"
                              dataType="str"
                              length="128"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\Search Listings.Outputs[JsonSource Error Output].Columns[ErrorColumnName]"
                              name="ErrorColumnName" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Search Listings.Outputs[JsonSource Error Output].Columns[ErrorMessage]"
                              dataType="wstr"
                              length="1024"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\Search Listings.Outputs[JsonSource Error Output].Columns[ErrorMessage]"
                              name="ErrorMessage" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Listing search\Sort"
                      componentClassID="Microsoft.Sort"
                      contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
                      name="Sort"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                          name="EliminateDuplicates">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the maximum number of threads to use for sorting."
                          expressionType="Notify"
                          name="MaximumThreads">-1</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Listing search\Sort.Inputs[Sort Input]"
                          name="Sort Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Sort.Inputs[Sort Input].Columns[args.service_object_id]"
                              cachedDataType="i8"
                              cachedName="args.service_object_id"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\custom.Outputs[JsonParserTransformOutput].Columns[args.service_object_id]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">1</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Sort.Inputs[Sort Input].Columns[StatusCode]"
                              cachedDataType="i4"
                              cachedName="StatusCode"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\custom.Outputs[JsonParserTransformOutput].Columns[StatusCode]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Sort.Inputs[Sort Input].Columns[custdoc]"
                              cachedDataType="nText"
                              cachedName="custdoc"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\custom.Outputs[JsonParserTransformOutput].Columns[custdoc]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Listing search\Sort.Outputs[Sort Output]"
                          isSorted="true"
                          name="Sort Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Sort.Outputs[Sort Output].Columns[args.service_object_id2]"
                              dataType="i8"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\Sort.Outputs[Sort Output].Columns[args.service_object_id2]"
                              name="args.service_object_id2"
                              sortKeyPosition="1">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Iterate Offices\Sequence Container\Listing search\custom.Outputs[JsonParserTransformOutput].Columns[args.service_object_id]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Sort.Outputs[Sort Output].Columns[StatusCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\Sort.Outputs[Sort Output].Columns[StatusCode]"
                              name="StatusCode">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Iterate Offices\Sequence Container\Listing search\custom.Outputs[JsonParserTransformOutput].Columns[StatusCode]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Sort.Outputs[Sort Output].Columns[custdoc]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\Sort.Outputs[Sort Output].Columns[custdoc]"
                              name="custdoc">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Iterate Offices\Sequence Container\Listing search\custom.Outputs[JsonParserTransformOutput].Columns[custdoc]}</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Listing search\Sort 1"
                      componentClassID="Microsoft.Sort"
                      contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
                      name="Sort 1"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                          name="EliminateDuplicates">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the maximum number of threads to use for sorting."
                          expressionType="Notify"
                          name="MaximumThreads">-1</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Listing search\Sort 1.Inputs[Sort Input]"
                          name="Sort Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Sort 1.Inputs[Sort Input].Columns[args.service_object_id]"
                              cachedDataType="i8"
                              cachedName="args.service_object_id"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\record.Outputs[JsonParserTransformOutput].Columns[args.service_object_id]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">1</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Sort 1.Inputs[Sort Input].Columns[StatusCode]"
                              cachedDataType="i4"
                              cachedName="StatusCode"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\record.Outputs[JsonParserTransformOutput].Columns[StatusCode]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Sort 1.Inputs[Sort Input].Columns[recorddoc]"
                              cachedDataType="nText"
                              cachedName="recorddoc"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\record.Outputs[JsonParserTransformOutput].Columns[recorddoc]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Listing search\Sort 1.Outputs[Sort Output]"
                          isSorted="true"
                          name="Sort Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Sort 1.Outputs[Sort Output].Columns[args.service_object_id1]"
                              dataType="i8"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\Sort 1.Outputs[Sort Output].Columns[args.service_object_id1]"
                              name="args.service_object_id1"
                              sortKeyPosition="1">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Iterate Offices\Sequence Container\Listing search\record.Outputs[JsonParserTransformOutput].Columns[args.service_object_id]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Sort 1.Outputs[Sort Output].Columns[StatusCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\Sort 1.Outputs[Sort Output].Columns[StatusCode]"
                              name="StatusCode">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Iterate Offices\Sequence Container\Listing search\record.Outputs[JsonParserTransformOutput].Columns[StatusCode]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Sort 1.Outputs[Sort Output].Columns[recorddoc]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\Sort 1.Outputs[Sort Output].Columns[recorddoc]"
                              name="recorddoc">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Iterate Offices\Sequence Container\Listing search\record.Outputs[JsonParserTransformOutput].Columns[recorddoc]}</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Listing search\SQL Sort"
                      componentClassID="Microsoft.Sort"
                      contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
                      name="SQL Sort"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                          name="EliminateDuplicates">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the maximum number of threads to use for sorting."
                          expressionType="Notify"
                          name="MaximumThreads">-1</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Listing search\SQL Sort.Inputs[Sort Input]"
                          name="Sort Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\SQL Sort.Inputs[Sort Input].Columns[Id]"
                              cachedDataType="i4"
                              cachedName="Id"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\Existing Listings from SQL.Outputs[OLE DB Source Output].Columns[Id]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">1</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\SQL Sort.Inputs[Sort Input].Columns[AccountId]"
                              cachedDataType="i2"
                              cachedName="AccountId"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\Existing Listings from SQL.Outputs[OLE DB Source Output].Columns[AccountId]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\SQL Sort.Inputs[Sort Input].Columns[etaglisting]"
                              cachedDataType="wstr"
                              cachedLength="250"
                              cachedName="etaglisting"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\Existing Listings from SQL.Outputs[OLE DB Source Output].Columns[etaglisting]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Listing search\SQL Sort.Outputs[Sort Output]"
                          isSorted="true"
                          name="Sort Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\SQL Sort.Outputs[Sort Output].Columns[Id]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\SQL Sort.Outputs[Sort Output].Columns[Id]"
                              name="Id"
                              sortKeyPosition="1">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Iterate Offices\Sequence Container\Listing search\Existing Listings from SQL.Outputs[OLE DB Source Output].Columns[Id]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\SQL Sort.Outputs[Sort Output].Columns[AccountId]"
                              dataType="i2"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\SQL Sort.Outputs[Sort Output].Columns[AccountId]"
                              name="AccountId">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Iterate Offices\Sequence Container\Listing search\Existing Listings from SQL.Outputs[OLE DB Source Output].Columns[AccountId]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\SQL Sort.Outputs[Sort Output].Columns[etaglisting]"
                              dataType="wstr"
                              length="250"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\SQL Sort.Outputs[Sort Output].Columns[etaglisting]"
                              name="etaglisting">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Iterate Offices\Sequence Container\Listing search\Existing Listings from SQL.Outputs[OLE DB Source Output].Columns[etaglisting]}</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Listing search\Trash Destination"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Trash Destination; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="The trash destination is used to create dummy destination which ends data path without any processing."
                      name="Trash Destination"
                      version="2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.String"
                          description="File path where you want to save data"
                          expressionType="Notify"
                          name="FilePath"></property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates if you want to save input data to comma separated text file"
                          expressionType="Notify"
                          name="SaveDataToFile">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Append data to file"
                          expressionType="Notify"
                          name="Append">false</property>
                        <property
                          dataType="System.String"
                          description="RowSeparator"
                          expressionType="Notify"
                          name="RowSeparator">{NEWLINE}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether you want to overwrite target file if exists"
                          expressionType="Notify"
                          name="OverwriteFileIfExists">true</property>
                        <property
                          dataType="System.String"
                          description="ColumnSeparator"
                          expressionType="Notify"
                          name="ColumnSeparator">,</property>
                        <property
                          dataType="System.Boolean"
                          description="SupportUnicode"
                          expressionType="Notify"
                          name="SupportUnicode">true</property>
                        <property
                          dataType="System.Boolean"
                          description="ColumnNamesInFirstRow"
                          expressionType="Notify"
                          name="ColumnNamesInFirstRow">true</property>
                        <property
                          dataType="System.Boolean"
                          description="QuoteDataIfNeeded"
                          expressionType="Notify"
                          name="QuoteDataIfNeeded">true</property>
                        <property
                          dataType="System.String"
                          description="Date time format string for any column with DT_DBDATETIME, DT_DBDATETIME2 or DB_DATE format"
                          expressionType="Notify"
                          name="DateTimeFormat">yyyy-MM-dd HH:mm:ss</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.TrashDestination</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Listing search\Trash Destination.Inputs[TrashDestinationInput]"
                          hasSideEffects="true"
                          name="TrashDestinationInput">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Listing search\Trash Destination 1"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Trash Destination; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="The trash destination is used to create dummy destination which ends data path without any processing."
                      name="Trash Destination 1"
                      version="2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.String"
                          description="File path where you want to save data"
                          expressionType="Notify"
                          name="FilePath"></property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates if you want to save input data to comma separated text file"
                          expressionType="Notify"
                          name="SaveDataToFile">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Append data to file"
                          expressionType="Notify"
                          name="Append">false</property>
                        <property
                          dataType="System.String"
                          description="RowSeparator"
                          expressionType="Notify"
                          name="RowSeparator">{NEWLINE}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether you want to overwrite target file if exists"
                          expressionType="Notify"
                          name="OverwriteFileIfExists">true</property>
                        <property
                          dataType="System.String"
                          description="ColumnSeparator"
                          expressionType="Notify"
                          name="ColumnSeparator">,</property>
                        <property
                          dataType="System.Boolean"
                          description="SupportUnicode"
                          expressionType="Notify"
                          name="SupportUnicode">true</property>
                        <property
                          dataType="System.Boolean"
                          description="ColumnNamesInFirstRow"
                          expressionType="Notify"
                          name="ColumnNamesInFirstRow">true</property>
                        <property
                          dataType="System.Boolean"
                          description="QuoteDataIfNeeded"
                          expressionType="Notify"
                          name="QuoteDataIfNeeded">true</property>
                        <property
                          dataType="System.String"
                          description="Date time format string for any column with DT_DBDATETIME, DT_DBDATETIME2 or DB_DATE format"
                          expressionType="Notify"
                          name="DateTimeFormat">yyyy-MM-dd HH:mm:ss</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.TrashDestination</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Listing search\Trash Destination 1.Inputs[TrashDestinationInput]"
                          hasSideEffects="true"
                          name="TrashDestinationInput">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Listing search\Upsert Listing"
                      componentClassID="Microsoft.OLEDBCommand"
                      contactInfo="OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
                      description="Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time."
                      name="Upsert Listing"
                      usesDispositions="true"
                      version="2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">0</property>
                        <property
                          dataType="System.String"
                          description="The SQL command to be executed."
                          expressionType="Notify"
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">exec [UpsertListing] ?,?,?,?</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Iterate Offices\Sequence Container\Listing search\Upsert Listing.Connections[OleDbConnection]"
                          connectionManagerID="Package.ConnectionManagers[colsqlbi01v.Entities]"
                          connectionManagerRefId="Package.ConnectionManagers[colsqlbi01v.Entities]"
                          description="The OLE DB runtime connection used to access the database."
                          name="OleDbConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Listing search\Upsert Listing.Inputs[OLE DB Command Input]"
                          errorOrTruncationOperation="Command Execution"
                          errorRowDisposition="FailComponent"
                          hasSideEffects="true"
                          name="OLE DB Command Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Upsert Listing.Inputs[OLE DB Command Input].Columns[Origin]"
                              cachedDataType="i4"
                              cachedName="Origin"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Listing search\Upsert Listing.Inputs[OLE DB Command Input].ExternalColumns[@Origin]"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\Add accountid and origin.Outputs[Derived Column Output].Columns[Origin]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Upsert Listing.Inputs[OLE DB Command Input].Columns[recorddoc]"
                              cachedDataType="nText"
                              cachedName="recorddoc"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Listing search\Upsert Listing.Inputs[OLE DB Command Input].ExternalColumns[@body]"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\Merge Join.Outputs[Merge Join Output].Columns[recorddoc]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Upsert Listing.Inputs[OLE DB Command Input].Columns[custdoc]"
                              cachedDataType="nText"
                              cachedName="custdoc"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Listing search\Upsert Listing.Inputs[OLE DB Command Input].ExternalColumns[@custom]"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\Merge Join.Outputs[Merge Join Output].Columns[custdoc]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Upsert Listing.Inputs[OLE DB Command Input].Columns[AccountId]"
                              cachedDataType="i4"
                              cachedName="AccountId"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Listing search\Upsert Listing.Inputs[OLE DB Command Input].ExternalColumns[@accountid]"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\Add accountid and origin.Outputs[Derived Column Output].Columns[AccountId]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Upsert Listing.Inputs[OLE DB Command Input].ExternalColumns[@Origin]"
                              dataType="i2"
                              name="@Origin">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                                  name="DBParamInfoFlags">81</property>
                              </properties>
                            </externalMetadataColumn>
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Upsert Listing.Inputs[OLE DB Command Input].ExternalColumns[@body]"
                              dataType="nText"
                              name="@body">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                                  name="DBParamInfoFlags">193</property>
                              </properties>
                            </externalMetadataColumn>
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Upsert Listing.Inputs[OLE DB Command Input].ExternalColumns[@custom]"
                              dataType="nText"
                              name="@custom">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                                  name="DBParamInfoFlags">193</property>
                              </properties>
                            </externalMetadataColumn>
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Upsert Listing.Inputs[OLE DB Command Input].ExternalColumns[@accountid]"
                              dataType="i4"
                              name="@accountid">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                                  name="DBParamInfoFlags">81</property>
                              </properties>
                            </externalMetadataColumn>
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Listing search\Upsert Listing.Outputs[OLE DB Command Output]"
                          exclusionGroup="1"
                          name="OLE DB Command Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Listing search\Upsert Listing.Inputs[OLE DB Command Input]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Listing search\Upsert Listing.Outputs[OLE DB Command Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="OLE DB Command Error Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Listing search\Upsert Listing.Inputs[OLE DB Command Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Upsert Listing.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\Upsert Listing.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Upsert Listing.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\Upsert Listing.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Listing search\Web API Destination"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Web API Destination; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="The Web API destination can be used to send data to Web API URL (e.g. Submit or POST data to REST API/SOAP or other HTTP/HTTPS endpoints)"
                      name="Web API Destination"
                      usesDispositions="true"
                      version="5">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.String"
                          description="API URL you want to access"
                          expressionType="Notify"
                          name="HttpRequestUrl">{{User::RexAPIWebURL}}</property>
                        <property
                          dataType="System.String"
                          description="Http Web Request Method (e.g. POST, GET, PUT, LIST, DELETE...). Refer your API documentation if you are not sure which method you have to use."
                          expressionType="Notify"
                          name="HttpRequestMethod">POST</property>
                        <property
                          dataType="System.String"
                          description="Set this if you want to set custom Http headers. You may use variable anywhere in the header value using syntax {{User::YourVarName}}. Syntax of Header key value pair is : &amp;lt;request&amp;gt;&amp;lt;header&amp;gt;&amp;lt;name&amp;gt;x-myheader-1&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;AAA&amp;lt;/value&amp;gt;&amp;lt;/header&amp;gt; &amp;lt;header&amp;gt;&amp;lt;name&amp;gt;x-myheader-2&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;BBB&amp;lt;/value&amp;gt;&amp;lt;/header&amp;gt;&amp;lt;/request&amp;gt;"
                          expressionType="Notify"
                          name="HttpHeaders"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">&lt;request&gt;&lt;header&gt;&lt;name&gt;Accept&lt;/name&gt;&lt;value&gt;*/*&lt;/value&gt;&lt;/header&gt;&lt;header&gt;&lt;name&gt;Cache-Control&lt;/name&gt;&lt;value&gt;no-cache&lt;/value&gt;&lt;/header&gt;&lt;header&gt;&lt;name&gt;X-App-Identifier&lt;/name&gt;&lt;value&gt;client:spicerhaart:{{System::PackageName}}:{{System::TaskName}}&lt;/value&gt;&lt;/header&gt;&lt;/request&gt;</property>
                        <property
                          dataType="System.String"
                          description="User defined data you wish to send along with your HTTP Request (e.g. Upload file data, Form POST data). Usually you have to set content-type of your data but if you select RequestMethod=POST then system will automatically set content-type=application/x-www-form-urlencoded."
                          expressionType="Notify"
                          name="HttpRequestData"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies content type for data you wish to POST. If you select Default option then system default content type will be used (i.e. application/x-www-form-urlencoded). If you specify Content-Type header along with this option then header value takes precedence."
                          expressionType="Notify"
                          name="HttpRequestContentType"
                          typeConverter="ZappySys.Common.Web.HttpRequestContentType">0</property>
                        <property
                          dataType="System.Boolean"
                          description="If this option is true then component will continue without exception on 404 error (Url not found). This allows you to consume data gracefully."
                          expressionType="Notify"
                          name="ContinueOnUrlNotFoundError">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Ignore SSL certificate related errors. Example: if you getting SSL/TLS errors because of certificate expired or certificate is not from trusted authority or certificate is self-signed. By checking this option you will not get SSL/TLS error."
                          expressionType="Notify"
                          name="IgnoreCertificateErrors">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Allow unsecure ciphers/suites and curves for SSLS/TLS communication. Use this option to communicate with web servers which needs legacy / unsecured ciphers support. This option is only trigged when you change default SSL/TLS Version on advanced settings tab."
                          expressionType="Notify"
                          name="AllowUnsecureSuite">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Enable support for gzip or deflate compression. When you check this option compressed response automatically de-compressed saving bandwidth. This option is only valid if web server supports compressed response stream. Check your API documentation for more information."
                          expressionType="Notify"
                          name="EnableCompressionSupport">true</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies which security protocol is supported for HTTPS communication. Using this option you can enable legacy protocol or enforce to use latest version of security protocol (Note: TLS 1.2 is only supported in SSIS 2014 or Higher)."
                          expressionType="Notify"
                          name="SecurityProtocol"
                          typeConverter="ZappySys.PowerPack.Common.HttpsSecurityProtocolType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Wait time in milliseconds (Pause after each request). 0=No wait. Use this delay time if your API has limit on how many requests you can make in certain time frame."
                          expressionType="Notify"
                          name="WaitTime">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you redirect error to error output by default you get additional information in ErrorMessage column. Check this option if you need exact Response Body (Useful if its in JSON/XML format which needs to be parsed for additional information for later step)."
                          expressionType="Notify"
                          name="OnErrorOutputResponseBody">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Enable multiple requests using parallel threads."
                          expressionType="Notify"
                          name="EnableParallelRequests">false</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum parallel threads to use for processing multiple web requests."
                          expressionType="Notify"
                          name="MaxParallelThreads">3</property>
                        <property
                          dataType="System.Boolean"
                          description="By default one request is sent for each input row. If your API supports multiple records in a single call via HTTP Body then enable this setting. See also BodyBatchSize, BodyHeader, BodyFooter and BodyRowSeparator property."
                          expressionType="Notify"
                          name="EnableBodyBatch">false</property>
                        <property
                          dataType="System.String"
                          description="When you have to wrap input content between opening and closing tags for each call then set this property to specify opening for body content. For Example if you want to build Body like this (send max 100 rows per call) ==&gt; { records : [ {...}, {...}, {...} ] } then you can set BatchSize=100, BodyHeader as &quot;{ records: [&quot; , BodyFooter as &quot;] }&quot; and BodyRowSeperator as comma {,}. This property is ignored if EnableBodyBatch=false."
                          expressionType="Notify"
                          name="BodyHeader"></property>
                        <property
                          dataType="System.String"
                          description="When you have to wrap input content between opening and closing tags for each call then set this property to specify closing for body content. For Example if you want to build Body like this (send max 100 rows per call) ==&gt; { records : [ {...}, {...}, {...} ] } then you can set BatchSize=100, BodyHeader as &quot;{ records: [&quot; , BodyFooter as &quot;] }&quot; and BodyRowSeperator as comma {,}. This property is ignored if EnableBodyBatch=false."
                          expressionType="Notify"
                          name="BodyFooter"></property>
                        <property
                          dataType="System.Int32"
                          description="If your API supports multiple records via HTTP Body then change this setting &gt; 1 to include multiple upstream records into single call. See also BodyHeader, BodyFooter and BodyRowSeparator property. This property is ignored if EnableBodyBatch=false."
                          expressionType="Notify"
                          name="BodyBatchSize">100</property>
                        <property
                          dataType="System.String"
                          description="When you submit multiple rows in a batch you can separate multiple documents / records using custom separator (e.g. in JSON Array you can use comma {,} as record separator if POST document is in array format [ {...}, {...}, {...} ] ). For last row of batch blank separator is used."
                          expressionType="Notify"
                          name="BodyRowSeparator"></property>
                        <property
                          dataType="System.Boolean"
                          description="Returns response data as binary data (e.g. Byte Array). Check this option is response is Zip file, Image file or any non text data which needs to be exported as raw data without any encoding."
                          expressionType="Notify"
                          name="TreatResponseAsBinary">false</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.WebApiDestination</property>
                        <property
                          dataType="System.Boolean"
                          description="Check this option if you want to upload file(s) (i.e. POST RAW file data) or send data using Multi-Part encoding method (i.e. Content-Type: multipart/form-data). Multi-Part request allows you to mix key/value and upload files in same request. On the other hand raw upload allows only single file upload (without any key/value) &#xA;&#xA;==== Raw Upload (Content-Type: application/octet-stream) =====   &#xA;To upload single file in raw mode check this option and specify full file path starting with @ sign in the Body (e.g.  @c:\data\myfile.zip ) &#xA;&#xA;==== Form-Data / Multipart Upload (Content-Type: multipart/form-data) =====   &#xA;To treat your Request data as multi part fields you must specify key/value pairs separated by new lines into RequestData field (i.e. Body). Each key value pair is entered on new-line and key/value are separated using equal sign (=). Preceding and trailing spaces are ignored also blank lines are ignored. &#xA;If field value has some any special character(s) then use escape sequence (e.g. For NewLine: \r\n, For Tab: \t, For at (@): \@). When value of any field starts with at sign (@) its automatically treated as File you want to upload. By default file content type is determined based on extension however you can supply content type manually for any field using this way [ fieldname.Content-Type=some content type ]. In below example we have supplied Content-Type for file2 and SomeField1, all other fields are using default content-type.&#xA;See below Example of uploading multiple files along with additional fields.&#xA;&#xA;file1=@c:\data\Myfile1.txt&#xA;file2=@c:\data\Myfile2.json&#xA;file2.Content-Type=application/json&#xA;SomeField1=aaaaaaa&#xA;SomeField1.Content-Type=text/plain&#xA;SomeField2=12345&#xA;SomeFieldWithNewLineAndTab=This is line1\r\nThis is line2\r\nThis is \ttab \ttab \ttab&#xA;SomeFieldStartingWithAtSign=\@MyTwitterHandle&#xA;"
                          expressionType="Notify"
                          name="IsMultiPartUpload">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Enable this option if your server is expecting &#xA; (i.e. CRLF) after last Multi-Part boundary in the Body. This option is only applicable if you enabled IsMultiPartUpload and sending data in Key=value format (i.e. Mutipart). For raw file upload this option has no effect."
                          expressionType="Notify"
                          name="AddMultiPartPostamble">false</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Iterate Offices\Sequence Container\Listing search\Web API Destination.Connections[Connection]"
                          connectionManagerID="Package.ConnectionManagers[HTTP 1]"
                          connectionManagerRefId="Package.ConnectionManagers[HTTP 1]"
                          description="Connection manager for authentication (e.g. HTTP or OAuth Connection)"
                          name="Connection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Listing search\Web API Destination.Inputs[WebApiDestinationInput]"
                          errorRowDisposition="RedirectRow"
                          hasSideEffects="true"
                          name="WebApiDestinationInput"
                          truncationRowDisposition="RedirectRow">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Web API Destination.Inputs[WebApiDestinationInput].Columns[ZS_JSON_OUT]"
                              cachedDataType="nText"
                              cachedName="ZS_JSON_OUT"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Listing search\Web API Destination.Inputs[WebApiDestinationInput].ExternalColumns[HttpRequestData]"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\JSON Generator Transform.Outputs[JsonGeneratorTransformOutput].Columns[ZS_JSON_OUT]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Web API Destination.Inputs[WebApiDestinationInput].ExternalColumns[HttpRequestUrl]"
                              dataType="wstr"
                              length="2000"
                              name="HttpRequestUrl" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Web API Destination.Inputs[WebApiDestinationInput].ExternalColumns[HttpRequestData]"
                              dataType="nText"
                              name="HttpRequestData" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Web API Destination.Inputs[WebApiDestinationInput].ExternalColumns[HttpHeaders]"
                              dataType="wstr"
                              length="2000"
                              name="HttpHeaders" />
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Listing search\Web API Destination.Outputs[WebApiDestination Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="WebApiDestination Error Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Listing search\Web API Destination.Inputs[WebApiDestinationInput]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Web API Destination.Outputs[WebApiDestination Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\Web API Destination.Outputs[WebApiDestination Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Web API Destination.Outputs[WebApiDestination Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\Web API Destination.Outputs[WebApiDestination Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Web API Destination.Outputs[WebApiDestination Error Output].Columns[ErrorColumnName]"
                              codePage="1252"
                              dataType="str"
                              length="128"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\Web API Destination.Outputs[WebApiDestination Error Output].Columns[ErrorColumnName]"
                              name="ErrorColumnName" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Web API Destination.Outputs[WebApiDestination Error Output].Columns[ErrorMessage]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\Web API Destination.Outputs[WebApiDestination Error Output].Columns[ErrorMessage]"
                              name="ErrorMessage" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Listing search\Web API Destination.Outputs[Response Output]"
                          exclusionGroup="1"
                          name="Response Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Listing search\Web API Destination.Inputs[WebApiDestinationInput]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Web API Destination.Outputs[Response Output].Columns[ResponseText]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\Web API Destination.Outputs[Response Output].Columns[ResponseText]"
                              name="ResponseText" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Web API Destination.Outputs[Response Output].Columns[StatusCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\Web API Destination.Outputs[Response Output].Columns[StatusCode]"
                              name="StatusCode" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Listing search\Write to ListingWebQueue"
                      componentClassID="Microsoft.OLEDBDestination"
                      contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                      description="OLE DB Destination"
                      name="Write to ListingWebQueue"
                      usesDispositions="true"
                      version="4">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">0</property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the database object used to open a rowset."
                          name="OpenRowset">[dbo].[ListingWebQueue]</property>
                        <property
                          dataType="System.String"
                          description="Specifies the variable that contains the name of the database object used to open a rowset."
                          name="OpenRowsetVariable"></property>
                        <property
                          dataType="System.String"
                          description="The SQL command to be executed."
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Boolean"
                          description="Forces the use of the DefaultCodePage property value when describing character data."
                          name="AlwaysUseDefaultCodePage">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the mode used to access the database."
                          name="AccessMode"
                          typeConverter="AccessMode">3</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                          name="FastLoadKeepIdentity">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                          name="FastLoadKeepNulls">false</property>
                        <property
                          dataType="System.String"
                          description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                          name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                          name="FastLoadMaxInsertCommitSize">2147483647</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Iterate Offices\Sequence Container\Listing search\Write to ListingWebQueue.Connections[OleDbConnection]"
                          connectionManagerID="Package.ConnectionManagers[colsqlbi01v.Entities]"
                          connectionManagerRefId="Package.ConnectionManagers[colsqlbi01v.Entities]"
                          description="The OLE DB runtime connection used to access the database."
                          name="OleDbConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Listing search\Write to ListingWebQueue.Inputs[OLE DB Destination Input]"
                          errorOrTruncationOperation="Insert"
                          errorRowDisposition="FailComponent"
                          hasSideEffects="true"
                          name="OLE DB Destination Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Write to ListingWebQueue.Inputs[OLE DB Destination Input].Columns[AccountId]"
                              cachedDataType="i4"
                              cachedName="AccountId"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Listing search\Write to ListingWebQueue.Inputs[OLE DB Destination Input].ExternalColumns[AccountId]"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\Add accountid and origin.Outputs[Derived Column Output].Columns[AccountId]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Write to ListingWebQueue.Inputs[OLE DB Destination Input].Columns[args.service_object_id]"
                              cachedDataType="i8"
                              cachedName="args.service_object_id"
                              cachedSortKeyPosition="1"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Listing search\Write to ListingWebQueue.Inputs[OLE DB Destination Input].ExternalColumns[ListingId]"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\Merge Join.Outputs[Merge Join Output].Columns[args.service_object_id]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Write to ListingWebQueue.Inputs[OLE DB Destination Input].Columns[Origin]"
                              cachedDataType="i4"
                              cachedName="Origin"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Listing search\Write to ListingWebQueue.Inputs[OLE DB Destination Input].ExternalColumns[OriginId]"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\Add accountid and origin.Outputs[Derived Column Output].Columns[Origin]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Write to ListingWebQueue.Inputs[OLE DB Destination Input].ExternalColumns[Id]"
                              dataType="i4"
                              name="Id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Write to ListingWebQueue.Inputs[OLE DB Destination Input].ExternalColumns[ListingId]"
                              dataType="i4"
                              name="ListingId" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Write to ListingWebQueue.Inputs[OLE DB Destination Input].ExternalColumns[OriginId]"
                              dataType="ui1"
                              name="OriginId" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Write to ListingWebQueue.Inputs[OLE DB Destination Input].ExternalColumns[AccountId]"
                              dataType="i4"
                              name="AccountId" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Write to ListingWebQueue.Inputs[OLE DB Destination Input].ExternalColumns[DateAdded]"
                              dataType="dbTimeStamp"
                              name="DateAdded" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Write to ListingWebQueue.Inputs[OLE DB Destination Input].ExternalColumns[DateImagesProcessed]"
                              dataType="dbDate"
                              name="DateImagesProcessed" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Write to ListingWebQueue.Inputs[OLE DB Destination Input].ExternalColumns[ProcessingStatus]"
                              dataType="ui1"
                              name="ProcessingStatus" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Write to ListingWebQueue.Inputs[OLE DB Destination Input].ExternalColumns[ProcessingStarted]"
                              dataType="dbTimeStamp"
                              name="ProcessingStarted" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Write to ListingWebQueue.Inputs[OLE DB Destination Input].ExternalColumns[ProcessingFinished]"
                              dataType="dbTimeStamp"
                              name="ProcessingFinished" />
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Listing search\Write to ListingWebQueue.Outputs[OLE DB Destination Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="OLE DB Destination Error Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Listing search\Write to ListingWebQueue.Inputs[OLE DB Destination Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Write to ListingWebQueue.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\Write to ListingWebQueue.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Listing search\Write to ListingWebQueue.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Listing search\Write to ListingWebQueue.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                  </components>
                  <paths>
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Listing search.Paths[Derived Column Output]"
                      endId="Package\Iterate Offices\Sequence Container\Listing search\Upsert Listing.Inputs[OLE DB Command Input]"
                      name="Derived Column Output"
                      startId="Package\Iterate Offices\Sequence Container\Listing search\Add accountid and origin.Outputs[Derived Column Output]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Listing search.Paths[ignore]"
                      endId="Package\Iterate Offices\Sequence Container\Listing search\Trash Destination.Inputs[TrashDestinationInput]"
                      name="ignore"
                      startId="Package\Iterate Offices\Sequence Container\Listing search\Insert or Ignore.Outputs[ignore]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Listing search.Paths[JsonGeneratorTransformOutput]"
                      endId="Package\Iterate Offices\Sequence Container\Listing search\Web API Destination.Inputs[WebApiDestinationInput]"
                      name="JsonGeneratorTransformOutput"
                      startId="Package\Iterate Offices\Sequence Container\Listing search\JSON Generator Transform.Outputs[JsonGeneratorTransformOutput]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Listing search.Paths[JsonParserTransformOutput]"
                      endId="Package\Iterate Offices\Sequence Container\Listing search\Sort.Inputs[Sort Input]"
                      name="JsonParserTransformOutput"
                      startId="Package\Iterate Offices\Sequence Container\Listing search\custom.Outputs[JsonParserTransformOutput]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Listing search.Paths[JsonParserTransformOutput1]"
                      endId="Package\Iterate Offices\Sequence Container\Listing search\Sort 1.Inputs[Sort Input]"
                      name="JsonParserTransformOutput"
                      startId="Package\Iterate Offices\Sequence Container\Listing search\record.Outputs[JsonParserTransformOutput]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Listing search.Paths[JsonParserTransformOutput2]"
                      endId="Package\Iterate Offices\Sequence Container\Listing search\Multicast.Inputs[Multicast Input 1]"
                      name="JsonParserTransformOutput"
                      startId="Package\Iterate Offices\Sequence Container\Listing search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Listing search.Paths[JsonSourceOutput]"
                      endId="Package\Iterate Offices\Sequence Container\Listing search\API Sort.Inputs[Sort Input]"
                      name="JsonSourceOutput"
                      startId="Package\Iterate Offices\Sequence Container\Listing search\Search Listings.Outputs[JsonSourceOutput]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Listing search.Paths[Merge Join Output]"
                      endId="Package\Iterate Offices\Sequence Container\Listing search\Insert or Ignore.Inputs[Conditional Split Input]"
                      name="Merge Join Output"
                      startId="Package\Iterate Offices\Sequence Container\Listing search\Merge Join To Find Those to Insert.Outputs[Merge Join Output]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Listing search.Paths[Merge Join Output1]"
                      endId="Package\Iterate Offices\Sequence Container\Listing search\Add accountid and origin.Inputs[Derived Column Input]"
                      name="Merge Join Output"
                      startId="Package\Iterate Offices\Sequence Container\Listing search\Merge Join.Outputs[Merge Join Output]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Listing search.Paths[Multicast Output 1]"
                      endId="Package\Iterate Offices\Sequence Container\Listing search\custom.Inputs[JsonParserTransformInput]"
                      name="Multicast Output 1"
                      startId="Package\Iterate Offices\Sequence Container\Listing search\Multicast.Outputs[Multicast Output 1]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Listing search.Paths[Multicast Output 2]"
                      endId="Package\Iterate Offices\Sequence Container\Listing search\record.Inputs[JsonParserTransformInput]"
                      name="Multicast Output 2"
                      startId="Package\Iterate Offices\Sequence Container\Listing search\Multicast.Outputs[Multicast Output 2]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Listing search.Paths[OLE DB Command Output]"
                      endId="Package\Iterate Offices\Sequence Container\Listing search\Write to ListingWebQueue.Inputs[OLE DB Destination Input]"
                      name="OLE DB Command Output"
                      startId="Package\Iterate Offices\Sequence Container\Listing search\Upsert Listing.Outputs[OLE DB Command Output]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Listing search.Paths[OLE DB Source Output]"
                      endId="Package\Iterate Offices\Sequence Container\Listing search\SQL Sort.Inputs[Sort Input]"
                      name="OLE DB Source Output"
                      startId="Package\Iterate Offices\Sequence Container\Listing search\Existing Listings from SQL.Outputs[OLE DB Source Output]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Listing search.Paths[Response Output]"
                      endId="Package\Iterate Offices\Sequence Container\Listing search\JSON Parser Add id back in.Inputs[JsonParserTransformInput]"
                      name="Response Output"
                      startId="Package\Iterate Offices\Sequence Container\Listing search\Web API Destination.Outputs[Response Output]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Listing search.Paths[Sort Output]"
                      endId="Package\Iterate Offices\Sequence Container\Listing search\Merge Join.Inputs[Merge Join Left Input]"
                      name="Sort Output"
                      startId="Package\Iterate Offices\Sequence Container\Listing search\Sort.Outputs[Sort Output]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Listing search.Paths[Sort Output1]"
                      endId="Package\Iterate Offices\Sequence Container\Listing search\Merge Join To Find Those to Insert.Inputs[Merge Join Right Input]"
                      name="Sort Output"
                      startId="Package\Iterate Offices\Sequence Container\Listing search\SQL Sort.Outputs[Sort Output]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Listing search.Paths[Sort Output2]"
                      endId="Package\Iterate Offices\Sequence Container\Listing search\Merge Join.Inputs[Merge Join Right Input]"
                      name="Sort Output"
                      startId="Package\Iterate Offices\Sequence Container\Listing search\Sort 1.Outputs[Sort Output]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Listing search.Paths[Sort Output3]"
                      endId="Package\Iterate Offices\Sequence Container\Listing search\Merge Join To Find Those to Insert.Inputs[Merge Join Left Input]"
                      name="Sort Output"
                      startId="Package\Iterate Offices\Sequence Container\Listing search\API Sort.Outputs[Sort Output]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Listing search.Paths[upsert]"
                      endId="Package\Iterate Offices\Sequence Container\Listing search\JSON Generator Transform.Inputs[JsonInput1]"
                      name="upsert"
                      startId="Package\Iterate Offices\Sequence Container\Listing search\Insert or Ignore.Outputs[upsert]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Listing search.Paths[WebApiDestination Error Output]"
                      endId="Package\Iterate Offices\Sequence Container\Listing search\Trash Destination 1.Inputs[TrashDestinationInput]"
                      name="WebApiDestination Error Output"
                      startId="Package\Iterate Offices\Sequence Container\Listing search\Web API Destination.Outputs[WebApiDestination Error Output]" />
                  </paths>
                </pipeline>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Iterate Offices\Sequence Container\MarketLead search"
              DTS:CreationName="Microsoft.Pipeline"
              DTS:Description="Data Flow Task"
              DTS:DTSID="{4379e47c-f4b5-41eb-986c-c79495b582d0}"
              DTS:ExecutableType="Microsoft.Pipeline"
              DTS:LocaleID="-1"
              DTS:ObjectName="MarketLead search"
              DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:ObjectData>
                <pipeline
                  version="1">
                  <components>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\MarketLead search\Add accountid and origin"
                      componentClassID="Microsoft.DerivedColumn"
                      contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                      name="Add accountid and origin"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\MarketLead search\Add accountid and origin.Inputs[Derived Column Input]"
                          description="Input to the Derived Column Transformation"
                          name="Derived Column Input">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\MarketLead search\Add accountid and origin.Outputs[Derived Column Output]"
                          description="Default Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          name="Derived Column Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\MarketLead search\Add accountid and origin.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\Add accountid and origin.Outputs[Derived Column Output].Columns[AccountId]"
                              dataType="i4"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Iterate Offices\Sequence Container\MarketLead search\Add accountid and origin.Outputs[Derived Column Output].Columns[AccountId]"
                              name="AccountId"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">@[User::RexAccountID]</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">@[User::RexAccountID]</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\Add accountid and origin.Outputs[Derived Column Output].Columns[Origin]"
                              dataType="i4"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Iterate Offices\Sequence Container\MarketLead search\Add accountid and origin.Outputs[Derived Column Output].Columns[Origin]"
                              name="Origin"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">2</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">2</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\MarketLead search\Add accountid and origin.Outputs[Derived Column Error Output]"
                          description="Error Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Derived Column Error Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\MarketLead search\Add accountid and origin.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\Add accountid and origin.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\MarketLead search\Add accountid and origin.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\Add accountid and origin.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\MarketLead search\Add accountid and origin.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\MarketLead search\API Sort"
                      componentClassID="Microsoft.Sort"
                      contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
                      name="API Sort"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                          name="EliminateDuplicates">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the maximum number of threads to use for sorting."
                          expressionType="Notify"
                          name="MaximumThreads">-1</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\MarketLead search\API Sort.Inputs[Sort Input]"
                          name="Sort Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\API Sort.Inputs[Sort Input].Columns[etag]"
                              cachedDataType="wstr"
                              cachedLength="68"
                              cachedName="etag"
                              lineageId="Package\Iterate Offices\Sequence Container\MarketLead search\Search Market Leads.Outputs[JsonSourceOutput].Columns[etag]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\API Sort.Inputs[Sort Input].Columns[id]"
                              cachedDataType="i4"
                              cachedName="id"
                              lineageId="Package\Iterate Offices\Sequence Container\MarketLead search\Search Market Leads.Outputs[JsonSourceOutput].Columns[id]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">1</property>
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\MarketLead search\API Sort.Outputs[Sort Output]"
                          isSorted="true"
                          name="Sort Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\API Sort.Outputs[Sort Output].Columns[etag]"
                              dataType="wstr"
                              length="68"
                              lineageId="Package\Iterate Offices\Sequence Container\MarketLead search\API Sort.Outputs[Sort Output].Columns[etag]"
                              name="etag">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Iterate Offices\Sequence Container\MarketLead search\Search Market Leads.Outputs[JsonSourceOutput].Columns[etag]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\API Sort.Outputs[Sort Output].Columns[id]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\MarketLead search\API Sort.Outputs[Sort Output].Columns[id]"
                              name="id"
                              sortKeyPosition="1">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Iterate Offices\Sequence Container\MarketLead search\Search Market Leads.Outputs[JsonSourceOutput].Columns[id]}</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\MarketLead search\Existing Market Leads from SQL"
                      componentClassID="Microsoft.OLEDBSource"
                      contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                      description="OLE DB Source"
                      name="Existing Market Leads from SQL"
                      usesDispositions="true"
                      version="7">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">0</property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the database object used to open a rowset."
                          name="OpenRowset">[dbo].[vwContacts]</property>
                        <property
                          dataType="System.String"
                          description="Specifies the variable that contains the name of the database object used to open a rowset."
                          name="OpenRowsetVariable"></property>
                        <property
                          dataType="System.String"
                          description="The SQL command to be executed."
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">SELECT [Id], 
       [etag] as etaglead, 
       [AccountId]
FROM [Entities].[dbo].[MarketLeads] with (NOLOCK)
WHERE [AccountId] = ?</property>
                        <property
                          dataType="System.String"
                          description="The variable that contains the SQL command to be executed."
                          name="SqlCommandVariable"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Boolean"
                          description="Forces the use of the DefaultCodePage property value when describing character data."
                          name="AlwaysUseDefaultCodePage">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the mode used to access the database."
                          name="AccessMode"
                          typeConverter="AccessMode">2</property>
                        <property
                          dataType="System.String"
                          description="The mappings between the parameters in the SQL command and variables."
                          name="ParameterMapping">"Parameter0:Input",{40C273CD-83FA-4737-B171-10500D92D346};</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Iterate Offices\Sequence Container\MarketLead search\Existing Market Leads from SQL.Connections[OleDbConnection]"
                          connectionManagerID="Package.ConnectionManagers[colsqlbi01v.Entities]"
                          connectionManagerRefId="Package.ConnectionManagers[colsqlbi01v.Entities]"
                          description="The OLE DB runtime connection used to access the database."
                          name="OleDbConnection" />
                      </connections>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\MarketLead search\Existing Market Leads from SQL.Outputs[OLE DB Source Output]"
                          name="OLE DB Source Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\Existing Market Leads from SQL.Outputs[OLE DB Source Output].Columns[Id]"
                              dataType="i4"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\MarketLead search\Existing Market Leads from SQL.Outputs[OLE DB Source Output].ExternalColumns[Id]"
                              lineageId="Package\Iterate Offices\Sequence Container\MarketLead search\Existing Market Leads from SQL.Outputs[OLE DB Source Output].Columns[Id]"
                              name="Id"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\Existing Market Leads from SQL.Outputs[OLE DB Source Output].Columns[AccountId]"
                              dataType="i2"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\MarketLead search\Existing Market Leads from SQL.Outputs[OLE DB Source Output].ExternalColumns[AccountId]"
                              lineageId="Package\Iterate Offices\Sequence Container\MarketLead search\Existing Market Leads from SQL.Outputs[OLE DB Source Output].Columns[AccountId]"
                              name="AccountId"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\Existing Market Leads from SQL.Outputs[OLE DB Source Output].Columns[etaglead]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\MarketLead search\Existing Market Leads from SQL.Outputs[OLE DB Source Output].ExternalColumns[etaglead]"
                              length="250"
                              lineageId="Package\Iterate Offices\Sequence Container\MarketLead search\Existing Market Leads from SQL.Outputs[OLE DB Source Output].Columns[etaglead]"
                              name="etaglead"
                              truncationRowDisposition="FailComponent" />
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\Existing Market Leads from SQL.Outputs[OLE DB Source Output].ExternalColumns[Id]"
                              dataType="i4"
                              name="Id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\Existing Market Leads from SQL.Outputs[OLE DB Source Output].ExternalColumns[AccountId]"
                              codePage="1252"
                              dataType="str"
                              length="4"
                              name="AccountId" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\Existing Market Leads from SQL.Outputs[OLE DB Source Output].ExternalColumns[etaglead]"
                              dataType="wstr"
                              length="250"
                              name="etaglead" />
                          </externalMetadataColumns>
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\MarketLead search\Existing Market Leads from SQL.Outputs[OLE DB Source Error Output]"
                          isErrorOut="true"
                          name="OLE DB Source Error Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\Existing Market Leads from SQL.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\MarketLead search\Existing Market Leads from SQL.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\Existing Market Leads from SQL.Outputs[OLE DB Source Error Output].Columns[etaglead]"
                              dataType="wstr"
                              length="250"
                              lineageId="Package\Iterate Offices\Sequence Container\MarketLead search\Existing Market Leads from SQL.Outputs[OLE DB Source Error Output].Columns[etaglead]"
                              name="etaglead" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\Existing Market Leads from SQL.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\MarketLead search\Existing Market Leads from SQL.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\Existing Market Leads from SQL.Outputs[OLE DB Source Error Output].Columns[Id]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\MarketLead search\Existing Market Leads from SQL.Outputs[OLE DB Source Error Output].Columns[Id]"
                              name="Id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\Existing Market Leads from SQL.Outputs[OLE DB Source Error Output].Columns[AccountId]"
                              codePage="1252"
                              dataType="str"
                              length="4"
                              lineageId="Package\Iterate Offices\Sequence Container\MarketLead search\Existing Market Leads from SQL.Outputs[OLE DB Source Error Output].Columns[AccountId]"
                              name="AccountId" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\MarketLead search\Insert or Ignore"
                      componentClassID="Microsoft.ConditionalSplit"
                      contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
                      name="Insert or Ignore"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\MarketLead search\Insert or Ignore.Inputs[Conditional Split Input]"
                          description="Input to the Conditional Split Transformation"
                          name="Conditional Split Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\Insert or Ignore.Inputs[Conditional Split Input].Columns[etag]"
                              cachedDataType="wstr"
                              cachedLength="68"
                              cachedName="etag"
                              lineageId="Package\Iterate Offices\Sequence Container\MarketLead search\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etag]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\Insert or Ignore.Inputs[Conditional Split Input].Columns[etaglead]"
                              cachedDataType="wstr"
                              cachedLength="250"
                              cachedName="etaglead"
                              lineageId="Package\Iterate Offices\Sequence Container\MarketLead search\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etaglead]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\MarketLead search\Insert or Ignore.Outputs[upsert]"
                          description="Output 1 of the Conditional Split Transformation"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          exclusionGroup="1"
                          name="upsert"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\MarketLead search\Insert or Ignore.Inputs[Conditional Split Input]"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                              name="Expression">[ISNULL](#{Package\Iterate Offices\Sequence Container\MarketLead search\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etaglead]}) || (#{Package\Iterate Offices\Sequence Container\MarketLead search\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etaglead]}) != #{Package\Iterate Offices\Sequence Container\MarketLead search\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etag]}</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the friendly version of the expression. This expression version uses column names."
                              expressionType="Notify"
                              name="FriendlyExpression">ISNULL(etaglead) || (etaglead) != etag</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                              name="EvaluationOrder">0</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\MarketLead search\Insert or Ignore.Outputs[ignore]"
                          description="Output 2 of the Conditional Split Transformation"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          exclusionGroup="1"
                          name="ignore"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\MarketLead search\Insert or Ignore.Inputs[Conditional Split Input]"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                              name="Expression">![ISNULL](#{Package\Iterate Offices\Sequence Container\MarketLead search\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etaglead]})</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the friendly version of the expression. This expression version uses column names."
                              expressionType="Notify"
                              name="FriendlyExpression">!ISNULL(etaglead)</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                              name="EvaluationOrder">1</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\MarketLead search\Insert or Ignore.Outputs[Conditional Split Default Output]"
                          description="Default Output of the Conditional Split Transformation"
                          exclusionGroup="1"
                          name="Conditional Split Default Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\MarketLead search\Insert or Ignore.Inputs[Conditional Split Input]">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              name="IsDefaultOut">true</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\MarketLead search\Insert or Ignore.Outputs[Conditional Split Error Output]"
                          description="Error Output of the Conditional Split Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Conditional Split Error Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\MarketLead search\Insert or Ignore.Inputs[Conditional Split Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\Insert or Ignore.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\MarketLead search\Insert or Ignore.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\Insert or Ignore.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\MarketLead search\Insert or Ignore.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\MarketLead search\JSON Generator Transform"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="JSON Generator Transform; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="The JSON generator transform can be used to create JSON document from single or multiple inputs. You can create simple or nested JSON document."
                      name="JSON Generator Transform"
                      version="5">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.Int32"
                          description="Determines JSON format and output mode (e.g. one JSON for all input rows or one JSON for each input row)"
                          expressionType="Notify"
                          name="OutputMode"
                          typeConverter="ZappySys.PowerPack.Transform.JsonGeneratorTransform.JsonOutputMode">2</property>
                        <property
                          dataType="System.String"
                          description="Defines shape of output JSON string"
                          expressionType="Notify"
                          name="LayoutInfo">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;settings ver="3"&gt;
  &lt;dataset id="ds_id729" main="True" inputid="729" readfrominput="True"&gt;&lt;/dataset&gt;
  &lt;map name="method" value="MarketLeads::read" datatype="String" /&gt;
  &lt;map name="args"&gt;
    &lt;map src="id" name="id" datatype="String" /&gt;
  &lt;/map&gt;
  &lt;map name="strip_response_prefixes" value="true" datatype="Bool" /&gt;
  &lt;map name="token" value="{{User::RexToken}}" /&gt;
&lt;/settings&gt;</property>
                        <property
                          dataType="System.Boolean"
                          description="Do not output attribute if value is NULL. By default null attribute is output as &quot;MyColname&quot; : null "
                          expressionType="Notify"
                          name="DoNotOutputNullAttribute">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indent JSON Text generated by this transform (Pretty Print)"
                          expressionType="Notify"
                          name="IndentOutput">false</property>
                        <property
                          dataType="System.String"
                          description="Default output format for datetime columns"
                          expressionType="Notify"
                          name="DateTimeFormat">yyyy-MM-dd HH:mm:ss</property>
                        <property
                          dataType="System.String"
                          description="Culture setting for this task. This option is useful to control output format for certain data types (e.g. number, decimal) based on regional settings. In USA dot is used for decimal indicator but in Germany it may be comma. Leave this blank if you want to use system default settings."
                          expressionType="Notify"
                          name="Culture"></property>
                        <property
                          dataType="System.Boolean"
                          description="Document Header/Footer text come from upstream column rather than direct string"
                          expressionType="Notify"
                          name="UseColumnForHeaderFooter">false</property>
                        <property
                          dataType="System.String"
                          description="Header text for document (Added before each document in the output)"
                          expressionType="Notify"
                          name="DocumentHeader"></property>
                        <property
                          dataType="System.String"
                          description="Footer text for document (Added after each document in the output)"
                          expressionType="Notify"
                          name="DocumentFooter"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies how many rows to include in each batch (Array records for single dataset array mode). 0=Include all in one batch. This setting is only valid for Mode=[Single Dataset Array]"
                          expressionType="Notify"
                          name="ArrayBatchSize">0</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.JsonGeneratorTransform</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to True if you dont want to output empty nodes of sub document (e.g nested property). This option is only applicable if you enabled DoNotOutputNullProperty. If all child peoprties are NULL for parent node then by default output contains empty nodes (e.g. CountryInfo: { CityInfo: { } } for Json --OR-- &lt;CountryInfo&gt;&lt;CityInfo /&gt;&lt;/CountryInfo&gt; for Xml). You can enable this option to avoid such empty nodes from the output."
                          expressionType="Notify"
                          name="DoNotOutputEmptyNestedAttribute">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to True if you dont want to output empty array nodes when no record found for that array (e.g. &quot;Orders&quot;: [ ] for JSON --OR-- &lt;Orders&gt;&lt;/Orders&gt; for Xml). You can enable this option to avoid such empty nodes from the output."
                          expressionType="Notify"
                          name="DoNotOutputEmptyArrayAttribute">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies encoding for data. If you set CharacterSet property then Encoing is ignored."
                          expressionType="Notify"
                          name="Encoding"
                          typeConverter="ZappySys.Common.EncodingType">2</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\MarketLead search\JSON Generator Transform.Inputs[JsonInput1]"
                          name="JsonInput1">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Id for attached dataset with input. Use JSON Layout Editor to see attached dataset"
                              expressionType="Notify"
                              name="DatasetInputId">729</property>
                          </properties>
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\JSON Generator Transform.Inputs[JsonInput1].Columns[etag]"
                              cachedDataType="wstr"
                              cachedLength="68"
                              cachedName="etag"
                              lineageId="Package\Iterate Offices\Sequence Container\MarketLead search\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etag]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\JSON Generator Transform.Inputs[JsonInput1].Columns[id]"
                              cachedDataType="i4"
                              cachedName="id"
                              cachedSortKeyPosition="1"
                              lineageId="Package\Iterate Offices\Sequence Container\MarketLead search\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[id]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\JSON Generator Transform.Inputs[JsonInput1].Columns[etaglead]"
                              cachedDataType="wstr"
                              cachedLength="250"
                              cachedName="etaglead"
                              lineageId="Package\Iterate Offices\Sequence Container\MarketLead search\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etaglead]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\MarketLead search\JSON Generator Transform.Inputs[JsonInput2]"
                          name="JsonInput2">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\MarketLead search\JSON Generator Transform.Outputs[JsonGeneratorTransformOutput]"
                          errorOrTruncationOperation="Error"
                          name="JsonGeneratorTransformOutput">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\JSON Generator Transform.Outputs[JsonGeneratorTransformOutput].Columns[ZS_JSON_OUT]"
                              dataType="nText"
                              description="This output column contains generated JSON string from JSON generator Transform"
                              lineageId="Package\Iterate Offices\Sequence Container\MarketLead search\JSON Generator Transform.Outputs[JsonGeneratorTransformOutput].Columns[ZS_JSON_OUT]"
                              name="ZS_JSON_OUT" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\MarketLead search\JSON Parser Add id back in"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="JSON Parser Transform; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="Parse incoming JSON String into columns. You can also parse and transform single JSON record into multiple rows by filtering data based on JSON Path (e.g. $.Customer.Orders[*])"
                      name="JSON Parser Add id back in"
                      usesDispositions="true"
                      version="2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for any numeric data types"
                          expressionType="Notify"
                          name="TreatBlankNumberAsNull">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for bool data types"
                          expressionType="Notify"
                          name="TreatBlankBoolAsNull">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for any date/time data types"
                          expressionType="Notify"
                          name="TreatBlankDateAsNull">true</property>
                        <property
                          dataType="System.String"
                          description="Sample JSON data used to parse output columns."
                          expressionType="Notify"
                          name="SampleData"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">{"method":"CustomFields::readFieldValuesAndRecord","args":{"service_name":"Leads","service_object_id":"28569","return_custom_fields_keyed_by":"field_name"},"strip_response_prefixes":1,"token":"b57c-0be2-04f4-8d65-fd25-a099-6087-07de-1780-19443"}</property>
                        <property
                          dataType="System.Boolean"
                          description="Include all upstream parent columns into output except the one you selected to parse. By default only parsed columns from Input document is included in the output. If you wish to include all other upstream columns in the output too then check this option."
                          expressionType="Notify"
                          name="OutputAllUpstreamColumns">true</property>
                        <property
                          dataType="System.Int32"
                          description="Defines how to handle empty input. By default NULL or Empty input is skipped from parsing."
                          expressionType="Notify"
                          name="EmptyInputProcessingMode"
                          typeConverter="ZappySys.Common.Data.EmptyInputProcessingMode">0</property>
                        <property
                          dataType="System.String"
                          description="Defines how to handle empty input. By default NULL or Empty input is skipped from parsing."
                          expressionType="Notify"
                          name="TreatEmptyInputAs">{ }</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum JSON records to fetch. Set this value to 0 for all records"
                          expressionType="Notify"
                          name="MaxRows">0</property>
                        <property
                          dataType="System.String"
                          description="Enter expression here to filter data.(Example:  $.Users[*].UserName ) This will fetch User names from users records"
                          expressionType="Notify"
                          name="Filter"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.Boolean"
                          description="Use this option to include parent properties (Non array) in the output along with Filtered Rows"
                          expressionType="Notify"
                          name="IncludeParentColumns">true</property>
                        <property
                          dataType="System.Boolean"
                          description="By default child and parent information is not included in the output if children not found for specified expression. For example if you want to extract all orders from all customers nodes then you can type $.Customers[*].Orders[*]. This will fetch all orders from all customers. By default customers records without orders wont be included in the output. If you want to include those customers where orders not found then check this option (Output null information for order attributes). This behavior is similar to LEFT OUTER JOIN in SQL (Left side is parent, right side is child). This option is ***resource intensive*** so only check if you really care about this behavior."
                          expressionType="Notify"
                          name="IncludeParentColumnsWhenChildMissing">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to true if you want to output parent columns which are array. By default any parent column which is an array is not included in output. See also FilterForParentColumnsWithArrayType property if you set this property"
                          expressionType="Notify"
                          name="IncludeParentColumnsWithArrayType">false</property>
                        <property
                          dataType="System.String"
                          description="Filter expression to extract value form parent"
                          expressionType="Notify"
                          name="FilterForParentColumnsWithArrayType"></property>
                        <property
                          dataType="System.String"
                          description="Prefix for parent column name. This option is only valid if you have set IncludeParentColumns=True"
                          expressionType="Notify"
                          name="ParentColumnPrefix">P_</property>
                        <property
                          dataType="System.Boolean"
                          description="Throw error if property name specified in filter expression is missing. By default it will ignore any missing property errors."
                          expressionType="Notify"
                          name="ThrowErrorIfPropertyMissing">false</property>
                        <property
                          dataType="System.Int32"
                          description="This property how many nested levels should be scanned to fetch various properties. 0=Scan all child levels."
                          expressionType="Notify"
                          name="MaxLevelsToScan">0</property>
                        <property
                          dataType="System.String"
                          description="List comma separated property names from JSON document which you want to exclude from output. Specify parent property name to exclude all child nodes."
                          expressionType="Notify"
                          name="ExcludedProperties"></property>
                        <property
                          dataType="System.String"
                          description="Property level separator used in generated property name (separator for outer properties - Above selected filter node). Use this if default separator is producing duplicate property name which is conflicting with existing name."
                          expressionType="Notify"
                          name="LevelSeparator">_</property>
                        <property
                          dataType="System.Boolean"
                          description="Enables deep array flattening for selected filtered hierarchy. When you turn on this property it will flatten each property of each array item and expose as column (e.g. If you have Filter set as $.customers[*] and for each customer you have an array of Addresses then you may see output columns like Addresses.1.City, Addresses.1.State, Addresses.2.City, Addresses.2.State .... Addresses.N.City, Addresses.N.State). You can control how many array items you want to flatten by setting MaxArrayItemsToFlatten property."
                          expressionType="Notify"
                          name="EnableArrayFlattening">false</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum number of array items to flatten. inner array flattening. Adjust this property to control how many columns being generated. This option is ignored if you set EnableArrayFlattening=false"
                          expressionType="Notify"
                          name="MaxArrayItemsToFlatten">10</property>
                        <property
                          dataType="System.String"
                          description="Specifies how custom date formatted strings are parsed when reading JSON."
                          expressionType="Notify"
                          name="DateFormatString"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies how date formatted strings, e.g. Date(1198908717056) and 2012-03-21T05:40Z, are parsed when reading JSON."
                          expressionType="Notify"
                          name="DateParseHandling"
                          typeConverter="ZappySys.Common.DateParseHandling">1</property>
                        <property
                          dataType="System.Boolean"
                          description="Output as raw JSON document rather than parsing individual fields. This option is helpful if you have documents stored in a file and you want to pass them downstream as raw JSON string rather than parsing into columns."
                          expressionType="Notify"
                          name="OutputRawDocument">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indent JSON output so its easy to read."
                          expressionType="Notify"
                          name="IndentOutput">false</property>
                        <property
                          dataType="System.Boolean"
                          description="When this property is true then Column is converted to Row. Pivoted names will appear under  Pivot_Name column and values will appear under Pivot_Value field."
                          expressionType="Notify"
                          name="EnablePivot">false</property>
                        <property
                          dataType="System.Int32"
                          description="Array Transformation you want to apply. Useful for case when you have 2-Dimensional arrays with rows/columns in separate arrays."
                          expressionType="Notify"
                          name="ArrayTransformationType"
                          typeConverter="ZappySys.Json.ArrayTransformType">0</property>
                        <property
                          dataType="System.String"
                          description="Filter expression to use to extract column names for array transformation."
                          expressionType="Notify"
                          name="ArrayTransColumnNameFilter"></property>
                        <property
                          dataType="System.String"
                          description="Filter expression for row values (Not applicable for simple array transformation)."
                          expressionType="Notify"
                          name="ArrayTransRowValueFilter"></property>
                        <property
                          dataType="System.Boolean"
                          description="When you have 2D array but don't have column list specified in a separate array then use this option (e.g. { arr: [[10,11],[21,22]] } )."
                          expressionType="Notify"
                          name="ArrayTransEnableCustomColumns">false</property>
                        <property
                          dataType="System.String"
                          description="When you have 2D array but don't have column list specified in a separate array then use specify column names here. Use comma separated list (e.g col1,col2,col3 ). Column name Order must match value order."
                          expressionType="Notify"
                          name="ArrayTransCustomColumns"></property>
                        <property
                          dataType="System.Int32"
                          description="Metadata scan mode controls how data type and length is determined. By default few records scanned to determine datatype/length. Changing ScanMode affects length/datatype accuracy."
                          expressionType="Notify"
                          name="MetaDataScanMode"
                          typeConverter="ZappySys.Common.Data.MetaDataScanMode">4</property>
                        <property
                          dataType="System.Int32"
                          description="Length for all string column. This option is only valid for MetaDataScanMode=Custom"
                          expressionType="Notify"
                          name="MetaDataCustomLength">1000</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.JsonParserTransform</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\MarketLead search\JSON Parser Add id back in.Inputs[JsonParserTransformInput]"
                          errorRowDisposition="FailComponent"
                          name="JsonParserTransformInput"
                          truncationRowDisposition="FailComponent">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\JSON Parser Add id back in.Inputs[JsonParserTransformInput].Columns[ZS_JSON_OUT]"
                              cachedDataType="nText"
                              cachedName="ZS_JSON_OUT"
                              lineageId="Package\Iterate Offices\Sequence Container\MarketLead search\JSON Generator Transform.Outputs[JsonGeneratorTransformOutput].Columns[ZS_JSON_OUT]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\JSON Parser Add id back in.Inputs[JsonParserTransformInput].Columns[ResponseText]"
                              cachedDataType="nText"
                              cachedName="ResponseText"
                              lineageId="Package\Iterate Offices\Sequence Container\MarketLead search\Web API Destination.Outputs[Response Output].Columns[ResponseText]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\MarketLead search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[ResponseText]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\JSON Parser Add id back in.Inputs[JsonParserTransformInput].Columns[StatusCode]"
                              cachedDataType="i4"
                              cachedName="StatusCode"
                              lineageId="Package\Iterate Offices\Sequence Container\MarketLead search\Web API Destination.Outputs[Response Output].Columns[StatusCode]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\MarketLead search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[StatusCode]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True" />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\MarketLead search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput]"
                          errorOrTruncationOperation="Error"
                          errorRowDisposition="FailComponent"
                          name="JsonParserTransformOutput"
                          truncationRowDisposition="FailComponent">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[StatusCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\MarketLead search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[StatusCode]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\MarketLead search\JSON Parser Add id back in.Inputs[JsonParserTransformInput].Columns[StatusCode]"
                              name="StatusCode" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[ResponseText]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\MarketLead search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[ResponseText]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\MarketLead search\JSON Parser Add id back in.Inputs[JsonParserTransformInput].Columns[ResponseText]"
                              name="ResponseText" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[args.service_object_id]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\MarketLead search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].ExternalColumns[args.service_object_id]"
                              length="20"
                              lineageId="Package\Iterate Offices\Sequence Container\MarketLead search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[args.service_object_id]"
                              name="args.service_object_id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[method]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\MarketLead search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].ExternalColumns[method]"
                              length="152"
                              lineageId="Package\Iterate Offices\Sequence Container\MarketLead search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[method]"
                              name="method" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[args.service_name]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\MarketLead search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].ExternalColumns[args.service_name]"
                              length="20"
                              lineageId="Package\Iterate Offices\Sequence Container\MarketLead search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[args.service_name]"
                              name="args.service_name" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[args.return_custom_fields_keyed_by]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\MarketLead search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].ExternalColumns[args.return_custom_fields_keyed_by]"
                              length="40"
                              lineageId="Package\Iterate Offices\Sequence Container\MarketLead search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[args.return_custom_fields_keyed_by]"
                              name="args.return_custom_fields_keyed_by" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[strip_response_prefixes]"
                              dataType="i8"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\MarketLead search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].ExternalColumns[strip_response_prefixes]"
                              lineageId="Package\Iterate Offices\Sequence Container\MarketLead search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[strip_response_prefixes]"
                              name="strip_response_prefixes" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[token]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\MarketLead search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].ExternalColumns[token]"
                              length="200"
                              lineageId="Package\Iterate Offices\Sequence Container\MarketLead search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[token]"
                              name="token" />
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].ExternalColumns[method]"
                              dataType="wstr"
                              length="152"
                              name="method" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].ExternalColumns[args.service_name]"
                              dataType="wstr"
                              length="20"
                              name="args.service_name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].ExternalColumns[args.service_object_id]"
                              dataType="wstr"
                              length="20"
                              name="args.service_object_id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].ExternalColumns[args.return_custom_fields_keyed_by]"
                              dataType="wstr"
                              length="40"
                              name="args.return_custom_fields_keyed_by" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].ExternalColumns[strip_response_prefixes]"
                              dataType="i8"
                              name="strip_response_prefixes" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].ExternalColumns[token]"
                              dataType="wstr"
                              length="200"
                              name="token" />
                          </externalMetadataColumns>
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\MarketLead search\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output]"
                          isErrorOut="true"
                          name="JsonParserTransform Error Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[StatusCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\MarketLead search\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[StatusCode]"
                              name="StatusCode" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[ResponseText]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\MarketLead search\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[ResponseText]"
                              name="ResponseText" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[args.service_object_id]"
                              dataType="wstr"
                              length="20"
                              lineageId="Package\Iterate Offices\Sequence Container\MarketLead search\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[args.service_object_id]"
                              name="args.service_object_id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[method]"
                              dataType="wstr"
                              length="152"
                              lineageId="Package\Iterate Offices\Sequence Container\MarketLead search\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[method]"
                              name="method" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[args.service_name]"
                              dataType="wstr"
                              length="20"
                              lineageId="Package\Iterate Offices\Sequence Container\MarketLead search\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[args.service_name]"
                              name="args.service_name" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[args.return_custom_fields_keyed_by]"
                              dataType="wstr"
                              length="40"
                              lineageId="Package\Iterate Offices\Sequence Container\MarketLead search\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[args.return_custom_fields_keyed_by]"
                              name="args.return_custom_fields_keyed_by" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[strip_response_prefixes]"
                              dataType="i8"
                              lineageId="Package\Iterate Offices\Sequence Container\MarketLead search\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[strip_response_prefixes]"
                              name="strip_response_prefixes" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[token]"
                              dataType="wstr"
                              length="200"
                              lineageId="Package\Iterate Offices\Sequence Container\MarketLead search\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[token]"
                              name="token" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\MarketLead search\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\MarketLead search\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[ErrorColumnName]"
                              codePage="1252"
                              dataType="str"
                              length="128"
                              lineageId="Package\Iterate Offices\Sequence Container\MarketLead search\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[ErrorColumnName]"
                              name="ErrorColumnName" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[ErrorMessage]"
                              dataType="wstr"
                              length="1024"
                              lineageId="Package\Iterate Offices\Sequence Container\MarketLead search\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[ErrorMessage]"
                              name="ErrorMessage" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[ErrorRawData]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\MarketLead search\JSON Parser Add id back in.Outputs[JsonParserTransform Error Output].Columns[ErrorRawData]"
                              name="ErrorRawData" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\MarketLead search\Merge Join To Find Those to Insert"
                      componentClassID="Microsoft.MergeJoin"
                      contactInfo="Merge Join;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Combine two sorted data flows into one using the FULL, LEFT, or INNER join. We recommend this transformation when data flows can be sorted at their sources."
                      name="Merge Join To Find Those to Insert"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of join to perform."
                          name="JoinType"
                          typeConverter="JoinType">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the number of columns in the ordering key."
                          name="NumKeyColumns">1</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the null values are treated as equal values."
                          name="TreatNullsAsEqual">true</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates the requested maximum buffers per input before blocking."
                          name="MaxBuffersPerInput">5</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\MarketLead search\Merge Join To Find Those to Insert.Inputs[Merge Join Left Input]"
                          hasSideEffects="true"
                          name="Merge Join Left Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\Merge Join To Find Those to Insert.Inputs[Merge Join Left Input].Columns[etag]"
                              cachedDataType="wstr"
                              cachedLength="68"
                              cachedName="etag"
                              lineageId="Package\Iterate Offices\Sequence Container\MarketLead search\API Sort.Outputs[Sort Output].Columns[etag]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\Merge Join To Find Those to Insert.Inputs[Merge Join Left Input].Columns[id]"
                              cachedDataType="i4"
                              cachedName="id"
                              cachedSortKeyPosition="1"
                              lineageId="Package\Iterate Offices\Sequence Container\MarketLead search\API Sort.Outputs[Sort Output].Columns[id]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\MarketLead search\Merge Join To Find Those to Insert.Inputs[Merge Join Right Input]"
                          hasSideEffects="true"
                          name="Merge Join Right Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\Merge Join To Find Those to Insert.Inputs[Merge Join Right Input].Columns[Id]"
                              cachedDataType="i4"
                              cachedName="Id"
                              cachedSortKeyPosition="1"
                              lineageId="Package\Iterate Offices\Sequence Container\MarketLead search\SQL Sort.Outputs[Sort Output].Columns[Id]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\Merge Join To Find Those to Insert.Inputs[Merge Join Right Input].Columns[etaglead]"
                              cachedDataType="wstr"
                              cachedLength="250"
                              cachedName="etaglead"
                              lineageId="Package\Iterate Offices\Sequence Container\MarketLead search\SQL Sort.Outputs[Sort Output].Columns[etaglead]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\MarketLead search\Merge Join To Find Those to Insert.Outputs[Merge Join Output]"
                          isSorted="true"
                          name="Merge Join Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etag]"
                              dataType="wstr"
                              length="68"
                              lineageId="Package\Iterate Offices\Sequence Container\MarketLead search\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etag]"
                              name="etag">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Iterate Offices\Sequence Container\MarketLead search\Merge Join To Find Those to Insert.Inputs[Merge Join Left Input].Columns[etag]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[id]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\MarketLead search\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[id]"
                              name="id"
                              sortKeyPosition="1">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Iterate Offices\Sequence Container\MarketLead search\Merge Join To Find Those to Insert.Inputs[Merge Join Left Input].Columns[id]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etaglead]"
                              dataType="wstr"
                              length="250"
                              lineageId="Package\Iterate Offices\Sequence Container\MarketLead search\Merge Join To Find Those to Insert.Outputs[Merge Join Output].Columns[etaglead]"
                              name="etaglead">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="The input column associated with this output column"
                                  name="InputColumnID">#{Package\Iterate Offices\Sequence Container\MarketLead search\Merge Join To Find Those to Insert.Inputs[Merge Join Right Input].Columns[etaglead]}</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\MarketLead search\record"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="JSON Parser Transform; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="Parse incoming JSON String into columns. You can also parse and transform single JSON record into multiple rows by filtering data based on JSON Path (e.g. $.Customer.Orders[*])"
                      name="record"
                      usesDispositions="true"
                      version="2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">3</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for any numeric data types"
                          expressionType="Notify"
                          name="TreatBlankNumberAsNull">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for bool data types"
                          expressionType="Notify"
                          name="TreatBlankBoolAsNull">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for any date/time data types"
                          expressionType="Notify"
                          name="TreatBlankDateAsNull">true</property>
                        <property
                          dataType="System.String"
                          description="Sample JSON data used to parse output columns."
                          expressionType="Notify"
                          name="SampleData"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">{"result":{"system_record_state":"active","system_ctime":"1560776325","system_modtime":"1560776406","system_completed_time":"1560776432","system_assigned_time":"1560776406","is_email_lead":null,"body_snippet":"Hello there, \r\n\r\n\r\n\r\nIm currently in receipt of two offers on my own property and advised by my agent that I am likely to receive a third.\r\n\r\n\r\n\r\nI  am downsizing and moving from Kent and as a result will not require a mortgage. \r\n\r\n\r\n\r\nIf possible I woul","security_user_rights":["read","update","purge","trash"],"contact":{"name":"Mrs Lisa Deller","email_address":"lisacdeller@hugs-online.com","phone_number":"07570 091093","fax_number":null,"address_postal":null,"address":"37 Emerald Crescent\r\nSITTINGBOURNE\r\nME10 5JJ","id":"311215"},"project":null,"project_stage":null,"listing":{"id":4375,"listing_agent_1":{"id":"19724","name":"Darren Campbell","first_name":"Darren","last_name":"Campbell","email_address":"Darren.Campbell@haart.co.uk","phone_direct":"01255879450","phone_mobile":"447418346273","position":"Property Marketing Consultant","is_account_user":"1","profile_image":null},"listing_agent_2":null,"listing_category":{"id":"residential_sale","text":"Residential Sale"},"listing_primary_image":{"uri":"rexlive:\/\/1780\/listings\/4375\/images\/img_3501-img_3503_9784-9f3f-ebcb-42e1-71c5-20d4-f70f-0670_20190405084823.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1780\/listings\/4375\/images\/img_3501-img_3503_9784-9f3f-ebcb-42e1-71c5-20d4-f70f-0670_20190405084823.jpg","thumbs":{"800x600":{"uri":"rexlive:\/\/1780\/listings\/4375\/images\/img_3501-img_3503_9784-9f3f-ebcb-42e1-71c5-20d4-f70f-0670_20190405084823_800x600.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1780\/listings\/4375\/images\/img_3501-img_3503_9784-9f3f-ebcb-42e1-71c5-20d4-f70f-0670_20190405084823_800x600.jpg"},"400x300":{"uri":"rexlive:\/\/1780\/listings\/4375\/images\/img_3501-img_3503_9784-9f3f-ebcb-42e1-71c5-20d4-f70f-0670_20190405084823_400x300.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1780\/listings\/4375\/images\/img_3501-img_3503_9784-9f3f-ebcb-42e1-71c5-20d4-f70f-0670_20190405084823_400x300.jpg"},"200x150":{"uri":"rexlive:\/\/1780\/listings\/4375\/images\/img_3501-img_3503_9784-9f3f-ebcb-42e1-71c5-20d4-f70f-0670_20190405084823_200x150.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1780\/listings\/4375\/images\/img_3501-img_3503_9784-9f3f-ebcb-42e1-71c5-20d4-f70f-0670_20190405084823_200x150.jpg"},"80x60":{"uri":"rexlive:\/\/1780\/listings\/4375\/images\/img_3501-img_3503_9784-9f3f-ebcb-42e1-71c5-20d4-f70f-0670_20190405084823_80x60.jpg","url":"\/\/app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com\/app\/livestore\/accounts\/1780\/listings\/4375\/images\/img_3501-img_3503_9784-9f3f-ebcb-42e1-71c5-20d4-f70f-0670_20190405084823_80x60.jpg"}}},"location":{"id":"22","text":"haart of Harwich"},"project_stage":null,"property":{"system_search_key":"49 Clayton Road, HARWICH CO12 4TH","adr_unit_number":null,"adr_street_number":"49","adr_street_name":"Clayton Road","adr_state_or_region":null,"adr_suburb_or_town":"HARWICH","adr_postcode":"CO12 4TH","adr_country":"uk","id":"3643597"}},"property":null,"assignee":{"id":"19721","name":"Faith Hanmore-Jones","first_name":"Faith","last_name":"Hanmore-Jones","email_address":"Faith.Hanmore-Jones@haart.co.uk"},"system_completed_by_user":{"id":"19721","name":"Faith Hanmore-Jones","first_name":"Faith","last_name":"Hanmore-Jones","email_address":"Faith.Hanmore-Jones@haart.co.uk"},"system_modified_user":{"id":"19721","name":"Faith Hanmore-Jones","first_name":"Faith","last_name":"Hanmore-Jones","email_address":"Faith.Hanmore-Jones@haart.co.uk"},"system_created_user":{"id":0,"name":"System User","first_name":"System","last_name":"User","email_address":"no-reply@rexsoftware.com.au"},"system_assigned_by_user":{"id":"19721","name":"Faith Hanmore-Jones","first_name":"Faith","last_name":"Hanmore-Jones","email_address":"Faith.Hanmore-Jones@haart.co.uk"},"lead_type":{"id":"general","text":"General"},"lead_source":{"id":"26611","text":"Internet - Rightmove"},"etag":"18067-1560776406","id":"18067","note":"Hello there, \r\n\r\n\r\n\r\nIm currently in receipt of two offers on my own property and advised by my agent that I am likely to receive a third.\r\n\r\n\r\n\r\nI  am downsizing and moving from Kent and as a result will not require a mortgage. \r\n\r\n\r\n\r\nIf possible I would like to arrange a viewing of this property for Sunday 23rd June . \r\n\r\n\r\n\r\nPlease note, my property is on the market with Connells and I have spoken with their financial advisor.\r\n\r\nPropertyRef -  HRT038000100\r\nCustomer Day Phone -  07570091093\r\nCustomer Evening Phone -  \r\nCustomer Postcode -  ME10 5JJ\r\nCustomer Address -  37 Emerald Crescent\r\nPortal Source -  RightMove\r\n\r\nProperty To Sell -  True \r\nArrange Valuation -  False \r\nArrange Viewing -  True \r\nSend Property Details -  False \r\n\r\nContact Details: \r\nName: Mrs Lisa Deller\r\nEmail Address: lisacdeller@hugs-online.com\r\nMobile: 07570091093\r\n\r\nListing Details: \r\nId: 4375\r\nAddress: 49 Clayton Road"},"error":null}</property>
                        <property
                          dataType="System.Boolean"
                          description="Include all upstream parent columns into output except the one you selected to parse. By default only parsed columns from Input document is included in the output. If you wish to include all other upstream columns in the output too then check this option."
                          expressionType="Notify"
                          name="OutputAllUpstreamColumns">true</property>
                        <property
                          dataType="System.Int32"
                          description="Defines how to handle empty input. By default NULL or Empty input is skipped from parsing."
                          expressionType="Notify"
                          name="EmptyInputProcessingMode"
                          typeConverter="ZappySys.Common.Data.EmptyInputProcessingMode">0</property>
                        <property
                          dataType="System.String"
                          description="Defines how to handle empty input. By default NULL or Empty input is skipped from parsing."
                          expressionType="Notify"
                          name="TreatEmptyInputAs">{ }</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum JSON records to fetch. Set this value to 0 for all records"
                          expressionType="Notify"
                          name="MaxRows">0</property>
                        <property
                          dataType="System.String"
                          description="Enter expression here to filter data.(Example:  $.Users[*].UserName ) This will fetch User names from users records"
                          expressionType="Notify"
                          name="Filter"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">$.result</property>
                        <property
                          dataType="System.Boolean"
                          description="Use this option to include parent properties (Non array) in the output along with Filtered Rows"
                          expressionType="Notify"
                          name="IncludeParentColumns">true</property>
                        <property
                          dataType="System.Boolean"
                          description="By default child and parent information is not included in the output if children not found for specified expression. For example if you want to extract all orders from all customers nodes then you can type $.Customers[*].Orders[*]. This will fetch all orders from all customers. By default customers records without orders wont be included in the output. If you want to include those customers where orders not found then check this option (Output null information for order attributes). This behavior is similar to LEFT OUTER JOIN in SQL (Left side is parent, right side is child). This option is ***resource intensive*** so only check if you really care about this behavior."
                          expressionType="Notify"
                          name="IncludeParentColumnsWhenChildMissing">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to true if you want to output parent columns which are array. By default any parent column which is an array is not included in output. See also FilterForParentColumnsWithArrayType property if you set this property"
                          expressionType="Notify"
                          name="IncludeParentColumnsWithArrayType">false</property>
                        <property
                          dataType="System.String"
                          description="Filter expression to extract value form parent"
                          expressionType="Notify"
                          name="FilterForParentColumnsWithArrayType"></property>
                        <property
                          dataType="System.String"
                          description="Prefix for parent column name. This option is only valid if you have set IncludeParentColumns=True"
                          expressionType="Notify"
                          name="ParentColumnPrefix">P_</property>
                        <property
                          dataType="System.Boolean"
                          description="Throw error if property name specified in filter expression is missing. By default it will ignore any missing property errors."
                          expressionType="Notify"
                          name="ThrowErrorIfPropertyMissing">false</property>
                        <property
                          dataType="System.Int32"
                          description="This property how many nested levels should be scanned to fetch various properties. 0=Scan all child levels."
                          expressionType="Notify"
                          name="MaxLevelsToScan">0</property>
                        <property
                          dataType="System.String"
                          description="List comma separated property names from JSON document which you want to exclude from output. Specify parent property name to exclude all child nodes."
                          expressionType="Notify"
                          name="ExcludedProperties"></property>
                        <property
                          dataType="System.String"
                          description="Property level separator used in generated property name (separator for outer properties - Above selected filter node). Use this if default separator is producing duplicate property name which is conflicting with existing name."
                          expressionType="Notify"
                          name="LevelSeparator">_</property>
                        <property
                          dataType="System.Boolean"
                          description="Enables deep array flattening for selected filtered hierarchy. When you turn on this property it will flatten each property of each array item and expose as column (e.g. If you have Filter set as $.customers[*] and for each customer you have an array of Addresses then you may see output columns like Addresses.1.City, Addresses.1.State, Addresses.2.City, Addresses.2.State .... Addresses.N.City, Addresses.N.State). You can control how many array items you want to flatten by setting MaxArrayItemsToFlatten property."
                          expressionType="Notify"
                          name="EnableArrayFlattening">false</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum number of array items to flatten. inner array flattening. Adjust this property to control how many columns being generated. This option is ignored if you set EnableArrayFlattening=false"
                          expressionType="Notify"
                          name="MaxArrayItemsToFlatten">10</property>
                        <property
                          dataType="System.String"
                          description="Specifies how custom date formatted strings are parsed when reading JSON."
                          expressionType="Notify"
                          name="DateFormatString"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies how date formatted strings, e.g. Date(1198908717056) and 2012-03-21T05:40Z, are parsed when reading JSON."
                          expressionType="Notify"
                          name="DateParseHandling"
                          typeConverter="ZappySys.Common.DateParseHandling">1</property>
                        <property
                          dataType="System.Boolean"
                          description="Output as raw JSON document rather than parsing individual fields. This option is helpful if you have documents stored in a file and you want to pass them downstream as raw JSON string rather than parsing into columns."
                          expressionType="Notify"
                          name="OutputRawDocument">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Indent JSON output so its easy to read."
                          expressionType="Notify"
                          name="IndentOutput">true</property>
                        <property
                          dataType="System.Boolean"
                          description="When this property is true then Column is converted to Row. Pivoted names will appear under  Pivot_Name column and values will appear under Pivot_Value field."
                          expressionType="Notify"
                          name="EnablePivot">false</property>
                        <property
                          dataType="System.Int32"
                          description="Array Transformation you want to apply. Useful for case when you have 2-Dimensional arrays with rows/columns in separate arrays."
                          expressionType="Notify"
                          name="ArrayTransformationType"
                          typeConverter="ZappySys.Json.ArrayTransformType">0</property>
                        <property
                          dataType="System.String"
                          description="Filter expression to use to extract column names for array transformation."
                          expressionType="Notify"
                          name="ArrayTransColumnNameFilter"></property>
                        <property
                          dataType="System.String"
                          description="Filter expression for row values (Not applicable for simple array transformation)."
                          expressionType="Notify"
                          name="ArrayTransRowValueFilter"></property>
                        <property
                          dataType="System.Boolean"
                          description="When you have 2D array but don't have column list specified in a separate array then use this option (e.g. { arr: [[10,11],[21,22]] } )."
                          expressionType="Notify"
                          name="ArrayTransEnableCustomColumns">false</property>
                        <property
                          dataType="System.String"
                          description="When you have 2D array but don't have column list specified in a separate array then use specify column names here. Use comma separated list (e.g col1,col2,col3 ). Column name Order must match value order."
                          expressionType="Notify"
                          name="ArrayTransCustomColumns"></property>
                        <property
                          dataType="System.Int32"
                          description="Metadata scan mode controls how data type and length is determined. By default few records scanned to determine datatype/length. Changing ScanMode affects length/datatype accuracy."
                          expressionType="Notify"
                          name="MetaDataScanMode"
                          typeConverter="ZappySys.Common.Data.MetaDataScanMode">4</property>
                        <property
                          dataType="System.Int32"
                          description="Length for all string column. This option is only valid for MetaDataScanMode=Custom"
                          expressionType="Notify"
                          name="MetaDataCustomLength">1000</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.JsonParserTransform</property>
                        <property
                          dataType="System.Boolean"
                          name="EnableBigNumberHandling">false</property>
                        <property
                          dataType="System.Int32"
                          name="Encoding">0</property>
                        <property
                          dataType="System.String"
                          name="CharacterSet"></property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\MarketLead search\record.Inputs[JsonParserTransformInput]"
                          errorRowDisposition="FailComponent"
                          name="JsonParserTransformInput"
                          truncationRowDisposition="FailComponent">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\record.Inputs[JsonParserTransformInput].Columns[ResponseText]"
                              cachedDataType="nText"
                              cachedName="ResponseText"
                              lineageId="Package\Iterate Offices\Sequence Container\MarketLead search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[ResponseText]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\record.Inputs[JsonParserTransformInput].Columns[StatusCode]"
                              cachedDataType="i4"
                              cachedName="StatusCode"
                              lineageId="Package\Iterate Offices\Sequence Container\MarketLead search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[StatusCode]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\MarketLead search\record.Outputs[JsonParserTransformOutput].Columns[StatusCode]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\record.Inputs[JsonParserTransformInput].Columns[args.service_object_id]"
                              cachedDataType="wstr"
                              cachedLength="20"
                              cachedName="args.service_object_id"
                              lineageId="Package\Iterate Offices\Sequence Container\MarketLead search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[args.service_object_id]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\MarketLead search\record.Outputs[JsonParserTransformOutput].Columns[args.service_object_id]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\record.Inputs[JsonParserTransformInput].Columns[method]"
                              cachedDataType="wstr"
                              cachedLength="152"
                              cachedName="method"
                              lineageId="Package\Iterate Offices\Sequence Container\MarketLead search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[method]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\MarketLead search\record.Outputs[JsonParserTransformOutput].Columns[method]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\record.Inputs[JsonParserTransformInput].Columns[args.service_name]"
                              cachedDataType="wstr"
                              cachedLength="20"
                              cachedName="args.service_name"
                              lineageId="Package\Iterate Offices\Sequence Container\MarketLead search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[args.service_name]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\MarketLead search\record.Outputs[JsonParserTransformOutput].Columns[args.service_name]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\record.Inputs[JsonParserTransformInput].Columns[args.return_custom_fields_keyed_by]"
                              cachedDataType="wstr"
                              cachedLength="40"
                              cachedName="args.return_custom_fields_keyed_by"
                              lineageId="Package\Iterate Offices\Sequence Container\MarketLead search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[args.return_custom_fields_keyed_by]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\MarketLead search\record.Outputs[JsonParserTransformOutput].Columns[args.return_custom_fields_keyed_by]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\record.Inputs[JsonParserTransformInput].Columns[strip_response_prefixes]"
                              cachedDataType="i8"
                              cachedName="strip_response_prefixes"
                              lineageId="Package\Iterate Offices\Sequence Container\MarketLead search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[strip_response_prefixes]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\MarketLead search\record.Outputs[JsonParserTransformOutput].Columns[strip_response_prefixes]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\record.Inputs[JsonParserTransformInput].Columns[token]"
                              cachedDataType="wstr"
                              cachedLength="200"
                              cachedName="token"
                              lineageId="Package\Iterate Offices\Sequence Container\MarketLead search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput].Columns[token]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\MarketLead search\record.Outputs[JsonParserTransformOutput].Columns[token]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True" />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\MarketLead search\record.Outputs[JsonParserTransformOutput]"
                          errorOrTruncationOperation="Error"
                          errorRowDisposition="FailComponent"
                          name="JsonParserTransformOutput"
                          truncationRowDisposition="FailComponent">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\record.Outputs[JsonParserTransformOutput].Columns[token]"
                              dataType="wstr"
                              length="200"
                              lineageId="Package\Iterate Offices\Sequence Container\MarketLead search\record.Outputs[JsonParserTransformOutput].Columns[token]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\MarketLead search\record.Inputs[JsonParserTransformInput].Columns[token]"
                              name="token" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\record.Outputs[JsonParserTransformOutput].Columns[strip_response_prefixes]"
                              dataType="i8"
                              lineageId="Package\Iterate Offices\Sequence Container\MarketLead search\record.Outputs[JsonParserTransformOutput].Columns[strip_response_prefixes]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\MarketLead search\record.Inputs[JsonParserTransformInput].Columns[strip_response_prefixes]"
                              name="strip_response_prefixes" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\record.Outputs[JsonParserTransformOutput].Columns[args.return_custom_fields_keyed_by]"
                              dataType="wstr"
                              length="40"
                              lineageId="Package\Iterate Offices\Sequence Container\MarketLead search\record.Outputs[JsonParserTransformOutput].Columns[args.return_custom_fields_keyed_by]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\MarketLead search\record.Inputs[JsonParserTransformInput].Columns[args.return_custom_fields_keyed_by]"
                              name="args.return_custom_fields_keyed_by" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\record.Outputs[JsonParserTransformOutput].Columns[args.service_name]"
                              dataType="wstr"
                              length="20"
                              lineageId="Package\Iterate Offices\Sequence Container\MarketLead search\record.Outputs[JsonParserTransformOutput].Columns[args.service_name]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\MarketLead search\record.Inputs[JsonParserTransformInput].Columns[args.service_name]"
                              name="args.service_name" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\record.Outputs[JsonParserTransformOutput].Columns[method]"
                              dataType="wstr"
                              length="152"
                              lineageId="Package\Iterate Offices\Sequence Container\MarketLead search\record.Outputs[JsonParserTransformOutput].Columns[method]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\MarketLead search\record.Inputs[JsonParserTransformInput].Columns[method]"
                              name="method" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\record.Outputs[JsonParserTransformOutput].Columns[args.service_object_id]"
                              dataType="wstr"
                              length="20"
                              lineageId="Package\Iterate Offices\Sequence Container\MarketLead search\record.Outputs[JsonParserTransformOutput].Columns[args.service_object_id]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\MarketLead search\record.Inputs[JsonParserTransformInput].Columns[args.service_object_id]"
                              name="args.service_object_id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\record.Outputs[JsonParserTransformOutput].Columns[StatusCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\MarketLead search\record.Outputs[JsonParserTransformOutput].Columns[StatusCode]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\MarketLead search\record.Inputs[JsonParserTransformInput].Columns[StatusCode]"
                              name="StatusCode" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\record.Outputs[JsonParserTransformOutput].Columns[__DOCUMENT__]"
                              dataType="nText"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\MarketLead search\record.Outputs[JsonParserTransformOutput].ExternalColumns[__DOCUMENT__]"
                              lineageId="Package\Iterate Offices\Sequence Container\MarketLead search\record.Outputs[JsonParserTransformOutput].Columns[__DOCUMENT__]"
                              name="__DOCUMENT__" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\record.Outputs[JsonParserTransformOutput].Columns[P_error]"
                              dataType="nText"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\MarketLead search\record.Outputs[JsonParserTransformOutput].ExternalColumns[P_error]"
                              lineageId="Package\Iterate Offices\Sequence Container\MarketLead search\record.Outputs[JsonParserTransformOutput].Columns[P_error]"
                              name="P_error" />
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\record.Outputs[JsonParserTransformOutput].ExternalColumns[P_error]"
                              dataType="nText"
                              name="P_error" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\record.Outputs[JsonParserTransformOutput].ExternalColumns[__DOCUMENT__]"
                              dataType="nText"
                              name="__DOCUMENT__" />
                          </externalMetadataColumns>
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\MarketLead search\record.Outputs[JsonParserTransform Error Output]"
                          isErrorOut="true"
                          name="JsonParserTransform Error Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\record.Outputs[JsonParserTransform Error Output].Columns[token]"
                              dataType="wstr"
                              length="200"
                              lineageId="Package\Iterate Offices\Sequence Container\MarketLead search\record.Outputs[JsonParserTransform Error Output].Columns[token]"
                              name="token" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\record.Outputs[JsonParserTransform Error Output].Columns[strip_response_prefixes]"
                              dataType="i8"
                              lineageId="Package\Iterate Offices\Sequence Container\MarketLead search\record.Outputs[JsonParserTransform Error Output].Columns[strip_response_prefixes]"
                              name="strip_response_prefixes" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\record.Outputs[JsonParserTransform Error Output].Columns[args.return_custom_fields_keyed_by]"
                              dataType="wstr"
                              length="40"
                              lineageId="Package\Iterate Offices\Sequence Container\MarketLead search\record.Outputs[JsonParserTransform Error Output].Columns[args.return_custom_fields_keyed_by]"
                              name="args.return_custom_fields_keyed_by" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\record.Outputs[JsonParserTransform Error Output].Columns[args.service_name]"
                              dataType="wstr"
                              length="20"
                              lineageId="Package\Iterate Offices\Sequence Container\MarketLead search\record.Outputs[JsonParserTransform Error Output].Columns[args.service_name]"
                              name="args.service_name" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\record.Outputs[JsonParserTransform Error Output].Columns[method]"
                              dataType="wstr"
                              length="152"
                              lineageId="Package\Iterate Offices\Sequence Container\MarketLead search\record.Outputs[JsonParserTransform Error Output].Columns[method]"
                              name="method" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\record.Outputs[JsonParserTransform Error Output].Columns[args.service_object_id]"
                              dataType="wstr"
                              length="20"
                              lineageId="Package\Iterate Offices\Sequence Container\MarketLead search\record.Outputs[JsonParserTransform Error Output].Columns[args.service_object_id]"
                              name="args.service_object_id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\record.Outputs[JsonParserTransform Error Output].Columns[StatusCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\MarketLead search\record.Outputs[JsonParserTransform Error Output].Columns[StatusCode]"
                              name="StatusCode" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\record.Outputs[JsonParserTransform Error Output].Columns[__DOCUMENT__]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\MarketLead search\record.Outputs[JsonParserTransform Error Output].Columns[__DOCUMENT__]"
                              name="__DOCUMENT__" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\record.Outputs[JsonParserTransform Error Output].Columns[P_error]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\MarketLead search\record.Outputs[JsonParserTransform Error Output].Columns[P_error]"
                              name="P_error" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\record.Outputs[JsonParserTransform Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\MarketLead search\record.Outputs[JsonParserTransform Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\record.Outputs[JsonParserTransform Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\MarketLead search\record.Outputs[JsonParserTransform Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\record.Outputs[JsonParserTransform Error Output].Columns[ErrorColumnName]"
                              codePage="1252"
                              dataType="str"
                              length="128"
                              lineageId="Package\Iterate Offices\Sequence Container\MarketLead search\record.Outputs[JsonParserTransform Error Output].Columns[ErrorColumnName]"
                              name="ErrorColumnName" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\record.Outputs[JsonParserTransform Error Output].Columns[ErrorMessage]"
                              dataType="wstr"
                              length="1024"
                              lineageId="Package\Iterate Offices\Sequence Container\MarketLead search\record.Outputs[JsonParserTransform Error Output].Columns[ErrorMessage]"
                              name="ErrorMessage" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\record.Outputs[JsonParserTransform Error Output].Columns[ErrorRawData]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\MarketLead search\record.Outputs[JsonParserTransform Error Output].Columns[ErrorRawData]"
                              name="ErrorRawData" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\MarketLead search\Search Market Leads"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="JSON Source (REST API or File); ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="The JSON source is used to read data from JSON files, RESTful Web Service or direct JSON String."
                      name="Search Market Leads"
                      usesDispositions="true"
                      version="33">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for any numeric data types"
                          expressionType="Notify"
                          name="TreatBlankNumberAsNull">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for bool data types"
                          expressionType="Notify"
                          name="TreatBlankBoolAsNull">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for any date/time data types"
                          expressionType="Notify"
                          name="TreatBlankDateAsNull">true</property>
                        <property
                          dataType="System.Int32"
                          description="Defines how to read the JSON file or direct string"
                          expressionType="Notify"
                          name="AccessMode"
                          typeConverter="ZappySys.Common.Ssis.FileValueAccessMode">3</property>
                        <property
                          dataType="System.String"
                          description="Defines how to read the JSON file or direct string"
                          expressionType="Notify"
                          name="DirectValue"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.String"
                          description="Variable name which holds JSON string"
                          expressionType="Notify"
                          name="ValueVariable"
                          typeConverter="ZappySys.PowerPack.Converters.VariableEditor,ZappySys.PowerPack130.UI,Version=1.0.0.0,Culture=neutral,PublicKeyToken=1903265a93eae502"></property>
                        <property
                          dataType="System.String"
                          description="Variable name which holds data file path or url"
                          expressionType="Notify"
                          name="PathVariable"
                          typeConverter="ZappySys.PowerPack.Converters.VariableEditor,ZappySys.PowerPack130.UI,Version=1.0.0.0,Culture=neutral,PublicKeyToken=1903265a93eae502">User::RexAPIWebURL</property>
                        <property
                          dataType="System.String"
                          description="JSON file file path (e.g. c:\data\myfile.json) or pattern to process multiple files (e.g. c:\data\*.json)"
                          expressionType="Notify"
                          name="DirectPath"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">https://api.uk.rexsoftware.com/rex.php</property>
                        <property
                          dataType="System.Boolean"
                          description="Include files from sub folders too."
                          expressionType="Notify"
                          name="Recursive">false</property>
                        <property
                          dataType="System.String"
                          description="Set this if you want to set custom Http headers. You may use variable anywhere in the header value using syntax {{User::YourVarName}}. Syntax of Header key value pair is : &amp;lt;request&amp;gt;&amp;lt;header&amp;gt;&amp;lt;name&amp;gt;x-myheader-1&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;AAA&amp;lt;/value&amp;gt;&amp;lt;/header&amp;gt; &amp;lt;header&amp;gt;&amp;lt;name&amp;gt;x-myheader-2&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;BBB&amp;lt;/value&amp;gt;&amp;lt;/header&amp;gt;&amp;lt;/request&amp;gt;"
                          expressionType="Notify"
                          name="HttpHeaders">&lt;request&gt;&lt;header&gt;&lt;name&gt;Accept&lt;/name&gt;&lt;value&gt;*/*&lt;/value&gt;&lt;/header&gt;&lt;header&gt;&lt;name&gt;Cache-Control&lt;/name&gt;&lt;value&gt;no-cache&lt;/value&gt;&lt;/header&gt;&lt;header&gt;&lt;name&gt;X-App-Identifier&lt;/name&gt;&lt;value&gt;client:spicerhaart:{{System::PackageName}}:{{System::TaskName}}&lt;/value&gt;&lt;/header&gt;&lt;/request&gt;</property>
                        <property
                          dataType="System.String"
                          description="User defined data you wish to send along with your HTTP Request (e.g. Upload file data, Form POST data). Usually you have to set content-type of your data but if you select RequestMethod=POST then system will automatically set content-type=application/x-www-form-urlencoded."
                          expressionType="Notify"
                          name="HttpRequestData">{
"method":"MarketLeads::search",
"args":{
	"criteria": 
	[
		
	],
	"result_format":"etags",
	"limit":50000,
	"offset": &lt;%page%&gt;
	 },
"strip_response_prefixes": true,
"token": "{{User::RexToken}}"
}</property>
                        <property
                          dataType="System.String"
                          description="Http Web Request Method (e.g. POST, GET, PUT, LIST, DELETE...). Refer your API documentation if you are not sure which method you have to use."
                          expressionType="Notify"
                          name="HttpRequestMethod">POST</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies content type for data you wish to POST. If you select Default option then system default content type will be used (i.e. application/x-www-form-urlencoded). If you specify Content-Type header along with this option then header value takes precedence."
                          expressionType="Notify"
                          name="HttpRequestContentType"
                          typeConverter="ZappySys.Common.Web.HttpRequestContentType">2</property>
                        <property
                          dataType="System.Int32"
                          description="Data format coming from HTTP Response. This is useful for example when you have OData service and you want to automatically consume all pages of data using odata.netUrl. Setting JsonFormat=Odata will automatically do it for you. This setting is only applicable if JSON is coming from HTTP WebRequest."
                          expressionType="Notify"
                          name="JsonFormat"
                          typeConverter="ZappySys.Json.JsonFormat">1</property>
                        <property
                          dataType="System.Boolean"
                          description="Enable custom proxy settings (If this is not set then system default proxy will be used. To disable proxy totally uncheck this option and check DoNotUseDefaultProxy option if available)"
                          expressionType="Notify"
                          name="UseProxy">false</property>
                        <property
                          dataType="System.String"
                          description="Web URL of Proxy server (including port  if necessary). [e.g. http://myproxyserver:8080/]"
                          expressionType="Notify"
                          name="ProxyUrl"></property>
                        <property
                          dataType="System.Boolean"
                          description="Enable passing userid and password to proxy server"
                          expressionType="Notify"
                          name="UseProxyCreds">false</property>
                        <property
                          dataType="System.String"
                          description="Proxy username"
                          expressionType="Notify"
                          name="ProxyUserName"></property>
                        <property
                          dataType="System.String"
                          description="Proxy password"
                          expressionType="Notify"
                          name="ProxyPassword"></property>
                        <property
                          dataType="System.String"
                          description="If Service response support pagination using some sort of next url attribute then specify which attribute name in JSON Response string which holds next url. If no attribute found or its null then component will stop fetching next resultset. Example: $.pagingInfo.nextUrl"
                          expressionType="Notify"
                          name="NextUrlAttribute"></property>
                        <property
                          dataType="System.String"
                          description="If Service response support pagination using some sort of prev/next url attribute then specify which previous link attribute name from JSON Response string which holds previous url."
                          expressionType="Notify"
                          name="PrevUrlAttribute"></property>
                        <property
                          dataType="System.String"
                          description="Specifies value for NextUrlAttribute or StopIndicatorAttribute which indicates last page to stop pagination. If you have specified StopIndicatorAttribute then you can use Regular expression rather than static value to indicate last page. To use regular expression value of this property must start with regex= prefix. Example : regex=FALSE|N  (assuming you set StopIndicatorAttribute to something like $.hasMore)"
                          expressionType="Notify"
                          name="NextUrlStopIndicator"></property>
                        <property
                          dataType="System.String"
                          description="Attribute name or expression for attribute which can be used as stop indicator (e.g. hasmore --or-- $.pagination.hasmore). If this value is blank then NextUrlAttribute is used"
                          expressionType="Notify"
                          name="StopIndicatorAttribute"></property>
                        <property
                          dataType="System.String"
                          description="If you want to include certain text (or parameters) at the end of Next url then specify this attribute (e.g. &amp;format=json). Another common usecase of this property is to supply pagination token to next Page URL. You can also use &lt;%nextlink%&gt; or  &lt;%nextlink_encoded%&gt; placeholder (e.g. &amp;cursor=&lt;%nextlink_encoded%&gt; )"
                          expressionType="Notify"
                          name="NextUrlSuffix"></property>
                        <property
                          dataType="System.Int32"
                          description="This property indicates total number of milliseconds you want to wait before sending next request. This option allows you to adjust how many API calls can be made within certain timeframe. If your API Service has no limit then set this option to zero"
                          expressionType="Notify"
                          name="NextUrlWait">0</property>
                        <property
                          dataType="System.Boolean"
                          description="If this option is true then component will continue without exception on 404 error (Url not found). This allows you to consume data gracefully."
                          expressionType="Notify"
                          name="ContinueOnUrlNotFoundError">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Continue when any type of exception occurs during http request"
                          expressionType="Notify"
                          name="ContineOnAnyError">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Continue on error when specified substring found in response"
                          expressionType="Notify"
                          name="ContineOnErrorForMessage">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Continue on error when specified status code returned from web server"
                          expressionType="Notify"
                          name="ContineOnErrorForStatusCode">false</property>
                        <property
                          dataType="System.Boolean"
                          description="When error occurs no data is returned. Use this option to get content eventhough error occurs. When this option is checked you can't use [continue on error when specific string found in response] option"
                          expressionType="Notify"
                          name="ConsumeResponseOnError">false</property>
                        <property
                          dataType="System.Int32"
                          description="Status code to match when error occurs and ContineOnErrorForStatusCode option is true. If Response status code matches to this code then task continues to run"
                          expressionType="Notify"
                          name="ErrorStatusCodeToMatch">404</property>
                        <property
                          dataType="System.String"
                          description="Error substring to match when error occurs and ContineOnErrorForMessage option is true. If Response status code matches to this code then task continues to run"
                          expressionType="Notify"
                          name="ErrorSubstringToMatch"></property>
                        <property
                          dataType="System.String"
                          description="Cookie Container can be used to maintain state between multiple web requests. Example: You can login to site like wordpress and then extract any private page content by simply passing authentication cookies using this variable."
                          expressionType="Notify"
                          name="CookieContainerVariable"></property>
                        <property
                          dataType="System.Int32"
                          description="Http request Timeout in seconds. Set this to 0 if you want to use system default value (i.e. 100 seconds)"
                          expressionType="Notify"
                          name="RequestTimeout">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies which security protocol is supported for HTTPS communication. Using this option you can enable legacy protocol or enforce to use latest version of security protocol (Note: TLS 1.2 is only supported in SSIS 2014 or Higher)."
                          expressionType="Notify"
                          name="SecurityProtocol"
                          typeConverter="ZappySys.PowerPack.Common.HttpsSecurityProtocolType">0</property>
                        <property
                          dataType="System.Boolean"
                          description="Enable support for gzip or deflate compression. When you check this option compressed response automatically de-compressed saving bandwidth. This option is only valid if web server supports compressed response stream. Check your API documentation for more information."
                          expressionType="Notify"
                          name="EnableCompressionSupport">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Ignore SSL certificate related errors. Example: if you getting SSL/TLS errors because of certificate expired or certificate is not from trusted authority or certificate is self-signed. By checking this option you will not get SSL/TLS error."
                          expressionType="Notify"
                          name="IgnoreCertificateErrors">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Allow unsecure ciphers/suites and curves for SSLS/TLS communication. Use this option to communicate with web servers which needs legacy / unsecured ciphers support. This option is only trigged when you change default SSL/TLS Version on advanced settings tab."
                          expressionType="Notify"
                          name="AllowUnsecureSuite">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Use connection to pass credentials for authentication (e.g. Use UserID/Password or Use OAuth Protocol for token based approach)"
                          expressionType="Notify"
                          name="UseConnection">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specified how you want to loop through multiple pages returned by REST API."
                          expressionType="Notify"
                          name="PagingMode"
                          typeConverter="ZappySys.Common.RestApiPagingMode">3</property>
                        <property
                          dataType="System.Boolean"
                          description="If you wish to pass extracted pagination token or current page number in the body of next request then set this option to true. You can use [$pagetoken$] and [$pagetoken$] placeholders anywhere in the Body where you wish to insert extracted Page token. You must set encoded token you can use &lt;%nextlink_encoded%&gt; inside SuffixForNextUrl Property. If you dont use SuffixForNextUrl then raw nextLink or Token will be inserted inside the body. If you dont specify [$pagetoken$] placeholder in the body then NextPage Token will be appended at the end. NextPage Token is extracted by filter expression specified using property NextUrlSuffix"
                          expressionType="Notify"
                          name="EnablePageTokenForBody">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this to true if you wish to specify different URL, Header, Body or Filter for first page and next page (i.e. Paginated response). Some APIs like Amazon MWS, NetSuite, Zuora) you may need to set this to true."
                          expressionType="Notify"
                          name="HasDifferentNextPageInfo">false</property>
                        <property
                          dataType="System.String"
                          description="When HasDifferentNextPageInfo=true you can set this property to indicate first page and next page. You can specify different URL, Header, Body or Filter for first page and next page (i.e. Paginated response). Use [$tag$] as placeholder anywhere in the URL, Header, Body or Filter and at runtime system will replace it with correct value (first page or next page value). Syntax to specify placeholder for first page vs next page is like a connectionstring url=FirstPageValue|NextPageValue;header=FirstPageValue|NextPageValue;body=FirstPageValue|NextPageValue;filter=FirstPageValue|NextPageValue; You can use one or more key/value pairs to make things dynamic (e.g. url, header, body or filter)  .For example if you have pagination in your API and First URL is http://abc.com/api/items/get and to get more records you have to call http://abc.com/api/items/getNext then you can use [$tag$] as placeholder in the URL http://abc.com/api/items/[$tag$] and specify this property with first page tag and next page tag as url=get|getNext  (Tags are separated using vertical bar). "
                          expressionType="Notify"
                          name="PagePlaceholders"></property>
                        <property
                          dataType="System.String"
                          description="Use this property to set request body fragment for first page. HasDifferentNextPageInfo must be set to true to use this property."
                          expressionType="Notify"
                          name="FirstPageBodyPart"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.String"
                          description="Use this property to set request body fragment for any request after first request. HasDifferentNextPageInfo must be set to true to use this property."
                          expressionType="Notify"
                          name="NextPageBodyPart"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.String"
                          description="Expression to extract Maximum pages to loop through. Some APIs don't stop pagination and keep returning last page data when you try to read data after last page. Specify expression (e.g. $.page_count ) to read total pages to loop through using this property."
                          expressionType="Notify"
                          name="PagingMaxPagesExpr">$.result.total/50000</property>
                        <property
                          dataType="System.String"
                          description="e.g. Type page_num if URL looks like this =&gt; http://abc.com/?page_num=1&amp;sort=true  (page number via query string)&#xA;--or-- Type &lt;%page%&gt; if page number is inside URL path like this =&gt; http://abc.com/1/?sort=true  (e.g. replace page number in url with placeholder http://abc.com/&lt;%page%&gt;/?sort=true)&#xA;Page number will be incremented by one for next URL until last page is reached or [Max Page Number] is reached"
                          expressionType="Notify"
                          name="PageNumberAttributeNameInUrl">&lt;%page%&gt;</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum page number until which auto increment is allowed. Type zero for no limit. Next URL contains next page number (increment by one) until last page is detected or [Max Page Number] limit is reached."
                          expressionType="Notify"
                          name="MaxPageNumber">0</property>
                        <property
                          dataType="System.String"
                          description="Variable name which will hold starting page number. This is ignored if you useing parameter name from query string to indicate page number."
                          expressionType="Notify"
                          name="StartPageNumberVariable">User::UpsertedCount</property>
                        <property
                          dataType="System.Int32"
                          description="Page counter increment. By default next page is incremented by one if this value is zero. You can also enter negative number if you want to decrease page counter."
                          expressionType="Notify"
                          name="PageNumberIncrement">50000</property>
                        <property
                          dataType="System.Int32"
                          description="Specified how you want detect last page."
                          expressionType="Notify"
                          name="PagingEndStrategy"
                          typeConverter="ZappySys.Common.UrlPagingEndDetectionStrategy">3</property>
                        <property
                          dataType="System.Boolean"
                          description="Condition result to compare to detect last page. Set this property to True if you want detect last page if condition is true else set this to False."
                          expressionType="Notify"
                          name="LastPageWhenConditionEqualsTo">true</property>
                        <property
                          dataType="System.Int32"
                          description="Minimum bytes expected from response."
                          expressionType="Notify"
                          name="ResponseMinBytes">0</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum bytes from response."
                          expressionType="Notify"
                          name="ResponseMaxBytes">3</property>
                        <property
                          dataType="System.String"
                          description="Expected error message sub string from response."
                          expressionType="Notify"
                          name="ResponseErrorString">not found</property>
                        <property
                          dataType="System.Int32"
                          description="Expected status code from response when page number you trying to access not found."
                          expressionType="Notify"
                          name="ResponseStatusCode">404</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum JSON records to fetch. Set this value to 0 for all records"
                          expressionType="Notify"
                          name="MaxRows">0</property>
                        <property
                          dataType="System.String"
                          description="Enter expression here to filter data.(Example:  $.Users[*].UserName ) This will fetch User names from users records"
                          expressionType="Notify"
                          name="Filter"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">$.result.rows[*]</property>
                        <property
                          dataType="System.Boolean"
                          description="Use this option to include parent properties (Non array) in the output along with Filtered Rows"
                          expressionType="Notify"
                          name="IncludeParentColumns">false</property>
                        <property
                          dataType="System.Boolean"
                          description="By default child and parent information is not included in the output if children not found for specified expression. For example if you want to extract all orders from all customers nodes then you can type $.Customers[*].Orders[*]. This will fetch all orders from all customers. By default customers records without orders wont be included in the output. If you want to include those customers where orders not found then check this option (Output null information for order attributes). This behavior is similar to LEFT OUTER JOIN in SQL (Left side is parent, right side is child). This option is ***resource intensive*** so only check if you really care about this behavior."
                          expressionType="Notify"
                          name="IncludeParentColumnsWhenChildMissing">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to true if you want to output parent columns which are array. By default any parent column which is an array is not included in output. See also FilterForParentColumnsWithArrayType property if you set this property"
                          expressionType="Notify"
                          name="IncludeParentColumnsWithArrayType">false</property>
                        <property
                          dataType="System.String"
                          description="Filter expression to extract value form parent"
                          expressionType="Notify"
                          name="FilterForParentColumnsWithArrayType"></property>
                        <property
                          dataType="System.String"
                          description="Prefix for parent column name. This option is only valid if you have set IncludeParentColumns=True"
                          expressionType="Notify"
                          name="ParentColumnPrefix">P_</property>
                        <property
                          dataType="System.Boolean"
                          description="Throw error if property name specified in filter expression is missing. By default it will ignore any missing property errors."
                          expressionType="Notify"
                          name="ThrowErrorIfPropertyMissing">false</property>
                        <property
                          dataType="System.Int32"
                          description="This property how many nested levels should be scanned to fetch various properties. 0=Scan all child levels."
                          expressionType="Notify"
                          name="MaxLevelsToScan">0</property>
                        <property
                          dataType="System.String"
                          description="List comma separated property names from JSON document which you want to exclude from output. Specify parent property name to exclude all child nodes."
                          expressionType="Notify"
                          name="ExcludedProperties"></property>
                        <property
                          dataType="System.String"
                          description="Property level separator used in generated property name (separator for outer properties - Above selected filter node). Use this if default separator is producing duplicate property name which is conflicting with existing name."
                          expressionType="Notify"
                          name="LevelSeparator">_</property>
                        <property
                          dataType="System.Boolean"
                          description="Enables deep array flattening for selected filtered hierarchy. When you turn on this property it will flatten each property of each array item and expose as column (e.g. If you have Filter set as $.customers[*] and for each customer you have an array of Addresses then you may see output columns like Addresses.1.City, Addresses.1.State, Addresses.2.City, Addresses.2.State .... Addresses.N.City, Addresses.N.State). You can control how many array items you want to flatten by setting MaxArrayItemsToFlatten property."
                          expressionType="Notify"
                          name="EnableArrayFlattening">false</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum number of array items to flatten. inner array flattening. Adjust this property to control how many columns being generated. This option is ignored if you set EnableArrayFlattening=false"
                          expressionType="Notify"
                          name="MaxArrayItemsToFlatten">10</property>
                        <property
                          dataType="System.Int32"
                          description="Compression format for source file (e.g. gzip, zip)"
                          expressionType="Notify"
                          name="FileCompressionType"
                          typeConverter="ZappySys.Common.FileCompressionType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Array Transformation you want to apply. Useful for case when you have 2-Dimensional arrays with rows/columns in separate arrays."
                          expressionType="Notify"
                          name="ArrayTransformationType"
                          typeConverter="ZappySys.Json.ArrayTransformType">0</property>
                        <property
                          dataType="System.String"
                          description="Filter expression to use to extract column names for array transformation."
                          expressionType="Notify"
                          name="ArrayTransColumnNameFilter">$.result.rows[*]</property>
                        <property
                          dataType="System.String"
                          description="Filter expression for row values (Not applicable for simple array transformation)."
                          expressionType="Notify"
                          name="ArrayTransRowValueFilter">$.result.rows[*]</property>
                        <property
                          dataType="System.Boolean"
                          description="When you have 2D array but don't have column list specified in a separate array then use this option (e.g. { arr: [[10,11],[21,22]] } )."
                          expressionType="Notify"
                          name="ArrayTransEnableCustomColumns">true</property>
                        <property
                          dataType="System.String"
                          description="When you have 2D array but don't have column list specified in a separate array then use specify column names here. Use comma separated list (e.g col1,col2,col3 ). Column name Order must match value order."
                          expressionType="Notify"
                          name="ArrayTransCustomColumns">MetricID</property>
                        <property
                          dataType="System.String"
                          description="Specifies how custom date formatted strings are parsed when reading JSON."
                          expressionType="Notify"
                          name="DateFormatString"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies how date formatted strings, e.g. Date(1198908717056) and 2012-03-21T05:40Z, are parsed when reading JSON."
                          expressionType="Notify"
                          name="DateParseHandling"
                          typeConverter="ZappySys.Common.DateParseHandling">1</property>
                        <property
                          dataType="System.Boolean"
                          description="Output as raw JSON document rather than parsing individual fields. This option is helpful if you have documents stored in a file and you want to pass them downstream as raw JSON string rather than parsing into columns."
                          expressionType="Notify"
                          name="OutputRawDocument">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indent JSON output so its easy to read."
                          expressionType="Notify"
                          name="IndentOutput">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to true if you want to output FilePath. This option is ignored when you consume DirectValue or data from Url rather than local files. Output column name will be __FilePath"
                          expressionType="Notify"
                          name="OutputFilePath">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to true if you want to output FileName. This option is ignored when you consume DirectValue or data from Url rather than local files. Output column name will be __FileName"
                          expressionType="Notify"
                          name="OutputFileName">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to true if you want to move processed file to archive folder."
                          expressionType="Notify"
                          name="EnableArchiveFile">false</property>
                        <property
                          dataType="System.String"
                          description="Folder path where you want to move processed file."
                          expressionType="Notify"
                          name="ArchiveFolderPath"></property>
                        <property
                          dataType="System.Boolean"
                          description="Folder path where you want to move processed file."
                          expressionType="Notify"
                          name="OverwriteFileInArchiveFolder">false</property>
                        <property
                          dataType="System.String"
                          description="File naming convention for archived file. By default it will same name as original source file processed. But you can control naming format using {%name%} and {%ext%} placeholders. e.g. {%name%}_processed{%ext%} or {%name%}{%ext%}.{{System::ContainerStartTime,yyyyMMdd_HHmmss_fff}}"
                          expressionType="Notify"
                          name="ArchiveFileNamingConvention"></property>
                        <property
                          dataType="System.Boolean"
                          description="When this property is true then Column is converted to Row. Pivoted names will appear under  Pivot_Name column and values will appear under Pivot_Value field."
                          expressionType="Notify"
                          name="EnablePivot">false</property>
                        <property
                          dataType="System.Int32"
                          description="Metadata scan mode controls how data type and length is determined. By default few records scanned to determine datatype/length. Changing ScanMode affects length/datatype accuracy."
                          expressionType="Notify"
                          name="MetaDataScanMode"
                          typeConverter="ZappySys.Common.Data.MetaDataScanMode">4</property>
                        <property
                          dataType="System.Int32"
                          description="Length for all string column. This option is only valid for MetaDataScanMode=Custom"
                          expressionType="Notify"
                          name="MetaDataCustomLength">1000</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.JsonSource</property>
                        <property
                          dataType="System.Int32"
                          description="Encoding of source file"
                          expressionType="Notify"
                          name="Encoding"
                          typeConverter="ZappySys.Common.EncodingType">0</property>
                        <property
                          dataType="System.String"
                          description="Character set for text (e.g. utf-8 )"
                          expressionType="Notify"
                          name="CharacterSet"></property>
                        <property
                          dataType="System.Boolean"
                          description="By default process stops with error if specified local file is not found. Set this property to true if you wish to continue rather than throwing file not found error."
                          expressionType="Notify"
                          name="ContinueOnFileNotFoundError">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Check this option if you want to upload file(s) (i.e. POST RAW file data) or send data using Multi-Part encoding method (i.e. Content-Type: multipart/form-data). Multi-Part request allows you to mix key/value and upload files in same request. On the other hand raw upload allows only single file upload (without any key/value) &#xA;&#xA;==== Raw Upload (Content-Type: application/octet-stream) =====   &#xA;To upload single file in raw mode check this option and specify full file path starting with @ sign in the Body (e.g.  @c:\data\myfile.zip ) &#xA;&#xA;==== Form-Data / Multipart Upload (Content-Type: multipart/form-data) =====   &#xA;To treat your Request data as multi part fields you must specify key/value pairs separated by new lines into RequestData field (i.e. Body). Each key value pair is entered on new-line and key/value are separated using equal sign (=). Preceding and trailing spaces are ignored also blank lines are ignored. &#xA;If field value has some any special character(s) then use escape sequence (e.g. For NewLine: \r\n, For Tab: \t, For at (@): \@). When value of any field starts with at sign (@) its automatically treated as File you want to upload. By default file content type is determined based on extension however you can supply content type manually for any field using this way [ fieldname.Content-Type=some content type ]. In below example we have supplied Content-Type for file2 and SomeField1, all other fields are using default content-type.&#xA;See below Example of uploading multiple files along with additional fields.&#xA;&#xA;file1=@c:\data\Myfile1.txt&#xA;file2=@c:\data\Myfile2.json&#xA;file2.Content-Type=application/json&#xA;SomeField1=aaaaaaa&#xA;SomeField1.Content-Type=text/plain&#xA;SomeField2=12345&#xA;SomeFieldWithNewLineAndTab=This is line1\r\nThis is line2\r\nThis is \ttab \ttab \ttab&#xA;SomeFieldStartingWithAtSign=\@MyTwitterHandle&#xA;"
                          expressionType="Notify"
                          name="IsMultiPartUpload">false</property>
                        <property
                          dataType="System.String"
                          description="Expression to extract Maximum records to loop through. Some APIs don't stop pagination and keep returning last page data when you try to read data after last page. Specify expression (e.g. $.total_rows ) to read total pages to loop through using this property. This setting is ignored if you set PagingMaxPagesExpr."
                          expressionType="Notify"
                          name="PagingMaxRowsExpr"></property>
                        <property
                          dataType="System.String"
                          description="When you enable PagingMaxRowsExpr (end pagination based on MaxRowCount) then you need to count records coming in each response. This expression extract all rows found under specified expression (e.g. $.orders[*] if all records found under orders node)."
                          expressionType="Notify"
                          name="PagingMaxRowsDataPathExpr"></property>
                        <property
                          dataType="System.Boolean"
                          description="When this option is checked, system allows to parse large number (Higher than Int64) in JSON document (i.e. { id: 76000009353950433247780 } ). If you do not turn on this option then it may throw error if large number is encountered. This option is SLOW because it has to perform additional checks in order to avoid Large number overflow error so do not turn on unless you getting Large number error."
                          expressionType="Notify"
                          name="EnableBigNumberHandling">false</property>
                      </properties>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\MarketLead search\Search Market Leads.Outputs[JsonSourceOutput]"
                          errorOrTruncationOperation="Error"
                          errorRowDisposition="FailComponent"
                          name="JsonSourceOutput"
                          truncationRowDisposition="FailComponent">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\Search Market Leads.Outputs[JsonSourceOutput].Columns[etag]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\MarketLead search\Search Market Leads.Outputs[JsonSourceOutput].ExternalColumns[etag]"
                              length="68"
                              lineageId="Package\Iterate Offices\Sequence Container\MarketLead search\Search Market Leads.Outputs[JsonSourceOutput].Columns[etag]"
                              name="etag" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\Search Market Leads.Outputs[JsonSourceOutput].Columns[id]"
                              dataType="i4"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\MarketLead search\Search Market Leads.Outputs[JsonSourceOutput].ExternalColumns[id]"
                              lineageId="Package\Iterate Offices\Sequence Container\MarketLead search\Search Market Leads.Outputs[JsonSourceOutput].Columns[id]"
                              name="id" />
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\Search Market Leads.Outputs[JsonSourceOutput].ExternalColumns[system_record_state]"
                              dataType="wstr"
                              length="24"
                              name="system_record_state" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\Search Market Leads.Outputs[JsonSourceOutput].ExternalColumns[system_ctime]"
                              dataType="wstr"
                              length="40"
                              name="system_ctime" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\Search Market Leads.Outputs[JsonSourceOutput].ExternalColumns[system_modtime]"
                              dataType="wstr"
                              length="40"
                              name="system_modtime" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\Search Market Leads.Outputs[JsonSourceOutput].ExternalColumns[name]"
                              dataType="wstr"
                              length="144"
                              name="name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\Search Market Leads.Outputs[JsonSourceOutput].ExternalColumns[email_address]"
                              dataType="wstr"
                              length="180"
                              name="email_address" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\Search Market Leads.Outputs[JsonSourceOutput].ExternalColumns[phone_number]"
                              dataType="wstr"
                              length="80"
                              name="phone_number" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\Search Market Leads.Outputs[JsonSourceOutput].ExternalColumns[fax_number]"
                              dataType="wstr"
                              length="1020"
                              name="fax_number" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\Search Market Leads.Outputs[JsonSourceOutput].ExternalColumns[is_dnd]"
                              dataType="wstr"
                              length="80"
                              name="is_dnd" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\Search Market Leads.Outputs[JsonSourceOutput].ExternalColumns[type]"
                              dataType="wstr"
                              length="28"
                              name="type" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\Search Market Leads.Outputs[JsonSourceOutput].ExternalColumns[last_contacted_date]"
                              dataType="wstr"
                              length="80"
                              name="last_contacted_date" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\Search Market Leads.Outputs[JsonSourceOutput].ExternalColumns[name_last]"
                              dataType="wstr"
                              length="1020"
                              name="name_last" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\Search Market Leads.Outputs[JsonSourceOutput].ExternalColumns[address_postal]"
                              dataType="wstr"
                              length="220"
                              name="address_postal" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\Search Market Leads.Outputs[JsonSourceOutput].ExternalColumns[address]"
                              dataType="wstr"
                              length="384"
                              name="address" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\Search Market Leads.Outputs[JsonSourceOutput].ExternalColumns[interest_level]"
                              dataType="wstr"
                              length="1020"
                              name="interest_level" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\Search Market Leads.Outputs[JsonSourceOutput].ExternalColumns[marketing_birthday]"
                              dataType="wstr"
                              length="1020"
                              name="marketing_birthday" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\Search Market Leads.Outputs[JsonSourceOutput].ExternalColumns[marketing_enquiry_source]"
                              dataType="wstr"
                              length="1020"
                              name="marketing_enquiry_source" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\Search Market Leads.Outputs[JsonSourceOutput].ExternalColumns[marketing_gender]"
                              dataType="wstr"
                              length="1020"
                              name="marketing_gender" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\Search Market Leads.Outputs[JsonSourceOutput].ExternalColumns[marketing_postcode]"
                              dataType="wstr"
                              length="80"
                              name="marketing_postcode" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\Search Market Leads.Outputs[JsonSourceOutput].ExternalColumns[name_legal]"
                              dataType="wstr"
                              length="1020"
                              name="name_legal" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\Search Market Leads.Outputs[JsonSourceOutput].ExternalColumns[name_salutation]"
                              dataType="wstr"
                              length="1020"
                              name="name_salutation" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\Search Market Leads.Outputs[JsonSourceOutput].ExternalColumns[name_addressee]"
                              dataType="wstr"
                              length="1020"
                              name="name_addressee" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\Search Market Leads.Outputs[JsonSourceOutput].ExternalColumns[system_owner_user.id]"
                              dataType="wstr"
                              length="20"
                              name="system_owner_user.id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\Search Market Leads.Outputs[JsonSourceOutput].ExternalColumns[system_owner_user._name]"
                              dataType="wstr"
                              length="36"
                              name="system_owner_user._name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\Search Market Leads.Outputs[JsonSourceOutput].ExternalColumns[system_owner_user._first_name]"
                              dataType="wstr"
                              length="20"
                              name="system_owner_user._first_name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\Search Market Leads.Outputs[JsonSourceOutput].ExternalColumns[system_owner_user._last_name]"
                              dataType="wstr"
                              length="12"
                              name="system_owner_user._last_name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\Search Market Leads.Outputs[JsonSourceOutput].ExternalColumns[system_owner_user._email_address]"
                              dataType="wstr"
                              length="92"
                              name="system_owner_user._email_address" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\Search Market Leads.Outputs[JsonSourceOutput].ExternalColumns[system_modified_user.id]"
                              dataType="wstr"
                              length="20"
                              name="system_modified_user.id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\Search Market Leads.Outputs[JsonSourceOutput].ExternalColumns[system_modified_user._name]"
                              dataType="wstr"
                              length="48"
                              name="system_modified_user._name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\Search Market Leads.Outputs[JsonSourceOutput].ExternalColumns[system_modified_user._first_name]"
                              dataType="wstr"
                              length="24"
                              name="system_modified_user._first_name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\Search Market Leads.Outputs[JsonSourceOutput].ExternalColumns[system_modified_user._last_name]"
                              dataType="wstr"
                              length="24"
                              name="system_modified_user._last_name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\Search Market Leads.Outputs[JsonSourceOutput].ExternalColumns[system_modified_user._email_address]"
                              dataType="wstr"
                              length="128"
                              name="system_modified_user._email_address" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\Search Market Leads.Outputs[JsonSourceOutput].ExternalColumns[system_created_user.id]"
                              dataType="wstr"
                              length="20"
                              name="system_created_user.id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\Search Market Leads.Outputs[JsonSourceOutput].ExternalColumns[system_created_user._name]"
                              dataType="wstr"
                              length="36"
                              name="system_created_user._name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\Search Market Leads.Outputs[JsonSourceOutput].ExternalColumns[system_created_user._first_name]"
                              dataType="wstr"
                              length="20"
                              name="system_created_user._first_name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\Search Market Leads.Outputs[JsonSourceOutput].ExternalColumns[system_created_user._last_name]"
                              dataType="wstr"
                              length="12"
                              name="system_created_user._last_name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\Search Market Leads.Outputs[JsonSourceOutput].ExternalColumns[system_created_user._email_address]"
                              dataType="wstr"
                              length="92"
                              name="system_created_user._email_address" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\Search Market Leads.Outputs[JsonSourceOutput].ExternalColumns[contact_image]"
                              dataType="wstr"
                              length="1020"
                              name="contact_image" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\Search Market Leads.Outputs[JsonSourceOutput].ExternalColumns[marketing_enquiry_method]"
                              dataType="wstr"
                              length="1020"
                              name="marketing_enquiry_method" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\Search Market Leads.Outputs[JsonSourceOutput].ExternalColumns[_security_user_rights]"
                              dataType="wstr"
                              length="260"
                              name="_security_user_rights" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\Search Market Leads.Outputs[JsonSourceOutput].ExternalColumns[etag]"
                              dataType="wstr"
                              length="68"
                              name="etag" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\Search Market Leads.Outputs[JsonSourceOutput].ExternalColumns[id]"
                              dataType="wstr"
                              length="24"
                              name="id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\Search Market Leads.Outputs[JsonSourceOutput].ExternalColumns[__FileName]"
                              dataType="wstr"
                              length="600"
                              name="__FileName" />
                          </externalMetadataColumns>
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\MarketLead search\Search Market Leads.Outputs[JsonSource Error Output]"
                          isErrorOut="true"
                          name="JsonSource Error Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\Search Market Leads.Outputs[JsonSource Error Output].Columns[etag]"
                              dataType="wstr"
                              length="68"
                              lineageId="Package\Iterate Offices\Sequence Container\MarketLead search\Search Market Leads.Outputs[JsonSource Error Output].Columns[etag]"
                              name="etag" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\Search Market Leads.Outputs[JsonSource Error Output].Columns[id]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\MarketLead search\Search Market Leads.Outputs[JsonSource Error Output].Columns[id]"
                              name="id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\Search Market Leads.Outputs[JsonSource Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\MarketLead search\Search Market Leads.Outputs[JsonSource Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\Search Market Leads.Outputs[JsonSource Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\MarketLead search\Search Market Leads.Outputs[JsonSource Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\Search Market Leads.Outputs[JsonSource Error Output].Columns[ErrorColumnName]"
                              codePage="1252"
                              dataType="str"
                              length="128"
                              lineageId="Package\Iterate Offices\Sequence Container\MarketLead search\Search Market Leads.Outputs[JsonSource Error Output].Columns[ErrorColumnName]"
                              name="ErrorColumnName" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\Search Market Leads.Outputs[JsonSource Error Output].Columns[ErrorMessage]"
                              dataType="wstr"
                              length="1024"
                              lineageId="Package\Iterate Offices\Sequence Container\MarketLead search\Search Market Leads.Outputs[JsonSource Error Output].Columns[ErrorMessage]"
                              name="ErrorMessage" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\MarketLead search\SQL Sort"
                      componentClassID="Microsoft.Sort"
                      contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
                      name="SQL Sort"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                          name="EliminateDuplicates">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the maximum number of threads to use for sorting."
                          expressionType="Notify"
                          name="MaximumThreads">-1</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\MarketLead search\SQL Sort.Inputs[Sort Input]"
                          name="Sort Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\SQL Sort.Inputs[Sort Input].Columns[Id]"
                              cachedDataType="i4"
                              cachedName="Id"
                              lineageId="Package\Iterate Offices\Sequence Container\MarketLead search\Existing Market Leads from SQL.Outputs[OLE DB Source Output].Columns[Id]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">1</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\SQL Sort.Inputs[Sort Input].Columns[AccountId]"
                              cachedDataType="i2"
                              cachedName="AccountId"
                              lineageId="Package\Iterate Offices\Sequence Container\MarketLead search\Existing Market Leads from SQL.Outputs[OLE DB Source Output].Columns[AccountId]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\SQL Sort.Inputs[Sort Input].Columns[etaglead]"
                              cachedDataType="wstr"
                              cachedLength="250"
                              cachedName="etaglead"
                              lineageId="Package\Iterate Offices\Sequence Container\MarketLead search\Existing Market Leads from SQL.Outputs[OLE DB Source Output].Columns[etaglead]">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the comparison options for character data."
                                  name="NewComparisonFlags">0</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the sort order of the column."
                                  name="NewSortKeyPosition">0</property>
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\MarketLead search\SQL Sort.Outputs[Sort Output]"
                          isSorted="true"
                          name="Sort Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\SQL Sort.Outputs[Sort Output].Columns[Id]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\MarketLead search\SQL Sort.Outputs[Sort Output].Columns[Id]"
                              name="Id"
                              sortKeyPosition="1">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Iterate Offices\Sequence Container\MarketLead search\Existing Market Leads from SQL.Outputs[OLE DB Source Output].Columns[Id]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\SQL Sort.Outputs[Sort Output].Columns[AccountId]"
                              dataType="i2"
                              lineageId="Package\Iterate Offices\Sequence Container\MarketLead search\SQL Sort.Outputs[Sort Output].Columns[AccountId]"
                              name="AccountId">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Iterate Offices\Sequence Container\MarketLead search\Existing Market Leads from SQL.Outputs[OLE DB Source Output].Columns[AccountId]}</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\SQL Sort.Outputs[Sort Output].Columns[etaglead]"
                              dataType="wstr"
                              length="250"
                              lineageId="Package\Iterate Offices\Sequence Container\MarketLead search\SQL Sort.Outputs[Sort Output].Columns[etaglead]"
                              name="etaglead">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Specifies the lineage identifier of the input column that is associated with this output column."
                                  name="SortColumnId">#{Package\Iterate Offices\Sequence Container\MarketLead search\Existing Market Leads from SQL.Outputs[OLE DB Source Output].Columns[etaglead]}</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\MarketLead search\Trash Destination"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Trash Destination; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="The trash destination is used to create dummy destination which ends data path without any processing."
                      name="Trash Destination"
                      version="2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.String"
                          description="File path where you want to save data"
                          expressionType="Notify"
                          name="FilePath"></property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates if you want to save input data to comma separated text file"
                          expressionType="Notify"
                          name="SaveDataToFile">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Append data to file"
                          expressionType="Notify"
                          name="Append">false</property>
                        <property
                          dataType="System.String"
                          description="RowSeparator"
                          expressionType="Notify"
                          name="RowSeparator">{NEWLINE}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether you want to overwrite target file if exists"
                          expressionType="Notify"
                          name="OverwriteFileIfExists">true</property>
                        <property
                          dataType="System.String"
                          description="ColumnSeparator"
                          expressionType="Notify"
                          name="ColumnSeparator">,</property>
                        <property
                          dataType="System.Boolean"
                          description="SupportUnicode"
                          expressionType="Notify"
                          name="SupportUnicode">true</property>
                        <property
                          dataType="System.Boolean"
                          description="ColumnNamesInFirstRow"
                          expressionType="Notify"
                          name="ColumnNamesInFirstRow">true</property>
                        <property
                          dataType="System.Boolean"
                          description="QuoteDataIfNeeded"
                          expressionType="Notify"
                          name="QuoteDataIfNeeded">true</property>
                        <property
                          dataType="System.String"
                          description="Date time format string for any column with DT_DBDATETIME, DT_DBDATETIME2 or DB_DATE format"
                          expressionType="Notify"
                          name="DateTimeFormat">yyyy-MM-dd HH:mm:ss</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.TrashDestination</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\MarketLead search\Trash Destination.Inputs[TrashDestinationInput]"
                          hasSideEffects="true"
                          name="TrashDestinationInput">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\MarketLead search\Trash Destination 1"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Trash Destination; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="The trash destination is used to create dummy destination which ends data path without any processing."
                      name="Trash Destination 1"
                      version="2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.String"
                          description="File path where you want to save data"
                          expressionType="Notify"
                          name="FilePath"></property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates if you want to save input data to comma separated text file"
                          expressionType="Notify"
                          name="SaveDataToFile">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Append data to file"
                          expressionType="Notify"
                          name="Append">false</property>
                        <property
                          dataType="System.String"
                          description="RowSeparator"
                          expressionType="Notify"
                          name="RowSeparator">{NEWLINE}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether you want to overwrite target file if exists"
                          expressionType="Notify"
                          name="OverwriteFileIfExists">true</property>
                        <property
                          dataType="System.String"
                          description="ColumnSeparator"
                          expressionType="Notify"
                          name="ColumnSeparator">,</property>
                        <property
                          dataType="System.Boolean"
                          description="SupportUnicode"
                          expressionType="Notify"
                          name="SupportUnicode">true</property>
                        <property
                          dataType="System.Boolean"
                          description="ColumnNamesInFirstRow"
                          expressionType="Notify"
                          name="ColumnNamesInFirstRow">true</property>
                        <property
                          dataType="System.Boolean"
                          description="QuoteDataIfNeeded"
                          expressionType="Notify"
                          name="QuoteDataIfNeeded">true</property>
                        <property
                          dataType="System.String"
                          description="Date time format string for any column with DT_DBDATETIME, DT_DBDATETIME2 or DB_DATE format"
                          expressionType="Notify"
                          name="DateTimeFormat">yyyy-MM-dd HH:mm:ss</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.TrashDestination</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\MarketLead search\Trash Destination 1.Inputs[TrashDestinationInput]"
                          hasSideEffects="true"
                          name="TrashDestinationInput">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\MarketLead search\Upsert Market Leads"
                      componentClassID="Microsoft.OLEDBCommand"
                      contactInfo="OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
                      description="Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time."
                      name="Upsert Market Leads"
                      usesDispositions="true"
                      version="2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">0</property>
                        <property
                          dataType="System.String"
                          description="The SQL command to be executed."
                          expressionType="Notify"
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">exec [UpsertMarketLead] ?,?,?</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Iterate Offices\Sequence Container\MarketLead search\Upsert Market Leads.Connections[OleDbConnection]"
                          connectionManagerID="Package.ConnectionManagers[colsqlbi01v.Entities]"
                          connectionManagerRefId="Package.ConnectionManagers[colsqlbi01v.Entities]"
                          description="The OLE DB runtime connection used to access the database."
                          name="OleDbConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\MarketLead search\Upsert Market Leads.Inputs[OLE DB Command Input]"
                          errorOrTruncationOperation="Command Execution"
                          errorRowDisposition="FailComponent"
                          hasSideEffects="true"
                          name="OLE DB Command Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\Upsert Market Leads.Inputs[OLE DB Command Input].Columns[Origin]"
                              cachedDataType="i4"
                              cachedName="Origin"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\MarketLead search\Upsert Market Leads.Inputs[OLE DB Command Input].ExternalColumns[@Origin]"
                              lineageId="Package\Iterate Offices\Sequence Container\MarketLead search\Add accountid and origin.Outputs[Derived Column Output].Columns[Origin]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\Upsert Market Leads.Inputs[OLE DB Command Input].Columns[AccountId]"
                              cachedDataType="i4"
                              cachedName="AccountId"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\MarketLead search\Upsert Market Leads.Inputs[OLE DB Command Input].ExternalColumns[@accountid]"
                              lineageId="Package\Iterate Offices\Sequence Container\MarketLead search\Add accountid and origin.Outputs[Derived Column Output].Columns[AccountId]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\Upsert Market Leads.Inputs[OLE DB Command Input].Columns[__DOCUMENT__]"
                              cachedDataType="nText"
                              cachedName="__DOCUMENT__"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\MarketLead search\Upsert Market Leads.Inputs[OLE DB Command Input].ExternalColumns[@body]"
                              lineageId="Package\Iterate Offices\Sequence Container\MarketLead search\record.Outputs[JsonParserTransformOutput].Columns[__DOCUMENT__]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\Upsert Market Leads.Inputs[OLE DB Command Input].ExternalColumns[@Origin]"
                              dataType="i2"
                              name="@Origin">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                                  name="DBParamInfoFlags">81</property>
                              </properties>
                            </externalMetadataColumn>
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\Upsert Market Leads.Inputs[OLE DB Command Input].ExternalColumns[@body]"
                              dataType="nText"
                              name="@body">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                                  name="DBParamInfoFlags">193</property>
                              </properties>
                            </externalMetadataColumn>
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\Upsert Market Leads.Inputs[OLE DB Command Input].ExternalColumns[@accountid]"
                              dataType="i4"
                              name="@accountid">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                                  name="DBParamInfoFlags">81</property>
                              </properties>
                            </externalMetadataColumn>
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\MarketLead search\Upsert Market Leads.Outputs[OLE DB Command Output]"
                          exclusionGroup="1"
                          name="OLE DB Command Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\MarketLead search\Upsert Market Leads.Inputs[OLE DB Command Input]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\MarketLead search\Upsert Market Leads.Outputs[OLE DB Command Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="OLE DB Command Error Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\MarketLead search\Upsert Market Leads.Inputs[OLE DB Command Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\Upsert Market Leads.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\MarketLead search\Upsert Market Leads.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\Upsert Market Leads.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\MarketLead search\Upsert Market Leads.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\MarketLead search\Web API Destination"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Web API Destination; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="The Web API destination can be used to send data to Web API URL (e.g. Submit or POST data to REST API/SOAP or other HTTP/HTTPS endpoints)"
                      name="Web API Destination"
                      usesDispositions="true"
                      version="5">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.String"
                          description="API URL you want to access"
                          expressionType="Notify"
                          name="HttpRequestUrl">{{User::RexAPIWebURL}}</property>
                        <property
                          dataType="System.String"
                          description="Http Web Request Method (e.g. POST, GET, PUT, LIST, DELETE...). Refer your API documentation if you are not sure which method you have to use."
                          expressionType="Notify"
                          name="HttpRequestMethod">POST</property>
                        <property
                          dataType="System.String"
                          description="Set this if you want to set custom Http headers. You may use variable anywhere in the header value using syntax {{User::YourVarName}}. Syntax of Header key value pair is : &amp;lt;request&amp;gt;&amp;lt;header&amp;gt;&amp;lt;name&amp;gt;x-myheader-1&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;AAA&amp;lt;/value&amp;gt;&amp;lt;/header&amp;gt; &amp;lt;header&amp;gt;&amp;lt;name&amp;gt;x-myheader-2&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;BBB&amp;lt;/value&amp;gt;&amp;lt;/header&amp;gt;&amp;lt;/request&amp;gt;"
                          expressionType="Notify"
                          name="HttpHeaders"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">&lt;request&gt;&lt;header&gt;&lt;name&gt;Accept&lt;/name&gt;&lt;value&gt;*/*&lt;/value&gt;&lt;/header&gt;&lt;header&gt;&lt;name&gt;Cache-Control&lt;/name&gt;&lt;value&gt;no-cache&lt;/value&gt;&lt;/header&gt;&lt;header&gt;&lt;name&gt;X-App-Identifier&lt;/name&gt;&lt;value&gt;client:spicerhaart:{{System::PackageName}}:{{System::TaskName}}&lt;/value&gt;&lt;/header&gt;&lt;/request&gt;</property>
                        <property
                          dataType="System.String"
                          description="User defined data you wish to send along with your HTTP Request (e.g. Upload file data, Form POST data). Usually you have to set content-type of your data but if you select RequestMethod=POST then system will automatically set content-type=application/x-www-form-urlencoded."
                          expressionType="Notify"
                          name="HttpRequestData"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies content type for data you wish to POST. If you select Default option then system default content type will be used (i.e. application/x-www-form-urlencoded). If you specify Content-Type header along with this option then header value takes precedence."
                          expressionType="Notify"
                          name="HttpRequestContentType"
                          typeConverter="ZappySys.Common.Web.HttpRequestContentType">2</property>
                        <property
                          dataType="System.Boolean"
                          description="If this option is true then component will continue without exception on 404 error (Url not found). This allows you to consume data gracefully."
                          expressionType="Notify"
                          name="ContinueOnUrlNotFoundError">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Ignore SSL certificate related errors. Example: if you getting SSL/TLS errors because of certificate expired or certificate is not from trusted authority or certificate is self-signed. By checking this option you will not get SSL/TLS error."
                          expressionType="Notify"
                          name="IgnoreCertificateErrors">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Allow unsecure ciphers/suites and curves for SSLS/TLS communication. Use this option to communicate with web servers which needs legacy / unsecured ciphers support. This option is only trigged when you change default SSL/TLS Version on advanced settings tab."
                          expressionType="Notify"
                          name="AllowUnsecureSuite">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Enable support for gzip or deflate compression. When you check this option compressed response automatically de-compressed saving bandwidth. This option is only valid if web server supports compressed response stream. Check your API documentation for more information."
                          expressionType="Notify"
                          name="EnableCompressionSupport">true</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies which security protocol is supported for HTTPS communication. Using this option you can enable legacy protocol or enforce to use latest version of security protocol (Note: TLS 1.2 is only supported in SSIS 2014 or Higher)."
                          expressionType="Notify"
                          name="SecurityProtocol"
                          typeConverter="ZappySys.PowerPack.Common.HttpsSecurityProtocolType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Wait time in milliseconds (Pause after each request). 0=No wait. Use this delay time if your API has limit on how many requests you can make in certain time frame."
                          expressionType="Notify"
                          name="WaitTime">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you redirect error to error output by default you get additional information in ErrorMessage column. Check this option if you need exact Response Body (Useful if its in JSON/XML format which needs to be parsed for additional information for later step)."
                          expressionType="Notify"
                          name="OnErrorOutputResponseBody">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Enable multiple requests using parallel threads."
                          expressionType="Notify"
                          name="EnableParallelRequests">true</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum parallel threads to use for processing multiple web requests."
                          expressionType="Notify"
                          name="MaxParallelThreads">3</property>
                        <property
                          dataType="System.Boolean"
                          description="By default one request is sent for each input row. If your API supports multiple records in a single call via HTTP Body then enable this setting. See also BodyBatchSize, BodyHeader, BodyFooter and BodyRowSeparator property."
                          expressionType="Notify"
                          name="EnableBodyBatch">false</property>
                        <property
                          dataType="System.String"
                          description="When you have to wrap input content between opening and closing tags for each call then set this property to specify opening for body content. For Example if you want to build Body like this (send max 100 rows per call) ==&gt; { records : [ {...}, {...}, {...} ] } then you can set BatchSize=100, BodyHeader as &quot;{ records: [&quot; , BodyFooter as &quot;] }&quot; and BodyRowSeperator as comma {,}. This property is ignored if EnableBodyBatch=false."
                          expressionType="Notify"
                          name="BodyHeader"></property>
                        <property
                          dataType="System.String"
                          description="When you have to wrap input content between opening and closing tags for each call then set this property to specify closing for body content. For Example if you want to build Body like this (send max 100 rows per call) ==&gt; { records : [ {...}, {...}, {...} ] } then you can set BatchSize=100, BodyHeader as &quot;{ records: [&quot; , BodyFooter as &quot;] }&quot; and BodyRowSeperator as comma {,}. This property is ignored if EnableBodyBatch=false."
                          expressionType="Notify"
                          name="BodyFooter"></property>
                        <property
                          dataType="System.Int32"
                          description="If your API supports multiple records via HTTP Body then change this setting &gt; 1 to include multiple upstream records into single call. See also BodyHeader, BodyFooter and BodyRowSeparator property. This property is ignored if EnableBodyBatch=false."
                          expressionType="Notify"
                          name="BodyBatchSize">100</property>
                        <property
                          dataType="System.String"
                          description="When you submit multiple rows in a batch you can separate multiple documents / records using custom separator (e.g. in JSON Array you can use comma {,} as record separator if POST document is in array format [ {...}, {...}, {...} ] ). For last row of batch blank separator is used."
                          expressionType="Notify"
                          name="BodyRowSeparator"></property>
                        <property
                          dataType="System.Boolean"
                          description="Returns response data as binary data (e.g. Byte Array). Check this option is response is Zip file, Image file or any non text data which needs to be exported as raw data without any encoding."
                          expressionType="Notify"
                          name="TreatResponseAsBinary">false</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.WebApiDestination</property>
                        <property
                          dataType="System.Boolean"
                          description="Check this option if you want to upload file(s) (i.e. POST RAW file data) or send data using Multi-Part encoding method (i.e. Content-Type: multipart/form-data). Multi-Part request allows you to mix key/value and upload files in same request. On the other hand raw upload allows only single file upload (without any key/value) &#xA;&#xA;==== Raw Upload (Content-Type: application/octet-stream) =====   &#xA;To upload single file in raw mode check this option and specify full file path starting with @ sign in the Body (e.g.  @c:\data\myfile.zip ) &#xA;&#xA;==== Form-Data / Multipart Upload (Content-Type: multipart/form-data) =====   &#xA;To treat your Request data as multi part fields you must specify key/value pairs separated by new lines into RequestData field (i.e. Body). Each key value pair is entered on new-line and key/value are separated using equal sign (=). Preceding and trailing spaces are ignored also blank lines are ignored. &#xA;If field value has some any special character(s) then use escape sequence (e.g. For NewLine: \r\n, For Tab: \t, For at (@): \@). When value of any field starts with at sign (@) its automatically treated as File you want to upload. By default file content type is determined based on extension however you can supply content type manually for any field using this way [ fieldname.Content-Type=some content type ]. In below example we have supplied Content-Type for file2 and SomeField1, all other fields are using default content-type.&#xA;See below Example of uploading multiple files along with additional fields.&#xA;&#xA;file1=@c:\data\Myfile1.txt&#xA;file2=@c:\data\Myfile2.json&#xA;file2.Content-Type=application/json&#xA;SomeField1=aaaaaaa&#xA;SomeField1.Content-Type=text/plain&#xA;SomeField2=12345&#xA;SomeFieldWithNewLineAndTab=This is line1\r\nThis is line2\r\nThis is \ttab \ttab \ttab&#xA;SomeFieldStartingWithAtSign=\@MyTwitterHandle&#xA;"
                          expressionType="Notify"
                          name="IsMultiPartUpload">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Enable this option if your server is expecting &#xA; (i.e. CRLF) after last Multi-Part boundary in the Body. This option is only applicable if you enabled IsMultiPartUpload and sending data in Key=value format (i.e. Mutipart). For raw file upload this option has no effect."
                          expressionType="Notify"
                          name="AddMultiPartPostamble">false</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Iterate Offices\Sequence Container\MarketLead search\Web API Destination.Connections[Connection]"
                          connectionManagerID="Package.ConnectionManagers[HTTP 1]"
                          connectionManagerRefId="Package.ConnectionManagers[HTTP 1]"
                          description="Connection manager for authentication (e.g. HTTP or OAuth Connection)"
                          name="Connection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\MarketLead search\Web API Destination.Inputs[WebApiDestinationInput]"
                          errorRowDisposition="RedirectRow"
                          hasSideEffects="true"
                          name="WebApiDestinationInput"
                          truncationRowDisposition="RedirectRow">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\Web API Destination.Inputs[WebApiDestinationInput].Columns[ZS_JSON_OUT]"
                              cachedDataType="nText"
                              cachedName="ZS_JSON_OUT"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\MarketLead search\Web API Destination.Inputs[WebApiDestinationInput].ExternalColumns[HttpRequestData]"
                              lineageId="Package\Iterate Offices\Sequence Container\MarketLead search\JSON Generator Transform.Outputs[JsonGeneratorTransformOutput].Columns[ZS_JSON_OUT]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\Web API Destination.Inputs[WebApiDestinationInput].ExternalColumns[HttpRequestUrl]"
                              dataType="wstr"
                              length="2000"
                              name="HttpRequestUrl" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\Web API Destination.Inputs[WebApiDestinationInput].ExternalColumns[HttpRequestData]"
                              dataType="nText"
                              name="HttpRequestData" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\Web API Destination.Inputs[WebApiDestinationInput].ExternalColumns[HttpHeaders]"
                              dataType="wstr"
                              length="2000"
                              name="HttpHeaders" />
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\MarketLead search\Web API Destination.Outputs[WebApiDestination Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="WebApiDestination Error Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\MarketLead search\Web API Destination.Inputs[WebApiDestinationInput]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\Web API Destination.Outputs[WebApiDestination Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\MarketLead search\Web API Destination.Outputs[WebApiDestination Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\Web API Destination.Outputs[WebApiDestination Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\MarketLead search\Web API Destination.Outputs[WebApiDestination Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\Web API Destination.Outputs[WebApiDestination Error Output].Columns[ErrorColumnName]"
                              codePage="1252"
                              dataType="str"
                              length="128"
                              lineageId="Package\Iterate Offices\Sequence Container\MarketLead search\Web API Destination.Outputs[WebApiDestination Error Output].Columns[ErrorColumnName]"
                              name="ErrorColumnName" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\Web API Destination.Outputs[WebApiDestination Error Output].Columns[ErrorMessage]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\MarketLead search\Web API Destination.Outputs[WebApiDestination Error Output].Columns[ErrorMessage]"
                              name="ErrorMessage" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\MarketLead search\Web API Destination.Outputs[Response Output]"
                          exclusionGroup="1"
                          name="Response Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\MarketLead search\Web API Destination.Inputs[WebApiDestinationInput]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\Web API Destination.Outputs[Response Output].Columns[ResponseText]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\MarketLead search\Web API Destination.Outputs[Response Output].Columns[ResponseText]"
                              name="ResponseText" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\MarketLead search\Web API Destination.Outputs[Response Output].Columns[StatusCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\MarketLead search\Web API Destination.Outputs[Response Output].Columns[StatusCode]"
                              name="StatusCode" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                  </components>
                  <paths>
                    <path
                      refId="Package\Iterate Offices\Sequence Container\MarketLead search.Paths[Derived Column Output]"
                      endId="Package\Iterate Offices\Sequence Container\MarketLead search\Upsert Market Leads.Inputs[OLE DB Command Input]"
                      name="Derived Column Output"
                      startId="Package\Iterate Offices\Sequence Container\MarketLead search\Add accountid and origin.Outputs[Derived Column Output]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\MarketLead search.Paths[ignore]"
                      endId="Package\Iterate Offices\Sequence Container\MarketLead search\Trash Destination.Inputs[TrashDestinationInput]"
                      name="ignore"
                      startId="Package\Iterate Offices\Sequence Container\MarketLead search\Insert or Ignore.Outputs[ignore]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\MarketLead search.Paths[JsonGeneratorTransformOutput]"
                      endId="Package\Iterate Offices\Sequence Container\MarketLead search\Web API Destination.Inputs[WebApiDestinationInput]"
                      name="JsonGeneratorTransformOutput"
                      startId="Package\Iterate Offices\Sequence Container\MarketLead search\JSON Generator Transform.Outputs[JsonGeneratorTransformOutput]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\MarketLead search.Paths[JsonParserTransformOutput]"
                      endId="Package\Iterate Offices\Sequence Container\MarketLead search\record.Inputs[JsonParserTransformInput]"
                      name="JsonParserTransformOutput"
                      startId="Package\Iterate Offices\Sequence Container\MarketLead search\JSON Parser Add id back in.Outputs[JsonParserTransformOutput]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\MarketLead search.Paths[JsonParserTransformOutput1]"
                      endId="Package\Iterate Offices\Sequence Container\MarketLead search\Add accountid and origin.Inputs[Derived Column Input]"
                      name="JsonParserTransformOutput"
                      startId="Package\Iterate Offices\Sequence Container\MarketLead search\record.Outputs[JsonParserTransformOutput]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\MarketLead search.Paths[JsonSourceOutput]"
                      endId="Package\Iterate Offices\Sequence Container\MarketLead search\API Sort.Inputs[Sort Input]"
                      name="JsonSourceOutput"
                      startId="Package\Iterate Offices\Sequence Container\MarketLead search\Search Market Leads.Outputs[JsonSourceOutput]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\MarketLead search.Paths[Merge Join Output]"
                      endId="Package\Iterate Offices\Sequence Container\MarketLead search\Insert or Ignore.Inputs[Conditional Split Input]"
                      name="Merge Join Output"
                      startId="Package\Iterate Offices\Sequence Container\MarketLead search\Merge Join To Find Those to Insert.Outputs[Merge Join Output]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\MarketLead search.Paths[OLE DB Source Output]"
                      endId="Package\Iterate Offices\Sequence Container\MarketLead search\SQL Sort.Inputs[Sort Input]"
                      name="OLE DB Source Output"
                      startId="Package\Iterate Offices\Sequence Container\MarketLead search\Existing Market Leads from SQL.Outputs[OLE DB Source Output]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\MarketLead search.Paths[Response Output]"
                      endId="Package\Iterate Offices\Sequence Container\MarketLead search\JSON Parser Add id back in.Inputs[JsonParserTransformInput]"
                      name="Response Output"
                      startId="Package\Iterate Offices\Sequence Container\MarketLead search\Web API Destination.Outputs[Response Output]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\MarketLead search.Paths[Sort Output]"
                      endId="Package\Iterate Offices\Sequence Container\MarketLead search\Merge Join To Find Those to Insert.Inputs[Merge Join Right Input]"
                      name="Sort Output"
                      startId="Package\Iterate Offices\Sequence Container\MarketLead search\SQL Sort.Outputs[Sort Output]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\MarketLead search.Paths[Sort Output1]"
                      endId="Package\Iterate Offices\Sequence Container\MarketLead search\Merge Join To Find Those to Insert.Inputs[Merge Join Left Input]"
                      name="Sort Output"
                      startId="Package\Iterate Offices\Sequence Container\MarketLead search\API Sort.Outputs[Sort Output]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\MarketLead search.Paths[upsert]"
                      endId="Package\Iterate Offices\Sequence Container\MarketLead search\JSON Generator Transform.Inputs[JsonInput1]"
                      name="upsert"
                      startId="Package\Iterate Offices\Sequence Container\MarketLead search\Insert or Ignore.Outputs[upsert]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\MarketLead search.Paths[WebApiDestination Error Output]"
                      endId="Package\Iterate Offices\Sequence Container\MarketLead search\Trash Destination 1.Inputs[TrashDestinationInput]"
                      name="WebApiDestination Error Output"
                      startId="Package\Iterate Offices\Sequence Container\MarketLead search\Web API Destination.Outputs[WebApiDestination Error Output]" />
                  </paths>
                </pipeline>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Iterate Offices\Sequence Container\Set SSIS Variables From XML"
              DTS:CreationName="ZappySys.XmlParserTask"
              DTS:Description="ZS Xml Parser Task"
              DTS:DTSID="{FC4E9260-CFA4-4402-9D06-8E23B999E085}"
              DTS:ExecutableType="ZappySys.XmlParserTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Set SSIS Variables From XML"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <XmlParserTask
                  SourceAccessMode="Connection"
                  SourceVariable=""
                  SourceConnection="{8034D4A8-2FDC-46EC-B494-422098E6D63E}"
                  SourceDirectValue="&lt;!-- &#xA;Using XML Parser Task you can extract values from XML document using XPath Expression &#xA;See example in below grid. Read description for each mapping.&#xA;See more examples: https://msdn.microsoft.com/en-us/library/ms256086(v=vs.110).aspx&#xA;--&gt;&#xA;&lt;catalog&gt;&#xA;   &lt;book id=&quot;bk101&quot;&gt;&#xA;      &lt;author&gt;Gambardella, Matthew&lt;/author&gt;&#xA;      &lt;title&gt;XML Developer's Guide&lt;/title&gt;&#xA;      &lt;genre&gt;Computer&lt;/genre&gt;&#xA;      &lt;price&gt;44.95&lt;/price&gt;&#xA;      &lt;publish_date&gt;2000-10-01&lt;/publish_date&gt;&#xA;      &lt;description&gt;An in-depth look at creating applications &#xA;      with XML.&lt;/description&gt;&#xA;   &lt;/book&gt;&#xA;   &lt;book id=&quot;bk102&quot;&gt;&#xA;      &lt;author&gt;Ralls, Kim&lt;/author&gt;&#xA;      &lt;title&gt;Midnight Rain&lt;/title&gt;&#xA;      &lt;genre&gt;Fantasy&lt;/genre&gt;&#xA;      &lt;price&gt;5.95&lt;/price&gt;&#xA;      &lt;publish_date&gt;2000-12-16&lt;/publish_date&gt;&#xA;      &lt;description&gt;A former architect battles corporate zombies, &#xA;      an evil sorceress, and her own childhood to become queen &#xA;      of the world.&lt;/description&gt;&#xA;   &lt;/book&gt;&#xA;   &lt;book id=&quot;bk103&quot;&gt;&#xA;      &lt;author&gt;Corets, Eva&lt;/author&gt;&#xA;      &lt;title&gt;Maeve Ascendant&lt;/title&gt;&#xA;      &lt;genre&gt;Fantasy&lt;/genre&gt;&#xA;      &lt;price&gt;5.95&lt;/price&gt;&#xA;      &lt;publish_date&gt;2000-11-17&lt;/publish_date&gt;&#xA;      &lt;description&gt;After the collapse of a nanotechnology &#xA;      society in England, the young survivors lay the &#xA;      foundation for a new society.&lt;/description&gt;&#xA;   &lt;/book&gt;&#xA;   &lt;book id=&quot;bk104&quot;&gt;&#xA;      &lt;author&gt;Corets, Eva&lt;/author&gt;&#xA;      &lt;title&gt;Oberon's Legacy&lt;/title&gt;&#xA;      &lt;genre&gt;Fantasy&lt;/genre&gt;&#xA;      &lt;price&gt;5.95&lt;/price&gt;&#xA;      &lt;publish_date&gt;2001-03-10&lt;/publish_date&gt;&#xA;      &lt;description&gt;In post-apocalypse England, the mysterious &#xA;      agent known only as Oberon helps to create a new life &#xA;      for the inhabitants of London. Sequel to Maeve &#xA;      Ascendant.&lt;/description&gt;&#xA;   &lt;/book&gt;&#xA;&lt;/catalog&gt;"
                  TargetSettings="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-16&quot;?&gt;&lt;XmlParserSetting xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot;&gt;&lt;Mappings&gt;&lt;XmlParserMapping&gt;&lt;Path&gt;/SSISVariables/RexAPIWebURL&lt;/Path&gt;&lt;Target&gt;User::RexAPIWebURL&lt;/Target&gt;&lt;Required&gt;true&lt;/Required&gt;&lt;Description /&gt;&lt;/XmlParserMapping&gt;&lt;XmlParserMapping&gt;&lt;Path&gt; /SSISVariables/PackageUser&lt;/Path&gt;&lt;Target&gt;User::PackageUser&lt;/Target&gt;&lt;Required&gt;true&lt;/Required&gt;&lt;Description /&gt;&lt;/XmlParserMapping&gt;&lt;XmlParserMapping&gt;&lt;Path&gt;/SSISVariables/PackageErrorEmail&lt;/Path&gt;&lt;Target&gt;User::PackageErrorEmail&lt;/Target&gt;&lt;Required&gt;true&lt;/Required&gt;&lt;Description /&gt;&lt;/XmlParserMapping&gt;&lt;XmlParserMapping&gt;&lt;Path&gt;/SSISVariables/PackagePassword&lt;/Path&gt;&lt;Target&gt;User::PackagePassword&lt;/Target&gt;&lt;Required&gt;true&lt;/Required&gt;&lt;Description /&gt;&lt;/XmlParserMapping&gt;&lt;XmlParserMapping&gt;&lt;Path&gt;/SSISVariables/RexAPIWebURLv1&lt;/Path&gt;&lt;Target&gt;User::RexAPIWebURLv1&lt;/Target&gt;&lt;Required&gt;true&lt;/Required&gt;&lt;Description /&gt;&lt;/XmlParserMapping&gt;&lt;/Mappings&gt;&lt;Path /&gt;&lt;/XmlParserSetting&gt;"
                  LogLevel="Normal"
                  PrefixTimestamp="False" />
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Iterate Offices\Sequence Container.PrecedenceConstraints[Constraint]"
              DTS:CreationName=""
              DTS:DTSID="{9A46BFEF-3088-4A72-9C21-61D72E54F721}"
              DTS:From="Package\Iterate Offices\Sequence Container\Get epoch for 3 days ago"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint"
              DTS:To="Package\Iterate Offices\Sequence Container\Get Auth Key" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Iterate Offices\Sequence Container.PrecedenceConstraints[Constraint 1]"
              DTS:CreationName=""
              DTS:DTSID="{A8AE2DA8-E176-45C1-B611-AFA87267677C}"
              DTS:From="Package\Iterate Offices\Sequence Container\Get Auth Key"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 1"
              DTS:To="Package\Iterate Offices\Sequence Container\Contact search" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Iterate Offices\Sequence Container.PrecedenceConstraints[Constraint 10]"
              DTS:CreationName=""
              DTS:DTSID="{8FAC57AB-CE67-4EFD-9614-F4FEF9758073}"
              DTS:From="Package\Iterate Offices\Sequence Container\Get Auth Key"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 10"
              DTS:To="Package\Iterate Offices\Sequence Container\Appraisals" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Iterate Offices\Sequence Container.PrecedenceConstraints[Constraint 13]"
              DTS:CreationName=""
              DTS:DTSID="{89E7D9E2-06E8-4961-9C33-74BA688F90B3}"
              DTS:From="Package\Iterate Offices\Sequence Container\Campaigns"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 13"
              DTS:To="Package\Iterate Offices\Sequence Container\Campaign Members" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Iterate Offices\Sequence Container.PrecedenceConstraints[Constraint 15]"
              DTS:CreationName=""
              DTS:DTSID="{AB6A3B5E-0EF9-4EF8-8F96-3431912829BB}"
              DTS:From="Package\Iterate Offices\Sequence Container\MarketLead search"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 15"
              DTS:To="Package\Iterate Offices\Sequence Container\Campaigns" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Iterate Offices\Sequence Container.PrecedenceConstraints[Constraint 17]"
              DTS:CreationName=""
              DTS:DTSID="{3F777769-1478-4705-8DB9-FD0FE83B4171}"
              DTS:From="Package\Iterate Offices\Sequence Container\Set SSIS Variables From XML"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 17"
              DTS:To="Package\Iterate Offices\Sequence Container\Get epoch for 3 days ago" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Iterate Offices\Sequence Container.PrecedenceConstraints[Constraint 2]"
              DTS:CreationName=""
              DTS:DTSID="{BF61C51B-1188-443C-9D37-C17E2394EC28}"
              DTS:From="Package\Iterate Offices\Sequence Container\Get Auth Key"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 2"
              DTS:To="Package\Iterate Offices\Sequence Container\Email Auth Failure"
              DTS:Value="1" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Iterate Offices\Sequence Container.PrecedenceConstraints[Constraint 3]"
              DTS:CreationName=""
              DTS:DTSID="{9C46DA0F-CCE9-4753-A793-DE948DF21B91}"
              DTS:From="Package\Iterate Offices\Sequence Container\Get Auth Key"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 3"
              DTS:To="Package\Iterate Offices\Sequence Container\Listing search" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Iterate Offices\Sequence Container.PrecedenceConstraints[Constraint 6]"
              DTS:CreationName=""
              DTS:DTSID="{BF790FDA-1CCD-4729-A3B5-356CCE5A33F3}"
              DTS:From="Package\Iterate Offices\Sequence Container\Get Auth Key"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 6"
              DTS:To="Package\Iterate Offices\Sequence Container\Lead search" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Iterate Offices\Sequence Container.PrecedenceConstraints[Constraint 8]"
              DTS:CreationName=""
              DTS:DTSID="{D762E2AF-2745-466B-B2E0-31D9C603A962}"
              DTS:From="Package\Iterate Offices\Sequence Container\Get Auth Key"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 8"
              DTS:To="Package\Iterate Offices\Sequence Container\MarketLead search" />
          </DTS:PrecedenceConstraints>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{58B6BE47-1220-4B88-A6AD-3691DFFC6CF2}"
          DTS:ObjectName="{58B6BE47-1220-4B88-A6AD-3691DFFC6CF2}"
          DTS:ValueIndex="0"
          DTS:VariableName="User::Office_id" />
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{00C32CBC-0BE8-4FA8-ADF0-78EF9AC8D8C5}"
          DTS:ObjectName="{00C32CBC-0BE8-4FA8-ADF0-78EF9AC8D8C5}"
          DTS:ValueIndex="1"
          DTS:VariableName="User::RexAccountID" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 8 1]"
      DTS:CreationName=""
      DTS:DTSID="{0304BA45-66B3-4BDC-92DE-0333F7AD62D5}"
      DTS:From="Package\Get Office List"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 8 1"
      DTS:To="Package\Iterate Offices" />
  </DTS:PrecedenceConstraints>
  <DTS:EventHandlers>
    <DTS:EventHandler
      DTS:refId="Package.EventHandlers[OnError]"
      DTS:CreationName="OnError"
      DTS:DTSID="{79FDF75E-ED33-453A-AF00-1DD664027D41}"
      DTS:EventID="0"
      DTS:EventName="OnError"
      DTS:LocaleID="-1">
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="The propagate property of the event"
          DTS:DTSID="{3E51A8B4-697C-4C0A-ABA1-49FC4F28FCBF}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="System"
          DTS:ObjectName="Propagate">
          <DTS:VariableValue
            DTS:DataType="11">-1</DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnError]\Email error"
          DTS:CreationName="ZappySys.HtmlEmailTask"
          DTS:Description="Email Auth Failure"
          DTS:Disabled="True"
          DTS:DTSID="{35D63CB3-53DE-4B9D-851B-4B4DA9BA484F}"
          DTS:ExecutableType="ZappySys.HtmlEmailTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Email error"
          DTS:TaskContact="HTML Email Task; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support">
          <DTS:Variables />
          <DTS:ObjectData>
            <HtmlEmailTask
              SmtpConnection="SMTP"
              IsHtmlEmail="True"
              DefaultStyle="&#xA;&lt;style type=&quot;text/css&quot;&gt;&#xA;body,div,p,span,td,th,table {&#xA; font-family: Helvetica, Arial, sans-serif;&#xA; font-size: 10pt; &#xA;}&#xA;h1,h2,h3,h4,h5{&#xA;font-family: Helvetica, Arial, sans-serif;&#xA;}&#xA;&#xA;table { &#xA; border-collapse: &#xA; collapse; border-spacing: 0; &#xA;}&#xA;&#xA;tr.odd    {background-color: #cccccc}&#xA;tr.even   {background-color: #fafafa}&#xA;td, th { border: 1px solid #bbb;padding: 5 5 5 5} &#xA;th { background: #F3F3F3;  font-weight: bold;}&#xA;&lt;/style&gt;&#xA;&#xA;"
              Subject="Error occured in {{System::PackageName}}"
              From="alerts@spicerhaart.co.uk"
              To="{{User::PackageErrorEmail}}"
              Cc=""
              ReplyTo=""
              Bcc=""
              Attachments=""
              EmailPriority="High"
              MessageSourceType="Direct"
              MessageDirectValue="&lt;p&gt;Error occured and could not be logged in database&lt;p /&gt;&#xA;&lt;br&gt;&#xA;&lt;p&gt;Error code: {{System::ErrorCode}}&lt;p /&gt;&#xA;&lt;br&gt;&#xA;&lt;p&gt;Error message: {{System::ErrorDescription}}&lt;p /&gt;"
              MessageFileConnection=""
              MessageVariable=""
              LogLevel="Normal"
              PrefixTimestamp="False" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnError]\Insert error log into database"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{B9801644-48DF-486F-9E38-D8CDD60E9464}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Insert error log into database"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{1ACC4D99-A047-44CB-AAAD-088F42F69A23}"
              SQLTask:SqlStatementSource="INSERT INTO SSISErrorLog&#xA;(PackageName, StartTime, ErrorCode, ErrorDescription, AccountID)&#xA;VALUES&#xA;(?, ?, ?, ?, ?)" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@PackageName"
                SQLTask:DtsVariableName="System::PackageName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@StartTime"
                SQLTask:DtsVariableName="System::StartTime"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="7"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@ErrorCode"
                SQLTask:DtsVariableName="System::ErrorCode"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@ErrorDescription"
                SQLTask:DtsVariableName="System::ErrorDescription"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@AccountID"
                SQLTask:DtsVariableName="User::RexAccountID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package.EventHandlers[OnError].PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{7170B8A0-CEB6-4A75-9FCE-AAE79F4E8DEC}"
          DTS:From="Package.EventHandlers[OnError]\Insert error log into database"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package.EventHandlers[OnError]\Email error"
          DTS:Value="1" />
      </DTS:PrecedenceConstraints>
    </DTS:EventHandler>
    <DTS:EventHandler
      DTS:refId="Package.EventHandlers[OnTaskFailed]"
      DTS:CreationName="OnTaskFailed"
      DTS:DTSID="{9BC95543-344C-4B06-BE7F-7E6B98D976ED}"
      DTS:EventID="0"
      DTS:EventName="OnTaskFailed"
      DTS:LocaleID="-1">
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="The propagate property of the event"
          DTS:DTSID="{47637F05-38C3-4A39-A3BB-8437CE075C0C}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="System"
          DTS:ObjectName="Propagate">
          <DTS:VariableValue
            DTS:DataType="11">-1</DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:Executables />
    </DTS:EventHandler>
  </DTS:EventHandlers>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="145,42"
          Id="Package\Get Office List"
          TopLeft="633.5,5.5" />
        <NodeLayout
          Size="127,42"
          Id="Package\Iterate Offices\Sequence Container\Appraisals"
          TopLeft="215.5,311.5" />
        <NodeLayout
          Size="172,42"
          Id="Package\Iterate Offices\Sequence Container\Campaign Members"
          TopLeft="1025,515.5" />
        <NodeLayout
          Size="131,42"
          Id="Package\Iterate Offices\Sequence Container\Campaigns"
          TopLeft="1045.5,413.5" />
        <NodeLayout
          Size="149,42"
          Id="Package\Iterate Offices\Sequence Container\Contact search"
          TopLeft="5.50000000000023,311.5" />
        <NodeLayout
          Size="164,42"
          Id="Package\Iterate Offices\Sequence Container\Email Auth Failure"
          TopLeft="403,311.5" />
        <NodeLayout
          Size="141,42"
          Id="Package\Iterate Offices\Sequence Container\Get Auth Key"
          TopLeft="628.5,209.5" />
        <NodeLayout
          Size="198,42"
          Id="Package\Iterate Offices\Sequence Container\Get epoch for 3 days ago"
          TopLeft="597,107.5" />
        <NodeLayout
          Size="135,42"
          Id="Package\Iterate Offices\Sequence Container\Lead search"
          TopLeft="831.5,311.5" />
        <NodeLayout
          Size="143,42"
          Id="Package\Iterate Offices\Sequence Container\Listing search"
          TopLeft="627.5,311.5" />
        <NodeLayout
          Size="168,42"
          Id="Package\Iterate Offices\Sequence Container\MarketLead search"
          TopLeft="1027,311.5" />
        <NodeLayout
          Size="216,42"
          Id="Package\Iterate Offices\Sequence Container\Set SSIS Variables From XML"
          TopLeft="591,5.49999999999977" />
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container.PrecedenceConstraints[Constraint]"
          TopLeft="697.5,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container.PrecedenceConstraints[Constraint 1]"
          TopLeft="649.125,251.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-569.125,60"
              Start="0,0"
              End="-569.125,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,9.58024691358025" />
                  <mssgle:CubicBezierSegment
                    Point1="0,9.58024691358025"
                    Point2="0,13.5802469135802"
                    Point3="-4,13.5802469135802" />
                  <mssgle:LineSegment
                    End="-565.125,13.5802469135802" />
                  <mssgle:CubicBezierSegment
                    Point1="-565.125,13.5802469135802"
                    Point2="-569.125,13.5802469135802"
                    Point3="-569.125,17.5802469135802" />
                  <mssgle:LineSegment
                    End="-569.125,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container.PrecedenceConstraints[Constraint 10]"
          TopLeft="665.75,251.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-386.75,60"
              Start="0,0"
              End="-386.75,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.7424593967517" />
                  <mssgle:CubicBezierSegment
                    Point1="0,16.7424593967517"
                    Point2="0,20.7424593967517"
                    Point3="-4,20.7424593967517" />
                  <mssgle:LineSegment
                    End="-382.75,20.7424593967517" />
                  <mssgle:CubicBezierSegment
                    Point1="-382.75,20.7424593967517"
                    Point2="-386.75,20.7424593967517"
                    Point3="-386.75,24.7424593967517" />
                  <mssgle:LineSegment
                    End="-386.75,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container.PrecedenceConstraints[Constraint 13]"
          TopLeft="1111,455.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container.PrecedenceConstraints[Constraint 15]"
          TopLeft="1111,353.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container.PrecedenceConstraints[Constraint 17]"
          TopLeft="697.5,47.4999999999998">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60.0000000000001"
              Start="0,0"
              End="0,52.5000000000001">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5000000000001" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container.PrecedenceConstraints[Constraint 2]"
          TopLeft="682.375,251.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-197.375,60"
              Start="0,0"
              End="-197.375,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,21.9899497487437" />
                  <mssgle:CubicBezierSegment
                    Point1="0,21.9899497487437"
                    Point2="0,25.9899497487437"
                    Point3="-4,25.9899497487437" />
                  <mssgle:LineSegment
                    End="-193.375,25.9899497487437" />
                  <mssgle:CubicBezierSegment
                    Point1="-193.375,25.9899497487437"
                    Point2="-197.375,25.9899497487437"
                    Point3="-197.375,29.9899497487437" />
                  <mssgle:LineSegment
                    End="-197.375,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-113.92884765625,30.9899497487437,30.4826953125,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container.PrecedenceConstraints[Constraint 3]"
          TopLeft="699,251.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container.PrecedenceConstraints[Constraint 6]"
          TopLeft="715.625,251.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="183.375,59.9999999999999"
              Start="0,0"
              End="183.375,52.4999999999999">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,21.9899497487437" />
                  <mssgle:CubicBezierSegment
                    Point1="0,21.9899497487437"
                    Point2="0,25.9899497487437"
                    Point3="4,25.9899497487437" />
                  <mssgle:LineSegment
                    End="179.375,25.9899497487437" />
                  <mssgle:CubicBezierSegment
                    Point1="179.375,25.9899497487437"
                    Point2="183.375,25.9899497487437"
                    Point3="183.375,29.9899497487437" />
                  <mssgle:LineSegment
                    End="183.375,52.4999999999999" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container.PrecedenceConstraints[Constraint 8]"
          TopLeft="732.25,251.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="378.75,59.9999999999999"
              Start="0,0"
              End="378.75,52.4999999999999">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.7424593967517" />
                  <mssgle:CubicBezierSegment
                    Point1="0,16.7424593967517"
                    Point2="0,20.7424593967517"
                    Point3="4,20.7424593967517" />
                  <mssgle:LineSegment
                    End="374.75,20.7424593967517" />
                  <mssgle:CubicBezierSegment
                    Point1="374.75,20.7424593967517"
                    Point2="378.75,20.7424593967517"
                    Point3="378.75,24.7424593967517" />
                  <mssgle:LineSegment
                    End="378.75,52.4999999999999" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="1390,612"
          Size="1390,655"
          Id="Package\Iterate Offices\Sequence Container"
          TopLeft="5.5,5.5" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="1401,716"
          Size="1401,758"
          Id="Package\Iterate Offices"
          TopLeft="5.5,107.5" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 8 1]"
          TopLeft="706,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60.0000000000001"
              Start="0,0"
              End="0,52.5000000000001">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5000000000001" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <DtsEventHandler
    design-time-name="Package.EventHandlers[OnError]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="131,42"
          Id="Package.EventHandlers[OnError]\Email error"
          TopLeft="NaN,NaN" />
        <NodeLayout
          Size="217,42"
          Id="Package.EventHandlers[OnError]\Insert error log into database"
          TopLeft="195,93" />
        <EdgeLayout
          Id="Package.EventHandlers[OnError].PrecedenceConstraints[Constraint]"
          TopLeft="303.5,135">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="NaN,NaN"
              Start="0,0"
              End="NaN,NaN">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,NaN" />
                  <mssgle:CubicBezierSegment
                    Point1="0,NaN"
                    Point2="0,NaN"
                    Point3="-4,NaN" />
                  <mssgle:LineSegment
                    End="NaN,NaN" />
                  <mssgle:CubicBezierSegment
                    Point1="NaN,NaN"
                    Point2="NaN,NaN"
                    Point3="NaN,NaN" />
                  <mssgle:LineSegment
                    End="NaN,NaN" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-19.24134765625,NaN,30.4826953125,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <DtsEventHandler
    design-time-name="Package.EventHandlers[OnTaskFailed]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="131,42"
          Id="{7B24456E-71A1-42ED-8BF3-CE0C7825D6DF}"
          TopLeft="203,130" />
        <NodeLayout
          Size="178,42"
          Id="{1F31AF16-4BD6-4A53-A279-CE4F8DEAF5C6}"
          TopLeft="179,23" />
        <EdgeLayout
          Id="{160B05A4-98A6-4E8D-887A-A70D0F08AA63}"
          TopLeft="268.25,65">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,65"
              Start="0,0"
              End="0,57.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,57.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <TaskHost
    design-time-name="Package\Iterate Offices\Sequence Container\Appraisals">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="206,42"
          Id="Package\Iterate Offices\Sequence Container\Appraisals\JSON Generator Transform"
          TopLeft="238,413.5" />
        <NodeLayout
          Size="214,42"
          Id="Package\Iterate Offices\Sequence Container\Appraisals\Existing Appraisals from SQL"
          TopLeft="489.5,5.5" />
        <NodeLayout
          Size="162,42"
          Id="Package\Iterate Offices\Sequence Container\Appraisals\Trash Destination"
          TopLeft="505,413.5" />
        <NodeLayout
          Size="161,42"
          Id="Package\Iterate Offices\Sequence Container\Appraisals\Upsert Appraisals"
          TopLeft="269.5,923.5" />
        <NodeLayout
          Size="207,42"
          Id="Package\Iterate Offices\Sequence Container\Appraisals\JSON Parser Add id back in"
          TopLeft="237.5,617.5" />
        <NodeLayout
          Size="244,42"
          Id="Package\Iterate Offices\Sequence Container\Appraisals\Merge Join To Find Those to Insert"
          TopLeft="464,209.5" />
        <NodeLayout
          Size="154,42"
          Id="Package\Iterate Offices\Sequence Container\Appraisals\Insert or Ignore"
          TopLeft="509,311.5" />
        <NodeLayout
          Size="118,42"
          Id="Package\Iterate Offices\Sequence Container\Appraisals\API Sort"
          TopLeft="347,107.5" />
        <NodeLayout
          Size="120,42"
          Id="Package\Iterate Offices\Sequence Container\Appraisals\SQL Sort"
          TopLeft="526,107.5" />
        <NodeLayout
          Size="171,42"
          Id="Package\Iterate Offices\Sequence Container\Appraisals\Trash Destination 1"
          TopLeft="5.50000000000011,617.5" />
        <NodeLayout
          Size="176,42"
          Id="Package\Iterate Offices\Sequence Container\Appraisals\Web API Destination"
          TopLeft="253,515.5" />
        <NodeLayout
          Size="162,42"
          Id="Package\Iterate Offices\Sequence Container\Appraisals\Search Appraisals"
          TopLeft="287.5,5.5" />
        <NodeLayout
          Size="196,42"
          Id="Package\Iterate Offices\Sequence Container\Appraisals\Add accountid and origin"
          TopLeft="243,821.5" />
        <NodeLayout
          Size="109,42"
          Id="Package\Iterate Offices\Sequence Container\Appraisals\record"
          TopLeft="286.5,719.5" />
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Appraisals.Paths[WebApiDestination Error Output]"
          TopLeft="313,557.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-222,60.0000000000001"
              Start="0,0"
              End="-222,52.5000000000001">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.3243243243244" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.3243243243244"
                    Point2="0,24.3243243243244"
                    Point3="-4,24.3243243243244" />
                  <mssgle:LineSegment
                    End="-218,24.3243243243244" />
                  <mssgle:CubicBezierSegment
                    Point1="-218,24.3243243243244"
                    Point2="-222,24.3243243243244"
                    Point3="-222,28.3243243243244" />
                  <mssgle:LineSegment
                    End="-222,52.5000000000001" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-182.8215625,29.3243243243244,143.643125,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Appraisals.Paths[upsert]"
          TopLeft="561.666666666667,353.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-220.666666666667,60"
              Start="0,0"
              End="-220.666666666667,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.3701799485861" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.3701799485861"
                    Point2="0,24.3701799485861"
                    Point3="-4,24.3701799485861" />
                  <mssgle:LineSegment
                    End="-216.666666666667,24.3701799485861" />
                  <mssgle:CubicBezierSegment
                    Point1="-216.666666666667,24.3701799485861"
                    Point2="-220.666666666667,24.3701799485861"
                    Point3="-220.666666666667,28.3701799485861" />
                  <mssgle:LineSegment
                    End="-220.666666666667,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-124.900872395834,29.3701799485861,29.135078125,11.033203125"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Appraisals.Paths[Sort Output1]"
          TopLeft="406,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="140.666666666667,60"
              Start="0,0"
              End="140.666666666667,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.7654723127036" />
                  <mssgle:CubicBezierSegment
                    Point1="0,31.7654723127036"
                    Point2="0,35.7654723127036"
                    Point3="4,35.7654723127036" />
                  <mssgle:LineSegment
                    End="136.666666666667,35.7654723127036" />
                  <mssgle:CubicBezierSegment
                    Point1="136.666666666667,35.7654723127036"
                    Point2="140.666666666667,35.7654723127036"
                    Point3="140.666666666667,39.7654723127036" />
                  <mssgle:LineSegment
                    End="140.666666666667,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Appraisals.Paths[Sort Output]"
          TopLeft="586,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="39.3333333333334,60"
              Start="0,0"
              End="39.3333333333334,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.7654723127036" />
                  <mssgle:CubicBezierSegment
                    Point1="0,31.7654723127036"
                    Point2="0,35.7654723127036"
                    Point3="4,35.7654723127036" />
                  <mssgle:LineSegment
                    End="35.3333333333334,35.7654723127036" />
                  <mssgle:CubicBezierSegment
                    Point1="35.3333333333334,35.7654723127036"
                    Point2="39.3333333333334,35.7654723127036"
                    Point3="39.3333333333334,39.7654723127036" />
                  <mssgle:LineSegment
                    End="39.3333333333334,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Appraisals.Paths[Response Output]"
          TopLeft="369,557.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-28,60"
              Start="0,0"
              End="-28,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.3243243243243" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.3243243243243"
                    Point2="0,24.3243243243243"
                    Point3="-4,24.3243243243243" />
                  <mssgle:LineSegment
                    End="-24,24.3243243243243" />
                  <mssgle:CubicBezierSegment
                    Point1="-24,24.3243243243243"
                    Point2="-28,24.3243243243243"
                    Point3="-28,28.3243243243243" />
                  <mssgle:LineSegment
                    End="-28,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Appraisals.Paths[OLE DB Source Output]"
          TopLeft="596.5,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-10.5,60"
              Start="0,0"
              End="-10.5,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26" />
                  <mssgle:CubicBezierSegment
                    Point1="0,26"
                    Point2="0,30"
                    Point3="-4,30" />
                  <mssgle:LineSegment
                    End="-6.5,30" />
                  <mssgle:CubicBezierSegment
                    Point1="-6.5,30"
                    Point2="-10.5,30"
                    Point3="-10.5,34" />
                  <mssgle:LineSegment
                    End="-10.5,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Appraisals.Paths[Merge Join Output]"
          TopLeft="586,251.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Appraisals.Paths[JsonSourceOutput]"
          TopLeft="368.5,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="37.5,60"
              Start="0,0"
              End="37.5,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26" />
                  <mssgle:CubicBezierSegment
                    Point1="0,26"
                    Point2="0,30"
                    Point3="4,30" />
                  <mssgle:LineSegment
                    End="33.5,30" />
                  <mssgle:CubicBezierSegment
                    Point1="33.5,30"
                    Point2="37.5,30"
                    Point3="37.5,34" />
                  <mssgle:LineSegment
                    End="37.5,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Appraisals.Paths[JsonParserTransformOutput1]"
          TopLeft="341,659.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Appraisals.Paths[JsonParserTransformOutput]"
          TopLeft="341,761.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Appraisals.Paths[JsonGeneratorTransformOutput]"
          TopLeft="341,455.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Appraisals.Paths[ignore]"
          TopLeft="610.333333333333,353.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-24.3333333333334,60"
              Start="0,0"
              End="-24.3333333333334,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.3701799485861" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.3701799485861"
                    Point2="0,24.3701799485861"
                    Point3="-4,24.3701799485861" />
                  <mssgle:LineSegment
                    End="-20.3333333333334,24.3701799485861" />
                  <mssgle:CubicBezierSegment
                    Point1="-20.3333333333334,24.3701799485861"
                    Point2="-24.3333333333334,24.3701799485861"
                    Point3="-24.3333333333334,28.3701799485861" />
                  <mssgle:LineSegment
                    End="-24.3333333333334,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-26.5716080729167,29.3701799485861,28.8098828125,11.384765625"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Appraisals.Paths[Derived Column Output]"
          TopLeft="341,863.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="9,60"
              Start="0,0"
              End="9,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26" />
                  <mssgle:CubicBezierSegment
                    Point1="0,26"
                    Point2="0,30"
                    Point3="4,30" />
                  <mssgle:LineSegment
                    End="5,30" />
                  <mssgle:CubicBezierSegment
                    Point1="5,30"
                    Point2="9,30"
                    Point3="9,34" />
                  <mssgle:LineSegment
                    End="9,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Iterate Offices\Sequence Container\Appraisals\Existing Appraisals from SQL">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Iterate Offices\Sequence Container\Campaign Members">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="136,42"
          Id="Package\Iterate Offices\Sequence Container\Campaign Members\Read details"
          TopLeft="253,515.5" />
        <NodeLayout
          Size="198,42"
          Id="Package\Iterate Offices\Sequence Container\Campaign Members\Upsert CampaignMember"
          TopLeft="269.5,923.5" />
        <NodeLayout
          Size="141,42"
          Id="Package\Iterate Offices\Sequence Container\Campaign Members\Build request"
          TopLeft="238,413.5" />
        <NodeLayout
          Size="162,42"
          Id="Package\Iterate Offices\Sequence Container\Campaign Members\Trash Destination"
          TopLeft="505,413.5" />
        <NodeLayout
          Size="207,42"
          Id="Package\Iterate Offices\Sequence Container\Campaign Members\JSON Parser Add id back in"
          TopLeft="237.5,617.5" />
        <NodeLayout
          Size="109,42"
          Id="Package\Iterate Offices\Sequence Container\Campaign Members\record"
          TopLeft="286.5,719.5" />
        <NodeLayout
          Size="259,42"
          Id="Package\Iterate Offices\Sequence Container\Campaign Members\Existing Campaign Members from SQL"
          TopLeft="489.5,5.5" />
        <NodeLayout
          Size="244,42"
          Id="Package\Iterate Offices\Sequence Container\Campaign Members\Merge Join To Find Those to Insert"
          TopLeft="464,209.5" />
        <NodeLayout
          Size="118,42"
          Id="Package\Iterate Offices\Sequence Container\Campaign Members\API Sort"
          TopLeft="347,107.5" />
        <NodeLayout
          Size="120,42"
          Id="Package\Iterate Offices\Sequence Container\Campaign Members\SQL Sort"
          TopLeft="526,107.5" />
        <NodeLayout
          Size="171,42"
          Id="Package\Iterate Offices\Sequence Container\Campaign Members\Trash Destination 1"
          TopLeft="5.50000000000011,617.5" />
        <NodeLayout
          Size="154,42"
          Id="Package\Iterate Offices\Sequence Container\Campaign Members\Insert or Ignore"
          TopLeft="509,311.5" />
        <NodeLayout
          Size="166,42"
          Id="Package\Iterate Offices\Sequence Container\Campaign Members\Search Campaigns"
          TopLeft="287.5,5.5" />
        <NodeLayout
          Size="196,42"
          Id="Package\Iterate Offices\Sequence Container\Campaign Members\Add accountid and origin"
          TopLeft="243,821.5" />
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Campaign Members.Paths[WebApiDestination Error Output]"
          TopLeft="299.666666666667,557.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-208.666666666667,60"
              Start="0,0"
              End="-208.666666666667,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.4186046511628" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.4186046511628"
                    Point2="0,24.4186046511628"
                    Point3="-4,24.4186046511628" />
                  <mssgle:LineSegment
                    End="-204.666666666667,24.4186046511628" />
                  <mssgle:CubicBezierSegment
                    Point1="-204.666666666667,24.4186046511628"
                    Point2="-208.666666666667,24.4186046511628"
                    Point3="-208.666666666667,28.4186046511628" />
                  <mssgle:LineSegment
                    End="-208.666666666667,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-176.154895833334,29.4186046511628,143.643125,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Campaign Members.Paths[upsert]"
          TopLeft="561.666666666667,353.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-253.166666666667,60"
              Start="0,0"
              End="-253.166666666667,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.3701799485861" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.3701799485861"
                    Point2="0,24.3701799485861"
                    Point3="-4,24.3701799485861" />
                  <mssgle:LineSegment
                    End="-249.166666666667,24.3701799485861" />
                  <mssgle:CubicBezierSegment
                    Point1="-249.166666666667,24.3701799485861"
                    Point2="-253.166666666667,24.3701799485861"
                    Point3="-253.166666666667,28.3701799485861" />
                  <mssgle:LineSegment
                    End="-253.166666666667,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-141.150872395833,29.3701799485861,29.135078125,11.033203125"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Campaign Members.Paths[Sort Output1]"
          TopLeft="406,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="140.666666666667,60"
              Start="0,0"
              End="140.666666666667,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.7654723127036" />
                  <mssgle:CubicBezierSegment
                    Point1="0,31.7654723127036"
                    Point2="0,35.7654723127036"
                    Point3="4,35.7654723127036" />
                  <mssgle:LineSegment
                    End="136.666666666667,35.7654723127036" />
                  <mssgle:CubicBezierSegment
                    Point1="136.666666666667,35.7654723127036"
                    Point2="140.666666666667,35.7654723127036"
                    Point3="140.666666666667,39.7654723127036" />
                  <mssgle:LineSegment
                    End="140.666666666667,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Campaign Members.Paths[Sort Output]"
          TopLeft="586,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="39.3333333333334,60"
              Start="0,0"
              End="39.3333333333334,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.7654723127036" />
                  <mssgle:CubicBezierSegment
                    Point1="0,31.7654723127036"
                    Point2="0,35.7654723127036"
                    Point3="4,35.7654723127036" />
                  <mssgle:LineSegment
                    End="35.3333333333334,35.7654723127036" />
                  <mssgle:CubicBezierSegment
                    Point1="35.3333333333334,35.7654723127036"
                    Point2="39.3333333333334,35.7654723127036"
                    Point3="39.3333333333334,39.7654723127036" />
                  <mssgle:LineSegment
                    End="39.3333333333334,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Campaign Members.Paths[Response Output]"
          TopLeft="341.666666666667,557.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Campaign Members.Paths[OLE DB Source Output]"
          TopLeft="619,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-33,60"
              Start="0,0"
              End="-33,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26" />
                  <mssgle:CubicBezierSegment
                    Point1="0,26"
                    Point2="0,30"
                    Point3="-4,30" />
                  <mssgle:LineSegment
                    End="-29,30" />
                  <mssgle:CubicBezierSegment
                    Point1="-29,30"
                    Point2="-33,30"
                    Point3="-33,34" />
                  <mssgle:LineSegment
                    End="-33,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Campaign Members.Paths[Merge Join Output]"
          TopLeft="586,251.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Campaign Members.Paths[JsonSourceOutput]"
          TopLeft="370.5,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="35.5,60"
              Start="0,0"
              End="35.5,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26" />
                  <mssgle:CubicBezierSegment
                    Point1="0,26"
                    Point2="0,30"
                    Point3="4,30" />
                  <mssgle:LineSegment
                    End="31.5,30" />
                  <mssgle:CubicBezierSegment
                    Point1="31.5,30"
                    Point2="35.5,30"
                    Point3="35.5,34" />
                  <mssgle:LineSegment
                    End="35.5,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Campaign Members.Paths[JsonParserTransformOutput1]"
          TopLeft="341,659.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Campaign Members.Paths[JsonParserTransformOutput]"
          TopLeft="341,761.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Campaign Members.Paths[JsonGeneratorTransformOutput]"
          TopLeft="308.5,455.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="12.5,60"
              Start="0,0"
              End="12.5,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26" />
                  <mssgle:CubicBezierSegment
                    Point1="0,26"
                    Point2="0,30"
                    Point3="4,30" />
                  <mssgle:LineSegment
                    End="8.5,30" />
                  <mssgle:CubicBezierSegment
                    Point1="8.5,30"
                    Point2="12.5,30"
                    Point3="12.5,34" />
                  <mssgle:LineSegment
                    End="12.5,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Campaign Members.Paths[ignore]"
          TopLeft="610.333333333333,353.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-24.3333333333334,60"
              Start="0,0"
              End="-24.3333333333334,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.3701799485861" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.3701799485861"
                    Point2="0,24.3701799485861"
                    Point3="-4,24.3701799485861" />
                  <mssgle:LineSegment
                    End="-20.3333333333334,24.3701799485861" />
                  <mssgle:CubicBezierSegment
                    Point1="-20.3333333333334,24.3701799485861"
                    Point2="-24.3333333333334,24.3701799485861"
                    Point3="-24.3333333333334,28.3701799485861" />
                  <mssgle:LineSegment
                    End="-24.3333333333334,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-26.5716080729167,29.3701799485861,28.8098828125,11.384765625"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Campaign Members.Paths[Derived Column Output]"
          TopLeft="341,863.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="27.5,60"
              Start="0,0"
              End="27.5,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26" />
                  <mssgle:CubicBezierSegment
                    Point1="0,26"
                    Point2="0,30"
                    Point3="4,30" />
                  <mssgle:LineSegment
                    End="23.5,30" />
                  <mssgle:CubicBezierSegment
                    Point1="23.5,30"
                    Point2="27.5,30"
                    Point3="27.5,34" />
                  <mssgle:LineSegment
                    End="27.5,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Iterate Offices\Sequence Container\Campaign Members\Existing Campaign Members from SQL">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Iterate Offices\Sequence Container\Campaigns">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="136,42"
          Id="Package\Iterate Offices\Sequence Container\Campaigns\Read details"
          TopLeft="253,515.5" />
        <NodeLayout
          Size="160,42"
          Id="Package\Iterate Offices\Sequence Container\Campaigns\Upsert Campaign"
          TopLeft="269.5,923.5" />
        <NodeLayout
          Size="141,42"
          Id="Package\Iterate Offices\Sequence Container\Campaigns\Build request"
          TopLeft="238,413.5" />
        <NodeLayout
          Size="162,42"
          Id="Package\Iterate Offices\Sequence Container\Campaigns\Trash Destination"
          TopLeft="505,413.5" />
        <NodeLayout
          Size="207,42"
          Id="Package\Iterate Offices\Sequence Container\Campaigns\JSON Parser Add id back in"
          TopLeft="237.5,617.5" />
        <NodeLayout
          Size="109,42"
          Id="Package\Iterate Offices\Sequence Container\Campaigns\record"
          TopLeft="286.5,719.5" />
        <NodeLayout
          Size="218,42"
          Id="Package\Iterate Offices\Sequence Container\Campaigns\Existing Campaigns from SQL"
          TopLeft="489.5,5.5" />
        <NodeLayout
          Size="244,42"
          Id="Package\Iterate Offices\Sequence Container\Campaigns\Merge Join To Find Those to Insert"
          TopLeft="464,209.5" />
        <NodeLayout
          Size="118,42"
          Id="Package\Iterate Offices\Sequence Container\Campaigns\API Sort"
          TopLeft="347,107.5" />
        <NodeLayout
          Size="120,42"
          Id="Package\Iterate Offices\Sequence Container\Campaigns\SQL Sort"
          TopLeft="526,107.5" />
        <NodeLayout
          Size="171,42"
          Id="Package\Iterate Offices\Sequence Container\Campaigns\Trash Destination 1"
          TopLeft="5.50000000000011,617.5" />
        <NodeLayout
          Size="154,42"
          Id="Package\Iterate Offices\Sequence Container\Campaigns\Insert or Ignore"
          TopLeft="509,311.5" />
        <NodeLayout
          Size="166,42"
          Id="Package\Iterate Offices\Sequence Container\Campaigns\Search Campaigns"
          TopLeft="287.5,5.5" />
        <NodeLayout
          Size="196,42"
          Id="Package\Iterate Offices\Sequence Container\Campaigns\Add accountid and origin"
          TopLeft="243,821.5" />
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Campaigns.Paths[WebApiDestination Error Output]"
          TopLeft="299.666666666667,557.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-208.666666666667,60"
              Start="0,0"
              End="-208.666666666667,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.4186046511628" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.4186046511628"
                    Point2="0,24.4186046511628"
                    Point3="-4,24.4186046511628" />
                  <mssgle:LineSegment
                    End="-204.666666666667,24.4186046511628" />
                  <mssgle:CubicBezierSegment
                    Point1="-204.666666666667,24.4186046511628"
                    Point2="-208.666666666667,24.4186046511628"
                    Point3="-208.666666666667,28.4186046511628" />
                  <mssgle:LineSegment
                    End="-208.666666666667,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-176.154895833333,29.4186046511628,143.643125,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Campaigns.Paths[upsert]"
          TopLeft="561.666666666667,353.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-253.166666666667,60"
              Start="0,0"
              End="-253.166666666667,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.3701799485861" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.3701799485861"
                    Point2="0,24.3701799485861"
                    Point3="-4,24.3701799485861" />
                  <mssgle:LineSegment
                    End="-249.166666666667,24.3701799485861" />
                  <mssgle:CubicBezierSegment
                    Point1="-249.166666666667,24.3701799485861"
                    Point2="-253.166666666667,24.3701799485861"
                    Point3="-253.166666666667,28.3701799485861" />
                  <mssgle:LineSegment
                    End="-253.166666666667,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-141.150872395833,29.3701799485861,29.135078125,11.033203125"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Campaigns.Paths[Sort Output1]"
          TopLeft="406,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="140.666666666667,60"
              Start="0,0"
              End="140.666666666667,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.7654723127036" />
                  <mssgle:CubicBezierSegment
                    Point1="0,31.7654723127036"
                    Point2="0,35.7654723127036"
                    Point3="4,35.7654723127036" />
                  <mssgle:LineSegment
                    End="136.666666666667,35.7654723127036" />
                  <mssgle:CubicBezierSegment
                    Point1="136.666666666667,35.7654723127036"
                    Point2="140.666666666667,35.7654723127036"
                    Point3="140.666666666667,39.7654723127036" />
                  <mssgle:LineSegment
                    End="140.666666666667,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Campaigns.Paths[Sort Output]"
          TopLeft="586,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="39.3333333333334,60"
              Start="0,0"
              End="39.3333333333334,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.7654723127036" />
                  <mssgle:CubicBezierSegment
                    Point1="0,31.7654723127036"
                    Point2="0,35.7654723127036"
                    Point3="4,35.7654723127036" />
                  <mssgle:LineSegment
                    End="35.3333333333334,35.7654723127036" />
                  <mssgle:CubicBezierSegment
                    Point1="35.3333333333334,35.7654723127036"
                    Point2="39.3333333333334,35.7654723127036"
                    Point3="39.3333333333334,39.7654723127036" />
                  <mssgle:LineSegment
                    End="39.3333333333334,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Campaigns.Paths[Response Output]"
          TopLeft="341.666666666667,557.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Campaigns.Paths[OLE DB Source Output]"
          TopLeft="598.5,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-12.5,60"
              Start="0,0"
              End="-12.5,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26" />
                  <mssgle:CubicBezierSegment
                    Point1="0,26"
                    Point2="0,30"
                    Point3="-4,30" />
                  <mssgle:LineSegment
                    End="-8.5,30" />
                  <mssgle:CubicBezierSegment
                    Point1="-8.5,30"
                    Point2="-12.5,30"
                    Point3="-12.5,34" />
                  <mssgle:LineSegment
                    End="-12.5,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Campaigns.Paths[Merge Join Output]"
          TopLeft="586,251.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Campaigns.Paths[JsonSourceOutput]"
          TopLeft="370.5,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="35.5,60"
              Start="0,0"
              End="35.5,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26" />
                  <mssgle:CubicBezierSegment
                    Point1="0,26"
                    Point2="0,30"
                    Point3="4,30" />
                  <mssgle:LineSegment
                    End="31.5,30" />
                  <mssgle:CubicBezierSegment
                    Point1="31.5,30"
                    Point2="35.5,30"
                    Point3="35.5,34" />
                  <mssgle:LineSegment
                    End="35.5,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Campaigns.Paths[JsonParserTransformOutput1]"
          TopLeft="341,659.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Campaigns.Paths[JsonParserTransformOutput]"
          TopLeft="341,761.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Campaigns.Paths[JsonGeneratorTransformOutput]"
          TopLeft="308.5,455.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="12.5,60"
              Start="0,0"
              End="12.5,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26" />
                  <mssgle:CubicBezierSegment
                    Point1="0,26"
                    Point2="0,30"
                    Point3="4,30" />
                  <mssgle:LineSegment
                    End="8.5,30" />
                  <mssgle:CubicBezierSegment
                    Point1="8.5,30"
                    Point2="12.5,30"
                    Point3="12.5,34" />
                  <mssgle:LineSegment
                    End="12.5,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Campaigns.Paths[ignore]"
          TopLeft="610.333333333333,353.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-24.3333333333334,60"
              Start="0,0"
              End="-24.3333333333334,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.3701799485861" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.3701799485861"
                    Point2="0,24.3701799485861"
                    Point3="-4,24.3701799485861" />
                  <mssgle:LineSegment
                    End="-20.3333333333334,24.3701799485861" />
                  <mssgle:CubicBezierSegment
                    Point1="-20.3333333333334,24.3701799485861"
                    Point2="-24.3333333333334,24.3701799485861"
                    Point3="-24.3333333333334,28.3701799485861" />
                  <mssgle:LineSegment
                    End="-24.3333333333334,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-26.5716080729167,29.3701799485861,28.8098828125,11.384765625"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Campaigns.Paths[Derived Column Output]"
          TopLeft="341,863.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="8.5,60"
              Start="0,0"
              End="8.5,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26" />
                  <mssgle:CubicBezierSegment
                    Point1="0,26"
                    Point2="0,30"
                    Point3="4,30" />
                  <mssgle:LineSegment
                    End="4.5,30" />
                  <mssgle:CubicBezierSegment
                    Point1="4.5,30"
                    Point2="8.5,30"
                    Point3="8.5,34" />
                  <mssgle:LineSegment
                    End="8.5,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Iterate Offices\Sequence Container\Campaigns\Existing Campaigns from SQL">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Iterate Offices\Sequence Container\Contact search">
    <LayoutInfo>
      <GraphLayout
        Capacity="64" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="154,42"
          Id="Package\Iterate Offices\Sequence Container\Contact search\Insert or Ignore"
          TopLeft="400,311.5" />
        <NodeLayout
          Size="120,42"
          Id="Package\Iterate Offices\Sequence Container\Contact search\Multicast"
          TopLeft="172,719.5" />
        <NodeLayout
          Size="130,42"
          Id="Package\Iterate Offices\Sequence Container\Contact search\Merge Join"
          TopLeft="167,1025.5" />
        <NodeLayout
          Size="113,42"
          Id="Package\Iterate Offices\Sequence Container\Contact search\custom"
          TopLeft="175.5,821.5" />
        <NodeLayout
          Size="120,42"
          Id="Package\Iterate Offices\Sequence Container\Contact search\SQL Sort"
          TopLeft="237,107.5" />
        <NodeLayout
          Size="171,42"
          Id="Package\Iterate Offices\Sequence Container\Contact search\Trash Destination 1"
          TopLeft="510,519" />
        <NodeLayout
          Size="98,42"
          Id="Package\Iterate Offices\Sequence Container\Contact search\Sort"
          TopLeft="183,923.5" />
        <NodeLayout
          Size="176,42"
          Id="Package\Iterate Offices\Sequence Container\Contact search\Web API Destination"
          TopLeft="144,515.5" />
        <NodeLayout
          Size="155,42"
          Id="Package\Iterate Offices\Sequence Container\Contact search\Search Contacts"
          TopLeft="399.5,5.5" />
        <NodeLayout
          Size="244,42"
          Id="Package\Iterate Offices\Sequence Container\Contact search\Merge Join To Find Those to Insert"
          TopLeft="355,209.5" />
        <NodeLayout
          Size="206,42"
          Id="Package\Iterate Offices\Sequence Container\Contact search\JSON Generator Transform"
          TopLeft="129,413.5" />
        <NodeLayout
          Size="149,42"
          Id="Package\Iterate Offices\Sequence Container\Contact search\Upsert Contact"
          TopLeft="157.5,1229.5" />
        <NodeLayout
          Size="118,42"
          Id="Package\Iterate Offices\Sequence Container\Contact search\API Sort"
          TopLeft="418,107.5" />
        <NodeLayout
          Size="207,42"
          Id="Package\Iterate Offices\Sequence Container\Contact search\Existing Contacts from SQL"
          TopLeft="131.5,5.5" />
        <NodeLayout
          Size="162,42"
          Id="Package\Iterate Offices\Sequence Container\Contact search\Trash Destination"
          TopLeft="396,413.5" />
        <NodeLayout
          Size="107,42"
          Id="Package\Iterate Offices\Sequence Container\Contact search\Sort 1"
          TopLeft="15.5000000000001,923.5" />
        <NodeLayout
          Size="207,42"
          Id="Package\Iterate Offices\Sequence Container\Contact search\JSON Parser Add id back in"
          TopLeft="128.5,617.5" />
        <NodeLayout
          Size="196,42"
          Id="Package\Iterate Offices\Sequence Container\Contact search\Add accountid and origin"
          TopLeft="134,1127.5" />
        <NodeLayout
          Size="109,42"
          Id="Package\Iterate Offices\Sequence Container\Contact search\record"
          TopLeft="5.50000000000011,821.5" />
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Contact search.Paths[JsonParserTransformOutput2]"
          TopLeft="232,659.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Contact search.Paths[JsonParserTransformOutput1]"
          TopLeft="60.0000000000001,863.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="9,60"
              Start="0,0"
              End="9,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26" />
                  <mssgle:CubicBezierSegment
                    Point1="0,26"
                    Point2="0,30"
                    Point3="4,30" />
                  <mssgle:LineSegment
                    End="5,30" />
                  <mssgle:CubicBezierSegment
                    Point1="5,30"
                    Point2="9,30"
                    Point3="9,34" />
                  <mssgle:LineSegment
                    End="9,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Contact search.Paths[JsonParserTransformOutput]"
          TopLeft="232,863.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Contact search.Paths[JsonGeneratorTransformOutput]"
          TopLeft="232,455.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Contact search.Paths[ignore]"
          TopLeft="501.333333333333,353.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-24.3333333333333,60"
              Start="0,0"
              End="-24.3333333333333,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.3701799485861" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.3701799485861"
                    Point2="0,24.3701799485861"
                    Point3="-4,24.3701799485861" />
                  <mssgle:LineSegment
                    End="-20.3333333333333,24.3701799485861" />
                  <mssgle:CubicBezierSegment
                    Point1="-20.3333333333333,24.3701799485861"
                    Point2="-24.3333333333333,24.3701799485861"
                    Point3="-24.3333333333333,28.3701799485861" />
                  <mssgle:LineSegment
                    End="-24.3333333333333,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-26.5716080729167,29.3701799485861,28.8098828125,11.384765625"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Contact search.Paths[Derived Column Output]"
          TopLeft="232,1169.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Contact search.Paths[WebApiDestination Error Output]"
          TopLeft="320,538.25">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="190,0"
              Start="0,0"
              End="182.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="182.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="19.4284375,5,143.643125,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Contact search.Paths[upsert]"
          TopLeft="452.666666666667,353.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-220.666666666667,60"
              Start="0,0"
              End="-220.666666666667,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.3701799485861" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.3701799485861"
                    Point2="0,24.3701799485861"
                    Point3="-4,24.3701799485861" />
                  <mssgle:LineSegment
                    End="-216.666666666667,24.3701799485861" />
                  <mssgle:CubicBezierSegment
                    Point1="-216.666666666667,24.3701799485861"
                    Point2="-220.666666666667,24.3701799485861"
                    Point3="-220.666666666667,28.3701799485861" />
                  <mssgle:LineSegment
                    End="-220.666666666667,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-124.900872395834,29.3701799485861,29.135078125,11.033203125"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Contact search.Paths[Sort Output3]"
          TopLeft="477,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="39.3333333333334,60"
              Start="0,0"
              End="39.3333333333334,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.7654723127036" />
                  <mssgle:CubicBezierSegment
                    Point1="0,31.7654723127036"
                    Point2="0,35.7654723127036"
                    Point3="4,35.7654723127036" />
                  <mssgle:LineSegment
                    End="35.3333333333334,35.7654723127036" />
                  <mssgle:CubicBezierSegment
                    Point1="35.3333333333334,35.7654723127036"
                    Point2="39.3333333333334,35.7654723127036"
                    Point3="39.3333333333334,39.7654723127036" />
                  <mssgle:LineSegment
                    End="39.3333333333334,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Contact search.Paths[Sort Output2]"
          TopLeft="69.0000000000001,965.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="142.666666666667,60"
              Start="0,0"
              End="142.666666666667,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.5623100303951" />
                  <mssgle:CubicBezierSegment
                    Point1="0,31.5623100303951"
                    Point2="0,35.5623100303951"
                    Point3="4,35.5623100303951" />
                  <mssgle:LineSegment
                    End="138.666666666667,35.5623100303951" />
                  <mssgle:CubicBezierSegment
                    Point1="138.666666666667,35.5623100303951"
                    Point2="142.666666666667,35.5623100303951"
                    Point3="142.666666666667,39.5623100303951" />
                  <mssgle:LineSegment
                    End="142.666666666667,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Contact search.Paths[Sort Output1]"
          TopLeft="297,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="140.666666666667,60"
              Start="0,0"
              End="140.666666666667,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.7654723127036" />
                  <mssgle:CubicBezierSegment
                    Point1="0,31.7654723127036"
                    Point2="0,35.7654723127036"
                    Point3="4,35.7654723127036" />
                  <mssgle:LineSegment
                    End="136.666666666667,35.7654723127036" />
                  <mssgle:CubicBezierSegment
                    Point1="136.666666666667,35.7654723127036"
                    Point2="140.666666666667,35.7654723127036"
                    Point3="140.666666666667,39.7654723127036" />
                  <mssgle:LineSegment
                    End="140.666666666667,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Contact search.Paths[Sort Output]"
          TopLeft="232,965.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="20.3333333333334,60"
              Start="0,0"
              End="20.3333333333334,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.5623100303951" />
                  <mssgle:CubicBezierSegment
                    Point1="0,31.5623100303951"
                    Point2="0,35.5623100303951"
                    Point3="4,35.5623100303951" />
                  <mssgle:LineSegment
                    End="16.3333333333334,35.5623100303951" />
                  <mssgle:CubicBezierSegment
                    Point1="16.3333333333334,35.5623100303951"
                    Point2="20.3333333333334,35.5623100303951"
                    Point3="20.3333333333334,39.5623100303951" />
                  <mssgle:LineSegment
                    End="20.3333333333334,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Contact search.Paths[Response Output]"
          TopLeft="232,557.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Contact search.Paths[OLE DB Source Output]"
          TopLeft="235,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="62,60"
              Start="0,0"
              End="62,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26" />
                  <mssgle:CubicBezierSegment
                    Point1="0,26"
                    Point2="0,30"
                    Point3="4,30" />
                  <mssgle:LineSegment
                    End="58,30" />
                  <mssgle:CubicBezierSegment
                    Point1="58,30"
                    Point2="62,30"
                    Point3="62,34" />
                  <mssgle:LineSegment
                    End="62,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Contact search.Paths[Multicast Output 2]"
          TopLeft="213.333333333333,761.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-153.333333333333,60"
              Start="0,0"
              End="-153.333333333333,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.4736842105263" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.4736842105263"
                    Point2="0,24.4736842105263"
                    Point3="-4,24.4736842105263" />
                  <mssgle:LineSegment
                    End="-149.333333333333,24.4736842105263" />
                  <mssgle:CubicBezierSegment
                    Point1="-149.333333333333,24.4736842105263"
                    Point2="-153.333333333333,24.4736842105263"
                    Point3="-153.333333333333,28.4736842105263" />
                  <mssgle:LineSegment
                    End="-153.333333333333,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Contact search.Paths[Multicast Output 1]"
          TopLeft="250.666666666667,761.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-18.6666666666667,60"
              Start="0,0"
              End="-18.6666666666667,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.4736842105263" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.4736842105263"
                    Point2="0,24.4736842105263"
                    Point3="-4,24.4736842105263" />
                  <mssgle:LineSegment
                    End="-14.6666666666667,24.4736842105263" />
                  <mssgle:CubicBezierSegment
                    Point1="-14.6666666666667,24.4736842105263"
                    Point2="-18.6666666666667,24.4736842105263"
                    Point3="-18.6666666666667,28.4736842105263" />
                  <mssgle:LineSegment
                    End="-18.6666666666667,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Contact search.Paths[Merge Join Output1]"
          TopLeft="232,1067.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Contact search.Paths[Merge Join Output]"
          TopLeft="477,251.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Contact search.Paths[JsonSourceOutput]"
          TopLeft="477,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Iterate Offices\Sequence Container\Contact search\Existing Contacts from SQL">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">View</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Iterate Offices\Sequence Container\Lead search">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="207,42"
          Id="Package\Iterate Offices\Sequence Container\Lead search\JSON Parser Add id back in"
          TopLeft="237.5,617.5" />
        <NodeLayout
          Size="244,42"
          Id="Package\Iterate Offices\Sequence Container\Lead search\Merge Join To Find Those to Insert"
          TopLeft="464,209.5" />
        <NodeLayout
          Size="140,42"
          Id="Package\Iterate Offices\Sequence Container\Lead search\Upsert Leads"
          TopLeft="269.5,923.5" />
        <NodeLayout
          Size="155,42"
          Id="Package\Iterate Offices\Sequence Container\Lead search\Conditional Split"
          TopLeft="481,754" />
        <NodeLayout
          Size="154,42"
          Id="Package\Iterate Offices\Sequence Container\Lead search\Insert or Ignore"
          TopLeft="509,311.5" />
        <NodeLayout
          Size="120,42"
          Id="Package\Iterate Offices\Sequence Container\Lead search\SQL Sort"
          TopLeft="526,107.5" />
        <NodeLayout
          Size="171,42"
          Id="Package\Iterate Offices\Sequence Container\Lead search\Trash Destination 1"
          TopLeft="5.50000000000011,617.5" />
        <NodeLayout
          Size="176,42"
          Id="Package\Iterate Offices\Sequence Container\Lead search\Web API Destination"
          TopLeft="253,515.5" />
        <NodeLayout
          Size="141,42"
          Id="Package\Iterate Offices\Sequence Container\Lead search\Search Leads"
          TopLeft="287.5,5.5" />
        <NodeLayout
          Size="118,42"
          Id="Package\Iterate Offices\Sequence Container\Lead search\API Sort"
          TopLeft="347,107.5" />
        <NodeLayout
          Size="109,42"
          Id="Package\Iterate Offices\Sequence Container\Lead search\record"
          TopLeft="286.5,719.5" />
        <NodeLayout
          Size="162,42"
          Id="Package\Iterate Offices\Sequence Container\Lead search\Trash Destination"
          TopLeft="505,413.5" />
        <NodeLayout
          Size="206,42"
          Id="Package\Iterate Offices\Sequence Container\Lead search\JSON Generator Transform"
          TopLeft="238,413.5" />
        <NodeLayout
          Size="193,42"
          Id="Package\Iterate Offices\Sequence Container\Lead search\Existing Leads from SQL"
          TopLeft="489.5,5.5" />
        <NodeLayout
          Size="196,42"
          Id="Package\Iterate Offices\Sequence Container\Lead search\Add accountid and origin"
          TopLeft="243,821.5" />
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Lead search.Paths[Response Output]"
          TopLeft="369,557.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-28,60"
              Start="0,0"
              End="-28,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.3243243243243" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.3243243243243"
                    Point2="0,24.3243243243243"
                    Point3="-4,24.3243243243243" />
                  <mssgle:LineSegment
                    End="-24,24.3243243243243" />
                  <mssgle:CubicBezierSegment
                    Point1="-24,24.3243243243243"
                    Point2="-28,24.3243243243243"
                    Point3="-28,28.3243243243243" />
                  <mssgle:LineSegment
                    End="-28,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Lead search.Paths[OLE DB Source Output]"
          TopLeft="586,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Lead search.Paths[Merge Join Output]"
          TopLeft="586,251.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Lead search.Paths[JsonSourceOutput]"
          TopLeft="358,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="48,60"
              Start="0,0"
              End="48,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26" />
                  <mssgle:CubicBezierSegment
                    Point1="0,26"
                    Point2="0,30"
                    Point3="4,30" />
                  <mssgle:LineSegment
                    End="44,30" />
                  <mssgle:CubicBezierSegment
                    Point1="44,30"
                    Point2="48,30"
                    Point3="48,34" />
                  <mssgle:LineSegment
                    End="48,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Lead search.Paths[JsonParserTransformOutput1]"
          TopLeft="395.5,740.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="85.5,34.5"
              Start="0,0"
              End="78,34.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="38.75,0" />
                  <mssgle:CubicBezierSegment
                    Point1="38.75,0"
                    Point2="42.75,0"
                    Point3="42.75,4" />
                  <mssgle:LineSegment
                    End="42.75,30.5" />
                  <mssgle:CubicBezierSegment
                    Point1="42.75,30.5"
                    Point2="42.75,34.5"
                    Point3="46.75,34.5" />
                  <mssgle:LineSegment
                    End="78,34.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Lead search.Paths[JsonParserTransformOutput]"
          TopLeft="341,659.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Lead search.Paths[JsonGeneratorTransformOutput]"
          TopLeft="341,455.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Lead search.Paths[ignore]"
          TopLeft="610.333333333333,353.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-24.3333333333334,60"
              Start="0,0"
              End="-24.3333333333334,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.3701799485861" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.3701799485861"
                    Point2="0,24.3701799485861"
                    Point3="-4,24.3701799485861" />
                  <mssgle:LineSegment
                    End="-20.3333333333334,24.3701799485861" />
                  <mssgle:CubicBezierSegment
                    Point1="-20.3333333333334,24.3701799485861"
                    Point2="-24.3333333333334,24.3701799485861"
                    Point3="-24.3333333333334,28.3701799485861" />
                  <mssgle:LineSegment
                    End="-24.3333333333334,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-26.5716080729167,29.3701799485861,28.8098828125,11.384765625"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Lead search.Paths[Derived Column Output]"
          TopLeft="340.25,863.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Lead search.Paths[Case 1]"
          TopLeft="558.5,796">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-217.5,25.5"
              Start="0,0"
              End="-217.5,18">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,8.75" />
                  <mssgle:CubicBezierSegment
                    Point1="0,8.75"
                    Point2="0,12.75"
                    Point3="-4,12.75" />
                  <mssgle:LineSegment
                    End="-213.5,12.75" />
                  <mssgle:CubicBezierSegment
                    Point1="-213.5,12.75"
                    Point2="-217.5,12.75"
                    Point3="-217.5,16.75" />
                  <mssgle:LineSegment
                    End="-217.5,18" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-123.9680859375,17.75,30.436171875,9.5537109375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Lead search.Paths[WebApiDestination Error Output]"
          TopLeft="313,557.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-222,60.0000000000001"
              Start="0,0"
              End="-222,52.5000000000001">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.3243243243244" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.3243243243244"
                    Point2="0,24.3243243243244"
                    Point3="-4,24.3243243243244" />
                  <mssgle:LineSegment
                    End="-218,24.3243243243244" />
                  <mssgle:CubicBezierSegment
                    Point1="-218,24.3243243243244"
                    Point2="-222,24.3243243243244"
                    Point3="-222,28.3243243243244" />
                  <mssgle:LineSegment
                    End="-222,52.5000000000001" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-182.8215625,29.3243243243244,143.643125,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Lead search.Paths[upsert]"
          TopLeft="561.666666666667,353.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-220.666666666667,60"
              Start="0,0"
              End="-220.666666666667,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.3701799485861" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.3701799485861"
                    Point2="0,24.3701799485861"
                    Point3="-4,24.3701799485861" />
                  <mssgle:LineSegment
                    End="-216.666666666667,24.3701799485861" />
                  <mssgle:CubicBezierSegment
                    Point1="-216.666666666667,24.3701799485861"
                    Point2="-220.666666666667,24.3701799485861"
                    Point3="-220.666666666667,28.3701799485861" />
                  <mssgle:LineSegment
                    End="-220.666666666667,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-133.713372395833,29.3701799485861,46.760078125,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Lead search.Paths[Sort Output1]"
          TopLeft="406,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="140.666666666667,60"
              Start="0,0"
              End="140.666666666667,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.7654723127036" />
                  <mssgle:CubicBezierSegment
                    Point1="0,31.7654723127036"
                    Point2="0,35.7654723127036"
                    Point3="4,35.7654723127036" />
                  <mssgle:LineSegment
                    End="136.666666666667,35.7654723127036" />
                  <mssgle:CubicBezierSegment
                    Point1="136.666666666667,35.7654723127036"
                    Point2="140.666666666667,35.7654723127036"
                    Point3="140.666666666667,39.7654723127036" />
                  <mssgle:LineSegment
                    End="140.666666666667,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Lead search.Paths[Sort Output]"
          TopLeft="586,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="39.3333333333334,60"
              Start="0,0"
              End="39.3333333333334,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.7654723127036" />
                  <mssgle:CubicBezierSegment
                    Point1="0,31.7654723127036"
                    Point2="0,35.7654723127036"
                    Point3="4,35.7654723127036" />
                  <mssgle:LineSegment
                    End="35.3333333333334,35.7654723127036" />
                  <mssgle:CubicBezierSegment
                    Point1="35.3333333333334,35.7654723127036"
                    Point2="39.3333333333334,35.7654723127036"
                    Point3="39.3333333333334,39.7654723127036" />
                  <mssgle:LineSegment
                    End="39.3333333333334,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Iterate Offices\Sequence Container\Lead search\Existing Leads from SQL">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Iterate Offices\Sequence Container\Listing search">
    <LayoutInfo>
      <GraphLayout
        Capacity="64" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="154,42"
          Id="Package\Iterate Offices\Sequence Container\Listing search\Insert or Ignore"
          TopLeft="400,311.5" />
        <NodeLayout
          Size="120,42"
          Id="Package\Iterate Offices\Sequence Container\Listing search\Multicast"
          TopLeft="172,719.5" />
        <NodeLayout
          Size="202,42"
          Id="Package\Iterate Offices\Sequence Container\Listing search\Write to ListingWebQueue"
          TopLeft="573,1166" />
        <NodeLayout
          Size="130,42"
          Id="Package\Iterate Offices\Sequence Container\Listing search\Merge Join"
          TopLeft="167,1025.5" />
        <NodeLayout
          Size="113,42"
          Id="Package\Iterate Offices\Sequence Container\Listing search\custom"
          TopLeft="175.5,821.5" />
        <NodeLayout
          Size="120,42"
          Id="Package\Iterate Offices\Sequence Container\Listing search\SQL Sort"
          TopLeft="237,107.5" />
        <NodeLayout
          Size="171,42"
          Id="Package\Iterate Offices\Sequence Container\Listing search\Trash Destination 1"
          TopLeft="510,519" />
        <NodeLayout
          Size="98,42"
          Id="Package\Iterate Offices\Sequence Container\Listing search\Sort"
          TopLeft="183,923.5" />
        <NodeLayout
          Size="176,42"
          Id="Package\Iterate Offices\Sequence Container\Listing search\Web API Destination"
          TopLeft="144,515.5" />
        <NodeLayout
          Size="149,42"
          Id="Package\Iterate Offices\Sequence Container\Listing search\Search Listings"
          TopLeft="399.5,5.5" />
        <NodeLayout
          Size="244,42"
          Id="Package\Iterate Offices\Sequence Container\Listing search\Merge Join To Find Those to Insert"
          TopLeft="355,209.5" />
        <NodeLayout
          Size="206,42"
          Id="Package\Iterate Offices\Sequence Container\Listing search\JSON Generator Transform"
          TopLeft="129,413.5" />
        <NodeLayout
          Size="143,42"
          Id="Package\Iterate Offices\Sequence Container\Listing search\Upsert Listing"
          TopLeft="583.5,1070.5" />
        <NodeLayout
          Size="118,42"
          Id="Package\Iterate Offices\Sequence Container\Listing search\API Sort"
          TopLeft="418,107.5" />
        <NodeLayout
          Size="201,42"
          Id="Package\Iterate Offices\Sequence Container\Listing search\Existing Listings from SQL"
          TopLeft="131.5,5.5" />
        <NodeLayout
          Size="162,42"
          Id="Package\Iterate Offices\Sequence Container\Listing search\Trash Destination"
          TopLeft="396,413.5" />
        <NodeLayout
          Size="107,42"
          Id="Package\Iterate Offices\Sequence Container\Listing search\Sort 1"
          TopLeft="15.5000000000001,923.5" />
        <NodeLayout
          Size="207,42"
          Id="Package\Iterate Offices\Sequence Container\Listing search\JSON Parser Add id back in"
          TopLeft="128.5,617.5" />
        <NodeLayout
          Size="196,42"
          Id="Package\Iterate Offices\Sequence Container\Listing search\Add accountid and origin"
          TopLeft="134,1127.5" />
        <NodeLayout
          Size="109,42"
          Id="Package\Iterate Offices\Sequence Container\Listing search\record"
          TopLeft="5.50000000000011,821.5" />
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Listing search.Paths[Response Output]"
          TopLeft="232,557.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Listing search.Paths[OLE DB Source Output]"
          TopLeft="232,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="65,60"
              Start="0,0"
              End="65,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26" />
                  <mssgle:CubicBezierSegment
                    Point1="0,26"
                    Point2="0,30"
                    Point3="4,30" />
                  <mssgle:LineSegment
                    End="61,30" />
                  <mssgle:CubicBezierSegment
                    Point1="61,30"
                    Point2="65,30"
                    Point3="65,34" />
                  <mssgle:LineSegment
                    End="65,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Listing search.Paths[OLE DB Command Output]"
          TopLeft="655,1112.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="19,53.5"
              Start="0,0"
              End="19,46">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22.75" />
                  <mssgle:CubicBezierSegment
                    Point1="0,22.75"
                    Point2="0,26.75"
                    Point3="4,26.75" />
                  <mssgle:LineSegment
                    End="15,26.75" />
                  <mssgle:CubicBezierSegment
                    Point1="15,26.75"
                    Point2="19,26.75"
                    Point3="19,30.75" />
                  <mssgle:LineSegment
                    End="19,46" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Listing search.Paths[Multicast Output 2]"
          TopLeft="213.333333333333,761.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-153.333333333333,60"
              Start="0,0"
              End="-153.333333333333,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.4736842105263" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.4736842105263"
                    Point2="0,24.4736842105263"
                    Point3="-4,24.4736842105263" />
                  <mssgle:LineSegment
                    End="-149.333333333333,24.4736842105263" />
                  <mssgle:CubicBezierSegment
                    Point1="-149.333333333333,24.4736842105263"
                    Point2="-153.333333333333,24.4736842105263"
                    Point3="-153.333333333333,28.4736842105263" />
                  <mssgle:LineSegment
                    End="-153.333333333333,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Listing search.Paths[Multicast Output 1]"
          TopLeft="250.666666666667,761.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-18.6666666666667,60"
              Start="0,0"
              End="-18.6666666666667,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.4736842105263" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.4736842105263"
                    Point2="0,24.4736842105263"
                    Point3="-4,24.4736842105263" />
                  <mssgle:LineSegment
                    End="-14.6666666666667,24.4736842105263" />
                  <mssgle:CubicBezierSegment
                    Point1="-14.6666666666667,24.4736842105263"
                    Point2="-18.6666666666667,24.4736842105263"
                    Point3="-18.6666666666667,28.4736842105263" />
                  <mssgle:LineSegment
                    End="-18.6666666666667,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Listing search.Paths[Merge Join Output1]"
          TopLeft="232,1067.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Listing search.Paths[Merge Join Output]"
          TopLeft="477,251.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Listing search.Paths[JsonSourceOutput]"
          TopLeft="475.5,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Listing search.Paths[JsonParserTransformOutput2]"
          TopLeft="232,659.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Listing search.Paths[JsonParserTransformOutput1]"
          TopLeft="60.0000000000001,863.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="9,60"
              Start="0,0"
              End="9,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26" />
                  <mssgle:CubicBezierSegment
                    Point1="0,26"
                    Point2="0,30"
                    Point3="4,30" />
                  <mssgle:LineSegment
                    End="5,30" />
                  <mssgle:CubicBezierSegment
                    Point1="5,30"
                    Point2="9,30"
                    Point3="9,34" />
                  <mssgle:LineSegment
                    End="9,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Listing search.Paths[JsonParserTransformOutput]"
          TopLeft="232,863.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Listing search.Paths[JsonGeneratorTransformOutput]"
          TopLeft="232,455.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Listing search.Paths[ignore]"
          TopLeft="501.333333333333,353.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-24.3333333333333,60"
              Start="0,0"
              End="-24.3333333333333,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.3701799485861" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.3701799485861"
                    Point2="0,24.3701799485861"
                    Point3="-4,24.3701799485861" />
                  <mssgle:LineSegment
                    End="-20.3333333333333,24.3701799485861" />
                  <mssgle:CubicBezierSegment
                    Point1="-20.3333333333333,24.3701799485861"
                    Point2="-24.3333333333333,24.3701799485861"
                    Point3="-24.3333333333333,28.3701799485861" />
                  <mssgle:LineSegment
                    End="-24.3333333333333,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-26.5716080729167,29.3701799485861,28.8098828125,11.384765625"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Listing search.Paths[Derived Column Output]"
          TopLeft="330,1148.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="253.5,-57"
              Start="0,0"
              End="246,-57">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="122.75,0" />
                  <mssgle:CubicBezierSegment
                    Point1="122.75,0"
                    Point2="126.75,0"
                    Point3="126.75,-4" />
                  <mssgle:LineSegment
                    End="126.75,-53" />
                  <mssgle:CubicBezierSegment
                    Point1="126.75,-53"
                    Point2="126.75,-57"
                    Point3="130.75,-57" />
                  <mssgle:LineSegment
                    End="246,-57" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Listing search.Paths[WebApiDestination Error Output]"
          TopLeft="320,538.25">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="190,0"
              Start="0,0"
              End="182.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="182.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="19.4284374999999,5,143.643125,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Listing search.Paths[upsert]"
          TopLeft="452.666666666667,353.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-220.666666666667,60"
              Start="0,0"
              End="-220.666666666667,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.3701799485861" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.3701799485861"
                    Point2="0,24.3701799485861"
                    Point3="-4,24.3701799485861" />
                  <mssgle:LineSegment
                    End="-216.666666666667,24.3701799485861" />
                  <mssgle:CubicBezierSegment
                    Point1="-216.666666666667,24.3701799485861"
                    Point2="-220.666666666667,24.3701799485861"
                    Point3="-220.666666666667,28.3701799485861" />
                  <mssgle:LineSegment
                    End="-220.666666666667,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-124.900872395834,29.3701799485861,29.135078125,11.033203125"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Listing search.Paths[Sort Output3]"
          TopLeft="477,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="39.3333333333334,60"
              Start="0,0"
              End="39.3333333333334,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.7654723127036" />
                  <mssgle:CubicBezierSegment
                    Point1="0,31.7654723127036"
                    Point2="0,35.7654723127036"
                    Point3="4,35.7654723127036" />
                  <mssgle:LineSegment
                    End="35.3333333333334,35.7654723127036" />
                  <mssgle:CubicBezierSegment
                    Point1="35.3333333333334,35.7654723127036"
                    Point2="39.3333333333334,35.7654723127036"
                    Point3="39.3333333333334,39.7654723127036" />
                  <mssgle:LineSegment
                    End="39.3333333333334,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Listing search.Paths[Sort Output2]"
          TopLeft="69.0000000000001,965.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="142.666666666667,60"
              Start="0,0"
              End="142.666666666667,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.5623100303951" />
                  <mssgle:CubicBezierSegment
                    Point1="0,31.5623100303951"
                    Point2="0,35.5623100303951"
                    Point3="4,35.5623100303951" />
                  <mssgle:LineSegment
                    End="138.666666666667,35.5623100303951" />
                  <mssgle:CubicBezierSegment
                    Point1="138.666666666667,35.5623100303951"
                    Point2="142.666666666667,35.5623100303951"
                    Point3="142.666666666667,39.5623100303951" />
                  <mssgle:LineSegment
                    End="142.666666666667,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Listing search.Paths[Sort Output1]"
          TopLeft="297,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="140.666666666667,60"
              Start="0,0"
              End="140.666666666667,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.7654723127036" />
                  <mssgle:CubicBezierSegment
                    Point1="0,31.7654723127036"
                    Point2="0,35.7654723127036"
                    Point3="4,35.7654723127036" />
                  <mssgle:LineSegment
                    End="136.666666666667,35.7654723127036" />
                  <mssgle:CubicBezierSegment
                    Point1="136.666666666667,35.7654723127036"
                    Point2="140.666666666667,35.7654723127036"
                    Point3="140.666666666667,39.7654723127036" />
                  <mssgle:LineSegment
                    End="140.666666666667,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Listing search.Paths[Sort Output]"
          TopLeft="232,965.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="20.3333333333334,60"
              Start="0,0"
              End="20.3333333333334,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.5623100303951" />
                  <mssgle:CubicBezierSegment
                    Point1="0,31.5623100303951"
                    Point2="0,35.5623100303951"
                    Point3="4,35.5623100303951" />
                  <mssgle:LineSegment
                    End="16.3333333333334,35.5623100303951" />
                  <mssgle:CubicBezierSegment
                    Point1="16.3333333333334,35.5623100303951"
                    Point2="20.3333333333334,35.5623100303951"
                    Point3="20.3333333333334,39.5623100303951" />
                  <mssgle:LineSegment
                    End="20.3333333333334,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Iterate Offices\Sequence Container\Listing search\Write to ListingWebQueue">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Iterate Offices\Sequence Container\Listing search\Existing Listings from SQL">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Iterate Offices\Sequence Container\MarketLead search">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="162,42"
          Id="Package\Iterate Offices\Sequence Container\MarketLead search\Trash Destination"
          TopLeft="505,413.5" />
        <NodeLayout
          Size="206,42"
          Id="Package\Iterate Offices\Sequence Container\MarketLead search\JSON Generator Transform"
          TopLeft="238,413.5" />
        <NodeLayout
          Size="176,42"
          Id="Package\Iterate Offices\Sequence Container\MarketLead search\Upsert Market Leads"
          TopLeft="269.5,923.5" />
        <NodeLayout
          Size="229,42"
          Id="Package\Iterate Offices\Sequence Container\MarketLead search\Existing Market Leads from SQL"
          TopLeft="489.5,5.5" />
        <NodeLayout
          Size="118,42"
          Id="Package\Iterate Offices\Sequence Container\MarketLead search\API Sort"
          TopLeft="347,107.5" />
        <NodeLayout
          Size="207,42"
          Id="Package\Iterate Offices\Sequence Container\MarketLead search\JSON Parser Add id back in"
          TopLeft="237.5,617.5" />
        <NodeLayout
          Size="244,42"
          Id="Package\Iterate Offices\Sequence Container\MarketLead search\Merge Join To Find Those to Insert"
          TopLeft="464,209.5" />
        <NodeLayout
          Size="154,42"
          Id="Package\Iterate Offices\Sequence Container\MarketLead search\Insert or Ignore"
          TopLeft="509,311.5" />
        <NodeLayout
          Size="120,42"
          Id="Package\Iterate Offices\Sequence Container\MarketLead search\SQL Sort"
          TopLeft="526,107.5" />
        <NodeLayout
          Size="171,42"
          Id="Package\Iterate Offices\Sequence Container\MarketLead search\Trash Destination 1"
          TopLeft="5.50000000000011,617.5" />
        <NodeLayout
          Size="176,42"
          Id="Package\Iterate Offices\Sequence Container\MarketLead search\Web API Destination"
          TopLeft="253,515.5" />
        <NodeLayout
          Size="177,42"
          Id="Package\Iterate Offices\Sequence Container\MarketLead search\Search Market Leads"
          TopLeft="287.5,5.5" />
        <NodeLayout
          Size="196,42"
          Id="Package\Iterate Offices\Sequence Container\MarketLead search\Add accountid and origin"
          TopLeft="243,821.5" />
        <NodeLayout
          Size="109,42"
          Id="Package\Iterate Offices\Sequence Container\MarketLead search\record"
          TopLeft="286.5,719.5" />
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\MarketLead search.Paths[WebApiDestination Error Output]"
          TopLeft="313,557.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-222,60.0000000000001"
              Start="0,0"
              End="-222,52.5000000000001">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.3243243243244" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.3243243243244"
                    Point2="0,24.3243243243244"
                    Point3="-4,24.3243243243244" />
                  <mssgle:LineSegment
                    End="-218,24.3243243243244" />
                  <mssgle:CubicBezierSegment
                    Point1="-218,24.3243243243244"
                    Point2="-222,24.3243243243244"
                    Point3="-222,28.3243243243244" />
                  <mssgle:LineSegment
                    End="-222,52.5000000000001" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-182.8215625,29.3243243243244,143.643125,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\MarketLead search.Paths[upsert]"
          TopLeft="561.666666666667,353.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-220.666666666667,60"
              Start="0,0"
              End="-220.666666666667,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.3701799485861" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.3701799485861"
                    Point2="0,24.3701799485861"
                    Point3="-4,24.3701799485861" />
                  <mssgle:LineSegment
                    End="-216.666666666667,24.3701799485861" />
                  <mssgle:CubicBezierSegment
                    Point1="-216.666666666667,24.3701799485861"
                    Point2="-220.666666666667,24.3701799485861"
                    Point3="-220.666666666667,28.3701799485861" />
                  <mssgle:LineSegment
                    End="-220.666666666667,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-124.900872395834,29.3701799485861,29.135078125,11.033203125"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\MarketLead search.Paths[Sort Output1]"
          TopLeft="406,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="140.666666666667,60"
              Start="0,0"
              End="140.666666666667,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.7654723127036" />
                  <mssgle:CubicBezierSegment
                    Point1="0,31.7654723127036"
                    Point2="0,35.7654723127036"
                    Point3="4,35.7654723127036" />
                  <mssgle:LineSegment
                    End="136.666666666667,35.7654723127036" />
                  <mssgle:CubicBezierSegment
                    Point1="136.666666666667,35.7654723127036"
                    Point2="140.666666666667,35.7654723127036"
                    Point3="140.666666666667,39.7654723127036" />
                  <mssgle:LineSegment
                    End="140.666666666667,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\MarketLead search.Paths[Sort Output]"
          TopLeft="586,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="39.3333333333334,60"
              Start="0,0"
              End="39.3333333333334,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.7654723127036" />
                  <mssgle:CubicBezierSegment
                    Point1="0,31.7654723127036"
                    Point2="0,35.7654723127036"
                    Point3="4,35.7654723127036" />
                  <mssgle:LineSegment
                    End="35.3333333333334,35.7654723127036" />
                  <mssgle:CubicBezierSegment
                    Point1="35.3333333333334,35.7654723127036"
                    Point2="39.3333333333334,35.7654723127036"
                    Point3="39.3333333333334,39.7654723127036" />
                  <mssgle:LineSegment
                    End="39.3333333333334,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\MarketLead search.Paths[Response Output]"
          TopLeft="369,557.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-28,60"
              Start="0,0"
              End="-28,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.3243243243243" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.3243243243243"
                    Point2="0,24.3243243243243"
                    Point3="-4,24.3243243243243" />
                  <mssgle:LineSegment
                    End="-24,24.3243243243243" />
                  <mssgle:CubicBezierSegment
                    Point1="-24,24.3243243243243"
                    Point2="-28,24.3243243243243"
                    Point3="-28,28.3243243243243" />
                  <mssgle:LineSegment
                    End="-28,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\MarketLead search.Paths[OLE DB Source Output]"
          TopLeft="604,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-18,60"
              Start="0,0"
              End="-18,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26" />
                  <mssgle:CubicBezierSegment
                    Point1="0,26"
                    Point2="0,30"
                    Point3="-4,30" />
                  <mssgle:LineSegment
                    End="-14,30" />
                  <mssgle:CubicBezierSegment
                    Point1="-14,30"
                    Point2="-18,30"
                    Point3="-18,34" />
                  <mssgle:LineSegment
                    End="-18,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\MarketLead search.Paths[Merge Join Output]"
          TopLeft="586,251.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\MarketLead search.Paths[JsonSourceOutput]"
          TopLeft="376,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="30,60"
              Start="0,0"
              End="30,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26" />
                  <mssgle:CubicBezierSegment
                    Point1="0,26"
                    Point2="0,30"
                    Point3="4,30" />
                  <mssgle:LineSegment
                    End="26,30" />
                  <mssgle:CubicBezierSegment
                    Point1="26,30"
                    Point2="30,30"
                    Point3="30,34" />
                  <mssgle:LineSegment
                    End="30,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\MarketLead search.Paths[JsonParserTransformOutput1]"
          TopLeft="341,761.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\MarketLead search.Paths[JsonParserTransformOutput]"
          TopLeft="341,659.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\MarketLead search.Paths[JsonGeneratorTransformOutput]"
          TopLeft="341,455.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\MarketLead search.Paths[ignore]"
          TopLeft="610.333333333333,353.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-24.3333333333334,60"
              Start="0,0"
              End="-24.3333333333334,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.3701799485861" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.3701799485861"
                    Point2="0,24.3701799485861"
                    Point3="-4,24.3701799485861" />
                  <mssgle:LineSegment
                    End="-20.3333333333334,24.3701799485861" />
                  <mssgle:CubicBezierSegment
                    Point1="-20.3333333333334,24.3701799485861"
                    Point2="-24.3333333333334,24.3701799485861"
                    Point3="-24.3333333333334,28.3701799485861" />
                  <mssgle:LineSegment
                    End="-24.3333333333334,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-26.5716080729167,29.3701799485861,28.8098828125,11.384765625"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\MarketLead search.Paths[Derived Column Output]"
          TopLeft="341,863.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="16.5,60"
              Start="0,0"
              End="16.5,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26" />
                  <mssgle:CubicBezierSegment
                    Point1="0,26"
                    Point2="0,30"
                    Point3="4,30" />
                  <mssgle:LineSegment
                    End="12.5,30" />
                  <mssgle:CubicBezierSegment
                    Point1="12.5,30"
                    Point2="16.5,30"
                    Point3="16.5,34" />
                  <mssgle:LineSegment
                    End="16.5,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Iterate Offices\Sequence Container\MarketLead search\Existing Market Leads from SQL">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>