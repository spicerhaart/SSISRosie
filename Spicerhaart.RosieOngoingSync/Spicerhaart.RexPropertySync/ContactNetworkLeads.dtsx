<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="10/26/2018 4:42:07 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="79000ITD10"
  DTS:CreatorName="SPICERHAART\1901434"
  DTS:DTSID="{3350025A-2CD8-445D-8568-69712B6A2170}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:FailParentOnFailure="True"
  DTS:LastModifiedProductVersion="15.0.1301.433"
  DTS:LocaleID="2057"
  DTS:ObjectName="ContactNetworkLeads"
  DTS:PackageType="5"
  DTS:ProtectionLevel="2"
  DTS:VersionBuild="1139"
  DTS:VersionGUID="{BB492141-DAAC-4221-98BB-1A2C3C861956}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[colsqlbi01v.Entities]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{7EEA2608-1D9D-4448-98FB-F055942F2C49}"
      DTS:ObjectName="colsqlbi01v.Entities">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=colsqlbi01v;User ID=wh_user;Initial Catalog=Entities;Provider=SQLNCLI11.1;Auto Translate=False;">
          <EncryptedData
            Type="http://www.w3.org/2001/04/xmlenc#Element"
            Salt="UEp2+rxRZg=="
            IV="aF8mhm5DP6o=" xmlns="http://www.w3.org/2001/04/xmlenc#">
            <EncryptionMethod
              Algorithm="http://www.w3.org/2001/04/xmlenc#tripledes-cbc" />
            <CipherData>
              <CipherValue>aF8mhm5DP6rpFQ6AYglifC9cj2/4Tq8ZfYVEKCojFscyjp2AnfwPBmKLcPDwUt3Hbj4+gQjubK/pMIXk+bKSibKUAD2fiHVY7IgAcX4+nphBTH/xzl1GQ7eZI3uAMdJmRLo1Y9Zwf9sYLJIdRnnYjxPyBzgXgiMn</CipherValue>
            </CipherData>
          </EncryptedData>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[COLSQLBI01v.Metrics]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{0B47208A-9442-429E-B8EB-9C9E68B07E6F}"
      DTS:ObjectName="COLSQLBI01v.Metrics">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=COLSQLBI01v;Initial Catalog=Metrics;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[COLSQLBI01V.RosieWorkBench]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{D96C966A-9399-4659-A0B0-1D2DDDC868B1}"
      DTS:ObjectName="COLSQLBI01V.RosieWorkBench">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=COLSQLBI01V;Initial Catalog=RosieWorkBench;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[HTTP 1]"
      DTS:CreationName="ZS-HTTP"
      DTS:DTSID="{4FC3B62B-2152-4090-97D3-D692278580CF}"
      DTS:ObjectName="HTTP 1">
      <DTS:ObjectData>
        <ConnectionManager
          ConnectionString="Url=https://api.rexsoftware.com/rex.php;CredentialType=Notset;UserName=;Timeout=100000;SoapWssPasswordType=Notset;JwtCustomClaims=;RetainCookies=False;UseProxy=False;ProxyUrl=;UseProxyCreds=False;ProxyUserName=;DoNotUseDefaultProxy=False;UseClientCertificate=False;CertificatePath=;CertificateStorageType=CurrentUser;CertificateStoreName=My;CertificateThumbprint=;RetryMode=None;RetryCountMax=3;RetryWaitTimeMs=2000;RetryMultiplyWaitTime=False;RetryMessageList=;RetryStatusCodeList=;AuthScheme=Bearer;TokenAuthHeader=;TokenUrl=;TokenRequestData=;TokenRequestHeaders=Accept:*/*||Cache-Control:no-cache;TokenRequestMethod=;TokenRequestContentType=Default;TokenRequestIsMultiPart=False;TokenResponseContentFilter=;TokenResponseValueExtractMode=Body;TokenResponseCookie=;TokenResponseHeader=;TokenResponseContentType=None;TokenExpirationTimeInSeconds=3600;EnableRequestHashing=False;HashAlgorithm=sha256;HashSignatureFormat=;HashSignatureFormatForLogin=;ExtraHeaders=;ExtraHeadersForLogin=;HashTimestampFormat=;HashTreatSecretAsNonBase64=False;HashSignWithApiKey=False;RetainSameConnection=False" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[RexSync.xml]"
      DTS:CreationName="FILE"
      DTS:DTSID="{CAF7A1A7-115F-4A84-AA5C-3779E960A2C4}"
      DTS:ObjectName="RexSync.xml">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="C:\SSISVariables\RexSync.xml" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[SMTP]"
      DTS:CreationName="ZS-SMTP"
      DTS:DTSID="{2C72D9C4-73FC-4B84-B8A5-525E6146855D}"
      DTS:ObjectName="SMTP">
      <DTS:ObjectData>
        <ConnectionManager
          ConnectionString="SmtpServer=outlookcol;UserName=;Port=25;EnableSsl=False;Timeout=10000;EnableAnonymousAuth=False" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[SMTP Connection Manager]"
      DTS:CreationName="SMTP"
      DTS:DTSID="{51315AF2-80E0-41C9-ABE3-CA4655C8A791}"
      DTS:ObjectName="SMTP Connection Manager">
      <DTS:ObjectData>
        <SmtpConnectionManager
          ConnectionString="SmtpServer=outlookcol;UseWindowsAuthentication=False;EnableSsl=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:PackageParameters>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{344D4C9A-D616-4A42-93CB-4D41CC960635}"
      DTS:ObjectName="InputOfficeId">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">1132</DTS:Property>
    </DTS:PackageParameter>
  </DTS:PackageParameters>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{3F5E31A6-D76A-484D-B11F-44802FB6284D}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="CampaignId">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B0A8FE28-EAF2-4A7D-92E7-AA48B3A3E1D2}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="CampaignMemberStatusId">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{3E3A0C5E-C86E-483F-A3E0-4DB3F5C1C131}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="ListingServiceID">
      <DTS:VariableValue
        DTS:DataType="3">1</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{EBBFC746-05C7-4EB9-8063-945C5920A193}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="OfficeList">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B4701D52-6FAA-434F-8042-898CB08D7322}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Office_id">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{D4CDB194-FB87-4E99-AEB9-4B8AA151FEA2}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="PackageErrorEmail">
      <DTS:VariableValue
        DTS:DataType="8">keith.mills@spicerhaart.co.uk</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{44D39C81-831B-4DDA-9519-70BA265D9733}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="PackageExecutionInfo">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F09B9706-A6F9-4A01-88C5-34DEC8E18FD6}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="PackagePassword">
      <DTS:VariableValue
        DTS:DataType="8">P4ssword</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{D81AFD51-619B-4ACC-936D-01AFDC7F1DC3}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="PackageStartDate">
      <DTS:VariableValue
        DTS:DataType="7">1/1/2020</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{98C9ED15-AB2D-4464-A04B-73B305EEC325}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="PackageStartForNextRun">
      <DTS:VariableValue
        DTS:DataType="7">1/1/2020</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{624F93F3-5022-4B65-BF1F-ECC320EA9A03}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="PackageUser">
      <DTS:VariableValue
        DTS:DataType="8">1897047@spicerhaart.com</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{17610BA2-1931-48FC-80E8-27E8F0FB4C70}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="ProcessingStart">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F21A8CD1-1973-4A17-BB75-6110DB3FD7CF}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="PropertyCategory">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{ADABCC5D-F998-468A-9A16-E9FEB30B483B}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Record_id">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{5784973C-484E-4CE4-8D66-1DE2E8AF5B96}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ResponseAuth">
      <DTS:VariableValue
        DTS:DataType="8">{ 	"result": { 		"metric": "K006", 		"time": 1574501564, 		"recorded_at": 1574501564, 		"value": 1, 		"recorded_by_user": { 			"id": "25918", 			"_name": "Shannay Jarvis", 			"_first_name": "Shannay", 			"_last_name": "Jarvis", 			"_email_address": "Shannay.Jarvis@haart.co.uk" 		}, 		"labels": [ 			{ 				"label": "service_name", 				"value": "CalendarEvents" 			}, 			{ 				"label": "record_id", 				"value": "32f81cc2-0dd4-11ea-b8c1-5adf458c5229" 			} 		], 		"user_attributions": [ 			{ 				"percentage": 100, 				"user": { 					"id": "25918", 					"_name": "Shannay Jarvis", 					"_first_name": "Shannay", 					"_last_name": "Jarvis", 					"_email_address": "Shannay.Jarvis@haart.co.uk" 				} 			} 		], 		"_id": 698037 	}, 	"error": null }</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{826A04F5-2A0E-44F1-9828-98F19058FE2D}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ResponseAuthCode">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B35C25C9-988C-41BC-8D41-8B3DCD2A8025}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="RexAccountID">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{6FFDE3CD-11A7-4039-9B5D-3D3EF16A4D18}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="RexAPIWebURL">
      <DTS:VariableValue
        DTS:DataType="8">https://api.uk.rexsoftware.com/rex.php</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{6D326555-D856-4A42-8B30-AD5D8BF2C545}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="RexAPIWebURLv1">
      <DTS:VariableValue
        DTS:DataType="8">https://beta-api.uk.rexsoftware.com/v1/</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{927557C0-5E35-4496-A07E-7FE7B78DB88E}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="RexToken">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{C42FCD29-7887-43BA-ADF1-AAA9CDF2251B}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="RosieUserID">
      <DTS:VariableValue
        DTS:DataType="3">18382</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{23E5924B-F7ED-488A-BD8F-3E932DA19F81}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ServiceName">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{DBEB69A5-EFBF-42F5-BB9E-5922D4D0FD3A}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="DATEDIFF(&quot;S&quot;, (DT_DBTIMESTAMP)&quot;1970-01-01&quot;, (DT_DBTIMESTAMP)&quot;2018-09-01&quot;)"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="system_ctime">
      <DTS:VariableValue
        DTS:DataType="3">1535760000</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B386114B-948F-46A5-A94F-511745E7240D}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="UpsertedCount">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{073D5441-78E8-4202-B34A-B28EAF64FCA6}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="Variable">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Get Office List"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{F5313C28-8906-431F-94D2-AEB99ED18D29}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Get Office List"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{7EEA2608-1D9D-4448-98FB-F055942F2C49}"
          SQLTask:BypassPrepare="False"
          SQLTask:SqlStatementSource="SELECT [office_id],  [account_id], &#xA;       [org_id], &#xA;       [office_name]&#xA;FROM [RosieWorkBench].[dbo].[vwAccount]&#xA;WHERE   migrated = 1 and [office_name] not like '%test%' and office_id = ?&#xA;"
          SQLTask:ResultType="ResultSetType_Rowset" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ResultBinding
            SQLTask:ResultName="0"
            SQLTask:DtsVariableName="User::OfficeList" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="0"
            SQLTask:DtsVariableName="$Package::InputOfficeId"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="129"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Iterate Offices"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:Description="Foreach Loop Container"
      DTS:DTSID="{9164CAAD-A5E6-47D0-82F4-C20213D68DA5}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="-1"
      DTS:ObjectName="Iterate Offices">
      <DTS:ForEachEnumerator
        DTS:CreationName="Microsoft.ForEachADOEnumerator"
        DTS:DTSID="{BB31833E-222E-402E-B42F-1BF350A74679}"
        DTS:ObjectName="{A7CC5C17-CF0B-4BFC-AD97-DC80FF43AE29}">
        <DTS:ObjectData>
          <FEEADO
            EnumType="EnumerateRowsInFirstTable"
            VarName="User::OfficeList" />
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Iterate Offices\Sequence Container"
          DTS:CreationName="STOCK:SEQUENCE"
          DTS:Description="Sequence Container"
          DTS:DTSID="{816A08DB-2A92-4AAC-984C-DFA5585EEE02}"
          DTS:ExecutableType="STOCK:SEQUENCE"
          DTS:LocaleID="-1"
          DTS:ObjectName="Sequence Container">
          <DTS:Variables />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Iterate Offices\Sequence Container\Add note"
              DTS:CreationName="Microsoft.Pipeline"
              DTS:Description="Data Flow Task"
              DTS:DTSID="{2c104026-4634-457f-b154-8986ea4aeb1a}"
              DTS:ExecutableType="Microsoft.Pipeline"
              DTS:LocaleID="-1"
              DTS:ObjectName="Add note"
              DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:ObjectData>
                <pipeline
                  version="1">
                  <components>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Add note\Build Note JSON"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Template Transform; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="Template transform allows to produce multi line string from template text. You can insert placeholders anywhere in the string. Ideal use case would be produce simple XML or JSON without use of JSON or XML Generator Transform."
                      name="Build Note JSON"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.String"
                          description="Template text which needs to be replaced. Any where in the text you can use input column names as placeholders (e.g. &lt;%CustomerEmail%&gt; ). You can also use user/system variable as placeholder (e.g. {{User::MyVariable}} )"
                          expressionType="Notify"
                          name="TemplateText"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">        "&lt;%SqlId%&gt;":		{
    "method": "Notes::create",
    "args": {
        "data": {
            "note": "&lt;%CompleteNote%&gt;",
            "note_type_id": "note",
             "system_created_user": {
                "id": 11111122
            },
            "_related": {
                "note_contacts": [
                    {
                        "contact_id": &lt;%ContactId%&gt;
                    }
                ]
            }
        }
    }
}

</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.TemplateTransform</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Add note\Build Note JSON.Inputs[TemplateTransformInput]"
                          name="TemplateTransformInput">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Build Note JSON.Inputs[TemplateTransformInput].Columns[SqlId]"
                              cachedDataType="i4"
                              cachedName="SqlId"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[SqlId]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Build Note JSON.Inputs[TemplateTransformInput].Columns[CompleteNote]"
                              cachedDataType="wstr"
                              cachedLength="1057"
                              cachedName="CompleteNote"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Cancat note text.Outputs[Derived Column Output].Columns[CompleteNote]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Build Note JSON.Inputs[TemplateTransformInput].Columns[ContactId]"
                              cachedDataType="i4"
                              cachedName="ContactId"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[ContactId]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Add note\Build Note JSON.Outputs[TemplateTransformOutput]"
                          errorOrTruncationOperation="Error"
                          name="TemplateTransformOutput"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Add note\Build Note JSON.Inputs[TemplateTransformInput]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Build Note JSON.Outputs[TemplateTransformOutput].Columns[TemplateOutput]"
                              dataType="nText"
                              description="Template output column which will contain replaced text."
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Build Note JSON.Outputs[TemplateTransformOutput].Columns[TemplateOutput]"
                              name="TemplateOutput" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Add note\Build note text"
                      componentClassID="Microsoft.DerivedColumn"
                      contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                      name="Build note text"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Add note\Build note text.Inputs[Derived Column Input]"
                          description="Input to the Derived Column Transformation"
                          name="Derived Column Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Build note text.Inputs[Derived Column Input].Columns[Status]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Status"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[Status]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Build note text.Inputs[Derived Column Input].Columns[PriceFrom]"
                              cachedDataType="numeric"
                              cachedName="PriceFrom"
                              cachedPrecision="10"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[PriceFrom]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Build note text.Inputs[Derived Column Input].Columns[PriceTo]"
                              cachedDataType="numeric"
                              cachedName="PriceTo"
                              cachedPrecision="10"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[PriceTo]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Build note text.Inputs[Derived Column Input].Columns[CurrentOfficeName]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="CurrentOfficeName"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[CurrentOfficeName]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Build note text.Inputs[Derived Column Input].Columns[Timescale]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Timescale"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[Timescale]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Build note text.Inputs[Derived Column Input].Columns[Search Type]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Search Type"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[Search Type]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Build note text.Inputs[Derived Column Input].Columns[Search Town]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Search Town"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[Search Town]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Build note text.Inputs[Derived Column Input].Columns[Search County]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Search County"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[Search County]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Build note text.Inputs[Derived Column Input].Columns[Search Postcode]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Search Postcode"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[Search Postcode]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Add note\Build note text.Outputs[Derived Column Output]"
                          description="Default Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          name="Derived Column Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Add note\Build note text.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Build note text.Outputs[Derived Column Output].Columns[ContactNote]"
                              dataType="wstr"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              length="323"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Build note text.Outputs[Derived Column Output].Columns[ContactNote]"
                              name="ContactNote"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">"Registered in " + #{Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[CurrentOfficeName]} + " as " + #{Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[Status]}</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">"Registered in " + CurrentOfficeName + " as " + Status</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Build note text.Outputs[Derived Column Output].Columns[Requirements]"
                              dataType="wstr"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              length="226"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Build note text.Outputs[Derived Column Output].Columns[Requirements]"
                              name="Requirements"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">" price range between " + (DT_WSTR,100)#{Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[PriceFrom]} + " and " + (DT_WSTR,100)#{Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[PriceTo]}</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">" price range between " + (DT_WSTR,100)PriceFrom + " and " + (DT_WSTR,100)PriceTo</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Build note text.Outputs[Derived Column Output].Columns[TimescaleType]"
                              dataType="wstr"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              length="192"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Build note text.Outputs[Derived Column Output].Columns[TimescaleType]"
                              name="TimescaleType"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">" with a timescale of " + [REPLACENULL](#{Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[Timescale]},"None") + " and " + #{Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[Search Type]} + " property type"</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">" with a timescale of " + REPLACENULL(Timescale,"None") + " and " + [Search Type] + " property type"</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Build note text.Outputs[Derived Column Output].Columns[Location]"
                              dataType="wstr"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              length="313"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Build note text.Outputs[Derived Column Output].Columns[Location]"
                              name="Location"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">" " + [REPLACENULL](#{Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[Search Town]} + ",","") + [REPLACENULL](#{Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[Search County]} + ",","") + [REPLACENULL](#{Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[Search Postcode]} + ",","")</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">" " + REPLACENULL([Search Town] + ",","") + REPLACENULL([Search County] + ",","") + REPLACENULL([Search Postcode] + ",","")</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Add note\Build note text.Outputs[Derived Column Error Output]"
                          description="Error Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Derived Column Error Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Add note\Build note text.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Build note text.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Build note text.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Build note text.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Build note text.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Add note\Cancat note text"
                      componentClassID="Microsoft.DerivedColumn"
                      contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                      name="Cancat note text"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Add note\Cancat note text.Inputs[Derived Column Input]"
                          description="Input to the Derived Column Transformation"
                          name="Derived Column Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Cancat note text.Inputs[Derived Column Input].Columns[ContactNote]"
                              cachedDataType="wstr"
                              cachedLength="323"
                              cachedName="ContactNote"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Build note text.Outputs[Derived Column Output].Columns[ContactNote]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Cancat note text.Inputs[Derived Column Input].Columns[Requirements]"
                              cachedDataType="wstr"
                              cachedLength="226"
                              cachedName="Requirements"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Build note text.Outputs[Derived Column Output].Columns[Requirements]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Cancat note text.Inputs[Derived Column Input].Columns[TimescaleType]"
                              cachedDataType="wstr"
                              cachedLength="192"
                              cachedName="TimescaleType"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Build note text.Outputs[Derived Column Output].Columns[TimescaleType]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Cancat note text.Inputs[Derived Column Input].Columns[Location]"
                              cachedDataType="wstr"
                              cachedLength="313"
                              cachedName="Location"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Build note text.Outputs[Derived Column Output].Columns[Location]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Add note\Cancat note text.Outputs[Derived Column Output]"
                          description="Default Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          name="Derived Column Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Add note\Cancat note text.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Cancat note text.Outputs[Derived Column Output].Columns[CompleteNote]"
                              dataType="wstr"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              length="1057"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Cancat note text.Outputs[Derived Column Output].Columns[CompleteNote]"
                              name="CompleteNote"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">#{Package\Iterate Offices\Sequence Container\Add note\Build note text.Outputs[Derived Column Output].Columns[ContactNote]} + #{Package\Iterate Offices\Sequence Container\Add note\Build note text.Outputs[Derived Column Output].Columns[Requirements]} + #{Package\Iterate Offices\Sequence Container\Add note\Build note text.Outputs[Derived Column Output].Columns[TimescaleType]} + #{Package\Iterate Offices\Sequence Container\Add note\Build note text.Outputs[Derived Column Output].Columns[Location]}</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">ContactNote + Requirements + TimescaleType + Location</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Add note\Cancat note text.Outputs[Derived Column Error Output]"
                          description="Error Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Derived Column Error Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Add note\Cancat note text.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Cancat note text.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Cancat note text.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Cancat note text.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Cancat note text.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Add note\Error Message Check"
                      componentClassID="Microsoft.ConditionalSplit"
                      contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
                      name="Error Message Check"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Add note\Error Message Check.Inputs[Conditional Split Input]"
                          description="Input to the Conditional Split Transformation"
                          name="Conditional Split Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Error Message Check.Inputs[Conditional Split Input].Columns[P_error_message]"
                              cachedDataType="wstr"
                              cachedLength="1000"
                              cachedName="P_error_message"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransformOutput].Columns[P_error_message]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Add note\Error Message Check.Outputs[Fail]"
                          description="Output 1 of the Conditional Split Transformation"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="RedirectRow"
                          exclusionGroup="1"
                          name="Fail"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Add note\Error Message Check.Inputs[Conditional Split Input]"
                          truncationRowDisposition="RedirectRow">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                              name="Expression">[ISNULL](#{Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransformOutput].Columns[P_error_message]}) ==  FALSE </property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the friendly version of the expression. This expression version uses column names."
                              expressionType="Notify"
                              name="FriendlyExpression">ISNULL(P_error_message) ==  FALSE </property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                              name="EvaluationOrder">0</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Add note\Error Message Check.Outputs[Conditional Split Default Output]"
                          description="Default Output of the Conditional Split Transformation"
                          exclusionGroup="1"
                          name="Conditional Split Default Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Add note\Error Message Check.Inputs[Conditional Split Input]">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              name="IsDefaultOut">true</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Add note\Error Message Check.Outputs[Conditional Split Error Output]"
                          description="Error Output of the Conditional Split Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Conditional Split Error Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Add note\Error Message Check.Inputs[Conditional Split Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Error Message Check.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Error Message Check.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Error Message Check.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Error Message Check.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL"
                      componentClassID="Microsoft.OLEDBSource"
                      contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                      description="OLE DB Source"
                      name="Get Rosie Loaded Contacts from SQL"
                      usesDispositions="true"
                      version="7">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">0</property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the database object used to open a rowset."
                          name="OpenRowset">[dbo].[vwContacts]</property>
                        <property
                          dataType="System.String"
                          description="Specifies the variable that contains the name of the database object used to open a rowset."
                          name="OpenRowsetVariable"></property>
                        <property
                          dataType="System.String"
                          description="The SQL command to be executed."
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">SELECT Id AS SqlId, 
               
               [Category], 
               [Reference], 
               [Status], 
               rtrim([CurrentOfficeName]) as [CurrentOfficeName], 
               [PriceFrom], 
               [PriceTo],
  [LastValuation],
         [Search Town], 
           [Search County], 
           [Search Postcode], 
      [Timescale],
     [Search Type],
               CASE
                   WHEN [prefguid] IS NOT NULL
                   THEN 'https://preference.spicerhaart.co.uk/?custID=' + CAST([prefguid] AS NVARCHAR(4000))
                   ELSE NULL
               END AS [prefguid], 
               ContactId
FROM [Rosie].[dbo].ContactAdhocImport202102 ci
WHERE contactid IS NOT NULL
      AND [TargetOfficeId] = ?
      AND [prefguid] IS NOT NULL
      AND noteid IS NULL;</property>
                        <property
                          dataType="System.String"
                          description="The variable that contains the SQL command to be executed."
                          name="SqlCommandVariable"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Boolean"
                          description="Forces the use of the DefaultCodePage property value when describing character data."
                          name="AlwaysUseDefaultCodePage">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the mode used to access the database."
                          name="AccessMode"
                          typeConverter="AccessMode">2</property>
                        <property
                          dataType="System.String"
                          description="The mappings between the parameters in the SQL command and variables."
                          name="ParameterMapping">"Parameter0:Input",{B4701D52-6FAA-434F-8042-898CB08D7322};</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Connections[OleDbConnection]"
                          connectionManagerID="{1ACC4D99-A047-44CB-AAAD-088F42F69A23}:external"
                          connectionManagerRefId="Project.ConnectionManagers[Rosie]"
                          description="The OLE DB runtime connection used to access the database."
                          name="OleDbConnection" />
                      </connections>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output]"
                          name="OLE DB Source Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[Category]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].ExternalColumns[Category]"
                              length="50"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[Category]"
                              name="Category"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[Reference]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].ExternalColumns[Reference]"
                              length="50"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[Reference]"
                              name="Reference"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[Status]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].ExternalColumns[Status]"
                              length="50"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[Status]"
                              name="Status"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[PriceFrom]"
                              dataType="numeric"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].ExternalColumns[PriceFrom]"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[PriceFrom]"
                              name="PriceFrom"
                              precision="10"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[PriceTo]"
                              dataType="numeric"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].ExternalColumns[PriceTo]"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[PriceTo]"
                              name="PriceTo"
                              precision="10"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[prefguid]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].ExternalColumns[prefguid]"
                              length="4000"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[prefguid]"
                              name="prefguid"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[ContactId]"
                              dataType="i4"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].ExternalColumns[ContactId]"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[ContactId]"
                              name="ContactId"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[SqlId]"
                              dataType="i4"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].ExternalColumns[SqlId]"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[SqlId]"
                              name="SqlId"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[CurrentOfficeName]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].ExternalColumns[CurrentOfficeName]"
                              length="50"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[CurrentOfficeName]"
                              name="CurrentOfficeName"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[LastValuation]"
                              dataType="dbTimeStamp"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].ExternalColumns[LastValuation]"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[LastValuation]"
                              name="LastValuation"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[Timescale]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].ExternalColumns[Timescale]"
                              length="50"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[Timescale]"
                              name="Timescale"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[Search Type]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].ExternalColumns[Search Type]"
                              length="50"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[Search Type]"
                              name="Search Type"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[Search Town]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].ExternalColumns[Search Town]"
                              length="50"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[Search Town]"
                              name="Search Town"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[Search County]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].ExternalColumns[Search County]"
                              length="50"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[Search County]"
                              name="Search County"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[Search Postcode]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].ExternalColumns[Search Postcode]"
                              length="50"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[Search Postcode]"
                              name="Search Postcode"
                              truncationRowDisposition="FailComponent" />
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].ExternalColumns[Category]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              name="Category" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].ExternalColumns[Reference]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              name="Reference" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].ExternalColumns[Status]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              name="Status" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].ExternalColumns[PriceFrom]"
                              dataType="numeric"
                              name="PriceFrom"
                              precision="10" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].ExternalColumns[PriceTo]"
                              dataType="numeric"
                              name="PriceTo"
                              precision="10" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].ExternalColumns[prefguid]"
                              dataType="wstr"
                              length="4000"
                              name="prefguid" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].ExternalColumns[ContactId]"
                              dataType="i4"
                              name="ContactId" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].ExternalColumns[SqlId]"
                              dataType="i4"
                              name="SqlId" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].ExternalColumns[CurrentOfficeName]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              name="CurrentOfficeName" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].ExternalColumns[LastValuation]"
                              dataType="dbTimeStamp"
                              name="LastValuation" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].ExternalColumns[Timescale]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              name="Timescale" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].ExternalColumns[Search Type]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              name="Search Type" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].ExternalColumns[Search Town]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              name="Search Town" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].ExternalColumns[Search County]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              name="Search County" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].ExternalColumns[Search Postcode]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              name="Search Postcode" />
                          </externalMetadataColumns>
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Error Output]"
                          isErrorOut="true"
                          name="OLE DB Source Error Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[SqlId]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[SqlId]"
                              name="SqlId" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[Category]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[Category]"
                              name="Category" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[Reference]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[Reference]"
                              name="Reference" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[Status]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[Status]"
                              name="Status" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[CurrentOfficeName]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[CurrentOfficeName]"
                              name="CurrentOfficeName" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[PriceFrom]"
                              dataType="numeric"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[PriceFrom]"
                              name="PriceFrom"
                              precision="10" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[PriceTo]"
                              dataType="numeric"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[PriceTo]"
                              name="PriceTo"
                              precision="10" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[LastValuation]"
                              dataType="dbTimeStamp"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[LastValuation]"
                              name="LastValuation" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[Search Town]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[Search Town]"
                              name="Search Town" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[Search County]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[Search County]"
                              name="Search County" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[Search Postcode]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[Search Postcode]"
                              name="Search Postcode" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[Timescale]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[Timescale]"
                              name="Timescale" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[Search Type]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[Search Type]"
                              name="Search Type" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[prefguid]"
                              dataType="wstr"
                              length="4000"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[prefguid]"
                              name="prefguid" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[ContactId]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[ContactId]"
                              name="ContactId" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Add note\Post Batch Request"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Web API Destination; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="The Web API destination can be used to send data to Web API URL (e.g. Submit or POST data to REST API/SOAP or other HTTP/HTTPS endpoints)"
                      name="Post Batch Request"
                      usesDispositions="true"
                      version="5">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">3</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.String"
                          description="API URL you want to access"
                          expressionType="Notify"
                          name="HttpRequestUrl">{{User::RexAPIWebURLv1}}rex/batch-requests/execute-with-transaction</property>
                        <property
                          dataType="System.String"
                          description="Http Web Request Method (e.g. POST, GET, PUT, LIST, DELETE...). Refer your API documentation if you are not sure which method you have to use."
                          expressionType="Notify"
                          name="HttpRequestMethod">POST</property>
                        <property
                          dataType="System.String"
                          description="Set this if you want to set custom Http headers. You may use variable anywhere in the header value using syntax {{User::YourVarName}}. Syntax of Header key value pair is : &amp;lt;request&amp;gt;&amp;lt;header&amp;gt;&amp;lt;name&amp;gt;x-myheader-1&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;AAA&amp;lt;/value&amp;gt;&amp;lt;/header&amp;gt; &amp;lt;header&amp;gt;&amp;lt;name&amp;gt;x-myheader-2&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;BBB&amp;lt;/value&amp;gt;&amp;lt;/header&amp;gt;&amp;lt;/request&amp;gt;"
                          expressionType="Notify"
                          name="HttpHeaders"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">&lt;request&gt;&lt;header&gt;&lt;name&gt;Accept&lt;/name&gt;&lt;value&gt;*/*&lt;/value&gt;&lt;/header&gt;&lt;header&gt;&lt;name&gt;Cache-Control&lt;/name&gt;&lt;value&gt;no-cache&lt;/value&gt;&lt;/header&gt;&lt;header&gt;&lt;name&gt;Authorization&lt;/name&gt;&lt;value&gt;Bearer {{User::RexToken}}&lt;/value&gt;&lt;/header&gt;&lt;/request&gt;</property>
                        <property
                          dataType="System.String"
                          description="User defined data you wish to send along with your HTTP Request (e.g. Upload file data, Form POST data). Usually you have to set content-type of your data but if you select RequestMethod=POST then system will automatically set content-type=application/x-www-form-urlencoded."
                          expressionType="Notify"
                          name="HttpRequestData"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies content type for data you wish to POST. If you select Default option then system default content type will be used (i.e. application/x-www-form-urlencoded). If you specify Content-Type header along with this option then header value takes precedence."
                          expressionType="Notify"
                          name="HttpRequestContentType"
                          typeConverter="ZappySys.Common.Web.HttpRequestContentType">2</property>
                        <property
                          dataType="System.Boolean"
                          description="If this option is true then component will continue without exception on 404 error (Url not found). This allows you to consume data gracefully."
                          expressionType="Notify"
                          name="ContinueOnUrlNotFoundError">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Ignore SSL certificate related errors. Example: if you getting SSL/TLS errors because of certificate expired or certificate is not from trusted authority or certificate is self-signed. By checking this option you will not get SSL/TLS error."
                          expressionType="Notify"
                          name="IgnoreCertificateErrors">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Allow unsecure ciphers/suites and curves for SSLS/TLS communication. Use this option to communicate with web servers which needs legacy / unsecured ciphers support. This option is only trigged when you change default SSL/TLS Version on advanced settings tab."
                          expressionType="Notify"
                          name="AllowUnsecureSuite">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Enable support for gzip or deflate compression. When you check this option compressed response automatically de-compressed saving bandwidth. This option is only valid if web server supports compressed response stream. Check your API documentation for more information."
                          expressionType="Notify"
                          name="EnableCompressionSupport">true</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies which security protocol is supported for HTTPS communication. Using this option you can enable legacy protocol or enforce to use latest version of security protocol (Note: TLS 1.2 is only supported in SSIS 2014 or Higher)."
                          expressionType="Notify"
                          name="SecurityProtocol"
                          typeConverter="ZappySys.PowerPack.Common.HttpsSecurityProtocolType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Wait time in milliseconds (Pause after each request). 0=No wait. Use this delay time if your API has limit on how many requests you can make in certain time frame."
                          expressionType="Notify"
                          name="WaitTime">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you redirect error to error output by default you get additional information in ErrorMessage column. Check this option if you need exact Response Body (Useful if its in JSON/XML format which needs to be parsed for additional information for later step)."
                          expressionType="Notify"
                          name="OnErrorOutputResponseBody">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Enable multiple requests using parallel threads."
                          expressionType="Notify"
                          name="EnableParallelRequests">false</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum parallel threads to use for processing multiple web requests."
                          expressionType="Notify"
                          name="MaxParallelThreads">20</property>
                        <property
                          dataType="System.Boolean"
                          description="By default one request is sent for each input row. If your API supports multiple records in a single call via HTTP Body then enable this setting. See also BodyBatchSize, BodyHeader, BodyFooter and BodyRowSeparator property."
                          expressionType="Notify"
                          name="EnableBodyBatch">true</property>
                        <property
                          dataType="System.String"
                          description="When you have to wrap input content between opening and closing tags for each call then set this property to specify opening for body content. For Example if you want to build Body like this (send max 100 rows per call) ==&gt; { records : [ {...}, {...}, {...} ] } then you can set BatchSize=100, BodyHeader as &quot;{ records: [&quot; , BodyFooter as &quot;] }&quot; and BodyRowSeperator as comma {,}. This property is ignored if EnableBodyBatch=false."
                          expressionType="Notify"
                          name="BodyHeader">{   "requests": {</property>
                        <property
                          dataType="System.String"
                          description="When you have to wrap input content between opening and closing tags for each call then set this property to specify closing for body content. For Example if you want to build Body like this (send max 100 rows per call) ==&gt; { records : [ {...}, {...}, {...} ] } then you can set BatchSize=100, BodyHeader as &quot;{ records: [&quot; , BodyFooter as &quot;] }&quot; and BodyRowSeperator as comma {,}. This property is ignored if EnableBodyBatch=false."
                          expressionType="Notify"
                          name="BodyFooter">}}</property>
                        <property
                          dataType="System.Int32"
                          description="If your API supports multiple records via HTTP Body then change this setting &gt; 1 to include multiple upstream records into single call. See also BodyHeader, BodyFooter and BodyRowSeparator property. This property is ignored if EnableBodyBatch=false."
                          expressionType="Notify"
                          name="BodyBatchSize">100</property>
                        <property
                          dataType="System.String"
                          description="When you submit multiple rows in a batch you can separate multiple documents / records using custom separator (e.g. in JSON Array you can use comma {,} as record separator if POST document is in array format [ {...}, {...}, {...} ] ). For last row of batch blank separator is used."
                          expressionType="Notify"
                          name="BodyRowSeparator">,</property>
                        <property
                          dataType="System.Boolean"
                          description="Returns response data as binary data (e.g. Byte Array). Check this option is response is Zip file, Image file or any non text data which needs to be exported as raw data without any encoding."
                          expressionType="Notify"
                          name="TreatResponseAsBinary">false</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.WebApiDestination</property>
                        <property
                          dataType="System.Boolean"
                          description="Check this option if you want to upload file(s) (i.e. POST RAW file data) or send data using Multi-Part encoding method (i.e. Content-Type: multipart/form-data). Multi-Part request allows you to mix key/value and upload files in same request. On the other hand raw upload allows only single file upload (without any key/value) &#xA;&#xA;==== Raw Upload (Content-Type: application/octet-stream) =====   &#xA;To upload single file in raw mode check this option and specify full file path starting with @ sign in the Body (e.g.  @c:\data\myfile.zip ) &#xA;&#xA;==== Form-Data / Multipart Upload (Content-Type: multipart/form-data) =====   &#xA;To treat your Request data as multi part fields you must specify key/value pairs separated by new lines into RequestData field (i.e. Body). Each key value pair is entered on new-line and key/value are separated using equal sign (=). Preceding and trailing spaces are ignored also blank lines are ignored. &#xA;If field value has some any special character(s) then use escape sequence (e.g. For NewLine: \r\n, For Tab: \t, For at (@): \@). When value of any field starts with at sign (@) its automatically treated as File you want to upload. By default file content type is determined based on extension however you can supply content type manually for any field using this way [ fieldname.Content-Type=some content type ]. In below example we have supplied Content-Type for file2 and SomeField1, all other fields are using default content-type.&#xA;See below Example of uploading multiple files along with additional fields.&#xA;&#xA;file1=@c:\data\Myfile1.txt&#xA;file2=@c:\data\Myfile2.json&#xA;file2.Content-Type=application/json&#xA;SomeField1=aaaaaaa&#xA;SomeField1.Content-Type=text/plain&#xA;SomeField2=12345&#xA;SomeFieldWithNewLineAndTab=This is line1\r\nThis is line2\r\nThis is \ttab \ttab \ttab&#xA;SomeFieldStartingWithAtSign=\@MyTwitterHandle&#xA;"
                          expressionType="Notify"
                          name="IsMultiPartUpload">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Enable this option if your server is expecting &#xA; (i.e. CRLF) after last Multi-Part boundary in the Body. This option is only applicable if you enabled IsMultiPartUpload and sending data in Key=value format (i.e. Mutipart). For raw file upload this option has no effect."
                          expressionType="Notify"
                          name="AddMultiPartPostamble">false</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Iterate Offices\Sequence Container\Add note\Post Batch Request.Connections[Connection]"
                          connectionManagerID="Package.ConnectionManagers[HTTP 1]"
                          connectionManagerRefId="Package.ConnectionManagers[HTTP 1]"
                          description="Connection manager for authentication (e.g. HTTP or OAuth Connection)"
                          name="Connection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Add note\Post Batch Request.Inputs[WebApiDestinationInput]"
                          errorRowDisposition="RedirectRow"
                          hasSideEffects="true"
                          name="WebApiDestinationInput"
                          truncationRowDisposition="RedirectRow">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Post Batch Request.Inputs[WebApiDestinationInput].Columns[TemplateOutput]"
                              cachedDataType="nText"
                              cachedName="TemplateOutput"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Add note\Post Batch Request.Inputs[WebApiDestinationInput].ExternalColumns[HttpRequestData]"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Build Note JSON.Outputs[TemplateTransformOutput].Columns[TemplateOutput]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Post Batch Request.Inputs[WebApiDestinationInput].ExternalColumns[HttpRequestUrl]"
                              dataType="wstr"
                              length="2000"
                              name="HttpRequestUrl" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Post Batch Request.Inputs[WebApiDestinationInput].ExternalColumns[HttpRequestData]"
                              dataType="nText"
                              name="HttpRequestData" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Post Batch Request.Inputs[WebApiDestinationInput].ExternalColumns[HttpHeaders]"
                              dataType="wstr"
                              length="2000"
                              name="HttpHeaders" />
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Add note\Post Batch Request.Outputs[WebApiDestination Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="WebApiDestination Error Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Add note\Post Batch Request.Inputs[WebApiDestinationInput]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Post Batch Request.Outputs[WebApiDestination Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Post Batch Request.Outputs[WebApiDestination Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Post Batch Request.Outputs[WebApiDestination Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Post Batch Request.Outputs[WebApiDestination Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Post Batch Request.Outputs[WebApiDestination Error Output].Columns[ErrorColumnName]"
                              codePage="1252"
                              dataType="str"
                              length="128"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Post Batch Request.Outputs[WebApiDestination Error Output].Columns[ErrorColumnName]"
                              name="ErrorColumnName" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Post Batch Request.Outputs[WebApiDestination Error Output].Columns[ErrorMessage]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Post Batch Request.Outputs[WebApiDestination Error Output].Columns[ErrorMessage]"
                              name="ErrorMessage" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Add note\Post Batch Request.Outputs[Response Output]"
                          exclusionGroup="1"
                          name="Response Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Add note\Post Batch Request.Inputs[WebApiDestinationInput]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Post Batch Request.Outputs[Response Output].Columns[ResponseText]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Post Batch Request.Outputs[Response Output].Columns[ResponseText]"
                              name="ResponseText" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Post Batch Request.Outputs[Response Output].Columns[StatusCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Post Batch Request.Outputs[Response Output].Columns[StatusCode]"
                              name="StatusCode" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Add note\Read Success"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="JSON Parser Transform; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="Parse incoming JSON String into columns. You can also parse and transform single JSON record into multiple rows by filtering data based on JSON Path (e.g. $.Customer.Orders[*])"
                      name="Read Success"
                      usesDispositions="true"
                      version="2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for any numeric data types"
                          expressionType="Notify"
                          name="TreatBlankNumberAsNull">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for bool data types"
                          expressionType="Notify"
                          name="TreatBlankBoolAsNull">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for any date/time data types"
                          expressionType="Notify"
                          name="TreatBlankDateAsNull">true</property>
                        <property
                          dataType="System.Int32"
                          description="Encoding of source file"
                          expressionType="Notify"
                          name="Encoding"
                          typeConverter="ZappySys.Common.EncodingType">0</property>
                        <property
                          dataType="System.String"
                          description="Character set for text (e.g. utf-8 )"
                          expressionType="Notify"
                          name="CharacterSet"></property>
                        <property
                          dataType="System.String"
                          description="Sample JSON data used to parse output columns."
                          expressionType="Notify"
                          name="SampleData"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">{
    "result": {
        "123": {
            "system_ctime": 1613409380,
            "system_modtime": 1613409380,
            "etag": "292881-1613409380",
            "system_modified_user": {
                "id": "19443",
                "name": "Rosie API",
                "first_name": "Rosie",
                "last_name": "API",
                "email_address": "rosie@spicerhaart.co.uk"
            },
            "system_created_user": {
                "id": "19443",
                "name": "Rosie API",
                "first_name": "Rosie",
                "last_name": "API",
                "email_address": "rosie@spicerhaart.co.uk"
            },
            "service_record": {
                "id": 218763,
                "text": "DC Law solicitors",
                "stub": {
                    "name": "DC Law solicitors",
                    "email_address": null,
                    "phone_number": null,
                    "fax_number": null,
                    "address_postal": null,
                    "address": null,
                    "id": "218763"
                }
            },
            "status": {
                "id": 44931,
                "text": "To Call"
            },
            "service_type": {
                "id": "Contacts",
                "text": "Contacts"
            },
            "last_activity": null,
            "campaign": {
                "name": "Network Lead",
                "type": {
                    "id": "phone",
                    "text": "Phone"
                },
                "status": {
                    "id": "in_progress",
                    "text": "In Progress"
                },
                "id": 3157
            },
            "id": 292881
        },
        "456": {
            "system_ctime": 1613409380,
            "system_modtime": 1613409380,
            "etag": "292882-1613409380",
            "system_modified_user": {
                "id": "19443",
                "name": "Rosie API",
                "first_name": "Rosie",
                "last_name": "API",
                "email_address": "rosie@spicerhaart.co.uk"
            },
            "system_created_user": {
                "id": "19443",
                "name": "Rosie API",
                "first_name": "Rosie",
                "last_name": "API",
                "email_address": "rosie@spicerhaart.co.uk"
            },
            "service_record": {
                "id": 343691,
                "text": "Test Company",
                "stub": {
                    "name": "Test Company",
                    "email_address": null,
                    "phone_number": null,
                    "fax_number": null,
                    "address_postal": null,
                    "address": null,
                    "id": "343691"
                }
            },
            "status": {
                "id": 44931,
                "text": "To Call"
            },
            "service_type": {
                "id": "Contacts",
                "text": "Contacts"
            },
            "last_activity": null,
            "campaign": {
                "name": "Network Lead",
                "type": {
                    "id": "phone",
                    "text": "Phone"
                },
                "status": {
                    "id": "in_progress",
                    "text": "In Progress"
                },
                "id": 3157
            },
            "id": 292882
        }
    },
    "error": {
		"message": "The JSON body you provided was not valid: 'Syntax error'. Please fix and try again.",
		"type": "InvalidArgumentException",
		"code": 0,
		"extra": {
			"request_data": {
				"method": "AuthenticatedServiceProxy::describe",
				"add_request_prefixes": true
			}
		}
		}
}</property>
                        <property
                          dataType="System.Boolean"
                          description="Include all upstream parent columns into output except the one you selected to parse. By default only parsed columns from Input document is included in the output. If you wish to include all other upstream columns in the output too then check this option."
                          expressionType="Notify"
                          name="OutputAllUpstreamColumns">true</property>
                        <property
                          dataType="System.Int32"
                          description="Defines how to handle empty input. By default NULL or Empty input is skipped from parsing."
                          expressionType="Notify"
                          name="EmptyInputProcessingMode"
                          typeConverter="ZappySys.Common.Data.EmptyInputProcessingMode">0</property>
                        <property
                          dataType="System.String"
                          description="Defines how to handle empty input. By default NULL or Empty input is skipped from parsing."
                          expressionType="Notify"
                          name="TreatEmptyInputAs">{ }</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum JSON records to fetch. Set this value to 0 for all records"
                          expressionType="Notify"
                          name="MaxRows">0</property>
                        <property
                          dataType="System.String"
                          description="Enter expression here to filter data.(Example:  $.Users[*].UserName ) This will fetch User names from users records"
                          expressionType="Notify"
                          name="Filter"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">$.result</property>
                        <property
                          dataType="System.Boolean"
                          description="Use this option to include parent properties (Non array) in the output along with Filtered Rows"
                          expressionType="Notify"
                          name="IncludeParentColumns">true</property>
                        <property
                          dataType="System.Boolean"
                          description="By default child and parent information is not included in the output if children not found for specified expression. For example if you want to extract all orders from all customers nodes then you can type $.Customers[*].Orders[*]. This will fetch all orders from all customers. By default customers records without orders wont be included in the output. If you want to include those customers where orders not found then check this option (Output null information for order attributes). This behavior is similar to LEFT OUTER JOIN in SQL (Left side is parent, right side is child). This option is ***resource intensive*** so only check if you really care about this behavior."
                          expressionType="Notify"
                          name="IncludeParentColumnsWhenChildMissing">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to true if you want to output parent columns which are array. By default any parent column which is an array is not included in output. See also FilterForParentColumnsWithArrayType property if you set this property"
                          expressionType="Notify"
                          name="IncludeParentColumnsWithArrayType">true</property>
                        <property
                          dataType="System.String"
                          description="Filter expression to extract value form parent"
                          expressionType="Notify"
                          name="FilterForParentColumnsWithArrayType"></property>
                        <property
                          dataType="System.String"
                          description="Prefix for parent column name. This option is only valid if you have set IncludeParentColumns=True"
                          expressionType="Notify"
                          name="ParentColumnPrefix">P_</property>
                        <property
                          dataType="System.Boolean"
                          description="Throw error if property name specified in filter expression is missing. By default it will ignore any missing property errors."
                          expressionType="Notify"
                          name="ThrowErrorIfPropertyMissing">false</property>
                        <property
                          dataType="System.Int32"
                          description="This property how many nested levels should be scanned to fetch various properties. 0=Scan all child levels."
                          expressionType="Notify"
                          name="MaxLevelsToScan">0</property>
                        <property
                          dataType="System.String"
                          description="List comma separated property names from JSON document which you want to exclude from output. Specify parent property name to exclude all child nodes."
                          expressionType="Notify"
                          name="ExcludedProperties"></property>
                        <property
                          dataType="System.String"
                          description="Property level separator used in generated property name (separator for outer properties - Above selected filter node). Use this if default separator is producing duplicate property name which is conflicting with existing name."
                          expressionType="Notify"
                          name="LevelSeparator">_</property>
                        <property
                          dataType="System.Boolean"
                          description="Enables deep array flattening for selected filtered hierarchy. When you turn on this property it will flatten each property of each array item and expose as column (e.g. If you have Filter set as $.customers[*] and for each customer you have an array of Addresses then you may see output columns like Addresses.1.City, Addresses.1.State, Addresses.2.City, Addresses.2.State .... Addresses.N.City, Addresses.N.State). You can control how many array items you want to flatten by setting MaxArrayItemsToFlatten property."
                          expressionType="Notify"
                          name="EnableArrayFlattening">false</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum number of array items to flatten. inner array flattening. Adjust this property to control how many columns being generated. This option is ignored if you set EnableArrayFlattening=false"
                          expressionType="Notify"
                          name="MaxArrayItemsToFlatten">10</property>
                        <property
                          dataType="System.String"
                          description="Specifies how custom date formatted strings are parsed when reading JSON."
                          expressionType="Notify"
                          name="DateFormatString"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies how date formatted strings, e.g. Date(1198908717056) and 2012-03-21T05:40Z, are parsed when reading JSON."
                          expressionType="Notify"
                          name="DateParseHandling"
                          typeConverter="ZappySys.Common.DateParseHandling">1</property>
                        <property
                          dataType="System.Boolean"
                          description="Indent JSON output so its easy to read."
                          expressionType="Notify"
                          name="IndentOutput">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Output as raw JSON document rather than parsing individual fields. This option is helpful if you have documents stored in a file and you want to pass them downstream as raw JSON string rather than parsing into columns."
                          expressionType="Notify"
                          name="OutputRawDocument">false</property>
                        <property
                          dataType="System.Boolean"
                          description="When this property is true then Column is converted to Row. Pivoted names will appear under  Pivot_Name column and values will appear under Pivot_Value field."
                          expressionType="Notify"
                          name="EnablePivot">true</property>
                        <property
                          dataType="System.Int32"
                          description="Array Transformation you want to apply. Useful for case when you have 2-Dimensional arrays with rows/columns in separate arrays."
                          expressionType="Notify"
                          name="ArrayTransformationType"
                          typeConverter="ZappySys.Json.ArrayTransformType">0</property>
                        <property
                          dataType="System.String"
                          description="Filter expression to use to extract column names for array transformation."
                          expressionType="Notify"
                          name="ArrayTransColumnNameFilter"></property>
                        <property
                          dataType="System.String"
                          description="Filter expression for row values (Not applicable for simple array transformation)."
                          expressionType="Notify"
                          name="ArrayTransRowValueFilter"></property>
                        <property
                          dataType="System.Boolean"
                          description="When you have 2D array but don't have column list specified in a separate array then use this option (e.g. { arr: [[10,11],[21,22]] } ). If you selected Column less array or JSON Lines option then this property means Column Names coming from First Line of array."
                          expressionType="Notify"
                          name="ArrayTransEnableCustomColumns">false</property>
                        <property
                          dataType="System.String"
                          description="When you have 2D array but don't have column list specified in a separate array then use specify column names here. Use comma separated list (e.g col1,col2,col3 ). Column name Order must match value order."
                          expressionType="Notify"
                          name="ArrayTransCustomColumns"></property>
                        <property
                          dataType="System.Int32"
                          description="Metadata scan mode controls how data type and length is determined. By default few records scanned to determine datatype/length. Changing ScanMode affects length/datatype accuracy."
                          expressionType="Notify"
                          name="MetaDataScanMode"
                          typeConverter="ZappySys.Common.Data.MetaDataScanMode">4</property>
                        <property
                          dataType="System.Int32"
                          description="Length for all string column. This option is only valid for MetaDataScanMode=Custom"
                          expressionType="Notify"
                          name="MetaDataCustomLength">1000</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.JsonParserTransform</property>
                        <property
                          dataType="System.Boolean"
                          name="EnableBigNumberHandling">false</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Inputs[JsonParserTransformInput]"
                          errorRowDisposition="FailComponent"
                          name="JsonParserTransformInput"
                          truncationRowDisposition="FailComponent">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Inputs[JsonParserTransformInput].Columns[ResponseText]"
                              cachedDataType="nText"
                              cachedName="ResponseText"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Post Batch Request.Outputs[Response Output].Columns[ResponseText]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Inputs[JsonParserTransformInput].Columns[Category]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Category"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[Category]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransformOutput].Columns[Category]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Inputs[JsonParserTransformInput].Columns[Reference]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Reference"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[Reference]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransformOutput].Columns[Reference]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Inputs[JsonParserTransformInput].Columns[Status]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Status"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[Status]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransformOutput].Columns[Status]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Inputs[JsonParserTransformInput].Columns[PriceFrom]"
                              cachedDataType="numeric"
                              cachedName="PriceFrom"
                              cachedPrecision="10"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[PriceFrom]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransformOutput].Columns[PriceFrom]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Inputs[JsonParserTransformInput].Columns[PriceTo]"
                              cachedDataType="numeric"
                              cachedName="PriceTo"
                              cachedPrecision="10"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[PriceTo]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransformOutput].Columns[PriceTo]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Inputs[JsonParserTransformInput].Columns[prefguid]"
                              cachedDataType="wstr"
                              cachedLength="4000"
                              cachedName="prefguid"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[prefguid]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransformOutput].Columns[prefguid]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Inputs[JsonParserTransformInput].Columns[ContactId]"
                              cachedDataType="i4"
                              cachedName="ContactId"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[ContactId]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransformOutput].Columns[ContactId]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Inputs[JsonParserTransformInput].Columns[SqlId]"
                              cachedDataType="i4"
                              cachedName="SqlId"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[SqlId]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransformOutput].Columns[SqlId]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Inputs[JsonParserTransformInput].Columns[CurrentOfficeName]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="CurrentOfficeName"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[CurrentOfficeName]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransformOutput].Columns[CurrentOfficeName]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Inputs[JsonParserTransformInput].Columns[LastValuation]"
                              cachedDataType="dbTimeStamp"
                              cachedName="LastValuation"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[LastValuation]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransformOutput].Columns[LastValuation]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Inputs[JsonParserTransformInput].Columns[Timescale]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Timescale"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[Timescale]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransformOutput].Columns[Timescale]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Inputs[JsonParserTransformInput].Columns[Search Type]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Search Type"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[Search Type]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransformOutput].Columns[Search Type]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Inputs[JsonParserTransformInput].Columns[ContactNote]"
                              cachedDataType="wstr"
                              cachedLength="323"
                              cachedName="ContactNote"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Build note text.Outputs[Derived Column Output].Columns[ContactNote]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransformOutput].Columns[ContactNote]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Inputs[JsonParserTransformInput].Columns[Requirements]"
                              cachedDataType="wstr"
                              cachedLength="226"
                              cachedName="Requirements"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Build note text.Outputs[Derived Column Output].Columns[Requirements]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransformOutput].Columns[Requirements]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Inputs[JsonParserTransformInput].Columns[TimescaleType]"
                              cachedDataType="wstr"
                              cachedLength="192"
                              cachedName="TimescaleType"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Build note text.Outputs[Derived Column Output].Columns[TimescaleType]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransformOutput].Columns[TimescaleType]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Inputs[JsonParserTransformInput].Columns[CompleteNote]"
                              cachedDataType="wstr"
                              cachedLength="1057"
                              cachedName="CompleteNote"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Cancat note text.Outputs[Derived Column Output].Columns[CompleteNote]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransformOutput].Columns[CompleteNote]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Inputs[JsonParserTransformInput].Columns[TemplateOutput]"
                              cachedDataType="nText"
                              cachedName="TemplateOutput"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Build Note JSON.Outputs[TemplateTransformOutput].Columns[TemplateOutput]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransformOutput].Columns[TemplateOutput]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Inputs[JsonParserTransformInput].Columns[StatusCode]"
                              cachedDataType="i4"
                              cachedName="StatusCode"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Post Batch Request.Outputs[Response Output].Columns[StatusCode]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransformOutput].Columns[StatusCode]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True" />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransformOutput]"
                          errorOrTruncationOperation="Error"
                          errorRowDisposition="RedirectRow"
                          name="JsonParserTransformOutput"
                          truncationRowDisposition="RedirectRow">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransformOutput].Columns[StatusCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransformOutput].Columns[StatusCode]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Inputs[JsonParserTransformInput].Columns[StatusCode]"
                              name="StatusCode" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransformOutput].Columns[TemplateOutput]"
                              dataType="nText"
                              description="Template output column which will contain replaced text."
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransformOutput].Columns[TemplateOutput]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Inputs[JsonParserTransformInput].Columns[TemplateOutput]"
                              name="TemplateOutput" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransformOutput].Columns[CompleteNote]"
                              dataType="wstr"
                              length="676"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransformOutput].Columns[CompleteNote]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Inputs[JsonParserTransformInput].Columns[CompleteNote]"
                              name="CompleteNote" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransformOutput].Columns[TimescaleType]"
                              dataType="wstr"
                              length="192"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransformOutput].Columns[TimescaleType]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Inputs[JsonParserTransformInput].Columns[TimescaleType]"
                              name="TimescaleType" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransformOutput].Columns[Requirements]"
                              dataType="wstr"
                              length="224"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransformOutput].Columns[Requirements]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Inputs[JsonParserTransformInput].Columns[Requirements]"
                              name="Requirements" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransformOutput].Columns[ContactNote]"
                              dataType="wstr"
                              length="323"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransformOutput].Columns[ContactNote]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Inputs[JsonParserTransformInput].Columns[ContactNote]"
                              name="ContactNote" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransformOutput].Columns[Search Type]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransformOutput].Columns[Search Type]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Inputs[JsonParserTransformInput].Columns[Search Type]"
                              name="Search Type" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransformOutput].Columns[Timescale]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransformOutput].Columns[Timescale]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Inputs[JsonParserTransformInput].Columns[Timescale]"
                              name="Timescale" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransformOutput].Columns[LastValuation]"
                              dataType="dbTimeStamp"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransformOutput].Columns[LastValuation]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Inputs[JsonParserTransformInput].Columns[LastValuation]"
                              name="LastValuation" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransformOutput].Columns[CurrentOfficeName]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransformOutput].Columns[CurrentOfficeName]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Inputs[JsonParserTransformInput].Columns[CurrentOfficeName]"
                              name="CurrentOfficeName" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransformOutput].Columns[SqlId]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransformOutput].Columns[SqlId]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Inputs[JsonParserTransformInput].Columns[SqlId]"
                              name="SqlId" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransformOutput].Columns[ContactId]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransformOutput].Columns[ContactId]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Inputs[JsonParserTransformInput].Columns[ContactId]"
                              name="ContactId" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransformOutput].Columns[prefguid]"
                              dataType="wstr"
                              length="4000"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransformOutput].Columns[prefguid]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Inputs[JsonParserTransformInput].Columns[prefguid]"
                              name="prefguid" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransformOutput].Columns[PriceTo]"
                              dataType="numeric"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransformOutput].Columns[PriceTo]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Inputs[JsonParserTransformInput].Columns[PriceTo]"
                              name="PriceTo"
                              precision="10" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransformOutput].Columns[PriceFrom]"
                              dataType="numeric"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransformOutput].Columns[PriceFrom]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Inputs[JsonParserTransformInput].Columns[PriceFrom]"
                              name="PriceFrom"
                              precision="10" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransformOutput].Columns[Status]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransformOutput].Columns[Status]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Inputs[JsonParserTransformInput].Columns[Status]"
                              name="Status" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransformOutput].Columns[Reference]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransformOutput].Columns[Reference]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Inputs[JsonParserTransformInput].Columns[Reference]"
                              name="Reference" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransformOutput].Columns[Category]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransformOutput].Columns[Category]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Inputs[JsonParserTransformInput].Columns[Category]"
                              name="Category" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransformOutput].Columns[Pivot_Name]"
                              dataType="i4"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Name]"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransformOutput].Columns[Pivot_Name]"
                              name="Pivot_Name" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransformOutput].Columns[Pivot_Value.id]"
                              dataType="i4"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.id]"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransformOutput].Columns[Pivot_Value.id]"
                              name="Pivot_Value.id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransformOutput].Columns[P_error_code]"
                              dataType="i4"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[P_error_code]"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransformOutput].Columns[P_error_code]"
                              name="P_error_code" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransformOutput].Columns[P_error_message]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[P_error_message]"
                              length="1000"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransformOutput].Columns[P_error_message]"
                              name="P_error_message" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransformOutput].Columns[Pivot_Value.service_record.id]"
                              dataType="i4"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.service_record.id]"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransformOutput].Columns[Pivot_Value.service_record.id]"
                              name="Pivot_Value.service_record.id" />
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[P_error_message]"
                              dataType="wstr"
                              length="332"
                              name="P_error_message" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[P_error_type]"
                              dataType="wstr"
                              length="96"
                              name="P_error_type" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[P_error_code]"
                              dataType="i8"
                              name="P_error_code" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[P_error_extra_request_data_method]"
                              dataType="wstr"
                              length="140"
                              name="P_error_extra_request_data_method" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[P_error_extra_request_data_add_request_prefixes]"
                              dataType="bool"
                              name="P_error_extra_request_data_add_request_prefixes" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Name]"
                              dataType="wstr"
                              length="12"
                              name="Pivot_Name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.system_ctime]"
                              dataType="i8"
                              name="Pivot_Value.system_ctime" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.system_modtime]"
                              dataType="i8"
                              name="Pivot_Value.system_modtime" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.etag]"
                              dataType="wstr"
                              length="68"
                              name="Pivot_Value.etag" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.system_modified_user.id]"
                              dataType="wstr"
                              length="20"
                              name="Pivot_Value.system_modified_user.id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.system_modified_user.name]"
                              dataType="wstr"
                              length="36"
                              name="Pivot_Value.system_modified_user.name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.system_modified_user.first_name]"
                              dataType="wstr"
                              length="20"
                              name="Pivot_Value.system_modified_user.first_name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.system_modified_user.last_name]"
                              dataType="wstr"
                              length="12"
                              name="Pivot_Value.system_modified_user.last_name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.system_modified_user.email_address]"
                              dataType="wstr"
                              length="92"
                              name="Pivot_Value.system_modified_user.email_address" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.system_created_user.id]"
                              dataType="wstr"
                              length="20"
                              name="Pivot_Value.system_created_user.id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.system_created_user.name]"
                              dataType="wstr"
                              length="36"
                              name="Pivot_Value.system_created_user.name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.system_created_user.first_name]"
                              dataType="wstr"
                              length="20"
                              name="Pivot_Value.system_created_user.first_name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.system_created_user.last_name]"
                              dataType="wstr"
                              length="12"
                              name="Pivot_Value.system_created_user.last_name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.system_created_user.email_address]"
                              dataType="wstr"
                              length="92"
                              name="Pivot_Value.system_created_user.email_address" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.service_record.id]"
                              dataType="i8"
                              name="Pivot_Value.service_record.id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.service_record.text]"
                              dataType="wstr"
                              length="68"
                              name="Pivot_Value.service_record.text" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.service_record.stub.name]"
                              dataType="wstr"
                              length="68"
                              name="Pivot_Value.service_record.stub.name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.service_record.stub.email_address]"
                              dataType="wstr"
                              length="1020"
                              name="Pivot_Value.service_record.stub.email_address" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.service_record.stub.phone_number]"
                              dataType="wstr"
                              length="1020"
                              name="Pivot_Value.service_record.stub.phone_number" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.service_record.stub.fax_number]"
                              dataType="wstr"
                              length="1020"
                              name="Pivot_Value.service_record.stub.fax_number" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.service_record.stub.address_postal]"
                              dataType="wstr"
                              length="1020"
                              name="Pivot_Value.service_record.stub.address_postal" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.service_record.stub.address]"
                              dataType="wstr"
                              length="1020"
                              name="Pivot_Value.service_record.stub.address" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.service_record.stub.id]"
                              dataType="wstr"
                              length="24"
                              name="Pivot_Value.service_record.stub.id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.status.id]"
                              dataType="i8"
                              name="Pivot_Value.status.id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.status.text]"
                              dataType="wstr"
                              length="28"
                              name="Pivot_Value.status.text" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.service_type.id]"
                              dataType="wstr"
                              length="32"
                              name="Pivot_Value.service_type.id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.service_type.text]"
                              dataType="wstr"
                              length="32"
                              name="Pivot_Value.service_type.text" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.last_activity]"
                              dataType="wstr"
                              length="1020"
                              name="Pivot_Value.last_activity" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.campaign.name]"
                              dataType="wstr"
                              length="48"
                              name="Pivot_Value.campaign.name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.campaign.type.id]"
                              dataType="wstr"
                              length="20"
                              name="Pivot_Value.campaign.type.id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.campaign.type.text]"
                              dataType="wstr"
                              length="20"
                              name="Pivot_Value.campaign.type.text" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.campaign.status.id]"
                              dataType="wstr"
                              length="44"
                              name="Pivot_Value.campaign.status.id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.campaign.status.text]"
                              dataType="wstr"
                              length="44"
                              name="Pivot_Value.campaign.status.text" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.campaign.id]"
                              dataType="i8"
                              name="Pivot_Value.campaign.id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.id]"
                              dataType="i8"
                              name="Pivot_Value.id" />
                          </externalMetadataColumns>
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransform Error Output]"
                          isErrorOut="true"
                          name="JsonParserTransform Error Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransform Error Output].Columns[StatusCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransform Error Output].Columns[StatusCode]"
                              name="StatusCode" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransform Error Output].Columns[TemplateOutput]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransform Error Output].Columns[TemplateOutput]"
                              name="TemplateOutput" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransform Error Output].Columns[CompleteNote]"
                              dataType="wstr"
                              length="676"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransform Error Output].Columns[CompleteNote]"
                              name="CompleteNote" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransform Error Output].Columns[TimescaleType]"
                              dataType="wstr"
                              length="192"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransform Error Output].Columns[TimescaleType]"
                              name="TimescaleType" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransform Error Output].Columns[Requirements]"
                              dataType="wstr"
                              length="224"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransform Error Output].Columns[Requirements]"
                              name="Requirements" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransform Error Output].Columns[ContactNote]"
                              dataType="wstr"
                              length="323"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransform Error Output].Columns[ContactNote]"
                              name="ContactNote" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransform Error Output].Columns[Search Type]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransform Error Output].Columns[Search Type]"
                              name="Search Type" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransform Error Output].Columns[Timescale]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransform Error Output].Columns[Timescale]"
                              name="Timescale" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransform Error Output].Columns[LastValuation]"
                              dataType="dbTimeStamp"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransform Error Output].Columns[LastValuation]"
                              name="LastValuation" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransform Error Output].Columns[CurrentOfficeName]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransform Error Output].Columns[CurrentOfficeName]"
                              name="CurrentOfficeName" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransform Error Output].Columns[SqlId]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransform Error Output].Columns[SqlId]"
                              name="SqlId" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransform Error Output].Columns[ContactId]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransform Error Output].Columns[ContactId]"
                              name="ContactId" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransform Error Output].Columns[prefguid]"
                              dataType="wstr"
                              length="4000"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransform Error Output].Columns[prefguid]"
                              name="prefguid" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransform Error Output].Columns[PriceTo]"
                              dataType="numeric"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransform Error Output].Columns[PriceTo]"
                              name="PriceTo"
                              precision="10" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransform Error Output].Columns[PriceFrom]"
                              dataType="numeric"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransform Error Output].Columns[PriceFrom]"
                              name="PriceFrom"
                              precision="10" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransform Error Output].Columns[Status]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransform Error Output].Columns[Status]"
                              name="Status" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransform Error Output].Columns[Reference]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransform Error Output].Columns[Reference]"
                              name="Reference" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransform Error Output].Columns[Category]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransform Error Output].Columns[Category]"
                              name="Category" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransform Error Output].Columns[Pivot_Name]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransform Error Output].Columns[Pivot_Name]"
                              name="Pivot_Name" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransform Error Output].Columns[Pivot_Value.id]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransform Error Output].Columns[Pivot_Value.id]"
                              name="Pivot_Value.id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransform Error Output].Columns[P_error_code]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransform Error Output].Columns[P_error_code]"
                              name="P_error_code" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransform Error Output].Columns[P_error_message]"
                              dataType="wstr"
                              length="1000"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransform Error Output].Columns[P_error_message]"
                              name="P_error_message" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransform Error Output].Columns[Pivot_Value.service_record.id]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransform Error Output].Columns[Pivot_Value.service_record.id]"
                              name="Pivot_Value.service_record.id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransform Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransform Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransform Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransform Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransform Error Output].Columns[ErrorColumnName]"
                              codePage="1252"
                              dataType="str"
                              length="128"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransform Error Output].Columns[ErrorColumnName]"
                              name="ErrorColumnName" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransform Error Output].Columns[ErrorMessage]"
                              dataType="wstr"
                              length="1024"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransform Error Output].Columns[ErrorMessage]"
                              name="ErrorMessage" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransform Error Output].Columns[ErrorRawData]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransform Error Output].Columns[ErrorRawData]"
                              name="ErrorRawData" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Add note\Trash Destination"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Trash Destination; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="The trash destination is used to create dummy destination which ends data path without any processing."
                      name="Trash Destination"
                      version="2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.String"
                          description="File path where you want to save data"
                          expressionType="Notify"
                          name="FilePath">C:\SSISVariables\Log\CapaignAdd10</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates if you want to save input data to comma separated text file"
                          expressionType="Notify"
                          name="SaveDataToFile">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Append data to file"
                          expressionType="Notify"
                          name="Append">false</property>
                        <property
                          dataType="System.String"
                          description="RowSeparator"
                          expressionType="Notify"
                          name="RowSeparator">{NEWLINE}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether you want to overwrite target file if exists"
                          expressionType="Notify"
                          name="OverwriteFileIfExists">true</property>
                        <property
                          dataType="System.String"
                          description="ColumnSeparator"
                          expressionType="Notify"
                          name="ColumnSeparator">,</property>
                        <property
                          dataType="System.Boolean"
                          description="SupportUnicode"
                          expressionType="Notify"
                          name="SupportUnicode">true</property>
                        <property
                          dataType="System.Boolean"
                          description="ColumnNamesInFirstRow"
                          expressionType="Notify"
                          name="ColumnNamesInFirstRow">true</property>
                        <property
                          dataType="System.Boolean"
                          description="QuoteDataIfNeeded"
                          expressionType="Notify"
                          name="QuoteDataIfNeeded">true</property>
                        <property
                          dataType="System.String"
                          description="Date time format string for any column with DT_DBDATETIME, DT_DBDATETIME2 or DB_DATE format"
                          expressionType="Notify"
                          name="DateTimeFormat">yyyy-MM-dd HH:mm:ss</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.TrashDestination</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Add note\Trash Destination.Inputs[TrashDestinationInput]"
                          hasSideEffects="true"
                          name="TrashDestinationInput">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Trash Destination.Inputs[TrashDestinationInput].Columns[Category]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Category"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[Category]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Trash Destination.Inputs[TrashDestinationInput].Columns[Reference]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Reference"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[Reference]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Trash Destination.Inputs[TrashDestinationInput].Columns[Status]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Status"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[Status]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Trash Destination.Inputs[TrashDestinationInput].Columns[PriceFrom]"
                              cachedDataType="numeric"
                              cachedName="PriceFrom"
                              cachedPrecision="10"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[PriceFrom]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Trash Destination.Inputs[TrashDestinationInput].Columns[PriceTo]"
                              cachedDataType="numeric"
                              cachedName="PriceTo"
                              cachedPrecision="10"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[PriceTo]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Trash Destination.Inputs[TrashDestinationInput].Columns[prefguid]"
                              cachedDataType="wstr"
                              cachedLength="4000"
                              cachedName="prefguid"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[prefguid]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Trash Destination.Inputs[TrashDestinationInput].Columns[ContactId]"
                              cachedDataType="i4"
                              cachedName="ContactId"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[ContactId]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Trash Destination.Inputs[TrashDestinationInput].Columns[SqlId]"
                              cachedDataType="i4"
                              cachedName="SqlId"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[SqlId]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Trash Destination.Inputs[TrashDestinationInput].Columns[TemplateOutput]"
                              cachedDataType="nText"
                              cachedName="TemplateOutput"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Build Note JSON.Outputs[TemplateTransformOutput].Columns[TemplateOutput]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Trash Destination.Inputs[TrashDestinationInput].Columns[ErrorCode]"
                              cachedDataType="i4"
                              cachedName="ErrorCode"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Post Batch Request.Outputs[WebApiDestination Error Output].Columns[ErrorCode]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Trash Destination.Inputs[TrashDestinationInput].Columns[ErrorColumn]"
                              cachedDataType="i4"
                              cachedName="ErrorColumn"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Post Batch Request.Outputs[WebApiDestination Error Output].Columns[ErrorColumn]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Trash Destination.Inputs[TrashDestinationInput].Columns[ErrorColumnName]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="128"
                              cachedName="ErrorColumnName"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Post Batch Request.Outputs[WebApiDestination Error Output].Columns[ErrorColumnName]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Trash Destination.Inputs[TrashDestinationInput].Columns[ErrorMessage]"
                              cachedDataType="nText"
                              cachedName="ErrorMessage"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Post Batch Request.Outputs[WebApiDestination Error Output].Columns[ErrorMessage]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Add note\Trash Destination 1"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Trash Destination; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="The trash destination is used to create dummy destination which ends data path without any processing."
                      name="Trash Destination 1"
                      version="2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.String"
                          description="File path where you want to save data"
                          expressionType="Notify"
                          name="FilePath">C:\SSISVariables\Log\CapaignAdd19</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates if you want to save input data to comma separated text file"
                          expressionType="Notify"
                          name="SaveDataToFile">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Append data to file"
                          expressionType="Notify"
                          name="Append">false</property>
                        <property
                          dataType="System.String"
                          description="RowSeparator"
                          expressionType="Notify"
                          name="RowSeparator">{NEWLINE}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether you want to overwrite target file if exists"
                          expressionType="Notify"
                          name="OverwriteFileIfExists">true</property>
                        <property
                          dataType="System.String"
                          description="ColumnSeparator"
                          expressionType="Notify"
                          name="ColumnSeparator">,</property>
                        <property
                          dataType="System.Boolean"
                          description="SupportUnicode"
                          expressionType="Notify"
                          name="SupportUnicode">true</property>
                        <property
                          dataType="System.Boolean"
                          description="ColumnNamesInFirstRow"
                          expressionType="Notify"
                          name="ColumnNamesInFirstRow">true</property>
                        <property
                          dataType="System.Boolean"
                          description="QuoteDataIfNeeded"
                          expressionType="Notify"
                          name="QuoteDataIfNeeded">true</property>
                        <property
                          dataType="System.String"
                          description="Date time format string for any column with DT_DBDATETIME, DT_DBDATETIME2 or DB_DATE format"
                          expressionType="Notify"
                          name="DateTimeFormat">yyyy-MM-dd HH:mm:ss</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.TrashDestination</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Add note\Trash Destination 1.Inputs[TrashDestinationInput]"
                          hasSideEffects="true"
                          name="TrashDestinationInput">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Trash Destination 1.Inputs[TrashDestinationInput].Columns[StatusCode]"
                              cachedDataType="i4"
                              cachedName="StatusCode"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransform Error Output].Columns[StatusCode]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Trash Destination 1.Inputs[TrashDestinationInput].Columns[TemplateOutput]"
                              cachedDataType="nText"
                              cachedName="TemplateOutput"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransform Error Output].Columns[TemplateOutput]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Trash Destination 1.Inputs[TrashDestinationInput].Columns[SqlId]"
                              cachedDataType="i4"
                              cachedName="SqlId"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransform Error Output].Columns[SqlId]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Trash Destination 1.Inputs[TrashDestinationInput].Columns[ContactId]"
                              cachedDataType="i4"
                              cachedName="ContactId"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransform Error Output].Columns[ContactId]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Trash Destination 1.Inputs[TrashDestinationInput].Columns[prefguid]"
                              cachedDataType="wstr"
                              cachedLength="4000"
                              cachedName="prefguid"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransform Error Output].Columns[prefguid]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Trash Destination 1.Inputs[TrashDestinationInput].Columns[PriceTo]"
                              cachedDataType="numeric"
                              cachedName="PriceTo"
                              cachedPrecision="10"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransform Error Output].Columns[PriceTo]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Trash Destination 1.Inputs[TrashDestinationInput].Columns[PriceFrom]"
                              cachedDataType="numeric"
                              cachedName="PriceFrom"
                              cachedPrecision="10"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransform Error Output].Columns[PriceFrom]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Trash Destination 1.Inputs[TrashDestinationInput].Columns[Status]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Status"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransform Error Output].Columns[Status]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Trash Destination 1.Inputs[TrashDestinationInput].Columns[Reference]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Reference"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransform Error Output].Columns[Reference]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Trash Destination 1.Inputs[TrashDestinationInput].Columns[Category]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Category"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransform Error Output].Columns[Category]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Trash Destination 1.Inputs[TrashDestinationInput].Columns[Pivot_Name]"
                              cachedDataType="i4"
                              cachedName="Pivot_Name"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransform Error Output].Columns[Pivot_Name]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Trash Destination 1.Inputs[TrashDestinationInput].Columns[Pivot_Value.id]"
                              cachedDataType="i4"
                              cachedName="Pivot_Value.id"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransform Error Output].Columns[Pivot_Value.id]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Trash Destination 1.Inputs[TrashDestinationInput].Columns[P_error_message]"
                              cachedDataType="wstr"
                              cachedLength="1000"
                              cachedName="P_error_message"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransform Error Output].Columns[P_error_message]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Trash Destination 1.Inputs[TrashDestinationInput].Columns[P_error_code]"
                              cachedDataType="i4"
                              cachedName="P_error_code"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransform Error Output].Columns[P_error_code]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Trash Destination 1.Inputs[TrashDestinationInput].Columns[ErrorCode]"
                              cachedDataType="i4"
                              cachedName="ErrorCode"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransform Error Output].Columns[ErrorCode]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Trash Destination 1.Inputs[TrashDestinationInput].Columns[ErrorColumn]"
                              cachedDataType="i4"
                              cachedName="ErrorColumn"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransform Error Output].Columns[ErrorColumn]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Trash Destination 1.Inputs[TrashDestinationInput].Columns[ErrorColumnName]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="128"
                              cachedName="ErrorColumnName"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransform Error Output].Columns[ErrorColumnName]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Trash Destination 1.Inputs[TrashDestinationInput].Columns[ErrorMessage]"
                              cachedDataType="wstr"
                              cachedLength="1024"
                              cachedName="ErrorMessage"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransform Error Output].Columns[ErrorMessage]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Trash Destination 1.Inputs[TrashDestinationInput].Columns[ErrorRawData]"
                              cachedDataType="nText"
                              cachedName="ErrorRawData"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransform Error Output].Columns[ErrorRawData]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Add note\Trash Destination 2"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Trash Destination; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="The trash destination is used to create dummy destination which ends data path without any processing."
                      name="Trash Destination 2"
                      version="2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.String"
                          description="File path where you want to save data"
                          expressionType="Notify"
                          name="FilePath"></property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates if you want to save input data to comma separated text file"
                          expressionType="Notify"
                          name="SaveDataToFile">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Append data to file"
                          expressionType="Notify"
                          name="Append">false</property>
                        <property
                          dataType="System.String"
                          description="RowSeparator"
                          expressionType="Notify"
                          name="RowSeparator">{NEWLINE}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether you want to overwrite target file if exists"
                          expressionType="Notify"
                          name="OverwriteFileIfExists">true</property>
                        <property
                          dataType="System.String"
                          description="ColumnSeparator"
                          expressionType="Notify"
                          name="ColumnSeparator">,</property>
                        <property
                          dataType="System.Boolean"
                          description="SupportUnicode"
                          expressionType="Notify"
                          name="SupportUnicode">true</property>
                        <property
                          dataType="System.Boolean"
                          description="ColumnNamesInFirstRow"
                          expressionType="Notify"
                          name="ColumnNamesInFirstRow">true</property>
                        <property
                          dataType="System.Boolean"
                          description="QuoteDataIfNeeded"
                          expressionType="Notify"
                          name="QuoteDataIfNeeded">true</property>
                        <property
                          dataType="System.String"
                          description="Date time format string for any column with DT_DBDATETIME, DT_DBDATETIME2 or DB_DATE format"
                          expressionType="Notify"
                          name="DateTimeFormat">yyyy-MM-dd HH:mm:ss</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.TrashDestination</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Add note\Trash Destination 2.Inputs[TrashDestinationInput]"
                          hasSideEffects="true"
                          name="TrashDestinationInput">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Add note\Trash Destination 3"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Trash Destination; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="The trash destination is used to create dummy destination which ends data path without any processing."
                      name="Trash Destination 3"
                      version="2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.String"
                          description="File path where you want to save data"
                          expressionType="Notify"
                          name="FilePath"></property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates if you want to save input data to comma separated text file"
                          expressionType="Notify"
                          name="SaveDataToFile">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Append data to file"
                          expressionType="Notify"
                          name="Append">false</property>
                        <property
                          dataType="System.String"
                          description="RowSeparator"
                          expressionType="Notify"
                          name="RowSeparator">{NEWLINE}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether you want to overwrite target file if exists"
                          expressionType="Notify"
                          name="OverwriteFileIfExists">true</property>
                        <property
                          dataType="System.String"
                          description="ColumnSeparator"
                          expressionType="Notify"
                          name="ColumnSeparator">,</property>
                        <property
                          dataType="System.Boolean"
                          description="SupportUnicode"
                          expressionType="Notify"
                          name="SupportUnicode">true</property>
                        <property
                          dataType="System.Boolean"
                          description="ColumnNamesInFirstRow"
                          expressionType="Notify"
                          name="ColumnNamesInFirstRow">true</property>
                        <property
                          dataType="System.Boolean"
                          description="QuoteDataIfNeeded"
                          expressionType="Notify"
                          name="QuoteDataIfNeeded">true</property>
                        <property
                          dataType="System.String"
                          description="Date time format string for any column with DT_DBDATETIME, DT_DBDATETIME2 or DB_DATE format"
                          expressionType="Notify"
                          name="DateTimeFormat">yyyy-MM-dd HH:mm:ss</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.TrashDestination</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Add note\Trash Destination 3.Inputs[TrashDestinationInput]"
                          hasSideEffects="true"
                          name="TrashDestinationInput">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Add note\Update SQL as Processed"
                      componentClassID="Microsoft.OLEDBCommand"
                      contactInfo="OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
                      description="Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time."
                      name="Update SQL as Processed"
                      usesDispositions="true"
                      version="2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">0</property>
                        <property
                          dataType="System.String"
                          description="The SQL command to be executed."
                          expressionType="Notify"
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">Update [ContactAdhocImport202102]

Set NoteId= ? 

Where Id = ?</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Iterate Offices\Sequence Container\Add note\Update SQL as Processed.Connections[OleDbConnection]"
                          connectionManagerID="{1ACC4D99-A047-44CB-AAAD-088F42F69A23}:external"
                          connectionManagerRefId="Project.ConnectionManagers[Rosie]"
                          description="The OLE DB runtime connection used to access the database."
                          name="OleDbConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Add note\Update SQL as Processed.Inputs[OLE DB Command Input]"
                          errorOrTruncationOperation="Command Execution"
                          errorRowDisposition="FailComponent"
                          hasSideEffects="true"
                          name="OLE DB Command Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Update SQL as Processed.Inputs[OLE DB Command Input].Columns[Pivot_Name]"
                              cachedDataType="i4"
                              cachedName="Pivot_Name"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Add note\Update SQL as Processed.Inputs[OLE DB Command Input].ExternalColumns[Param_1]"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransformOutput].Columns[Pivot_Name]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Update SQL as Processed.Inputs[OLE DB Command Input].Columns[Pivot_Value.id]"
                              cachedDataType="i4"
                              cachedName="Pivot_Value.id"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Add note\Update SQL as Processed.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransformOutput].Columns[Pivot_Value.id]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Update SQL as Processed.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                              dataType="i4"
                              name="Param_0">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                                  name="DBParamInfoFlags">81</property>
                              </properties>
                            </externalMetadataColumn>
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Update SQL as Processed.Inputs[OLE DB Command Input].ExternalColumns[Param_1]"
                              dataType="i4"
                              name="Param_1">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                                  name="DBParamInfoFlags">17</property>
                              </properties>
                            </externalMetadataColumn>
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Add note\Update SQL as Processed.Outputs[OLE DB Command Output]"
                          exclusionGroup="1"
                          name="OLE DB Command Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Add note\Update SQL as Processed.Inputs[OLE DB Command Input]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Add note\Update SQL as Processed.Outputs[OLE DB Command Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="OLE DB Command Error Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Add note\Update SQL as Processed.Inputs[OLE DB Command Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Update SQL as Processed.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Update SQL as Processed.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add note\Update SQL as Processed.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Add note\Update SQL as Processed.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                  </components>
                  <paths>
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Add note.Paths[Conditional Split Default Output]"
                      endId="Package\Iterate Offices\Sequence Container\Add note\Update SQL as Processed.Inputs[OLE DB Command Input]"
                      name="Conditional Split Default Output"
                      startId="Package\Iterate Offices\Sequence Container\Add note\Error Message Check.Outputs[Conditional Split Default Output]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Add note.Paths[Conditional Split Error Output]"
                      endId="Package\Iterate Offices\Sequence Container\Add note\Trash Destination 2.Inputs[TrashDestinationInput]"
                      name="Conditional Split Error Output"
                      startId="Package\Iterate Offices\Sequence Container\Add note\Error Message Check.Outputs[Conditional Split Error Output]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Add note.Paths[Derived Column Output]"
                      endId="Package\Iterate Offices\Sequence Container\Add note\Cancat note text.Inputs[Derived Column Input]"
                      name="Derived Column Output"
                      startId="Package\Iterate Offices\Sequence Container\Add note\Build note text.Outputs[Derived Column Output]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Add note.Paths[Derived Column Output1]"
                      endId="Package\Iterate Offices\Sequence Container\Add note\Build Note JSON.Inputs[TemplateTransformInput]"
                      name="Derived Column Output"
                      startId="Package\Iterate Offices\Sequence Container\Add note\Cancat note text.Outputs[Derived Column Output]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Add note.Paths[Fail]"
                      endId="Package\Iterate Offices\Sequence Container\Add note\Trash Destination 3.Inputs[TrashDestinationInput]"
                      name="Fail"
                      startId="Package\Iterate Offices\Sequence Container\Add note\Error Message Check.Outputs[Fail]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Add note.Paths[JsonParserTransform Error Output]"
                      endId="Package\Iterate Offices\Sequence Container\Add note\Trash Destination 1.Inputs[TrashDestinationInput]"
                      name="JsonParserTransform Error Output"
                      startId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransform Error Output]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Add note.Paths[JsonParserTransformOutput]"
                      endId="Package\Iterate Offices\Sequence Container\Add note\Error Message Check.Inputs[Conditional Split Input]"
                      name="JsonParserTransformOutput"
                      startId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Outputs[JsonParserTransformOutput]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Add note.Paths[OLE DB Source Output]"
                      endId="Package\Iterate Offices\Sequence Container\Add note\Build note text.Inputs[Derived Column Input]"
                      name="OLE DB Source Output"
                      startId="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Add note.Paths[Response Output]"
                      endId="Package\Iterate Offices\Sequence Container\Add note\Read Success.Inputs[JsonParserTransformInput]"
                      name="Response Output"
                      startId="Package\Iterate Offices\Sequence Container\Add note\Post Batch Request.Outputs[Response Output]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Add note.Paths[TemplateTransformOutput]"
                      endId="Package\Iterate Offices\Sequence Container\Add note\Post Batch Request.Inputs[WebApiDestinationInput]"
                      name="TemplateTransformOutput"
                      startId="Package\Iterate Offices\Sequence Container\Add note\Build Note JSON.Outputs[TemplateTransformOutput]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Add note.Paths[WebApiDestination Error Output]"
                      endId="Package\Iterate Offices\Sequence Container\Add note\Trash Destination.Inputs[TrashDestinationInput]"
                      name="WebApiDestination Error Output"
                      startId="Package\Iterate Offices\Sequence Container\Add note\Post Batch Request.Outputs[WebApiDestination Error Output]" />
                  </paths>
                </pipeline>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Iterate Offices\Sequence Container\Add reminder"
              DTS:CreationName="Microsoft.Pipeline"
              DTS:Description="Data Flow Task"
              DTS:Disabled="True"
              DTS:DTSID="{A0D12120-083F-4AAA-BB06-04D4C5D0010E}"
              DTS:ExecutableType="Microsoft.Pipeline"
              DTS:LocaleID="-1"
              DTS:ObjectName="Add reminder"
              DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:ObjectData>
                <pipeline
                  version="1">
                  <components>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Add reminder\Build Reminder JSON"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Template Transform; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="Template transform allows to produce multi line string from template text. You can insert placeholders anywhere in the string. Ideal use case would be produce simple XML or JSON without use of JSON or XML Generator Transform."
                      name="Build Reminder JSON"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.String"
                          description="Template text which needs to be replaced. Any where in the text you can use input column names as placeholders (e.g. &lt;%CustomerEmail%&gt; ). You can also use user/system variable as placeholder (e.g. {{User::MyVariable}} )"
                          expressionType="Notify"
                          name="TemplateText"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">
    "&lt;%SqlId%&gt;": {
        "method": "Reminders::create",
        "args": {
            "data": {
                "template_id": null,
                "reminder_type": {
                    "id": "task",
                    "text": "Task"
                },
                "reminder_description": "&lt;%ReminderText%&gt;",
                "reminder_date": "2021-02-26",
                "reminder_duration_minutes": 60,
                "track_instance_id": null,
                "remindee": {
                    "id": "&lt;%KKaccountuser%&gt;",
                    "type": "user"
                },
                "contact": {
                    "id": "&lt;%ContactId%&gt;"
                },
                "project": null,
                "project_stage": null,
                "market_lead": null,
                     "priority": {
                    "id": "default",
                    "text": "Default"
                },
              
                "template": {
                    "id": null,
                    "_id": null
                }
               
            }
        }
    }
</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.TemplateTransform</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Add reminder\Build Reminder JSON.Inputs[TemplateTransformInput]"
                          name="TemplateTransformInput">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Build Reminder JSON.Inputs[TemplateTransformInput].Columns[SqlId]"
                              cachedDataType="i4"
                              cachedName="SqlId"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[SqlId]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Build Reminder JSON.Inputs[TemplateTransformInput].Columns[ReminderText]"
                              cachedDataType="wstr"
                              cachedLength="35"
                              cachedName="ReminderText"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Build reminder text.Outputs[Derived Column Output].Columns[ReminderText]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Build Reminder JSON.Inputs[TemplateTransformInput].Columns[KKaccountuser]"
                              cachedDataType="i4"
                              cachedName="KKaccountuser"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[KKaccountuser]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Build Reminder JSON.Inputs[TemplateTransformInput].Columns[ContactId]"
                              cachedDataType="i4"
                              cachedName="ContactId"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[ContactId]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Add reminder\Build Reminder JSON.Outputs[TemplateTransformOutput]"
                          errorOrTruncationOperation="Error"
                          name="TemplateTransformOutput"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Add reminder\Build Reminder JSON.Inputs[TemplateTransformInput]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Build Reminder JSON.Outputs[TemplateTransformOutput].Columns[TemplateOutput]"
                              dataType="nText"
                              description="Template output column which will contain replaced text."
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Build Reminder JSON.Outputs[TemplateTransformOutput].Columns[TemplateOutput]"
                              name="TemplateOutput" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Add reminder\Build reminder text"
                      componentClassID="Microsoft.DerivedColumn"
                      contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                      name="Build reminder text"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Add reminder\Build reminder text.Inputs[Derived Column Input]"
                          description="Input to the Derived Column Transformation"
                          name="Derived Column Input">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Add reminder\Build reminder text.Outputs[Derived Column Output]"
                          description="Default Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          name="Derived Column Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Add reminder\Build reminder text.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Build reminder text.Outputs[Derived Column Output].Columns[ReminderText]"
                              dataType="wstr"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              length="35"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Build reminder text.Outputs[Derived Column Output].Columns[ReminderText]"
                              name="ReminderText"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">"New Network Lead to call.  Act now."</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">"New Network Lead to call.  Act now."</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Build reminder text.Outputs[Derived Column Output].Columns[ReminderDate]"
                              dataType="dbTimeStamp"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Build reminder text.Outputs[Derived Column Output].Columns[ReminderDate]"
                              name="ReminderDate"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">[GETDATE]()</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">GETDATE()</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Add reminder\Build reminder text.Outputs[Derived Column Error Output]"
                          description="Error Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Derived Column Error Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Add reminder\Build reminder text.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Build reminder text.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Build reminder text.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Build reminder text.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Build reminder text.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Add reminder\Error Message Check"
                      componentClassID="Microsoft.ConditionalSplit"
                      contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
                      name="Error Message Check"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Add reminder\Error Message Check.Inputs[Conditional Split Input]"
                          description="Input to the Conditional Split Transformation"
                          name="Conditional Split Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Error Message Check.Inputs[Conditional Split Input].Columns[P_error_message]"
                              cachedDataType="wstr"
                              cachedLength="332"
                              cachedName="P_error_message"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].Columns[P_error_message]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Add reminder\Error Message Check.Outputs[Fail]"
                          description="Output 1 of the Conditional Split Transformation"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="RedirectRow"
                          exclusionGroup="1"
                          name="Fail"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Add reminder\Error Message Check.Inputs[Conditional Split Input]"
                          truncationRowDisposition="RedirectRow">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                              name="Expression">[ISNULL](#{Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].Columns[P_error_message]}) ==  FALSE </property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the friendly version of the expression. This expression version uses column names."
                              expressionType="Notify"
                              name="FriendlyExpression">ISNULL(P_error_message) ==  FALSE </property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                              name="EvaluationOrder">0</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Add reminder\Error Message Check.Outputs[Conditional Split Default Output]"
                          description="Default Output of the Conditional Split Transformation"
                          exclusionGroup="1"
                          name="Conditional Split Default Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Add reminder\Error Message Check.Inputs[Conditional Split Input]">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              name="IsDefaultOut">true</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Add reminder\Error Message Check.Outputs[Conditional Split Error Output]"
                          description="Error Output of the Conditional Split Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Conditional Split Error Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Add reminder\Error Message Check.Inputs[Conditional Split Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Error Message Check.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Error Message Check.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Error Message Check.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Error Message Check.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Add reminder\Get Rosie Loaded Contacts from SQL"
                      componentClassID="Microsoft.OLEDBSource"
                      contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                      description="OLE DB Source"
                      name="Get Rosie Loaded Contacts from SQL"
                      usesDispositions="true"
                      version="7">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">0</property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the database object used to open a rowset."
                          name="OpenRowset">[dbo].[vwContacts]</property>
                        <property
                          dataType="System.String"
                          description="Specifies the variable that contains the name of the database object used to open a rowset."
                          name="OpenRowsetVariable"></property>
                        <property
                          dataType="System.String"
                          description="The SQL command to be executed."
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">SELECT Id AS SqlId, 
               
               [Category], 
               [Reference], 
               [Status], 
               [CurrentOfficeName], 
               [PriceFrom], 
               [PriceTo],
  [LastValuation],
            [Timescale],
     [Search Type],
               CASE
                   WHEN [prefguid] IS NOT NULL
                   THEN 'https://preference.spicerhaart.co.uk/?custID=' + CAST([prefguid] AS NVARCHAR(4000))
                   ELSE NULL
               END AS [prefguid], 
               ContactId,
[KKaccountuser] 
FROM [Rosie].[dbo].ContactAdhocImport202102 ci
WHERE contactid IS NOT NULL
      AND [TargetOfficeId] = ?
      AND [prefguid] IS NOT NULL
      AND reminderid IS NULL and [KKaccountuser] is not null
and [ContactLoadedDate] &gt; cast(getdate() as date)</property>
                        <property
                          dataType="System.String"
                          description="The variable that contains the SQL command to be executed."
                          name="SqlCommandVariable"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Boolean"
                          description="Forces the use of the DefaultCodePage property value when describing character data."
                          name="AlwaysUseDefaultCodePage">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the mode used to access the database."
                          name="AccessMode"
                          typeConverter="AccessMode">2</property>
                        <property
                          dataType="System.String"
                          description="The mappings between the parameters in the SQL command and variables."
                          name="ParameterMapping">"Parameter0:Input",{B4701D52-6FAA-434F-8042-898CB08D7322};</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Iterate Offices\Sequence Container\Add reminder\Get Rosie Loaded Contacts from SQL.Connections[OleDbConnection]"
                          connectionManagerID="{1ACC4D99-A047-44CB-AAAD-088F42F69A23}:external"
                          connectionManagerRefId="Project.ConnectionManagers[Rosie]"
                          description="The OLE DB runtime connection used to access the database."
                          name="OleDbConnection" />
                      </connections>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Add reminder\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output]"
                          name="OLE DB Source Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[Category]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Add reminder\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].ExternalColumns[Category]"
                              length="50"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[Category]"
                              name="Category"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[Reference]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Add reminder\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].ExternalColumns[Reference]"
                              length="50"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[Reference]"
                              name="Reference"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[Status]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Add reminder\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].ExternalColumns[Status]"
                              length="50"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[Status]"
                              name="Status"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[PriceFrom]"
                              dataType="numeric"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Add reminder\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].ExternalColumns[PriceFrom]"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[PriceFrom]"
                              name="PriceFrom"
                              precision="10"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[PriceTo]"
                              dataType="numeric"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Add reminder\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].ExternalColumns[PriceTo]"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[PriceTo]"
                              name="PriceTo"
                              precision="10"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[prefguid]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Add reminder\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].ExternalColumns[prefguid]"
                              length="4000"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[prefguid]"
                              name="prefguid"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[ContactId]"
                              dataType="i4"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Add reminder\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].ExternalColumns[ContactId]"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[ContactId]"
                              name="ContactId"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[SqlId]"
                              dataType="i4"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Add reminder\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].ExternalColumns[SqlId]"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[SqlId]"
                              name="SqlId"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[CurrentOfficeName]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Add reminder\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].ExternalColumns[CurrentOfficeName]"
                              length="50"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[CurrentOfficeName]"
                              name="CurrentOfficeName"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[LastValuation]"
                              dataType="dbTimeStamp"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Add reminder\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].ExternalColumns[LastValuation]"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[LastValuation]"
                              name="LastValuation"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[Timescale]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Add reminder\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].ExternalColumns[Timescale]"
                              length="50"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[Timescale]"
                              name="Timescale"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[Search Type]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Add reminder\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].ExternalColumns[Search Type]"
                              length="50"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[Search Type]"
                              name="Search Type"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[KKaccountuser]"
                              dataType="i4"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Add reminder\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].ExternalColumns[KKaccountuser]"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[KKaccountuser]"
                              name="KKaccountuser"
                              truncationRowDisposition="FailComponent" />
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].ExternalColumns[Category]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              name="Category" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].ExternalColumns[Reference]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              name="Reference" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].ExternalColumns[Status]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              name="Status" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].ExternalColumns[PriceFrom]"
                              dataType="numeric"
                              name="PriceFrom"
                              precision="10" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].ExternalColumns[PriceTo]"
                              dataType="numeric"
                              name="PriceTo"
                              precision="10" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].ExternalColumns[prefguid]"
                              dataType="wstr"
                              length="4000"
                              name="prefguid" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].ExternalColumns[ContactId]"
                              dataType="i4"
                              name="ContactId" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].ExternalColumns[SqlId]"
                              dataType="i4"
                              name="SqlId" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].ExternalColumns[CurrentOfficeName]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              name="CurrentOfficeName" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].ExternalColumns[LastValuation]"
                              dataType="dbTimeStamp"
                              name="LastValuation" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].ExternalColumns[Timescale]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              name="Timescale" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].ExternalColumns[Search Type]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              name="Search Type" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].ExternalColumns[KKaccountuser]"
                              dataType="i4"
                              name="KKaccountuser" />
                          </externalMetadataColumns>
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Add reminder\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Error Output]"
                          isErrorOut="true"
                          name="OLE DB Source Error Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[SqlId]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[SqlId]"
                              name="SqlId" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[Category]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[Category]"
                              name="Category" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[Reference]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[Reference]"
                              name="Reference" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[Status]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[Status]"
                              name="Status" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[CurrentOfficeName]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[CurrentOfficeName]"
                              name="CurrentOfficeName" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[PriceFrom]"
                              dataType="numeric"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[PriceFrom]"
                              name="PriceFrom"
                              precision="10" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[PriceTo]"
                              dataType="numeric"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[PriceTo]"
                              name="PriceTo"
                              precision="10" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[LastValuation]"
                              dataType="dbTimeStamp"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[LastValuation]"
                              name="LastValuation" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[Timescale]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[Timescale]"
                              name="Timescale" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[Search Type]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[Search Type]"
                              name="Search Type" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[prefguid]"
                              dataType="wstr"
                              length="4000"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[prefguid]"
                              name="prefguid" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[ContactId]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[ContactId]"
                              name="ContactId" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[KKaccountuser]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[KKaccountuser]"
                              name="KKaccountuser" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Add reminder\Post Batch Request"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Web API Destination; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="The Web API destination can be used to send data to Web API URL (e.g. Submit or POST data to REST API/SOAP or other HTTP/HTTPS endpoints)"
                      name="Post Batch Request"
                      usesDispositions="true"
                      version="5">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">3</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.String"
                          description="API URL you want to access"
                          expressionType="Notify"
                          name="HttpRequestUrl">{{User::RexAPIWebURLv1}}rex/batch-requests/execute-with-transaction</property>
                        <property
                          dataType="System.String"
                          description="Http Web Request Method (e.g. POST, GET, PUT, LIST, DELETE...). Refer your API documentation if you are not sure which method you have to use."
                          expressionType="Notify"
                          name="HttpRequestMethod">POST</property>
                        <property
                          dataType="System.String"
                          description="Set this if you want to set custom Http headers. You may use variable anywhere in the header value using syntax {{User::YourVarName}}. Syntax of Header key value pair is : &amp;lt;request&amp;gt;&amp;lt;header&amp;gt;&amp;lt;name&amp;gt;x-myheader-1&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;AAA&amp;lt;/value&amp;gt;&amp;lt;/header&amp;gt; &amp;lt;header&amp;gt;&amp;lt;name&amp;gt;x-myheader-2&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;BBB&amp;lt;/value&amp;gt;&amp;lt;/header&amp;gt;&amp;lt;/request&amp;gt;"
                          expressionType="Notify"
                          name="HttpHeaders"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">&lt;request&gt;&lt;header&gt;&lt;name&gt;Accept&lt;/name&gt;&lt;value&gt;*/*&lt;/value&gt;&lt;/header&gt;&lt;header&gt;&lt;name&gt;Cache-Control&lt;/name&gt;&lt;value&gt;no-cache&lt;/value&gt;&lt;/header&gt;&lt;header&gt;&lt;name&gt;Authorization&lt;/name&gt;&lt;value&gt;Bearer {{User::RexToken}}&lt;/value&gt;&lt;/header&gt;&lt;/request&gt;</property>
                        <property
                          dataType="System.String"
                          description="User defined data you wish to send along with your HTTP Request (e.g. Upload file data, Form POST data). Usually you have to set content-type of your data but if you select RequestMethod=POST then system will automatically set content-type=application/x-www-form-urlencoded."
                          expressionType="Notify"
                          name="HttpRequestData"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies content type for data you wish to POST. If you select Default option then system default content type will be used (i.e. application/x-www-form-urlencoded). If you specify Content-Type header along with this option then header value takes precedence."
                          expressionType="Notify"
                          name="HttpRequestContentType"
                          typeConverter="ZappySys.Common.Web.HttpRequestContentType">2</property>
                        <property
                          dataType="System.Boolean"
                          description="If this option is true then component will continue without exception on 404 error (Url not found). This allows you to consume data gracefully."
                          expressionType="Notify"
                          name="ContinueOnUrlNotFoundError">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Ignore SSL certificate related errors. Example: if you getting SSL/TLS errors because of certificate expired or certificate is not from trusted authority or certificate is self-signed. By checking this option you will not get SSL/TLS error."
                          expressionType="Notify"
                          name="IgnoreCertificateErrors">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Allow unsecure ciphers/suites and curves for SSLS/TLS communication. Use this option to communicate with web servers which needs legacy / unsecured ciphers support. This option is only trigged when you change default SSL/TLS Version on advanced settings tab."
                          expressionType="Notify"
                          name="AllowUnsecureSuite">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Enable support for gzip or deflate compression. When you check this option compressed response automatically de-compressed saving bandwidth. This option is only valid if web server supports compressed response stream. Check your API documentation for more information."
                          expressionType="Notify"
                          name="EnableCompressionSupport">true</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies which security protocol is supported for HTTPS communication. Using this option you can enable legacy protocol or enforce to use latest version of security protocol (Note: TLS 1.2 is only supported in SSIS 2014 or Higher)."
                          expressionType="Notify"
                          name="SecurityProtocol"
                          typeConverter="ZappySys.PowerPack.Common.HttpsSecurityProtocolType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Wait time in milliseconds (Pause after each request). 0=No wait. Use this delay time if your API has limit on how many requests you can make in certain time frame."
                          expressionType="Notify"
                          name="WaitTime">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you redirect error to error output by default you get additional information in ErrorMessage column. Check this option if you need exact Response Body (Useful if its in JSON/XML format which needs to be parsed for additional information for later step)."
                          expressionType="Notify"
                          name="OnErrorOutputResponseBody">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Enable multiple requests using parallel threads."
                          expressionType="Notify"
                          name="EnableParallelRequests">false</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum parallel threads to use for processing multiple web requests."
                          expressionType="Notify"
                          name="MaxParallelThreads">20</property>
                        <property
                          dataType="System.Boolean"
                          description="By default one request is sent for each input row. If your API supports multiple records in a single call via HTTP Body then enable this setting. See also BodyBatchSize, BodyHeader, BodyFooter and BodyRowSeparator property."
                          expressionType="Notify"
                          name="EnableBodyBatch">true</property>
                        <property
                          dataType="System.String"
                          description="When you have to wrap input content between opening and closing tags for each call then set this property to specify opening for body content. For Example if you want to build Body like this (send max 100 rows per call) ==&gt; { records : [ {...}, {...}, {...} ] } then you can set BatchSize=100, BodyHeader as &quot;{ records: [&quot; , BodyFooter as &quot;] }&quot; and BodyRowSeperator as comma {,}. This property is ignored if EnableBodyBatch=false."
                          expressionType="Notify"
                          name="BodyHeader">{   "requests": {</property>
                        <property
                          dataType="System.String"
                          description="When you have to wrap input content between opening and closing tags for each call then set this property to specify closing for body content. For Example if you want to build Body like this (send max 100 rows per call) ==&gt; { records : [ {...}, {...}, {...} ] } then you can set BatchSize=100, BodyHeader as &quot;{ records: [&quot; , BodyFooter as &quot;] }&quot; and BodyRowSeperator as comma {,}. This property is ignored if EnableBodyBatch=false."
                          expressionType="Notify"
                          name="BodyFooter">}}</property>
                        <property
                          dataType="System.Int32"
                          description="If your API supports multiple records via HTTP Body then change this setting &gt; 1 to include multiple upstream records into single call. See also BodyHeader, BodyFooter and BodyRowSeparator property. This property is ignored if EnableBodyBatch=false."
                          expressionType="Notify"
                          name="BodyBatchSize">100</property>
                        <property
                          dataType="System.String"
                          description="When you submit multiple rows in a batch you can separate multiple documents / records using custom separator (e.g. in JSON Array you can use comma {,} as record separator if POST document is in array format [ {...}, {...}, {...} ] ). For last row of batch blank separator is used."
                          expressionType="Notify"
                          name="BodyRowSeparator">,</property>
                        <property
                          dataType="System.Boolean"
                          description="Returns response data as binary data (e.g. Byte Array). Check this option is response is Zip file, Image file or any non text data which needs to be exported as raw data without any encoding."
                          expressionType="Notify"
                          name="TreatResponseAsBinary">false</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.WebApiDestination</property>
                        <property
                          dataType="System.Boolean"
                          description="Check this option if you want to upload file(s) (i.e. POST RAW file data) or send data using Multi-Part encoding method (i.e. Content-Type: multipart/form-data). Multi-Part request allows you to mix key/value and upload files in same request. On the other hand raw upload allows only single file upload (without any key/value) &#xA;&#xA;==== Raw Upload (Content-Type: application/octet-stream) =====   &#xA;To upload single file in raw mode check this option and specify full file path starting with @ sign in the Body (e.g.  @c:\data\myfile.zip ) &#xA;&#xA;==== Form-Data / Multipart Upload (Content-Type: multipart/form-data) =====   &#xA;To treat your Request data as multi part fields you must specify key/value pairs separated by new lines into RequestData field (i.e. Body). Each key value pair is entered on new-line and key/value are separated using equal sign (=). Preceding and trailing spaces are ignored also blank lines are ignored. &#xA;If field value has some any special character(s) then use escape sequence (e.g. For NewLine: \r\n, For Tab: \t, For at (@): \@). When value of any field starts with at sign (@) its automatically treated as File you want to upload. By default file content type is determined based on extension however you can supply content type manually for any field using this way [ fieldname.Content-Type=some content type ]. In below example we have supplied Content-Type for file2 and SomeField1, all other fields are using default content-type.&#xA;See below Example of uploading multiple files along with additional fields.&#xA;&#xA;file1=@c:\data\Myfile1.txt&#xA;file2=@c:\data\Myfile2.json&#xA;file2.Content-Type=application/json&#xA;SomeField1=aaaaaaa&#xA;SomeField1.Content-Type=text/plain&#xA;SomeField2=12345&#xA;SomeFieldWithNewLineAndTab=This is line1\r\nThis is line2\r\nThis is \ttab \ttab \ttab&#xA;SomeFieldStartingWithAtSign=\@MyTwitterHandle&#xA;"
                          expressionType="Notify"
                          name="IsMultiPartUpload">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Enable this option if your server is expecting &#xA; (i.e. CRLF) after last Multi-Part boundary in the Body. This option is only applicable if you enabled IsMultiPartUpload and sending data in Key=value format (i.e. Mutipart). For raw file upload this option has no effect."
                          expressionType="Notify"
                          name="AddMultiPartPostamble">false</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Iterate Offices\Sequence Container\Add reminder\Post Batch Request.Connections[Connection]"
                          connectionManagerID="Package.ConnectionManagers[HTTP 1]"
                          connectionManagerRefId="Package.ConnectionManagers[HTTP 1]"
                          description="Connection manager for authentication (e.g. HTTP or OAuth Connection)"
                          name="Connection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Add reminder\Post Batch Request.Inputs[WebApiDestinationInput]"
                          errorRowDisposition="RedirectRow"
                          hasSideEffects="true"
                          name="WebApiDestinationInput"
                          truncationRowDisposition="RedirectRow">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Post Batch Request.Inputs[WebApiDestinationInput].Columns[TemplateOutput]"
                              cachedDataType="nText"
                              cachedName="TemplateOutput"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Add reminder\Post Batch Request.Inputs[WebApiDestinationInput].ExternalColumns[HttpRequestData]"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Build Reminder JSON.Outputs[TemplateTransformOutput].Columns[TemplateOutput]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Post Batch Request.Inputs[WebApiDestinationInput].ExternalColumns[HttpRequestUrl]"
                              dataType="wstr"
                              length="2000"
                              name="HttpRequestUrl" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Post Batch Request.Inputs[WebApiDestinationInput].ExternalColumns[HttpRequestData]"
                              dataType="nText"
                              name="HttpRequestData" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Post Batch Request.Inputs[WebApiDestinationInput].ExternalColumns[HttpHeaders]"
                              dataType="wstr"
                              length="2000"
                              name="HttpHeaders" />
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Add reminder\Post Batch Request.Outputs[WebApiDestination Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="WebApiDestination Error Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Add reminder\Post Batch Request.Inputs[WebApiDestinationInput]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Post Batch Request.Outputs[WebApiDestination Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Post Batch Request.Outputs[WebApiDestination Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Post Batch Request.Outputs[WebApiDestination Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Post Batch Request.Outputs[WebApiDestination Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Post Batch Request.Outputs[WebApiDestination Error Output].Columns[ErrorColumnName]"
                              codePage="1252"
                              dataType="str"
                              length="128"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Post Batch Request.Outputs[WebApiDestination Error Output].Columns[ErrorColumnName]"
                              name="ErrorColumnName" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Post Batch Request.Outputs[WebApiDestination Error Output].Columns[ErrorMessage]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Post Batch Request.Outputs[WebApiDestination Error Output].Columns[ErrorMessage]"
                              name="ErrorMessage" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Add reminder\Post Batch Request.Outputs[Response Output]"
                          exclusionGroup="1"
                          name="Response Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Add reminder\Post Batch Request.Inputs[WebApiDestinationInput]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Post Batch Request.Outputs[Response Output].Columns[ResponseText]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Post Batch Request.Outputs[Response Output].Columns[ResponseText]"
                              name="ResponseText" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Post Batch Request.Outputs[Response Output].Columns[StatusCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Post Batch Request.Outputs[Response Output].Columns[StatusCode]"
                              name="StatusCode" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="JSON Parser Transform; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="Parse incoming JSON String into columns. You can also parse and transform single JSON record into multiple rows by filtering data based on JSON Path (e.g. $.Customer.Orders[*])"
                      name="Read Success"
                      usesDispositions="true"
                      version="2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for any numeric data types"
                          expressionType="Notify"
                          name="TreatBlankNumberAsNull">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for bool data types"
                          expressionType="Notify"
                          name="TreatBlankBoolAsNull">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for any date/time data types"
                          expressionType="Notify"
                          name="TreatBlankDateAsNull">true</property>
                        <property
                          dataType="System.Int32"
                          description="Encoding of source file"
                          expressionType="Notify"
                          name="Encoding"
                          typeConverter="ZappySys.Common.EncodingType">0</property>
                        <property
                          dataType="System.String"
                          description="Character set for text (e.g. utf-8 )"
                          expressionType="Notify"
                          name="CharacterSet"></property>
                        <property
                          dataType="System.String"
                          description="Sample JSON data used to parse output columns."
                          expressionType="Notify"
                          name="SampleData"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">{
    "result": {
        "123": {
            "system_ctime": 1613409380,
            "system_modtime": 1613409380,
            "etag": "292881-1613409380",
            "system_modified_user": {
                "id": "19443",
                "name": "Rosie API",
                "first_name": "Rosie",
                "last_name": "API",
                "email_address": "rosie@spicerhaart.co.uk"
            },
            "system_created_user": {
                "id": "19443",
                "name": "Rosie API",
                "first_name": "Rosie",
                "last_name": "API",
                "email_address": "rosie@spicerhaart.co.uk"
            },
            "service_record": {
                "id": 218763,
                "text": "DC Law solicitors",
                "stub": {
                    "name": "DC Law solicitors",
                    "email_address": null,
                    "phone_number": null,
                    "fax_number": null,
                    "address_postal": null,
                    "address": null,
                    "id": "218763"
                }
            },
            "status": {
                "id": 44931,
                "text": "To Call"
            },
            "service_type": {
                "id": "Contacts",
                "text": "Contacts"
            },
            "last_activity": null,
            "campaign": {
                "name": "Network Lead",
                "type": {
                    "id": "phone",
                    "text": "Phone"
                },
                "status": {
                    "id": "in_progress",
                    "text": "In Progress"
                },
                "id": 3157
            },
            "id": 292881
        },
        "456": {
            "system_ctime": 1613409380,
            "system_modtime": 1613409380,
            "etag": "292882-1613409380",
            "system_modified_user": {
                "id": "19443",
                "name": "Rosie API",
                "first_name": "Rosie",
                "last_name": "API",
                "email_address": "rosie@spicerhaart.co.uk"
            },
            "system_created_user": {
                "id": "19443",
                "name": "Rosie API",
                "first_name": "Rosie",
                "last_name": "API",
                "email_address": "rosie@spicerhaart.co.uk"
            },
            "service_record": {
                "id": 343691,
                "text": "Test Company",
                "stub": {
                    "name": "Test Company",
                    "email_address": null,
                    "phone_number": null,
                    "fax_number": null,
                    "address_postal": null,
                    "address": null,
                    "id": "343691"
                }
            },
            "status": {
                "id": 44931,
                "text": "To Call"
            },
            "service_type": {
                "id": "Contacts",
                "text": "Contacts"
            },
            "last_activity": null,
            "campaign": {
                "name": "Network Lead",
                "type": {
                    "id": "phone",
                    "text": "Phone"
                },
                "status": {
                    "id": "in_progress",
                    "text": "In Progress"
                },
                "id": 3157
            },
            "id": 292882
        }
    },
    "error": {
		"message": "The JSON body you provided was not valid: 'Syntax error'. Please fix and try again.",
		"type": "InvalidArgumentException",
		"code": 0,
		"extra": {
			"request_data": {
				"method": "AuthenticatedServiceProxy::describe",
				"add_request_prefixes": true
			}
		}
		}
}</property>
                        <property
                          dataType="System.Boolean"
                          description="Include all upstream parent columns into output except the one you selected to parse. By default only parsed columns from Input document is included in the output. If you wish to include all other upstream columns in the output too then check this option."
                          expressionType="Notify"
                          name="OutputAllUpstreamColumns">true</property>
                        <property
                          dataType="System.Int32"
                          description="Defines how to handle empty input. By default NULL or Empty input is skipped from parsing."
                          expressionType="Notify"
                          name="EmptyInputProcessingMode"
                          typeConverter="ZappySys.Common.Data.EmptyInputProcessingMode">0</property>
                        <property
                          dataType="System.String"
                          description="Defines how to handle empty input. By default NULL or Empty input is skipped from parsing."
                          expressionType="Notify"
                          name="TreatEmptyInputAs">{ }</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum JSON records to fetch. Set this value to 0 for all records"
                          expressionType="Notify"
                          name="MaxRows">0</property>
                        <property
                          dataType="System.String"
                          description="Enter expression here to filter data.(Example:  $.Users[*].UserName ) This will fetch User names from users records"
                          expressionType="Notify"
                          name="Filter"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">$.result</property>
                        <property
                          dataType="System.Boolean"
                          description="Use this option to include parent properties (Non array) in the output along with Filtered Rows"
                          expressionType="Notify"
                          name="IncludeParentColumns">true</property>
                        <property
                          dataType="System.Boolean"
                          description="By default child and parent information is not included in the output if children not found for specified expression. For example if you want to extract all orders from all customers nodes then you can type $.Customers[*].Orders[*]. This will fetch all orders from all customers. By default customers records without orders wont be included in the output. If you want to include those customers where orders not found then check this option (Output null information for order attributes). This behavior is similar to LEFT OUTER JOIN in SQL (Left side is parent, right side is child). This option is ***resource intensive*** so only check if you really care about this behavior."
                          expressionType="Notify"
                          name="IncludeParentColumnsWhenChildMissing">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to true if you want to output parent columns which are array. By default any parent column which is an array is not included in output. See also FilterForParentColumnsWithArrayType property if you set this property"
                          expressionType="Notify"
                          name="IncludeParentColumnsWithArrayType">true</property>
                        <property
                          dataType="System.String"
                          description="Filter expression to extract value form parent"
                          expressionType="Notify"
                          name="FilterForParentColumnsWithArrayType"></property>
                        <property
                          dataType="System.String"
                          description="Prefix for parent column name. This option is only valid if you have set IncludeParentColumns=True"
                          expressionType="Notify"
                          name="ParentColumnPrefix">P_</property>
                        <property
                          dataType="System.Boolean"
                          description="Throw error if property name specified in filter expression is missing. By default it will ignore any missing property errors."
                          expressionType="Notify"
                          name="ThrowErrorIfPropertyMissing">false</property>
                        <property
                          dataType="System.Int32"
                          description="This property how many nested levels should be scanned to fetch various properties. 0=Scan all child levels."
                          expressionType="Notify"
                          name="MaxLevelsToScan">0</property>
                        <property
                          dataType="System.String"
                          description="List comma separated property names from JSON document which you want to exclude from output. Specify parent property name to exclude all child nodes."
                          expressionType="Notify"
                          name="ExcludedProperties"></property>
                        <property
                          dataType="System.String"
                          description="Property level separator used in generated property name (separator for outer properties - Above selected filter node). Use this if default separator is producing duplicate property name which is conflicting with existing name."
                          expressionType="Notify"
                          name="LevelSeparator">_</property>
                        <property
                          dataType="System.Boolean"
                          description="Enables deep array flattening for selected filtered hierarchy. When you turn on this property it will flatten each property of each array item and expose as column (e.g. If you have Filter set as $.customers[*] and for each customer you have an array of Addresses then you may see output columns like Addresses.1.City, Addresses.1.State, Addresses.2.City, Addresses.2.State .... Addresses.N.City, Addresses.N.State). You can control how many array items you want to flatten by setting MaxArrayItemsToFlatten property."
                          expressionType="Notify"
                          name="EnableArrayFlattening">false</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum number of array items to flatten. inner array flattening. Adjust this property to control how many columns being generated. This option is ignored if you set EnableArrayFlattening=false"
                          expressionType="Notify"
                          name="MaxArrayItemsToFlatten">10</property>
                        <property
                          dataType="System.String"
                          description="Specifies how custom date formatted strings are parsed when reading JSON."
                          expressionType="Notify"
                          name="DateFormatString"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies how date formatted strings, e.g. Date(1198908717056) and 2012-03-21T05:40Z, are parsed when reading JSON."
                          expressionType="Notify"
                          name="DateParseHandling"
                          typeConverter="ZappySys.Common.DateParseHandling">1</property>
                        <property
                          dataType="System.Boolean"
                          description="Indent JSON output so its easy to read."
                          expressionType="Notify"
                          name="IndentOutput">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Output as raw JSON document rather than parsing individual fields. This option is helpful if you have documents stored in a file and you want to pass them downstream as raw JSON string rather than parsing into columns."
                          expressionType="Notify"
                          name="OutputRawDocument">false</property>
                        <property
                          dataType="System.Boolean"
                          description="When this property is true then Column is converted to Row. Pivoted names will appear under  Pivot_Name column and values will appear under Pivot_Value field."
                          expressionType="Notify"
                          name="EnablePivot">true</property>
                        <property
                          dataType="System.Int32"
                          description="Array Transformation you want to apply. Useful for case when you have 2-Dimensional arrays with rows/columns in separate arrays."
                          expressionType="Notify"
                          name="ArrayTransformationType"
                          typeConverter="ZappySys.Json.ArrayTransformType">0</property>
                        <property
                          dataType="System.String"
                          description="Filter expression to use to extract column names for array transformation."
                          expressionType="Notify"
                          name="ArrayTransColumnNameFilter"></property>
                        <property
                          dataType="System.String"
                          description="Filter expression for row values (Not applicable for simple array transformation)."
                          expressionType="Notify"
                          name="ArrayTransRowValueFilter"></property>
                        <property
                          dataType="System.Boolean"
                          description="When you have 2D array but don't have column list specified in a separate array then use this option (e.g. { arr: [[10,11],[21,22]] } ). If you selected Column less array or JSON Lines option then this property means Column Names coming from First Line of array."
                          expressionType="Notify"
                          name="ArrayTransEnableCustomColumns">false</property>
                        <property
                          dataType="System.String"
                          description="When you have 2D array but don't have column list specified in a separate array then use specify column names here. Use comma separated list (e.g col1,col2,col3 ). Column name Order must match value order."
                          expressionType="Notify"
                          name="ArrayTransCustomColumns"></property>
                        <property
                          dataType="System.Int32"
                          description="Metadata scan mode controls how data type and length is determined. By default few records scanned to determine datatype/length. Changing ScanMode affects length/datatype accuracy."
                          expressionType="Notify"
                          name="MetaDataScanMode"
                          typeConverter="ZappySys.Common.Data.MetaDataScanMode">4</property>
                        <property
                          dataType="System.Int32"
                          description="Length for all string column. This option is only valid for MetaDataScanMode=Custom"
                          expressionType="Notify"
                          name="MetaDataCustomLength">1000</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.JsonParserTransform</property>
                        <property
                          dataType="System.Boolean"
                          name="EnableBigNumberHandling">false</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Inputs[JsonParserTransformInput]"
                          errorRowDisposition="FailComponent"
                          name="JsonParserTransformInput"
                          truncationRowDisposition="FailComponent">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Inputs[JsonParserTransformInput].Columns[ResponseText]"
                              cachedDataType="nText"
                              cachedName="ResponseText"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Post Batch Request.Outputs[Response Output].Columns[ResponseText]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Inputs[JsonParserTransformInput].Columns[Category]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Category"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[Category]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Add reminder\4625:invalid">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Inputs[JsonParserTransformInput].Columns[Reference]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Reference"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[Reference]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Add reminder\4626:invalid">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Inputs[JsonParserTransformInput].Columns[Status]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Status"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[Status]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Add reminder\4627:invalid">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Inputs[JsonParserTransformInput].Columns[PriceFrom]"
                              cachedDataType="numeric"
                              cachedName="PriceFrom"
                              cachedPrecision="10"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[PriceFrom]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Add reminder\4628:invalid">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Inputs[JsonParserTransformInput].Columns[PriceTo]"
                              cachedDataType="numeric"
                              cachedName="PriceTo"
                              cachedPrecision="10"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[PriceTo]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Add reminder\Build reminder text.Outputs[Derived Column Output].Columns[ReminderText]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Inputs[JsonParserTransformInput].Columns[prefguid]"
                              cachedDataType="wstr"
                              cachedLength="4000"
                              cachedName="prefguid"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[prefguid]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Add reminder\Build reminder text.Outputs[Derived Column Output]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Inputs[JsonParserTransformInput].Columns[ContactId]"
                              cachedDataType="i4"
                              cachedName="ContactId"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[ContactId]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Add reminder\4629:invalid">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Inputs[JsonParserTransformInput].Columns[SqlId]"
                              cachedDataType="i4"
                              cachedName="SqlId"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[SqlId]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Add reminder\4630:invalid">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Inputs[JsonParserTransformInput].Columns[TemplateOutput]"
                              cachedDataType="nText"
                              cachedName="TemplateOutput"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Build Reminder JSON.Outputs[TemplateTransformOutput].Columns[TemplateOutput]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Add reminder\4631:invalid">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Inputs[JsonParserTransformInput].Columns[StatusCode]"
                              cachedDataType="i4"
                              cachedName="StatusCode"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Post Batch Request.Outputs[Response Output].Columns[StatusCode]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Add reminder\4632:invalid">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True" />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput]"
                          errorOrTruncationOperation="Error"
                          errorRowDisposition="RedirectRow"
                          name="JsonParserTransformOutput"
                          truncationRowDisposition="RedirectRow">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].Columns[StatusCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].Columns[StatusCode]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Add reminder\Build reminder text.Inputs[Derived Column Input]"
                              name="StatusCode" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].Columns[TemplateOutput]"
                              dataType="nText"
                              description="Template output column which will contain replaced text."
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].Columns[TemplateOutput]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Add reminder\Trash Destination 3.Inputs[TrashDestinationInput]"
                              name="TemplateOutput" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].Columns[SqlId]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].Columns[SqlId]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Add reminder\4633:invalid"
                              name="SqlId" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].Columns[ContactId]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].Columns[ContactId]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Add reminder\4634:invalid"
                              name="ContactId" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].Columns[prefguid]"
                              dataType="wstr"
                              length="4000"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].Columns[prefguid]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Add reminder\4635:invalid"
                              name="prefguid" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].Columns[PriceTo]"
                              dataType="r8"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].Columns[PriceTo]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Add reminder\4636:invalid"
                              name="PriceTo" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].Columns[PriceFrom]"
                              dataType="r8"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].Columns[PriceFrom]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Add reminder\4637:invalid"
                              name="PriceFrom" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].Columns[CurrentOffice]"
                              dataType="wstr"
                              length="255"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].Columns[CurrentOffice]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Add reminder\4638:invalid"
                              name="CurrentOffice" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].Columns[Status]"
                              dataType="wstr"
                              length="255"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].Columns[Status]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Add reminder\4639:invalid"
                              name="Status" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].Columns[Reference]"
                              dataType="wstr"
                              length="255"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].Columns[Reference]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Add reminder\4640:invalid"
                              name="Reference" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].Columns[Category]"
                              dataType="wstr"
                              length="255"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].Columns[Category]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Add reminder\Trash Destination 2.Inputs[TrashDestinationInput]"
                              name="Category" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].Columns[Office]"
                              dataType="wstr"
                              length="255"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].Columns[Office]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Add reminder\4641:invalid"
                              name="Office" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].Columns[Pivot_Name]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Name]"
                              length="12"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].Columns[Pivot_Name]"
                              name="Pivot_Name" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].Columns[Pivot_Value.service_record.id]"
                              dataType="i8"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.service_record.id]"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].Columns[Pivot_Value.service_record.id]"
                              name="Pivot_Value.service_record.id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].Columns[Pivot_Value.service_record.text]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.service_record.text]"
                              length="68"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].Columns[Pivot_Value.service_record.text]"
                              name="Pivot_Value.service_record.text" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].Columns[Pivot_Value.service_record.stub.name]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.service_record.stub.name]"
                              length="68"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].Columns[Pivot_Value.service_record.stub.name]"
                              name="Pivot_Value.service_record.stub.name" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].Columns[Pivot_Value.service_type.id]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.service_type.id]"
                              length="32"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].Columns[Pivot_Value.service_type.id]"
                              name="Pivot_Value.service_type.id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].Columns[Pivot_Value.service_type.text]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.service_type.text]"
                              length="32"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].Columns[Pivot_Value.service_type.text]"
                              name="Pivot_Value.service_type.text" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].Columns[Pivot_Value.campaign.id]"
                              dataType="i8"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.campaign.id]"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].Columns[Pivot_Value.campaign.id]"
                              name="Pivot_Value.campaign.id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].Columns[Pivot_Value.id]"
                              dataType="i8"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.id]"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].Columns[Pivot_Value.id]"
                              name="Pivot_Value.id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].Columns[Pivot_Value.system_ctime]"
                              dataType="i8"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.system_ctime]"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].Columns[Pivot_Value.system_ctime]"
                              name="Pivot_Value.system_ctime" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].Columns[Pivot_Value.system_modtime]"
                              dataType="i8"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.system_modtime]"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].Columns[Pivot_Value.system_modtime]"
                              name="Pivot_Value.system_modtime" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].Columns[Pivot_Value.etag]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.etag]"
                              length="68"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].Columns[Pivot_Value.etag]"
                              name="Pivot_Value.etag" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].Columns[Pivot_Value.system_modified_user.id]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.system_modified_user.id]"
                              length="20"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].Columns[Pivot_Value.system_modified_user.id]"
                              name="Pivot_Value.system_modified_user.id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].Columns[Pivot_Value.system_modified_user.name]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.system_modified_user.name]"
                              length="36"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].Columns[Pivot_Value.system_modified_user.name]"
                              name="Pivot_Value.system_modified_user.name" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].Columns[Pivot_Value.system_modified_user.first_name]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.system_modified_user.first_name]"
                              length="20"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].Columns[Pivot_Value.system_modified_user.first_name]"
                              name="Pivot_Value.system_modified_user.first_name" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].Columns[Pivot_Value.system_modified_user.last_name]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.system_modified_user.last_name]"
                              length="12"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].Columns[Pivot_Value.system_modified_user.last_name]"
                              name="Pivot_Value.system_modified_user.last_name" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].Columns[Pivot_Value.system_modified_user.email_address]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.system_modified_user.email_address]"
                              length="92"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].Columns[Pivot_Value.system_modified_user.email_address]"
                              name="Pivot_Value.system_modified_user.email_address" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].Columns[Pivot_Value.system_created_user.id]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.system_created_user.id]"
                              length="20"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].Columns[Pivot_Value.system_created_user.id]"
                              name="Pivot_Value.system_created_user.id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].Columns[Pivot_Value.system_created_user.name]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.system_created_user.name]"
                              length="36"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].Columns[Pivot_Value.system_created_user.name]"
                              name="Pivot_Value.system_created_user.name" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].Columns[Pivot_Value.system_created_user.first_name]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.system_created_user.first_name]"
                              length="20"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].Columns[Pivot_Value.system_created_user.first_name]"
                              name="Pivot_Value.system_created_user.first_name" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].Columns[Pivot_Value.system_created_user.last_name]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.system_created_user.last_name]"
                              length="12"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].Columns[Pivot_Value.system_created_user.last_name]"
                              name="Pivot_Value.system_created_user.last_name" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].Columns[Pivot_Value.system_created_user.email_address]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.system_created_user.email_address]"
                              length="92"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].Columns[Pivot_Value.system_created_user.email_address]"
                              name="Pivot_Value.system_created_user.email_address" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].Columns[Pivot_Value.service_record.stub.email_address]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.service_record.stub.email_address]"
                              length="1020"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].Columns[Pivot_Value.service_record.stub.email_address]"
                              name="Pivot_Value.service_record.stub.email_address" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].Columns[Pivot_Value.service_record.stub.phone_number]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.service_record.stub.phone_number]"
                              length="1020"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].Columns[Pivot_Value.service_record.stub.phone_number]"
                              name="Pivot_Value.service_record.stub.phone_number" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].Columns[Pivot_Value.service_record.stub.fax_number]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.service_record.stub.fax_number]"
                              length="1020"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].Columns[Pivot_Value.service_record.stub.fax_number]"
                              name="Pivot_Value.service_record.stub.fax_number" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].Columns[Pivot_Value.service_record.stub.address_postal]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.service_record.stub.address_postal]"
                              length="1020"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].Columns[Pivot_Value.service_record.stub.address_postal]"
                              name="Pivot_Value.service_record.stub.address_postal" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].Columns[Pivot_Value.service_record.stub.address]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.service_record.stub.address]"
                              length="1020"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].Columns[Pivot_Value.service_record.stub.address]"
                              name="Pivot_Value.service_record.stub.address" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].Columns[Pivot_Value.service_record.stub.id]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.service_record.stub.id]"
                              length="24"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].Columns[Pivot_Value.service_record.stub.id]"
                              name="Pivot_Value.service_record.stub.id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].Columns[Pivot_Value.status.id]"
                              dataType="i8"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.status.id]"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].Columns[Pivot_Value.status.id]"
                              name="Pivot_Value.status.id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].Columns[Pivot_Value.status.text]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.status.text]"
                              length="28"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].Columns[Pivot_Value.status.text]"
                              name="Pivot_Value.status.text" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].Columns[Pivot_Value.last_activity]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.last_activity]"
                              length="1020"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].Columns[Pivot_Value.last_activity]"
                              name="Pivot_Value.last_activity" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].Columns[Pivot_Value.campaign.name]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.campaign.name]"
                              length="48"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].Columns[Pivot_Value.campaign.name]"
                              name="Pivot_Value.campaign.name" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].Columns[Pivot_Value.campaign.type.id]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.campaign.type.id]"
                              length="20"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].Columns[Pivot_Value.campaign.type.id]"
                              name="Pivot_Value.campaign.type.id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].Columns[Pivot_Value.campaign.type.text]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.campaign.type.text]"
                              length="20"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].Columns[Pivot_Value.campaign.type.text]"
                              name="Pivot_Value.campaign.type.text" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].Columns[Pivot_Value.campaign.status.id]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.campaign.status.id]"
                              length="44"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].Columns[Pivot_Value.campaign.status.id]"
                              name="Pivot_Value.campaign.status.id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].Columns[Pivot_Value.campaign.status.text]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.campaign.status.text]"
                              length="44"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].Columns[Pivot_Value.campaign.status.text]"
                              name="Pivot_Value.campaign.status.text" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].Columns[P_error_message]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[P_error_message]"
                              length="332"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].Columns[P_error_message]"
                              name="P_error_message" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].Columns[P_error_type]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[P_error_type]"
                              length="96"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].Columns[P_error_type]"
                              name="P_error_type" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].Columns[P_error_code]"
                              dataType="i8"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[P_error_code]"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].Columns[P_error_code]"
                              name="P_error_code" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].Columns[P_error_extra_request_data_method]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[P_error_extra_request_data_method]"
                              length="140"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].Columns[P_error_extra_request_data_method]"
                              name="P_error_extra_request_data_method" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].Columns[P_error_extra_request_data_add_request_prefixes]"
                              dataType="bool"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[P_error_extra_request_data_add_request_prefixes]"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].Columns[P_error_extra_request_data_add_request_prefixes]"
                              name="P_error_extra_request_data_add_request_prefixes" />
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[P_error_message]"
                              dataType="wstr"
                              length="332"
                              name="P_error_message" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[P_error_type]"
                              dataType="wstr"
                              length="96"
                              name="P_error_type" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[P_error_code]"
                              dataType="i8"
                              name="P_error_code" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[P_error_extra_request_data_method]"
                              dataType="wstr"
                              length="140"
                              name="P_error_extra_request_data_method" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[P_error_extra_request_data_add_request_prefixes]"
                              dataType="bool"
                              name="P_error_extra_request_data_add_request_prefixes" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Name]"
                              dataType="wstr"
                              length="12"
                              name="Pivot_Name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.system_ctime]"
                              dataType="i8"
                              name="Pivot_Value.system_ctime" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.system_modtime]"
                              dataType="i8"
                              name="Pivot_Value.system_modtime" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.etag]"
                              dataType="wstr"
                              length="68"
                              name="Pivot_Value.etag" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.system_modified_user.id]"
                              dataType="wstr"
                              length="20"
                              name="Pivot_Value.system_modified_user.id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.system_modified_user.name]"
                              dataType="wstr"
                              length="36"
                              name="Pivot_Value.system_modified_user.name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.system_modified_user.first_name]"
                              dataType="wstr"
                              length="20"
                              name="Pivot_Value.system_modified_user.first_name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.system_modified_user.last_name]"
                              dataType="wstr"
                              length="12"
                              name="Pivot_Value.system_modified_user.last_name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.system_modified_user.email_address]"
                              dataType="wstr"
                              length="92"
                              name="Pivot_Value.system_modified_user.email_address" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.system_created_user.id]"
                              dataType="wstr"
                              length="20"
                              name="Pivot_Value.system_created_user.id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.system_created_user.name]"
                              dataType="wstr"
                              length="36"
                              name="Pivot_Value.system_created_user.name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.system_created_user.first_name]"
                              dataType="wstr"
                              length="20"
                              name="Pivot_Value.system_created_user.first_name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.system_created_user.last_name]"
                              dataType="wstr"
                              length="12"
                              name="Pivot_Value.system_created_user.last_name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.system_created_user.email_address]"
                              dataType="wstr"
                              length="92"
                              name="Pivot_Value.system_created_user.email_address" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.service_record.id]"
                              dataType="i8"
                              name="Pivot_Value.service_record.id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.service_record.text]"
                              dataType="wstr"
                              length="68"
                              name="Pivot_Value.service_record.text" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.service_record.stub.name]"
                              dataType="wstr"
                              length="68"
                              name="Pivot_Value.service_record.stub.name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.service_record.stub.email_address]"
                              dataType="wstr"
                              length="1020"
                              name="Pivot_Value.service_record.stub.email_address" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.service_record.stub.phone_number]"
                              dataType="wstr"
                              length="1020"
                              name="Pivot_Value.service_record.stub.phone_number" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.service_record.stub.fax_number]"
                              dataType="wstr"
                              length="1020"
                              name="Pivot_Value.service_record.stub.fax_number" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.service_record.stub.address_postal]"
                              dataType="wstr"
                              length="1020"
                              name="Pivot_Value.service_record.stub.address_postal" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.service_record.stub.address]"
                              dataType="wstr"
                              length="1020"
                              name="Pivot_Value.service_record.stub.address" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.service_record.stub.id]"
                              dataType="wstr"
                              length="24"
                              name="Pivot_Value.service_record.stub.id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.status.id]"
                              dataType="i8"
                              name="Pivot_Value.status.id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.status.text]"
                              dataType="wstr"
                              length="28"
                              name="Pivot_Value.status.text" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.service_type.id]"
                              dataType="wstr"
                              length="32"
                              name="Pivot_Value.service_type.id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.service_type.text]"
                              dataType="wstr"
                              length="32"
                              name="Pivot_Value.service_type.text" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.last_activity]"
                              dataType="wstr"
                              length="1020"
                              name="Pivot_Value.last_activity" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.campaign.name]"
                              dataType="wstr"
                              length="48"
                              name="Pivot_Value.campaign.name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.campaign.type.id]"
                              dataType="wstr"
                              length="20"
                              name="Pivot_Value.campaign.type.id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.campaign.type.text]"
                              dataType="wstr"
                              length="20"
                              name="Pivot_Value.campaign.type.text" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.campaign.status.id]"
                              dataType="wstr"
                              length="44"
                              name="Pivot_Value.campaign.status.id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.campaign.status.text]"
                              dataType="wstr"
                              length="44"
                              name="Pivot_Value.campaign.status.text" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.campaign.id]"
                              dataType="i8"
                              name="Pivot_Value.campaign.id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.id]"
                              dataType="i8"
                              name="Pivot_Value.id" />
                          </externalMetadataColumns>
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransform Error Output]"
                          isErrorOut="true"
                          name="JsonParserTransform Error Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransform Error Output].Columns[StatusCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransform Error Output].Columns[StatusCode]"
                              name="StatusCode" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransform Error Output].Columns[TemplateOutput]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransform Error Output].Columns[TemplateOutput]"
                              name="TemplateOutput" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransform Error Output].Columns[SqlId]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransform Error Output].Columns[SqlId]"
                              name="SqlId" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransform Error Output].Columns[ContactId]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransform Error Output].Columns[ContactId]"
                              name="ContactId" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransform Error Output].Columns[prefguid]"
                              dataType="wstr"
                              length="4000"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransform Error Output].Columns[prefguid]"
                              name="prefguid" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransform Error Output].Columns[PriceTo]"
                              dataType="r8"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransform Error Output].Columns[PriceTo]"
                              name="PriceTo" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransform Error Output].Columns[PriceFrom]"
                              dataType="r8"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransform Error Output].Columns[PriceFrom]"
                              name="PriceFrom" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransform Error Output].Columns[CurrentOffice]"
                              dataType="wstr"
                              length="255"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransform Error Output].Columns[CurrentOffice]"
                              name="CurrentOffice" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransform Error Output].Columns[Status]"
                              dataType="wstr"
                              length="255"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransform Error Output].Columns[Status]"
                              name="Status" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransform Error Output].Columns[Reference]"
                              dataType="wstr"
                              length="255"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransform Error Output].Columns[Reference]"
                              name="Reference" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransform Error Output].Columns[Category]"
                              dataType="wstr"
                              length="255"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransform Error Output].Columns[Category]"
                              name="Category" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransform Error Output].Columns[Office]"
                              dataType="wstr"
                              length="255"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransform Error Output].Columns[Office]"
                              name="Office" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransform Error Output].Columns[Pivot_Name]"
                              dataType="wstr"
                              length="12"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransform Error Output].Columns[Pivot_Name]"
                              name="Pivot_Name" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransform Error Output].Columns[Pivot_Value.service_record.id]"
                              dataType="i8"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransform Error Output].Columns[Pivot_Value.service_record.id]"
                              name="Pivot_Value.service_record.id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransform Error Output].Columns[Pivot_Value.service_record.text]"
                              dataType="wstr"
                              length="68"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransform Error Output].Columns[Pivot_Value.service_record.text]"
                              name="Pivot_Value.service_record.text" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransform Error Output].Columns[Pivot_Value.service_record.stub.name]"
                              dataType="wstr"
                              length="68"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransform Error Output].Columns[Pivot_Value.service_record.stub.name]"
                              name="Pivot_Value.service_record.stub.name" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransform Error Output].Columns[Pivot_Value.service_type.id]"
                              dataType="wstr"
                              length="32"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransform Error Output].Columns[Pivot_Value.service_type.id]"
                              name="Pivot_Value.service_type.id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransform Error Output].Columns[Pivot_Value.service_type.text]"
                              dataType="wstr"
                              length="32"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransform Error Output].Columns[Pivot_Value.service_type.text]"
                              name="Pivot_Value.service_type.text" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransform Error Output].Columns[Pivot_Value.campaign.id]"
                              dataType="i8"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransform Error Output].Columns[Pivot_Value.campaign.id]"
                              name="Pivot_Value.campaign.id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransform Error Output].Columns[Pivot_Value.id]"
                              dataType="i8"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransform Error Output].Columns[Pivot_Value.id]"
                              name="Pivot_Value.id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransform Error Output].Columns[Pivot_Value.system_ctime]"
                              dataType="i8"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransform Error Output].Columns[Pivot_Value.system_ctime]"
                              name="Pivot_Value.system_ctime" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransform Error Output].Columns[Pivot_Value.system_modtime]"
                              dataType="i8"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransform Error Output].Columns[Pivot_Value.system_modtime]"
                              name="Pivot_Value.system_modtime" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransform Error Output].Columns[Pivot_Value.etag]"
                              dataType="wstr"
                              length="68"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransform Error Output].Columns[Pivot_Value.etag]"
                              name="Pivot_Value.etag" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransform Error Output].Columns[Pivot_Value.system_modified_user.id]"
                              dataType="wstr"
                              length="20"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransform Error Output].Columns[Pivot_Value.system_modified_user.id]"
                              name="Pivot_Value.system_modified_user.id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransform Error Output].Columns[Pivot_Value.system_modified_user.name]"
                              dataType="wstr"
                              length="36"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransform Error Output].Columns[Pivot_Value.system_modified_user.name]"
                              name="Pivot_Value.system_modified_user.name" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransform Error Output].Columns[Pivot_Value.system_modified_user.first_name]"
                              dataType="wstr"
                              length="20"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransform Error Output].Columns[Pivot_Value.system_modified_user.first_name]"
                              name="Pivot_Value.system_modified_user.first_name" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransform Error Output].Columns[Pivot_Value.system_modified_user.last_name]"
                              dataType="wstr"
                              length="12"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransform Error Output].Columns[Pivot_Value.system_modified_user.last_name]"
                              name="Pivot_Value.system_modified_user.last_name" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransform Error Output].Columns[Pivot_Value.system_modified_user.email_address]"
                              dataType="wstr"
                              length="92"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransform Error Output].Columns[Pivot_Value.system_modified_user.email_address]"
                              name="Pivot_Value.system_modified_user.email_address" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransform Error Output].Columns[Pivot_Value.system_created_user.id]"
                              dataType="wstr"
                              length="20"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransform Error Output].Columns[Pivot_Value.system_created_user.id]"
                              name="Pivot_Value.system_created_user.id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransform Error Output].Columns[Pivot_Value.system_created_user.name]"
                              dataType="wstr"
                              length="36"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransform Error Output].Columns[Pivot_Value.system_created_user.name]"
                              name="Pivot_Value.system_created_user.name" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransform Error Output].Columns[Pivot_Value.system_created_user.first_name]"
                              dataType="wstr"
                              length="20"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransform Error Output].Columns[Pivot_Value.system_created_user.first_name]"
                              name="Pivot_Value.system_created_user.first_name" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransform Error Output].Columns[Pivot_Value.system_created_user.last_name]"
                              dataType="wstr"
                              length="12"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransform Error Output].Columns[Pivot_Value.system_created_user.last_name]"
                              name="Pivot_Value.system_created_user.last_name" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransform Error Output].Columns[Pivot_Value.system_created_user.email_address]"
                              dataType="wstr"
                              length="92"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransform Error Output].Columns[Pivot_Value.system_created_user.email_address]"
                              name="Pivot_Value.system_created_user.email_address" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransform Error Output].Columns[Pivot_Value.service_record.stub.email_address]"
                              dataType="wstr"
                              length="1020"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransform Error Output].Columns[Pivot_Value.service_record.stub.email_address]"
                              name="Pivot_Value.service_record.stub.email_address" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransform Error Output].Columns[Pivot_Value.service_record.stub.phone_number]"
                              dataType="wstr"
                              length="1020"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransform Error Output].Columns[Pivot_Value.service_record.stub.phone_number]"
                              name="Pivot_Value.service_record.stub.phone_number" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransform Error Output].Columns[Pivot_Value.service_record.stub.fax_number]"
                              dataType="wstr"
                              length="1020"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransform Error Output].Columns[Pivot_Value.service_record.stub.fax_number]"
                              name="Pivot_Value.service_record.stub.fax_number" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransform Error Output].Columns[Pivot_Value.service_record.stub.address_postal]"
                              dataType="wstr"
                              length="1020"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransform Error Output].Columns[Pivot_Value.service_record.stub.address_postal]"
                              name="Pivot_Value.service_record.stub.address_postal" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransform Error Output].Columns[Pivot_Value.service_record.stub.address]"
                              dataType="wstr"
                              length="1020"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransform Error Output].Columns[Pivot_Value.service_record.stub.address]"
                              name="Pivot_Value.service_record.stub.address" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransform Error Output].Columns[Pivot_Value.service_record.stub.id]"
                              dataType="wstr"
                              length="24"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransform Error Output].Columns[Pivot_Value.service_record.stub.id]"
                              name="Pivot_Value.service_record.stub.id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransform Error Output].Columns[Pivot_Value.status.id]"
                              dataType="i8"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransform Error Output].Columns[Pivot_Value.status.id]"
                              name="Pivot_Value.status.id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransform Error Output].Columns[Pivot_Value.status.text]"
                              dataType="wstr"
                              length="28"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransform Error Output].Columns[Pivot_Value.status.text]"
                              name="Pivot_Value.status.text" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransform Error Output].Columns[Pivot_Value.last_activity]"
                              dataType="wstr"
                              length="1020"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransform Error Output].Columns[Pivot_Value.last_activity]"
                              name="Pivot_Value.last_activity" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransform Error Output].Columns[Pivot_Value.campaign.name]"
                              dataType="wstr"
                              length="48"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransform Error Output].Columns[Pivot_Value.campaign.name]"
                              name="Pivot_Value.campaign.name" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransform Error Output].Columns[Pivot_Value.campaign.type.id]"
                              dataType="wstr"
                              length="20"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransform Error Output].Columns[Pivot_Value.campaign.type.id]"
                              name="Pivot_Value.campaign.type.id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransform Error Output].Columns[Pivot_Value.campaign.type.text]"
                              dataType="wstr"
                              length="20"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransform Error Output].Columns[Pivot_Value.campaign.type.text]"
                              name="Pivot_Value.campaign.type.text" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransform Error Output].Columns[Pivot_Value.campaign.status.id]"
                              dataType="wstr"
                              length="44"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransform Error Output].Columns[Pivot_Value.campaign.status.id]"
                              name="Pivot_Value.campaign.status.id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransform Error Output].Columns[Pivot_Value.campaign.status.text]"
                              dataType="wstr"
                              length="44"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransform Error Output].Columns[Pivot_Value.campaign.status.text]"
                              name="Pivot_Value.campaign.status.text" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransform Error Output].Columns[P_error_message]"
                              dataType="wstr"
                              length="332"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransform Error Output].Columns[P_error_message]"
                              name="P_error_message" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransform Error Output].Columns[P_error_type]"
                              dataType="wstr"
                              length="96"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransform Error Output].Columns[P_error_type]"
                              name="P_error_type" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransform Error Output].Columns[P_error_code]"
                              dataType="i8"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransform Error Output].Columns[P_error_code]"
                              name="P_error_code" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransform Error Output].Columns[P_error_extra_request_data_method]"
                              dataType="wstr"
                              length="140"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransform Error Output].Columns[P_error_extra_request_data_method]"
                              name="P_error_extra_request_data_method" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransform Error Output].Columns[P_error_extra_request_data_add_request_prefixes]"
                              dataType="bool"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransform Error Output].Columns[P_error_extra_request_data_add_request_prefixes]"
                              name="P_error_extra_request_data_add_request_prefixes" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransform Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransform Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransform Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransform Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransform Error Output].Columns[ErrorColumnName]"
                              codePage="1252"
                              dataType="str"
                              length="128"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransform Error Output].Columns[ErrorColumnName]"
                              name="ErrorColumnName" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransform Error Output].Columns[ErrorMessage]"
                              dataType="wstr"
                              length="1024"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransform Error Output].Columns[ErrorMessage]"
                              name="ErrorMessage" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransform Error Output].Columns[ErrorRawData]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransform Error Output].Columns[ErrorRawData]"
                              name="ErrorRawData" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Add reminder\Trash Destination"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Trash Destination; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="The trash destination is used to create dummy destination which ends data path without any processing."
                      name="Trash Destination"
                      version="2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.String"
                          description="File path where you want to save data"
                          expressionType="Notify"
                          name="FilePath">C:\SSISVariables\Log\CapaignAdd123</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates if you want to save input data to comma separated text file"
                          expressionType="Notify"
                          name="SaveDataToFile">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Append data to file"
                          expressionType="Notify"
                          name="Append">false</property>
                        <property
                          dataType="System.String"
                          description="RowSeparator"
                          expressionType="Notify"
                          name="RowSeparator">{NEWLINE}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether you want to overwrite target file if exists"
                          expressionType="Notify"
                          name="OverwriteFileIfExists">true</property>
                        <property
                          dataType="System.String"
                          description="ColumnSeparator"
                          expressionType="Notify"
                          name="ColumnSeparator">,</property>
                        <property
                          dataType="System.Boolean"
                          description="SupportUnicode"
                          expressionType="Notify"
                          name="SupportUnicode">true</property>
                        <property
                          dataType="System.Boolean"
                          description="ColumnNamesInFirstRow"
                          expressionType="Notify"
                          name="ColumnNamesInFirstRow">true</property>
                        <property
                          dataType="System.Boolean"
                          description="QuoteDataIfNeeded"
                          expressionType="Notify"
                          name="QuoteDataIfNeeded">true</property>
                        <property
                          dataType="System.String"
                          description="Date time format string for any column with DT_DBDATETIME, DT_DBDATETIME2 or DB_DATE format"
                          expressionType="Notify"
                          name="DateTimeFormat">yyyy-MM-dd HH:mm:ss</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.TrashDestination</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Add reminder\Trash Destination.Inputs[TrashDestinationInput]"
                          hasSideEffects="true"
                          name="TrashDestinationInput">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Trash Destination.Inputs[TrashDestinationInput].Columns[Category]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Category"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[Category]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Trash Destination.Inputs[TrashDestinationInput].Columns[Reference]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Reference"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[Reference]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Trash Destination.Inputs[TrashDestinationInput].Columns[Status]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Status"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[Status]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Trash Destination.Inputs[TrashDestinationInput].Columns[PriceFrom]"
                              cachedDataType="numeric"
                              cachedName="PriceFrom"
                              cachedPrecision="10"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[PriceFrom]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Trash Destination.Inputs[TrashDestinationInput].Columns[PriceTo]"
                              cachedDataType="numeric"
                              cachedName="PriceTo"
                              cachedPrecision="10"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[PriceTo]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Trash Destination.Inputs[TrashDestinationInput].Columns[prefguid]"
                              cachedDataType="wstr"
                              cachedLength="4000"
                              cachedName="prefguid"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[prefguid]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Trash Destination.Inputs[TrashDestinationInput].Columns[ContactId]"
                              cachedDataType="i4"
                              cachedName="ContactId"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[ContactId]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Trash Destination.Inputs[TrashDestinationInput].Columns[SqlId]"
                              cachedDataType="i4"
                              cachedName="SqlId"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[SqlId]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Trash Destination.Inputs[TrashDestinationInput].Columns[TemplateOutput]"
                              cachedDataType="nText"
                              cachedName="TemplateOutput"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Build Reminder JSON.Outputs[TemplateTransformOutput].Columns[TemplateOutput]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Trash Destination.Inputs[TrashDestinationInput].Columns[ErrorCode]"
                              cachedDataType="i4"
                              cachedName="ErrorCode"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Post Batch Request.Outputs[WebApiDestination Error Output].Columns[ErrorCode]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Trash Destination.Inputs[TrashDestinationInput].Columns[ErrorColumn]"
                              cachedDataType="i4"
                              cachedName="ErrorColumn"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Post Batch Request.Outputs[WebApiDestination Error Output].Columns[ErrorColumn]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Trash Destination.Inputs[TrashDestinationInput].Columns[ErrorColumnName]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="128"
                              cachedName="ErrorColumnName"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Post Batch Request.Outputs[WebApiDestination Error Output].Columns[ErrorColumnName]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Trash Destination.Inputs[TrashDestinationInput].Columns[ErrorMessage]"
                              cachedDataType="nText"
                              cachedName="ErrorMessage"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Post Batch Request.Outputs[WebApiDestination Error Output].Columns[ErrorMessage]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Add reminder\Trash Destination 1"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Trash Destination; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="The trash destination is used to create dummy destination which ends data path without any processing."
                      name="Trash Destination 1"
                      version="2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.String"
                          description="File path where you want to save data"
                          expressionType="Notify"
                          name="FilePath"></property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates if you want to save input data to comma separated text file"
                          expressionType="Notify"
                          name="SaveDataToFile">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Append data to file"
                          expressionType="Notify"
                          name="Append">false</property>
                        <property
                          dataType="System.String"
                          description="RowSeparator"
                          expressionType="Notify"
                          name="RowSeparator">{NEWLINE}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether you want to overwrite target file if exists"
                          expressionType="Notify"
                          name="OverwriteFileIfExists">true</property>
                        <property
                          dataType="System.String"
                          description="ColumnSeparator"
                          expressionType="Notify"
                          name="ColumnSeparator">,</property>
                        <property
                          dataType="System.Boolean"
                          description="SupportUnicode"
                          expressionType="Notify"
                          name="SupportUnicode">true</property>
                        <property
                          dataType="System.Boolean"
                          description="ColumnNamesInFirstRow"
                          expressionType="Notify"
                          name="ColumnNamesInFirstRow">true</property>
                        <property
                          dataType="System.Boolean"
                          description="QuoteDataIfNeeded"
                          expressionType="Notify"
                          name="QuoteDataIfNeeded">true</property>
                        <property
                          dataType="System.String"
                          description="Date time format string for any column with DT_DBDATETIME, DT_DBDATETIME2 or DB_DATE format"
                          expressionType="Notify"
                          name="DateTimeFormat">yyyy-MM-dd HH:mm:ss</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.TrashDestination</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Add reminder\Trash Destination 1.Inputs[TrashDestinationInput]"
                          hasSideEffects="true"
                          name="TrashDestinationInput">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Add reminder\Trash Destination 2"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Trash Destination; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="The trash destination is used to create dummy destination which ends data path without any processing."
                      name="Trash Destination 2"
                      version="2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.String"
                          description="File path where you want to save data"
                          expressionType="Notify"
                          name="FilePath"></property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates if you want to save input data to comma separated text file"
                          expressionType="Notify"
                          name="SaveDataToFile">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Append data to file"
                          expressionType="Notify"
                          name="Append">false</property>
                        <property
                          dataType="System.String"
                          description="RowSeparator"
                          expressionType="Notify"
                          name="RowSeparator">{NEWLINE}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether you want to overwrite target file if exists"
                          expressionType="Notify"
                          name="OverwriteFileIfExists">true</property>
                        <property
                          dataType="System.String"
                          description="ColumnSeparator"
                          expressionType="Notify"
                          name="ColumnSeparator">,</property>
                        <property
                          dataType="System.Boolean"
                          description="SupportUnicode"
                          expressionType="Notify"
                          name="SupportUnicode">true</property>
                        <property
                          dataType="System.Boolean"
                          description="ColumnNamesInFirstRow"
                          expressionType="Notify"
                          name="ColumnNamesInFirstRow">true</property>
                        <property
                          dataType="System.Boolean"
                          description="QuoteDataIfNeeded"
                          expressionType="Notify"
                          name="QuoteDataIfNeeded">true</property>
                        <property
                          dataType="System.String"
                          description="Date time format string for any column with DT_DBDATETIME, DT_DBDATETIME2 or DB_DATE format"
                          expressionType="Notify"
                          name="DateTimeFormat">yyyy-MM-dd HH:mm:ss</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.TrashDestination</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Add reminder\Trash Destination 2.Inputs[TrashDestinationInput]"
                          hasSideEffects="true"
                          name="TrashDestinationInput">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Add reminder\Trash Destination 3"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Trash Destination; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="The trash destination is used to create dummy destination which ends data path without any processing."
                      name="Trash Destination 3"
                      version="2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.String"
                          description="File path where you want to save data"
                          expressionType="Notify"
                          name="FilePath"></property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates if you want to save input data to comma separated text file"
                          expressionType="Notify"
                          name="SaveDataToFile">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Append data to file"
                          expressionType="Notify"
                          name="Append">false</property>
                        <property
                          dataType="System.String"
                          description="RowSeparator"
                          expressionType="Notify"
                          name="RowSeparator">{NEWLINE}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether you want to overwrite target file if exists"
                          expressionType="Notify"
                          name="OverwriteFileIfExists">true</property>
                        <property
                          dataType="System.String"
                          description="ColumnSeparator"
                          expressionType="Notify"
                          name="ColumnSeparator">,</property>
                        <property
                          dataType="System.Boolean"
                          description="SupportUnicode"
                          expressionType="Notify"
                          name="SupportUnicode">true</property>
                        <property
                          dataType="System.Boolean"
                          description="ColumnNamesInFirstRow"
                          expressionType="Notify"
                          name="ColumnNamesInFirstRow">true</property>
                        <property
                          dataType="System.Boolean"
                          description="QuoteDataIfNeeded"
                          expressionType="Notify"
                          name="QuoteDataIfNeeded">true</property>
                        <property
                          dataType="System.String"
                          description="Date time format string for any column with DT_DBDATETIME, DT_DBDATETIME2 or DB_DATE format"
                          expressionType="Notify"
                          name="DateTimeFormat">yyyy-MM-dd HH:mm:ss</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.TrashDestination</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Add reminder\Trash Destination 3.Inputs[TrashDestinationInput]"
                          hasSideEffects="true"
                          name="TrashDestinationInput">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Add reminder\Update SQL as Processed"
                      componentClassID="Microsoft.OLEDBCommand"
                      contactInfo="OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
                      description="Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time."
                      name="Update SQL as Processed"
                      usesDispositions="true"
                      version="2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">0</property>
                        <property
                          dataType="System.String"
                          description="The SQL command to be executed."
                          expressionType="Notify"
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">Update [ContactAdhocImport202102]

Set reminderId = ? 

Where Id = ?</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Iterate Offices\Sequence Container\Add reminder\Update SQL as Processed.Connections[OleDbConnection]"
                          connectionManagerID="{1ACC4D99-A047-44CB-AAAD-088F42F69A23}:external"
                          connectionManagerRefId="Project.ConnectionManagers[Rosie]"
                          description="The OLE DB runtime connection used to access the database."
                          name="OleDbConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Add reminder\Update SQL as Processed.Inputs[OLE DB Command Input]"
                          errorOrTruncationOperation="Command Execution"
                          errorRowDisposition="FailComponent"
                          hasSideEffects="true"
                          name="OLE DB Command Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Update SQL as Processed.Inputs[OLE DB Command Input].Columns[Pivot_Name]"
                              cachedDataType="wstr"
                              cachedLength="12"
                              cachedName="Pivot_Name"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Add reminder\Update SQL as Processed.Inputs[OLE DB Command Input].ExternalColumns[Param_1]"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].Columns[Pivot_Name]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Update SQL as Processed.Inputs[OLE DB Command Input].Columns[Pivot_Value.id]"
                              cachedDataType="i8"
                              cachedName="Pivot_Value.id"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Add reminder\Update SQL as Processed.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput].Columns[Pivot_Value.id]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Update SQL as Processed.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                              dataType="i4"
                              name="Param_0">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                                  name="DBParamInfoFlags">81</property>
                              </properties>
                            </externalMetadataColumn>
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Update SQL as Processed.Inputs[OLE DB Command Input].ExternalColumns[Param_1]"
                              dataType="i4"
                              name="Param_1">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                                  name="DBParamInfoFlags">17</property>
                              </properties>
                            </externalMetadataColumn>
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Add reminder\Update SQL as Processed.Outputs[OLE DB Command Output]"
                          exclusionGroup="1"
                          name="OLE DB Command Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Add reminder\Update SQL as Processed.Inputs[OLE DB Command Input]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Add reminder\Update SQL as Processed.Outputs[OLE DB Command Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="OLE DB Command Error Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Add reminder\Update SQL as Processed.Inputs[OLE DB Command Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Update SQL as Processed.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Update SQL as Processed.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add reminder\Update SQL as Processed.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Add reminder\Update SQL as Processed.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                  </components>
                  <paths>
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Add reminder.Paths[Conditional Split Default Output]"
                      endId="Package\Iterate Offices\Sequence Container\Add reminder\Update SQL as Processed.Inputs[OLE DB Command Input]"
                      name="Conditional Split Default Output"
                      startId="Package\Iterate Offices\Sequence Container\Add reminder\Error Message Check.Outputs[Conditional Split Default Output]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Add reminder.Paths[Conditional Split Error Output]"
                      endId="Package\Iterate Offices\Sequence Container\Add reminder\Trash Destination 2.Inputs[TrashDestinationInput]"
                      name="Conditional Split Error Output"
                      startId="Package\Iterate Offices\Sequence Container\Add reminder\Error Message Check.Outputs[Conditional Split Error Output]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Add reminder.Paths[Derived Column Output]"
                      endId="Package\Iterate Offices\Sequence Container\Add reminder\Build Reminder JSON.Inputs[TemplateTransformInput]"
                      name="Derived Column Output"
                      startId="Package\Iterate Offices\Sequence Container\Add reminder\Build reminder text.Outputs[Derived Column Output]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Add reminder.Paths[Fail]"
                      endId="Package\Iterate Offices\Sequence Container\Add reminder\Trash Destination 3.Inputs[TrashDestinationInput]"
                      name="Fail"
                      startId="Package\Iterate Offices\Sequence Container\Add reminder\Error Message Check.Outputs[Fail]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Add reminder.Paths[JsonParserTransform Error Output]"
                      endId="Package\Iterate Offices\Sequence Container\Add reminder\Trash Destination 1.Inputs[TrashDestinationInput]"
                      name="JsonParserTransform Error Output"
                      startId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransform Error Output]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Add reminder.Paths[JsonParserTransformOutput]"
                      endId="Package\Iterate Offices\Sequence Container\Add reminder\Error Message Check.Inputs[Conditional Split Input]"
                      name="JsonParserTransformOutput"
                      startId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Outputs[JsonParserTransformOutput]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Add reminder.Paths[OLE DB Source Output]"
                      endId="Package\Iterate Offices\Sequence Container\Add reminder\Build reminder text.Inputs[Derived Column Input]"
                      name="OLE DB Source Output"
                      startId="Package\Iterate Offices\Sequence Container\Add reminder\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Add reminder.Paths[Response Output]"
                      endId="Package\Iterate Offices\Sequence Container\Add reminder\Read Success.Inputs[JsonParserTransformInput]"
                      name="Response Output"
                      startId="Package\Iterate Offices\Sequence Container\Add reminder\Post Batch Request.Outputs[Response Output]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Add reminder.Paths[TemplateTransformOutput]"
                      endId="Package\Iterate Offices\Sequence Container\Add reminder\Post Batch Request.Inputs[WebApiDestinationInput]"
                      name="TemplateTransformOutput"
                      startId="Package\Iterate Offices\Sequence Container\Add reminder\Build Reminder JSON.Outputs[TemplateTransformOutput]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Add reminder.Paths[WebApiDestination Error Output]"
                      endId="Package\Iterate Offices\Sequence Container\Add reminder\Trash Destination.Inputs[TrashDestinationInput]"
                      name="WebApiDestination Error Output"
                      startId="Package\Iterate Offices\Sequence Container\Add reminder\Post Batch Request.Outputs[WebApiDestination Error Output]" />
                  </paths>
                </pipeline>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Iterate Offices\Sequence Container\Add to Campaign"
              DTS:CreationName="Microsoft.Pipeline"
              DTS:Description="Data Flow Task"
              DTS:DTSID="{f5babc01-0d3e-4551-8c97-687d4dfa57be}"
              DTS:ExecutableType="Microsoft.Pipeline"
              DTS:LocaleID="-1"
              DTS:ObjectName="Add to Campaign"
              DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:ObjectData>
                <pipeline
                  version="1">
                  <components>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Build CampaignMemberAdd"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Template Transform; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="Template transform allows to produce multi line string from template text. You can insert placeholders anywhere in the string. Ideal use case would be produce simple XML or JSON without use of JSON or XML Generator Transform."
                      name="Build CampaignMemberAdd"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.String"
                          description="Template text which needs to be replaced. Any where in the text you can use input column names as placeholders (e.g. &lt;%CustomerEmail%&gt; ). You can also use user/system variable as placeholder (e.g. {{User::MyVariable}} )"
                          expressionType="Notify"
                          name="TemplateText"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">        "&lt;%SqlId%&gt;":{
			"method": "CampaignMembers::create",
			"args": {
				"data": {
					"campaign_id": {{User::CampaignId}},
					"service_record_id": &lt;%ContactId%&gt;,
					"service_type_id": "Contacts",
					"status_id": {{User::CampaignMemberStatusId}},
					"shsqlid":&lt;%SqlId%&gt;
				}
			}
		}</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.TemplateTransform</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Build CampaignMemberAdd.Inputs[TemplateTransformInput]"
                          name="TemplateTransformInput">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Build CampaignMemberAdd.Inputs[TemplateTransformInput].Columns[SqlId]"
                              cachedDataType="i4"
                              cachedName="SqlId"
                              lineageId="Package\Iterate Offices\Sequence Container\Add to Campaign\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[SqlId]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Build CampaignMemberAdd.Inputs[TemplateTransformInput].Columns[ContactId]"
                              cachedDataType="i4"
                              cachedName="ContactId"
                              lineageId="Package\Iterate Offices\Sequence Container\Add to Campaign\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[ContactId]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Build CampaignMemberAdd.Outputs[TemplateTransformOutput]"
                          errorOrTruncationOperation="Error"
                          name="TemplateTransformOutput"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Add to Campaign\Build CampaignMemberAdd.Inputs[TemplateTransformInput]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Build CampaignMemberAdd.Outputs[TemplateTransformOutput].Columns[TemplateOutput]"
                              dataType="nText"
                              description="Template output column which will contain replaced text."
                              lineageId="Package\Iterate Offices\Sequence Container\Add to Campaign\Build CampaignMemberAdd.Outputs[TemplateTransformOutput].Columns[TemplateOutput]"
                              name="TemplateOutput" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Conditional Split"
                      componentClassID="Microsoft.ConditionalSplit"
                      contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
                      name="Conditional Split"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Conditional Split.Inputs[Conditional Split Input]"
                          description="Input to the Conditional Split Transformation"
                          name="Conditional Split Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Conditional Split.Inputs[Conditional Split Input].Columns[P_error_message]"
                              cachedDataType="wstr"
                              cachedLength="332"
                              cachedName="P_error_message"
                              lineageId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransformOutput].Columns[P_error_message]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Conditional Split.Outputs[Fail]"
                          description="Output 1 of the Conditional Split Transformation"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="RedirectRow"
                          exclusionGroup="1"
                          name="Fail"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Add to Campaign\Conditional Split.Inputs[Conditional Split Input]"
                          truncationRowDisposition="RedirectRow">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                              name="Expression">[ISNULL](#{Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransformOutput].Columns[P_error_message]}) ==  FALSE </property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the friendly version of the expression. This expression version uses column names."
                              expressionType="Notify"
                              name="FriendlyExpression">ISNULL(P_error_message) ==  FALSE </property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                              name="EvaluationOrder">0</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Conditional Split.Outputs[Conditional Split Default Output]"
                          description="Default Output of the Conditional Split Transformation"
                          exclusionGroup="1"
                          name="Conditional Split Default Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Add to Campaign\Conditional Split.Inputs[Conditional Split Input]">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              name="IsDefaultOut">true</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Conditional Split.Outputs[Conditional Split Error Output]"
                          description="Error Output of the Conditional Split Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Conditional Split Error Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Add to Campaign\Conditional Split.Inputs[Conditional Split Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Add to Campaign\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Add to Campaign\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Get Rosie Loaded Contacts from SQL"
                      componentClassID="Microsoft.OLEDBSource"
                      contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                      description="OLE DB Source"
                      name="Get Rosie Loaded Contacts from SQL"
                      usesDispositions="true"
                      version="7">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">0</property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the database object used to open a rowset."
                          name="OpenRowset">[dbo].[vwContacts]</property>
                        <property
                          dataType="System.String"
                          description="Specifies the variable that contains the name of the database object used to open a rowset."
                          name="OpenRowsetVariable"></property>
                        <property
                          dataType="System.String"
                          description="The SQL command to be executed."
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">SELECT Id as SqlId, 
       
       [Category], 
       [Reference], 
       [Status], 
       [CurrentOfficeName], 
       [PriceFrom], 
       [PriceTo],
       CASE
           WHEN [prefguid] IS NOT NULL
           THEN 'https://preference.spicerhaart.co.uk/?custID=' + CAST([prefguid] AS NVARCHAR(4000))
           ELSE NULL
       END AS [prefguid],
ContactId
FROM [Rosie].[dbo].ContactAdhocImport202102 ci
WHERE contactid IS NOT NULL
      AND [TargetOfficeId] = ?
      AND [prefguid] IS NOT NULL
      AND campaignmemberid is null ;</property>
                        <property
                          dataType="System.String"
                          description="The variable that contains the SQL command to be executed."
                          name="SqlCommandVariable"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Boolean"
                          description="Forces the use of the DefaultCodePage property value when describing character data."
                          name="AlwaysUseDefaultCodePage">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the mode used to access the database."
                          name="AccessMode"
                          typeConverter="AccessMode">2</property>
                        <property
                          dataType="System.String"
                          description="The mappings between the parameters in the SQL command and variables."
                          name="ParameterMapping">"Parameter0:Input",{B4701D52-6FAA-434F-8042-898CB08D7322};</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Get Rosie Loaded Contacts from SQL.Connections[OleDbConnection]"
                          connectionManagerID="{1ACC4D99-A047-44CB-AAAD-088F42F69A23}:external"
                          connectionManagerRefId="Project.ConnectionManagers[Rosie]"
                          description="The OLE DB runtime connection used to access the database."
                          name="OleDbConnection" />
                      </connections>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output]"
                          name="OLE DB Source Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[Category]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Add to Campaign\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].ExternalColumns[Category]"
                              length="50"
                              lineageId="Package\Iterate Offices\Sequence Container\Add to Campaign\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[Category]"
                              name="Category"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[Reference]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Add to Campaign\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].ExternalColumns[Reference]"
                              length="50"
                              lineageId="Package\Iterate Offices\Sequence Container\Add to Campaign\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[Reference]"
                              name="Reference"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[Status]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Add to Campaign\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].ExternalColumns[Status]"
                              length="50"
                              lineageId="Package\Iterate Offices\Sequence Container\Add to Campaign\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[Status]"
                              name="Status"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[PriceFrom]"
                              dataType="numeric"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Add to Campaign\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].ExternalColumns[PriceFrom]"
                              lineageId="Package\Iterate Offices\Sequence Container\Add to Campaign\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[PriceFrom]"
                              name="PriceFrom"
                              precision="10"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[PriceTo]"
                              dataType="numeric"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Add to Campaign\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].ExternalColumns[PriceTo]"
                              lineageId="Package\Iterate Offices\Sequence Container\Add to Campaign\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[PriceTo]"
                              name="PriceTo"
                              precision="10"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[prefguid]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Add to Campaign\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].ExternalColumns[prefguid]"
                              length="4000"
                              lineageId="Package\Iterate Offices\Sequence Container\Add to Campaign\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[prefguid]"
                              name="prefguid"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[ContactId]"
                              dataType="i4"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Add to Campaign\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].ExternalColumns[ContactId]"
                              lineageId="Package\Iterate Offices\Sequence Container\Add to Campaign\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[ContactId]"
                              name="ContactId"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[SqlId]"
                              dataType="i4"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Add to Campaign\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].ExternalColumns[SqlId]"
                              lineageId="Package\Iterate Offices\Sequence Container\Add to Campaign\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[SqlId]"
                              name="SqlId"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[CurrentOfficeName]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Add to Campaign\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].ExternalColumns[CurrentOfficeName]"
                              length="50"
                              lineageId="Package\Iterate Offices\Sequence Container\Add to Campaign\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[CurrentOfficeName]"
                              name="CurrentOfficeName"
                              truncationRowDisposition="FailComponent" />
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].ExternalColumns[Category]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              name="Category" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].ExternalColumns[Reference]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              name="Reference" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].ExternalColumns[Status]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              name="Status" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].ExternalColumns[PriceFrom]"
                              dataType="numeric"
                              name="PriceFrom"
                              precision="10" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].ExternalColumns[PriceTo]"
                              dataType="numeric"
                              name="PriceTo"
                              precision="10" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].ExternalColumns[prefguid]"
                              dataType="wstr"
                              length="4000"
                              name="prefguid" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].ExternalColumns[ContactId]"
                              dataType="i4"
                              name="ContactId" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].ExternalColumns[SqlId]"
                              dataType="i4"
                              name="SqlId" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].ExternalColumns[CurrentOfficeName]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              name="CurrentOfficeName" />
                          </externalMetadataColumns>
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Error Output]"
                          isErrorOut="true"
                          name="OLE DB Source Error Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[SqlId]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Add to Campaign\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[SqlId]"
                              name="SqlId" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[Category]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Iterate Offices\Sequence Container\Add to Campaign\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[Category]"
                              name="Category" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[Reference]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Iterate Offices\Sequence Container\Add to Campaign\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[Reference]"
                              name="Reference" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[Status]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Iterate Offices\Sequence Container\Add to Campaign\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[Status]"
                              name="Status" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[CurrentOfficeName]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Iterate Offices\Sequence Container\Add to Campaign\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[CurrentOfficeName]"
                              name="CurrentOfficeName" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[PriceFrom]"
                              dataType="numeric"
                              lineageId="Package\Iterate Offices\Sequence Container\Add to Campaign\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[PriceFrom]"
                              name="PriceFrom"
                              precision="10" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[PriceTo]"
                              dataType="numeric"
                              lineageId="Package\Iterate Offices\Sequence Container\Add to Campaign\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[PriceTo]"
                              name="PriceTo"
                              precision="10" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[prefguid]"
                              dataType="wstr"
                              length="4000"
                              lineageId="Package\Iterate Offices\Sequence Container\Add to Campaign\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[prefguid]"
                              name="prefguid" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[ContactId]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Add to Campaign\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[ContactId]"
                              name="ContactId" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Add to Campaign\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Add to Campaign\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Post Contact Cust Fields Request"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Web API Destination; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="The Web API destination can be used to send data to Web API URL (e.g. Submit or POST data to REST API/SOAP or other HTTP/HTTPS endpoints)"
                      name="Post Contact Cust Fields Request"
                      usesDispositions="true"
                      version="5">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">3</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.String"
                          description="API URL you want to access"
                          expressionType="Notify"
                          name="HttpRequestUrl">{{User::RexAPIWebURLv1}}rex/batch-requests/execute-with-transaction</property>
                        <property
                          dataType="System.String"
                          description="Http Web Request Method (e.g. POST, GET, PUT, LIST, DELETE...). Refer your API documentation if you are not sure which method you have to use."
                          expressionType="Notify"
                          name="HttpRequestMethod">POST</property>
                        <property
                          dataType="System.String"
                          description="Set this if you want to set custom Http headers. You may use variable anywhere in the header value using syntax {{User::YourVarName}}. Syntax of Header key value pair is : &amp;lt;request&amp;gt;&amp;lt;header&amp;gt;&amp;lt;name&amp;gt;x-myheader-1&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;AAA&amp;lt;/value&amp;gt;&amp;lt;/header&amp;gt; &amp;lt;header&amp;gt;&amp;lt;name&amp;gt;x-myheader-2&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;BBB&amp;lt;/value&amp;gt;&amp;lt;/header&amp;gt;&amp;lt;/request&amp;gt;"
                          expressionType="Notify"
                          name="HttpHeaders"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">&lt;request&gt;&lt;header&gt;&lt;name&gt;Accept&lt;/name&gt;&lt;value&gt;*/*&lt;/value&gt;&lt;/header&gt;&lt;header&gt;&lt;name&gt;Cache-Control&lt;/name&gt;&lt;value&gt;no-cache&lt;/value&gt;&lt;/header&gt;&lt;header&gt;&lt;name&gt;Authorization&lt;/name&gt;&lt;value&gt;Bearer {{User::RexToken}}&lt;/value&gt;&lt;/header&gt;&lt;/request&gt;</property>
                        <property
                          dataType="System.String"
                          description="User defined data you wish to send along with your HTTP Request (e.g. Upload file data, Form POST data). Usually you have to set content-type of your data but if you select RequestMethod=POST then system will automatically set content-type=application/x-www-form-urlencoded."
                          expressionType="Notify"
                          name="HttpRequestData"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies content type for data you wish to POST. If you select Default option then system default content type will be used (i.e. application/x-www-form-urlencoded). If you specify Content-Type header along with this option then header value takes precedence."
                          expressionType="Notify"
                          name="HttpRequestContentType"
                          typeConverter="ZappySys.Common.Web.HttpRequestContentType">2</property>
                        <property
                          dataType="System.Boolean"
                          description="If this option is true then component will continue without exception on 404 error (Url not found). This allows you to consume data gracefully."
                          expressionType="Notify"
                          name="ContinueOnUrlNotFoundError">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Ignore SSL certificate related errors. Example: if you getting SSL/TLS errors because of certificate expired or certificate is not from trusted authority or certificate is self-signed. By checking this option you will not get SSL/TLS error."
                          expressionType="Notify"
                          name="IgnoreCertificateErrors">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Allow unsecure ciphers/suites and curves for SSLS/TLS communication. Use this option to communicate with web servers which needs legacy / unsecured ciphers support. This option is only trigged when you change default SSL/TLS Version on advanced settings tab."
                          expressionType="Notify"
                          name="AllowUnsecureSuite">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Enable support for gzip or deflate compression. When you check this option compressed response automatically de-compressed saving bandwidth. This option is only valid if web server supports compressed response stream. Check your API documentation for more information."
                          expressionType="Notify"
                          name="EnableCompressionSupport">true</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies which security protocol is supported for HTTPS communication. Using this option you can enable legacy protocol or enforce to use latest version of security protocol (Note: TLS 1.2 is only supported in SSIS 2014 or Higher)."
                          expressionType="Notify"
                          name="SecurityProtocol"
                          typeConverter="ZappySys.PowerPack.Common.HttpsSecurityProtocolType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Wait time in milliseconds (Pause after each request). 0=No wait. Use this delay time if your API has limit on how many requests you can make in certain time frame."
                          expressionType="Notify"
                          name="WaitTime">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you redirect error to error output by default you get additional information in ErrorMessage column. Check this option if you need exact Response Body (Useful if its in JSON/XML format which needs to be parsed for additional information for later step)."
                          expressionType="Notify"
                          name="OnErrorOutputResponseBody">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Enable multiple requests using parallel threads."
                          expressionType="Notify"
                          name="EnableParallelRequests">false</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum parallel threads to use for processing multiple web requests."
                          expressionType="Notify"
                          name="MaxParallelThreads">20</property>
                        <property
                          dataType="System.Boolean"
                          description="By default one request is sent for each input row. If your API supports multiple records in a single call via HTTP Body then enable this setting. See also BodyBatchSize, BodyHeader, BodyFooter and BodyRowSeparator property."
                          expressionType="Notify"
                          name="EnableBodyBatch">true</property>
                        <property
                          dataType="System.String"
                          description="When you have to wrap input content between opening and closing tags for each call then set this property to specify opening for body content. For Example if you want to build Body like this (send max 100 rows per call) ==&gt; { records : [ {...}, {...}, {...} ] } then you can set BatchSize=100, BodyHeader as &quot;{ records: [&quot; , BodyFooter as &quot;] }&quot; and BodyRowSeperator as comma {,}. This property is ignored if EnableBodyBatch=false."
                          expressionType="Notify"
                          name="BodyHeader">{   "requests": {</property>
                        <property
                          dataType="System.String"
                          description="When you have to wrap input content between opening and closing tags for each call then set this property to specify closing for body content. For Example if you want to build Body like this (send max 100 rows per call) ==&gt; { records : [ {...}, {...}, {...} ] } then you can set BatchSize=100, BodyHeader as &quot;{ records: [&quot; , BodyFooter as &quot;] }&quot; and BodyRowSeperator as comma {,}. This property is ignored if EnableBodyBatch=false."
                          expressionType="Notify"
                          name="BodyFooter">}}</property>
                        <property
                          dataType="System.Int32"
                          description="If your API supports multiple records via HTTP Body then change this setting &gt; 1 to include multiple upstream records into single call. See also BodyHeader, BodyFooter and BodyRowSeparator property. This property is ignored if EnableBodyBatch=false."
                          expressionType="Notify"
                          name="BodyBatchSize">100</property>
                        <property
                          dataType="System.String"
                          description="When you submit multiple rows in a batch you can separate multiple documents / records using custom separator (e.g. in JSON Array you can use comma {,} as record separator if POST document is in array format [ {...}, {...}, {...} ] ). For last row of batch blank separator is used."
                          expressionType="Notify"
                          name="BodyRowSeparator">,</property>
                        <property
                          dataType="System.Boolean"
                          description="Returns response data as binary data (e.g. Byte Array). Check this option is response is Zip file, Image file or any non text data which needs to be exported as raw data without any encoding."
                          expressionType="Notify"
                          name="TreatResponseAsBinary">false</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.WebApiDestination</property>
                        <property
                          dataType="System.Boolean"
                          description="Check this option if you want to upload file(s) (i.e. POST RAW file data) or send data using Multi-Part encoding method (i.e. Content-Type: multipart/form-data). Multi-Part request allows you to mix key/value and upload files in same request. On the other hand raw upload allows only single file upload (without any key/value) &#xA;&#xA;==== Raw Upload (Content-Type: application/octet-stream) =====   &#xA;To upload single file in raw mode check this option and specify full file path starting with @ sign in the Body (e.g.  @c:\data\myfile.zip ) &#xA;&#xA;==== Form-Data / Multipart Upload (Content-Type: multipart/form-data) =====   &#xA;To treat your Request data as multi part fields you must specify key/value pairs separated by new lines into RequestData field (i.e. Body). Each key value pair is entered on new-line and key/value are separated using equal sign (=). Preceding and trailing spaces are ignored also blank lines are ignored. &#xA;If field value has some any special character(s) then use escape sequence (e.g. For NewLine: \r\n, For Tab: \t, For at (@): \@). When value of any field starts with at sign (@) its automatically treated as File you want to upload. By default file content type is determined based on extension however you can supply content type manually for any field using this way [ fieldname.Content-Type=some content type ]. In below example we have supplied Content-Type for file2 and SomeField1, all other fields are using default content-type.&#xA;See below Example of uploading multiple files along with additional fields.&#xA;&#xA;file1=@c:\data\Myfile1.txt&#xA;file2=@c:\data\Myfile2.json&#xA;file2.Content-Type=application/json&#xA;SomeField1=aaaaaaa&#xA;SomeField1.Content-Type=text/plain&#xA;SomeField2=12345&#xA;SomeFieldWithNewLineAndTab=This is line1\r\nThis is line2\r\nThis is \ttab \ttab \ttab&#xA;SomeFieldStartingWithAtSign=\@MyTwitterHandle&#xA;"
                          expressionType="Notify"
                          name="IsMultiPartUpload">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Enable this option if your server is expecting &#xA; (i.e. CRLF) after last Multi-Part boundary in the Body. This option is only applicable if you enabled IsMultiPartUpload and sending data in Key=value format (i.e. Mutipart). For raw file upload this option has no effect."
                          expressionType="Notify"
                          name="AddMultiPartPostamble">false</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Post Contact Cust Fields Request.Connections[Connection]"
                          connectionManagerID="Package.ConnectionManagers[HTTP 1]"
                          connectionManagerRefId="Package.ConnectionManagers[HTTP 1]"
                          description="Connection manager for authentication (e.g. HTTP or OAuth Connection)"
                          name="Connection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Post Contact Cust Fields Request.Inputs[WebApiDestinationInput]"
                          errorRowDisposition="FailComponent"
                          hasSideEffects="true"
                          name="WebApiDestinationInput"
                          truncationRowDisposition="FailComponent">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Post Contact Cust Fields Request.Inputs[WebApiDestinationInput].Columns[TemplateOutput]"
                              cachedDataType="nText"
                              cachedName="TemplateOutput"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Add to Campaign\Post Contact Cust Fields Request.Inputs[WebApiDestinationInput].ExternalColumns[HttpRequestData]"
                              lineageId="Package\Iterate Offices\Sequence Container\Add to Campaign\Build CampaignMemberAdd.Outputs[TemplateTransformOutput].Columns[TemplateOutput]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Post Contact Cust Fields Request.Inputs[WebApiDestinationInput].ExternalColumns[HttpRequestUrl]"
                              dataType="wstr"
                              length="2000"
                              name="HttpRequestUrl" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Post Contact Cust Fields Request.Inputs[WebApiDestinationInput].ExternalColumns[HttpRequestData]"
                              dataType="nText"
                              name="HttpRequestData" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Post Contact Cust Fields Request.Inputs[WebApiDestinationInput].ExternalColumns[HttpHeaders]"
                              dataType="wstr"
                              length="2000"
                              name="HttpHeaders" />
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Post Contact Cust Fields Request.Outputs[WebApiDestination Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="WebApiDestination Error Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Add to Campaign\Post Contact Cust Fields Request.Inputs[WebApiDestinationInput]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Post Contact Cust Fields Request.Outputs[WebApiDestination Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Add to Campaign\Post Contact Cust Fields Request.Outputs[WebApiDestination Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Post Contact Cust Fields Request.Outputs[WebApiDestination Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Add to Campaign\Post Contact Cust Fields Request.Outputs[WebApiDestination Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Post Contact Cust Fields Request.Outputs[WebApiDestination Error Output].Columns[ErrorColumnName]"
                              codePage="1252"
                              dataType="str"
                              length="128"
                              lineageId="Package\Iterate Offices\Sequence Container\Add to Campaign\Post Contact Cust Fields Request.Outputs[WebApiDestination Error Output].Columns[ErrorColumnName]"
                              name="ErrorColumnName" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Post Contact Cust Fields Request.Outputs[WebApiDestination Error Output].Columns[ErrorMessage]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\Add to Campaign\Post Contact Cust Fields Request.Outputs[WebApiDestination Error Output].Columns[ErrorMessage]"
                              name="ErrorMessage" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Post Contact Cust Fields Request.Outputs[Response Output]"
                          exclusionGroup="1"
                          name="Response Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Add to Campaign\Post Contact Cust Fields Request.Inputs[WebApiDestinationInput]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Post Contact Cust Fields Request.Outputs[Response Output].Columns[ResponseText]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\Add to Campaign\Post Contact Cust Fields Request.Outputs[Response Output].Columns[ResponseText]"
                              name="ResponseText" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Post Contact Cust Fields Request.Outputs[Response Output].Columns[StatusCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Add to Campaign\Post Contact Cust Fields Request.Outputs[Response Output].Columns[StatusCode]"
                              name="StatusCode" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="JSON Parser Transform; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="Parse incoming JSON String into columns. You can also parse and transform single JSON record into multiple rows by filtering data based on JSON Path (e.g. $.Customer.Orders[*])"
                      name="Read Success"
                      usesDispositions="true"
                      version="2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for any numeric data types"
                          expressionType="Notify"
                          name="TreatBlankNumberAsNull">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for bool data types"
                          expressionType="Notify"
                          name="TreatBlankBoolAsNull">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for any date/time data types"
                          expressionType="Notify"
                          name="TreatBlankDateAsNull">true</property>
                        <property
                          dataType="System.Int32"
                          description="Encoding of source file"
                          expressionType="Notify"
                          name="Encoding"
                          typeConverter="ZappySys.Common.EncodingType">0</property>
                        <property
                          dataType="System.String"
                          description="Character set for text (e.g. utf-8 )"
                          expressionType="Notify"
                          name="CharacterSet"></property>
                        <property
                          dataType="System.String"
                          description="Sample JSON data used to parse output columns."
                          expressionType="Notify"
                          name="SampleData"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">{
    "result": {
        "123": {
            "system_ctime": 1613409380,
            "system_modtime": 1613409380,
            "etag": "292881-1613409380",
            "system_modified_user": {
                "id": "19443",
                "name": "Rosie API",
                "first_name": "Rosie",
                "last_name": "API",
                "email_address": "rosie@spicerhaart.co.uk"
            },
            "system_created_user": {
                "id": "19443",
                "name": "Rosie API",
                "first_name": "Rosie",
                "last_name": "API",
                "email_address": "rosie@spicerhaart.co.uk"
            },
            "service_record": {
                "id": 218763,
                "text": "DC Law solicitors",
                "stub": {
                    "name": "DC Law solicitors",
                    "email_address": null,
                    "phone_number": null,
                    "fax_number": null,
                    "address_postal": null,
                    "address": null,
                    "id": "218763"
                }
            },
            "status": {
                "id": 44931,
                "text": "To Call"
            },
            "service_type": {
                "id": "Contacts",
                "text": "Contacts"
            },
            "last_activity": null,
            "campaign": {
                "name": "Network Lead",
                "type": {
                    "id": "phone",
                    "text": "Phone"
                },
                "status": {
                    "id": "in_progress",
                    "text": "In Progress"
                },
                "id": 3157
            },
            "id": 292881
        },
        "456": {
            "system_ctime": 1613409380,
            "system_modtime": 1613409380,
            "etag": "292882-1613409380",
            "system_modified_user": {
                "id": "19443",
                "name": "Rosie API",
                "first_name": "Rosie",
                "last_name": "API",
                "email_address": "rosie@spicerhaart.co.uk"
            },
            "system_created_user": {
                "id": "19443",
                "name": "Rosie API",
                "first_name": "Rosie",
                "last_name": "API",
                "email_address": "rosie@spicerhaart.co.uk"
            },
            "service_record": {
                "id": 343691,
                "text": "Test Company",
                "stub": {
                    "name": "Test Company",
                    "email_address": null,
                    "phone_number": null,
                    "fax_number": null,
                    "address_postal": null,
                    "address": null,
                    "id": "343691"
                }
            },
            "status": {
                "id": 44931,
                "text": "To Call"
            },
            "service_type": {
                "id": "Contacts",
                "text": "Contacts"
            },
            "last_activity": null,
            "campaign": {
                "name": "Network Lead",
                "type": {
                    "id": "phone",
                    "text": "Phone"
                },
                "status": {
                    "id": "in_progress",
                    "text": "In Progress"
                },
                "id": 3157
            },
            "id": 292882
        }
    },
    "error": {
		"message": "The JSON body you provided was not valid: 'Syntax error'. Please fix and try again.",
		"type": "InvalidArgumentException",
		"code": 0,
		"extra": {
			"request_data": {
				"method": "AuthenticatedServiceProxy::describe",
				"add_request_prefixes": true
			}
		}
		}
}</property>
                        <property
                          dataType="System.Boolean"
                          description="Include all upstream parent columns into output except the one you selected to parse. By default only parsed columns from Input document is included in the output. If you wish to include all other upstream columns in the output too then check this option."
                          expressionType="Notify"
                          name="OutputAllUpstreamColumns">true</property>
                        <property
                          dataType="System.Int32"
                          description="Defines how to handle empty input. By default NULL or Empty input is skipped from parsing."
                          expressionType="Notify"
                          name="EmptyInputProcessingMode"
                          typeConverter="ZappySys.Common.Data.EmptyInputProcessingMode">0</property>
                        <property
                          dataType="System.String"
                          description="Defines how to handle empty input. By default NULL or Empty input is skipped from parsing."
                          expressionType="Notify"
                          name="TreatEmptyInputAs">{ }</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum JSON records to fetch. Set this value to 0 for all records"
                          expressionType="Notify"
                          name="MaxRows">0</property>
                        <property
                          dataType="System.String"
                          description="Enter expression here to filter data.(Example:  $.Users[*].UserName ) This will fetch User names from users records"
                          expressionType="Notify"
                          name="Filter"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">$.result</property>
                        <property
                          dataType="System.Boolean"
                          description="Use this option to include parent properties (Non array) in the output along with Filtered Rows"
                          expressionType="Notify"
                          name="IncludeParentColumns">true</property>
                        <property
                          dataType="System.Boolean"
                          description="By default child and parent information is not included in the output if children not found for specified expression. For example if you want to extract all orders from all customers nodes then you can type $.Customers[*].Orders[*]. This will fetch all orders from all customers. By default customers records without orders wont be included in the output. If you want to include those customers where orders not found then check this option (Output null information for order attributes). This behavior is similar to LEFT OUTER JOIN in SQL (Left side is parent, right side is child). This option is ***resource intensive*** so only check if you really care about this behavior."
                          expressionType="Notify"
                          name="IncludeParentColumnsWhenChildMissing">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to true if you want to output parent columns which are array. By default any parent column which is an array is not included in output. See also FilterForParentColumnsWithArrayType property if you set this property"
                          expressionType="Notify"
                          name="IncludeParentColumnsWithArrayType">true</property>
                        <property
                          dataType="System.String"
                          description="Filter expression to extract value form parent"
                          expressionType="Notify"
                          name="FilterForParentColumnsWithArrayType"></property>
                        <property
                          dataType="System.String"
                          description="Prefix for parent column name. This option is only valid if you have set IncludeParentColumns=True"
                          expressionType="Notify"
                          name="ParentColumnPrefix">P_</property>
                        <property
                          dataType="System.Boolean"
                          description="Throw error if property name specified in filter expression is missing. By default it will ignore any missing property errors."
                          expressionType="Notify"
                          name="ThrowErrorIfPropertyMissing">false</property>
                        <property
                          dataType="System.Int32"
                          description="This property how many nested levels should be scanned to fetch various properties. 0=Scan all child levels."
                          expressionType="Notify"
                          name="MaxLevelsToScan">0</property>
                        <property
                          dataType="System.String"
                          description="List comma separated property names from JSON document which you want to exclude from output. Specify parent property name to exclude all child nodes."
                          expressionType="Notify"
                          name="ExcludedProperties"></property>
                        <property
                          dataType="System.String"
                          description="Property level separator used in generated property name (separator for outer properties - Above selected filter node). Use this if default separator is producing duplicate property name which is conflicting with existing name."
                          expressionType="Notify"
                          name="LevelSeparator">_</property>
                        <property
                          dataType="System.Boolean"
                          description="Enables deep array flattening for selected filtered hierarchy. When you turn on this property it will flatten each property of each array item and expose as column (e.g. If you have Filter set as $.customers[*] and for each customer you have an array of Addresses then you may see output columns like Addresses.1.City, Addresses.1.State, Addresses.2.City, Addresses.2.State .... Addresses.N.City, Addresses.N.State). You can control how many array items you want to flatten by setting MaxArrayItemsToFlatten property."
                          expressionType="Notify"
                          name="EnableArrayFlattening">false</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum number of array items to flatten. inner array flattening. Adjust this property to control how many columns being generated. This option is ignored if you set EnableArrayFlattening=false"
                          expressionType="Notify"
                          name="MaxArrayItemsToFlatten">10</property>
                        <property
                          dataType="System.String"
                          description="Specifies how custom date formatted strings are parsed when reading JSON."
                          expressionType="Notify"
                          name="DateFormatString"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies how date formatted strings, e.g. Date(1198908717056) and 2012-03-21T05:40Z, are parsed when reading JSON."
                          expressionType="Notify"
                          name="DateParseHandling"
                          typeConverter="ZappySys.Common.DateParseHandling">1</property>
                        <property
                          dataType="System.Boolean"
                          description="Indent JSON output so its easy to read."
                          expressionType="Notify"
                          name="IndentOutput">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Output as raw JSON document rather than parsing individual fields. This option is helpful if you have documents stored in a file and you want to pass them downstream as raw JSON string rather than parsing into columns."
                          expressionType="Notify"
                          name="OutputRawDocument">false</property>
                        <property
                          dataType="System.Boolean"
                          description="When this property is true then Column is converted to Row. Pivoted names will appear under  Pivot_Name column and values will appear under Pivot_Value field."
                          expressionType="Notify"
                          name="EnablePivot">true</property>
                        <property
                          dataType="System.Int32"
                          description="Array Transformation you want to apply. Useful for case when you have 2-Dimensional arrays with rows/columns in separate arrays."
                          expressionType="Notify"
                          name="ArrayTransformationType"
                          typeConverter="ZappySys.Json.ArrayTransformType">0</property>
                        <property
                          dataType="System.String"
                          description="Filter expression to use to extract column names for array transformation."
                          expressionType="Notify"
                          name="ArrayTransColumnNameFilter"></property>
                        <property
                          dataType="System.String"
                          description="Filter expression for row values (Not applicable for simple array transformation)."
                          expressionType="Notify"
                          name="ArrayTransRowValueFilter"></property>
                        <property
                          dataType="System.Boolean"
                          description="When you have 2D array but don't have column list specified in a separate array then use this option (e.g. { arr: [[10,11],[21,22]] } ). If you selected Column less array or JSON Lines option then this property means Column Names coming from First Line of array."
                          expressionType="Notify"
                          name="ArrayTransEnableCustomColumns">false</property>
                        <property
                          dataType="System.String"
                          description="When you have 2D array but don't have column list specified in a separate array then use specify column names here. Use comma separated list (e.g col1,col2,col3 ). Column name Order must match value order."
                          expressionType="Notify"
                          name="ArrayTransCustomColumns"></property>
                        <property
                          dataType="System.Int32"
                          description="Metadata scan mode controls how data type and length is determined. By default few records scanned to determine datatype/length. Changing ScanMode affects length/datatype accuracy."
                          expressionType="Notify"
                          name="MetaDataScanMode"
                          typeConverter="ZappySys.Common.Data.MetaDataScanMode">4</property>
                        <property
                          dataType="System.Int32"
                          description="Length for all string column. This option is only valid for MetaDataScanMode=Custom"
                          expressionType="Notify"
                          name="MetaDataCustomLength">1000</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.JsonParserTransform</property>
                        <property
                          dataType="System.Boolean"
                          name="EnableBigNumberHandling">false</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Inputs[JsonParserTransformInput]"
                          errorRowDisposition="FailComponent"
                          name="JsonParserTransformInput"
                          truncationRowDisposition="FailComponent">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Inputs[JsonParserTransformInput].Columns[ResponseText]"
                              cachedDataType="nText"
                              cachedName="ResponseText"
                              lineageId="Package\Iterate Offices\Sequence Container\Add to Campaign\Post Contact Cust Fields Request.Outputs[Response Output].Columns[ResponseText]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Inputs[JsonParserTransformInput].Columns[Category]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Category"
                              lineageId="Package\Iterate Offices\Sequence Container\Add to Campaign\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[Category]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransformOutput].Columns[Category]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Inputs[JsonParserTransformInput].Columns[Reference]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Reference"
                              lineageId="Package\Iterate Offices\Sequence Container\Add to Campaign\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[Reference]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransformOutput].Columns[Reference]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Inputs[JsonParserTransformInput].Columns[Status]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Status"
                              lineageId="Package\Iterate Offices\Sequence Container\Add to Campaign\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[Status]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransformOutput].Columns[Status]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Inputs[JsonParserTransformInput].Columns[PriceFrom]"
                              cachedDataType="numeric"
                              cachedName="PriceFrom"
                              cachedPrecision="10"
                              lineageId="Package\Iterate Offices\Sequence Container\Add to Campaign\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[PriceFrom]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransformOutput].Columns[PriceFrom]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Inputs[JsonParserTransformInput].Columns[PriceTo]"
                              cachedDataType="numeric"
                              cachedName="PriceTo"
                              cachedPrecision="10"
                              lineageId="Package\Iterate Offices\Sequence Container\Add to Campaign\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[PriceTo]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransformOutput].Columns[PriceTo]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Inputs[JsonParserTransformInput].Columns[prefguid]"
                              cachedDataType="wstr"
                              cachedLength="4000"
                              cachedName="prefguid"
                              lineageId="Package\Iterate Offices\Sequence Container\Add to Campaign\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[prefguid]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransformOutput].Columns[prefguid]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Inputs[JsonParserTransformInput].Columns[ContactId]"
                              cachedDataType="i4"
                              cachedName="ContactId"
                              lineageId="Package\Iterate Offices\Sequence Container\Add to Campaign\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[ContactId]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransformOutput].Columns[ContactId]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Inputs[JsonParserTransformInput].Columns[SqlId]"
                              cachedDataType="i4"
                              cachedName="SqlId"
                              lineageId="Package\Iterate Offices\Sequence Container\Add to Campaign\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[SqlId]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransformOutput].Columns[SqlId]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Inputs[JsonParserTransformInput].Columns[CurrentOfficeName]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="CurrentOfficeName"
                              lineageId="Package\Iterate Offices\Sequence Container\Add to Campaign\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[CurrentOfficeName]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransformOutput].Columns[CurrentOfficeName]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Inputs[JsonParserTransformInput].Columns[TemplateOutput]"
                              cachedDataType="nText"
                              cachedName="TemplateOutput"
                              lineageId="Package\Iterate Offices\Sequence Container\Add to Campaign\Build CampaignMemberAdd.Outputs[TemplateTransformOutput].Columns[TemplateOutput]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransformOutput].Columns[TemplateOutput]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Inputs[JsonParserTransformInput].Columns[StatusCode]"
                              cachedDataType="i4"
                              cachedName="StatusCode"
                              lineageId="Package\Iterate Offices\Sequence Container\Add to Campaign\Post Contact Cust Fields Request.Outputs[Response Output].Columns[StatusCode]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransformOutput].Columns[StatusCode]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True" />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransformOutput]"
                          errorOrTruncationOperation="Error"
                          errorRowDisposition="RedirectRow"
                          name="JsonParserTransformOutput"
                          truncationRowDisposition="RedirectRow">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransformOutput].Columns[StatusCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransformOutput].Columns[StatusCode]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Inputs[JsonParserTransformInput].Columns[StatusCode]"
                              name="StatusCode" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransformOutput].Columns[TemplateOutput]"
                              dataType="nText"
                              description="Template output column which will contain replaced text."
                              lineageId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransformOutput].Columns[TemplateOutput]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Inputs[JsonParserTransformInput].Columns[TemplateOutput]"
                              name="TemplateOutput" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransformOutput].Columns[CurrentOfficeName]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransformOutput].Columns[CurrentOfficeName]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Inputs[JsonParserTransformInput].Columns[CurrentOfficeName]"
                              name="CurrentOfficeName" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransformOutput].Columns[SqlId]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransformOutput].Columns[SqlId]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Inputs[JsonParserTransformInput].Columns[SqlId]"
                              name="SqlId" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransformOutput].Columns[ContactId]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransformOutput].Columns[ContactId]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Inputs[JsonParserTransformInput].Columns[ContactId]"
                              name="ContactId" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransformOutput].Columns[prefguid]"
                              dataType="wstr"
                              length="4000"
                              lineageId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransformOutput].Columns[prefguid]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Inputs[JsonParserTransformInput].Columns[prefguid]"
                              name="prefguid" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransformOutput].Columns[PriceTo]"
                              dataType="numeric"
                              lineageId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransformOutput].Columns[PriceTo]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Inputs[JsonParserTransformInput].Columns[PriceTo]"
                              name="PriceTo"
                              precision="10" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransformOutput].Columns[PriceFrom]"
                              dataType="numeric"
                              lineageId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransformOutput].Columns[PriceFrom]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Inputs[JsonParserTransformInput].Columns[PriceFrom]"
                              name="PriceFrom"
                              precision="10" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransformOutput].Columns[Status]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransformOutput].Columns[Status]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Inputs[JsonParserTransformInput].Columns[Status]"
                              name="Status" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransformOutput].Columns[Reference]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransformOutput].Columns[Reference]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Inputs[JsonParserTransformInput].Columns[Reference]"
                              name="Reference" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransformOutput].Columns[Category]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransformOutput].Columns[Category]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Inputs[JsonParserTransformInput].Columns[Category]"
                              name="Category" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransformOutput].Columns[Pivot_Name]"
                              dataType="i4"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Name]"
                              lineageId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransformOutput].Columns[Pivot_Name]"
                              name="Pivot_Name" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransformOutput].Columns[Pivot_Value.campaign.id]"
                              dataType="i4"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.campaign.id]"
                              lineageId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransformOutput].Columns[Pivot_Value.campaign.id]"
                              name="Pivot_Value.campaign.id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransformOutput].Columns[Pivot_Value.id]"
                              dataType="i4"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.id]"
                              lineageId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransformOutput].Columns[Pivot_Value.id]"
                              name="Pivot_Value.id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransformOutput].Columns[P_error_message]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[P_error_message]"
                              length="332"
                              lineageId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransformOutput].Columns[P_error_message]"
                              name="P_error_message" />
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[P_error_message]"
                              dataType="wstr"
                              length="332"
                              name="P_error_message" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[P_error_type]"
                              dataType="wstr"
                              length="96"
                              name="P_error_type" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[P_error_code]"
                              dataType="i8"
                              name="P_error_code" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[P_error_extra_request_data_method]"
                              dataType="wstr"
                              length="140"
                              name="P_error_extra_request_data_method" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[P_error_extra_request_data_add_request_prefixes]"
                              dataType="bool"
                              name="P_error_extra_request_data_add_request_prefixes" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Name]"
                              dataType="wstr"
                              length="12"
                              name="Pivot_Name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.system_ctime]"
                              dataType="i8"
                              name="Pivot_Value.system_ctime" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.system_modtime]"
                              dataType="i8"
                              name="Pivot_Value.system_modtime" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.etag]"
                              dataType="wstr"
                              length="68"
                              name="Pivot_Value.etag" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.system_modified_user.id]"
                              dataType="wstr"
                              length="20"
                              name="Pivot_Value.system_modified_user.id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.system_modified_user.name]"
                              dataType="wstr"
                              length="36"
                              name="Pivot_Value.system_modified_user.name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.system_modified_user.first_name]"
                              dataType="wstr"
                              length="20"
                              name="Pivot_Value.system_modified_user.first_name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.system_modified_user.last_name]"
                              dataType="wstr"
                              length="12"
                              name="Pivot_Value.system_modified_user.last_name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.system_modified_user.email_address]"
                              dataType="wstr"
                              length="92"
                              name="Pivot_Value.system_modified_user.email_address" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.system_created_user.id]"
                              dataType="wstr"
                              length="20"
                              name="Pivot_Value.system_created_user.id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.system_created_user.name]"
                              dataType="wstr"
                              length="36"
                              name="Pivot_Value.system_created_user.name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.system_created_user.first_name]"
                              dataType="wstr"
                              length="20"
                              name="Pivot_Value.system_created_user.first_name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.system_created_user.last_name]"
                              dataType="wstr"
                              length="12"
                              name="Pivot_Value.system_created_user.last_name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.system_created_user.email_address]"
                              dataType="wstr"
                              length="92"
                              name="Pivot_Value.system_created_user.email_address" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.service_record.id]"
                              dataType="i8"
                              name="Pivot_Value.service_record.id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.service_record.text]"
                              dataType="wstr"
                              length="68"
                              name="Pivot_Value.service_record.text" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.service_record.stub.name]"
                              dataType="wstr"
                              length="68"
                              name="Pivot_Value.service_record.stub.name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.service_record.stub.email_address]"
                              dataType="wstr"
                              length="1020"
                              name="Pivot_Value.service_record.stub.email_address" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.service_record.stub.phone_number]"
                              dataType="wstr"
                              length="1020"
                              name="Pivot_Value.service_record.stub.phone_number" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.service_record.stub.fax_number]"
                              dataType="wstr"
                              length="1020"
                              name="Pivot_Value.service_record.stub.fax_number" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.service_record.stub.address_postal]"
                              dataType="wstr"
                              length="1020"
                              name="Pivot_Value.service_record.stub.address_postal" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.service_record.stub.address]"
                              dataType="wstr"
                              length="1020"
                              name="Pivot_Value.service_record.stub.address" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.service_record.stub.id]"
                              dataType="wstr"
                              length="24"
                              name="Pivot_Value.service_record.stub.id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.status.id]"
                              dataType="i8"
                              name="Pivot_Value.status.id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.status.text]"
                              dataType="wstr"
                              length="28"
                              name="Pivot_Value.status.text" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.service_type.id]"
                              dataType="wstr"
                              length="32"
                              name="Pivot_Value.service_type.id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.service_type.text]"
                              dataType="wstr"
                              length="32"
                              name="Pivot_Value.service_type.text" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.last_activity]"
                              dataType="wstr"
                              length="1020"
                              name="Pivot_Value.last_activity" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.campaign.name]"
                              dataType="wstr"
                              length="48"
                              name="Pivot_Value.campaign.name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.campaign.type.id]"
                              dataType="wstr"
                              length="20"
                              name="Pivot_Value.campaign.type.id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.campaign.type.text]"
                              dataType="wstr"
                              length="20"
                              name="Pivot_Value.campaign.type.text" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.campaign.status.id]"
                              dataType="wstr"
                              length="44"
                              name="Pivot_Value.campaign.status.id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.campaign.status.text]"
                              dataType="wstr"
                              length="44"
                              name="Pivot_Value.campaign.status.text" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.campaign.id]"
                              dataType="i8"
                              name="Pivot_Value.campaign.id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Pivot_Value.id]"
                              dataType="i8"
                              name="Pivot_Value.id" />
                          </externalMetadataColumns>
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransform Error Output]"
                          isErrorOut="true"
                          name="JsonParserTransform Error Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransform Error Output].Columns[StatusCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransform Error Output].Columns[StatusCode]"
                              name="StatusCode" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransform Error Output].Columns[TemplateOutput]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransform Error Output].Columns[TemplateOutput]"
                              name="TemplateOutput" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransform Error Output].Columns[CurrentOfficeName]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransform Error Output].Columns[CurrentOfficeName]"
                              name="CurrentOfficeName" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransform Error Output].Columns[SqlId]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransform Error Output].Columns[SqlId]"
                              name="SqlId" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransform Error Output].Columns[ContactId]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransform Error Output].Columns[ContactId]"
                              name="ContactId" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransform Error Output].Columns[prefguid]"
                              dataType="wstr"
                              length="4000"
                              lineageId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransform Error Output].Columns[prefguid]"
                              name="prefguid" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransform Error Output].Columns[PriceTo]"
                              dataType="numeric"
                              lineageId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransform Error Output].Columns[PriceTo]"
                              name="PriceTo"
                              precision="10" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransform Error Output].Columns[PriceFrom]"
                              dataType="numeric"
                              lineageId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransform Error Output].Columns[PriceFrom]"
                              name="PriceFrom"
                              precision="10" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransform Error Output].Columns[Status]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransform Error Output].Columns[Status]"
                              name="Status" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransform Error Output].Columns[Reference]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransform Error Output].Columns[Reference]"
                              name="Reference" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransform Error Output].Columns[Category]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransform Error Output].Columns[Category]"
                              name="Category" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransform Error Output].Columns[Pivot_Name]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransform Error Output].Columns[Pivot_Name]"
                              name="Pivot_Name" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransform Error Output].Columns[Pivot_Value.campaign.id]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransform Error Output].Columns[Pivot_Value.campaign.id]"
                              name="Pivot_Value.campaign.id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransform Error Output].Columns[Pivot_Value.id]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransform Error Output].Columns[Pivot_Value.id]"
                              name="Pivot_Value.id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransform Error Output].Columns[P_error_message]"
                              dataType="wstr"
                              length="332"
                              lineageId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransform Error Output].Columns[P_error_message]"
                              name="P_error_message" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransform Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransform Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransform Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransform Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransform Error Output].Columns[ErrorColumnName]"
                              codePage="1252"
                              dataType="str"
                              length="128"
                              lineageId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransform Error Output].Columns[ErrorColumnName]"
                              name="ErrorColumnName" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransform Error Output].Columns[ErrorMessage]"
                              dataType="wstr"
                              length="1024"
                              lineageId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransform Error Output].Columns[ErrorMessage]"
                              name="ErrorMessage" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransform Error Output].Columns[ErrorRawData]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransform Error Output].Columns[ErrorRawData]"
                              name="ErrorRawData" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Trash Destination"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Trash Destination; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="The trash destination is used to create dummy destination which ends data path without any processing."
                      name="Trash Destination"
                      version="2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.String"
                          description="File path where you want to save data"
                          expressionType="Notify"
                          name="FilePath">C:\SSISVariables\Log\CapaignAdd1</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates if you want to save input data to comma separated text file"
                          expressionType="Notify"
                          name="SaveDataToFile">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Append data to file"
                          expressionType="Notify"
                          name="Append">false</property>
                        <property
                          dataType="System.String"
                          description="RowSeparator"
                          expressionType="Notify"
                          name="RowSeparator">{NEWLINE}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether you want to overwrite target file if exists"
                          expressionType="Notify"
                          name="OverwriteFileIfExists">true</property>
                        <property
                          dataType="System.String"
                          description="ColumnSeparator"
                          expressionType="Notify"
                          name="ColumnSeparator">,</property>
                        <property
                          dataType="System.Boolean"
                          description="SupportUnicode"
                          expressionType="Notify"
                          name="SupportUnicode">true</property>
                        <property
                          dataType="System.Boolean"
                          description="ColumnNamesInFirstRow"
                          expressionType="Notify"
                          name="ColumnNamesInFirstRow">true</property>
                        <property
                          dataType="System.Boolean"
                          description="QuoteDataIfNeeded"
                          expressionType="Notify"
                          name="QuoteDataIfNeeded">true</property>
                        <property
                          dataType="System.String"
                          description="Date time format string for any column with DT_DBDATETIME, DT_DBDATETIME2 or DB_DATE format"
                          expressionType="Notify"
                          name="DateTimeFormat">yyyy-MM-dd HH:mm:ss</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.TrashDestination</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Trash Destination.Inputs[TrashDestinationInput]"
                          hasSideEffects="true"
                          name="TrashDestinationInput">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Trash Destination.Inputs[TrashDestinationInput].Columns[Category]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Category"
                              lineageId="Package\Iterate Offices\Sequence Container\Add to Campaign\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[Category]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Trash Destination.Inputs[TrashDestinationInput].Columns[Reference]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Reference"
                              lineageId="Package\Iterate Offices\Sequence Container\Add to Campaign\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[Reference]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Trash Destination.Inputs[TrashDestinationInput].Columns[Status]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Status"
                              lineageId="Package\Iterate Offices\Sequence Container\Add to Campaign\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[Status]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Trash Destination.Inputs[TrashDestinationInput].Columns[PriceFrom]"
                              cachedDataType="numeric"
                              cachedName="PriceFrom"
                              cachedPrecision="10"
                              lineageId="Package\Iterate Offices\Sequence Container\Add to Campaign\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[PriceFrom]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Trash Destination.Inputs[TrashDestinationInput].Columns[PriceTo]"
                              cachedDataType="numeric"
                              cachedName="PriceTo"
                              cachedPrecision="10"
                              lineageId="Package\Iterate Offices\Sequence Container\Add to Campaign\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[PriceTo]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Trash Destination.Inputs[TrashDestinationInput].Columns[prefguid]"
                              cachedDataType="wstr"
                              cachedLength="4000"
                              cachedName="prefguid"
                              lineageId="Package\Iterate Offices\Sequence Container\Add to Campaign\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[prefguid]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Trash Destination.Inputs[TrashDestinationInput].Columns[ContactId]"
                              cachedDataType="i4"
                              cachedName="ContactId"
                              lineageId="Package\Iterate Offices\Sequence Container\Add to Campaign\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[ContactId]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Trash Destination.Inputs[TrashDestinationInput].Columns[SqlId]"
                              cachedDataType="i4"
                              cachedName="SqlId"
                              lineageId="Package\Iterate Offices\Sequence Container\Add to Campaign\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output].Columns[SqlId]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Trash Destination.Inputs[TrashDestinationInput].Columns[TemplateOutput]"
                              cachedDataType="nText"
                              cachedName="TemplateOutput"
                              lineageId="Package\Iterate Offices\Sequence Container\Add to Campaign\Build CampaignMemberAdd.Outputs[TemplateTransformOutput].Columns[TemplateOutput]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Trash Destination.Inputs[TrashDestinationInput].Columns[ErrorCode]"
                              cachedDataType="i4"
                              cachedName="ErrorCode"
                              lineageId="Package\Iterate Offices\Sequence Container\Add to Campaign\Post Contact Cust Fields Request.Outputs[WebApiDestination Error Output].Columns[ErrorCode]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Trash Destination.Inputs[TrashDestinationInput].Columns[ErrorColumn]"
                              cachedDataType="i4"
                              cachedName="ErrorColumn"
                              lineageId="Package\Iterate Offices\Sequence Container\Add to Campaign\Post Contact Cust Fields Request.Outputs[WebApiDestination Error Output].Columns[ErrorColumn]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Trash Destination.Inputs[TrashDestinationInput].Columns[ErrorColumnName]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="128"
                              cachedName="ErrorColumnName"
                              lineageId="Package\Iterate Offices\Sequence Container\Add to Campaign\Post Contact Cust Fields Request.Outputs[WebApiDestination Error Output].Columns[ErrorColumnName]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Trash Destination.Inputs[TrashDestinationInput].Columns[ErrorMessage]"
                              cachedDataType="nText"
                              cachedName="ErrorMessage"
                              lineageId="Package\Iterate Offices\Sequence Container\Add to Campaign\Post Contact Cust Fields Request.Outputs[WebApiDestination Error Output].Columns[ErrorMessage]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Trash Destination 1"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Trash Destination; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="The trash destination is used to create dummy destination which ends data path without any processing."
                      name="Trash Destination 1"
                      version="2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.String"
                          description="File path where you want to save data"
                          expressionType="Notify"
                          name="FilePath"></property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates if you want to save input data to comma separated text file"
                          expressionType="Notify"
                          name="SaveDataToFile">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Append data to file"
                          expressionType="Notify"
                          name="Append">false</property>
                        <property
                          dataType="System.String"
                          description="RowSeparator"
                          expressionType="Notify"
                          name="RowSeparator">{NEWLINE}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether you want to overwrite target file if exists"
                          expressionType="Notify"
                          name="OverwriteFileIfExists">true</property>
                        <property
                          dataType="System.String"
                          description="ColumnSeparator"
                          expressionType="Notify"
                          name="ColumnSeparator">,</property>
                        <property
                          dataType="System.Boolean"
                          description="SupportUnicode"
                          expressionType="Notify"
                          name="SupportUnicode">true</property>
                        <property
                          dataType="System.Boolean"
                          description="ColumnNamesInFirstRow"
                          expressionType="Notify"
                          name="ColumnNamesInFirstRow">true</property>
                        <property
                          dataType="System.Boolean"
                          description="QuoteDataIfNeeded"
                          expressionType="Notify"
                          name="QuoteDataIfNeeded">true</property>
                        <property
                          dataType="System.String"
                          description="Date time format string for any column with DT_DBDATETIME, DT_DBDATETIME2 or DB_DATE format"
                          expressionType="Notify"
                          name="DateTimeFormat">yyyy-MM-dd HH:mm:ss</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.TrashDestination</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Trash Destination 1.Inputs[TrashDestinationInput]"
                          hasSideEffects="true"
                          name="TrashDestinationInput">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Trash Destination 2"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Trash Destination; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="The trash destination is used to create dummy destination which ends data path without any processing."
                      name="Trash Destination 2"
                      version="2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.String"
                          description="File path where you want to save data"
                          expressionType="Notify"
                          name="FilePath"></property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates if you want to save input data to comma separated text file"
                          expressionType="Notify"
                          name="SaveDataToFile">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Append data to file"
                          expressionType="Notify"
                          name="Append">false</property>
                        <property
                          dataType="System.String"
                          description="RowSeparator"
                          expressionType="Notify"
                          name="RowSeparator">{NEWLINE}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether you want to overwrite target file if exists"
                          expressionType="Notify"
                          name="OverwriteFileIfExists">true</property>
                        <property
                          dataType="System.String"
                          description="ColumnSeparator"
                          expressionType="Notify"
                          name="ColumnSeparator">,</property>
                        <property
                          dataType="System.Boolean"
                          description="SupportUnicode"
                          expressionType="Notify"
                          name="SupportUnicode">true</property>
                        <property
                          dataType="System.Boolean"
                          description="ColumnNamesInFirstRow"
                          expressionType="Notify"
                          name="ColumnNamesInFirstRow">true</property>
                        <property
                          dataType="System.Boolean"
                          description="QuoteDataIfNeeded"
                          expressionType="Notify"
                          name="QuoteDataIfNeeded">true</property>
                        <property
                          dataType="System.String"
                          description="Date time format string for any column with DT_DBDATETIME, DT_DBDATETIME2 or DB_DATE format"
                          expressionType="Notify"
                          name="DateTimeFormat">yyyy-MM-dd HH:mm:ss</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.TrashDestination</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Trash Destination 2.Inputs[TrashDestinationInput]"
                          hasSideEffects="true"
                          name="TrashDestinationInput">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Trash Destination 3"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Trash Destination; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="The trash destination is used to create dummy destination which ends data path without any processing."
                      name="Trash Destination 3"
                      version="2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.String"
                          description="File path where you want to save data"
                          expressionType="Notify"
                          name="FilePath"></property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates if you want to save input data to comma separated text file"
                          expressionType="Notify"
                          name="SaveDataToFile">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Append data to file"
                          expressionType="Notify"
                          name="Append">false</property>
                        <property
                          dataType="System.String"
                          description="RowSeparator"
                          expressionType="Notify"
                          name="RowSeparator">{NEWLINE}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether you want to overwrite target file if exists"
                          expressionType="Notify"
                          name="OverwriteFileIfExists">true</property>
                        <property
                          dataType="System.String"
                          description="ColumnSeparator"
                          expressionType="Notify"
                          name="ColumnSeparator">,</property>
                        <property
                          dataType="System.Boolean"
                          description="SupportUnicode"
                          expressionType="Notify"
                          name="SupportUnicode">true</property>
                        <property
                          dataType="System.Boolean"
                          description="ColumnNamesInFirstRow"
                          expressionType="Notify"
                          name="ColumnNamesInFirstRow">true</property>
                        <property
                          dataType="System.Boolean"
                          description="QuoteDataIfNeeded"
                          expressionType="Notify"
                          name="QuoteDataIfNeeded">true</property>
                        <property
                          dataType="System.String"
                          description="Date time format string for any column with DT_DBDATETIME, DT_DBDATETIME2 or DB_DATE format"
                          expressionType="Notify"
                          name="DateTimeFormat">yyyy-MM-dd HH:mm:ss</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.TrashDestination</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Trash Destination 3.Inputs[TrashDestinationInput]"
                          hasSideEffects="true"
                          name="TrashDestinationInput">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Update Campaign MemberId"
                      componentClassID="Microsoft.OLEDBCommand"
                      contactInfo="OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
                      description="Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time."
                      name="Update Campaign MemberId"
                      usesDispositions="true"
                      version="2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">0</property>
                        <property
                          dataType="System.String"
                          description="The SQL command to be executed."
                          expressionType="Notify"
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">Update [ContactAdhocImport202102]

Set campaignmemberId = ? 

Where Id = ?</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Update Campaign MemberId.Connections[OleDbConnection]"
                          connectionManagerID="{1ACC4D99-A047-44CB-AAAD-088F42F69A23}:external"
                          connectionManagerRefId="Project.ConnectionManagers[Rosie]"
                          description="The OLE DB runtime connection used to access the database."
                          name="OleDbConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Update Campaign MemberId.Inputs[OLE DB Command Input]"
                          errorOrTruncationOperation="Command Execution"
                          errorRowDisposition="FailComponent"
                          hasSideEffects="true"
                          name="OLE DB Command Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Update Campaign MemberId.Inputs[OLE DB Command Input].Columns[Pivot_Name]"
                              cachedDataType="i4"
                              cachedName="Pivot_Name"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Add to Campaign\Update Campaign MemberId.Inputs[OLE DB Command Input].ExternalColumns[Param_1]"
                              lineageId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransformOutput].Columns[Pivot_Name]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Update Campaign MemberId.Inputs[OLE DB Command Input].Columns[Pivot_Value.id]"
                              cachedDataType="i4"
                              cachedName="Pivot_Value.id"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Add to Campaign\Update Campaign MemberId.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                              lineageId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransformOutput].Columns[Pivot_Value.id]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Update Campaign MemberId.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                              dataType="i4"
                              name="Param_0">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                                  name="DBParamInfoFlags">81</property>
                              </properties>
                            </externalMetadataColumn>
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Update Campaign MemberId.Inputs[OLE DB Command Input].ExternalColumns[Param_1]"
                              dataType="i4"
                              name="Param_1">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                                  name="DBParamInfoFlags">17</property>
                              </properties>
                            </externalMetadataColumn>
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Update Campaign MemberId.Outputs[OLE DB Command Output]"
                          exclusionGroup="1"
                          name="OLE DB Command Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Add to Campaign\Update Campaign MemberId.Inputs[OLE DB Command Input]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Update Campaign MemberId.Outputs[OLE DB Command Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="OLE DB Command Error Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Add to Campaign\Update Campaign MemberId.Inputs[OLE DB Command Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Update Campaign MemberId.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Add to Campaign\Update Campaign MemberId.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Add to Campaign\Update Campaign MemberId.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Add to Campaign\Update Campaign MemberId.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                  </components>
                  <paths>
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Add to Campaign.Paths[Conditional Split Default Output]"
                      endId="Package\Iterate Offices\Sequence Container\Add to Campaign\Update Campaign MemberId.Inputs[OLE DB Command Input]"
                      name="Conditional Split Default Output"
                      startId="Package\Iterate Offices\Sequence Container\Add to Campaign\Conditional Split.Outputs[Conditional Split Default Output]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Add to Campaign.Paths[Conditional Split Error Output]"
                      endId="Package\Iterate Offices\Sequence Container\Add to Campaign\Trash Destination 2.Inputs[TrashDestinationInput]"
                      name="Conditional Split Error Output"
                      startId="Package\Iterate Offices\Sequence Container\Add to Campaign\Conditional Split.Outputs[Conditional Split Error Output]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Add to Campaign.Paths[Fail]"
                      endId="Package\Iterate Offices\Sequence Container\Add to Campaign\Trash Destination 3.Inputs[TrashDestinationInput]"
                      name="Fail"
                      startId="Package\Iterate Offices\Sequence Container\Add to Campaign\Conditional Split.Outputs[Fail]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Add to Campaign.Paths[JsonParserTransform Error Output]"
                      endId="Package\Iterate Offices\Sequence Container\Add to Campaign\Trash Destination 1.Inputs[TrashDestinationInput]"
                      name="JsonParserTransform Error Output"
                      startId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransform Error Output]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Add to Campaign.Paths[JsonParserTransformOutput]"
                      endId="Package\Iterate Offices\Sequence Container\Add to Campaign\Conditional Split.Inputs[Conditional Split Input]"
                      name="JsonParserTransformOutput"
                      startId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Outputs[JsonParserTransformOutput]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Add to Campaign.Paths[OLE DB Source Output]"
                      endId="Package\Iterate Offices\Sequence Container\Add to Campaign\Build CampaignMemberAdd.Inputs[TemplateTransformInput]"
                      name="OLE DB Source Output"
                      startId="Package\Iterate Offices\Sequence Container\Add to Campaign\Get Rosie Loaded Contacts from SQL.Outputs[OLE DB Source Output]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Add to Campaign.Paths[Response Output]"
                      endId="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success.Inputs[JsonParserTransformInput]"
                      name="Response Output"
                      startId="Package\Iterate Offices\Sequence Container\Add to Campaign\Post Contact Cust Fields Request.Outputs[Response Output]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Add to Campaign.Paths[TemplateTransformOutput]"
                      endId="Package\Iterate Offices\Sequence Container\Add to Campaign\Post Contact Cust Fields Request.Inputs[WebApiDestinationInput]"
                      name="TemplateTransformOutput"
                      startId="Package\Iterate Offices\Sequence Container\Add to Campaign\Build CampaignMemberAdd.Outputs[TemplateTransformOutput]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Add to Campaign.Paths[WebApiDestination Error Output]"
                      endId="Package\Iterate Offices\Sequence Container\Add to Campaign\Trash Destination.Inputs[TrashDestinationInput]"
                      name="WebApiDestination Error Output"
                      startId="Package\Iterate Offices\Sequence Container\Add to Campaign\Post Contact Cust Fields Request.Outputs[WebApiDestination Error Output]" />
                  </paths>
                </pipeline>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY"
              DTS:CreationName="Microsoft.Pipeline"
              DTS:Description="Data Flow Task"
              DTS:DTSID="{c785ea20-d80c-493c-819a-b08ac5a81883}"
              DTS:ExecutableType="Microsoft.Pipeline"
              DTS:LocaleID="-1"
              DTS:ObjectName="Assign Pref Guid and WHY"
              DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:ObjectData>
                <pipeline
                  version="1">
                  <components>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Build Contact Cust Fields"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Template Transform; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="Template transform allows to produce multi line string from template text. You can insert placeholders anywhere in the string. Ideal use case would be produce simple XML or JSON without use of JSON or XML Generator Transform."
                      name="Build Contact Cust Fields"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.String"
                          description="Template text which needs to be replaced. Any where in the text you can use input column names as placeholders (e.g. &lt;%CustomerEmail%&gt; ). You can also use user/system variable as placeholder (e.g. {{User::MyVariable}} )"
                          expressionType="Notify"
                          name="TemplateText"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">{
    "method":"CustomFields::setFieldValues",
    "args":
    {
        "service_name":"Contacts",
        "service_object_id":&lt;%ContactId%&gt;,
        "value_map":
        {
            "api.GDPR Key": "&lt;%prefguid%&gt;",
            "core.contact.WHY.Why Are You Moving?": "&lt;%Why Are You Moving%&gt;",
			"core.contact.WHY.When":"&lt;%When%&gt;",
			"core.contact.WHY.Bedrooms":"&lt;%Bedrooms%&gt;",
			"core.contact.WHY.Position":"&lt;%Position%&gt;",
			"core.contact.WHY.Property Wanted":"&lt;%Property Wanted%&gt;",
			"core.contact.WHY.Price From":"&lt;%PriceFrom%&gt;",
			"core.contact.WHY.Price To": "&lt;%PriceTo%&gt;"
        }
    },
    "strip_response_prefix": true,
    "token": "{{User::RexToken}}"
}</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.TemplateTransform</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Build Contact Cust Fields.Inputs[TemplateTransformInput]"
                          name="TemplateTransformInput">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Build Contact Cust Fields.Inputs[TemplateTransformInput].Columns[ContactId]"
                              cachedDataType="i4"
                              cachedName="ContactId"
                              lineageId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Existing Contacts from SQL.Outputs[OLE DB Source Output].Columns[ContactId]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Build Contact Cust Fields.Inputs[TemplateTransformInput].Columns[prefguid]"
                              cachedDataType="wstr"
                              cachedLength="4000"
                              cachedName="prefguid"
                              lineageId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Existing Contacts from SQL.Outputs[OLE DB Source Output].Columns[prefguid]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Build Contact Cust Fields.Inputs[TemplateTransformInput].Columns[Why Are You Moving]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="8000"
                              cachedName="Why Are You Moving"
                              lineageId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Existing Contacts from SQL.Outputs[OLE DB Source Output].Columns[Why Are You Moving]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Build Contact Cust Fields.Inputs[TemplateTransformInput].Columns[When]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="10"
                              cachedName="When"
                              lineageId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Existing Contacts from SQL.Outputs[OLE DB Source Output].Columns[When]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Build Contact Cust Fields.Inputs[TemplateTransformInput].Columns[Bedrooms]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="7"
                              cachedName="Bedrooms"
                              lineageId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Existing Contacts from SQL.Outputs[OLE DB Source Output].Columns[Bedrooms]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Build Contact Cust Fields.Inputs[TemplateTransformInput].Columns[Position]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="18"
                              cachedName="Position"
                              lineageId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Existing Contacts from SQL.Outputs[OLE DB Source Output].Columns[Position]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Build Contact Cust Fields.Inputs[TemplateTransformInput].Columns[Property Wanted]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="16"
                              cachedName="Property Wanted"
                              lineageId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Existing Contacts from SQL.Outputs[OLE DB Source Output].Columns[Property Wanted]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Build Contact Cust Fields.Inputs[TemplateTransformInput].Columns[PriceFrom]"
                              cachedDataType="numeric"
                              cachedName="PriceFrom"
                              cachedPrecision="10"
                              lineageId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Existing Contacts from SQL.Outputs[OLE DB Source Output].Columns[PriceFrom]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Build Contact Cust Fields.Inputs[TemplateTransformInput].Columns[PriceTo]"
                              cachedDataType="numeric"
                              cachedName="PriceTo"
                              cachedPrecision="10"
                              lineageId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Existing Contacts from SQL.Outputs[OLE DB Source Output].Columns[PriceTo]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Build Contact Cust Fields.Outputs[TemplateTransformOutput]"
                          errorOrTruncationOperation="Error"
                          name="TemplateTransformOutput"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Build Contact Cust Fields.Inputs[TemplateTransformInput]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Build Contact Cust Fields.Outputs[TemplateTransformOutput].Columns[TemplateOutput]"
                              dataType="nText"
                              description="Template output column which will contain replaced text."
                              lineageId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Build Contact Cust Fields.Outputs[TemplateTransformOutput].Columns[TemplateOutput]"
                              name="TemplateOutput" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Existing Contacts from SQL"
                      componentClassID="Microsoft.OLEDBSource"
                      contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                      description="OLE DB Source"
                      name="Existing Contacts from SQL"
                      usesDispositions="true"
                      version="7">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">0</property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the database object used to open a rowset."
                          name="OpenRowset">[dbo].[vwContacts]</property>
                        <property
                          dataType="System.String"
                          description="Specifies the variable that contains the name of the database object used to open a rowset."
                          name="OpenRowsetVariable"></property>
                        <property
                          dataType="System.String"
                          description="The SQL command to be executed."
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">SELECT Id, 
              
       [Reference], 
       [Status], 
       [CurrentOfficeName], 
       [PriceFrom], 
       [PriceTo],
       CASE
           WHEN [prefguid] IS NOT NULL
           THEN 'https://preference.spicerhaart.co.uk/?custID=' + CAST([prefguid] AS NVARCHAR(4000))
           ELSE NULL
       END AS [prefguid],
ContactId
 ,[Why Are You Moving]
      ,[When]
      ,[Bedrooms]
      ,[Position]
      ,[Property Wanted]
FROM [Rosie].[dbo].ContactAdhocImport202102 ci
WHERE contactid IS NOT NULL
      AND [TargetOfficeId] = ?
      AND [prefguid] IS NOT NULL
      AND prefloaded = 0;</property>
                        <property
                          dataType="System.String"
                          description="The variable that contains the SQL command to be executed."
                          name="SqlCommandVariable"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Boolean"
                          description="Forces the use of the DefaultCodePage property value when describing character data."
                          name="AlwaysUseDefaultCodePage">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the mode used to access the database."
                          name="AccessMode"
                          typeConverter="AccessMode">2</property>
                        <property
                          dataType="System.String"
                          description="The mappings between the parameters in the SQL command and variables."
                          name="ParameterMapping">"Parameter0:Input",{B4701D52-6FAA-434F-8042-898CB08D7322};</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Existing Contacts from SQL.Connections[OleDbConnection]"
                          connectionManagerID="{1ACC4D99-A047-44CB-AAAD-088F42F69A23}:external"
                          connectionManagerRefId="Project.ConnectionManagers[Rosie]"
                          description="The OLE DB runtime connection used to access the database."
                          name="OleDbConnection" />
                      </connections>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Existing Contacts from SQL.Outputs[OLE DB Source Output]"
                          name="OLE DB Source Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Existing Contacts from SQL.Outputs[OLE DB Source Output].Columns[Reference]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Existing Contacts from SQL.Outputs[OLE DB Source Output].ExternalColumns[Reference]"
                              length="50"
                              lineageId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Existing Contacts from SQL.Outputs[OLE DB Source Output].Columns[Reference]"
                              name="Reference"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Existing Contacts from SQL.Outputs[OLE DB Source Output].Columns[Status]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Existing Contacts from SQL.Outputs[OLE DB Source Output].ExternalColumns[Status]"
                              length="50"
                              lineageId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Existing Contacts from SQL.Outputs[OLE DB Source Output].Columns[Status]"
                              name="Status"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Existing Contacts from SQL.Outputs[OLE DB Source Output].Columns[PriceFrom]"
                              dataType="numeric"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Existing Contacts from SQL.Outputs[OLE DB Source Output].ExternalColumns[PriceFrom]"
                              lineageId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Existing Contacts from SQL.Outputs[OLE DB Source Output].Columns[PriceFrom]"
                              name="PriceFrom"
                              precision="10"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Existing Contacts from SQL.Outputs[OLE DB Source Output].Columns[PriceTo]"
                              dataType="numeric"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Existing Contacts from SQL.Outputs[OLE DB Source Output].ExternalColumns[PriceTo]"
                              lineageId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Existing Contacts from SQL.Outputs[OLE DB Source Output].Columns[PriceTo]"
                              name="PriceTo"
                              precision="10"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Existing Contacts from SQL.Outputs[OLE DB Source Output].Columns[prefguid]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Existing Contacts from SQL.Outputs[OLE DB Source Output].ExternalColumns[prefguid]"
                              length="4000"
                              lineageId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Existing Contacts from SQL.Outputs[OLE DB Source Output].Columns[prefguid]"
                              name="prefguid"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Existing Contacts from SQL.Outputs[OLE DB Source Output].Columns[Id]"
                              dataType="i4"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Existing Contacts from SQL.Outputs[OLE DB Source Output].ExternalColumns[Id]"
                              lineageId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Existing Contacts from SQL.Outputs[OLE DB Source Output].Columns[Id]"
                              name="Id"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Existing Contacts from SQL.Outputs[OLE DB Source Output].Columns[ContactId]"
                              dataType="i4"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Existing Contacts from SQL.Outputs[OLE DB Source Output].ExternalColumns[ContactId]"
                              lineageId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Existing Contacts from SQL.Outputs[OLE DB Source Output].Columns[ContactId]"
                              name="ContactId"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Existing Contacts from SQL.Outputs[OLE DB Source Output].Columns[CurrentOfficeName]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Existing Contacts from SQL.Outputs[OLE DB Source Output].ExternalColumns[CurrentOfficeName]"
                              length="50"
                              lineageId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Existing Contacts from SQL.Outputs[OLE DB Source Output].Columns[CurrentOfficeName]"
                              name="CurrentOfficeName"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Existing Contacts from SQL.Outputs[OLE DB Source Output].Columns[Why Are You Moving]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Existing Contacts from SQL.Outputs[OLE DB Source Output].ExternalColumns[Why Are You Moving]"
                              length="8000"
                              lineageId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Existing Contacts from SQL.Outputs[OLE DB Source Output].Columns[Why Are You Moving]"
                              name="Why Are You Moving"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Existing Contacts from SQL.Outputs[OLE DB Source Output].Columns[When]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Existing Contacts from SQL.Outputs[OLE DB Source Output].ExternalColumns[When]"
                              length="10"
                              lineageId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Existing Contacts from SQL.Outputs[OLE DB Source Output].Columns[When]"
                              name="When"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Existing Contacts from SQL.Outputs[OLE DB Source Output].Columns[Bedrooms]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Existing Contacts from SQL.Outputs[OLE DB Source Output].ExternalColumns[Bedrooms]"
                              length="7"
                              lineageId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Existing Contacts from SQL.Outputs[OLE DB Source Output].Columns[Bedrooms]"
                              name="Bedrooms"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Existing Contacts from SQL.Outputs[OLE DB Source Output].Columns[Position]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Existing Contacts from SQL.Outputs[OLE DB Source Output].ExternalColumns[Position]"
                              length="18"
                              lineageId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Existing Contacts from SQL.Outputs[OLE DB Source Output].Columns[Position]"
                              name="Position"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Existing Contacts from SQL.Outputs[OLE DB Source Output].Columns[Property Wanted]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Existing Contacts from SQL.Outputs[OLE DB Source Output].ExternalColumns[Property Wanted]"
                              length="16"
                              lineageId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Existing Contacts from SQL.Outputs[OLE DB Source Output].Columns[Property Wanted]"
                              name="Property Wanted"
                              truncationRowDisposition="FailComponent" />
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Existing Contacts from SQL.Outputs[OLE DB Source Output].ExternalColumns[Reference]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              name="Reference" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Existing Contacts from SQL.Outputs[OLE DB Source Output].ExternalColumns[Status]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              name="Status" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Existing Contacts from SQL.Outputs[OLE DB Source Output].ExternalColumns[PriceFrom]"
                              dataType="numeric"
                              name="PriceFrom"
                              precision="10" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Existing Contacts from SQL.Outputs[OLE DB Source Output].ExternalColumns[PriceTo]"
                              dataType="numeric"
                              name="PriceTo"
                              precision="10" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Existing Contacts from SQL.Outputs[OLE DB Source Output].ExternalColumns[prefguid]"
                              dataType="wstr"
                              length="4000"
                              name="prefguid" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Existing Contacts from SQL.Outputs[OLE DB Source Output].ExternalColumns[Id]"
                              dataType="i4"
                              name="Id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Existing Contacts from SQL.Outputs[OLE DB Source Output].ExternalColumns[ContactId]"
                              dataType="i4"
                              name="ContactId" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Existing Contacts from SQL.Outputs[OLE DB Source Output].ExternalColumns[CurrentOfficeName]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              name="CurrentOfficeName" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Existing Contacts from SQL.Outputs[OLE DB Source Output].ExternalColumns[Why Are You Moving]"
                              codePage="1252"
                              dataType="str"
                              length="8000"
                              name="Why Are You Moving" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Existing Contacts from SQL.Outputs[OLE DB Source Output].ExternalColumns[When]"
                              codePage="1252"
                              dataType="str"
                              length="10"
                              name="When" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Existing Contacts from SQL.Outputs[OLE DB Source Output].ExternalColumns[Bedrooms]"
                              codePage="1252"
                              dataType="str"
                              length="7"
                              name="Bedrooms" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Existing Contacts from SQL.Outputs[OLE DB Source Output].ExternalColumns[Position]"
                              codePage="1252"
                              dataType="str"
                              length="18"
                              name="Position" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Existing Contacts from SQL.Outputs[OLE DB Source Output].ExternalColumns[Property Wanted]"
                              codePage="1252"
                              dataType="str"
                              length="16"
                              name="Property Wanted" />
                          </externalMetadataColumns>
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Existing Contacts from SQL.Outputs[OLE DB Source Error Output]"
                          isErrorOut="true"
                          name="OLE DB Source Error Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Existing Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[Id]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Existing Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[Id]"
                              name="Id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Existing Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[Reference]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Existing Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[Reference]"
                              name="Reference" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Existing Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[Status]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Existing Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[Status]"
                              name="Status" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Existing Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[CurrentOfficeName]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Existing Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[CurrentOfficeName]"
                              name="CurrentOfficeName" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Existing Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[PriceFrom]"
                              dataType="numeric"
                              lineageId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Existing Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[PriceFrom]"
                              name="PriceFrom"
                              precision="10" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Existing Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[PriceTo]"
                              dataType="numeric"
                              lineageId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Existing Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[PriceTo]"
                              name="PriceTo"
                              precision="10" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Existing Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[prefguid]"
                              dataType="wstr"
                              length="4000"
                              lineageId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Existing Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[prefguid]"
                              name="prefguid" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Existing Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[ContactId]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Existing Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[ContactId]"
                              name="ContactId" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Existing Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[Why Are You Moving]"
                              codePage="1252"
                              dataType="str"
                              length="8000"
                              lineageId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Existing Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[Why Are You Moving]"
                              name="Why Are You Moving" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Existing Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[When]"
                              codePage="1252"
                              dataType="str"
                              length="10"
                              lineageId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Existing Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[When]"
                              name="When" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Existing Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[Bedrooms]"
                              codePage="1252"
                              dataType="str"
                              length="7"
                              lineageId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Existing Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[Bedrooms]"
                              name="Bedrooms" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Existing Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[Position]"
                              codePage="1252"
                              dataType="str"
                              length="18"
                              lineageId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Existing Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[Position]"
                              name="Position" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Existing Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[Property Wanted]"
                              codePage="1252"
                              dataType="str"
                              length="16"
                              lineageId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Existing Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[Property Wanted]"
                              name="Property Wanted" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Existing Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Existing Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Existing Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Existing Contacts from SQL.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Post Contact Cust Fields Request"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Web API Destination; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="The Web API destination can be used to send data to Web API URL (e.g. Submit or POST data to REST API/SOAP or other HTTP/HTTPS endpoints)"
                      name="Post Contact Cust Fields Request"
                      usesDispositions="true"
                      version="5">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">3</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.String"
                          description="API URL you want to access"
                          expressionType="Notify"
                          name="HttpRequestUrl">{{User::RexAPIWebURL}}</property>
                        <property
                          dataType="System.String"
                          description="Http Web Request Method (e.g. POST, GET, PUT, LIST, DELETE...). Refer your API documentation if you are not sure which method you have to use."
                          expressionType="Notify"
                          name="HttpRequestMethod">POST</property>
                        <property
                          dataType="System.String"
                          description="Set this if you want to set custom Http headers. You may use variable anywhere in the header value using syntax {{User::YourVarName}}. Syntax of Header key value pair is : &amp;lt;request&amp;gt;&amp;lt;header&amp;gt;&amp;lt;name&amp;gt;x-myheader-1&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;AAA&amp;lt;/value&amp;gt;&amp;lt;/header&amp;gt; &amp;lt;header&amp;gt;&amp;lt;name&amp;gt;x-myheader-2&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;BBB&amp;lt;/value&amp;gt;&amp;lt;/header&amp;gt;&amp;lt;/request&amp;gt;"
                          expressionType="Notify"
                          name="HttpHeaders"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">&lt;request&gt;&lt;header&gt;&lt;name&gt;Accept&lt;/name&gt;&lt;value&gt;*/*&lt;/value&gt;&lt;/header&gt;&lt;header&gt;&lt;name&gt;Cache-Control&lt;/name&gt;&lt;value&gt;no-cache&lt;/value&gt;&lt;/header&gt;&lt;/request&gt;</property>
                        <property
                          dataType="System.String"
                          description="User defined data you wish to send along with your HTTP Request (e.g. Upload file data, Form POST data). Usually you have to set content-type of your data but if you select RequestMethod=POST then system will automatically set content-type=application/x-www-form-urlencoded."
                          expressionType="Notify"
                          name="HttpRequestData"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies content type for data you wish to POST. If you select Default option then system default content type will be used (i.e. application/x-www-form-urlencoded). If you specify Content-Type header along with this option then header value takes precedence."
                          expressionType="Notify"
                          name="HttpRequestContentType"
                          typeConverter="ZappySys.Common.Web.HttpRequestContentType">0</property>
                        <property
                          dataType="System.Boolean"
                          description="If this option is true then component will continue without exception on 404 error (Url not found). This allows you to consume data gracefully."
                          expressionType="Notify"
                          name="ContinueOnUrlNotFoundError">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Ignore SSL certificate related errors. Example: if you getting SSL/TLS errors because of certificate expired or certificate is not from trusted authority or certificate is self-signed. By checking this option you will not get SSL/TLS error."
                          expressionType="Notify"
                          name="IgnoreCertificateErrors">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Allow unsecure ciphers/suites and curves for SSLS/TLS communication. Use this option to communicate with web servers which needs legacy / unsecured ciphers support. This option is only trigged when you change default SSL/TLS Version on advanced settings tab."
                          expressionType="Notify"
                          name="AllowUnsecureSuite">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Enable support for gzip or deflate compression. When you check this option compressed response automatically de-compressed saving bandwidth. This option is only valid if web server supports compressed response stream. Check your API documentation for more information."
                          expressionType="Notify"
                          name="EnableCompressionSupport">true</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies which security protocol is supported for HTTPS communication. Using this option you can enable legacy protocol or enforce to use latest version of security protocol (Note: TLS 1.2 is only supported in SSIS 2014 or Higher)."
                          expressionType="Notify"
                          name="SecurityProtocol"
                          typeConverter="ZappySys.PowerPack.Common.HttpsSecurityProtocolType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Wait time in milliseconds (Pause after each request). 0=No wait. Use this delay time if your API has limit on how many requests you can make in certain time frame."
                          expressionType="Notify"
                          name="WaitTime">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you redirect error to error output by default you get additional information in ErrorMessage column. Check this option if you need exact Response Body (Useful if its in JSON/XML format which needs to be parsed for additional information for later step)."
                          expressionType="Notify"
                          name="OnErrorOutputResponseBody">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Enable multiple requests using parallel threads."
                          expressionType="Notify"
                          name="EnableParallelRequests">true</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum parallel threads to use for processing multiple web requests."
                          expressionType="Notify"
                          name="MaxParallelThreads">20</property>
                        <property
                          dataType="System.Boolean"
                          description="By default one request is sent for each input row. If your API supports multiple records in a single call via HTTP Body then enable this setting. See also BodyBatchSize, BodyHeader, BodyFooter and BodyRowSeparator property."
                          expressionType="Notify"
                          name="EnableBodyBatch">false</property>
                        <property
                          dataType="System.String"
                          description="When you have to wrap input content between opening and closing tags for each call then set this property to specify opening for body content. For Example if you want to build Body like this (send max 100 rows per call) ==&gt; { records : [ {...}, {...}, {...} ] } then you can set BatchSize=100, BodyHeader as &quot;{ records: [&quot; , BodyFooter as &quot;] }&quot; and BodyRowSeperator as comma {,}. This property is ignored if EnableBodyBatch=false."
                          expressionType="Notify"
                          name="BodyHeader"></property>
                        <property
                          dataType="System.String"
                          description="When you have to wrap input content between opening and closing tags for each call then set this property to specify closing for body content. For Example if you want to build Body like this (send max 100 rows per call) ==&gt; { records : [ {...}, {...}, {...} ] } then you can set BatchSize=100, BodyHeader as &quot;{ records: [&quot; , BodyFooter as &quot;] }&quot; and BodyRowSeperator as comma {,}. This property is ignored if EnableBodyBatch=false."
                          expressionType="Notify"
                          name="BodyFooter"></property>
                        <property
                          dataType="System.Int32"
                          description="If your API supports multiple records via HTTP Body then change this setting &gt; 1 to include multiple upstream records into single call. See also BodyHeader, BodyFooter and BodyRowSeparator property. This property is ignored if EnableBodyBatch=false."
                          expressionType="Notify"
                          name="BodyBatchSize">100</property>
                        <property
                          dataType="System.String"
                          description="When you submit multiple rows in a batch you can separate multiple documents / records using custom separator (e.g. in JSON Array you can use comma {,} as record separator if POST document is in array format [ {...}, {...}, {...} ] ). For last row of batch blank separator is used."
                          expressionType="Notify"
                          name="BodyRowSeparator"></property>
                        <property
                          dataType="System.Boolean"
                          description="Returns response data as binary data (e.g. Byte Array). Check this option is response is Zip file, Image file or any non text data which needs to be exported as raw data without any encoding."
                          expressionType="Notify"
                          name="TreatResponseAsBinary">false</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.WebApiDestination</property>
                        <property
                          dataType="System.Boolean"
                          description="Check this option if you want to upload file(s) (i.e. POST RAW file data) or send data using Multi-Part encoding method (i.e. Content-Type: multipart/form-data). Multi-Part request allows you to mix key/value and upload files in same request. On the other hand raw upload allows only single file upload (without any key/value) &#xA;&#xA;==== Raw Upload (Content-Type: application/octet-stream) =====   &#xA;To upload single file in raw mode check this option and specify full file path starting with @ sign in the Body (e.g.  @c:\data\myfile.zip ) &#xA;&#xA;==== Form-Data / Multipart Upload (Content-Type: multipart/form-data) =====   &#xA;To treat your Request data as multi part fields you must specify key/value pairs separated by new lines into RequestData field (i.e. Body). Each key value pair is entered on new-line and key/value are separated using equal sign (=). Preceding and trailing spaces are ignored also blank lines are ignored. &#xA;If field value has some any special character(s) then use escape sequence (e.g. For NewLine: \r\n, For Tab: \t, For at (@): \@). When value of any field starts with at sign (@) its automatically treated as File you want to upload. By default file content type is determined based on extension however you can supply content type manually for any field using this way [ fieldname.Content-Type=some content type ]. In below example we have supplied Content-Type for file2 and SomeField1, all other fields are using default content-type.&#xA;See below Example of uploading multiple files along with additional fields.&#xA;&#xA;file1=@c:\data\Myfile1.txt&#xA;file2=@c:\data\Myfile2.json&#xA;file2.Content-Type=application/json&#xA;SomeField1=aaaaaaa&#xA;SomeField1.Content-Type=text/plain&#xA;SomeField2=12345&#xA;SomeFieldWithNewLineAndTab=This is line1\r\nThis is line2\r\nThis is \ttab \ttab \ttab&#xA;SomeFieldStartingWithAtSign=\@MyTwitterHandle&#xA;"
                          expressionType="Notify"
                          name="IsMultiPartUpload">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Enable this option if your server is expecting &#xA; (i.e. CRLF) after last Multi-Part boundary in the Body. This option is only applicable if you enabled IsMultiPartUpload and sending data in Key=value format (i.e. Mutipart). For raw file upload this option has no effect."
                          expressionType="Notify"
                          name="AddMultiPartPostamble">false</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Post Contact Cust Fields Request.Connections[Connection]"
                          connectionManagerID="Package.ConnectionManagers[HTTP 1]"
                          connectionManagerRefId="Package.ConnectionManagers[HTTP 1]"
                          description="Connection manager for authentication (e.g. HTTP or OAuth Connection)"
                          name="Connection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Post Contact Cust Fields Request.Inputs[WebApiDestinationInput]"
                          errorRowDisposition="RedirectRow"
                          hasSideEffects="true"
                          name="WebApiDestinationInput"
                          truncationRowDisposition="RedirectRow">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Post Contact Cust Fields Request.Inputs[WebApiDestinationInput].Columns[TemplateOutput]"
                              cachedDataType="nText"
                              cachedName="TemplateOutput"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Post Contact Cust Fields Request.Inputs[WebApiDestinationInput].ExternalColumns[HttpRequestData]"
                              lineageId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Build Contact Cust Fields.Outputs[TemplateTransformOutput].Columns[TemplateOutput]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Post Contact Cust Fields Request.Inputs[WebApiDestinationInput].ExternalColumns[HttpRequestUrl]"
                              dataType="wstr"
                              length="2000"
                              name="HttpRequestUrl" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Post Contact Cust Fields Request.Inputs[WebApiDestinationInput].ExternalColumns[HttpRequestData]"
                              dataType="nText"
                              name="HttpRequestData" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Post Contact Cust Fields Request.Inputs[WebApiDestinationInput].ExternalColumns[HttpHeaders]"
                              dataType="wstr"
                              length="2000"
                              name="HttpHeaders" />
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Post Contact Cust Fields Request.Outputs[WebApiDestination Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="WebApiDestination Error Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Post Contact Cust Fields Request.Inputs[WebApiDestinationInput]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Post Contact Cust Fields Request.Outputs[WebApiDestination Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Post Contact Cust Fields Request.Outputs[WebApiDestination Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Post Contact Cust Fields Request.Outputs[WebApiDestination Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Post Contact Cust Fields Request.Outputs[WebApiDestination Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Post Contact Cust Fields Request.Outputs[WebApiDestination Error Output].Columns[ErrorColumnName]"
                              codePage="1252"
                              dataType="str"
                              length="128"
                              lineageId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Post Contact Cust Fields Request.Outputs[WebApiDestination Error Output].Columns[ErrorColumnName]"
                              name="ErrorColumnName" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Post Contact Cust Fields Request.Outputs[WebApiDestination Error Output].Columns[ErrorMessage]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Post Contact Cust Fields Request.Outputs[WebApiDestination Error Output].Columns[ErrorMessage]"
                              name="ErrorMessage" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Post Contact Cust Fields Request.Outputs[Response Output]"
                          exclusionGroup="1"
                          name="Response Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Post Contact Cust Fields Request.Inputs[WebApiDestinationInput]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Post Contact Cust Fields Request.Outputs[Response Output].Columns[ResponseText]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Post Contact Cust Fields Request.Outputs[Response Output].Columns[ResponseText]"
                              name="ResponseText" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Post Contact Cust Fields Request.Outputs[Response Output].Columns[StatusCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Post Contact Cust Fields Request.Outputs[Response Output].Columns[StatusCode]"
                              name="StatusCode" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="JSON Parser Transform; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="Parse incoming JSON String into columns. You can also parse and transform single JSON record into multiple rows by filtering data based on JSON Path (e.g. $.Customer.Orders[*])"
                      name="Read Success"
                      usesDispositions="true"
                      version="2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for any numeric data types"
                          expressionType="Notify"
                          name="TreatBlankNumberAsNull">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for bool data types"
                          expressionType="Notify"
                          name="TreatBlankBoolAsNull">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for any date/time data types"
                          expressionType="Notify"
                          name="TreatBlankDateAsNull">true</property>
                        <property
                          dataType="System.Int32"
                          description="Encoding of source file"
                          expressionType="Notify"
                          name="Encoding"
                          typeConverter="ZappySys.Common.EncodingType">0</property>
                        <property
                          dataType="System.String"
                          description="Character set for text (e.g. utf-8 )"
                          expressionType="Notify"
                          name="CharacterSet"></property>
                        <property
                          dataType="System.String"
                          description="Sample JSON data used to parse output columns."
                          expressionType="Notify"
                          name="SampleData"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">{"result":{"FS\/Legal.Applicant Status.Status":null,"FS\/Legal.Applicant Status.Expected timescale":null,"FS\/Legal.Applicant Status.Interested in HTB":null,"FS\/Legal.Applicant Status.Interested in New Homes":null,"FS\/Legal.Legal Services.Have services been sold":null,"FS\/Legal.Legal Services.If no, reason":null,"FS\/Legal.Legal Services.Date instructed":null,"FS\/Legal.Legal Services.Instructed by":null,"FS\/Legal.Legal Services.Product sold":null,"FS\/Legal.Legal Services.Status":null,"FS\/Legal.Legal Services.Legal income":null,"FS\/Legal.Legal Services.Conveyancer":null,"FS\/Legal.Financial Services.Appointment made":null,"FS\/Legal.Financial Services.If no, reason":null,"FS\/Legal.Financial Services.Referred by":null,"FS\/Legal.Financial Services.Purchasing position":null,"FS\/Legal.Financial Services.Spoken with broker\/lender":null,"FS\/Legal.Financial Services.Notes, discussions &amp; insight":null,"FS\/Legal.Financial Services.Deposit available":null,"FS\/Legal.Financial Services.Mortgage type":null,"FS\/Legal.Financial Services.Rates quoted":null,"FS\/Legal.Financial Services Outcomes.Did appt take place?":null,"FS\/Legal.Financial Services Outcomes.Was an AIP received?":null,"FS\/Legal.Financial Services Outcomes.New business written?":null,"FS\/Legal.Record Attribution.Change applicant registration user":null,"FS\/Legal.Record Attribution.IDBS AppRef":null,"FS\/Legal.Record Attribution.Employee No":null,"FS\/Legal.Record Attribution.IDBS PropRef":null,"Buyers Why?.Rapport and Emotional Connection.Tell me: Why? When? (Motivation)":null,"Buyers Why?.Rapport and Emotional Connection.Describe to me: What? Where? (Need)":null,"Buyers Why?.Rapport and Emotional Connection.Explain to me: (Ability) - If you view and like a property, in a position to buy? If not, what needs to happen?":null,"Buyers Why?.Status.NTS":null,"Buyers Why?.Status.FTB":null,"Buyers Why?.Status.NOTS":null,"Buyers Why?.Status.LOTS":null,"Buyers Why?.Status.POM":null,"Buyers Why?.Status.PNOM":null,"Buyers Why?.Status.SSTC":null,"Buyers Why?.Status.BTL":null,"Buyers Why?.Buying.Lets arrange the viewings for you":null,"Buyers Why?.Buying.Cost of Moving (Mortgage) Appt":null,"Buyers Why?.Buying.Lettings Referral":null,"Buyers Why?.Buying.Mortgage Appt Date":null,"Buyers Why?.Buying.Lettings Appt Date":null,"Buyers Why?.Buying.Mortgage Appt Time":null,"Buyers Why?.Buying.Lettings Appt Time":null,"Buyers Why?.House to Sell?.Can we help with selling you home":null,"core.contact.Contact Notes.Tel Note":null,"core.contact.Contact Notes.Mobile Note":null,"core.contact.Contact Notes.Email Note":null,"core.contact.Contact Notes.No email?":null,"core.contact.WHY.Why Are You Moving?":null,"core.contact.WHY.When":null,"core.contact.WHY.Bedrooms":null,"core.contact.WHY.Price From":null,"core.contact.WHY.Price To":null,"core.contact.WHY.Position":null,"core.contact.WHY.Property Wanted":null,"core.contact.More Details.Business Type":null,"core.contact.More Details.Business Status":null,"api.GDPR Key":"https:\/\/preference.spicerhaart.co.uk\/?custID=297428A9-1883-4F3A-A2DD-5545C8E3A843"},"error":null}
</property>
                        <property
                          dataType="System.Boolean"
                          description="Include all upstream parent columns into output except the one you selected to parse. By default only parsed columns from Input document is included in the output. If you wish to include all other upstream columns in the output too then check this option."
                          expressionType="Notify"
                          name="OutputAllUpstreamColumns">true</property>
                        <property
                          dataType="System.Int32"
                          description="Defines how to handle empty input. By default NULL or Empty input is skipped from parsing."
                          expressionType="Notify"
                          name="EmptyInputProcessingMode"
                          typeConverter="ZappySys.Common.Data.EmptyInputProcessingMode">0</property>
                        <property
                          dataType="System.String"
                          description="Defines how to handle empty input. By default NULL or Empty input is skipped from parsing."
                          expressionType="Notify"
                          name="TreatEmptyInputAs">{ }</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum JSON records to fetch. Set this value to 0 for all records"
                          expressionType="Notify"
                          name="MaxRows">0</property>
                        <property
                          dataType="System.String"
                          description="Enter expression here to filter data.(Example:  $.Users[*].UserName ) This will fetch User names from users records"
                          expressionType="Notify"
                          name="Filter"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">$.result</property>
                        <property
                          dataType="System.Boolean"
                          description="Use this option to include parent properties (Non array) in the output along with Filtered Rows"
                          expressionType="Notify"
                          name="IncludeParentColumns">true</property>
                        <property
                          dataType="System.Boolean"
                          description="By default child and parent information is not included in the output if children not found for specified expression. For example if you want to extract all orders from all customers nodes then you can type $.Customers[*].Orders[*]. This will fetch all orders from all customers. By default customers records without orders wont be included in the output. If you want to include those customers where orders not found then check this option (Output null information for order attributes). This behavior is similar to LEFT OUTER JOIN in SQL (Left side is parent, right side is child). This option is ***resource intensive*** so only check if you really care about this behavior."
                          expressionType="Notify"
                          name="IncludeParentColumnsWhenChildMissing">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to true if you want to output parent columns which are array. By default any parent column which is an array is not included in output. See also FilterForParentColumnsWithArrayType property if you set this property"
                          expressionType="Notify"
                          name="IncludeParentColumnsWithArrayType">true</property>
                        <property
                          dataType="System.String"
                          description="Filter expression to extract value form parent"
                          expressionType="Notify"
                          name="FilterForParentColumnsWithArrayType"></property>
                        <property
                          dataType="System.String"
                          description="Prefix for parent column name. This option is only valid if you have set IncludeParentColumns=True"
                          expressionType="Notify"
                          name="ParentColumnPrefix">P_</property>
                        <property
                          dataType="System.Boolean"
                          description="Throw error if property name specified in filter expression is missing. By default it will ignore any missing property errors."
                          expressionType="Notify"
                          name="ThrowErrorIfPropertyMissing">false</property>
                        <property
                          dataType="System.Int32"
                          description="This property how many nested levels should be scanned to fetch various properties. 0=Scan all child levels."
                          expressionType="Notify"
                          name="MaxLevelsToScan">0</property>
                        <property
                          dataType="System.String"
                          description="List comma separated property names from JSON document which you want to exclude from output. Specify parent property name to exclude all child nodes."
                          expressionType="Notify"
                          name="ExcludedProperties"></property>
                        <property
                          dataType="System.String"
                          description="Property level separator used in generated property name (separator for outer properties - Above selected filter node). Use this if default separator is producing duplicate property name which is conflicting with existing name."
                          expressionType="Notify"
                          name="LevelSeparator">_</property>
                        <property
                          dataType="System.Boolean"
                          description="Enables deep array flattening for selected filtered hierarchy. When you turn on this property it will flatten each property of each array item and expose as column (e.g. If you have Filter set as $.customers[*] and for each customer you have an array of Addresses then you may see output columns like Addresses.1.City, Addresses.1.State, Addresses.2.City, Addresses.2.State .... Addresses.N.City, Addresses.N.State). You can control how many array items you want to flatten by setting MaxArrayItemsToFlatten property."
                          expressionType="Notify"
                          name="EnableArrayFlattening">false</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum number of array items to flatten. inner array flattening. Adjust this property to control how many columns being generated. This option is ignored if you set EnableArrayFlattening=false"
                          expressionType="Notify"
                          name="MaxArrayItemsToFlatten">10</property>
                        <property
                          dataType="System.String"
                          description="Specifies how custom date formatted strings are parsed when reading JSON."
                          expressionType="Notify"
                          name="DateFormatString"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies how date formatted strings, e.g. Date(1198908717056) and 2012-03-21T05:40Z, are parsed when reading JSON."
                          expressionType="Notify"
                          name="DateParseHandling"
                          typeConverter="ZappySys.Common.DateParseHandling">1</property>
                        <property
                          dataType="System.Boolean"
                          description="Indent JSON output so its easy to read."
                          expressionType="Notify"
                          name="IndentOutput">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Output as raw JSON document rather than parsing individual fields. This option is helpful if you have documents stored in a file and you want to pass them downstream as raw JSON string rather than parsing into columns."
                          expressionType="Notify"
                          name="OutputRawDocument">false</property>
                        <property
                          dataType="System.Boolean"
                          description="When this property is true then Column is converted to Row. Pivoted names will appear under  Pivot_Name column and values will appear under Pivot_Value field."
                          expressionType="Notify"
                          name="EnablePivot">false</property>
                        <property
                          dataType="System.Int32"
                          description="Array Transformation you want to apply. Useful for case when you have 2-Dimensional arrays with rows/columns in separate arrays."
                          expressionType="Notify"
                          name="ArrayTransformationType"
                          typeConverter="ZappySys.Json.ArrayTransformType">0</property>
                        <property
                          dataType="System.String"
                          description="Filter expression to use to extract column names for array transformation."
                          expressionType="Notify"
                          name="ArrayTransColumnNameFilter"></property>
                        <property
                          dataType="System.String"
                          description="Filter expression for row values (Not applicable for simple array transformation)."
                          expressionType="Notify"
                          name="ArrayTransRowValueFilter"></property>
                        <property
                          dataType="System.Boolean"
                          description="When you have 2D array but don't have column list specified in a separate array then use this option (e.g. { arr: [[10,11],[21,22]] } ). If you selected Column less array or JSON Lines option then this property means Column Names coming from First Line of array."
                          expressionType="Notify"
                          name="ArrayTransEnableCustomColumns">false</property>
                        <property
                          dataType="System.String"
                          description="When you have 2D array but don't have column list specified in a separate array then use specify column names here. Use comma separated list (e.g col1,col2,col3 ). Column name Order must match value order."
                          expressionType="Notify"
                          name="ArrayTransCustomColumns"></property>
                        <property
                          dataType="System.Int32"
                          description="Metadata scan mode controls how data type and length is determined. By default few records scanned to determine datatype/length. Changing ScanMode affects length/datatype accuracy."
                          expressionType="Notify"
                          name="MetaDataScanMode"
                          typeConverter="ZappySys.Common.Data.MetaDataScanMode">4</property>
                        <property
                          dataType="System.Int32"
                          description="Length for all string column. This option is only valid for MetaDataScanMode=Custom"
                          expressionType="Notify"
                          name="MetaDataCustomLength">1000</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.JsonParserTransform</property>
                        <property
                          dataType="System.Boolean"
                          name="EnableBigNumberHandling">false</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Inputs[JsonParserTransformInput]"
                          errorRowDisposition="FailComponent"
                          name="JsonParserTransformInput"
                          truncationRowDisposition="FailComponent">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Inputs[JsonParserTransformInput].Columns[ResponseText]"
                              cachedDataType="nText"
                              cachedName="ResponseText"
                              lineageId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Post Contact Cust Fields Request.Outputs[Response Output].Columns[ResponseText]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Inputs[JsonParserTransformInput].Columns[Reference]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Reference"
                              lineageId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Existing Contacts from SQL.Outputs[OLE DB Source Output].Columns[Reference]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransformOutput].Columns[Reference]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Inputs[JsonParserTransformInput].Columns[Status]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Status"
                              lineageId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Existing Contacts from SQL.Outputs[OLE DB Source Output].Columns[Status]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransformOutput].Columns[Status]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Inputs[JsonParserTransformInput].Columns[PriceFrom]"
                              cachedDataType="numeric"
                              cachedName="PriceFrom"
                              cachedPrecision="10"
                              lineageId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Existing Contacts from SQL.Outputs[OLE DB Source Output].Columns[PriceFrom]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransformOutput].Columns[PriceFrom]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Inputs[JsonParserTransformInput].Columns[PriceTo]"
                              cachedDataType="numeric"
                              cachedName="PriceTo"
                              cachedPrecision="10"
                              lineageId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Existing Contacts from SQL.Outputs[OLE DB Source Output].Columns[PriceTo]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransformOutput].Columns[PriceTo]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Inputs[JsonParserTransformInput].Columns[prefguid]"
                              cachedDataType="wstr"
                              cachedLength="4000"
                              cachedName="prefguid"
                              lineageId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Existing Contacts from SQL.Outputs[OLE DB Source Output].Columns[prefguid]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransformOutput].Columns[prefguid]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Inputs[JsonParserTransformInput].Columns[Id]"
                              cachedDataType="i4"
                              cachedName="Id"
                              lineageId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Existing Contacts from SQL.Outputs[OLE DB Source Output].Columns[Id]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransformOutput].Columns[Id]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Inputs[JsonParserTransformInput].Columns[ContactId]"
                              cachedDataType="i4"
                              cachedName="ContactId"
                              lineageId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Existing Contacts from SQL.Outputs[OLE DB Source Output].Columns[ContactId]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransformOutput].Columns[ContactId]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Inputs[JsonParserTransformInput].Columns[CurrentOfficeName]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="CurrentOfficeName"
                              lineageId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Existing Contacts from SQL.Outputs[OLE DB Source Output].Columns[CurrentOfficeName]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransformOutput].Columns[CurrentOfficeName]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Inputs[JsonParserTransformInput].Columns[Why Are You Moving]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="8000"
                              cachedName="Why Are You Moving"
                              lineageId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Existing Contacts from SQL.Outputs[OLE DB Source Output].Columns[Why Are You Moving]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransformOutput].Columns[Why Are You Moving]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Inputs[JsonParserTransformInput].Columns[When]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="10"
                              cachedName="When"
                              lineageId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Existing Contacts from SQL.Outputs[OLE DB Source Output].Columns[When]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransformOutput].Columns[When]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Inputs[JsonParserTransformInput].Columns[Bedrooms]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="7"
                              cachedName="Bedrooms"
                              lineageId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Existing Contacts from SQL.Outputs[OLE DB Source Output].Columns[Bedrooms]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransformOutput].Columns[Bedrooms]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Inputs[JsonParserTransformInput].Columns[Position]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="18"
                              cachedName="Position"
                              lineageId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Existing Contacts from SQL.Outputs[OLE DB Source Output].Columns[Position]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransformOutput].Columns[Position]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Inputs[JsonParserTransformInput].Columns[Property Wanted]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="16"
                              cachedName="Property Wanted"
                              lineageId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Existing Contacts from SQL.Outputs[OLE DB Source Output].Columns[Property Wanted]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransformOutput].Columns[Property Wanted]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Inputs[JsonParserTransformInput].Columns[TemplateOutput]"
                              cachedDataType="nText"
                              cachedName="TemplateOutput"
                              lineageId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Build Contact Cust Fields.Outputs[TemplateTransformOutput].Columns[TemplateOutput]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransformOutput].Columns[TemplateOutput]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Inputs[JsonParserTransformInput].Columns[StatusCode]"
                              cachedDataType="i4"
                              cachedName="StatusCode"
                              lineageId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Post Contact Cust Fields Request.Outputs[Response Output].Columns[StatusCode]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransformOutput].Columns[StatusCode]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True" />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransformOutput]"
                          errorOrTruncationOperation="Error"
                          errorRowDisposition="RedirectRow"
                          name="JsonParserTransformOutput"
                          truncationRowDisposition="RedirectRow">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransformOutput].Columns[StatusCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransformOutput].Columns[StatusCode]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Inputs[JsonParserTransformInput].Columns[StatusCode]"
                              name="StatusCode" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransformOutput].Columns[TemplateOutput]"
                              dataType="nText"
                              description="Template output column which will contain replaced text."
                              lineageId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransformOutput].Columns[TemplateOutput]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Inputs[JsonParserTransformInput].Columns[TemplateOutput]"
                              name="TemplateOutput" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransformOutput].Columns[Property Wanted]"
                              codePage="1252"
                              dataType="str"
                              length="16"
                              lineageId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransformOutput].Columns[Property Wanted]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Inputs[JsonParserTransformInput].Columns[Property Wanted]"
                              name="Property Wanted" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransformOutput].Columns[Position]"
                              codePage="1252"
                              dataType="str"
                              length="18"
                              lineageId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransformOutput].Columns[Position]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Inputs[JsonParserTransformInput].Columns[Position]"
                              name="Position" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransformOutput].Columns[Bedrooms]"
                              codePage="1252"
                              dataType="str"
                              length="7"
                              lineageId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransformOutput].Columns[Bedrooms]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Inputs[JsonParserTransformInput].Columns[Bedrooms]"
                              name="Bedrooms" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransformOutput].Columns[When]"
                              codePage="1252"
                              dataType="str"
                              length="10"
                              lineageId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransformOutput].Columns[When]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Inputs[JsonParserTransformInput].Columns[When]"
                              name="When" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransformOutput].Columns[Why Are You Moving]"
                              codePage="1252"
                              dataType="str"
                              length="8000"
                              lineageId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransformOutput].Columns[Why Are You Moving]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Inputs[JsonParserTransformInput].Columns[Why Are You Moving]"
                              name="Why Are You Moving" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransformOutput].Columns[CurrentOfficeName]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransformOutput].Columns[CurrentOfficeName]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Inputs[JsonParserTransformInput].Columns[CurrentOfficeName]"
                              name="CurrentOfficeName" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransformOutput].Columns[ContactId]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransformOutput].Columns[ContactId]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Inputs[JsonParserTransformInput].Columns[ContactId]"
                              name="ContactId" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransformOutput].Columns[Id]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransformOutput].Columns[Id]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Inputs[JsonParserTransformInput].Columns[Id]"
                              name="Id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransformOutput].Columns[prefguid]"
                              dataType="wstr"
                              length="4000"
                              lineageId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransformOutput].Columns[prefguid]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Inputs[JsonParserTransformInput].Columns[prefguid]"
                              name="prefguid" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransformOutput].Columns[PriceTo]"
                              dataType="numeric"
                              lineageId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransformOutput].Columns[PriceTo]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Inputs[JsonParserTransformInput].Columns[PriceTo]"
                              name="PriceTo"
                              precision="10" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransformOutput].Columns[PriceFrom]"
                              dataType="numeric"
                              lineageId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransformOutput].Columns[PriceFrom]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Inputs[JsonParserTransformInput].Columns[PriceFrom]"
                              name="PriceFrom"
                              precision="10" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransformOutput].Columns[Status]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransformOutput].Columns[Status]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Inputs[JsonParserTransformInput].Columns[Status]"
                              name="Status" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransformOutput].Columns[Reference]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransformOutput].Columns[Reference]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Inputs[JsonParserTransformInput].Columns[Reference]"
                              name="Reference" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransformOutput].Columns[P_error]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[P_error]"
                              length="1020"
                              lineageId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransformOutput].Columns[P_error]"
                              name="P_error" />
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[P_error]"
                              dataType="wstr"
                              length="1020"
                              name="P_error" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[FS/Legal.Applicant Status.Status]"
                              dataType="wstr"
                              length="1020"
                              name="FS/Legal.Applicant Status.Status" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[FS/Legal.Applicant Status.Expected timescale]"
                              dataType="wstr"
                              length="1020"
                              name="FS/Legal.Applicant Status.Expected timescale" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[FS/Legal.Applicant Status.Interested in HTB]"
                              dataType="wstr"
                              length="1020"
                              name="FS/Legal.Applicant Status.Interested in HTB" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[FS/Legal.Applicant Status.Interested in New Homes]"
                              dataType="wstr"
                              length="1020"
                              name="FS/Legal.Applicant Status.Interested in New Homes" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[FS/Legal.Legal Services.Have services been sold]"
                              dataType="wstr"
                              length="1020"
                              name="FS/Legal.Legal Services.Have services been sold" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[FS/Legal.Legal Services.If no, reason]"
                              dataType="wstr"
                              length="1020"
                              name="FS/Legal.Legal Services.If no, reason" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[FS/Legal.Legal Services.Date instructed]"
                              dataType="wstr"
                              length="1020"
                              name="FS/Legal.Legal Services.Date instructed" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[FS/Legal.Legal Services.Instructed by]"
                              dataType="wstr"
                              length="1020"
                              name="FS/Legal.Legal Services.Instructed by" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[FS/Legal.Legal Services.Product sold]"
                              dataType="wstr"
                              length="1020"
                              name="FS/Legal.Legal Services.Product sold" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[FS/Legal.Legal Services.Status]"
                              dataType="wstr"
                              length="1020"
                              name="FS/Legal.Legal Services.Status" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[FS/Legal.Legal Services.Legal income]"
                              dataType="wstr"
                              length="1020"
                              name="FS/Legal.Legal Services.Legal income" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[FS/Legal.Legal Services.Conveyancer]"
                              dataType="wstr"
                              length="1020"
                              name="FS/Legal.Legal Services.Conveyancer" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[FS/Legal.Financial Services.Appointment made]"
                              dataType="wstr"
                              length="1020"
                              name="FS/Legal.Financial Services.Appointment made" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[FS/Legal.Financial Services.If no, reason]"
                              dataType="wstr"
                              length="1020"
                              name="FS/Legal.Financial Services.If no, reason" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[FS/Legal.Financial Services.Referred by]"
                              dataType="wstr"
                              length="1020"
                              name="FS/Legal.Financial Services.Referred by" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[FS/Legal.Financial Services.Purchasing position]"
                              dataType="wstr"
                              length="1020"
                              name="FS/Legal.Financial Services.Purchasing position" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[FS/Legal.Financial Services.Spoken with broker/lender]"
                              dataType="wstr"
                              length="1020"
                              name="FS/Legal.Financial Services.Spoken with broker/lender" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[FS/Legal.Financial Services.Notes, discussions &amp; insight]"
                              dataType="wstr"
                              length="1020"
                              name="FS/Legal.Financial Services.Notes, discussions &amp; insight" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[FS/Legal.Financial Services.Deposit available]"
                              dataType="wstr"
                              length="1020"
                              name="FS/Legal.Financial Services.Deposit available" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[FS/Legal.Financial Services.Mortgage type]"
                              dataType="wstr"
                              length="1020"
                              name="FS/Legal.Financial Services.Mortgage type" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[FS/Legal.Financial Services.Rates quoted]"
                              dataType="wstr"
                              length="1020"
                              name="FS/Legal.Financial Services.Rates quoted" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[FS/Legal.Financial Services Outcomes.Did appt take place?]"
                              dataType="wstr"
                              length="1020"
                              name="FS/Legal.Financial Services Outcomes.Did appt take place?" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[FS/Legal.Financial Services Outcomes.Was an AIP received?]"
                              dataType="wstr"
                              length="1020"
                              name="FS/Legal.Financial Services Outcomes.Was an AIP received?" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[FS/Legal.Financial Services Outcomes.New business written?]"
                              dataType="wstr"
                              length="1020"
                              name="FS/Legal.Financial Services Outcomes.New business written?" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[FS/Legal.Record Attribution.Change applicant registration user]"
                              dataType="wstr"
                              length="1020"
                              name="FS/Legal.Record Attribution.Change applicant registration user" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[FS/Legal.Record Attribution.IDBS AppRef]"
                              dataType="wstr"
                              length="1020"
                              name="FS/Legal.Record Attribution.IDBS AppRef" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[FS/Legal.Record Attribution.Employee No]"
                              dataType="wstr"
                              length="1020"
                              name="FS/Legal.Record Attribution.Employee No" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[FS/Legal.Record Attribution.IDBS PropRef]"
                              dataType="wstr"
                              length="1020"
                              name="FS/Legal.Record Attribution.IDBS PropRef" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Buyers Why?.Rapport and Emotional Connection.Tell me: Why? When? (Motivation)]"
                              dataType="wstr"
                              length="1020"
                              name="Buyers Why?.Rapport and Emotional Connection.Tell me: Why? When? (Motivation)" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Buyers Why?.Rapport and Emotional Connection.Describe to me: What? Where? (Need)]"
                              dataType="wstr"
                              length="1020"
                              name="Buyers Why?.Rapport and Emotional Connection.Describe to me: What? Where? (Need)" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Buyers Why?.Rapport and Emotional Connection.Explain to me: (Ability) - If you view and like a property, in a position to buy? If not, what needs to happen?]"
                              dataType="wstr"
                              length="1020"
                              name="Buyers Why?.Rapport and Emotional Connection.Explain to me: (Ability) - If you view and like a property, in a position to buy? If not, what needs to happen?" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Buyers Why?.Status.NTS]"
                              dataType="wstr"
                              length="1020"
                              name="Buyers Why?.Status.NTS" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Buyers Why?.Status.FTB]"
                              dataType="wstr"
                              length="1020"
                              name="Buyers Why?.Status.FTB" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Buyers Why?.Status.NOTS]"
                              dataType="wstr"
                              length="1020"
                              name="Buyers Why?.Status.NOTS" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Buyers Why?.Status.LOTS]"
                              dataType="wstr"
                              length="1020"
                              name="Buyers Why?.Status.LOTS" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Buyers Why?.Status.POM]"
                              dataType="wstr"
                              length="1020"
                              name="Buyers Why?.Status.POM" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Buyers Why?.Status.PNOM]"
                              dataType="wstr"
                              length="1020"
                              name="Buyers Why?.Status.PNOM" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Buyers Why?.Status.SSTC]"
                              dataType="wstr"
                              length="1020"
                              name="Buyers Why?.Status.SSTC" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Buyers Why?.Status.BTL]"
                              dataType="wstr"
                              length="1020"
                              name="Buyers Why?.Status.BTL" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Buyers Why?.Buying.Lets arrange the viewings for you]"
                              dataType="wstr"
                              length="1020"
                              name="Buyers Why?.Buying.Lets arrange the viewings for you" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Buyers Why?.Buying.Cost of Moving (Mortgage) Appt]"
                              dataType="wstr"
                              length="1020"
                              name="Buyers Why?.Buying.Cost of Moving (Mortgage) Appt" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Buyers Why?.Buying.Lettings Referral]"
                              dataType="wstr"
                              length="1020"
                              name="Buyers Why?.Buying.Lettings Referral" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Buyers Why?.Buying.Mortgage Appt Date]"
                              dataType="wstr"
                              length="1020"
                              name="Buyers Why?.Buying.Mortgage Appt Date" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Buyers Why?.Buying.Lettings Appt Date]"
                              dataType="wstr"
                              length="1020"
                              name="Buyers Why?.Buying.Lettings Appt Date" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Buyers Why?.Buying.Mortgage Appt Time]"
                              dataType="wstr"
                              length="1020"
                              name="Buyers Why?.Buying.Mortgage Appt Time" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Buyers Why?.Buying.Lettings Appt Time]"
                              dataType="wstr"
                              length="1020"
                              name="Buyers Why?.Buying.Lettings Appt Time" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[Buyers Why?.House to Sell?.Can we help with selling you home]"
                              dataType="wstr"
                              length="1020"
                              name="Buyers Why?.House to Sell?.Can we help with selling you home" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[core.contact.Contact Notes.Tel Note]"
                              dataType="wstr"
                              length="1020"
                              name="core.contact.Contact Notes.Tel Note" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[core.contact.Contact Notes.Mobile Note]"
                              dataType="wstr"
                              length="1020"
                              name="core.contact.Contact Notes.Mobile Note" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[core.contact.Contact Notes.Email Note]"
                              dataType="wstr"
                              length="1020"
                              name="core.contact.Contact Notes.Email Note" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[core.contact.Contact Notes.No email?]"
                              dataType="wstr"
                              length="1020"
                              name="core.contact.Contact Notes.No email?" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[core.contact.WHY.Why Are You Moving?]"
                              dataType="wstr"
                              length="1020"
                              name="core.contact.WHY.Why Are You Moving?" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[core.contact.WHY.When]"
                              dataType="wstr"
                              length="1020"
                              name="core.contact.WHY.When" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[core.contact.WHY.Bedrooms]"
                              dataType="wstr"
                              length="1020"
                              name="core.contact.WHY.Bedrooms" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[core.contact.WHY.Price From]"
                              dataType="wstr"
                              length="1020"
                              name="core.contact.WHY.Price From" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[core.contact.WHY.Price To]"
                              dataType="wstr"
                              length="1020"
                              name="core.contact.WHY.Price To" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[core.contact.WHY.Position]"
                              dataType="wstr"
                              length="1020"
                              name="core.contact.WHY.Position" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[core.contact.WHY.Property Wanted]"
                              dataType="wstr"
                              length="1020"
                              name="core.contact.WHY.Property Wanted" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[core.contact.More Details.Business Type]"
                              dataType="wstr"
                              length="1020"
                              name="core.contact.More Details.Business Type" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[core.contact.More Details.Business Status]"
                              dataType="wstr"
                              length="1020"
                              name="core.contact.More Details.Business Status" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransformOutput].ExternalColumns[api.GDPR Key]"
                              dataType="wstr"
                              length="324"
                              name="api.GDPR Key" />
                          </externalMetadataColumns>
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransform Error Output]"
                          isErrorOut="true"
                          name="JsonParserTransform Error Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransform Error Output].Columns[StatusCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransform Error Output].Columns[StatusCode]"
                              name="StatusCode" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransform Error Output].Columns[TemplateOutput]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransform Error Output].Columns[TemplateOutput]"
                              name="TemplateOutput" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransform Error Output].Columns[Property Wanted]"
                              codePage="1252"
                              dataType="str"
                              length="16"
                              lineageId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransform Error Output].Columns[Property Wanted]"
                              name="Property Wanted" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransform Error Output].Columns[Position]"
                              codePage="1252"
                              dataType="str"
                              length="18"
                              lineageId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransform Error Output].Columns[Position]"
                              name="Position" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransform Error Output].Columns[Bedrooms]"
                              codePage="1252"
                              dataType="str"
                              length="7"
                              lineageId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransform Error Output].Columns[Bedrooms]"
                              name="Bedrooms" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransform Error Output].Columns[When]"
                              codePage="1252"
                              dataType="str"
                              length="10"
                              lineageId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransform Error Output].Columns[When]"
                              name="When" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransform Error Output].Columns[Why Are You Moving]"
                              codePage="1252"
                              dataType="str"
                              length="8000"
                              lineageId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransform Error Output].Columns[Why Are You Moving]"
                              name="Why Are You Moving" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransform Error Output].Columns[CurrentOfficeName]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransform Error Output].Columns[CurrentOfficeName]"
                              name="CurrentOfficeName" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransform Error Output].Columns[ContactId]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransform Error Output].Columns[ContactId]"
                              name="ContactId" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransform Error Output].Columns[Id]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransform Error Output].Columns[Id]"
                              name="Id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransform Error Output].Columns[prefguid]"
                              dataType="wstr"
                              length="4000"
                              lineageId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransform Error Output].Columns[prefguid]"
                              name="prefguid" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransform Error Output].Columns[PriceTo]"
                              dataType="numeric"
                              lineageId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransform Error Output].Columns[PriceTo]"
                              name="PriceTo"
                              precision="10" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransform Error Output].Columns[PriceFrom]"
                              dataType="numeric"
                              lineageId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransform Error Output].Columns[PriceFrom]"
                              name="PriceFrom"
                              precision="10" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransform Error Output].Columns[Status]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransform Error Output].Columns[Status]"
                              name="Status" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransform Error Output].Columns[Reference]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransform Error Output].Columns[Reference]"
                              name="Reference" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransform Error Output].Columns[P_error]"
                              dataType="wstr"
                              length="1020"
                              lineageId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransform Error Output].Columns[P_error]"
                              name="P_error" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransform Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransform Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransform Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransform Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransform Error Output].Columns[ErrorColumnName]"
                              codePage="1252"
                              dataType="str"
                              length="128"
                              lineageId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransform Error Output].Columns[ErrorColumnName]"
                              name="ErrorColumnName" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransform Error Output].Columns[ErrorMessage]"
                              dataType="wstr"
                              length="1024"
                              lineageId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransform Error Output].Columns[ErrorMessage]"
                              name="ErrorMessage" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransform Error Output].Columns[ErrorRawData]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransform Error Output].Columns[ErrorRawData]"
                              name="ErrorRawData" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Test Error"
                      componentClassID="Microsoft.ConditionalSplit"
                      contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
                      name="Test Error"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Test Error.Inputs[Conditional Split Input]"
                          description="Input to the Conditional Split Transformation"
                          name="Conditional Split Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Test Error.Inputs[Conditional Split Input].Columns[P_error]"
                              cachedDataType="wstr"
                              cachedLength="1020"
                              cachedName="P_error"
                              lineageId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransformOutput].Columns[P_error]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Test Error.Outputs[Case 1]"
                          description="Output 1 of the Conditional Split Transformation"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          exclusionGroup="1"
                          name="Case 1"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Test Error.Inputs[Conditional Split Input]"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                              name="Expression">[LEN]([REPLACENULL](#{Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransformOutput].Columns[P_error]},"")) == 0</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the friendly version of the expression. This expression version uses column names."
                              expressionType="Notify"
                              name="FriendlyExpression">LEN(REPLACENULL(P_error,"")) == 0</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                              name="EvaluationOrder">0</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Test Error.Outputs[Conditional Split Default Output]"
                          description="Default Output of the Conditional Split Transformation"
                          exclusionGroup="1"
                          name="Conditional Split Default Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Test Error.Inputs[Conditional Split Input]">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              name="IsDefaultOut">true</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Test Error.Outputs[Conditional Split Error Output]"
                          description="Error Output of the Conditional Split Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Conditional Split Error Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Test Error.Inputs[Conditional Split Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Test Error.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Test Error.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Test Error.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Test Error.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Trash Destination"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Trash Destination; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="The trash destination is used to create dummy destination which ends data path without any processing."
                      name="Trash Destination"
                      version="2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.String"
                          description="File path where you want to save data"
                          expressionType="Notify"
                          name="FilePath"></property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates if you want to save input data to comma separated text file"
                          expressionType="Notify"
                          name="SaveDataToFile">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Append data to file"
                          expressionType="Notify"
                          name="Append">false</property>
                        <property
                          dataType="System.String"
                          description="RowSeparator"
                          expressionType="Notify"
                          name="RowSeparator">{NEWLINE}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether you want to overwrite target file if exists"
                          expressionType="Notify"
                          name="OverwriteFileIfExists">true</property>
                        <property
                          dataType="System.String"
                          description="ColumnSeparator"
                          expressionType="Notify"
                          name="ColumnSeparator">,</property>
                        <property
                          dataType="System.Boolean"
                          description="SupportUnicode"
                          expressionType="Notify"
                          name="SupportUnicode">true</property>
                        <property
                          dataType="System.Boolean"
                          description="ColumnNamesInFirstRow"
                          expressionType="Notify"
                          name="ColumnNamesInFirstRow">true</property>
                        <property
                          dataType="System.Boolean"
                          description="QuoteDataIfNeeded"
                          expressionType="Notify"
                          name="QuoteDataIfNeeded">true</property>
                        <property
                          dataType="System.String"
                          description="Date time format string for any column with DT_DBDATETIME, DT_DBDATETIME2 or DB_DATE format"
                          expressionType="Notify"
                          name="DateTimeFormat">yyyy-MM-dd HH:mm:ss</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.TrashDestination</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Trash Destination.Inputs[TrashDestinationInput]"
                          hasSideEffects="true"
                          name="TrashDestinationInput">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Trash Destination 1"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Trash Destination; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="The trash destination is used to create dummy destination which ends data path without any processing."
                      name="Trash Destination 1"
                      version="2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.String"
                          description="File path where you want to save data"
                          expressionType="Notify"
                          name="FilePath"></property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates if you want to save input data to comma separated text file"
                          expressionType="Notify"
                          name="SaveDataToFile">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Append data to file"
                          expressionType="Notify"
                          name="Append">false</property>
                        <property
                          dataType="System.String"
                          description="RowSeparator"
                          expressionType="Notify"
                          name="RowSeparator">{NEWLINE}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether you want to overwrite target file if exists"
                          expressionType="Notify"
                          name="OverwriteFileIfExists">true</property>
                        <property
                          dataType="System.String"
                          description="ColumnSeparator"
                          expressionType="Notify"
                          name="ColumnSeparator">,</property>
                        <property
                          dataType="System.Boolean"
                          description="SupportUnicode"
                          expressionType="Notify"
                          name="SupportUnicode">true</property>
                        <property
                          dataType="System.Boolean"
                          description="ColumnNamesInFirstRow"
                          expressionType="Notify"
                          name="ColumnNamesInFirstRow">true</property>
                        <property
                          dataType="System.Boolean"
                          description="QuoteDataIfNeeded"
                          expressionType="Notify"
                          name="QuoteDataIfNeeded">true</property>
                        <property
                          dataType="System.String"
                          description="Date time format string for any column with DT_DBDATETIME, DT_DBDATETIME2 or DB_DATE format"
                          expressionType="Notify"
                          name="DateTimeFormat">yyyy-MM-dd HH:mm:ss</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.TrashDestination</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Trash Destination 1.Inputs[TrashDestinationInput]"
                          hasSideEffects="true"
                          name="TrashDestinationInput">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Trash Destination 2"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Trash Destination; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="The trash destination is used to create dummy destination which ends data path without any processing."
                      name="Trash Destination 2"
                      version="2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.String"
                          description="File path where you want to save data"
                          expressionType="Notify"
                          name="FilePath"></property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates if you want to save input data to comma separated text file"
                          expressionType="Notify"
                          name="SaveDataToFile">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Append data to file"
                          expressionType="Notify"
                          name="Append">false</property>
                        <property
                          dataType="System.String"
                          description="RowSeparator"
                          expressionType="Notify"
                          name="RowSeparator">{NEWLINE}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether you want to overwrite target file if exists"
                          expressionType="Notify"
                          name="OverwriteFileIfExists">true</property>
                        <property
                          dataType="System.String"
                          description="ColumnSeparator"
                          expressionType="Notify"
                          name="ColumnSeparator">,</property>
                        <property
                          dataType="System.Boolean"
                          description="SupportUnicode"
                          expressionType="Notify"
                          name="SupportUnicode">true</property>
                        <property
                          dataType="System.Boolean"
                          description="ColumnNamesInFirstRow"
                          expressionType="Notify"
                          name="ColumnNamesInFirstRow">true</property>
                        <property
                          dataType="System.Boolean"
                          description="QuoteDataIfNeeded"
                          expressionType="Notify"
                          name="QuoteDataIfNeeded">true</property>
                        <property
                          dataType="System.String"
                          description="Date time format string for any column with DT_DBDATETIME, DT_DBDATETIME2 or DB_DATE format"
                          expressionType="Notify"
                          name="DateTimeFormat">yyyy-MM-dd HH:mm:ss</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.TrashDestination</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Trash Destination 2.Inputs[TrashDestinationInput]"
                          hasSideEffects="true"
                          name="TrashDestinationInput">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Update DB Imp Req Table"
                      componentClassID="Microsoft.OLEDBCommand"
                      contactInfo="OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
                      description="Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time."
                      name="Update DB Imp Req Table"
                      usesDispositions="true"
                      version="2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">0</property>
                        <property
                          dataType="System.String"
                          description="The SQL command to be executed."
                          expressionType="Notify"
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">Update [ContactAdhocImport202102]
Set [prefloaded]= 1
Where Id = ?</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Update DB Imp Req Table.Connections[OleDbConnection]"
                          connectionManagerID="{1ACC4D99-A047-44CB-AAAD-088F42F69A23}:external"
                          connectionManagerRefId="Project.ConnectionManagers[Rosie]"
                          description="The OLE DB runtime connection used to access the database."
                          name="OleDbConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Update DB Imp Req Table.Inputs[OLE DB Command Input]"
                          errorOrTruncationOperation="Command Execution"
                          errorRowDisposition="FailComponent"
                          hasSideEffects="true"
                          name="OLE DB Command Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Update DB Imp Req Table.Inputs[OLE DB Command Input].Columns[Id]"
                              cachedDataType="i4"
                              cachedName="Id"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Update DB Imp Req Table.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                              lineageId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransformOutput].Columns[Id]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Update DB Imp Req Table.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                              dataType="i4"
                              name="Param_0">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                                  name="DBParamInfoFlags">81</property>
                              </properties>
                            </externalMetadataColumn>
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Update DB Imp Req Table.Outputs[OLE DB Command Output]"
                          exclusionGroup="1"
                          name="OLE DB Command Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Update DB Imp Req Table.Inputs[OLE DB Command Input]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Update DB Imp Req Table.Outputs[OLE DB Command Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="OLE DB Command Error Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Update DB Imp Req Table.Inputs[OLE DB Command Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Update DB Imp Req Table.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Update DB Imp Req Table.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Update DB Imp Req Table.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Update DB Imp Req Table.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                  </components>
                  <paths>
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY.Paths[Case 1]"
                      endId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Update DB Imp Req Table.Inputs[OLE DB Command Input]"
                      name="Case 1"
                      startId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Test Error.Outputs[Case 1]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY.Paths[Conditional Split Default Output]"
                      endId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Trash Destination 2.Inputs[TrashDestinationInput]"
                      name="Conditional Split Default Output"
                      startId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Test Error.Outputs[Conditional Split Default Output]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY.Paths[JsonParserTransform Error Output]"
                      endId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Trash Destination 1.Inputs[TrashDestinationInput]"
                      name="JsonParserTransform Error Output"
                      startId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransform Error Output]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY.Paths[JsonParserTransformOutput]"
                      endId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Test Error.Inputs[Conditional Split Input]"
                      name="JsonParserTransformOutput"
                      startId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Outputs[JsonParserTransformOutput]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY.Paths[OLE DB Source Output]"
                      endId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Build Contact Cust Fields.Inputs[TemplateTransformInput]"
                      name="OLE DB Source Output"
                      startId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Existing Contacts from SQL.Outputs[OLE DB Source Output]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY.Paths[Response Output]"
                      endId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success.Inputs[JsonParserTransformInput]"
                      name="Response Output"
                      startId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Post Contact Cust Fields Request.Outputs[Response Output]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY.Paths[TemplateTransformOutput]"
                      endId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Post Contact Cust Fields Request.Inputs[WebApiDestinationInput]"
                      name="TemplateTransformOutput"
                      startId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Build Contact Cust Fields.Outputs[TemplateTransformOutput]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY.Paths[WebApiDestination Error Output]"
                      endId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Trash Destination.Inputs[TrashDestinationInput]"
                      name="WebApiDestination Error Output"
                      startId="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Post Contact Cust Fields Request.Outputs[WebApiDestination Error Output]" />
                  </paths>
                </pipeline>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Iterate Offices\Sequence Container\ClearCampaignId"
              DTS:CreationName="Microsoft.ExpressionTask"
              DTS:Description="Expression Task"
              DTS:DTSID="{359075E4-D4B1-4165-9B4C-CFE90B672934}"
              DTS:ExecutableType="Microsoft.ExpressionTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="ClearCampaignId"
              DTS:ThreadHint="1">
              <DTS:Variables />
              <DTS:ObjectData>
                <ExpressionTask
                  Expression="@[User::CampaignId]=  NULL(DT_I4)" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Iterate Offices\Sequence Container\Create Contacts"
              DTS:CreationName="Microsoft.Pipeline"
              DTS:Description="Data Flow Task"
              DTS:DTSID="{0CA0B7BC-730F-4E46-BD05-55CB0A90CB88}"
              DTS:ExecutableType="Microsoft.Pipeline"
              DTS:LocaleID="-1"
              DTS:ObjectName="Create Contacts"
              DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:ObjectData>
                <pipeline
                  version="1">
                  <components>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Create Contacts\Build Contact Create"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Template Transform; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="Template transform allows to produce multi line string from template text. You can insert placeholders anywhere in the string. Ideal use case would be produce simple XML or JSON without use of JSON or XML Generator Transform."
                      name="Build Contact Create"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.String"
                          description="Template text which needs to be replaced. Any where in the text you can use input column names as placeholders (e.g. &lt;%CustomerEmail%&gt; ). You can also use user/system variable as placeholder (e.g. {{User::MyVariable}} )"
                          expressionType="Notify"
                          name="TemplateText"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">{  
   "method":"Contacts::create",
   "args":{  
      "data":{  
         "type":"person",
         "address":"&lt;%Address1%&gt;\r\n&lt;%Address2%&gt;\r\n&lt;%Town%&gt;\r\n&lt;%County%&gt;\r\n&lt;%Postcode%&gt;",
         "marketing_postcode":"&lt;%Postcode%&gt;",
         "marketing_birthday":"1900-01-01",
         "notes":"",
         "company_name":null,
         "is_dnd":0,
         "_related":{  
         	"contact_tags": [
				{
					"tag": "Network Lead"
				}
			],
            "contact_emails":[  
               {  
                  "email_desc":"default",
                  "email_primary":1,
                  "email_address":"&lt;%Email%&gt;"
               }
            ],
            "contact_names":[  
               {  
                  "name_first":"&lt;%Forename%&gt;",
                  "name_last":"&lt;%Surname%&gt;",
                  "name_title":"&lt;%Title%&gt;",
                  "name_middle":""
               }
            ],
            "contact_phones":[  
               {  
                  "phone_number":"&lt;%Mobile%&gt;",
                  "phone_type":"default",
                  "phone_primary":"1",
                  "phone_primary_sms":"1"
               },
               {  
                  "phone_number":"&lt;%Home%&gt;",
                  "phone_type":"home",
                  "phone_primary":"0",
                  "phone_primary_sms":"0"
               },
               {  
                  "phone_number":"&lt;%Work%&gt;",
                  "phone_type":"work",
                  "phone_primary":"0",
                  "phone_primary_sms":"0"
               }
            ]
         }
      }
   },
   "strip_response_prefixes":"True",
   "token":"{{User::RexToken}}"
}</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.TemplateTransform</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Create Contacts\Build Contact Create.Inputs[TemplateTransformInput]"
                          name="TemplateTransformInput">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Build Contact Create.Inputs[TemplateTransformInput].Columns[Address1]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="8000"
                              cachedName="Address1"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Output].Columns[Address1]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Build Contact Create.Inputs[TemplateTransformInput].Columns[Address2]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="8000"
                              cachedName="Address2"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Output].Columns[Address2]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Build Contact Create.Inputs[TemplateTransformInput].Columns[Town]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="8000"
                              cachedName="Town"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Output].Columns[Town]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Build Contact Create.Inputs[TemplateTransformInput].Columns[County]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="8000"
                              cachedName="County"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Output].Columns[County]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Build Contact Create.Inputs[TemplateTransformInput].Columns[Postcode]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="8000"
                              cachedName="Postcode"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Output].Columns[Postcode]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Build Contact Create.Inputs[TemplateTransformInput].Columns[Email]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Email"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Output].Columns[Email]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Build Contact Create.Inputs[TemplateTransformInput].Columns[Forename]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Forename"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Output].Columns[Forename]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Build Contact Create.Inputs[TemplateTransformInput].Columns[Surname]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Surname"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Output].Columns[Surname]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Build Contact Create.Inputs[TemplateTransformInput].Columns[Title]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="9"
                              cachedName="Title"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Output].Columns[Title]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Build Contact Create.Inputs[TemplateTransformInput].Columns[Mobile]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="8000"
                              cachedName="Mobile"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Output].Columns[Mobile]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Build Contact Create.Inputs[TemplateTransformInput].Columns[Home]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="8000"
                              cachedName="Home"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Output].Columns[Home]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Build Contact Create.Inputs[TemplateTransformInput].Columns[Work]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="8000"
                              cachedName="Work"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Output].Columns[Work]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Create Contacts\Build Contact Create.Outputs[TemplateTransformOutput]"
                          errorOrTruncationOperation="Error"
                          name="TemplateTransformOutput"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Create Contacts\Build Contact Create.Inputs[TemplateTransformInput]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Build Contact Create.Outputs[TemplateTransformOutput].Columns[TemplateOutput]"
                              dataType="nText"
                              description="Template output column which will contain replaced text."
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Build Contact Create.Outputs[TemplateTransformOutput].Columns[TemplateOutput]"
                              name="TemplateOutput" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Create Contacts\Conditional Split"
                      componentClassID="Microsoft.ConditionalSplit"
                      contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
                      name="Conditional Split"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Create Contacts\Conditional Split.Inputs[Conditional Split Input]"
                          description="Input to the Conditional Split Transformation"
                          name="Conditional Split Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Conditional Split.Inputs[Conditional Split Input].Columns[error]"
                              cachedDataType="wstr"
                              cachedLength="1020"
                              cachedName="error"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].Columns[error]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Conditional Split.Inputs[Conditional Split Input].Columns[Id]"
                              cachedDataType="i4"
                              cachedName="Id"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].Columns[Id]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Create Contacts\Conditional Split.Outputs[Case 1]"
                          description="Output 1 of the Conditional Split Transformation"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          exclusionGroup="1"
                          name="Case 1"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Create Contacts\Conditional Split.Inputs[Conditional Split Input]"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                              name="Expression">[ISNULL](#{Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].Columns[error]}) ==  TRUE  &amp;&amp; #{Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].Columns[Id]} &gt; 0</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the friendly version of the expression. This expression version uses column names."
                              expressionType="Notify"
                              name="FriendlyExpression">ISNULL(error) ==  TRUE  &amp;&amp; Id &gt; 0</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                              name="EvaluationOrder">0</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Create Contacts\Conditional Split.Outputs[Conditional Split Default Output]"
                          description="Default Output of the Conditional Split Transformation"
                          exclusionGroup="1"
                          name="Conditional Split Default Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Create Contacts\Conditional Split.Inputs[Conditional Split Input]">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              name="IsDefaultOut">true</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Create Contacts\Conditional Split.Outputs[Conditional Split Error Output]"
                          description="Error Output of the Conditional Split Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Conditional Split Error Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Create Contacts\Conditional Split.Inputs[Conditional Split Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL"
                      componentClassID="Microsoft.OLEDBSource"
                      contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                      description="OLE DB Source"
                      name="Contacts From SQL"
                      usesDispositions="true"
                      version="7">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">0</property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the database object used to open a rowset."
                          name="OpenRowset"></property>
                        <property
                          dataType="System.String"
                          description="Specifies the variable that contains the name of the database object used to open a rowset."
                          name="OpenRowsetVariable"></property>
                        <property
                          dataType="System.String"
                          description="The SQL command to be executed."
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">SELECT  top 100 Id
      
      ,[TargetOfficeName]
      ,[Category]
      ,[Reference]
      ,[Status]
      ,[CurrentOfficeName]
      ,[Title]
      ,[Forename]
  , [Surname]
      ,[Address1]
      ,[Address2]
      ,[Town]
      ,[County]
      ,[Postcode]
      ,replace(isnull([Home],''),' ','') as Home
      ,replace(isnull([Mobile],''),' ','') as Mobile
      ,replace(isnull([Work],''),' ','') as Work
     ,isnull([Email],'') as Email
--,'test' + cast(id as nvarchar) + '@spicerhaart.com' as Email
      ,[PriceFrom]
      ,[PriceTo]
      ,[prefguid]
  FROM [Rosie].[dbo].ContactAdhocImport202102 ci
where contactid is null and [TargetOfficeId] = ? and prefguid is not null</property>
                        <property
                          dataType="System.String"
                          description="The variable that contains the SQL command to be executed."
                          name="SqlCommandVariable"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Boolean"
                          description="Forces the use of the DefaultCodePage property value when describing character data."
                          name="AlwaysUseDefaultCodePage">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the mode used to access the database."
                          name="AccessMode"
                          typeConverter="AccessMode">2</property>
                        <property
                          dataType="System.String"
                          description="The mappings between the parameters in the SQL command and variables."
                          name="ParameterMapping">"Parameter0:Input",{B4701D52-6FAA-434F-8042-898CB08D7322};</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Connections[OleDbConnection]"
                          connectionManagerID="{1ACC4D99-A047-44CB-AAAD-088F42F69A23}:external"
                          connectionManagerRefId="Project.ConnectionManagers[Rosie]"
                          description="The OLE DB runtime connection used to access the database."
                          name="OleDbConnection" />
                      </connections>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Output]"
                          name="OLE DB Source Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Output].Columns[Id]"
                              dataType="i4"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Output].ExternalColumns[Id]"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Output].Columns[Id]"
                              name="Id"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Output].Columns[TargetOfficeName]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Output].ExternalColumns[TargetOfficeName]"
                              length="50"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Output].Columns[TargetOfficeName]"
                              name="TargetOfficeName"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Output].Columns[Category]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Output].ExternalColumns[Category]"
                              length="50"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Output].Columns[Category]"
                              name="Category"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Output].Columns[Reference]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Output].ExternalColumns[Reference]"
                              length="50"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Output].Columns[Reference]"
                              name="Reference"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Output].Columns[Status]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Output].ExternalColumns[Status]"
                              length="50"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Output].Columns[Status]"
                              name="Status"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Output].Columns[CurrentOfficeName]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Output].ExternalColumns[CurrentOfficeName]"
                              length="50"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Output].Columns[CurrentOfficeName]"
                              name="CurrentOfficeName"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Output].Columns[Title]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Output].ExternalColumns[Title]"
                              length="9"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Output].Columns[Title]"
                              name="Title"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Output].Columns[Forename]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Output].ExternalColumns[Forename]"
                              length="50"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Output].Columns[Forename]"
                              name="Forename"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Output].Columns[Surname]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Output].ExternalColumns[Surname]"
                              length="50"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Output].Columns[Surname]"
                              name="Surname"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Output].Columns[Address1]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Output].ExternalColumns[Address1]"
                              length="8000"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Output].Columns[Address1]"
                              name="Address1"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Output].Columns[Address2]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Output].ExternalColumns[Address2]"
                              length="8000"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Output].Columns[Address2]"
                              name="Address2"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Output].Columns[Town]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Output].ExternalColumns[Town]"
                              length="8000"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Output].Columns[Town]"
                              name="Town"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Output].Columns[County]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Output].ExternalColumns[County]"
                              length="8000"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Output].Columns[County]"
                              name="County"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Output].Columns[Postcode]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Output].ExternalColumns[Postcode]"
                              length="8000"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Output].Columns[Postcode]"
                              name="Postcode"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Output].Columns[Home]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Output].ExternalColumns[Home]"
                              length="8000"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Output].Columns[Home]"
                              name="Home"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Output].Columns[Mobile]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Output].ExternalColumns[Mobile]"
                              length="8000"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Output].Columns[Mobile]"
                              name="Mobile"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Output].Columns[Work]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Output].ExternalColumns[Work]"
                              length="8000"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Output].Columns[Work]"
                              name="Work"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Output].Columns[Email]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Output].ExternalColumns[Email]"
                              length="50"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Output].Columns[Email]"
                              name="Email"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Output].Columns[PriceFrom]"
                              dataType="numeric"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Output].ExternalColumns[PriceFrom]"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Output].Columns[PriceFrom]"
                              name="PriceFrom"
                              precision="10"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Output].Columns[PriceTo]"
                              dataType="numeric"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Output].ExternalColumns[PriceTo]"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Output].Columns[PriceTo]"
                              name="PriceTo"
                              precision="10"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Output].Columns[prefguid]"
                              dataType="guid"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Output].ExternalColumns[prefguid]"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Output].Columns[prefguid]"
                              name="prefguid"
                              truncationRowDisposition="FailComponent" />
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Output].ExternalColumns[Id]"
                              dataType="i4"
                              name="Id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Output].ExternalColumns[TargetOfficeName]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              name="TargetOfficeName" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Output].ExternalColumns[Category]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              name="Category" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Output].ExternalColumns[Reference]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              name="Reference" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Output].ExternalColumns[Status]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              name="Status" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Output].ExternalColumns[CurrentOfficeName]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              name="CurrentOfficeName" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Output].ExternalColumns[Title]"
                              codePage="1252"
                              dataType="str"
                              length="9"
                              name="Title" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Output].ExternalColumns[Forename]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              name="Forename" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Output].ExternalColumns[Surname]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              name="Surname" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Output].ExternalColumns[Address1]"
                              codePage="1252"
                              dataType="str"
                              length="8000"
                              name="Address1" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Output].ExternalColumns[Address2]"
                              codePage="1252"
                              dataType="str"
                              length="8000"
                              name="Address2" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Output].ExternalColumns[Town]"
                              codePage="1252"
                              dataType="str"
                              length="8000"
                              name="Town" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Output].ExternalColumns[County]"
                              codePage="1252"
                              dataType="str"
                              length="8000"
                              name="County" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Output].ExternalColumns[Postcode]"
                              codePage="1252"
                              dataType="str"
                              length="8000"
                              name="Postcode" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Output].ExternalColumns[Home]"
                              codePage="1252"
                              dataType="str"
                              length="8000"
                              name="Home" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Output].ExternalColumns[Mobile]"
                              codePage="1252"
                              dataType="str"
                              length="8000"
                              name="Mobile" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Output].ExternalColumns[Work]"
                              codePage="1252"
                              dataType="str"
                              length="8000"
                              name="Work" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Output].ExternalColumns[Email]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              name="Email" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Output].ExternalColumns[PriceFrom]"
                              dataType="numeric"
                              name="PriceFrom"
                              precision="10" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Output].ExternalColumns[PriceTo]"
                              dataType="numeric"
                              name="PriceTo"
                              precision="10" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Output].ExternalColumns[prefguid]"
                              dataType="guid"
                              name="prefguid" />
                          </externalMetadataColumns>
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Error Output]"
                          isErrorOut="true"
                          name="OLE DB Source Error Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Error Output].Columns[Id]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Error Output].Columns[Id]"
                              name="Id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Error Output].Columns[TargetOfficeName]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Error Output].Columns[TargetOfficeName]"
                              name="TargetOfficeName" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Error Output].Columns[Category]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Error Output].Columns[Category]"
                              name="Category" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Error Output].Columns[Reference]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Error Output].Columns[Reference]"
                              name="Reference" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Error Output].Columns[Status]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Error Output].Columns[Status]"
                              name="Status" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Error Output].Columns[CurrentOfficeName]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Error Output].Columns[CurrentOfficeName]"
                              name="CurrentOfficeName" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Error Output].Columns[Title]"
                              codePage="1252"
                              dataType="str"
                              length="9"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Error Output].Columns[Title]"
                              name="Title" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Error Output].Columns[Forename]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Error Output].Columns[Forename]"
                              name="Forename" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Error Output].Columns[Surname]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Error Output].Columns[Surname]"
                              name="Surname" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Error Output].Columns[Address1]"
                              codePage="1252"
                              dataType="str"
                              length="8000"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Error Output].Columns[Address1]"
                              name="Address1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Error Output].Columns[Address2]"
                              codePage="1252"
                              dataType="str"
                              length="8000"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Error Output].Columns[Address2]"
                              name="Address2" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Error Output].Columns[Town]"
                              codePage="1252"
                              dataType="str"
                              length="8000"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Error Output].Columns[Town]"
                              name="Town" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Error Output].Columns[County]"
                              codePage="1252"
                              dataType="str"
                              length="8000"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Error Output].Columns[County]"
                              name="County" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Error Output].Columns[Postcode]"
                              codePage="1252"
                              dataType="str"
                              length="8000"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Error Output].Columns[Postcode]"
                              name="Postcode" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Error Output].Columns[Home]"
                              codePage="1252"
                              dataType="str"
                              length="8000"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Error Output].Columns[Home]"
                              name="Home" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Error Output].Columns[Mobile]"
                              codePage="1252"
                              dataType="str"
                              length="8000"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Error Output].Columns[Mobile]"
                              name="Mobile" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Error Output].Columns[Work]"
                              codePage="1252"
                              dataType="str"
                              length="8000"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Error Output].Columns[Work]"
                              name="Work" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Error Output].Columns[Email]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Error Output].Columns[Email]"
                              name="Email" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Error Output].Columns[PriceFrom]"
                              dataType="numeric"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Error Output].Columns[PriceFrom]"
                              name="PriceFrom"
                              precision="10" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Error Output].Columns[PriceTo]"
                              dataType="numeric"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Error Output].Columns[PriceTo]"
                              name="PriceTo"
                              precision="10" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Error Output].Columns[prefguid]"
                              dataType="guid"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Error Output].Columns[prefguid]"
                              name="prefguid" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Create Contacts\Post Contact Create Request"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Web API Destination; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="The Web API destination can be used to send data to Web API URL (e.g. Submit or POST data to REST API/SOAP or other HTTP/HTTPS endpoints)"
                      name="Post Contact Create Request"
                      usesDispositions="true"
                      version="5">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">3</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.String"
                          description="API URL you want to access"
                          expressionType="Notify"
                          name="HttpRequestUrl">{{User::RexAPIWebURL}}</property>
                        <property
                          dataType="System.String"
                          description="Http Web Request Method (e.g. POST, GET, PUT, LIST, DELETE...). Refer your API documentation if you are not sure which method you have to use."
                          expressionType="Notify"
                          name="HttpRequestMethod">POST</property>
                        <property
                          dataType="System.String"
                          description="Set this if you want to set custom Http headers. You may use variable anywhere in the header value using syntax {{User::YourVarName}}. Syntax of Header key value pair is : &amp;lt;request&amp;gt;&amp;lt;header&amp;gt;&amp;lt;name&amp;gt;x-myheader-1&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;AAA&amp;lt;/value&amp;gt;&amp;lt;/header&amp;gt; &amp;lt;header&amp;gt;&amp;lt;name&amp;gt;x-myheader-2&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;BBB&amp;lt;/value&amp;gt;&amp;lt;/header&amp;gt;&amp;lt;/request&amp;gt;"
                          expressionType="Notify"
                          name="HttpHeaders"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">&lt;request&gt;&lt;header&gt;&lt;name&gt;Accept&lt;/name&gt;&lt;value&gt;*/*&lt;/value&gt;&lt;/header&gt;&lt;header&gt;&lt;name&gt;Cache-Control&lt;/name&gt;&lt;value&gt;no-cache&lt;/value&gt;&lt;/header&gt;&lt;/request&gt;</property>
                        <property
                          dataType="System.String"
                          description="User defined data you wish to send along with your HTTP Request (e.g. Upload file data, Form POST data). Usually you have to set content-type of your data but if you select RequestMethod=POST then system will automatically set content-type=application/x-www-form-urlencoded."
                          expressionType="Notify"
                          name="HttpRequestData"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies content type for data you wish to POST. If you select Default option then system default content type will be used (i.e. application/x-www-form-urlencoded). If you specify Content-Type header along with this option then header value takes precedence."
                          expressionType="Notify"
                          name="HttpRequestContentType"
                          typeConverter="ZappySys.Common.Web.HttpRequestContentType">0</property>
                        <property
                          dataType="System.Boolean"
                          description="If this option is true then component will continue without exception on 404 error (Url not found). This allows you to consume data gracefully."
                          expressionType="Notify"
                          name="ContinueOnUrlNotFoundError">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Ignore SSL certificate related errors. Example: if you getting SSL/TLS errors because of certificate expired or certificate is not from trusted authority or certificate is self-signed. By checking this option you will not get SSL/TLS error."
                          expressionType="Notify"
                          name="IgnoreCertificateErrors">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Allow unsecure ciphers/suites and curves for SSLS/TLS communication. Use this option to communicate with web servers which needs legacy / unsecured ciphers support. This option is only trigged when you change default SSL/TLS Version on advanced settings tab."
                          expressionType="Notify"
                          name="AllowUnsecureSuite">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Enable support for gzip or deflate compression. When you check this option compressed response automatically de-compressed saving bandwidth. This option is only valid if web server supports compressed response stream. Check your API documentation for more information."
                          expressionType="Notify"
                          name="EnableCompressionSupport">true</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies which security protocol is supported for HTTPS communication. Using this option you can enable legacy protocol or enforce to use latest version of security protocol (Note: TLS 1.2 is only supported in SSIS 2014 or Higher)."
                          expressionType="Notify"
                          name="SecurityProtocol"
                          typeConverter="ZappySys.PowerPack.Common.HttpsSecurityProtocolType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Wait time in milliseconds (Pause after each request). 0=No wait. Use this delay time if your API has limit on how many requests you can make in certain time frame."
                          expressionType="Notify"
                          name="WaitTime">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you redirect error to error output by default you get additional information in ErrorMessage column. Check this option if you need exact Response Body (Useful if its in JSON/XML format which needs to be parsed for additional information for later step)."
                          expressionType="Notify"
                          name="OnErrorOutputResponseBody">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Enable multiple requests using parallel threads."
                          expressionType="Notify"
                          name="EnableParallelRequests">true</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum parallel threads to use for processing multiple web requests."
                          expressionType="Notify"
                          name="MaxParallelThreads">10</property>
                        <property
                          dataType="System.Boolean"
                          description="By default one request is sent for each input row. If your API supports multiple records in a single call via HTTP Body then enable this setting. See also BodyBatchSize, BodyHeader, BodyFooter and BodyRowSeparator property."
                          expressionType="Notify"
                          name="EnableBodyBatch">false</property>
                        <property
                          dataType="System.String"
                          description="When you have to wrap input content between opening and closing tags for each call then set this property to specify opening for body content. For Example if you want to build Body like this (send max 100 rows per call) ==&gt; { records : [ {...}, {...}, {...} ] } then you can set BatchSize=100, BodyHeader as &quot;{ records: [&quot; , BodyFooter as &quot;] }&quot; and BodyRowSeperator as comma {,}. This property is ignored if EnableBodyBatch=false."
                          expressionType="Notify"
                          name="BodyHeader"></property>
                        <property
                          dataType="System.String"
                          description="When you have to wrap input content between opening and closing tags for each call then set this property to specify closing for body content. For Example if you want to build Body like this (send max 100 rows per call) ==&gt; { records : [ {...}, {...}, {...} ] } then you can set BatchSize=100, BodyHeader as &quot;{ records: [&quot; , BodyFooter as &quot;] }&quot; and BodyRowSeperator as comma {,}. This property is ignored if EnableBodyBatch=false."
                          expressionType="Notify"
                          name="BodyFooter"></property>
                        <property
                          dataType="System.Int32"
                          description="If your API supports multiple records via HTTP Body then change this setting &gt; 1 to include multiple upstream records into single call. See also BodyHeader, BodyFooter and BodyRowSeparator property. This property is ignored if EnableBodyBatch=false."
                          expressionType="Notify"
                          name="BodyBatchSize">100</property>
                        <property
                          dataType="System.String"
                          description="When you submit multiple rows in a batch you can separate multiple documents / records using custom separator (e.g. in JSON Array you can use comma {,} as record separator if POST document is in array format [ {...}, {...}, {...} ] ). For last row of batch blank separator is used."
                          expressionType="Notify"
                          name="BodyRowSeparator"></property>
                        <property
                          dataType="System.Boolean"
                          description="Returns response data as binary data (e.g. Byte Array). Check this option is response is Zip file, Image file or any non text data which needs to be exported as raw data without any encoding."
                          expressionType="Notify"
                          name="TreatResponseAsBinary">false</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.WebApiDestination</property>
                        <property
                          dataType="System.Boolean"
                          description="Check this option if you want to upload file(s) (i.e. POST RAW file data) or send data using Multi-Part encoding method (i.e. Content-Type: multipart/form-data). Multi-Part request allows you to mix key/value and upload files in same request. On the other hand raw upload allows only single file upload (without any key/value) &#xA;&#xA;==== Raw Upload (Content-Type: application/octet-stream) =====   &#xA;To upload single file in raw mode check this option and specify full file path starting with @ sign in the Body (e.g.  @c:\data\myfile.zip ) &#xA;&#xA;==== Form-Data / Multipart Upload (Content-Type: multipart/form-data) =====   &#xA;To treat your Request data as multi part fields you must specify key/value pairs separated by new lines into RequestData field (i.e. Body). Each key value pair is entered on new-line and key/value are separated using equal sign (=). Preceding and trailing spaces are ignored also blank lines are ignored. &#xA;If field value has some any special character(s) then use escape sequence (e.g. For NewLine: \r\n, For Tab: \t, For at (@): \@). When value of any field starts with at sign (@) its automatically treated as File you want to upload. By default file content type is determined based on extension however you can supply content type manually for any field using this way [ fieldname.Content-Type=some content type ]. In below example we have supplied Content-Type for file2 and SomeField1, all other fields are using default content-type.&#xA;See below Example of uploading multiple files along with additional fields.&#xA;&#xA;file1=@c:\data\Myfile1.txt&#xA;file2=@c:\data\Myfile2.json&#xA;file2.Content-Type=application/json&#xA;SomeField1=aaaaaaa&#xA;SomeField1.Content-Type=text/plain&#xA;SomeField2=12345&#xA;SomeFieldWithNewLineAndTab=This is line1\r\nThis is line2\r\nThis is \ttab \ttab \ttab&#xA;SomeFieldStartingWithAtSign=\@MyTwitterHandle&#xA;"
                          expressionType="Notify"
                          name="IsMultiPartUpload">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Enable this option if your server is expecting &#xA; (i.e. CRLF) after last Multi-Part boundary in the Body. This option is only applicable if you enabled IsMultiPartUpload and sending data in Key=value format (i.e. Mutipart). For raw file upload this option has no effect."
                          expressionType="Notify"
                          name="AddMultiPartPostamble">false</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Iterate Offices\Sequence Container\Create Contacts\Post Contact Create Request.Connections[Connection]"
                          connectionManagerID="Package.ConnectionManagers[HTTP 1]"
                          connectionManagerRefId="Package.ConnectionManagers[HTTP 1]"
                          description="Connection manager for authentication (e.g. HTTP or OAuth Connection)"
                          name="Connection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Create Contacts\Post Contact Create Request.Inputs[WebApiDestinationInput]"
                          errorRowDisposition="RedirectRow"
                          hasSideEffects="true"
                          name="WebApiDestinationInput"
                          truncationRowDisposition="RedirectRow">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Post Contact Create Request.Inputs[WebApiDestinationInput].Columns[TemplateOutput]"
                              cachedDataType="nText"
                              cachedName="TemplateOutput"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Create Contacts\Post Contact Create Request.Inputs[WebApiDestinationInput].ExternalColumns[HttpRequestData]"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Build Contact Create.Outputs[TemplateTransformOutput].Columns[TemplateOutput]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Post Contact Create Request.Inputs[WebApiDestinationInput].ExternalColumns[HttpRequestUrl]"
                              dataType="wstr"
                              length="2000"
                              name="HttpRequestUrl" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Post Contact Create Request.Inputs[WebApiDestinationInput].ExternalColumns[HttpRequestData]"
                              dataType="nText"
                              name="HttpRequestData" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Post Contact Create Request.Inputs[WebApiDestinationInput].ExternalColumns[HttpHeaders]"
                              dataType="wstr"
                              length="2000"
                              name="HttpHeaders" />
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Create Contacts\Post Contact Create Request.Outputs[WebApiDestination Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="WebApiDestination Error Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Create Contacts\Post Contact Create Request.Inputs[WebApiDestinationInput]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Post Contact Create Request.Outputs[WebApiDestination Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Post Contact Create Request.Outputs[WebApiDestination Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Post Contact Create Request.Outputs[WebApiDestination Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Post Contact Create Request.Outputs[WebApiDestination Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Post Contact Create Request.Outputs[WebApiDestination Error Output].Columns[ErrorColumnName]"
                              codePage="1252"
                              dataType="str"
                              length="128"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Post Contact Create Request.Outputs[WebApiDestination Error Output].Columns[ErrorColumnName]"
                              name="ErrorColumnName" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Post Contact Create Request.Outputs[WebApiDestination Error Output].Columns[ErrorMessage]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Post Contact Create Request.Outputs[WebApiDestination Error Output].Columns[ErrorMessage]"
                              name="ErrorMessage" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Create Contacts\Post Contact Create Request.Outputs[Response Output]"
                          exclusionGroup="1"
                          name="Response Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Create Contacts\Post Contact Create Request.Inputs[WebApiDestinationInput]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Post Contact Create Request.Outputs[Response Output].Columns[ResponseText]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Post Contact Create Request.Outputs[Response Output].Columns[ResponseText]"
                              name="ResponseText" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Post Contact Create Request.Outputs[Response Output].Columns[StatusCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Post Contact Create Request.Outputs[Response Output].Columns[StatusCode]"
                              name="StatusCode" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="JSON Parser Transform; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="Parse incoming JSON String into columns. You can also parse and transform single JSON record into multiple rows by filtering data based on JSON Path (e.g. $.Customer.Orders[*])"
                      name="Read ContactId"
                      usesDispositions="true"
                      version="2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for any numeric data types"
                          expressionType="Notify"
                          name="TreatBlankNumberAsNull">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for bool data types"
                          expressionType="Notify"
                          name="TreatBlankBoolAsNull">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for any date/time data types"
                          expressionType="Notify"
                          name="TreatBlankDateAsNull">true</property>
                        <property
                          dataType="System.Int32"
                          description="Encoding of source file"
                          expressionType="Notify"
                          name="Encoding"
                          typeConverter="ZappySys.Common.EncodingType">0</property>
                        <property
                          dataType="System.String"
                          description="Character set for text (e.g. utf-8 )"
                          expressionType="Notify"
                          name="CharacterSet"></property>
                        <property
                          dataType="System.String"
                          description="Sample JSON data used to parse output columns."
                          expressionType="Notify"
                          name="SampleData"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">{
    "result": {
        "system_record_state": "active",
        "system_ctime": 1613040814,
        "system_modtime": 1613040814,
        "system_search_key": "pref test",
        "address": "113 Bryntaf\r\nAberfan\r\nMerthyr Tydfil\r\nMid Glamorgan\r\nCF484PJ",
        "address_postal": null,
        "marketing_postcode": "CF484PJ",
        "marketing_enquiry_source": null,
        "marketing_gender": null,
        "marketing_birthday": "1900-01-01",
        "notes": null,
        "company_name": null,
        "company_abn": null,
        "website_url": null,
        "is_dnd": true,
        "type": "person",
        "interest_level": null,
        "last_contacted_date": null,
        "name_legal": null,
        "name_salutation": null,
        "name_addressee": null,
        "last_contacted_at": null,
        "single_view_identity_id": null,
        "single_view_profile_id": null,
        "etag": "2126413-1613040814",
        "id": 2126413,
        "system_owner_user": {
            "id": "19443",
            "_name": "Rosie API",
            "_first_name": "Rosie",
            "_last_name": "API",
            "_email_address": "rosie@spicerhaart.co.uk"
        },
        "system_modified_user": {
            "id": "19443",
            "_name": "Rosie API",
            "_first_name": "Rosie",
            "_last_name": "API",
            "_email_address": "rosie@spicerhaart.co.uk"
        },
        "system_created_user": {
            "id": "19443",
            "_name": "Rosie API",
            "_first_name": "Rosie",
            "_last_name": "API",
            "_email_address": "rosie@spicerhaart.co.uk"
        },
        "smart_categories": false,
        "contact_image": null,
        "company_size": null,
        "marketing_enquiry_method": null,
        "_related": {
            "contact_emails": [
                {
                    "email_desc": "default",
                    "email_address": "keith.mills@spicerhaart.co.uk",
                    "email_primary": true,
                    "email_secondary": null,
                    "is_invalid": null,
                    "_id": 1517924
                }
            ],
            "contact_names": [
                {
                    "name_title": "Mr",
                    "name_first": "pref",
                    "name_middle": null,
                    "name_last": "test",
                    "_id": 1737661
                }
            ],
            "contact_phones": [],
            "contact_tags": [],
            "contact_documents": [],
            "contact_mailing_lists": [],
            "contact_relationships": [],
            "contact_reln_property": [],
            "contact_reln_listing": []
        },
        "address_wash": {
            "present_on_lists": [],
            "user_override": null,
            "allow": true
        },
        "address_postal_wash": null,
        "_security_user_rights": [
            "read",
            "update",
            "archive",
            "trash",
            "perms"
        ]
    },
    "error": null
}</property>
                        <property
                          dataType="System.Boolean"
                          description="Include all upstream parent columns into output except the one you selected to parse. By default only parsed columns from Input document is included in the output. If you wish to include all other upstream columns in the output too then check this option."
                          expressionType="Notify"
                          name="OutputAllUpstreamColumns">true</property>
                        <property
                          dataType="System.Int32"
                          description="Defines how to handle empty input. By default NULL or Empty input is skipped from parsing."
                          expressionType="Notify"
                          name="EmptyInputProcessingMode"
                          typeConverter="ZappySys.Common.Data.EmptyInputProcessingMode">0</property>
                        <property
                          dataType="System.String"
                          description="Defines how to handle empty input. By default NULL or Empty input is skipped from parsing."
                          expressionType="Notify"
                          name="TreatEmptyInputAs">{ }</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum JSON records to fetch. Set this value to 0 for all records"
                          expressionType="Notify"
                          name="MaxRows">0</property>
                        <property
                          dataType="System.String"
                          description="Enter expression here to filter data.(Example:  $.Users[*].UserName ) This will fetch User names from users records"
                          expressionType="Notify"
                          name="Filter"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.Boolean"
                          description="Use this option to include parent properties (Non array) in the output along with Filtered Rows"
                          expressionType="Notify"
                          name="IncludeParentColumns">true</property>
                        <property
                          dataType="System.Boolean"
                          description="By default child and parent information is not included in the output if children not found for specified expression. For example if you want to extract all orders from all customers nodes then you can type $.Customers[*].Orders[*]. This will fetch all orders from all customers. By default customers records without orders wont be included in the output. If you want to include those customers where orders not found then check this option (Output null information for order attributes). This behavior is similar to LEFT OUTER JOIN in SQL (Left side is parent, right side is child). This option is ***resource intensive*** so only check if you really care about this behavior."
                          expressionType="Notify"
                          name="IncludeParentColumnsWhenChildMissing">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to true if you want to output parent columns which are array. By default any parent column which is an array is not included in output. See also FilterForParentColumnsWithArrayType property if you set this property"
                          expressionType="Notify"
                          name="IncludeParentColumnsWithArrayType">false</property>
                        <property
                          dataType="System.String"
                          description="Filter expression to extract value form parent"
                          expressionType="Notify"
                          name="FilterForParentColumnsWithArrayType"></property>
                        <property
                          dataType="System.String"
                          description="Prefix for parent column name. This option is only valid if you have set IncludeParentColumns=True"
                          expressionType="Notify"
                          name="ParentColumnPrefix">P_</property>
                        <property
                          dataType="System.Boolean"
                          description="Throw error if property name specified in filter expression is missing. By default it will ignore any missing property errors."
                          expressionType="Notify"
                          name="ThrowErrorIfPropertyMissing">false</property>
                        <property
                          dataType="System.Int32"
                          description="This property how many nested levels should be scanned to fetch various properties. 0=Scan all child levels."
                          expressionType="Notify"
                          name="MaxLevelsToScan">0</property>
                        <property
                          dataType="System.String"
                          description="List comma separated property names from JSON document which you want to exclude from output. Specify parent property name to exclude all child nodes."
                          expressionType="Notify"
                          name="ExcludedProperties"></property>
                        <property
                          dataType="System.String"
                          description="Property level separator used in generated property name (separator for outer properties - Above selected filter node). Use this if default separator is producing duplicate property name which is conflicting with existing name."
                          expressionType="Notify"
                          name="LevelSeparator">_</property>
                        <property
                          dataType="System.Boolean"
                          description="Enables deep array flattening for selected filtered hierarchy. When you turn on this property it will flatten each property of each array item and expose as column (e.g. If you have Filter set as $.customers[*] and for each customer you have an array of Addresses then you may see output columns like Addresses.1.City, Addresses.1.State, Addresses.2.City, Addresses.2.State .... Addresses.N.City, Addresses.N.State). You can control how many array items you want to flatten by setting MaxArrayItemsToFlatten property."
                          expressionType="Notify"
                          name="EnableArrayFlattening">false</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum number of array items to flatten. inner array flattening. Adjust this property to control how many columns being generated. This option is ignored if you set EnableArrayFlattening=false"
                          expressionType="Notify"
                          name="MaxArrayItemsToFlatten">10</property>
                        <property
                          dataType="System.String"
                          description="Specifies how custom date formatted strings are parsed when reading JSON."
                          expressionType="Notify"
                          name="DateFormatString"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies how date formatted strings, e.g. Date(1198908717056) and 2012-03-21T05:40Z, are parsed when reading JSON."
                          expressionType="Notify"
                          name="DateParseHandling"
                          typeConverter="ZappySys.Common.DateParseHandling">1</property>
                        <property
                          dataType="System.Boolean"
                          description="Indent JSON output so its easy to read."
                          expressionType="Notify"
                          name="IndentOutput">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Output as raw JSON document rather than parsing individual fields. This option is helpful if you have documents stored in a file and you want to pass them downstream as raw JSON string rather than parsing into columns."
                          expressionType="Notify"
                          name="OutputRawDocument">false</property>
                        <property
                          dataType="System.Boolean"
                          description="When this property is true then Column is converted to Row. Pivoted names will appear under  Pivot_Name column and values will appear under Pivot_Value field."
                          expressionType="Notify"
                          name="EnablePivot">false</property>
                        <property
                          dataType="System.Int32"
                          description="Array Transformation you want to apply. Useful for case when you have 2-Dimensional arrays with rows/columns in separate arrays."
                          expressionType="Notify"
                          name="ArrayTransformationType"
                          typeConverter="ZappySys.Json.ArrayTransformType">0</property>
                        <property
                          dataType="System.String"
                          description="Filter expression to use to extract column names for array transformation."
                          expressionType="Notify"
                          name="ArrayTransColumnNameFilter"></property>
                        <property
                          dataType="System.String"
                          description="Filter expression for row values (Not applicable for simple array transformation)."
                          expressionType="Notify"
                          name="ArrayTransRowValueFilter"></property>
                        <property
                          dataType="System.Boolean"
                          description="When you have 2D array but don't have column list specified in a separate array then use this option (e.g. { arr: [[10,11],[21,22]] } ). If you selected Column less array or JSON Lines option then this property means Column Names coming from First Line of array."
                          expressionType="Notify"
                          name="ArrayTransEnableCustomColumns">false</property>
                        <property
                          dataType="System.String"
                          description="When you have 2D array but don't have column list specified in a separate array then use specify column names here. Use comma separated list (e.g col1,col2,col3 ). Column name Order must match value order."
                          expressionType="Notify"
                          name="ArrayTransCustomColumns"></property>
                        <property
                          dataType="System.Int32"
                          description="Metadata scan mode controls how data type and length is determined. By default few records scanned to determine datatype/length. Changing ScanMode affects length/datatype accuracy."
                          expressionType="Notify"
                          name="MetaDataScanMode"
                          typeConverter="ZappySys.Common.Data.MetaDataScanMode">4</property>
                        <property
                          dataType="System.Int32"
                          description="Length for all string column. This option is only valid for MetaDataScanMode=Custom"
                          expressionType="Notify"
                          name="MetaDataCustomLength">1000</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.JsonParserTransform</property>
                        <property
                          dataType="System.Boolean"
                          name="EnableBigNumberHandling">false</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Inputs[JsonParserTransformInput]"
                          errorRowDisposition="FailComponent"
                          name="JsonParserTransformInput"
                          truncationRowDisposition="FailComponent">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Inputs[JsonParserTransformInput].Columns[ResponseText]"
                              cachedDataType="nText"
                              cachedName="ResponseText"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Post Contact Create Request.Outputs[Response Output].Columns[ResponseText]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Inputs[JsonParserTransformInput].Columns[Id]"
                              cachedDataType="i4"
                              cachedName="Id"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Output].Columns[Id]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].Columns[Id]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Inputs[JsonParserTransformInput].Columns[TargetOfficeName]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="TargetOfficeName"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Output].Columns[TargetOfficeName]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].Columns[TargetOfficeName]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Inputs[JsonParserTransformInput].Columns[Category]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Category"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Output].Columns[Category]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].Columns[Category]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Inputs[JsonParserTransformInput].Columns[Reference]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Reference"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Output].Columns[Reference]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].Columns[Reference]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Inputs[JsonParserTransformInput].Columns[Status]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Status"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Output].Columns[Status]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].Columns[Status]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Inputs[JsonParserTransformInput].Columns[CurrentOfficeName]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="CurrentOfficeName"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Output].Columns[CurrentOfficeName]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].Columns[CurrentOfficeName]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Inputs[JsonParserTransformInput].Columns[Title]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="9"
                              cachedName="Title"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Output].Columns[Title]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].Columns[Title]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Inputs[JsonParserTransformInput].Columns[Forename]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Forename"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Output].Columns[Forename]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].Columns[Forename]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Inputs[JsonParserTransformInput].Columns[Surname]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Surname"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Output].Columns[Surname]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].Columns[Surname]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Inputs[JsonParserTransformInput].Columns[Address1]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="8000"
                              cachedName="Address1"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Output].Columns[Address1]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].Columns[Address1]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Inputs[JsonParserTransformInput].Columns[Address2]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="8000"
                              cachedName="Address2"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Output].Columns[Address2]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].Columns[Address2]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Inputs[JsonParserTransformInput].Columns[Town]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="8000"
                              cachedName="Town"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Output].Columns[Town]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].Columns[Town]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Inputs[JsonParserTransformInput].Columns[County]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="8000"
                              cachedName="County"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Output].Columns[County]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].Columns[County]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Inputs[JsonParserTransformInput].Columns[Postcode]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="8000"
                              cachedName="Postcode"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Output].Columns[Postcode]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].Columns[Postcode]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Inputs[JsonParserTransformInput].Columns[Home]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="8000"
                              cachedName="Home"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Output].Columns[Home]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].Columns[Home]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Inputs[JsonParserTransformInput].Columns[Mobile]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="8000"
                              cachedName="Mobile"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Output].Columns[Mobile]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].Columns[Mobile]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Inputs[JsonParserTransformInput].Columns[Work]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="8000"
                              cachedName="Work"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Output].Columns[Work]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].Columns[Work]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Inputs[JsonParserTransformInput].Columns[Email]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="Email"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Output].Columns[Email]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].Columns[Email]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Inputs[JsonParserTransformInput].Columns[PriceFrom]"
                              cachedDataType="numeric"
                              cachedName="PriceFrom"
                              cachedPrecision="10"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Output].Columns[PriceFrom]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].Columns[PriceFrom]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Inputs[JsonParserTransformInput].Columns[PriceTo]"
                              cachedDataType="numeric"
                              cachedName="PriceTo"
                              cachedPrecision="10"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Output].Columns[PriceTo]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].Columns[PriceTo]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Inputs[JsonParserTransformInput].Columns[prefguid]"
                              cachedDataType="guid"
                              cachedName="prefguid"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Output].Columns[prefguid]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].Columns[prefguid]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Inputs[JsonParserTransformInput].Columns[TemplateOutput]"
                              cachedDataType="nText"
                              cachedName="TemplateOutput"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Build Contact Create.Outputs[TemplateTransformOutput].Columns[TemplateOutput]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].Columns[TemplateOutput]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Inputs[JsonParserTransformInput].Columns[StatusCode]"
                              cachedDataType="i4"
                              cachedName="StatusCode"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Post Contact Create Request.Outputs[Response Output].Columns[StatusCode]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].Columns[StatusCode]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  expressionType="Notify"
                                  name="IncludeDownStream">true</property>
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True" />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput]"
                          errorOrTruncationOperation="Error"
                          errorRowDisposition="FailComponent"
                          name="JsonParserTransformOutput"
                          truncationRowDisposition="FailComponent">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].Columns[StatusCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].Columns[StatusCode]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Inputs[JsonParserTransformInput].Columns[StatusCode]"
                              name="StatusCode" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].Columns[TemplateOutput]"
                              dataType="nText"
                              description="Template output column which will contain replaced text."
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].Columns[TemplateOutput]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Inputs[JsonParserTransformInput].Columns[TemplateOutput]"
                              name="TemplateOutput" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].Columns[prefguid]"
                              dataType="guid"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].Columns[prefguid]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Inputs[JsonParserTransformInput].Columns[prefguid]"
                              name="prefguid" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].Columns[PriceTo]"
                              dataType="numeric"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].Columns[PriceTo]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Inputs[JsonParserTransformInput].Columns[PriceTo]"
                              name="PriceTo"
                              precision="10" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].Columns[PriceFrom]"
                              dataType="numeric"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].Columns[PriceFrom]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Inputs[JsonParserTransformInput].Columns[PriceFrom]"
                              name="PriceFrom"
                              precision="10" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].Columns[Email]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].Columns[Email]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Inputs[JsonParserTransformInput].Columns[Email]"
                              name="Email" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].Columns[Work]"
                              codePage="1252"
                              dataType="str"
                              length="8000"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].Columns[Work]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Inputs[JsonParserTransformInput].Columns[Work]"
                              name="Work" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].Columns[Mobile]"
                              codePage="1252"
                              dataType="str"
                              length="8000"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].Columns[Mobile]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Inputs[JsonParserTransformInput].Columns[Mobile]"
                              name="Mobile" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].Columns[Home]"
                              codePage="1252"
                              dataType="str"
                              length="8000"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].Columns[Home]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Inputs[JsonParserTransformInput].Columns[Home]"
                              name="Home" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].Columns[Postcode]"
                              codePage="1252"
                              dataType="str"
                              length="8000"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].Columns[Postcode]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Inputs[JsonParserTransformInput].Columns[Postcode]"
                              name="Postcode" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].Columns[County]"
                              codePage="1252"
                              dataType="str"
                              length="8000"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].Columns[County]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Inputs[JsonParserTransformInput].Columns[County]"
                              name="County" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].Columns[Town]"
                              codePage="1252"
                              dataType="str"
                              length="8000"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].Columns[Town]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Inputs[JsonParserTransformInput].Columns[Town]"
                              name="Town" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].Columns[Address2]"
                              codePage="1252"
                              dataType="str"
                              length="8000"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].Columns[Address2]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Inputs[JsonParserTransformInput].Columns[Address2]"
                              name="Address2" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].Columns[Address1]"
                              codePage="1252"
                              dataType="str"
                              length="8000"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].Columns[Address1]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Inputs[JsonParserTransformInput].Columns[Address1]"
                              name="Address1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].Columns[Surname]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].Columns[Surname]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Inputs[JsonParserTransformInput].Columns[Surname]"
                              name="Surname" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].Columns[Forename]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].Columns[Forename]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Inputs[JsonParserTransformInput].Columns[Forename]"
                              name="Forename" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].Columns[Title]"
                              codePage="1252"
                              dataType="str"
                              length="9"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].Columns[Title]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Inputs[JsonParserTransformInput].Columns[Title]"
                              name="Title" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].Columns[CurrentOfficeName]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].Columns[CurrentOfficeName]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Inputs[JsonParserTransformInput].Columns[CurrentOfficeName]"
                              name="CurrentOfficeName" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].Columns[Status]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].Columns[Status]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Inputs[JsonParserTransformInput].Columns[Status]"
                              name="Status" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].Columns[Reference]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].Columns[Reference]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Inputs[JsonParserTransformInput].Columns[Reference]"
                              name="Reference" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].Columns[Category]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].Columns[Category]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Inputs[JsonParserTransformInput].Columns[Category]"
                              name="Category" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].Columns[TargetOfficeName]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].Columns[TargetOfficeName]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Inputs[JsonParserTransformInput].Columns[TargetOfficeName]"
                              name="TargetOfficeName" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].Columns[Id]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].Columns[Id]"
                              mappedColumnId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Inputs[JsonParserTransformInput].Columns[Id]"
                              name="Id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].Columns[result.etag]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].ExternalColumns[result.etag]"
                              length="72"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].Columns[result.etag]"
                              name="result.etag" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].Columns[error]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].ExternalColumns[error]"
                              length="1020"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].Columns[error]"
                              name="error" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].Columns[result.id]"
                              dataType="i4"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].ExternalColumns[result.id]"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].Columns[result.id]"
                              name="result.id" />
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].ExternalColumns[result.system_record_state]"
                              dataType="wstr"
                              length="24"
                              name="result.system_record_state" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].ExternalColumns[result.system_ctime]"
                              dataType="i8"
                              name="result.system_ctime" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].ExternalColumns[result.system_modtime]"
                              dataType="i8"
                              name="result.system_modtime" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].ExternalColumns[result.system_search_key]"
                              dataType="wstr"
                              length="36"
                              name="result.system_search_key" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].ExternalColumns[result.address]"
                              dataType="wstr"
                              length="240"
                              name="result.address" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].ExternalColumns[result.address_postal]"
                              dataType="wstr"
                              length="1020"
                              name="result.address_postal" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].ExternalColumns[result.marketing_postcode]"
                              dataType="wstr"
                              length="28"
                              name="result.marketing_postcode" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].ExternalColumns[result.marketing_enquiry_source]"
                              dataType="wstr"
                              length="1020"
                              name="result.marketing_enquiry_source" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].ExternalColumns[result.marketing_gender]"
                              dataType="wstr"
                              length="1020"
                              name="result.marketing_gender" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].ExternalColumns[result.marketing_birthday]"
                              dataType="wstr"
                              length="40"
                              name="result.marketing_birthday" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].ExternalColumns[result.notes]"
                              dataType="wstr"
                              length="1020"
                              name="result.notes" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].ExternalColumns[result.company_name]"
                              dataType="wstr"
                              length="1020"
                              name="result.company_name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].ExternalColumns[result.company_abn]"
                              dataType="wstr"
                              length="1020"
                              name="result.company_abn" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].ExternalColumns[result.website_url]"
                              dataType="wstr"
                              length="1020"
                              name="result.website_url" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].ExternalColumns[result.is_dnd]"
                              dataType="bool"
                              name="result.is_dnd" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].ExternalColumns[result.type]"
                              dataType="wstr"
                              length="24"
                              name="result.type" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].ExternalColumns[result.interest_level]"
                              dataType="wstr"
                              length="1020"
                              name="result.interest_level" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].ExternalColumns[result.last_contacted_date]"
                              dataType="wstr"
                              length="1020"
                              name="result.last_contacted_date" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].ExternalColumns[result.name_legal]"
                              dataType="wstr"
                              length="1020"
                              name="result.name_legal" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].ExternalColumns[result.name_salutation]"
                              dataType="wstr"
                              length="1020"
                              name="result.name_salutation" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].ExternalColumns[result.name_addressee]"
                              dataType="wstr"
                              length="1020"
                              name="result.name_addressee" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].ExternalColumns[result.last_contacted_at]"
                              dataType="wstr"
                              length="1020"
                              name="result.last_contacted_at" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].ExternalColumns[result.single_view_identity_id]"
                              dataType="wstr"
                              length="1020"
                              name="result.single_view_identity_id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].ExternalColumns[result.single_view_profile_id]"
                              dataType="wstr"
                              length="1020"
                              name="result.single_view_profile_id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].ExternalColumns[result.etag]"
                              dataType="wstr"
                              length="72"
                              name="result.etag" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].ExternalColumns[result.id]"
                              dataType="i8"
                              name="result.id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].ExternalColumns[result.system_owner_user.id]"
                              dataType="wstr"
                              length="20"
                              name="result.system_owner_user.id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].ExternalColumns[result.system_owner_user._name]"
                              dataType="wstr"
                              length="36"
                              name="result.system_owner_user._name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].ExternalColumns[result.system_owner_user._first_name]"
                              dataType="wstr"
                              length="20"
                              name="result.system_owner_user._first_name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].ExternalColumns[result.system_owner_user._last_name]"
                              dataType="wstr"
                              length="12"
                              name="result.system_owner_user._last_name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].ExternalColumns[result.system_owner_user._email_address]"
                              dataType="wstr"
                              length="92"
                              name="result.system_owner_user._email_address" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].ExternalColumns[result.system_modified_user.id]"
                              dataType="wstr"
                              length="20"
                              name="result.system_modified_user.id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].ExternalColumns[result.system_modified_user._name]"
                              dataType="wstr"
                              length="36"
                              name="result.system_modified_user._name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].ExternalColumns[result.system_modified_user._first_name]"
                              dataType="wstr"
                              length="20"
                              name="result.system_modified_user._first_name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].ExternalColumns[result.system_modified_user._last_name]"
                              dataType="wstr"
                              length="12"
                              name="result.system_modified_user._last_name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].ExternalColumns[result.system_modified_user._email_address]"
                              dataType="wstr"
                              length="92"
                              name="result.system_modified_user._email_address" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].ExternalColumns[result.system_created_user.id]"
                              dataType="wstr"
                              length="20"
                              name="result.system_created_user.id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].ExternalColumns[result.system_created_user._name]"
                              dataType="wstr"
                              length="36"
                              name="result.system_created_user._name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].ExternalColumns[result.system_created_user._first_name]"
                              dataType="wstr"
                              length="20"
                              name="result.system_created_user._first_name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].ExternalColumns[result.system_created_user._last_name]"
                              dataType="wstr"
                              length="12"
                              name="result.system_created_user._last_name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].ExternalColumns[result.system_created_user._email_address]"
                              dataType="wstr"
                              length="92"
                              name="result.system_created_user._email_address" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].ExternalColumns[result.smart_categories]"
                              dataType="bool"
                              name="result.smart_categories" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].ExternalColumns[result.contact_image]"
                              dataType="wstr"
                              length="1020"
                              name="result.contact_image" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].ExternalColumns[result.company_size]"
                              dataType="wstr"
                              length="1020"
                              name="result.company_size" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].ExternalColumns[result.marketing_enquiry_method]"
                              dataType="wstr"
                              length="1020"
                              name="result.marketing_enquiry_method" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].ExternalColumns[result._related.contact_emails]"
                              dataType="wstr"
                              length="808"
                              name="result._related.contact_emails" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].ExternalColumns[result._related.contact_names]"
                              dataType="wstr"
                              length="552"
                              name="result._related.contact_names" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].ExternalColumns[result._related.contact_phones]"
                              dataType="wstr"
                              length="8"
                              name="result._related.contact_phones" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].ExternalColumns[result._related.contact_tags]"
                              dataType="wstr"
                              length="8"
                              name="result._related.contact_tags" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].ExternalColumns[result._related.contact_documents]"
                              dataType="wstr"
                              length="8"
                              name="result._related.contact_documents" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].ExternalColumns[result._related.contact_mailing_lists]"
                              dataType="wstr"
                              length="8"
                              name="result._related.contact_mailing_lists" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].ExternalColumns[result._related.contact_relationships]"
                              dataType="wstr"
                              length="8"
                              name="result._related.contact_relationships" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].ExternalColumns[result._related.contact_reln_property]"
                              dataType="wstr"
                              length="8"
                              name="result._related.contact_reln_property" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].ExternalColumns[result._related.contact_reln_listing]"
                              dataType="wstr"
                              length="8"
                              name="result._related.contact_reln_listing" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].ExternalColumns[result.address_wash.present_on_lists]"
                              dataType="wstr"
                              length="8"
                              name="result.address_wash.present_on_lists" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].ExternalColumns[result.address_wash.user_override]"
                              dataType="wstr"
                              length="1020"
                              name="result.address_wash.user_override" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].ExternalColumns[result.address_wash.allow]"
                              dataType="bool"
                              name="result.address_wash.allow" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].ExternalColumns[result.address_postal_wash]"
                              dataType="wstr"
                              length="1020"
                              name="result.address_postal_wash" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].ExternalColumns[result._security_user_rights]"
                              dataType="wstr"
                              length="260"
                              name="result._security_user_rights" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].ExternalColumns[error]"
                              dataType="wstr"
                              length="1020"
                              name="error" />
                          </externalMetadataColumns>
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransform Error Output]"
                          isErrorOut="true"
                          name="JsonParserTransform Error Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransform Error Output].Columns[StatusCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransform Error Output].Columns[StatusCode]"
                              name="StatusCode" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransform Error Output].Columns[TemplateOutput]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransform Error Output].Columns[TemplateOutput]"
                              name="TemplateOutput" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransform Error Output].Columns[CurrentOfficeName]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransform Error Output].Columns[CurrentOfficeName]"
                              name="CurrentOfficeName" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransform Error Output].Columns[TargetOfficeName]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransform Error Output].Columns[TargetOfficeName]"
                              name="TargetOfficeName" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransform Error Output].Columns[Id]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransform Error Output].Columns[Id]"
                              name="Id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransform Error Output].Columns[prefguid]"
                              dataType="guid"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransform Error Output].Columns[prefguid]"
                              name="prefguid" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransform Error Output].Columns[PriceTo]"
                              dataType="numeric"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransform Error Output].Columns[PriceTo]"
                              name="PriceTo"
                              precision="10" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransform Error Output].Columns[PriceFrom]"
                              dataType="numeric"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransform Error Output].Columns[PriceFrom]"
                              name="PriceFrom"
                              precision="10" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransform Error Output].Columns[Email]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransform Error Output].Columns[Email]"
                              name="Email" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransform Error Output].Columns[Work]"
                              codePage="1252"
                              dataType="str"
                              length="8000"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransform Error Output].Columns[Work]"
                              name="Work" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransform Error Output].Columns[Mobile]"
                              codePage="1252"
                              dataType="str"
                              length="8000"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransform Error Output].Columns[Mobile]"
                              name="Mobile" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransform Error Output].Columns[Home]"
                              codePage="1252"
                              dataType="str"
                              length="8000"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransform Error Output].Columns[Home]"
                              name="Home" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransform Error Output].Columns[Postcode]"
                              codePage="1252"
                              dataType="str"
                              length="8000"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransform Error Output].Columns[Postcode]"
                              name="Postcode" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransform Error Output].Columns[County]"
                              codePage="1252"
                              dataType="str"
                              length="8000"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransform Error Output].Columns[County]"
                              name="County" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransform Error Output].Columns[Town]"
                              codePage="1252"
                              dataType="str"
                              length="8000"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransform Error Output].Columns[Town]"
                              name="Town" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransform Error Output].Columns[Address2]"
                              codePage="1252"
                              dataType="str"
                              length="8000"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransform Error Output].Columns[Address2]"
                              name="Address2" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransform Error Output].Columns[Address1]"
                              codePage="1252"
                              dataType="str"
                              length="8000"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransform Error Output].Columns[Address1]"
                              name="Address1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransform Error Output].Columns[Surname]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransform Error Output].Columns[Surname]"
                              name="Surname" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransform Error Output].Columns[Forename]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransform Error Output].Columns[Forename]"
                              name="Forename" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransform Error Output].Columns[Title]"
                              codePage="1252"
                              dataType="str"
                              length="9"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransform Error Output].Columns[Title]"
                              name="Title" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransform Error Output].Columns[Status]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransform Error Output].Columns[Status]"
                              name="Status" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransform Error Output].Columns[Reference]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransform Error Output].Columns[Reference]"
                              name="Reference" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransform Error Output].Columns[Category]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransform Error Output].Columns[Category]"
                              name="Category" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransform Error Output].Columns[result.etag]"
                              dataType="wstr"
                              length="72"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransform Error Output].Columns[result.etag]"
                              name="result.etag" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransform Error Output].Columns[error]"
                              dataType="wstr"
                              length="1020"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransform Error Output].Columns[error]"
                              name="error" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransform Error Output].Columns[result.id]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransform Error Output].Columns[result.id]"
                              name="result.id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransform Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransform Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransform Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransform Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransform Error Output].Columns[ErrorColumnName]"
                              codePage="1252"
                              dataType="str"
                              length="128"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransform Error Output].Columns[ErrorColumnName]"
                              name="ErrorColumnName" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransform Error Output].Columns[ErrorMessage]"
                              dataType="wstr"
                              length="1024"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransform Error Output].Columns[ErrorMessage]"
                              name="ErrorMessage" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransform Error Output].Columns[ErrorRawData]"
                              dataType="nText"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransform Error Output].Columns[ErrorRawData]"
                              name="ErrorRawData" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Create Contacts\Trash Destination"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Trash Destination; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="The trash destination is used to create dummy destination which ends data path without any processing."
                      name="Trash Destination"
                      version="2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.String"
                          description="File path where you want to save data"
                          expressionType="Notify"
                          name="FilePath"></property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates if you want to save input data to comma separated text file"
                          expressionType="Notify"
                          name="SaveDataToFile">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Append data to file"
                          expressionType="Notify"
                          name="Append">false</property>
                        <property
                          dataType="System.String"
                          description="RowSeparator"
                          expressionType="Notify"
                          name="RowSeparator">{NEWLINE}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether you want to overwrite target file if exists"
                          expressionType="Notify"
                          name="OverwriteFileIfExists">true</property>
                        <property
                          dataType="System.String"
                          description="ColumnSeparator"
                          expressionType="Notify"
                          name="ColumnSeparator">,</property>
                        <property
                          dataType="System.Boolean"
                          description="SupportUnicode"
                          expressionType="Notify"
                          name="SupportUnicode">true</property>
                        <property
                          dataType="System.Boolean"
                          description="ColumnNamesInFirstRow"
                          expressionType="Notify"
                          name="ColumnNamesInFirstRow">true</property>
                        <property
                          dataType="System.Boolean"
                          description="QuoteDataIfNeeded"
                          expressionType="Notify"
                          name="QuoteDataIfNeeded">true</property>
                        <property
                          dataType="System.String"
                          description="Date time format string for any column with DT_DBDATETIME, DT_DBDATETIME2 or DB_DATE format"
                          expressionType="Notify"
                          name="DateTimeFormat">yyyy-MM-dd HH:mm:ss</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.TrashDestination</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Create Contacts\Trash Destination.Inputs[TrashDestinationInput]"
                          hasSideEffects="true"
                          name="TrashDestinationInput">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Create Contacts\Trash Destination 1"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Trash Destination; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="The trash destination is used to create dummy destination which ends data path without any processing."
                      name="Trash Destination 1"
                      version="2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.String"
                          description="File path where you want to save data"
                          expressionType="Notify"
                          name="FilePath"></property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates if you want to save input data to comma separated text file"
                          expressionType="Notify"
                          name="SaveDataToFile">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Append data to file"
                          expressionType="Notify"
                          name="Append">false</property>
                        <property
                          dataType="System.String"
                          description="RowSeparator"
                          expressionType="Notify"
                          name="RowSeparator">{NEWLINE}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether you want to overwrite target file if exists"
                          expressionType="Notify"
                          name="OverwriteFileIfExists">true</property>
                        <property
                          dataType="System.String"
                          description="ColumnSeparator"
                          expressionType="Notify"
                          name="ColumnSeparator">,</property>
                        <property
                          dataType="System.Boolean"
                          description="SupportUnicode"
                          expressionType="Notify"
                          name="SupportUnicode">true</property>
                        <property
                          dataType="System.Boolean"
                          description="ColumnNamesInFirstRow"
                          expressionType="Notify"
                          name="ColumnNamesInFirstRow">true</property>
                        <property
                          dataType="System.Boolean"
                          description="QuoteDataIfNeeded"
                          expressionType="Notify"
                          name="QuoteDataIfNeeded">true</property>
                        <property
                          dataType="System.String"
                          description="Date time format string for any column with DT_DBDATETIME, DT_DBDATETIME2 or DB_DATE format"
                          expressionType="Notify"
                          name="DateTimeFormat">yyyy-MM-dd HH:mm:ss</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.TrashDestination</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Create Contacts\Trash Destination 1.Inputs[TrashDestinationInput]"
                          hasSideEffects="true"
                          name="TrashDestinationInput">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Create Contacts\Update DB Imp Req Table"
                      componentClassID="Microsoft.OLEDBCommand"
                      contactInfo="OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
                      description="Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time."
                      name="Update DB Imp Req Table"
                      usesDispositions="true"
                      version="2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">0</property>
                        <property
                          dataType="System.String"
                          description="The SQL command to be executed."
                          expressionType="Notify"
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">Update ContactAdhocImport202102
Set ContactId = ?
Where Id = ?</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Iterate Offices\Sequence Container\Create Contacts\Update DB Imp Req Table.Connections[OleDbConnection]"
                          connectionManagerID="{1ACC4D99-A047-44CB-AAAD-088F42F69A23}:external"
                          connectionManagerRefId="Project.ConnectionManagers[Rosie]"
                          description="The OLE DB runtime connection used to access the database."
                          name="OleDbConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Create Contacts\Update DB Imp Req Table.Inputs[OLE DB Command Input]"
                          errorOrTruncationOperation="Command Execution"
                          errorRowDisposition="FailComponent"
                          hasSideEffects="true"
                          name="OLE DB Command Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Update DB Imp Req Table.Inputs[OLE DB Command Input].Columns[Id]"
                              cachedDataType="i4"
                              cachedName="Id"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Create Contacts\Update DB Imp Req Table.Inputs[OLE DB Command Input].ExternalColumns[Param_1]"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].Columns[Id]" />
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Update DB Imp Req Table.Inputs[OLE DB Command Input].Columns[result.id]"
                              cachedDataType="i4"
                              cachedName="result.id"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Create Contacts\Update DB Imp Req Table.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput].Columns[result.id]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Update DB Imp Req Table.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                              dataType="i4"
                              name="Param_0">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                                  name="DBParamInfoFlags">81</property>
                              </properties>
                            </externalMetadataColumn>
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Update DB Imp Req Table.Inputs[OLE DB Command Input].ExternalColumns[Param_1]"
                              dataType="i4"
                              name="Param_1">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                                  name="DBParamInfoFlags">17</property>
                              </properties>
                            </externalMetadataColumn>
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Create Contacts\Update DB Imp Req Table.Outputs[OLE DB Command Output]"
                          exclusionGroup="1"
                          name="OLE DB Command Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Create Contacts\Update DB Imp Req Table.Inputs[OLE DB Command Input]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Create Contacts\Update DB Imp Req Table.Outputs[OLE DB Command Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="OLE DB Command Error Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Create Contacts\Update DB Imp Req Table.Inputs[OLE DB Command Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Update DB Imp Req Table.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Update DB Imp Req Table.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Contacts\Update DB Imp Req Table.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Contacts\Update DB Imp Req Table.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                  </components>
                  <paths>
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Create Contacts.Paths[Case 1]"
                      endId="Package\Iterate Offices\Sequence Container\Create Contacts\Update DB Imp Req Table.Inputs[OLE DB Command Input]"
                      name="Case 1"
                      startId="Package\Iterate Offices\Sequence Container\Create Contacts\Conditional Split.Outputs[Case 1]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Create Contacts.Paths[Conditional Split Default Output]"
                      endId="Package\Iterate Offices\Sequence Container\Create Contacts\Trash Destination 1.Inputs[TrashDestinationInput]"
                      name="Conditional Split Default Output"
                      startId="Package\Iterate Offices\Sequence Container\Create Contacts\Conditional Split.Outputs[Conditional Split Default Output]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Create Contacts.Paths[JsonParserTransformOutput]"
                      endId="Package\Iterate Offices\Sequence Container\Create Contacts\Conditional Split.Inputs[Conditional Split Input]"
                      name="JsonParserTransformOutput"
                      startId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Outputs[JsonParserTransformOutput]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Create Contacts.Paths[OLE DB Source Output]"
                      endId="Package\Iterate Offices\Sequence Container\Create Contacts\Build Contact Create.Inputs[TemplateTransformInput]"
                      name="OLE DB Source Output"
                      startId="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL.Outputs[OLE DB Source Output]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Create Contacts.Paths[Response Output]"
                      endId="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId.Inputs[JsonParserTransformInput]"
                      name="Response Output"
                      startId="Package\Iterate Offices\Sequence Container\Create Contacts\Post Contact Create Request.Outputs[Response Output]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Create Contacts.Paths[TemplateTransformOutput]"
                      endId="Package\Iterate Offices\Sequence Container\Create Contacts\Post Contact Create Request.Inputs[WebApiDestinationInput]"
                      name="TemplateTransformOutput"
                      startId="Package\Iterate Offices\Sequence Container\Create Contacts\Build Contact Create.Outputs[TemplateTransformOutput]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Create Contacts.Paths[WebApiDestination Error Output]"
                      endId="Package\Iterate Offices\Sequence Container\Create Contacts\Trash Destination.Inputs[TrashDestinationInput]"
                      name="WebApiDestination Error Output"
                      startId="Package\Iterate Offices\Sequence Container\Create Contacts\Post Contact Create Request.Outputs[WebApiDestination Error Output]" />
                  </paths>
                </pipeline>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign"
              DTS:CreationName="Microsoft.Pipeline"
              DTS:Description="Data Flow Task"
              DTS:DTSID="{5C572B6E-653F-4224-8244-2739931D5ECD}"
              DTS:ExecutableType="Microsoft.Pipeline"
              DTS:LocaleID="-1"
              DTS:ObjectName="Create Network Leads Campaign"
              DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:ObjectData>
                <pipeline
                  version="1">
                  <components>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign\Check for error"
                      componentClassID="Microsoft.ConditionalSplit"
                      contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
                      name="Check for error"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign\Check for error.Inputs[Conditional Split Input]"
                          description="Input to the Conditional Split Transformation"
                          name="Conditional Split Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign\Check for error.Inputs[Conditional Split Input].Columns[P_error]"
                              cachedDataType="wstr"
                              cachedLength="1020"
                              cachedName="P_error"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign\Create Network Leads Campaign.Outputs[JsonSourceOutput].Columns[P_error]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign\Check for error.Outputs[Create]"
                          description="Output 1 of the Conditional Split Transformation"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          exclusionGroup="1"
                          name="Create"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign\Check for error.Inputs[Conditional Split Input]"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                              name="Expression">[ISNULL](#{Package\Iterate Offices\Sequence Container\Create Network Leads Campaign\Create Network Leads Campaign.Outputs[JsonSourceOutput].Columns[P_error]}) ==  TRUE </property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the friendly version of the expression. This expression version uses column names."
                              expressionType="Notify"
                              name="FriendlyExpression">ISNULL(P_error) ==  TRUE </property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                              name="EvaluationOrder">0</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign\Check for error.Outputs[Error]"
                          description="Output 2 of the Conditional Split Transformation"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          exclusionGroup="1"
                          name="Error"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign\Check for error.Inputs[Conditional Split Input]"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                              name="Expression">[ISNULL](#{Package\Iterate Offices\Sequence Container\Create Network Leads Campaign\Create Network Leads Campaign.Outputs[JsonSourceOutput].Columns[P_error]}) ==  FALSE </property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the friendly version of the expression. This expression version uses column names."
                              expressionType="Notify"
                              name="FriendlyExpression">ISNULL(P_error) ==  FALSE </property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                              name="EvaluationOrder">1</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign\Check for error.Outputs[Conditional Split Default Output]"
                          description="Default Output of the Conditional Split Transformation"
                          exclusionGroup="1"
                          name="Conditional Split Default Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign\Check for error.Inputs[Conditional Split Input]">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              name="IsDefaultOut">true</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign\Check for error.Outputs[Conditional Split Error Output]"
                          description="Error Output of the Conditional Split Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Conditional Split Error Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign\Check for error.Inputs[Conditional Split Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign\Check for error.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign\Check for error.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign\Check for error.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign\Check for error.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign\Check if exists"
                      componentClassID="Microsoft.ConditionalSplit"
                      contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
                      name="Check if exists"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign\Check if exists.Inputs[Conditional Split Input]"
                          description="Input to the Conditional Split Transformation"
                          name="Conditional Split Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign\Check if exists.Inputs[Conditional Split Input].Columns[id]"
                              cachedDataType="i8"
                              cachedName="id"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign\Create Network Leads Campaign.Outputs[JsonSourceOutput].Columns[id]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign\Check if exists.Outputs[Exists]"
                          description="Output 1 of the Conditional Split Transformation"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          exclusionGroup="1"
                          name="Exists"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign\Check if exists.Inputs[Conditional Split Input]"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                              name="Expression">[ISNULL](#{Package\Iterate Offices\Sequence Container\Create Network Leads Campaign\Create Network Leads Campaign.Outputs[JsonSourceOutput].Columns[id]}) ==  FALSE </property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the friendly version of the expression. This expression version uses column names."
                              expressionType="Notify"
                              name="FriendlyExpression">ISNULL(id) ==  FALSE </property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                              name="EvaluationOrder">0</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign\Check if exists.Outputs[Doesnt Exist]"
                          description="Output 2 of the Conditional Split Transformation"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          exclusionGroup="1"
                          name="Doesnt Exist"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign\Check if exists.Inputs[Conditional Split Input]"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                              name="Expression">[ISNULL](#{Package\Iterate Offices\Sequence Container\Create Network Leads Campaign\Create Network Leads Campaign.Outputs[JsonSourceOutput].Columns[id]}) ==  TRUE </property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the friendly version of the expression. This expression version uses column names."
                              expressionType="Notify"
                              name="FriendlyExpression">ISNULL(id) ==  TRUE </property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                              name="EvaluationOrder">1</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign\Check if exists.Outputs[Conditional Split Default Output]"
                          description="Default Output of the Conditional Split Transformation"
                          exclusionGroup="1"
                          name="Conditional Split Default Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign\Check if exists.Inputs[Conditional Split Input]">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              name="IsDefaultOut">true</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign\Check if exists.Outputs[Conditional Split Error Output]"
                          description="Error Output of the Conditional Split Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Conditional Split Error Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign\Check if exists.Inputs[Conditional Split Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign\Check if exists.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign\Check if exists.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign\Check if exists.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign\Check if exists.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign\Create Network Leads Campaign"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="JSON Source (REST API or File); ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="The JSON source is used to read data from JSON files, RESTful Web Service or direct JSON String."
                      name="Create Network Leads Campaign"
                      usesDispositions="true"
                      version="33">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">3</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for any numeric data types"
                          expressionType="Notify"
                          name="TreatBlankNumberAsNull">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for bool data types"
                          expressionType="Notify"
                          name="TreatBlankBoolAsNull">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for any date/time data types"
                          expressionType="Notify"
                          name="TreatBlankDateAsNull">true</property>
                        <property
                          dataType="System.Int32"
                          description="Encoding of source file"
                          expressionType="Notify"
                          name="Encoding"
                          typeConverter="ZappySys.Common.EncodingType">0</property>
                        <property
                          dataType="System.String"
                          description="Character set for text (e.g. utf-8 )"
                          expressionType="Notify"
                          name="CharacterSet"></property>
                        <property
                          dataType="System.Int32"
                          description="Defines how to read the JSON file or direct string"
                          expressionType="Notify"
                          name="AccessMode"
                          typeConverter="ZappySys.Common.Ssis.FileValueAccessMode">3</property>
                        <property
                          dataType="System.String"
                          description="Defines how to read the JSON file or direct string"
                          expressionType="Notify"
                          name="DirectValue"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.String"
                          description="Variable name which holds JSON string"
                          expressionType="Notify"
                          name="ValueVariable"
                          typeConverter="ZappySys.PowerPack.Converters.VariableEditor,ZappySys.PowerPack130.UI,Version=1.0.0.0,Culture=neutral,PublicKeyToken=1903265a93eae502"></property>
                        <property
                          dataType="System.String"
                          description="Variable name which holds data file path or url"
                          expressionType="Notify"
                          name="PathVariable"
                          typeConverter="ZappySys.PowerPack.Converters.VariableEditor,ZappySys.PowerPack130.UI,Version=1.0.0.0,Culture=neutral,PublicKeyToken=1903265a93eae502">User::RexAPIWebURL</property>
                        <property
                          dataType="System.String"
                          description="JSON file file path (e.g. c:\data\myfile.json) or pattern to process multiple files (e.g. c:\data\*.json)"
                          expressionType="Notify"
                          name="DirectPath"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.Boolean"
                          description="Include files from sub folders too."
                          expressionType="Notify"
                          name="Recursive">false</property>
                        <property
                          dataType="System.Boolean"
                          description="By default process stops with error if specified local file is not found. Set this property to true if you wish to continue rather than throwing file not found error."
                          expressionType="Notify"
                          name="ContinueOnFileNotFoundError">false</property>
                        <property
                          dataType="System.String"
                          description="Set this if you want to set custom Http headers. You may use variable anywhere in the header value using syntax {{User::YourVarName}}. Syntax of Header key value pair is : &amp;lt;request&amp;gt;&amp;lt;header&amp;gt;&amp;lt;name&amp;gt;x-myheader-1&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;AAA&amp;lt;/value&amp;gt;&amp;lt;/header&amp;gt; &amp;lt;header&amp;gt;&amp;lt;name&amp;gt;x-myheader-2&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;BBB&amp;lt;/value&amp;gt;&amp;lt;/header&amp;gt;&amp;lt;/request&amp;gt;"
                          expressionType="Notify"
                          name="HttpHeaders">&lt;request&gt;&lt;header&gt;&lt;name&gt;Accept&lt;/name&gt;&lt;value&gt;*/*&lt;/value&gt;&lt;/header&gt;&lt;header&gt;&lt;name&gt;Cache-Control&lt;/name&gt;&lt;value&gt;no-cache&lt;/value&gt;&lt;/header&gt;&lt;/request&gt;</property>
                        <property
                          dataType="System.String"
                          description="User defined data you wish to send along with your HTTP Request (e.g. Upload file data, Form POST data). Usually you have to set content-type of your data but if you select RequestMethod=POST then system will automatically set content-type=application/x-www-form-urlencoded."
                          expressionType="Notify"
                          name="HttpRequestData">
{
    "method": "Campaigns::createFromTemplate",
    "args": {
        "template_id": 16,
        "data": {
            "name": "Network Leads",
            "status_id": "in_progress",
            "start_date": "",
            "end_date": ""
        }
    },
    "strip_response_prefixes": true,
    "token": "{{User::RexToken}}"
}</property>
                        <property
                          dataType="System.String"
                          description="Http Web Request Method (e.g. POST, GET, PUT, LIST, DELETE...). Refer your API documentation if you are not sure which method you have to use."
                          expressionType="Notify"
                          name="HttpRequestMethod">POST</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies content type for data you wish to POST. If you select Default option then system default content type will be used (i.e. application/x-www-form-urlencoded). If you specify Content-Type header along with this option then header value takes precedence."
                          expressionType="Notify"
                          name="HttpRequestContentType"
                          typeConverter="ZappySys.Common.Web.HttpRequestContentType">0</property>
                        <property
                          dataType="System.Boolean"
                          description="Check this option if you want to upload file(s) (i.e. POST RAW file data) or send data using Multi-Part encoding method (i.e. Content-Type: multipart/form-data). Multi-Part request allows you to mix key/value and upload files in same request. On the other hand raw upload allows only single file upload (without any key/value) &#xA;&#xA;==== Raw Upload (Content-Type: application/octet-stream) =====   &#xA;To upload single file in raw mode check this option and specify full file path starting with @ sign in the Body (e.g.  @c:\data\myfile.zip ) &#xA;&#xA;==== Form-Data / Multipart Upload (Content-Type: multipart/form-data) =====   &#xA;To treat your Request data as multi part fields you must specify key/value pairs separated by new lines into RequestData field (i.e. Body). Each key value pair is entered on new-line and key/value are separated using equal sign (=). Preceding and trailing spaces are ignored also blank lines are ignored. &#xA;If field value has some any special character(s) then use escape sequence (e.g. For NewLine: \r\n, For Tab: \t, For at (@): \@). When value of any field starts with at sign (@) its automatically treated as File you want to upload. By default file content type is determined based on extension however you can supply content type manually for any field using this way [ fieldname.Content-Type=some content type ]. In below example we have supplied Content-Type for file2 and SomeField1, all other fields are using default content-type.&#xA;See below Example of uploading multiple files along with additional fields.&#xA;&#xA;file1=@c:\data\Myfile1.txt&#xA;file2=@c:\data\Myfile2.json&#xA;file2.Content-Type=application/json&#xA;SomeField1=aaaaaaa&#xA;SomeField1.Content-Type=text/plain&#xA;SomeField2=12345&#xA;SomeFieldWithNewLineAndTab=This is line1\r\nThis is line2\r\nThis is \ttab \ttab \ttab&#xA;SomeFieldStartingWithAtSign=\@MyTwitterHandle&#xA;"
                          expressionType="Notify"
                          name="IsMultiPartUpload">false</property>
                        <property
                          dataType="System.Int32"
                          description="Data format coming from HTTP Response. This is useful for example when you have OData service and you want to automatically consume all pages of data using odata.netUrl. Setting JsonFormat=Odata will automatically do it for you. This setting is only applicable if JSON is coming from HTTP WebRequest."
                          expressionType="Notify"
                          name="JsonFormat"
                          typeConverter="ZappySys.Json.JsonFormat">0</property>
                        <property
                          dataType="System.Boolean"
                          description="Enable custom proxy settings (If this is not set then system default proxy will be used. To disable proxy totally uncheck this option and check DoNotUseDefaultProxy option if available)"
                          expressionType="Notify"
                          name="UseProxy">false</property>
                        <property
                          dataType="System.String"
                          description="Web URL of Proxy server (including port  if necessary). [e.g. http://myproxyserver:8080/]"
                          expressionType="Notify"
                          name="ProxyUrl"></property>
                        <property
                          dataType="System.Boolean"
                          description="Enable passing userid and password to proxy server"
                          expressionType="Notify"
                          name="UseProxyCreds">false</property>
                        <property
                          dataType="System.String"
                          description="Proxy username"
                          expressionType="Notify"
                          name="ProxyUserName"></property>
                        <property
                          dataType="System.String"
                          description="Proxy password"
                          expressionType="Notify"
                          name="ProxyPassword"></property>
                        <property
                          dataType="System.String"
                          description="If Service response support pagination using some sort of next url attribute then specify which attribute name in JSON Response string which holds next url. If no attribute found or its null then component will stop fetching next resultset. Example: $.pagingInfo.nextUrl"
                          expressionType="Notify"
                          name="NextUrlAttribute"></property>
                        <property
                          dataType="System.String"
                          description="If Service response support pagination using some sort of prev/next url attribute then specify which previous link attribute name from JSON Response string which holds previous url."
                          expressionType="Notify"
                          name="PrevUrlAttribute"></property>
                        <property
                          dataType="System.String"
                          description="Specifies value for NextUrlAttribute or StopIndicatorAttribute which indicates last page to stop pagination. If you have specified StopIndicatorAttribute then you can use Regular expression rather than static value to indicate last page. To use regular expression value of this property must start with regex= prefix. Example : regex=FALSE|N  (assuming you set StopIndicatorAttribute to something like $.hasMore)"
                          expressionType="Notify"
                          name="NextUrlStopIndicator"></property>
                        <property
                          dataType="System.String"
                          description="Attribute name or expression for attribute which can be used as stop indicator (e.g. hasmore --or-- $.pagination.hasmore). If this value is blank then NextUrlAttribute is used"
                          expressionType="Notify"
                          name="StopIndicatorAttribute"></property>
                        <property
                          dataType="System.String"
                          description="If you want to include certain text (or parameters) at the end of Next url then specify this attribute (e.g. &amp;format=json). Another common usecase of this property is to supply pagination token to next Page URL. You can also use &lt;%nextlink%&gt; or  &lt;%nextlink_encoded%&gt; placeholder (e.g. &amp;cursor=&lt;%nextlink_encoded%&gt; )"
                          expressionType="Notify"
                          name="NextUrlSuffix"></property>
                        <property
                          dataType="System.Int32"
                          description="This property indicates total number of milliseconds you want to wait before sending next request. This option allows you to adjust how many API calls can be made within certain timeframe. If your API Service has no limit then set this option to zero"
                          expressionType="Notify"
                          name="NextUrlWait">0</property>
                        <property
                          dataType="System.Boolean"
                          description="If this option is true then component will continue without exception on 404 error (Url not found). This allows you to consume data gracefully."
                          expressionType="Notify"
                          name="ContinueOnUrlNotFoundError">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Continue when any type of exception occurs during http request"
                          expressionType="Notify"
                          name="ContineOnAnyError">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Continue on error when specified substring found in response"
                          expressionType="Notify"
                          name="ContineOnErrorForMessage">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Continue on error when specified status code returned from web server"
                          expressionType="Notify"
                          name="ContineOnErrorForStatusCode">false</property>
                        <property
                          dataType="System.Boolean"
                          description="When error occurs no data is returned. Use this option to get content eventhough error occurs. When this option is checked you can't use [continue on error when specific string found in response] option"
                          expressionType="Notify"
                          name="ConsumeResponseOnError">false</property>
                        <property
                          dataType="System.Int32"
                          description="Status code to match when error occurs and ContineOnErrorForStatusCode option is true. If Response status code matches to this code then task continues to run"
                          expressionType="Notify"
                          name="ErrorStatusCodeToMatch">404</property>
                        <property
                          dataType="System.String"
                          description="Error substring to match when error occurs and ContineOnErrorForMessage option is true. If Response status code matches to this code then task continues to run"
                          expressionType="Notify"
                          name="ErrorSubstringToMatch"></property>
                        <property
                          dataType="System.String"
                          description="Cookie Container can be used to maintain state between multiple web requests. Example: You can login to site like wordpress and then extract any private page content by simply passing authentication cookies using this variable."
                          expressionType="Notify"
                          name="CookieContainerVariable"></property>
                        <property
                          dataType="System.Int32"
                          description="Http request Timeout in seconds. Set this to 0 if you want to use system default value (i.e. 100 seconds)"
                          expressionType="Notify"
                          name="RequestTimeout">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies which security protocol is supported for HTTPS communication. Using this option you can enable legacy protocol or enforce to use latest version of security protocol (Note: TLS 1.2 is only supported in SSIS 2014 or Higher)."
                          expressionType="Notify"
                          name="SecurityProtocol"
                          typeConverter="ZappySys.PowerPack.Common.HttpsSecurityProtocolType">0</property>
                        <property
                          dataType="System.Boolean"
                          description="Enable support for gzip or deflate compression. When you check this option compressed response automatically de-compressed saving bandwidth. This option is only valid if web server supports compressed response stream. Check your API documentation for more information."
                          expressionType="Notify"
                          name="EnableCompressionSupport">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Ignore SSL certificate related errors. Example: if you getting SSL/TLS errors because of certificate expired or certificate is not from trusted authority or certificate is self-signed. By checking this option you will not get SSL/TLS error."
                          expressionType="Notify"
                          name="IgnoreCertificateErrors">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Allow unsecure ciphers/suites and curves for SSLS/TLS communication. Use this option to communicate with web servers which needs legacy / unsecured ciphers support. This option is only trigged when you change default SSL/TLS Version on advanced settings tab."
                          expressionType="Notify"
                          name="AllowUnsecureSuite">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Use connection to pass credentials for authentication (e.g. Use UserID/Password or Use OAuth Protocol for token based approach)"
                          expressionType="Notify"
                          name="UseConnection">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specified how you want to loop through multiple pages returned by REST API."
                          expressionType="Notify"
                          name="PagingMode"
                          typeConverter="ZappySys.Common.RestApiPagingMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="If you wish to pass extracted pagination token or current page number in the body of next request then set this option to true. You can use [$pagetoken$] and [$pagetoken$] placeholders anywhere in the Body where you wish to insert extracted Page token. You must set encoded token you can use &lt;%nextlink_encoded%&gt; inside SuffixForNextUrl Property. If you dont use SuffixForNextUrl then raw nextLink or Token will be inserted inside the body. If you dont specify [$pagetoken$] placeholder in the body then NextPage Token will be appended at the end. NextPage Token is extracted by filter expression specified using property NextUrlSuffix"
                          expressionType="Notify"
                          name="EnablePageTokenForBody">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this to true if you wish to specify different URL, Header, Body or Filter for first page and next page (i.e. Paginated response). Some APIs like Amazon MWS, NetSuite, Zuora) you may need to set this to true."
                          expressionType="Notify"
                          name="HasDifferentNextPageInfo">false</property>
                        <property
                          dataType="System.String"
                          description="When HasDifferentNextPageInfo=true you can set this property to indicate first page and next page. You can specify different URL, Header, Body or Filter for first page and next page (i.e. Paginated response). Use [$tag$] as placeholder anywhere in the URL, Header, Body or Filter and at runtime system will replace it with correct value (first page or next page value). Syntax to specify placeholder for first page vs next page is like a connectionstring url=FirstPageValue|NextPageValue;header=FirstPageValue|NextPageValue;body=FirstPageValue|NextPageValue;filter=FirstPageValue|NextPageValue; You can use one or more key/value pairs to make things dynamic (e.g. url, header, body or filter)  .For example if you have pagination in your API and First URL is http://abc.com/api/items/get and to get more records you have to call http://abc.com/api/items/getNext then you can use [$tag$] as placeholder in the URL http://abc.com/api/items/[$tag$] and specify this property with first page tag and next page tag as url=get|getNext  (Tags are separated using vertical bar). "
                          expressionType="Notify"
                          name="PagePlaceholders"></property>
                        <property
                          dataType="System.String"
                          description="Use this property to set request body fragment for first page. HasDifferentNextPageInfo must be set to true to use this property."
                          expressionType="Notify"
                          name="FirstPageBodyPart"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.String"
                          description="Use this property to set request body fragment for any request after first request. HasDifferentNextPageInfo must be set to true to use this property."
                          expressionType="Notify"
                          name="NextPageBodyPart"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.String"
                          description="Expression to extract Maximum pages to loop through. Some APIs don't stop pagination and keep returning last page data when you try to read data after last page. Specify expression (e.g. $.page_count ) to read total pages to loop through using this property."
                          expressionType="Notify"
                          name="PagingMaxPagesExpr"></property>
                        <property
                          dataType="System.String"
                          description="Expression to extract Maximum records to loop through. Some APIs don't stop pagination and keep returning last page data when you try to read data after last page. Specify expression (e.g. $.total_rows ) to read total pages to loop through using this property. This setting is ignored if you set PagingMaxPagesExpr."
                          expressionType="Notify"
                          name="PagingMaxRowsExpr"></property>
                        <property
                          dataType="System.String"
                          description="When you enable PagingMaxRowsExpr (end pagination based on MaxRowCount) then you need to count records coming in each response. This expression extract all rows found under specified expression (e.g. $.orders[*] if all records found under orders node)."
                          expressionType="Notify"
                          name="PagingMaxRowsDataPathExpr"></property>
                        <property
                          dataType="System.String"
                          description="e.g. Type page_num if URL looks like this =&gt; http://abc.com/?page_num=1&amp;sort=true  (page number via query string)&#xA;--or-- Type &lt;%page%&gt; if page number is inside URL path like this =&gt; http://abc.com/1/?sort=true  (e.g. replace page number in url with placeholder http://abc.com/&lt;%page%&gt;/?sort=true)&#xA;Page number will be incremented by one for next URL until last page is reached or [Max Page Number] is reached"
                          expressionType="Notify"
                          name="PageNumberAttributeNameInUrl"></property>
                        <property
                          dataType="System.Int32"
                          description="Maximum page number until which auto increment is allowed. Type zero for no limit. Next URL contains next page number (increment by one) until last page is detected or [Max Page Number] limit is reached."
                          expressionType="Notify"
                          name="MaxPageNumber">0</property>
                        <property
                          dataType="System.String"
                          description="Variable name which will hold starting page number. This is ignored if you useing parameter name from query string to indicate page number."
                          expressionType="Notify"
                          name="StartPageNumberVariable"></property>
                        <property
                          dataType="System.Int32"
                          description="Page counter increment. By default next page is incremented by one if this value is zero. You can also enter negative number if you want to decrease page counter."
                          expressionType="Notify"
                          name="PageNumberIncrement">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specified how you want detect last page."
                          expressionType="Notify"
                          name="PagingEndStrategy"
                          typeConverter="ZappySys.Common.UrlPagingEndDetectionStrategy">3</property>
                        <property
                          dataType="System.Boolean"
                          description="Condition result to compare to detect last page. Set this property to True if you want detect last page if condition is true else set this to False."
                          expressionType="Notify"
                          name="LastPageWhenConditionEqualsTo">true</property>
                        <property
                          dataType="System.Int32"
                          description="Minimum bytes expected from response."
                          expressionType="Notify"
                          name="ResponseMinBytes">0</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum bytes from response."
                          expressionType="Notify"
                          name="ResponseMaxBytes">3</property>
                        <property
                          dataType="System.String"
                          description="Expected error message sub string from response."
                          expressionType="Notify"
                          name="ResponseErrorString">not found</property>
                        <property
                          dataType="System.Int32"
                          description="Expected status code from response when page number you trying to access not found."
                          expressionType="Notify"
                          name="ResponseStatusCode">404</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum JSON records to fetch. Set this value to 0 for all records"
                          expressionType="Notify"
                          name="MaxRows">0</property>
                        <property
                          dataType="System.String"
                          description="Enter expression here to filter data.(Example:  $.Users[*].UserName ) This will fetch User names from users records"
                          expressionType="Notify"
                          name="Filter"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">$.result</property>
                        <property
                          dataType="System.Boolean"
                          description="Use this option to include parent properties (Non array) in the output along with Filtered Rows"
                          expressionType="Notify"
                          name="IncludeParentColumns">true</property>
                        <property
                          dataType="System.Boolean"
                          description="By default child and parent information is not included in the output if children not found for specified expression. For example if you want to extract all orders from all customers nodes then you can type $.Customers[*].Orders[*]. This will fetch all orders from all customers. By default customers records without orders wont be included in the output. If you want to include those customers where orders not found then check this option (Output null information for order attributes). This behavior is similar to LEFT OUTER JOIN in SQL (Left side is parent, right side is child). This option is ***resource intensive*** so only check if you really care about this behavior."
                          expressionType="Notify"
                          name="IncludeParentColumnsWhenChildMissing">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to true if you want to output parent columns which are array. By default any parent column which is an array is not included in output. See also FilterForParentColumnsWithArrayType property if you set this property"
                          expressionType="Notify"
                          name="IncludeParentColumnsWithArrayType">false</property>
                        <property
                          dataType="System.String"
                          description="Filter expression to extract value form parent"
                          expressionType="Notify"
                          name="FilterForParentColumnsWithArrayType"></property>
                        <property
                          dataType="System.String"
                          description="Prefix for parent column name. This option is only valid if you have set IncludeParentColumns=True"
                          expressionType="Notify"
                          name="ParentColumnPrefix">P_</property>
                        <property
                          dataType="System.Boolean"
                          description="Throw error if property name specified in filter expression is missing. By default it will ignore any missing property errors."
                          expressionType="Notify"
                          name="ThrowErrorIfPropertyMissing">false</property>
                        <property
                          dataType="System.Int32"
                          description="This property how many nested levels should be scanned to fetch various properties. 0=Scan all child levels."
                          expressionType="Notify"
                          name="MaxLevelsToScan">0</property>
                        <property
                          dataType="System.String"
                          description="List comma separated property names from JSON document which you want to exclude from output. Specify parent property name to exclude all child nodes."
                          expressionType="Notify"
                          name="ExcludedProperties"></property>
                        <property
                          dataType="System.String"
                          description="Property level separator used in generated property name (separator for outer properties - Above selected filter node). Use this if default separator is producing duplicate property name which is conflicting with existing name."
                          expressionType="Notify"
                          name="LevelSeparator">_</property>
                        <property
                          dataType="System.Boolean"
                          description="Enables deep array flattening for selected filtered hierarchy. When you turn on this property it will flatten each property of each array item and expose as column (e.g. If you have Filter set as $.customers[*] and for each customer you have an array of Addresses then you may see output columns like Addresses.1.City, Addresses.1.State, Addresses.2.City, Addresses.2.State .... Addresses.N.City, Addresses.N.State). You can control how many array items you want to flatten by setting MaxArrayItemsToFlatten property."
                          expressionType="Notify"
                          name="EnableArrayFlattening">false</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum number of array items to flatten. inner array flattening. Adjust this property to control how many columns being generated. This option is ignored if you set EnableArrayFlattening=false"
                          expressionType="Notify"
                          name="MaxArrayItemsToFlatten">10</property>
                        <property
                          dataType="System.Int32"
                          description="Compression format for source file (e.g. gzip, zip)"
                          expressionType="Notify"
                          name="FileCompressionType"
                          typeConverter="ZappySys.Common.FileCompressionType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Array Transformation you want to apply. Useful for case when you have 2-Dimensional arrays with rows/columns in separate arrays."
                          expressionType="Notify"
                          name="ArrayTransformationType"
                          typeConverter="ZappySys.Json.ArrayTransformType">0</property>
                        <property
                          dataType="System.String"
                          description="Filter expression to use to extract column names for array transformation."
                          expressionType="Notify"
                          name="ArrayTransColumnNameFilter"></property>
                        <property
                          dataType="System.String"
                          description="Filter expression for row values (Not applicable for simple array transformation)."
                          expressionType="Notify"
                          name="ArrayTransRowValueFilter"></property>
                        <property
                          dataType="System.Boolean"
                          description="When you have 2D array but don't have column list specified in a separate array then use this option (e.g. { arr: [[10,11],[21,22]] } ). If you selected Column less array or JSON Lines option then this property means Column Names coming from First Line of array."
                          expressionType="Notify"
                          name="ArrayTransEnableCustomColumns">false</property>
                        <property
                          dataType="System.String"
                          description="When you have 2D array but don't have column list specified in a separate array then use specify column names here. Use comma separated list (e.g col1,col2,col3 ). Column name Order must match value order."
                          expressionType="Notify"
                          name="ArrayTransCustomColumns"></property>
                        <property
                          dataType="System.String"
                          description="Specifies how custom date formatted strings are parsed when reading JSON."
                          expressionType="Notify"
                          name="DateFormatString"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies how date formatted strings, e.g. Date(1198908717056) and 2012-03-21T05:40Z, are parsed when reading JSON."
                          expressionType="Notify"
                          name="DateParseHandling"
                          typeConverter="ZappySys.Common.DateParseHandling">1</property>
                        <property
                          dataType="System.Boolean"
                          description="Indent JSON output so its easy to read."
                          expressionType="Notify"
                          name="IndentOutput">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Output as raw JSON document rather than parsing individual fields. This option is helpful if you have documents stored in a file and you want to pass them downstream as raw JSON string rather than parsing into columns."
                          expressionType="Notify"
                          name="OutputRawDocument">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to true if you want to output FilePath. This option is ignored when you consume DirectValue or data from Url rather than local files. Output column name will be __FilePath"
                          expressionType="Notify"
                          name="OutputFilePath">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to true if you want to output FileName. This option is ignored when you consume DirectValue or data from Url rather than local files. Output column name will be __FileName"
                          expressionType="Notify"
                          name="OutputFileName">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to true if you want to move processed file to archive folder."
                          expressionType="Notify"
                          name="EnableArchiveFile">false</property>
                        <property
                          dataType="System.String"
                          description="Folder path where you want to move processed file."
                          expressionType="Notify"
                          name="ArchiveFolderPath"></property>
                        <property
                          dataType="System.Boolean"
                          description="Folder path where you want to move processed file."
                          expressionType="Notify"
                          name="OverwriteFileInArchiveFolder">false</property>
                        <property
                          dataType="System.String"
                          description="File naming convention for archived file. By default it will same name as original source file processed. But you can control naming format using {%name%} and {%ext%} placeholders. e.g. {%name%}_processed{%ext%} or {%name%}{%ext%}.{{System::ContainerStartTime,yyyyMMdd_HHmmss_fff}}"
                          expressionType="Notify"
                          name="ArchiveFileNamingConvention"></property>
                        <property
                          dataType="System.Boolean"
                          description="When this property is true then Column is converted to Row. Pivoted names will appear under  Pivot_Name column and values will appear under Pivot_Value field."
                          expressionType="Notify"
                          name="EnablePivot">false</property>
                        <property
                          dataType="System.Boolean"
                          description="When this option is checked, system allows to parse large number (Higher than Int64) in JSON document (i.e. { id: 76000009353950433247780 } ). If you do not turn on this option then it may throw error if large number is encountered. This option is SLOW because it has to perform additional checks in order to avoid Large number overflow error so do not turn on unless you getting Large number error."
                          expressionType="Notify"
                          name="EnableBigNumberHandling">false</property>
                        <property
                          dataType="System.Int32"
                          description="Metadata scan mode controls how data type and length is determined. By default few records scanned to determine datatype/length. Changing ScanMode affects length/datatype accuracy."
                          expressionType="Notify"
                          name="MetaDataScanMode"
                          typeConverter="ZappySys.Common.Data.MetaDataScanMode">4</property>
                        <property
                          dataType="System.Int32"
                          description="Length for all string column. This option is only valid for MetaDataScanMode=Custom"
                          expressionType="Notify"
                          name="MetaDataCustomLength">1000</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.JsonSource</property>
                      </properties>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign\Create Network Leads Campaign.Outputs[JsonSourceOutput]"
                          errorOrTruncationOperation="Error"
                          errorRowDisposition="FailComponent"
                          name="JsonSourceOutput"
                          truncationRowDisposition="FailComponent">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign\Create Network Leads Campaign.Outputs[JsonSourceOutput].Columns[P_error]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign\Create Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[P_error]"
                              length="1020"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign\Create Network Leads Campaign.Outputs[JsonSourceOutput].Columns[P_error]"
                              name="P_error" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign\Create Network Leads Campaign.Outputs[JsonSourceOutput].Columns[id]"
                              dataType="i8"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign\Create Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[id]"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign\Create Network Leads Campaign.Outputs[JsonSourceOutput].Columns[id]"
                              name="id" />
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign\Create Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[P_error]"
                              dataType="wstr"
                              length="1020"
                              name="P_error" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign\Create Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[system_record_state]"
                              dataType="wstr"
                              length="24"
                              name="system_record_state" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign\Create Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[system_ctime]"
                              dataType="i8"
                              name="system_ctime" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign\Create Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[system_modtime]"
                              dataType="i8"
                              name="system_modtime" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign\Create Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[system_created_from_template_name]"
                              dataType="wstr"
                              length="92"
                              name="system_created_from_template_name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign\Create Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[name]"
                              dataType="wstr"
                              length="52"
                              name="name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign\Create Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[start_date]"
                              dataType="wstr"
                              length="1020"
                              name="start_date" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign\Create Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[end_date]"
                              dataType="wstr"
                              length="1020"
                              name="end_date" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign\Create Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[etag]"
                              dataType="wstr"
                              length="60"
                              name="etag" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign\Create Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[system_owner_user.id]"
                              dataType="wstr"
                              length="20"
                              name="system_owner_user.id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign\Create Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[system_owner_user.name]"
                              dataType="wstr"
                              length="36"
                              name="system_owner_user.name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign\Create Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[system_owner_user.first_name]"
                              dataType="wstr"
                              length="20"
                              name="system_owner_user.first_name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign\Create Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[system_owner_user.last_name]"
                              dataType="wstr"
                              length="12"
                              name="system_owner_user.last_name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign\Create Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[system_owner_user.email_address]"
                              dataType="wstr"
                              length="92"
                              name="system_owner_user.email_address" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign\Create Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[system_modified_user.id]"
                              dataType="wstr"
                              length="20"
                              name="system_modified_user.id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign\Create Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[system_modified_user.name]"
                              dataType="wstr"
                              length="36"
                              name="system_modified_user.name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign\Create Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[system_modified_user.first_name]"
                              dataType="wstr"
                              length="20"
                              name="system_modified_user.first_name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign\Create Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[system_modified_user.last_name]"
                              dataType="wstr"
                              length="12"
                              name="system_modified_user.last_name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign\Create Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[system_modified_user.email_address]"
                              dataType="wstr"
                              length="92"
                              name="system_modified_user.email_address" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign\Create Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[system_created_user.id]"
                              dataType="wstr"
                              length="20"
                              name="system_created_user.id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign\Create Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[system_created_user.name]"
                              dataType="wstr"
                              length="36"
                              name="system_created_user.name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign\Create Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[system_created_user.first_name]"
                              dataType="wstr"
                              length="20"
                              name="system_created_user.first_name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign\Create Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[system_created_user.last_name]"
                              dataType="wstr"
                              length="12"
                              name="system_created_user.last_name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign\Create Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[system_created_user.email_address]"
                              dataType="wstr"
                              length="92"
                              name="system_created_user.email_address" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign\Create Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[security_user_rights]"
                              dataType="wstr"
                              length="260"
                              name="security_user_rights" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign\Create Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[type.id]"
                              dataType="wstr"
                              length="20"
                              name="type.id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign\Create Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[type.text]"
                              dataType="wstr"
                              length="20"
                              name="type.text" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign\Create Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[status.id]"
                              dataType="wstr"
                              length="44"
                              name="status.id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign\Create Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[status.text]"
                              dataType="wstr"
                              length="44"
                              name="status.text" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign\Create Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[archive_reason]"
                              dataType="wstr"
                              length="1020"
                              name="archive_reason" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign\Create Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[system_created_from_template.name]"
                              dataType="wstr"
                              length="92"
                              name="system_created_from_template.name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign\Create Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[system_created_from_template.type.id]"
                              dataType="wstr"
                              length="20"
                              name="system_created_from_template.type.id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign\Create Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[system_created_from_template.type.text]"
                              dataType="wstr"
                              length="20"
                              name="system_created_from_template.type.text" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign\Create Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[system_created_from_template.id]"
                              dataType="i8"
                              name="system_created_from_template.id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign\Create Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[related.campaign_member_statuses]"
                              dataType="nText"
                              name="related.campaign_member_statuses" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign\Create Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[id]"
                              dataType="i8"
                              name="id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign\Create Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[__FileName]"
                              dataType="wstr"
                              length="600"
                              name="__FileName" />
                          </externalMetadataColumns>
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign\Create Network Leads Campaign.Outputs[JsonSource Error Output]"
                          isErrorOut="true"
                          name="JsonSource Error Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign\Create Network Leads Campaign.Outputs[JsonSource Error Output].Columns[P_error]"
                              dataType="wstr"
                              length="1020"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign\Create Network Leads Campaign.Outputs[JsonSource Error Output].Columns[P_error]"
                              name="P_error" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign\Create Network Leads Campaign.Outputs[JsonSource Error Output].Columns[id]"
                              dataType="i8"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign\Create Network Leads Campaign.Outputs[JsonSource Error Output].Columns[id]"
                              name="id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign\Create Network Leads Campaign.Outputs[JsonSource Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign\Create Network Leads Campaign.Outputs[JsonSource Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign\Create Network Leads Campaign.Outputs[JsonSource Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign\Create Network Leads Campaign.Outputs[JsonSource Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign\Create Network Leads Campaign.Outputs[JsonSource Error Output].Columns[ErrorColumnName]"
                              codePage="1252"
                              dataType="str"
                              length="128"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign\Create Network Leads Campaign.Outputs[JsonSource Error Output].Columns[ErrorColumnName]"
                              name="ErrorColumnName" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign\Create Network Leads Campaign.Outputs[JsonSource Error Output].Columns[ErrorMessage]"
                              dataType="wstr"
                              length="1024"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign\Create Network Leads Campaign.Outputs[JsonSource Error Output].Columns[ErrorMessage]"
                              name="ErrorMessage" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign\Set CampaignId"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Set Variable Transform; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="Set Variable with multiple operations such as Set, Increment, Replace, Append"
                      name="Set CampaignId"
                      version="2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.Int32"
                          description="Action you like to perform. If you set any action with ReplacePlaceholder then you must use placeholder &lt;%value%&gt; where you like to insert upstream value. Use variable placeholder (e.g. {{User::MyVar}} ) if you wish to replace value from variable. Example for placeholder use: { tags : [&lt;%value%&gt;] , Package: &quot;{{System::PackageName}}&quot; }"
                          expressionType="Notify"
                          name="VariableSetMode"
                          typeConverter="ZappySys.PowerPack.Common.VariableSetMode">0</property>
                        <property
                          dataType="System.String"
                          description="Name of variable you want to set (e.g. User::vMyData)"
                          expressionType="Notify"
                          name="VariableToSet"
                          typeConverter="ZappySys.PowerPack.Converters.VariableEditor,ZappySys.PowerPack130.UI,Version=1.0.0.0,Culture=neutral,PublicKeyToken=1903265a93eae502">User::CampaignId</property>
                        <property
                          dataType="System.Int32"
                          description="Number to add in previous variable value (This number can be -ve or +ve)"
                          expressionType="Notify"
                          name="IncrementBy">1</property>
                        <property
                          dataType="System.String"
                          description="Separator to use for Append mode (not valid for other mode). You can use \r\n for new line, \t for tab, \n for unix style new line."
                          expressionType="Notify"
                          name="RowSeparator">\r\n</property>
                        <property
                          dataType="System.String"
                          description="Separator to use for last row (Only valid of ."
                          expressionType="Notify"
                          name="LastRowSeparator"></property>
                        <property
                          dataType="System.String"
                          description="Header string to use for Append mode."
                          expressionType="Notify"
                          name="Header"></property>
                        <property
                          dataType="System.String"
                          description="Footer string to use for Append mode."
                          expressionType="Notify"
                          name="Footer"></property>
                        <property
                          dataType="System.Boolean"
                          description="By default SSIS doesn't allow to assign NULL value to SSIS Variable. Turn on this setting to use custom value for NULL. Set CustomValueForNull as well to use custom value for NULL"
                          expressionType="Notify"
                          name="UseCustomValueForNull">false</property>
                        <property
                          dataType="System.String"
                          description="If you set UseCustomValueForNull=true then this Custom Value will be used when NULL value is detected as input. If you leave CustomValueForNull blank then we will change NULL string to Blank, NULL Int32,Int64,Decimal,Double use 0"
                          expressionType="Notify"
                          name="CustomValueForNull"></property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.SetVariableTransform</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign\Set CampaignId.Inputs[SetVariableTransformInput]"
                          name="SetVariableTransformInput">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign\Set CampaignId.Inputs[SetVariableTransformInput].Columns[id]"
                              cachedDataType="i8"
                              cachedName="id"
                              lineageId="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign\Create Network Leads Campaign.Outputs[JsonSourceOutput].Columns[id]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign\Set CampaignId.Outputs[SetVariableTransformOutput]"
                          errorOrTruncationOperation="Error"
                          name="SetVariableTransformOutput"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign\Set CampaignId.Inputs[SetVariableTransformInput]">
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign\Trash Destination"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Trash Destination; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="The trash destination is used to create dummy destination which ends data path without any processing."
                      name="Trash Destination"
                      version="2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.String"
                          description="File path where you want to save data"
                          expressionType="Notify"
                          name="FilePath"></property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates if you want to save input data to comma separated text file"
                          expressionType="Notify"
                          name="SaveDataToFile">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Append data to file"
                          expressionType="Notify"
                          name="Append">false</property>
                        <property
                          dataType="System.String"
                          description="RowSeparator"
                          expressionType="Notify"
                          name="RowSeparator">{NEWLINE}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether you want to overwrite target file if exists"
                          expressionType="Notify"
                          name="OverwriteFileIfExists">true</property>
                        <property
                          dataType="System.String"
                          description="ColumnSeparator"
                          expressionType="Notify"
                          name="ColumnSeparator">,</property>
                        <property
                          dataType="System.Boolean"
                          description="SupportUnicode"
                          expressionType="Notify"
                          name="SupportUnicode">true</property>
                        <property
                          dataType="System.Boolean"
                          description="ColumnNamesInFirstRow"
                          expressionType="Notify"
                          name="ColumnNamesInFirstRow">true</property>
                        <property
                          dataType="System.Boolean"
                          description="QuoteDataIfNeeded"
                          expressionType="Notify"
                          name="QuoteDataIfNeeded">true</property>
                        <property
                          dataType="System.String"
                          description="Date time format string for any column with DT_DBDATETIME, DT_DBDATETIME2 or DB_DATE format"
                          expressionType="Notify"
                          name="DateTimeFormat">yyyy-MM-dd HH:mm:ss</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.TrashDestination</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign\Trash Destination.Inputs[TrashDestinationInput]"
                          hasSideEffects="true"
                          name="TrashDestinationInput">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign\Trash Destination 1"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Trash Destination; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="The trash destination is used to create dummy destination which ends data path without any processing."
                      name="Trash Destination 1"
                      version="2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.String"
                          description="File path where you want to save data"
                          expressionType="Notify"
                          name="FilePath"></property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates if you want to save input data to comma separated text file"
                          expressionType="Notify"
                          name="SaveDataToFile">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Append data to file"
                          expressionType="Notify"
                          name="Append">false</property>
                        <property
                          dataType="System.String"
                          description="RowSeparator"
                          expressionType="Notify"
                          name="RowSeparator">{NEWLINE}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether you want to overwrite target file if exists"
                          expressionType="Notify"
                          name="OverwriteFileIfExists">true</property>
                        <property
                          dataType="System.String"
                          description="ColumnSeparator"
                          expressionType="Notify"
                          name="ColumnSeparator">,</property>
                        <property
                          dataType="System.Boolean"
                          description="SupportUnicode"
                          expressionType="Notify"
                          name="SupportUnicode">true</property>
                        <property
                          dataType="System.Boolean"
                          description="ColumnNamesInFirstRow"
                          expressionType="Notify"
                          name="ColumnNamesInFirstRow">true</property>
                        <property
                          dataType="System.Boolean"
                          description="QuoteDataIfNeeded"
                          expressionType="Notify"
                          name="QuoteDataIfNeeded">true</property>
                        <property
                          dataType="System.String"
                          description="Date time format string for any column with DT_DBDATETIME, DT_DBDATETIME2 or DB_DATE format"
                          expressionType="Notify"
                          name="DateTimeFormat">yyyy-MM-dd HH:mm:ss</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.TrashDestination</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign\Trash Destination 1.Inputs[TrashDestinationInput]"
                          hasSideEffects="true"
                          name="TrashDestinationInput">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign\Trash Destination 2"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Trash Destination; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="The trash destination is used to create dummy destination which ends data path without any processing."
                      name="Trash Destination 2"
                      version="2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.String"
                          description="File path where you want to save data"
                          expressionType="Notify"
                          name="FilePath"></property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates if you want to save input data to comma separated text file"
                          expressionType="Notify"
                          name="SaveDataToFile">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Append data to file"
                          expressionType="Notify"
                          name="Append">false</property>
                        <property
                          dataType="System.String"
                          description="RowSeparator"
                          expressionType="Notify"
                          name="RowSeparator">{NEWLINE}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether you want to overwrite target file if exists"
                          expressionType="Notify"
                          name="OverwriteFileIfExists">true</property>
                        <property
                          dataType="System.String"
                          description="ColumnSeparator"
                          expressionType="Notify"
                          name="ColumnSeparator">,</property>
                        <property
                          dataType="System.Boolean"
                          description="SupportUnicode"
                          expressionType="Notify"
                          name="SupportUnicode">true</property>
                        <property
                          dataType="System.Boolean"
                          description="ColumnNamesInFirstRow"
                          expressionType="Notify"
                          name="ColumnNamesInFirstRow">true</property>
                        <property
                          dataType="System.Boolean"
                          description="QuoteDataIfNeeded"
                          expressionType="Notify"
                          name="QuoteDataIfNeeded">true</property>
                        <property
                          dataType="System.String"
                          description="Date time format string for any column with DT_DBDATETIME, DT_DBDATETIME2 or DB_DATE format"
                          expressionType="Notify"
                          name="DateTimeFormat">yyyy-MM-dd HH:mm:ss</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.TrashDestination</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign\Trash Destination 2.Inputs[TrashDestinationInput]"
                          hasSideEffects="true"
                          name="TrashDestinationInput">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                    </component>
                  </components>
                  <paths>
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign.Paths[Create]"
                      endId="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign\Trash Destination 1.Inputs[TrashDestinationInput]"
                      name="Create"
                      startId="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign\Check for error.Outputs[Create]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign.Paths[Doesnt Exist]"
                      endId="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign\Check for error.Inputs[Conditional Split Input]"
                      name="Doesnt Exist"
                      startId="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign\Check if exists.Outputs[Doesnt Exist]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign.Paths[Error]"
                      endId="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign\Trash Destination 2.Inputs[TrashDestinationInput]"
                      name="Error"
                      startId="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign\Check for error.Outputs[Error]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign.Paths[Exists]"
                      endId="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign\Set CampaignId.Inputs[SetVariableTransformInput]"
                      name="Exists"
                      startId="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign\Check if exists.Outputs[Exists]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign.Paths[JsonSourceOutput]"
                      endId="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign\Check if exists.Inputs[Conditional Split Input]"
                      name="JsonSourceOutput"
                      startId="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign\Create Network Leads Campaign.Outputs[JsonSourceOutput]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign.Paths[SetVariableTransformOutput]"
                      endId="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign\Trash Destination.Inputs[TrashDestinationInput]"
                      name="SetVariableTransformOutput"
                      startId="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign\Set CampaignId.Outputs[SetVariableTransformOutput]" />
                  </paths>
                </pipeline>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Iterate Offices\Sequence Container\Email Auth Failure"
              DTS:CreationName="ZappySys.HtmlEmailTask"
              DTS:Description="Email Auth Failure"
              DTS:DTSID="{0C70D76F-AE1F-48EC-84C6-BF9186D75643}"
              DTS:ExecutableType="ZappySys.HtmlEmailTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Email Auth Failure"
              DTS:TaskContact="HTML Email Task; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <HtmlEmailTask
                  SmtpConnection="SMTP"
                  IsHtmlEmail="True"
                  DefaultStyle="&#xA;&lt;style type=&quot;text/css&quot;&gt;&#xA;body,div,p,span,td,th,table {&#xA; font-family: Helvetica, Arial, sans-serif;&#xA; font-size: 10pt; &#xA;}&#xA;h1,h2,h3,h4,h5{&#xA;font-family: Helvetica, Arial, sans-serif;&#xA;}&#xA;&#xA;table { &#xA; border-collapse: &#xA; collapse; border-spacing: 0; &#xA;}&#xA;&#xA;tr.odd    {background-color: #cccccc}&#xA;tr.even   {background-color: #fafafa}&#xA;td, th { border: 1px solid #bbb;padding: 5 5 5 5} &#xA;th { background: #F3F3F3;  font-weight: bold;}&#xA;&lt;/style&gt;&#xA;&#xA;"
                  Subject="Error occured in {{System::PackageName}}"
                  From="alerts@spicerhaart.co.uk"
                  To="{{User::PackageErrorEmail}}"
                  Cc=""
                  ReplyTo=""
                  Bcc=""
                  Attachments=""
                  EmailPriority="High"
                  MessageSourceType="Direct"
                  MessageDirectValue="&lt;b&gt;Failed to get Authorization Key&lt;/b&gt;&lt;p /&gt;&#xA;&#xA;&lt;p&gt; Response Code =&gt; {{User::ResponseAuthCode}} &lt;p /&gt;&#xA;&#xA;"
                  MessageFileConnection=""
                  MessageVariable=""
                  LogLevel="Normal"
                  PrefixTimestamp="False" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Iterate Offices\Sequence Container\Get Auth Key"
              DTS:CreationName="ZappySys.RestApiTask"
              DTS:Description="ZS REST API Task"
              DTS:DTSID="{0BD0B28C-3D85-4302-AA0B-8A276BA86816}"
              DTS:ExecutableType="ZappySys.RestApiTask"
              DTS:FailPackageOnFailure="True"
              DTS:LocaleID="-1"
              DTS:ObjectName="Get Auth Key"
              DTS:TaskContact="REST API Task; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <RestApiTask
                  RequestAccessMode="DirectUrl"
                  RequestUrlVariable=""
                  EnableStatusCheck="False"
                  StatusCheckMaxWaitSeconds="0"
                  StatusFieldFilterType="None"
                  StatusFieldFilterExpr=""
                  StatusCheckIterationWaitSeconds="0"
                  StatusCheckForFailedValue="False"
                  StatusSuccessValue=""
                  StatusContinueValue=""
                  StatusFailedValue=""
                  IsMultiPartUpload="False"
                  AddMultiPartPostamble="False"
                  PreventAutoRedirect="False"
                  RequestTimeoutMs="0"
                  SecurityProtocol="Default"
                  EnableCompressionSupport="True"
                  AllowUnsecureSuite="False"
                  IgnoreCertificateErrors="False"
                  RequestUrl="{{User::RexAPIWebURL}}"
                  RequestUrlConnection=""
                  RequestMethod="POST"
                  RequestContentType="ApplicationJson"
                  OverrideConnectionUrl="False"
                  RequestHeaders="&lt;request&gt;&lt;header&gt;&lt;name&gt;Accept&lt;/name&gt;&lt;value&gt;*/*&lt;/value&gt;&lt;/header&gt;&lt;header&gt;&lt;name&gt;Cache-Control&lt;/name&gt;&lt;value&gt;no-cache&lt;/value&gt;&lt;/header&gt;&lt;/request&gt;"
                  RequestData="{&#xA;&quot;method&quot;:&quot;Authentication::login&quot;,&#xA;&quot;args&quot;:{&#xA;&quot;email&quot;:&quot;{{User::PackageUser}}&quot;,&#xA;&quot;password&quot;:&quot;{{User::PackagePassword}}&quot;,&#xA;&quot;account_id&quot;:&quot;{{User::RexAccountID}}&quot;,&#xA;&quot;application&quot;:&quot;rex&quot;&#xA;}&#xA;}"
                  SaveResponse="True"
                  SaveResponseStatusCode="True"
                  ResponseAccessMode="Variable"
                  SaveAsBinary="False"
                  ResponseDataFilePath=""
                  ResponseHeaderMappings="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-16&quot;?&gt;&lt;ArrayOfKeyValueMapping xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot;&gt;&lt;KeyValueMapping&gt;&lt;Key&gt;Transfer-Encoding&lt;/Key&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;/KeyValueMapping&gt;&lt;KeyValueMapping&gt;&lt;Key&gt;Connection&lt;/Key&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;/KeyValueMapping&gt;&lt;KeyValueMapping&gt;&lt;Key&gt;Access-Control-Allow-Origin&lt;/Key&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;/KeyValueMapping&gt;&lt;KeyValueMapping&gt;&lt;Key&gt;Access-Control-Allow-Headers&lt;/Key&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;/KeyValueMapping&gt;&lt;KeyValueMapping&gt;&lt;Key&gt;Access-Control-Allow-Methods&lt;/Key&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;/KeyValueMapping&gt;&lt;KeyValueMapping&gt;&lt;Key&gt;Access-Control-Max-Age&lt;/Key&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;/KeyValueMapping&gt;&lt;KeyValueMapping&gt;&lt;Key&gt;Vary&lt;/Key&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;/KeyValueMapping&gt;&lt;KeyValueMapping&gt;&lt;Key&gt;Content-Encoding&lt;/Key&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;/KeyValueMapping&gt;&lt;KeyValueMapping&gt;&lt;Key&gt;Content-Type&lt;/Key&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;/KeyValueMapping&gt;&lt;KeyValueMapping&gt;&lt;Key&gt;Date&lt;/Key&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;/KeyValueMapping&gt;&lt;KeyValueMapping&gt;&lt;Key&gt;Server&lt;/Key&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;/KeyValueMapping&gt;&lt;/ArrayOfKeyValueMapping&gt;"
                  ResponseCookieMappings="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-16&quot;?&gt;&lt;ArrayOfKeyValueMapping xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; /&gt;"
                  CookieContainerVariable=""
                  ConvertXmlToJson="False"
                  ResponseDataVariable="User::RexToken"
                  ResponseStatusCodeVariable="User::ResponseAuthCode"
                  ResponseContentType="Json"
                  ResponseContentFilter="$.result"
                  ResponseCharset=""
                  ValidateResponse="False"
                  ValidationRules="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-16&quot;?&gt;&lt;ResponseValidationSetting xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot;&gt;&lt;MatchAny&gt;false&lt;/MatchAny&gt;&lt;Rules&gt;&lt;ResponseValidationRule xsi:type=&quot;StatusCodeValidationRule&quot;&gt;&lt;Enabled&gt;false&lt;/Enabled&gt;&lt;Operator&gt;Eq&lt;/Operator&gt;&lt;StatusCode&gt;200&lt;/StatusCode&gt;&lt;/ResponseValidationRule&gt;&lt;ResponseValidationRule xsi:type=&quot;ContentValidationRule&quot;&gt;&lt;Enabled&gt;false&lt;/Enabled&gt;&lt;Operator&gt;Eq&lt;/Operator&gt;&lt;Value /&gt;&lt;/ResponseValidationRule&gt;&lt;ResponseValidationRule xsi:type=&quot;HeaderValidationRule&quot;&gt;&lt;Enabled&gt;false&lt;/Enabled&gt;&lt;Operator&gt;Eq&lt;/Operator&gt;&lt;KeyName /&gt;&lt;Value /&gt;&lt;DataType&gt;String&lt;/DataType&gt;&lt;/ResponseValidationRule&gt;&lt;/Rules&gt;&lt;/ResponseValidationSetting&gt;"
                  ConsumeResponseOnError="False"
                  ContineOnAnyError="False"
                  ContineOnErrorForMessage="False"
                  ContineOnErrorForStatusCode="False"
                  ErrorStatusCodeToMatch="404"
                  MatchForEqual="True"
                  ErrorSubstringToMatch=""
                  ContineOn404Error="False"
                  SaveErrorFlagToVariable="False"
                  ErrorFlagVariableName=""
                  LogLevel="Normal"
                  PrefixTimestamp="False" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status"
              DTS:CreationName="Microsoft.Pipeline"
              DTS:Description="Data Flow Task"
              DTS:DTSID="{e4a53130-c342-46e6-b02d-5b2a3b912322}"
              DTS:ExecutableType="Microsoft.Pipeline"
              DTS:LocaleID="-1"
              DTS:ObjectName="Search for Campaign Status"
              DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:ObjectData>
                <pipeline
                  version="1">
                  <components>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Check for error"
                      componentClassID="Microsoft.ConditionalSplit"
                      contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
                      name="Check for error"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Check for error.Inputs[Conditional Split Input]"
                          description="Input to the Conditional Split Transformation"
                          name="Conditional Split Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Check for error.Inputs[Conditional Split Input].Columns[P_error]"
                              cachedDataType="wstr"
                              cachedLength="1020"
                              cachedName="P_error"
                              lineageId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].Columns[P_error]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Check for error.Outputs[Create]"
                          description="Output 1 of the Conditional Split Transformation"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          exclusionGroup="1"
                          name="Create"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Check for error.Inputs[Conditional Split Input]"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                              name="Expression">[ISNULL](#{Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].Columns[P_error]}) ==  TRUE </property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the friendly version of the expression. This expression version uses column names."
                              expressionType="Notify"
                              name="FriendlyExpression">ISNULL(P_error) ==  TRUE </property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                              name="EvaluationOrder">0</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Check for error.Outputs[Error]"
                          description="Output 2 of the Conditional Split Transformation"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          exclusionGroup="1"
                          name="Error"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Check for error.Inputs[Conditional Split Input]"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                              name="Expression">[ISNULL](#{Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].Columns[P_error]}) ==  FALSE </property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the friendly version of the expression. This expression version uses column names."
                              expressionType="Notify"
                              name="FriendlyExpression">ISNULL(P_error) ==  FALSE </property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                              name="EvaluationOrder">1</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Check for error.Outputs[Conditional Split Default Output]"
                          description="Default Output of the Conditional Split Transformation"
                          exclusionGroup="1"
                          name="Conditional Split Default Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Check for error.Inputs[Conditional Split Input]">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              name="IsDefaultOut">true</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Check for error.Outputs[Conditional Split Error Output]"
                          description="Error Output of the Conditional Split Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Conditional Split Error Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Check for error.Inputs[Conditional Split Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Check for error.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Check for error.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Check for error.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Check for error.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Check if exists"
                      componentClassID="Microsoft.ConditionalSplit"
                      contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
                      name="Check if exists"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Check if exists.Inputs[Conditional Split Input]"
                          description="Input to the Conditional Split Transformation"
                          name="Conditional Split Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Check if exists.Inputs[Conditional Split Input].Columns[id]"
                              cachedDataType="i8"
                              cachedName="id"
                              lineageId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].Columns[id]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Check if exists.Outputs[Exists]"
                          description="Output 1 of the Conditional Split Transformation"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          exclusionGroup="1"
                          name="Exists"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Check if exists.Inputs[Conditional Split Input]"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                              name="Expression">[ISNULL](#{Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].Columns[id]}) ==  FALSE </property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the friendly version of the expression. This expression version uses column names."
                              expressionType="Notify"
                              name="FriendlyExpression">ISNULL(id) ==  FALSE </property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                              name="EvaluationOrder">0</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Check if exists.Outputs[Doesnt Exist]"
                          description="Output 2 of the Conditional Split Transformation"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          exclusionGroup="1"
                          name="Doesnt Exist"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Check if exists.Inputs[Conditional Split Input]"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                              name="Expression">[ISNULL](#{Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].Columns[id]}) ==  TRUE </property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the friendly version of the expression. This expression version uses column names."
                              expressionType="Notify"
                              name="FriendlyExpression">ISNULL(id) ==  TRUE </property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                              name="EvaluationOrder">1</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Check if exists.Outputs[Conditional Split Default Output]"
                          description="Default Output of the Conditional Split Transformation"
                          exclusionGroup="1"
                          name="Conditional Split Default Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Check if exists.Inputs[Conditional Split Input]">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              name="IsDefaultOut">true</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Check if exists.Outputs[Conditional Split Error Output]"
                          description="Error Output of the Conditional Split Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Conditional Split Error Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Check if exists.Inputs[Conditional Split Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Check if exists.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Check if exists.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Check if exists.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Check if exists.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="JSON Source (REST API or File); ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="The JSON source is used to read data from JSON files, RESTful Web Service or direct JSON String."
                      name="Search For Network Leads Campaign"
                      usesDispositions="true"
                      version="33">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">3</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for any numeric data types"
                          expressionType="Notify"
                          name="TreatBlankNumberAsNull">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for bool data types"
                          expressionType="Notify"
                          name="TreatBlankBoolAsNull">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for any date/time data types"
                          expressionType="Notify"
                          name="TreatBlankDateAsNull">true</property>
                        <property
                          dataType="System.Int32"
                          description="Encoding of source file"
                          expressionType="Notify"
                          name="Encoding"
                          typeConverter="ZappySys.Common.EncodingType">0</property>
                        <property
                          dataType="System.String"
                          description="Character set for text (e.g. utf-8 )"
                          expressionType="Notify"
                          name="CharacterSet"></property>
                        <property
                          dataType="System.Int32"
                          description="Defines how to read the JSON file or direct string"
                          expressionType="Notify"
                          name="AccessMode"
                          typeConverter="ZappySys.Common.Ssis.FileValueAccessMode">3</property>
                        <property
                          dataType="System.String"
                          description="Defines how to read the JSON file or direct string"
                          expressionType="Notify"
                          name="DirectValue"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.String"
                          description="Variable name which holds JSON string"
                          expressionType="Notify"
                          name="ValueVariable"
                          typeConverter="ZappySys.PowerPack.Converters.VariableEditor,ZappySys.PowerPack130.UI,Version=1.0.0.0,Culture=neutral,PublicKeyToken=1903265a93eae502"></property>
                        <property
                          dataType="System.String"
                          description="Variable name which holds data file path or url"
                          expressionType="Notify"
                          name="PathVariable"
                          typeConverter="ZappySys.PowerPack.Converters.VariableEditor,ZappySys.PowerPack130.UI,Version=1.0.0.0,Culture=neutral,PublicKeyToken=1903265a93eae502">User::RexAPIWebURL</property>
                        <property
                          dataType="System.String"
                          description="JSON file file path (e.g. c:\data\myfile.json) or pattern to process multiple files (e.g. c:\data\*.json)"
                          expressionType="Notify"
                          name="DirectPath"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.Boolean"
                          description="Include files from sub folders too."
                          expressionType="Notify"
                          name="Recursive">false</property>
                        <property
                          dataType="System.Boolean"
                          description="By default process stops with error if specified local file is not found. Set this property to true if you wish to continue rather than throwing file not found error."
                          expressionType="Notify"
                          name="ContinueOnFileNotFoundError">false</property>
                        <property
                          dataType="System.String"
                          description="Set this if you want to set custom Http headers. You may use variable anywhere in the header value using syntax {{User::YourVarName}}. Syntax of Header key value pair is : &amp;lt;request&amp;gt;&amp;lt;header&amp;gt;&amp;lt;name&amp;gt;x-myheader-1&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;AAA&amp;lt;/value&amp;gt;&amp;lt;/header&amp;gt; &amp;lt;header&amp;gt;&amp;lt;name&amp;gt;x-myheader-2&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;BBB&amp;lt;/value&amp;gt;&amp;lt;/header&amp;gt;&amp;lt;/request&amp;gt;"
                          expressionType="Notify"
                          name="HttpHeaders">&lt;request&gt;&lt;header&gt;&lt;name&gt;Accept&lt;/name&gt;&lt;value&gt;*/*&lt;/value&gt;&lt;/header&gt;&lt;header&gt;&lt;name&gt;Cache-Control&lt;/name&gt;&lt;value&gt;no-cache&lt;/value&gt;&lt;/header&gt;&lt;/request&gt;</property>
                        <property
                          dataType="System.String"
                          description="User defined data you wish to send along with your HTTP Request (e.g. Upload file data, Form POST data). Usually you have to set content-type of your data but if you select RequestMethod=POST then system will automatically set content-type=application/x-www-form-urlencoded."
                          expressionType="Notify"
                          name="HttpRequestData">{
    "method": "Campaigns::read",
    "args": {
        "id": {{User::CampaignId}}
    },
    "strip_response_prefixes": true,
    "token": "{{User::RexToken}}"
}</property>
                        <property
                          dataType="System.String"
                          description="Http Web Request Method (e.g. POST, GET, PUT, LIST, DELETE...). Refer your API documentation if you are not sure which method you have to use."
                          expressionType="Notify"
                          name="HttpRequestMethod">POST</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies content type for data you wish to POST. If you select Default option then system default content type will be used (i.e. application/x-www-form-urlencoded). If you specify Content-Type header along with this option then header value takes precedence."
                          expressionType="Notify"
                          name="HttpRequestContentType"
                          typeConverter="ZappySys.Common.Web.HttpRequestContentType">0</property>
                        <property
                          dataType="System.Boolean"
                          description="Check this option if you want to upload file(s) (i.e. POST RAW file data) or send data using Multi-Part encoding method (i.e. Content-Type: multipart/form-data). Multi-Part request allows you to mix key/value and upload files in same request. On the other hand raw upload allows only single file upload (without any key/value) &#xA;&#xA;==== Raw Upload (Content-Type: application/octet-stream) =====   &#xA;To upload single file in raw mode check this option and specify full file path starting with @ sign in the Body (e.g.  @c:\data\myfile.zip ) &#xA;&#xA;==== Form-Data / Multipart Upload (Content-Type: multipart/form-data) =====   &#xA;To treat your Request data as multi part fields you must specify key/value pairs separated by new lines into RequestData field (i.e. Body). Each key value pair is entered on new-line and key/value are separated using equal sign (=). Preceding and trailing spaces are ignored also blank lines are ignored. &#xA;If field value has some any special character(s) then use escape sequence (e.g. For NewLine: \r\n, For Tab: \t, For at (@): \@). When value of any field starts with at sign (@) its automatically treated as File you want to upload. By default file content type is determined based on extension however you can supply content type manually for any field using this way [ fieldname.Content-Type=some content type ]. In below example we have supplied Content-Type for file2 and SomeField1, all other fields are using default content-type.&#xA;See below Example of uploading multiple files along with additional fields.&#xA;&#xA;file1=@c:\data\Myfile1.txt&#xA;file2=@c:\data\Myfile2.json&#xA;file2.Content-Type=application/json&#xA;SomeField1=aaaaaaa&#xA;SomeField1.Content-Type=text/plain&#xA;SomeField2=12345&#xA;SomeFieldWithNewLineAndTab=This is line1\r\nThis is line2\r\nThis is \ttab \ttab \ttab&#xA;SomeFieldStartingWithAtSign=\@MyTwitterHandle&#xA;"
                          expressionType="Notify"
                          name="IsMultiPartUpload">false</property>
                        <property
                          dataType="System.Int32"
                          description="Data format coming from HTTP Response. This is useful for example when you have OData service and you want to automatically consume all pages of data using odata.netUrl. Setting JsonFormat=Odata will automatically do it for you. This setting is only applicable if JSON is coming from HTTP WebRequest."
                          expressionType="Notify"
                          name="JsonFormat"
                          typeConverter="ZappySys.Json.JsonFormat">0</property>
                        <property
                          dataType="System.Boolean"
                          description="Enable custom proxy settings (If this is not set then system default proxy will be used. To disable proxy totally uncheck this option and check DoNotUseDefaultProxy option if available)"
                          expressionType="Notify"
                          name="UseProxy">false</property>
                        <property
                          dataType="System.String"
                          description="Web URL of Proxy server (including port  if necessary). [e.g. http://myproxyserver:8080/]"
                          expressionType="Notify"
                          name="ProxyUrl"></property>
                        <property
                          dataType="System.Boolean"
                          description="Enable passing userid and password to proxy server"
                          expressionType="Notify"
                          name="UseProxyCreds">false</property>
                        <property
                          dataType="System.String"
                          description="Proxy username"
                          expressionType="Notify"
                          name="ProxyUserName"></property>
                        <property
                          dataType="System.String"
                          description="Proxy password"
                          expressionType="Notify"
                          name="ProxyPassword"></property>
                        <property
                          dataType="System.String"
                          description="If Service response support pagination using some sort of next url attribute then specify which attribute name in JSON Response string which holds next url. If no attribute found or its null then component will stop fetching next resultset. Example: $.pagingInfo.nextUrl"
                          expressionType="Notify"
                          name="NextUrlAttribute"></property>
                        <property
                          dataType="System.String"
                          description="If Service response support pagination using some sort of prev/next url attribute then specify which previous link attribute name from JSON Response string which holds previous url."
                          expressionType="Notify"
                          name="PrevUrlAttribute"></property>
                        <property
                          dataType="System.String"
                          description="Specifies value for NextUrlAttribute or StopIndicatorAttribute which indicates last page to stop pagination. If you have specified StopIndicatorAttribute then you can use Regular expression rather than static value to indicate last page. To use regular expression value of this property must start with regex= prefix. Example : regex=FALSE|N  (assuming you set StopIndicatorAttribute to something like $.hasMore)"
                          expressionType="Notify"
                          name="NextUrlStopIndicator"></property>
                        <property
                          dataType="System.String"
                          description="Attribute name or expression for attribute which can be used as stop indicator (e.g. hasmore --or-- $.pagination.hasmore). If this value is blank then NextUrlAttribute is used"
                          expressionType="Notify"
                          name="StopIndicatorAttribute"></property>
                        <property
                          dataType="System.String"
                          description="If you want to include certain text (or parameters) at the end of Next url then specify this attribute (e.g. &amp;format=json). Another common usecase of this property is to supply pagination token to next Page URL. You can also use &lt;%nextlink%&gt; or  &lt;%nextlink_encoded%&gt; placeholder (e.g. &amp;cursor=&lt;%nextlink_encoded%&gt; )"
                          expressionType="Notify"
                          name="NextUrlSuffix"></property>
                        <property
                          dataType="System.Int32"
                          description="This property indicates total number of milliseconds you want to wait before sending next request. This option allows you to adjust how many API calls can be made within certain timeframe. If your API Service has no limit then set this option to zero"
                          expressionType="Notify"
                          name="NextUrlWait">0</property>
                        <property
                          dataType="System.Boolean"
                          description="If this option is true then component will continue without exception on 404 error (Url not found). This allows you to consume data gracefully."
                          expressionType="Notify"
                          name="ContinueOnUrlNotFoundError">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Continue when any type of exception occurs during http request"
                          expressionType="Notify"
                          name="ContineOnAnyError">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Continue on error when specified substring found in response"
                          expressionType="Notify"
                          name="ContineOnErrorForMessage">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Continue on error when specified status code returned from web server"
                          expressionType="Notify"
                          name="ContineOnErrorForStatusCode">false</property>
                        <property
                          dataType="System.Boolean"
                          description="When error occurs no data is returned. Use this option to get content eventhough error occurs. When this option is checked you can't use [continue on error when specific string found in response] option"
                          expressionType="Notify"
                          name="ConsumeResponseOnError">false</property>
                        <property
                          dataType="System.Int32"
                          description="Status code to match when error occurs and ContineOnErrorForStatusCode option is true. If Response status code matches to this code then task continues to run"
                          expressionType="Notify"
                          name="ErrorStatusCodeToMatch">404</property>
                        <property
                          dataType="System.String"
                          description="Error substring to match when error occurs and ContineOnErrorForMessage option is true. If Response status code matches to this code then task continues to run"
                          expressionType="Notify"
                          name="ErrorSubstringToMatch"></property>
                        <property
                          dataType="System.String"
                          description="Cookie Container can be used to maintain state between multiple web requests. Example: You can login to site like wordpress and then extract any private page content by simply passing authentication cookies using this variable."
                          expressionType="Notify"
                          name="CookieContainerVariable"></property>
                        <property
                          dataType="System.Int32"
                          description="Http request Timeout in seconds. Set this to 0 if you want to use system default value (i.e. 100 seconds)"
                          expressionType="Notify"
                          name="RequestTimeout">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies which security protocol is supported for HTTPS communication. Using this option you can enable legacy protocol or enforce to use latest version of security protocol (Note: TLS 1.2 is only supported in SSIS 2014 or Higher)."
                          expressionType="Notify"
                          name="SecurityProtocol"
                          typeConverter="ZappySys.PowerPack.Common.HttpsSecurityProtocolType">0</property>
                        <property
                          dataType="System.Boolean"
                          description="Enable support for gzip or deflate compression. When you check this option compressed response automatically de-compressed saving bandwidth. This option is only valid if web server supports compressed response stream. Check your API documentation for more information."
                          expressionType="Notify"
                          name="EnableCompressionSupport">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Ignore SSL certificate related errors. Example: if you getting SSL/TLS errors because of certificate expired or certificate is not from trusted authority or certificate is self-signed. By checking this option you will not get SSL/TLS error."
                          expressionType="Notify"
                          name="IgnoreCertificateErrors">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Allow unsecure ciphers/suites and curves for SSLS/TLS communication. Use this option to communicate with web servers which needs legacy / unsecured ciphers support. This option is only trigged when you change default SSL/TLS Version on advanced settings tab."
                          expressionType="Notify"
                          name="AllowUnsecureSuite">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Use connection to pass credentials for authentication (e.g. Use UserID/Password or Use OAuth Protocol for token based approach)"
                          expressionType="Notify"
                          name="UseConnection">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specified how you want to loop through multiple pages returned by REST API."
                          expressionType="Notify"
                          name="PagingMode"
                          typeConverter="ZappySys.Common.RestApiPagingMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="If you wish to pass extracted pagination token or current page number in the body of next request then set this option to true. You can use [$pagetoken$] and [$pagetoken$] placeholders anywhere in the Body where you wish to insert extracted Page token. You must set encoded token you can use &lt;%nextlink_encoded%&gt; inside SuffixForNextUrl Property. If you dont use SuffixForNextUrl then raw nextLink or Token will be inserted inside the body. If you dont specify [$pagetoken$] placeholder in the body then NextPage Token will be appended at the end. NextPage Token is extracted by filter expression specified using property NextUrlSuffix"
                          expressionType="Notify"
                          name="EnablePageTokenForBody">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this to true if you wish to specify different URL, Header, Body or Filter for first page and next page (i.e. Paginated response). Some APIs like Amazon MWS, NetSuite, Zuora) you may need to set this to true."
                          expressionType="Notify"
                          name="HasDifferentNextPageInfo">false</property>
                        <property
                          dataType="System.String"
                          description="When HasDifferentNextPageInfo=true you can set this property to indicate first page and next page. You can specify different URL, Header, Body or Filter for first page and next page (i.e. Paginated response). Use [$tag$] as placeholder anywhere in the URL, Header, Body or Filter and at runtime system will replace it with correct value (first page or next page value). Syntax to specify placeholder for first page vs next page is like a connectionstring url=FirstPageValue|NextPageValue;header=FirstPageValue|NextPageValue;body=FirstPageValue|NextPageValue;filter=FirstPageValue|NextPageValue; You can use one or more key/value pairs to make things dynamic (e.g. url, header, body or filter)  .For example if you have pagination in your API and First URL is http://abc.com/api/items/get and to get more records you have to call http://abc.com/api/items/getNext then you can use [$tag$] as placeholder in the URL http://abc.com/api/items/[$tag$] and specify this property with first page tag and next page tag as url=get|getNext  (Tags are separated using vertical bar). "
                          expressionType="Notify"
                          name="PagePlaceholders"></property>
                        <property
                          dataType="System.String"
                          description="Use this property to set request body fragment for first page. HasDifferentNextPageInfo must be set to true to use this property."
                          expressionType="Notify"
                          name="FirstPageBodyPart"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.String"
                          description="Use this property to set request body fragment for any request after first request. HasDifferentNextPageInfo must be set to true to use this property."
                          expressionType="Notify"
                          name="NextPageBodyPart"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.String"
                          description="Expression to extract Maximum pages to loop through. Some APIs don't stop pagination and keep returning last page data when you try to read data after last page. Specify expression (e.g. $.page_count ) to read total pages to loop through using this property."
                          expressionType="Notify"
                          name="PagingMaxPagesExpr"></property>
                        <property
                          dataType="System.String"
                          description="Expression to extract Maximum records to loop through. Some APIs don't stop pagination and keep returning last page data when you try to read data after last page. Specify expression (e.g. $.total_rows ) to read total pages to loop through using this property. This setting is ignored if you set PagingMaxPagesExpr."
                          expressionType="Notify"
                          name="PagingMaxRowsExpr"></property>
                        <property
                          dataType="System.String"
                          description="When you enable PagingMaxRowsExpr (end pagination based on MaxRowCount) then you need to count records coming in each response. This expression extract all rows found under specified expression (e.g. $.orders[*] if all records found under orders node)."
                          expressionType="Notify"
                          name="PagingMaxRowsDataPathExpr"></property>
                        <property
                          dataType="System.String"
                          description="e.g. Type page_num if URL looks like this =&gt; http://abc.com/?page_num=1&amp;sort=true  (page number via query string)&#xA;--or-- Type &lt;%page%&gt; if page number is inside URL path like this =&gt; http://abc.com/1/?sort=true  (e.g. replace page number in url with placeholder http://abc.com/&lt;%page%&gt;/?sort=true)&#xA;Page number will be incremented by one for next URL until last page is reached or [Max Page Number] is reached"
                          expressionType="Notify"
                          name="PageNumberAttributeNameInUrl"></property>
                        <property
                          dataType="System.Int32"
                          description="Maximum page number until which auto increment is allowed. Type zero for no limit. Next URL contains next page number (increment by one) until last page is detected or [Max Page Number] limit is reached."
                          expressionType="Notify"
                          name="MaxPageNumber">0</property>
                        <property
                          dataType="System.String"
                          description="Variable name which will hold starting page number. This is ignored if you useing parameter name from query string to indicate page number."
                          expressionType="Notify"
                          name="StartPageNumberVariable"></property>
                        <property
                          dataType="System.Int32"
                          description="Page counter increment. By default next page is incremented by one if this value is zero. You can also enter negative number if you want to decrease page counter."
                          expressionType="Notify"
                          name="PageNumberIncrement">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specified how you want detect last page."
                          expressionType="Notify"
                          name="PagingEndStrategy"
                          typeConverter="ZappySys.Common.UrlPagingEndDetectionStrategy">3</property>
                        <property
                          dataType="System.Boolean"
                          description="Condition result to compare to detect last page. Set this property to True if you want detect last page if condition is true else set this to False."
                          expressionType="Notify"
                          name="LastPageWhenConditionEqualsTo">true</property>
                        <property
                          dataType="System.Int32"
                          description="Minimum bytes expected from response."
                          expressionType="Notify"
                          name="ResponseMinBytes">0</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum bytes from response."
                          expressionType="Notify"
                          name="ResponseMaxBytes">3</property>
                        <property
                          dataType="System.String"
                          description="Expected error message sub string from response."
                          expressionType="Notify"
                          name="ResponseErrorString">not found</property>
                        <property
                          dataType="System.Int32"
                          description="Expected status code from response when page number you trying to access not found."
                          expressionType="Notify"
                          name="ResponseStatusCode">404</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum JSON records to fetch. Set this value to 0 for all records"
                          expressionType="Notify"
                          name="MaxRows">0</property>
                        <property
                          dataType="System.String"
                          description="Enter expression here to filter data.(Example:  $.Users[*].UserName ) This will fetch User names from users records"
                          expressionType="Notify"
                          name="Filter"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">$.result.related.campaign_member_statuses[?(@label=='To Call')]</property>
                        <property
                          dataType="System.Boolean"
                          description="Use this option to include parent properties (Non array) in the output along with Filtered Rows"
                          expressionType="Notify"
                          name="IncludeParentColumns">true</property>
                        <property
                          dataType="System.Boolean"
                          description="By default child and parent information is not included in the output if children not found for specified expression. For example if you want to extract all orders from all customers nodes then you can type $.Customers[*].Orders[*]. This will fetch all orders from all customers. By default customers records without orders wont be included in the output. If you want to include those customers where orders not found then check this option (Output null information for order attributes). This behavior is similar to LEFT OUTER JOIN in SQL (Left side is parent, right side is child). This option is ***resource intensive*** so only check if you really care about this behavior."
                          expressionType="Notify"
                          name="IncludeParentColumnsWhenChildMissing">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to true if you want to output parent columns which are array. By default any parent column which is an array is not included in output. See also FilterForParentColumnsWithArrayType property if you set this property"
                          expressionType="Notify"
                          name="IncludeParentColumnsWithArrayType">false</property>
                        <property
                          dataType="System.String"
                          description="Filter expression to extract value form parent"
                          expressionType="Notify"
                          name="FilterForParentColumnsWithArrayType"></property>
                        <property
                          dataType="System.String"
                          description="Prefix for parent column name. This option is only valid if you have set IncludeParentColumns=True"
                          expressionType="Notify"
                          name="ParentColumnPrefix">P_</property>
                        <property
                          dataType="System.Boolean"
                          description="Throw error if property name specified in filter expression is missing. By default it will ignore any missing property errors."
                          expressionType="Notify"
                          name="ThrowErrorIfPropertyMissing">false</property>
                        <property
                          dataType="System.Int32"
                          description="This property how many nested levels should be scanned to fetch various properties. 0=Scan all child levels."
                          expressionType="Notify"
                          name="MaxLevelsToScan">0</property>
                        <property
                          dataType="System.String"
                          description="List comma separated property names from JSON document which you want to exclude from output. Specify parent property name to exclude all child nodes."
                          expressionType="Notify"
                          name="ExcludedProperties">P_result_system_created_from_template_name</property>
                        <property
                          dataType="System.String"
                          description="Property level separator used in generated property name (separator for outer properties - Above selected filter node). Use this if default separator is producing duplicate property name which is conflicting with existing name."
                          expressionType="Notify"
                          name="LevelSeparator">_</property>
                        <property
                          dataType="System.Boolean"
                          description="Enables deep array flattening for selected filtered hierarchy. When you turn on this property it will flatten each property of each array item and expose as column (e.g. If you have Filter set as $.customers[*] and for each customer you have an array of Addresses then you may see output columns like Addresses.1.City, Addresses.1.State, Addresses.2.City, Addresses.2.State .... Addresses.N.City, Addresses.N.State). You can control how many array items you want to flatten by setting MaxArrayItemsToFlatten property."
                          expressionType="Notify"
                          name="EnableArrayFlattening">false</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum number of array items to flatten. inner array flattening. Adjust this property to control how many columns being generated. This option is ignored if you set EnableArrayFlattening=false"
                          expressionType="Notify"
                          name="MaxArrayItemsToFlatten">10</property>
                        <property
                          dataType="System.Int32"
                          description="Compression format for source file (e.g. gzip, zip)"
                          expressionType="Notify"
                          name="FileCompressionType"
                          typeConverter="ZappySys.Common.FileCompressionType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Array Transformation you want to apply. Useful for case when you have 2-Dimensional arrays with rows/columns in separate arrays."
                          expressionType="Notify"
                          name="ArrayTransformationType"
                          typeConverter="ZappySys.Json.ArrayTransformType">0</property>
                        <property
                          dataType="System.String"
                          description="Filter expression to use to extract column names for array transformation."
                          expressionType="Notify"
                          name="ArrayTransColumnNameFilter"></property>
                        <property
                          dataType="System.String"
                          description="Filter expression for row values (Not applicable for simple array transformation)."
                          expressionType="Notify"
                          name="ArrayTransRowValueFilter"></property>
                        <property
                          dataType="System.Boolean"
                          description="When you have 2D array but don't have column list specified in a separate array then use this option (e.g. { arr: [[10,11],[21,22]] } ). If you selected Column less array or JSON Lines option then this property means Column Names coming from First Line of array."
                          expressionType="Notify"
                          name="ArrayTransEnableCustomColumns">false</property>
                        <property
                          dataType="System.String"
                          description="When you have 2D array but don't have column list specified in a separate array then use specify column names here. Use comma separated list (e.g col1,col2,col3 ). Column name Order must match value order."
                          expressionType="Notify"
                          name="ArrayTransCustomColumns"></property>
                        <property
                          dataType="System.String"
                          description="Specifies how custom date formatted strings are parsed when reading JSON."
                          expressionType="Notify"
                          name="DateFormatString"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies how date formatted strings, e.g. Date(1198908717056) and 2012-03-21T05:40Z, are parsed when reading JSON."
                          expressionType="Notify"
                          name="DateParseHandling"
                          typeConverter="ZappySys.Common.DateParseHandling">1</property>
                        <property
                          dataType="System.Boolean"
                          description="Indent JSON output so its easy to read."
                          expressionType="Notify"
                          name="IndentOutput">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Output as raw JSON document rather than parsing individual fields. This option is helpful if you have documents stored in a file and you want to pass them downstream as raw JSON string rather than parsing into columns."
                          expressionType="Notify"
                          name="OutputRawDocument">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to true if you want to output FilePath. This option is ignored when you consume DirectValue or data from Url rather than local files. Output column name will be __FilePath"
                          expressionType="Notify"
                          name="OutputFilePath">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to true if you want to output FileName. This option is ignored when you consume DirectValue or data from Url rather than local files. Output column name will be __FileName"
                          expressionType="Notify"
                          name="OutputFileName">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to true if you want to move processed file to archive folder."
                          expressionType="Notify"
                          name="EnableArchiveFile">false</property>
                        <property
                          dataType="System.String"
                          description="Folder path where you want to move processed file."
                          expressionType="Notify"
                          name="ArchiveFolderPath"></property>
                        <property
                          dataType="System.Boolean"
                          description="Folder path where you want to move processed file."
                          expressionType="Notify"
                          name="OverwriteFileInArchiveFolder">false</property>
                        <property
                          dataType="System.String"
                          description="File naming convention for archived file. By default it will same name as original source file processed. But you can control naming format using {%name%} and {%ext%} placeholders. e.g. {%name%}_processed{%ext%} or {%name%}{%ext%}.{{System::ContainerStartTime,yyyyMMdd_HHmmss_fff}}"
                          expressionType="Notify"
                          name="ArchiveFileNamingConvention"></property>
                        <property
                          dataType="System.Boolean"
                          description="When this property is true then Column is converted to Row. Pivoted names will appear under  Pivot_Name column and values will appear under Pivot_Value field."
                          expressionType="Notify"
                          name="EnablePivot">false</property>
                        <property
                          dataType="System.Boolean"
                          description="When this option is checked, system allows to parse large number (Higher than Int64) in JSON document (i.e. { id: 76000009353950433247780 } ). If you do not turn on this option then it may throw error if large number is encountered. This option is SLOW because it has to perform additional checks in order to avoid Large number overflow error so do not turn on unless you getting Large number error."
                          expressionType="Notify"
                          name="EnableBigNumberHandling">false</property>
                        <property
                          dataType="System.Int32"
                          description="Metadata scan mode controls how data type and length is determined. By default few records scanned to determine datatype/length. Changing ScanMode affects length/datatype accuracy."
                          expressionType="Notify"
                          name="MetaDataScanMode"
                          typeConverter="ZappySys.Common.Data.MetaDataScanMode">4</property>
                        <property
                          dataType="System.Int32"
                          description="Length for all string column. This option is only valid for MetaDataScanMode=Custom"
                          expressionType="Notify"
                          name="MetaDataCustomLength">1000</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.JsonSource</property>
                      </properties>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput]"
                          errorOrTruncationOperation="Error"
                          errorRowDisposition="FailComponent"
                          name="JsonSourceOutput"
                          truncationRowDisposition="FailComponent">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].Columns[P_error]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[P_error]"
                              length="1020"
                              lineageId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].Columns[P_error]"
                              name="P_error" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].Columns[id]"
                              dataType="i8"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[id]"
                              lineageId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].Columns[id]"
                              name="id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].Columns[P_result_system_record_state]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[P_result_system_record_state]"
                              length="24"
                              lineageId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].Columns[P_result_system_record_state]"
                              name="P_result_system_record_state" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].Columns[P_result_system_ctime]"
                              dataType="i8"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[P_result_system_ctime]"
                              lineageId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].Columns[P_result_system_ctime]"
                              name="P_result_system_ctime" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].Columns[P_result_system_modtime]"
                              dataType="i8"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[P_result_system_modtime]"
                              lineageId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].Columns[P_result_system_modtime]"
                              name="P_result_system_modtime" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].Columns[P_result_name]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[P_result_name]"
                              length="52"
                              lineageId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].Columns[P_result_name]"
                              name="P_result_name" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].Columns[P_result_start_date]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[P_result_start_date]"
                              length="1020"
                              lineageId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].Columns[P_result_start_date]"
                              name="P_result_start_date" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].Columns[P_result_end_date]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[P_result_end_date]"
                              length="1020"
                              lineageId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].Columns[P_result_end_date]"
                              name="P_result_end_date" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].Columns[P_result_etag]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[P_result_etag]"
                              length="60"
                              lineageId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].Columns[P_result_etag]"
                              name="P_result_etag" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].Columns[P_result_system_owner_user_id]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[P_result_system_owner_user_id]"
                              length="20"
                              lineageId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].Columns[P_result_system_owner_user_id]"
                              name="P_result_system_owner_user_id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].Columns[P_result_system_owner_user_name]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[P_result_system_owner_user_name]"
                              length="36"
                              lineageId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].Columns[P_result_system_owner_user_name]"
                              name="P_result_system_owner_user_name" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].Columns[P_result_system_owner_user_first_name]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[P_result_system_owner_user_first_name]"
                              length="20"
                              lineageId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].Columns[P_result_system_owner_user_first_name]"
                              name="P_result_system_owner_user_first_name" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].Columns[P_result_system_owner_user_last_name]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[P_result_system_owner_user_last_name]"
                              length="12"
                              lineageId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].Columns[P_result_system_owner_user_last_name]"
                              name="P_result_system_owner_user_last_name" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].Columns[P_result_system_owner_user_email_address]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[P_result_system_owner_user_email_address]"
                              length="92"
                              lineageId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].Columns[P_result_system_owner_user_email_address]"
                              name="P_result_system_owner_user_email_address" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].Columns[P_result_system_modified_user_id]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[P_result_system_modified_user_id]"
                              length="20"
                              lineageId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].Columns[P_result_system_modified_user_id]"
                              name="P_result_system_modified_user_id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].Columns[P_result_system_modified_user_name]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[P_result_system_modified_user_name]"
                              length="36"
                              lineageId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].Columns[P_result_system_modified_user_name]"
                              name="P_result_system_modified_user_name" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].Columns[P_result_system_modified_user_first_name]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[P_result_system_modified_user_first_name]"
                              length="20"
                              lineageId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].Columns[P_result_system_modified_user_first_name]"
                              name="P_result_system_modified_user_first_name" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].Columns[P_result_system_modified_user_last_name]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[P_result_system_modified_user_last_name]"
                              length="12"
                              lineageId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].Columns[P_result_system_modified_user_last_name]"
                              name="P_result_system_modified_user_last_name" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].Columns[P_result_system_modified_user_email_address]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[P_result_system_modified_user_email_address]"
                              length="92"
                              lineageId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].Columns[P_result_system_modified_user_email_address]"
                              name="P_result_system_modified_user_email_address" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].Columns[P_result_system_created_user_id]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[P_result_system_created_user_id]"
                              length="20"
                              lineageId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].Columns[P_result_system_created_user_id]"
                              name="P_result_system_created_user_id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].Columns[P_result_system_created_user_name]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[P_result_system_created_user_name]"
                              length="36"
                              lineageId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].Columns[P_result_system_created_user_name]"
                              name="P_result_system_created_user_name" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].Columns[P_result_system_created_user_first_name]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[P_result_system_created_user_first_name]"
                              length="20"
                              lineageId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].Columns[P_result_system_created_user_first_name]"
                              name="P_result_system_created_user_first_name" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].Columns[P_result_system_created_user_last_name]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[P_result_system_created_user_last_name]"
                              length="12"
                              lineageId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].Columns[P_result_system_created_user_last_name]"
                              name="P_result_system_created_user_last_name" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].Columns[P_result_system_created_user_email_address]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[P_result_system_created_user_email_address]"
                              length="92"
                              lineageId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].Columns[P_result_system_created_user_email_address]"
                              name="P_result_system_created_user_email_address" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].Columns[P_result_type_id]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[P_result_type_id]"
                              length="20"
                              lineageId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].Columns[P_result_type_id]"
                              name="P_result_type_id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].Columns[P_result_type_text]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[P_result_type_text]"
                              length="20"
                              lineageId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].Columns[P_result_type_text]"
                              name="P_result_type_text" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].Columns[P_result_status_id]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[P_result_status_id]"
                              length="44"
                              lineageId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].Columns[P_result_status_id]"
                              name="P_result_status_id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].Columns[P_result_status_text]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[P_result_status_text]"
                              length="44"
                              lineageId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].Columns[P_result_status_text]"
                              name="P_result_status_text" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].Columns[P_result_archive_reason]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[P_result_archive_reason]"
                              length="1020"
                              lineageId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].Columns[P_result_archive_reason]"
                              name="P_result_archive_reason" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].Columns[P_result_system_created_from_template_type_id]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[P_result_system_created_from_template_type_id]"
                              length="20"
                              lineageId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].Columns[P_result_system_created_from_template_type_id]"
                              name="P_result_system_created_from_template_type_id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].Columns[P_result_system_created_from_template_type_text]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[P_result_system_created_from_template_type_text]"
                              length="20"
                              lineageId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].Columns[P_result_system_created_from_template_type_text]"
                              name="P_result_system_created_from_template_type_text" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].Columns[P_result_system_created_from_template_id]"
                              dataType="i8"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[P_result_system_created_from_template_id]"
                              lineageId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].Columns[P_result_system_created_from_template_id]"
                              name="P_result_system_created_from_template_id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].Columns[P_result_id]"
                              dataType="i8"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[P_result_id]"
                              lineageId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].Columns[P_result_id]"
                              name="P_result_id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].Columns[label]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[label]"
                              length="28"
                              lineageId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].Columns[label]"
                              name="label" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].Columns[priority]"
                              dataType="i8"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[priority]"
                              lineageId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].Columns[priority]"
                              name="priority" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].Columns[base_status.id]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[base_status.id]"
                              length="28"
                              lineageId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].Columns[base_status.id]"
                              name="base_status.id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].Columns[base_status.text]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[base_status.text]"
                              length="28"
                              lineageId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].Columns[base_status.text]"
                              name="base_status.text" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].Columns[__FileName]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[__FileName]"
                              length="600"
                              lineageId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].Columns[__FileName]"
                              name="__FileName" />
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[P_result_system_record_state]"
                              dataType="wstr"
                              length="24"
                              name="P_result_system_record_state" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[P_result_system_ctime]"
                              dataType="i8"
                              name="P_result_system_ctime" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[P_result_system_modtime]"
                              dataType="i8"
                              name="P_result_system_modtime" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[P_result_name]"
                              dataType="wstr"
                              length="52"
                              name="P_result_name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[P_result_start_date]"
                              dataType="wstr"
                              length="1020"
                              name="P_result_start_date" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[P_result_end_date]"
                              dataType="wstr"
                              length="1020"
                              name="P_result_end_date" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[P_result_etag]"
                              dataType="wstr"
                              length="60"
                              name="P_result_etag" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[P_result_system_owner_user_id]"
                              dataType="wstr"
                              length="20"
                              name="P_result_system_owner_user_id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[P_result_system_owner_user_name]"
                              dataType="wstr"
                              length="36"
                              name="P_result_system_owner_user_name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[P_result_system_owner_user_first_name]"
                              dataType="wstr"
                              length="20"
                              name="P_result_system_owner_user_first_name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[P_result_system_owner_user_last_name]"
                              dataType="wstr"
                              length="12"
                              name="P_result_system_owner_user_last_name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[P_result_system_owner_user_email_address]"
                              dataType="wstr"
                              length="92"
                              name="P_result_system_owner_user_email_address" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[P_result_system_modified_user_id]"
                              dataType="wstr"
                              length="20"
                              name="P_result_system_modified_user_id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[P_result_system_modified_user_name]"
                              dataType="wstr"
                              length="36"
                              name="P_result_system_modified_user_name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[P_result_system_modified_user_first_name]"
                              dataType="wstr"
                              length="20"
                              name="P_result_system_modified_user_first_name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[P_result_system_modified_user_last_name]"
                              dataType="wstr"
                              length="12"
                              name="P_result_system_modified_user_last_name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[P_result_system_modified_user_email_address]"
                              dataType="wstr"
                              length="92"
                              name="P_result_system_modified_user_email_address" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[P_result_system_created_user_id]"
                              dataType="wstr"
                              length="20"
                              name="P_result_system_created_user_id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[P_result_system_created_user_name]"
                              dataType="wstr"
                              length="36"
                              name="P_result_system_created_user_name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[P_result_system_created_user_first_name]"
                              dataType="wstr"
                              length="20"
                              name="P_result_system_created_user_first_name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[P_result_system_created_user_last_name]"
                              dataType="wstr"
                              length="12"
                              name="P_result_system_created_user_last_name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[P_result_system_created_user_email_address]"
                              dataType="wstr"
                              length="92"
                              name="P_result_system_created_user_email_address" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[P_result_type_id]"
                              dataType="wstr"
                              length="20"
                              name="P_result_type_id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[P_result_type_text]"
                              dataType="wstr"
                              length="20"
                              name="P_result_type_text" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[P_result_status_id]"
                              dataType="wstr"
                              length="44"
                              name="P_result_status_id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[P_result_status_text]"
                              dataType="wstr"
                              length="44"
                              name="P_result_status_text" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[P_result_archive_reason]"
                              dataType="wstr"
                              length="1020"
                              name="P_result_archive_reason" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[P_result_system_created_from_template_type_id]"
                              dataType="wstr"
                              length="20"
                              name="P_result_system_created_from_template_type_id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[P_result_system_created_from_template_type_text]"
                              dataType="wstr"
                              length="20"
                              name="P_result_system_created_from_template_type_text" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[P_result_system_created_from_template_id]"
                              dataType="i8"
                              name="P_result_system_created_from_template_id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[P_result_id]"
                              dataType="i8"
                              name="P_result_id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[P_error]"
                              dataType="wstr"
                              length="1020"
                              name="P_error" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[label]"
                              dataType="wstr"
                              length="28"
                              name="label" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[priority]"
                              dataType="i8"
                              name="priority" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[id]"
                              dataType="i8"
                              name="id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[base_status.id]"
                              dataType="wstr"
                              length="28"
                              name="base_status.id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[base_status.text]"
                              dataType="wstr"
                              length="28"
                              name="base_status.text" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[__FileName]"
                              dataType="wstr"
                              length="600"
                              name="__FileName" />
                          </externalMetadataColumns>
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSource Error Output]"
                          isErrorOut="true"
                          name="JsonSource Error Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSource Error Output].Columns[P_error]"
                              dataType="wstr"
                              length="1020"
                              lineageId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSource Error Output].Columns[P_error]"
                              name="P_error" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSource Error Output].Columns[id]"
                              dataType="i8"
                              lineageId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSource Error Output].Columns[id]"
                              name="id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSource Error Output].Columns[P_result_system_record_state]"
                              dataType="wstr"
                              length="24"
                              lineageId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSource Error Output].Columns[P_result_system_record_state]"
                              name="P_result_system_record_state" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSource Error Output].Columns[P_result_system_ctime]"
                              dataType="i8"
                              lineageId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSource Error Output].Columns[P_result_system_ctime]"
                              name="P_result_system_ctime" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSource Error Output].Columns[P_result_system_modtime]"
                              dataType="i8"
                              lineageId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSource Error Output].Columns[P_result_system_modtime]"
                              name="P_result_system_modtime" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSource Error Output].Columns[P_result_name]"
                              dataType="wstr"
                              length="52"
                              lineageId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSource Error Output].Columns[P_result_name]"
                              name="P_result_name" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSource Error Output].Columns[P_result_start_date]"
                              dataType="wstr"
                              length="1020"
                              lineageId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSource Error Output].Columns[P_result_start_date]"
                              name="P_result_start_date" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSource Error Output].Columns[P_result_end_date]"
                              dataType="wstr"
                              length="1020"
                              lineageId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSource Error Output].Columns[P_result_end_date]"
                              name="P_result_end_date" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSource Error Output].Columns[P_result_etag]"
                              dataType="wstr"
                              length="60"
                              lineageId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSource Error Output].Columns[P_result_etag]"
                              name="P_result_etag" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSource Error Output].Columns[P_result_system_owner_user_id]"
                              dataType="wstr"
                              length="20"
                              lineageId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSource Error Output].Columns[P_result_system_owner_user_id]"
                              name="P_result_system_owner_user_id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSource Error Output].Columns[P_result_system_owner_user_name]"
                              dataType="wstr"
                              length="36"
                              lineageId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSource Error Output].Columns[P_result_system_owner_user_name]"
                              name="P_result_system_owner_user_name" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSource Error Output].Columns[P_result_system_owner_user_first_name]"
                              dataType="wstr"
                              length="20"
                              lineageId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSource Error Output].Columns[P_result_system_owner_user_first_name]"
                              name="P_result_system_owner_user_first_name" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSource Error Output].Columns[P_result_system_owner_user_last_name]"
                              dataType="wstr"
                              length="12"
                              lineageId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSource Error Output].Columns[P_result_system_owner_user_last_name]"
                              name="P_result_system_owner_user_last_name" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSource Error Output].Columns[P_result_system_owner_user_email_address]"
                              dataType="wstr"
                              length="92"
                              lineageId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSource Error Output].Columns[P_result_system_owner_user_email_address]"
                              name="P_result_system_owner_user_email_address" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSource Error Output].Columns[P_result_system_modified_user_id]"
                              dataType="wstr"
                              length="20"
                              lineageId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSource Error Output].Columns[P_result_system_modified_user_id]"
                              name="P_result_system_modified_user_id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSource Error Output].Columns[P_result_system_modified_user_name]"
                              dataType="wstr"
                              length="36"
                              lineageId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSource Error Output].Columns[P_result_system_modified_user_name]"
                              name="P_result_system_modified_user_name" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSource Error Output].Columns[P_result_system_modified_user_first_name]"
                              dataType="wstr"
                              length="20"
                              lineageId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSource Error Output].Columns[P_result_system_modified_user_first_name]"
                              name="P_result_system_modified_user_first_name" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSource Error Output].Columns[P_result_system_modified_user_last_name]"
                              dataType="wstr"
                              length="12"
                              lineageId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSource Error Output].Columns[P_result_system_modified_user_last_name]"
                              name="P_result_system_modified_user_last_name" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSource Error Output].Columns[P_result_system_modified_user_email_address]"
                              dataType="wstr"
                              length="92"
                              lineageId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSource Error Output].Columns[P_result_system_modified_user_email_address]"
                              name="P_result_system_modified_user_email_address" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSource Error Output].Columns[P_result_system_created_user_id]"
                              dataType="wstr"
                              length="20"
                              lineageId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSource Error Output].Columns[P_result_system_created_user_id]"
                              name="P_result_system_created_user_id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSource Error Output].Columns[P_result_system_created_user_name]"
                              dataType="wstr"
                              length="36"
                              lineageId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSource Error Output].Columns[P_result_system_created_user_name]"
                              name="P_result_system_created_user_name" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSource Error Output].Columns[P_result_system_created_user_first_name]"
                              dataType="wstr"
                              length="20"
                              lineageId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSource Error Output].Columns[P_result_system_created_user_first_name]"
                              name="P_result_system_created_user_first_name" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSource Error Output].Columns[P_result_system_created_user_last_name]"
                              dataType="wstr"
                              length="12"
                              lineageId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSource Error Output].Columns[P_result_system_created_user_last_name]"
                              name="P_result_system_created_user_last_name" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSource Error Output].Columns[P_result_system_created_user_email_address]"
                              dataType="wstr"
                              length="92"
                              lineageId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSource Error Output].Columns[P_result_system_created_user_email_address]"
                              name="P_result_system_created_user_email_address" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSource Error Output].Columns[P_result_type_id]"
                              dataType="wstr"
                              length="20"
                              lineageId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSource Error Output].Columns[P_result_type_id]"
                              name="P_result_type_id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSource Error Output].Columns[P_result_type_text]"
                              dataType="wstr"
                              length="20"
                              lineageId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSource Error Output].Columns[P_result_type_text]"
                              name="P_result_type_text" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSource Error Output].Columns[P_result_status_id]"
                              dataType="wstr"
                              length="44"
                              lineageId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSource Error Output].Columns[P_result_status_id]"
                              name="P_result_status_id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSource Error Output].Columns[P_result_status_text]"
                              dataType="wstr"
                              length="44"
                              lineageId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSource Error Output].Columns[P_result_status_text]"
                              name="P_result_status_text" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSource Error Output].Columns[P_result_archive_reason]"
                              dataType="wstr"
                              length="1020"
                              lineageId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSource Error Output].Columns[P_result_archive_reason]"
                              name="P_result_archive_reason" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSource Error Output].Columns[P_result_system_created_from_template_type_id]"
                              dataType="wstr"
                              length="20"
                              lineageId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSource Error Output].Columns[P_result_system_created_from_template_type_id]"
                              name="P_result_system_created_from_template_type_id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSource Error Output].Columns[P_result_system_created_from_template_type_text]"
                              dataType="wstr"
                              length="20"
                              lineageId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSource Error Output].Columns[P_result_system_created_from_template_type_text]"
                              name="P_result_system_created_from_template_type_text" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSource Error Output].Columns[P_result_system_created_from_template_id]"
                              dataType="i8"
                              lineageId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSource Error Output].Columns[P_result_system_created_from_template_id]"
                              name="P_result_system_created_from_template_id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSource Error Output].Columns[P_result_id]"
                              dataType="i8"
                              lineageId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSource Error Output].Columns[P_result_id]"
                              name="P_result_id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSource Error Output].Columns[label]"
                              dataType="wstr"
                              length="28"
                              lineageId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSource Error Output].Columns[label]"
                              name="label" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSource Error Output].Columns[priority]"
                              dataType="i8"
                              lineageId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSource Error Output].Columns[priority]"
                              name="priority" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSource Error Output].Columns[base_status.id]"
                              dataType="wstr"
                              length="28"
                              lineageId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSource Error Output].Columns[base_status.id]"
                              name="base_status.id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSource Error Output].Columns[base_status.text]"
                              dataType="wstr"
                              length="28"
                              lineageId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSource Error Output].Columns[base_status.text]"
                              name="base_status.text" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSource Error Output].Columns[__FileName]"
                              dataType="wstr"
                              length="600"
                              lineageId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSource Error Output].Columns[__FileName]"
                              name="__FileName" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSource Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSource Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSource Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSource Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSource Error Output].Columns[ErrorColumnName]"
                              codePage="1252"
                              dataType="str"
                              length="128"
                              lineageId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSource Error Output].Columns[ErrorColumnName]"
                              name="ErrorColumnName" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSource Error Output].Columns[ErrorMessage]"
                              dataType="wstr"
                              length="1024"
                              lineageId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSource Error Output].Columns[ErrorMessage]"
                              name="ErrorMessage" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Set CampaignStatusId"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Set Variable Transform; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="Set Variable with multiple operations such as Set, Increment, Replace, Append"
                      name="Set CampaignStatusId"
                      version="2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.Int32"
                          description="Action you like to perform. If you set any action with ReplacePlaceholder then you must use placeholder &lt;%value%&gt; where you like to insert upstream value. Use variable placeholder (e.g. {{User::MyVar}} ) if you wish to replace value from variable. Example for placeholder use: { tags : [&lt;%value%&gt;] , Package: &quot;{{System::PackageName}}&quot; }"
                          expressionType="Notify"
                          name="VariableSetMode"
                          typeConverter="ZappySys.PowerPack.Common.VariableSetMode">0</property>
                        <property
                          dataType="System.String"
                          description="Name of variable you want to set (e.g. User::vMyData)"
                          expressionType="Notify"
                          name="VariableToSet"
                          typeConverter="ZappySys.PowerPack.Converters.VariableEditor,ZappySys.PowerPack130.UI,Version=1.0.0.0,Culture=neutral,PublicKeyToken=1903265a93eae502">User::CampaignMemberStatusId</property>
                        <property
                          dataType="System.Int32"
                          description="Number to add in previous variable value (This number can be -ve or +ve)"
                          expressionType="Notify"
                          name="IncrementBy">1</property>
                        <property
                          dataType="System.String"
                          description="Separator to use for Append mode (not valid for other mode). You can use \r\n for new line, \t for tab, \n for unix style new line."
                          expressionType="Notify"
                          name="RowSeparator">\r\n</property>
                        <property
                          dataType="System.String"
                          description="Separator to use for last row (Only valid of ."
                          expressionType="Notify"
                          name="LastRowSeparator"></property>
                        <property
                          dataType="System.String"
                          description="Header string to use for Append mode."
                          expressionType="Notify"
                          name="Header"></property>
                        <property
                          dataType="System.String"
                          description="Footer string to use for Append mode."
                          expressionType="Notify"
                          name="Footer"></property>
                        <property
                          dataType="System.Boolean"
                          description="By default SSIS doesn't allow to assign NULL value to SSIS Variable. Turn on this setting to use custom value for NULL. Set CustomValueForNull as well to use custom value for NULL"
                          expressionType="Notify"
                          name="UseCustomValueForNull">false</property>
                        <property
                          dataType="System.String"
                          description="If you set UseCustomValueForNull=true then this Custom Value will be used when NULL value is detected as input. If you leave CustomValueForNull blank then we will change NULL string to Blank, NULL Int32,Int64,Decimal,Double use 0"
                          expressionType="Notify"
                          name="CustomValueForNull"></property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.SetVariableTransform</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Set CampaignStatusId.Inputs[SetVariableTransformInput]"
                          name="SetVariableTransformInput">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Set CampaignStatusId.Inputs[SetVariableTransformInput].Columns[id]"
                              cachedDataType="i8"
                              cachedName="id"
                              lineageId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput].Columns[id]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Set CampaignStatusId.Outputs[SetVariableTransformOutput]"
                          errorOrTruncationOperation="Error"
                          name="SetVariableTransformOutput"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Set CampaignStatusId.Inputs[SetVariableTransformInput]">
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Trash Destination"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Trash Destination; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="The trash destination is used to create dummy destination which ends data path without any processing."
                      name="Trash Destination"
                      version="2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.String"
                          description="File path where you want to save data"
                          expressionType="Notify"
                          name="FilePath"></property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates if you want to save input data to comma separated text file"
                          expressionType="Notify"
                          name="SaveDataToFile">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Append data to file"
                          expressionType="Notify"
                          name="Append">false</property>
                        <property
                          dataType="System.String"
                          description="RowSeparator"
                          expressionType="Notify"
                          name="RowSeparator">{NEWLINE}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether you want to overwrite target file if exists"
                          expressionType="Notify"
                          name="OverwriteFileIfExists">true</property>
                        <property
                          dataType="System.String"
                          description="ColumnSeparator"
                          expressionType="Notify"
                          name="ColumnSeparator">,</property>
                        <property
                          dataType="System.Boolean"
                          description="SupportUnicode"
                          expressionType="Notify"
                          name="SupportUnicode">true</property>
                        <property
                          dataType="System.Boolean"
                          description="ColumnNamesInFirstRow"
                          expressionType="Notify"
                          name="ColumnNamesInFirstRow">true</property>
                        <property
                          dataType="System.Boolean"
                          description="QuoteDataIfNeeded"
                          expressionType="Notify"
                          name="QuoteDataIfNeeded">true</property>
                        <property
                          dataType="System.String"
                          description="Date time format string for any column with DT_DBDATETIME, DT_DBDATETIME2 or DB_DATE format"
                          expressionType="Notify"
                          name="DateTimeFormat">yyyy-MM-dd HH:mm:ss</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.TrashDestination</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Trash Destination.Inputs[TrashDestinationInput]"
                          hasSideEffects="true"
                          name="TrashDestinationInput">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Trash Destination 1"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Trash Destination; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="The trash destination is used to create dummy destination which ends data path without any processing."
                      name="Trash Destination 1"
                      version="2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.String"
                          description="File path where you want to save data"
                          expressionType="Notify"
                          name="FilePath"></property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates if you want to save input data to comma separated text file"
                          expressionType="Notify"
                          name="SaveDataToFile">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Append data to file"
                          expressionType="Notify"
                          name="Append">false</property>
                        <property
                          dataType="System.String"
                          description="RowSeparator"
                          expressionType="Notify"
                          name="RowSeparator">{NEWLINE}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether you want to overwrite target file if exists"
                          expressionType="Notify"
                          name="OverwriteFileIfExists">true</property>
                        <property
                          dataType="System.String"
                          description="ColumnSeparator"
                          expressionType="Notify"
                          name="ColumnSeparator">,</property>
                        <property
                          dataType="System.Boolean"
                          description="SupportUnicode"
                          expressionType="Notify"
                          name="SupportUnicode">true</property>
                        <property
                          dataType="System.Boolean"
                          description="ColumnNamesInFirstRow"
                          expressionType="Notify"
                          name="ColumnNamesInFirstRow">true</property>
                        <property
                          dataType="System.Boolean"
                          description="QuoteDataIfNeeded"
                          expressionType="Notify"
                          name="QuoteDataIfNeeded">true</property>
                        <property
                          dataType="System.String"
                          description="Date time format string for any column with DT_DBDATETIME, DT_DBDATETIME2 or DB_DATE format"
                          expressionType="Notify"
                          name="DateTimeFormat">yyyy-MM-dd HH:mm:ss</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.TrashDestination</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Trash Destination 1.Inputs[TrashDestinationInput]"
                          hasSideEffects="true"
                          name="TrashDestinationInput">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Trash Destination 2"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Trash Destination; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="The trash destination is used to create dummy destination which ends data path without any processing."
                      name="Trash Destination 2"
                      version="2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.String"
                          description="File path where you want to save data"
                          expressionType="Notify"
                          name="FilePath"></property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates if you want to save input data to comma separated text file"
                          expressionType="Notify"
                          name="SaveDataToFile">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Append data to file"
                          expressionType="Notify"
                          name="Append">false</property>
                        <property
                          dataType="System.String"
                          description="RowSeparator"
                          expressionType="Notify"
                          name="RowSeparator">{NEWLINE}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether you want to overwrite target file if exists"
                          expressionType="Notify"
                          name="OverwriteFileIfExists">true</property>
                        <property
                          dataType="System.String"
                          description="ColumnSeparator"
                          expressionType="Notify"
                          name="ColumnSeparator">,</property>
                        <property
                          dataType="System.Boolean"
                          description="SupportUnicode"
                          expressionType="Notify"
                          name="SupportUnicode">true</property>
                        <property
                          dataType="System.Boolean"
                          description="ColumnNamesInFirstRow"
                          expressionType="Notify"
                          name="ColumnNamesInFirstRow">true</property>
                        <property
                          dataType="System.Boolean"
                          description="QuoteDataIfNeeded"
                          expressionType="Notify"
                          name="QuoteDataIfNeeded">true</property>
                        <property
                          dataType="System.String"
                          description="Date time format string for any column with DT_DBDATETIME, DT_DBDATETIME2 or DB_DATE format"
                          expressionType="Notify"
                          name="DateTimeFormat">yyyy-MM-dd HH:mm:ss</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.TrashDestination</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Trash Destination 2.Inputs[TrashDestinationInput]"
                          hasSideEffects="true"
                          name="TrashDestinationInput">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                    </component>
                  </components>
                  <paths>
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status.Paths[Create]"
                      endId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Trash Destination 1.Inputs[TrashDestinationInput]"
                      name="Create"
                      startId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Check for error.Outputs[Create]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status.Paths[Doesnt Exist]"
                      endId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Check for error.Inputs[Conditional Split Input]"
                      name="Doesnt Exist"
                      startId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Check if exists.Outputs[Doesnt Exist]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status.Paths[Error]"
                      endId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Trash Destination 2.Inputs[TrashDestinationInput]"
                      name="Error"
                      startId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Check for error.Outputs[Error]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status.Paths[Exists]"
                      endId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Set CampaignStatusId.Inputs[SetVariableTransformInput]"
                      name="Exists"
                      startId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Check if exists.Outputs[Exists]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status.Paths[JsonSourceOutput]"
                      endId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Check if exists.Inputs[Conditional Split Input]"
                      name="JsonSourceOutput"
                      startId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign.Outputs[JsonSourceOutput]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Search for Campaign Status.Paths[SetVariableTransformOutput]"
                      endId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Trash Destination.Inputs[TrashDestinationInput]"
                      name="SetVariableTransformOutput"
                      startId="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Set CampaignStatusId.Outputs[SetVariableTransformOutput]" />
                  </paths>
                </pipeline>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign"
              DTS:CreationName="Microsoft.Pipeline"
              DTS:Description="Data Flow Task"
              DTS:DTSID="{D59E0967-56B5-4389-90BC-39E8B71E6412}"
              DTS:ExecutableType="Microsoft.Pipeline"
              DTS:LocaleID="-1"
              DTS:ObjectName="Search for Network Leads Campaign"
              DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:ObjectData>
                <pipeline
                  version="1">
                  <components>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Check for error"
                      componentClassID="Microsoft.ConditionalSplit"
                      contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
                      name="Check for error"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Check for error.Inputs[Conditional Split Input]"
                          description="Input to the Conditional Split Transformation"
                          name="Conditional Split Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Check for error.Inputs[Conditional Split Input].Columns[P_error]"
                              cachedDataType="wstr"
                              cachedLength="1020"
                              cachedName="P_error"
                              lineageId="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Search For Network Leads Campaign.Outputs[JsonSourceOutput].Columns[P_error]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Check for error.Outputs[Create]"
                          description="Output 1 of the Conditional Split Transformation"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          exclusionGroup="1"
                          name="Create"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Check for error.Inputs[Conditional Split Input]"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                              name="Expression">[ISNULL](#{Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Search For Network Leads Campaign.Outputs[JsonSourceOutput].Columns[P_error]}) ==  TRUE </property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the friendly version of the expression. This expression version uses column names."
                              expressionType="Notify"
                              name="FriendlyExpression">ISNULL(P_error) ==  TRUE </property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                              name="EvaluationOrder">0</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Check for error.Outputs[Error]"
                          description="Output 2 of the Conditional Split Transformation"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          exclusionGroup="1"
                          name="Error"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Check for error.Inputs[Conditional Split Input]"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                              name="Expression">[ISNULL](#{Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Search For Network Leads Campaign.Outputs[JsonSourceOutput].Columns[P_error]}) ==  FALSE </property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the friendly version of the expression. This expression version uses column names."
                              expressionType="Notify"
                              name="FriendlyExpression">ISNULL(P_error) ==  FALSE </property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                              name="EvaluationOrder">1</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Check for error.Outputs[Conditional Split Default Output]"
                          description="Default Output of the Conditional Split Transformation"
                          exclusionGroup="1"
                          name="Conditional Split Default Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Check for error.Inputs[Conditional Split Input]">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              name="IsDefaultOut">true</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Check for error.Outputs[Conditional Split Error Output]"
                          description="Error Output of the Conditional Split Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Conditional Split Error Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Check for error.Inputs[Conditional Split Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Check for error.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Check for error.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Check for error.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Check for error.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Check if exists"
                      componentClassID="Microsoft.ConditionalSplit"
                      contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
                      name="Check if exists"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Check if exists.Inputs[Conditional Split Input]"
                          description="Input to the Conditional Split Transformation"
                          name="Conditional Split Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Check if exists.Inputs[Conditional Split Input].Columns[id]"
                              cachedDataType="i8"
                              cachedName="id"
                              lineageId="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Search For Network Leads Campaign.Outputs[JsonSourceOutput].Columns[id]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Check if exists.Outputs[Exists]"
                          description="Output 1 of the Conditional Split Transformation"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          exclusionGroup="1"
                          name="Exists"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Check if exists.Inputs[Conditional Split Input]"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                              name="Expression">[ISNULL](#{Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Search For Network Leads Campaign.Outputs[JsonSourceOutput].Columns[id]}) ==  FALSE </property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the friendly version of the expression. This expression version uses column names."
                              expressionType="Notify"
                              name="FriendlyExpression">ISNULL(id) ==  FALSE </property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                              name="EvaluationOrder">0</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Check if exists.Outputs[Doesnt Exist]"
                          description="Output 2 of the Conditional Split Transformation"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          exclusionGroup="1"
                          name="Doesnt Exist"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Check if exists.Inputs[Conditional Split Input]"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                              name="Expression">[ISNULL](#{Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Search For Network Leads Campaign.Outputs[JsonSourceOutput].Columns[id]}) ==  TRUE </property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the friendly version of the expression. This expression version uses column names."
                              expressionType="Notify"
                              name="FriendlyExpression">ISNULL(id) ==  TRUE </property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                              name="EvaluationOrder">1</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Check if exists.Outputs[Conditional Split Default Output]"
                          description="Default Output of the Conditional Split Transformation"
                          exclusionGroup="1"
                          name="Conditional Split Default Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Check if exists.Inputs[Conditional Split Input]">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              name="IsDefaultOut">true</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Check if exists.Outputs[Conditional Split Error Output]"
                          description="Error Output of the Conditional Split Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Conditional Split Error Output"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Check if exists.Inputs[Conditional Split Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Check if exists.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Check if exists.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Check if exists.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Check if exists.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Search For Network Leads Campaign"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="JSON Source (REST API or File); ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="The JSON source is used to read data from JSON files, RESTful Web Service or direct JSON String."
                      name="Search For Network Leads Campaign"
                      usesDispositions="true"
                      version="33">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">3</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for any numeric data types"
                          expressionType="Notify"
                          name="TreatBlankNumberAsNull">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for bool data types"
                          expressionType="Notify"
                          name="TreatBlankBoolAsNull">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for any date/time data types"
                          expressionType="Notify"
                          name="TreatBlankDateAsNull">true</property>
                        <property
                          dataType="System.Int32"
                          description="Encoding of source file"
                          expressionType="Notify"
                          name="Encoding"
                          typeConverter="ZappySys.Common.EncodingType">0</property>
                        <property
                          dataType="System.String"
                          description="Character set for text (e.g. utf-8 )"
                          expressionType="Notify"
                          name="CharacterSet"></property>
                        <property
                          dataType="System.Int32"
                          description="Defines how to read the JSON file or direct string"
                          expressionType="Notify"
                          name="AccessMode"
                          typeConverter="ZappySys.Common.Ssis.FileValueAccessMode">3</property>
                        <property
                          dataType="System.String"
                          description="Defines how to read the JSON file or direct string"
                          expressionType="Notify"
                          name="DirectValue"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.String"
                          description="Variable name which holds JSON string"
                          expressionType="Notify"
                          name="ValueVariable"
                          typeConverter="ZappySys.PowerPack.Converters.VariableEditor,ZappySys.PowerPack130.UI,Version=1.0.0.0,Culture=neutral,PublicKeyToken=1903265a93eae502"></property>
                        <property
                          dataType="System.String"
                          description="Variable name which holds data file path or url"
                          expressionType="Notify"
                          name="PathVariable"
                          typeConverter="ZappySys.PowerPack.Converters.VariableEditor,ZappySys.PowerPack130.UI,Version=1.0.0.0,Culture=neutral,PublicKeyToken=1903265a93eae502">User::RexAPIWebURL</property>
                        <property
                          dataType="System.String"
                          description="JSON file file path (e.g. c:\data\myfile.json) or pattern to process multiple files (e.g. c:\data\*.json)"
                          expressionType="Notify"
                          name="DirectPath"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.Boolean"
                          description="Include files from sub folders too."
                          expressionType="Notify"
                          name="Recursive">false</property>
                        <property
                          dataType="System.Boolean"
                          description="By default process stops with error if specified local file is not found. Set this property to true if you wish to continue rather than throwing file not found error."
                          expressionType="Notify"
                          name="ContinueOnFileNotFoundError">false</property>
                        <property
                          dataType="System.String"
                          description="Set this if you want to set custom Http headers. You may use variable anywhere in the header value using syntax {{User::YourVarName}}. Syntax of Header key value pair is : &amp;lt;request&amp;gt;&amp;lt;header&amp;gt;&amp;lt;name&amp;gt;x-myheader-1&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;AAA&amp;lt;/value&amp;gt;&amp;lt;/header&amp;gt; &amp;lt;header&amp;gt;&amp;lt;name&amp;gt;x-myheader-2&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;BBB&amp;lt;/value&amp;gt;&amp;lt;/header&amp;gt;&amp;lt;/request&amp;gt;"
                          expressionType="Notify"
                          name="HttpHeaders">&lt;request&gt;&lt;header&gt;&lt;name&gt;Accept&lt;/name&gt;&lt;value&gt;*/*&lt;/value&gt;&lt;/header&gt;&lt;header&gt;&lt;name&gt;Cache-Control&lt;/name&gt;&lt;value&gt;no-cache&lt;/value&gt;&lt;/header&gt;&lt;/request&gt;</property>
                        <property
                          dataType="System.String"
                          description="User defined data you wish to send along with your HTTP Request (e.g. Upload file data, Form POST data). Usually you have to set content-type of your data but if you select RequestMethod=POST then system will automatically set content-type=application/x-www-form-urlencoded."
                          expressionType="Notify"
                          name="HttpRequestData">{
    "method": "Campaigns::search",
    "args": {
        "criteria": [
            {
                "name": "name",
                "type": "=",
                "value": "Network Leads"
            }
        ],
        "limit": 1,
        "order_by": {
            "system_ctime": "asc"
        }
    },
    "strip_response_prefixes": true,
    "token": "{{User::RexToken}}"
}</property>
                        <property
                          dataType="System.String"
                          description="Http Web Request Method (e.g. POST, GET, PUT, LIST, DELETE...). Refer your API documentation if you are not sure which method you have to use."
                          expressionType="Notify"
                          name="HttpRequestMethod">POST</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies content type for data you wish to POST. If you select Default option then system default content type will be used (i.e. application/x-www-form-urlencoded). If you specify Content-Type header along with this option then header value takes precedence."
                          expressionType="Notify"
                          name="HttpRequestContentType"
                          typeConverter="ZappySys.Common.Web.HttpRequestContentType">0</property>
                        <property
                          dataType="System.Boolean"
                          description="Check this option if you want to upload file(s) (i.e. POST RAW file data) or send data using Multi-Part encoding method (i.e. Content-Type: multipart/form-data). Multi-Part request allows you to mix key/value and upload files in same request. On the other hand raw upload allows only single file upload (without any key/value) &#xA;&#xA;==== Raw Upload (Content-Type: application/octet-stream) =====   &#xA;To upload single file in raw mode check this option and specify full file path starting with @ sign in the Body (e.g.  @c:\data\myfile.zip ) &#xA;&#xA;==== Form-Data / Multipart Upload (Content-Type: multipart/form-data) =====   &#xA;To treat your Request data as multi part fields you must specify key/value pairs separated by new lines into RequestData field (i.e. Body). Each key value pair is entered on new-line and key/value are separated using equal sign (=). Preceding and trailing spaces are ignored also blank lines are ignored. &#xA;If field value has some any special character(s) then use escape sequence (e.g. For NewLine: \r\n, For Tab: \t, For at (@): \@). When value of any field starts with at sign (@) its automatically treated as File you want to upload. By default file content type is determined based on extension however you can supply content type manually for any field using this way [ fieldname.Content-Type=some content type ]. In below example we have supplied Content-Type for file2 and SomeField1, all other fields are using default content-type.&#xA;See below Example of uploading multiple files along with additional fields.&#xA;&#xA;file1=@c:\data\Myfile1.txt&#xA;file2=@c:\data\Myfile2.json&#xA;file2.Content-Type=application/json&#xA;SomeField1=aaaaaaa&#xA;SomeField1.Content-Type=text/plain&#xA;SomeField2=12345&#xA;SomeFieldWithNewLineAndTab=This is line1\r\nThis is line2\r\nThis is \ttab \ttab \ttab&#xA;SomeFieldStartingWithAtSign=\@MyTwitterHandle&#xA;"
                          expressionType="Notify"
                          name="IsMultiPartUpload">false</property>
                        <property
                          dataType="System.Int32"
                          description="Data format coming from HTTP Response. This is useful for example when you have OData service and you want to automatically consume all pages of data using odata.netUrl. Setting JsonFormat=Odata will automatically do it for you. This setting is only applicable if JSON is coming from HTTP WebRequest."
                          expressionType="Notify"
                          name="JsonFormat"
                          typeConverter="ZappySys.Json.JsonFormat">0</property>
                        <property
                          dataType="System.Boolean"
                          description="Enable custom proxy settings (If this is not set then system default proxy will be used. To disable proxy totally uncheck this option and check DoNotUseDefaultProxy option if available)"
                          expressionType="Notify"
                          name="UseProxy">false</property>
                        <property
                          dataType="System.String"
                          description="Web URL of Proxy server (including port  if necessary). [e.g. http://myproxyserver:8080/]"
                          expressionType="Notify"
                          name="ProxyUrl"></property>
                        <property
                          dataType="System.Boolean"
                          description="Enable passing userid and password to proxy server"
                          expressionType="Notify"
                          name="UseProxyCreds">false</property>
                        <property
                          dataType="System.String"
                          description="Proxy username"
                          expressionType="Notify"
                          name="ProxyUserName"></property>
                        <property
                          dataType="System.String"
                          description="Proxy password"
                          expressionType="Notify"
                          name="ProxyPassword"></property>
                        <property
                          dataType="System.String"
                          description="If Service response support pagination using some sort of next url attribute then specify which attribute name in JSON Response string which holds next url. If no attribute found or its null then component will stop fetching next resultset. Example: $.pagingInfo.nextUrl"
                          expressionType="Notify"
                          name="NextUrlAttribute"></property>
                        <property
                          dataType="System.String"
                          description="If Service response support pagination using some sort of prev/next url attribute then specify which previous link attribute name from JSON Response string which holds previous url."
                          expressionType="Notify"
                          name="PrevUrlAttribute"></property>
                        <property
                          dataType="System.String"
                          description="Specifies value for NextUrlAttribute or StopIndicatorAttribute which indicates last page to stop pagination. If you have specified StopIndicatorAttribute then you can use Regular expression rather than static value to indicate last page. To use regular expression value of this property must start with regex= prefix. Example : regex=FALSE|N  (assuming you set StopIndicatorAttribute to something like $.hasMore)"
                          expressionType="Notify"
                          name="NextUrlStopIndicator"></property>
                        <property
                          dataType="System.String"
                          description="Attribute name or expression for attribute which can be used as stop indicator (e.g. hasmore --or-- $.pagination.hasmore). If this value is blank then NextUrlAttribute is used"
                          expressionType="Notify"
                          name="StopIndicatorAttribute"></property>
                        <property
                          dataType="System.String"
                          description="If you want to include certain text (or parameters) at the end of Next url then specify this attribute (e.g. &amp;format=json). Another common usecase of this property is to supply pagination token to next Page URL. You can also use &lt;%nextlink%&gt; or  &lt;%nextlink_encoded%&gt; placeholder (e.g. &amp;cursor=&lt;%nextlink_encoded%&gt; )"
                          expressionType="Notify"
                          name="NextUrlSuffix"></property>
                        <property
                          dataType="System.Int32"
                          description="This property indicates total number of milliseconds you want to wait before sending next request. This option allows you to adjust how many API calls can be made within certain timeframe. If your API Service has no limit then set this option to zero"
                          expressionType="Notify"
                          name="NextUrlWait">0</property>
                        <property
                          dataType="System.Boolean"
                          description="If this option is true then component will continue without exception on 404 error (Url not found). This allows you to consume data gracefully."
                          expressionType="Notify"
                          name="ContinueOnUrlNotFoundError">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Continue when any type of exception occurs during http request"
                          expressionType="Notify"
                          name="ContineOnAnyError">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Continue on error when specified substring found in response"
                          expressionType="Notify"
                          name="ContineOnErrorForMessage">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Continue on error when specified status code returned from web server"
                          expressionType="Notify"
                          name="ContineOnErrorForStatusCode">false</property>
                        <property
                          dataType="System.Boolean"
                          description="When error occurs no data is returned. Use this option to get content eventhough error occurs. When this option is checked you can't use [continue on error when specific string found in response] option"
                          expressionType="Notify"
                          name="ConsumeResponseOnError">false</property>
                        <property
                          dataType="System.Int32"
                          description="Status code to match when error occurs and ContineOnErrorForStatusCode option is true. If Response status code matches to this code then task continues to run"
                          expressionType="Notify"
                          name="ErrorStatusCodeToMatch">404</property>
                        <property
                          dataType="System.String"
                          description="Error substring to match when error occurs and ContineOnErrorForMessage option is true. If Response status code matches to this code then task continues to run"
                          expressionType="Notify"
                          name="ErrorSubstringToMatch"></property>
                        <property
                          dataType="System.String"
                          description="Cookie Container can be used to maintain state between multiple web requests. Example: You can login to site like wordpress and then extract any private page content by simply passing authentication cookies using this variable."
                          expressionType="Notify"
                          name="CookieContainerVariable"></property>
                        <property
                          dataType="System.Int32"
                          description="Http request Timeout in seconds. Set this to 0 if you want to use system default value (i.e. 100 seconds)"
                          expressionType="Notify"
                          name="RequestTimeout">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies which security protocol is supported for HTTPS communication. Using this option you can enable legacy protocol or enforce to use latest version of security protocol (Note: TLS 1.2 is only supported in SSIS 2014 or Higher)."
                          expressionType="Notify"
                          name="SecurityProtocol"
                          typeConverter="ZappySys.PowerPack.Common.HttpsSecurityProtocolType">0</property>
                        <property
                          dataType="System.Boolean"
                          description="Enable support for gzip or deflate compression. When you check this option compressed response automatically de-compressed saving bandwidth. This option is only valid if web server supports compressed response stream. Check your API documentation for more information."
                          expressionType="Notify"
                          name="EnableCompressionSupport">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Ignore SSL certificate related errors. Example: if you getting SSL/TLS errors because of certificate expired or certificate is not from trusted authority or certificate is self-signed. By checking this option you will not get SSL/TLS error."
                          expressionType="Notify"
                          name="IgnoreCertificateErrors">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Allow unsecure ciphers/suites and curves for SSLS/TLS communication. Use this option to communicate with web servers which needs legacy / unsecured ciphers support. This option is only trigged when you change default SSL/TLS Version on advanced settings tab."
                          expressionType="Notify"
                          name="AllowUnsecureSuite">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Use connection to pass credentials for authentication (e.g. Use UserID/Password or Use OAuth Protocol for token based approach)"
                          expressionType="Notify"
                          name="UseConnection">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specified how you want to loop through multiple pages returned by REST API."
                          expressionType="Notify"
                          name="PagingMode"
                          typeConverter="ZappySys.Common.RestApiPagingMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="If you wish to pass extracted pagination token or current page number in the body of next request then set this option to true. You can use [$pagetoken$] and [$pagetoken$] placeholders anywhere in the Body where you wish to insert extracted Page token. You must set encoded token you can use &lt;%nextlink_encoded%&gt; inside SuffixForNextUrl Property. If you dont use SuffixForNextUrl then raw nextLink or Token will be inserted inside the body. If you dont specify [$pagetoken$] placeholder in the body then NextPage Token will be appended at the end. NextPage Token is extracted by filter expression specified using property NextUrlSuffix"
                          expressionType="Notify"
                          name="EnablePageTokenForBody">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this to true if you wish to specify different URL, Header, Body or Filter for first page and next page (i.e. Paginated response). Some APIs like Amazon MWS, NetSuite, Zuora) you may need to set this to true."
                          expressionType="Notify"
                          name="HasDifferentNextPageInfo">false</property>
                        <property
                          dataType="System.String"
                          description="When HasDifferentNextPageInfo=true you can set this property to indicate first page and next page. You can specify different URL, Header, Body or Filter for first page and next page (i.e. Paginated response). Use [$tag$] as placeholder anywhere in the URL, Header, Body or Filter and at runtime system will replace it with correct value (first page or next page value). Syntax to specify placeholder for first page vs next page is like a connectionstring url=FirstPageValue|NextPageValue;header=FirstPageValue|NextPageValue;body=FirstPageValue|NextPageValue;filter=FirstPageValue|NextPageValue; You can use one or more key/value pairs to make things dynamic (e.g. url, header, body or filter)  .For example if you have pagination in your API and First URL is http://abc.com/api/items/get and to get more records you have to call http://abc.com/api/items/getNext then you can use [$tag$] as placeholder in the URL http://abc.com/api/items/[$tag$] and specify this property with first page tag and next page tag as url=get|getNext  (Tags are separated using vertical bar). "
                          expressionType="Notify"
                          name="PagePlaceholders"></property>
                        <property
                          dataType="System.String"
                          description="Use this property to set request body fragment for first page. HasDifferentNextPageInfo must be set to true to use this property."
                          expressionType="Notify"
                          name="FirstPageBodyPart"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.String"
                          description="Use this property to set request body fragment for any request after first request. HasDifferentNextPageInfo must be set to true to use this property."
                          expressionType="Notify"
                          name="NextPageBodyPart"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.String"
                          description="Expression to extract Maximum pages to loop through. Some APIs don't stop pagination and keep returning last page data when you try to read data after last page. Specify expression (e.g. $.page_count ) to read total pages to loop through using this property."
                          expressionType="Notify"
                          name="PagingMaxPagesExpr"></property>
                        <property
                          dataType="System.String"
                          description="Expression to extract Maximum records to loop through. Some APIs don't stop pagination and keep returning last page data when you try to read data after last page. Specify expression (e.g. $.total_rows ) to read total pages to loop through using this property. This setting is ignored if you set PagingMaxPagesExpr."
                          expressionType="Notify"
                          name="PagingMaxRowsExpr"></property>
                        <property
                          dataType="System.String"
                          description="When you enable PagingMaxRowsExpr (end pagination based on MaxRowCount) then you need to count records coming in each response. This expression extract all rows found under specified expression (e.g. $.orders[*] if all records found under orders node)."
                          expressionType="Notify"
                          name="PagingMaxRowsDataPathExpr"></property>
                        <property
                          dataType="System.String"
                          description="e.g. Type page_num if URL looks like this =&gt; http://abc.com/?page_num=1&amp;sort=true  (page number via query string)&#xA;--or-- Type &lt;%page%&gt; if page number is inside URL path like this =&gt; http://abc.com/1/?sort=true  (e.g. replace page number in url with placeholder http://abc.com/&lt;%page%&gt;/?sort=true)&#xA;Page number will be incremented by one for next URL until last page is reached or [Max Page Number] is reached"
                          expressionType="Notify"
                          name="PageNumberAttributeNameInUrl"></property>
                        <property
                          dataType="System.Int32"
                          description="Maximum page number until which auto increment is allowed. Type zero for no limit. Next URL contains next page number (increment by one) until last page is detected or [Max Page Number] limit is reached."
                          expressionType="Notify"
                          name="MaxPageNumber">0</property>
                        <property
                          dataType="System.String"
                          description="Variable name which will hold starting page number. This is ignored if you useing parameter name from query string to indicate page number."
                          expressionType="Notify"
                          name="StartPageNumberVariable"></property>
                        <property
                          dataType="System.Int32"
                          description="Page counter increment. By default next page is incremented by one if this value is zero. You can also enter negative number if you want to decrease page counter."
                          expressionType="Notify"
                          name="PageNumberIncrement">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specified how you want detect last page."
                          expressionType="Notify"
                          name="PagingEndStrategy"
                          typeConverter="ZappySys.Common.UrlPagingEndDetectionStrategy">3</property>
                        <property
                          dataType="System.Boolean"
                          description="Condition result to compare to detect last page. Set this property to True if you want detect last page if condition is true else set this to False."
                          expressionType="Notify"
                          name="LastPageWhenConditionEqualsTo">true</property>
                        <property
                          dataType="System.Int32"
                          description="Minimum bytes expected from response."
                          expressionType="Notify"
                          name="ResponseMinBytes">0</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum bytes from response."
                          expressionType="Notify"
                          name="ResponseMaxBytes">3</property>
                        <property
                          dataType="System.String"
                          description="Expected error message sub string from response."
                          expressionType="Notify"
                          name="ResponseErrorString">not found</property>
                        <property
                          dataType="System.Int32"
                          description="Expected status code from response when page number you trying to access not found."
                          expressionType="Notify"
                          name="ResponseStatusCode">404</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum JSON records to fetch. Set this value to 0 for all records"
                          expressionType="Notify"
                          name="MaxRows">0</property>
                        <property
                          dataType="System.String"
                          description="Enter expression here to filter data.(Example:  $.Users[*].UserName ) This will fetch User names from users records"
                          expressionType="Notify"
                          name="Filter"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">$.result.rows[*]</property>
                        <property
                          dataType="System.Boolean"
                          description="Use this option to include parent properties (Non array) in the output along with Filtered Rows"
                          expressionType="Notify"
                          name="IncludeParentColumns">true</property>
                        <property
                          dataType="System.Boolean"
                          description="By default child and parent information is not included in the output if children not found for specified expression. For example if you want to extract all orders from all customers nodes then you can type $.Customers[*].Orders[*]. This will fetch all orders from all customers. By default customers records without orders wont be included in the output. If you want to include those customers where orders not found then check this option (Output null information for order attributes). This behavior is similar to LEFT OUTER JOIN in SQL (Left side is parent, right side is child). This option is ***resource intensive*** so only check if you really care about this behavior."
                          expressionType="Notify"
                          name="IncludeParentColumnsWhenChildMissing">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to true if you want to output parent columns which are array. By default any parent column which is an array is not included in output. See also FilterForParentColumnsWithArrayType property if you set this property"
                          expressionType="Notify"
                          name="IncludeParentColumnsWithArrayType">false</property>
                        <property
                          dataType="System.String"
                          description="Filter expression to extract value form parent"
                          expressionType="Notify"
                          name="FilterForParentColumnsWithArrayType"></property>
                        <property
                          dataType="System.String"
                          description="Prefix for parent column name. This option is only valid if you have set IncludeParentColumns=True"
                          expressionType="Notify"
                          name="ParentColumnPrefix">P_</property>
                        <property
                          dataType="System.Boolean"
                          description="Throw error if property name specified in filter expression is missing. By default it will ignore any missing property errors."
                          expressionType="Notify"
                          name="ThrowErrorIfPropertyMissing">false</property>
                        <property
                          dataType="System.Int32"
                          description="This property how many nested levels should be scanned to fetch various properties. 0=Scan all child levels."
                          expressionType="Notify"
                          name="MaxLevelsToScan">0</property>
                        <property
                          dataType="System.String"
                          description="List comma separated property names from JSON document which you want to exclude from output. Specify parent property name to exclude all child nodes."
                          expressionType="Notify"
                          name="ExcludedProperties"></property>
                        <property
                          dataType="System.String"
                          description="Property level separator used in generated property name (separator for outer properties - Above selected filter node). Use this if default separator is producing duplicate property name which is conflicting with existing name."
                          expressionType="Notify"
                          name="LevelSeparator">_</property>
                        <property
                          dataType="System.Boolean"
                          description="Enables deep array flattening for selected filtered hierarchy. When you turn on this property it will flatten each property of each array item and expose as column (e.g. If you have Filter set as $.customers[*] and for each customer you have an array of Addresses then you may see output columns like Addresses.1.City, Addresses.1.State, Addresses.2.City, Addresses.2.State .... Addresses.N.City, Addresses.N.State). You can control how many array items you want to flatten by setting MaxArrayItemsToFlatten property."
                          expressionType="Notify"
                          name="EnableArrayFlattening">false</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum number of array items to flatten. inner array flattening. Adjust this property to control how many columns being generated. This option is ignored if you set EnableArrayFlattening=false"
                          expressionType="Notify"
                          name="MaxArrayItemsToFlatten">10</property>
                        <property
                          dataType="System.Int32"
                          description="Compression format for source file (e.g. gzip, zip)"
                          expressionType="Notify"
                          name="FileCompressionType"
                          typeConverter="ZappySys.Common.FileCompressionType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Array Transformation you want to apply. Useful for case when you have 2-Dimensional arrays with rows/columns in separate arrays."
                          expressionType="Notify"
                          name="ArrayTransformationType"
                          typeConverter="ZappySys.Json.ArrayTransformType">0</property>
                        <property
                          dataType="System.String"
                          description="Filter expression to use to extract column names for array transformation."
                          expressionType="Notify"
                          name="ArrayTransColumnNameFilter"></property>
                        <property
                          dataType="System.String"
                          description="Filter expression for row values (Not applicable for simple array transformation)."
                          expressionType="Notify"
                          name="ArrayTransRowValueFilter"></property>
                        <property
                          dataType="System.Boolean"
                          description="When you have 2D array but don't have column list specified in a separate array then use this option (e.g. { arr: [[10,11],[21,22]] } ). If you selected Column less array or JSON Lines option then this property means Column Names coming from First Line of array."
                          expressionType="Notify"
                          name="ArrayTransEnableCustomColumns">false</property>
                        <property
                          dataType="System.String"
                          description="When you have 2D array but don't have column list specified in a separate array then use specify column names here. Use comma separated list (e.g col1,col2,col3 ). Column name Order must match value order."
                          expressionType="Notify"
                          name="ArrayTransCustomColumns"></property>
                        <property
                          dataType="System.String"
                          description="Specifies how custom date formatted strings are parsed when reading JSON."
                          expressionType="Notify"
                          name="DateFormatString"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies how date formatted strings, e.g. Date(1198908717056) and 2012-03-21T05:40Z, are parsed when reading JSON."
                          expressionType="Notify"
                          name="DateParseHandling"
                          typeConverter="ZappySys.Common.DateParseHandling">1</property>
                        <property
                          dataType="System.Boolean"
                          description="Indent JSON output so its easy to read."
                          expressionType="Notify"
                          name="IndentOutput">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Output as raw JSON document rather than parsing individual fields. This option is helpful if you have documents stored in a file and you want to pass them downstream as raw JSON string rather than parsing into columns."
                          expressionType="Notify"
                          name="OutputRawDocument">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to true if you want to output FilePath. This option is ignored when you consume DirectValue or data from Url rather than local files. Output column name will be __FilePath"
                          expressionType="Notify"
                          name="OutputFilePath">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to true if you want to output FileName. This option is ignored when you consume DirectValue or data from Url rather than local files. Output column name will be __FileName"
                          expressionType="Notify"
                          name="OutputFileName">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to true if you want to move processed file to archive folder."
                          expressionType="Notify"
                          name="EnableArchiveFile">false</property>
                        <property
                          dataType="System.String"
                          description="Folder path where you want to move processed file."
                          expressionType="Notify"
                          name="ArchiveFolderPath"></property>
                        <property
                          dataType="System.Boolean"
                          description="Folder path where you want to move processed file."
                          expressionType="Notify"
                          name="OverwriteFileInArchiveFolder">false</property>
                        <property
                          dataType="System.String"
                          description="File naming convention for archived file. By default it will same name as original source file processed. But you can control naming format using {%name%} and {%ext%} placeholders. e.g. {%name%}_processed{%ext%} or {%name%}{%ext%}.{{System::ContainerStartTime,yyyyMMdd_HHmmss_fff}}"
                          expressionType="Notify"
                          name="ArchiveFileNamingConvention"></property>
                        <property
                          dataType="System.Boolean"
                          description="When this property is true then Column is converted to Row. Pivoted names will appear under  Pivot_Name column and values will appear under Pivot_Value field."
                          expressionType="Notify"
                          name="EnablePivot">false</property>
                        <property
                          dataType="System.Boolean"
                          description="When this option is checked, system allows to parse large number (Higher than Int64) in JSON document (i.e. { id: 76000009353950433247780 } ). If you do not turn on this option then it may throw error if large number is encountered. This option is SLOW because it has to perform additional checks in order to avoid Large number overflow error so do not turn on unless you getting Large number error."
                          expressionType="Notify"
                          name="EnableBigNumberHandling">false</property>
                        <property
                          dataType="System.Int32"
                          description="Metadata scan mode controls how data type and length is determined. By default few records scanned to determine datatype/length. Changing ScanMode affects length/datatype accuracy."
                          expressionType="Notify"
                          name="MetaDataScanMode"
                          typeConverter="ZappySys.Common.Data.MetaDataScanMode">4</property>
                        <property
                          dataType="System.Int32"
                          description="Length for all string column. This option is only valid for MetaDataScanMode=Custom"
                          expressionType="Notify"
                          name="MetaDataCustomLength">1000</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.JsonSource</property>
                      </properties>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Search For Network Leads Campaign.Outputs[JsonSourceOutput]"
                          errorOrTruncationOperation="Error"
                          errorRowDisposition="FailComponent"
                          name="JsonSourceOutput"
                          truncationRowDisposition="FailComponent">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Search For Network Leads Campaign.Outputs[JsonSourceOutput].Columns[P_error]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Search For Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[P_error]"
                              length="1020"
                              lineageId="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Search For Network Leads Campaign.Outputs[JsonSourceOutput].Columns[P_error]"
                              name="P_error" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Search For Network Leads Campaign.Outputs[JsonSourceOutput].Columns[id]"
                              dataType="i8"
                              externalMetadataColumnId="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Search For Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[id]"
                              lineageId="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Search For Network Leads Campaign.Outputs[JsonSourceOutput].Columns[id]"
                              name="id" />
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Search For Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[P_result_total]"
                              dataType="i8"
                              name="P_result_total" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Search For Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[P_result_viewstate_id]"
                              dataType="wstr"
                              length="1020"
                              name="P_result_viewstate_id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Search For Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[P_error]"
                              dataType="wstr"
                              length="1020"
                              name="P_error" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Search For Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[system_record_state]"
                              dataType="wstr"
                              length="24"
                              name="system_record_state" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Search For Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[system_ctime]"
                              dataType="i8"
                              name="system_ctime" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Search For Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[system_modtime]"
                              dataType="i8"
                              name="system_modtime" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Search For Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[system_created_from_template_name]"
                              dataType="wstr"
                              length="104"
                              name="system_created_from_template_name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Search For Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[name]"
                              dataType="wstr"
                              length="124"
                              name="name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Search For Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[start_date]"
                              dataType="wstr"
                              length="80"
                              name="start_date" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Search For Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[end_date]"
                              dataType="wstr"
                              length="80"
                              name="end_date" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Search For Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[etag]"
                              dataType="wstr"
                              length="60"
                              name="etag" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Search For Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[system_owner_user.id]"
                              dataType="wstr"
                              length="20"
                              name="system_owner_user.id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Search For Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[system_owner_user.name]"
                              dataType="wstr"
                              length="64"
                              name="system_owner_user.name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Search For Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[system_owner_user.first_name]"
                              dataType="wstr"
                              length="28"
                              name="system_owner_user.first_name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Search For Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[system_owner_user.last_name]"
                              dataType="wstr"
                              length="48"
                              name="system_owner_user.last_name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Search For Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[system_owner_user.email_address]"
                              dataType="wstr"
                              length="128"
                              name="system_owner_user.email_address" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Search For Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[system_modified_user.id]"
                              dataType="wstr"
                              length="20"
                              name="system_modified_user.id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Search For Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[system_modified_user.name]"
                              dataType="wstr"
                              length="100"
                              name="system_modified_user.name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Search For Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[system_modified_user.first_name]"
                              dataType="wstr"
                              length="48"
                              name="system_modified_user.first_name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Search For Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[system_modified_user.last_name]"
                              dataType="wstr"
                              length="48"
                              name="system_modified_user.last_name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Search For Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[system_modified_user.email_address]"
                              dataType="wstr"
                              length="128"
                              name="system_modified_user.email_address" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Search For Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[system_created_user.id]"
                              dataType="wstr"
                              length="20"
                              name="system_created_user.id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Search For Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[system_created_user.name]"
                              dataType="wstr"
                              length="100"
                              name="system_created_user.name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Search For Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[system_created_user.first_name]"
                              dataType="wstr"
                              length="48"
                              name="system_created_user.first_name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Search For Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[system_created_user.last_name]"
                              dataType="wstr"
                              length="48"
                              name="system_created_user.last_name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Search For Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[system_created_user.email_address]"
                              dataType="wstr"
                              length="128"
                              name="system_created_user.email_address" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Search For Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[security_user_rights]"
                              dataType="wstr"
                              length="260"
                              name="security_user_rights" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Search For Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[type.id]"
                              dataType="wstr"
                              length="52"
                              name="type.id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Search For Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[type.text]"
                              dataType="wstr"
                              length="52"
                              name="type.text" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Search For Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[status.id]"
                              dataType="wstr"
                              length="44"
                              name="status.id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Search For Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[status.text]"
                              dataType="wstr"
                              length="44"
                              name="status.text" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Search For Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[archive_reason]"
                              dataType="wstr"
                              length="1020"
                              name="archive_reason" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Search For Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[system_created_from_template.name]"
                              dataType="wstr"
                              length="104"
                              name="system_created_from_template.name" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Search For Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[system_created_from_template.type.id]"
                              dataType="wstr"
                              length="52"
                              name="system_created_from_template.type.id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Search For Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[system_created_from_template.type.text]"
                              dataType="wstr"
                              length="52"
                              name="system_created_from_template.type.text" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Search For Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[system_created_from_template.id]"
                              dataType="i8"
                              name="system_created_from_template.id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Search For Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[id]"
                              dataType="i8"
                              name="id" />
                            <externalMetadataColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Search For Network Leads Campaign.Outputs[JsonSourceOutput].ExternalColumns[__FileName]"
                              dataType="wstr"
                              length="600"
                              name="__FileName" />
                          </externalMetadataColumns>
                        </output>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Search For Network Leads Campaign.Outputs[JsonSource Error Output]"
                          isErrorOut="true"
                          name="JsonSource Error Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Search For Network Leads Campaign.Outputs[JsonSource Error Output].Columns[P_error]"
                              dataType="wstr"
                              length="1020"
                              lineageId="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Search For Network Leads Campaign.Outputs[JsonSource Error Output].Columns[P_error]"
                              name="P_error" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Search For Network Leads Campaign.Outputs[JsonSource Error Output].Columns[id]"
                              dataType="i8"
                              lineageId="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Search For Network Leads Campaign.Outputs[JsonSource Error Output].Columns[id]"
                              name="id" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Search For Network Leads Campaign.Outputs[JsonSource Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Search For Network Leads Campaign.Outputs[JsonSource Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Search For Network Leads Campaign.Outputs[JsonSource Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Search For Network Leads Campaign.Outputs[JsonSource Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Search For Network Leads Campaign.Outputs[JsonSource Error Output].Columns[ErrorColumnName]"
                              codePage="1252"
                              dataType="str"
                              length="128"
                              lineageId="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Search For Network Leads Campaign.Outputs[JsonSource Error Output].Columns[ErrorColumnName]"
                              name="ErrorColumnName" />
                            <outputColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Search For Network Leads Campaign.Outputs[JsonSource Error Output].Columns[ErrorMessage]"
                              dataType="wstr"
                              length="1024"
                              lineageId="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Search For Network Leads Campaign.Outputs[JsonSource Error Output].Columns[ErrorMessage]"
                              name="ErrorMessage" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Set CampaignId"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Set Variable Transform; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="Set Variable with multiple operations such as Set, Increment, Replace, Append"
                      name="Set CampaignId"
                      version="2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.Int32"
                          description="Action you like to perform. If you set any action with ReplacePlaceholder then you must use placeholder &lt;%value%&gt; where you like to insert upstream value. Use variable placeholder (e.g. {{User::MyVar}} ) if you wish to replace value from variable. Example for placeholder use: { tags : [&lt;%value%&gt;] , Package: &quot;{{System::PackageName}}&quot; }"
                          expressionType="Notify"
                          name="VariableSetMode"
                          typeConverter="ZappySys.PowerPack.Common.VariableSetMode">0</property>
                        <property
                          dataType="System.String"
                          description="Name of variable you want to set (e.g. User::vMyData)"
                          expressionType="Notify"
                          name="VariableToSet"
                          typeConverter="ZappySys.PowerPack.Converters.VariableEditor,ZappySys.PowerPack130.UI,Version=1.0.0.0,Culture=neutral,PublicKeyToken=1903265a93eae502">User::CampaignId</property>
                        <property
                          dataType="System.Int32"
                          description="Number to add in previous variable value (This number can be -ve or +ve)"
                          expressionType="Notify"
                          name="IncrementBy">1</property>
                        <property
                          dataType="System.String"
                          description="Separator to use for Append mode (not valid for other mode). You can use \r\n for new line, \t for tab, \n for unix style new line."
                          expressionType="Notify"
                          name="RowSeparator">\r\n</property>
                        <property
                          dataType="System.String"
                          description="Separator to use for last row (Only valid of ."
                          expressionType="Notify"
                          name="LastRowSeparator"></property>
                        <property
                          dataType="System.String"
                          description="Header string to use for Append mode."
                          expressionType="Notify"
                          name="Header"></property>
                        <property
                          dataType="System.String"
                          description="Footer string to use for Append mode."
                          expressionType="Notify"
                          name="Footer"></property>
                        <property
                          dataType="System.Boolean"
                          description="By default SSIS doesn't allow to assign NULL value to SSIS Variable. Turn on this setting to use custom value for NULL. Set CustomValueForNull as well to use custom value for NULL"
                          expressionType="Notify"
                          name="UseCustomValueForNull">false</property>
                        <property
                          dataType="System.String"
                          description="If you set UseCustomValueForNull=true then this Custom Value will be used when NULL value is detected as input. If you leave CustomValueForNull blank then we will change NULL string to Blank, NULL Int32,Int64,Decimal,Double use 0"
                          expressionType="Notify"
                          name="CustomValueForNull"></property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.SetVariableTransform</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Set CampaignId.Inputs[SetVariableTransformInput]"
                          name="SetVariableTransformInput">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Set CampaignId.Inputs[SetVariableTransformInput].Columns[id]"
                              cachedDataType="i8"
                              cachedName="id"
                              lineageId="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Search For Network Leads Campaign.Outputs[JsonSourceOutput].Columns[id]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Set CampaignId.Outputs[SetVariableTransformOutput]"
                          errorOrTruncationOperation="Error"
                          name="SetVariableTransformOutput"
                          synchronousInputId="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Set CampaignId.Inputs[SetVariableTransformInput]">
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Trash Destination"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Trash Destination; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="The trash destination is used to create dummy destination which ends data path without any processing."
                      name="Trash Destination"
                      version="2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.String"
                          description="File path where you want to save data"
                          expressionType="Notify"
                          name="FilePath"></property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates if you want to save input data to comma separated text file"
                          expressionType="Notify"
                          name="SaveDataToFile">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Append data to file"
                          expressionType="Notify"
                          name="Append">false</property>
                        <property
                          dataType="System.String"
                          description="RowSeparator"
                          expressionType="Notify"
                          name="RowSeparator">{NEWLINE}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether you want to overwrite target file if exists"
                          expressionType="Notify"
                          name="OverwriteFileIfExists">true</property>
                        <property
                          dataType="System.String"
                          description="ColumnSeparator"
                          expressionType="Notify"
                          name="ColumnSeparator">,</property>
                        <property
                          dataType="System.Boolean"
                          description="SupportUnicode"
                          expressionType="Notify"
                          name="SupportUnicode">true</property>
                        <property
                          dataType="System.Boolean"
                          description="ColumnNamesInFirstRow"
                          expressionType="Notify"
                          name="ColumnNamesInFirstRow">true</property>
                        <property
                          dataType="System.Boolean"
                          description="QuoteDataIfNeeded"
                          expressionType="Notify"
                          name="QuoteDataIfNeeded">true</property>
                        <property
                          dataType="System.String"
                          description="Date time format string for any column with DT_DBDATETIME, DT_DBDATETIME2 or DB_DATE format"
                          expressionType="Notify"
                          name="DateTimeFormat">yyyy-MM-dd HH:mm:ss</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.TrashDestination</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Trash Destination.Inputs[TrashDestinationInput]"
                          hasSideEffects="true"
                          name="TrashDestinationInput">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Trash Destination 1"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Trash Destination; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="The trash destination is used to create dummy destination which ends data path without any processing."
                      name="Trash Destination 1"
                      version="2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.String"
                          description="File path where you want to save data"
                          expressionType="Notify"
                          name="FilePath"></property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates if you want to save input data to comma separated text file"
                          expressionType="Notify"
                          name="SaveDataToFile">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Append data to file"
                          expressionType="Notify"
                          name="Append">false</property>
                        <property
                          dataType="System.String"
                          description="RowSeparator"
                          expressionType="Notify"
                          name="RowSeparator">{NEWLINE}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether you want to overwrite target file if exists"
                          expressionType="Notify"
                          name="OverwriteFileIfExists">true</property>
                        <property
                          dataType="System.String"
                          description="ColumnSeparator"
                          expressionType="Notify"
                          name="ColumnSeparator">,</property>
                        <property
                          dataType="System.Boolean"
                          description="SupportUnicode"
                          expressionType="Notify"
                          name="SupportUnicode">true</property>
                        <property
                          dataType="System.Boolean"
                          description="ColumnNamesInFirstRow"
                          expressionType="Notify"
                          name="ColumnNamesInFirstRow">true</property>
                        <property
                          dataType="System.Boolean"
                          description="QuoteDataIfNeeded"
                          expressionType="Notify"
                          name="QuoteDataIfNeeded">true</property>
                        <property
                          dataType="System.String"
                          description="Date time format string for any column with DT_DBDATETIME, DT_DBDATETIME2 or DB_DATE format"
                          expressionType="Notify"
                          name="DateTimeFormat">yyyy-MM-dd HH:mm:ss</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.TrashDestination</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Trash Destination 1.Inputs[TrashDestinationInput]"
                          hasSideEffects="true"
                          name="TrashDestinationInput">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                    </component>
                    <component
                      refId="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Trash Destination 2"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Trash Destination; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="The trash destination is used to create dummy destination which ends data path without any processing."
                      name="Trash Destination 2"
                      version="2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.String"
                          description="File path where you want to save data"
                          expressionType="Notify"
                          name="FilePath"></property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates if you want to save input data to comma separated text file"
                          expressionType="Notify"
                          name="SaveDataToFile">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Append data to file"
                          expressionType="Notify"
                          name="Append">false</property>
                        <property
                          dataType="System.String"
                          description="RowSeparator"
                          expressionType="Notify"
                          name="RowSeparator">{NEWLINE}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether you want to overwrite target file if exists"
                          expressionType="Notify"
                          name="OverwriteFileIfExists">true</property>
                        <property
                          dataType="System.String"
                          description="ColumnSeparator"
                          expressionType="Notify"
                          name="ColumnSeparator">,</property>
                        <property
                          dataType="System.Boolean"
                          description="SupportUnicode"
                          expressionType="Notify"
                          name="SupportUnicode">true</property>
                        <property
                          dataType="System.Boolean"
                          description="ColumnNamesInFirstRow"
                          expressionType="Notify"
                          name="ColumnNamesInFirstRow">true</property>
                        <property
                          dataType="System.Boolean"
                          description="QuoteDataIfNeeded"
                          expressionType="Notify"
                          name="QuoteDataIfNeeded">true</property>
                        <property
                          dataType="System.String"
                          description="Date time format string for any column with DT_DBDATETIME, DT_DBDATETIME2 or DB_DATE format"
                          expressionType="Notify"
                          name="DateTimeFormat">yyyy-MM-dd HH:mm:ss</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.TrashDestination</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Trash Destination 2.Inputs[TrashDestinationInput]"
                          hasSideEffects="true"
                          name="TrashDestinationInput">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                    </component>
                  </components>
                  <paths>
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign.Paths[Create]"
                      endId="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Trash Destination 1.Inputs[TrashDestinationInput]"
                      name="Create"
                      startId="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Check for error.Outputs[Create]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign.Paths[Doesnt Exist]"
                      endId="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Check for error.Inputs[Conditional Split Input]"
                      name="Doesnt Exist"
                      startId="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Check if exists.Outputs[Doesnt Exist]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign.Paths[Error]"
                      endId="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Trash Destination 2.Inputs[TrashDestinationInput]"
                      name="Error"
                      startId="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Check for error.Outputs[Error]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign.Paths[Exists]"
                      endId="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Set CampaignId.Inputs[SetVariableTransformInput]"
                      name="Exists"
                      startId="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Check if exists.Outputs[Exists]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign.Paths[JsonSourceOutput]"
                      endId="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Check if exists.Inputs[Conditional Split Input]"
                      name="JsonSourceOutput"
                      startId="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Search For Network Leads Campaign.Outputs[JsonSourceOutput]" />
                    <path
                      refId="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign.Paths[SetVariableTransformOutput]"
                      endId="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Trash Destination.Inputs[TrashDestinationInput]"
                      name="SetVariableTransformOutput"
                      startId="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Set CampaignId.Outputs[SetVariableTransformOutput]" />
                  </paths>
                </pipeline>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Iterate Offices\Sequence Container\Set SSIS Variables From XML"
              DTS:CreationName="ZappySys.XmlParserTask"
              DTS:Description="ZS Xml Parser Task"
              DTS:DTSID="{E2A4AA35-19ED-4188-AA47-BBB1F6D147AA}"
              DTS:ExecutableType="ZappySys.XmlParserTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Set SSIS Variables From XML"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <XmlParserTask
                  SourceAccessMode="Connection"
                  SourceVariable=""
                  SourceConnection="{CAF7A1A7-115F-4A84-AA5C-3779E960A2C4}"
                  SourceDirectValue="&lt;!-- &#xA;Using XML Parser Task you can extract values from XML document using XPath Expression &#xA;See example in below grid. Read description for each mapping.&#xA;See more examples: https://msdn.microsoft.com/en-us/library/ms256086(v=vs.110).aspx&#xA;--&gt;&#xA;&lt;catalog&gt;&#xA;   &lt;book id=&quot;bk101&quot;&gt;&#xA;      &lt;author&gt;Gambardella, Matthew&lt;/author&gt;&#xA;      &lt;title&gt;XML Developer's Guide&lt;/title&gt;&#xA;      &lt;genre&gt;Computer&lt;/genre&gt;&#xA;      &lt;price&gt;44.95&lt;/price&gt;&#xA;      &lt;publish_date&gt;2000-10-01&lt;/publish_date&gt;&#xA;      &lt;description&gt;An in-depth look at creating applications &#xA;      with XML.&lt;/description&gt;&#xA;   &lt;/book&gt;&#xA;   &lt;book id=&quot;bk102&quot;&gt;&#xA;      &lt;author&gt;Ralls, Kim&lt;/author&gt;&#xA;      &lt;title&gt;Midnight Rain&lt;/title&gt;&#xA;      &lt;genre&gt;Fantasy&lt;/genre&gt;&#xA;      &lt;price&gt;5.95&lt;/price&gt;&#xA;      &lt;publish_date&gt;2000-12-16&lt;/publish_date&gt;&#xA;      &lt;description&gt;A former architect battles corporate zombies, &#xA;      an evil sorceress, and her own childhood to become queen &#xA;      of the world.&lt;/description&gt;&#xA;   &lt;/book&gt;&#xA;   &lt;book id=&quot;bk103&quot;&gt;&#xA;      &lt;author&gt;Corets, Eva&lt;/author&gt;&#xA;      &lt;title&gt;Maeve Ascendant&lt;/title&gt;&#xA;      &lt;genre&gt;Fantasy&lt;/genre&gt;&#xA;      &lt;price&gt;5.95&lt;/price&gt;&#xA;      &lt;publish_date&gt;2000-11-17&lt;/publish_date&gt;&#xA;      &lt;description&gt;After the collapse of a nanotechnology &#xA;      society in England, the young survivors lay the &#xA;      foundation for a new society.&lt;/description&gt;&#xA;   &lt;/book&gt;&#xA;   &lt;book id=&quot;bk104&quot;&gt;&#xA;      &lt;author&gt;Corets, Eva&lt;/author&gt;&#xA;      &lt;title&gt;Oberon's Legacy&lt;/title&gt;&#xA;      &lt;genre&gt;Fantasy&lt;/genre&gt;&#xA;      &lt;price&gt;5.95&lt;/price&gt;&#xA;      &lt;publish_date&gt;2001-03-10&lt;/publish_date&gt;&#xA;      &lt;description&gt;In post-apocalypse England, the mysterious &#xA;      agent known only as Oberon helps to create a new life &#xA;      for the inhabitants of London. Sequel to Maeve &#xA;      Ascendant.&lt;/description&gt;&#xA;   &lt;/book&gt;&#xA;&lt;/catalog&gt;"
                  TargetSettings="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-16&quot;?&gt;&lt;XmlParserSetting xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot;&gt;&lt;Mappings&gt;&lt;XmlParserMapping&gt;&lt;Path&gt;/SSISVariables/RexAPIWebURL&lt;/Path&gt;&lt;Target&gt;User::RexAPIWebURL&lt;/Target&gt;&lt;Required&gt;true&lt;/Required&gt;&lt;Description /&gt;&lt;/XmlParserMapping&gt;&lt;XmlParserMapping&gt;&lt;Path&gt; /SSISVariables/PackageUser&lt;/Path&gt;&lt;Target&gt;User::PackageUser&lt;/Target&gt;&lt;Required&gt;true&lt;/Required&gt;&lt;Description /&gt;&lt;/XmlParserMapping&gt;&lt;XmlParserMapping&gt;&lt;Path&gt;/SSISVariables/PackageErrorEmail&lt;/Path&gt;&lt;Target&gt;User::PackageErrorEmail&lt;/Target&gt;&lt;Required&gt;true&lt;/Required&gt;&lt;Description /&gt;&lt;/XmlParserMapping&gt;&lt;XmlParserMapping&gt;&lt;Path&gt;/SSISVariables/PackagePassword&lt;/Path&gt;&lt;Target&gt;User::PackagePassword&lt;/Target&gt;&lt;Required&gt;true&lt;/Required&gt;&lt;Description /&gt;&lt;/XmlParserMapping&gt;&lt;XmlParserMapping&gt;&lt;Path&gt;/SSISVariables/RexAPIWebURLv1&lt;/Path&gt;&lt;Target&gt;User::RexAPIWebURLv1&lt;/Target&gt;&lt;Required&gt;true&lt;/Required&gt;&lt;Description /&gt;&lt;/XmlParserMapping&gt;&lt;/Mappings&gt;&lt;Path /&gt;&lt;/XmlParserSetting&gt;"
                  LogLevel="Normal"
                  PrefixTimestamp="False" />
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Iterate Offices\Sequence Container.PrecedenceConstraints[Constraint]"
              DTS:CreationName=""
              DTS:DTSID="{208BF049-4A61-4CBE-B306-C47BD765EE59}"
              DTS:From="Package\Iterate Offices\Sequence Container\Set SSIS Variables From XML"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint"
              DTS:To="Package\Iterate Offices\Sequence Container\Get Auth Key" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Iterate Offices\Sequence Container.PrecedenceConstraints[Constraint 1]"
              DTS:CreationName=""
              DTS:DTSID="{45A1A56F-DF7C-493A-87D1-74C2DDC26F9B}"
              DTS:From="Package\Iterate Offices\Sequence Container\Create Contacts"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 1"
              DTS:To="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Iterate Offices\Sequence Container.PrecedenceConstraints[Constraint 10]"
              DTS:CreationName=""
              DTS:DTSID="{14FE1583-6C58-4A18-9F7D-C43E8FBEEF82}"
              DTS:From="Package\Iterate Offices\Sequence Container\Create Contacts"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 10"
              DTS:To="Package\Iterate Offices\Sequence Container\Add reminder" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Iterate Offices\Sequence Container.PrecedenceConstraints[Constraint 11]"
              DTS:CreationName=""
              DTS:DTSID="{0344A662-2821-481B-AFE9-A44D4B8B05B6}"
              DTS:EvalOp="1"
              DTS:Expression="@[User::CampaignMemberStatusId]&gt;0"
              DTS:From="Package\Iterate Offices\Sequence Container\Search for Campaign Status"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 11"
              DTS:To="Package\Iterate Offices\Sequence Container\Create Contacts" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Iterate Offices\Sequence Container.PrecedenceConstraints[Constraint 2]"
              DTS:CreationName=""
              DTS:DTSID="{5278B222-5E28-47DE-8313-334610F57B59}"
              DTS:From="Package\Iterate Offices\Sequence Container\Get Auth Key"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 2"
              DTS:To="Package\Iterate Offices\Sequence Container\Email Auth Failure"
              DTS:Value="1" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Iterate Offices\Sequence Container.PrecedenceConstraints[Constraint 3]"
              DTS:CreationName=""
              DTS:DTSID="{98B30CA1-A216-4431-A870-70E9692B8D75}"
              DTS:EvalOp="1"
              DTS:Expression="@[User::CampaignId]&gt;0"
              DTS:From="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign"
              DTS:ObjectName="Constraint 3"
              DTS:To="Package\Iterate Offices\Sequence Container\Search for Campaign Status" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Iterate Offices\Sequence Container.PrecedenceConstraints[Constraint 4]"
              DTS:CreationName=""
              DTS:DTSID="{5AD9E799-5110-4DE0-99D1-6DED3D7C5B3F}"
              DTS:From="Package\Iterate Offices\Sequence Container\Get Auth Key"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 4"
              DTS:To="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Iterate Offices\Sequence Container.PrecedenceConstraints[Constraint 5]"
              DTS:CreationName=""
              DTS:DTSID="{9E341CB5-69FF-492B-98CD-2454BED6162D}"
              DTS:From="Package\Iterate Offices\Sequence Container\Set SSIS Variables From XML"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 5"
              DTS:To="Package\Iterate Offices\Sequence Container\ClearCampaignId" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Iterate Offices\Sequence Container.PrecedenceConstraints[Constraint 6]"
              DTS:CreationName=""
              DTS:DTSID="{AD43E327-0572-458A-A8DC-1E2D83A281EB}"
              DTS:From="Package\Iterate Offices\Sequence Container\Create Contacts"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 6"
              DTS:To="Package\Iterate Offices\Sequence Container\Add to Campaign" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Iterate Offices\Sequence Container.PrecedenceConstraints[Constraint 7]"
              DTS:CreationName=""
              DTS:DTSID="{E1AA2F1D-1279-4A82-8184-B96D7DB0C9C5}"
              DTS:From="Package\Iterate Offices\Sequence Container\Create Contacts"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 7"
              DTS:To="Package\Iterate Offices\Sequence Container\Add note" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Iterate Offices\Sequence Container.PrecedenceConstraints[Constraint 8]"
              DTS:CreationName=""
              DTS:DTSID="{DDFB0A38-E95D-4E06-BC10-E9B6FFE1C83A}"
              DTS:EvalOp="1"
              DTS:Expression="@[User::CampaignId]==0"
              DTS:From="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign"
              DTS:ObjectName="Constraint 8"
              DTS:To="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Iterate Offices\Sequence Container.PrecedenceConstraints[Constraint 9]"
              DTS:CreationName=""
              DTS:DTSID="{4FBEB470-C969-4166-A235-3287F97EE404}"
              DTS:EvalOp="1"
              DTS:Expression="@[User::CampaignId]&gt;0"
              DTS:From="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign"
              DTS:ObjectName="Constraint 9"
              DTS:To="Package\Iterate Offices\Sequence Container\Search for Campaign Status" />
          </DTS:PrecedenceConstraints>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{23E17C04-CBA9-406E-A972-016C005FD7C1}"
          DTS:ObjectName="{23E17C04-CBA9-406E-A972-016C005FD7C1}"
          DTS:ValueIndex="0"
          DTS:VariableName="User::Office_id" />
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{49548332-DC28-4E69-8432-5CA40E1D092C}"
          DTS:ObjectName="{49548332-DC28-4E69-8432-5CA40E1D092C}"
          DTS:ValueIndex="1"
          DTS:VariableName="User::RexAccountID" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 8 1]"
      DTS:CreationName=""
      DTS:DTSID="{F95EE455-2E5F-4A70-B71C-FE372C76805F}"
      DTS:From="Package\Get Office List"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 8 1"
      DTS:To="Package\Iterate Offices" />
  </DTS:PrecedenceConstraints>
  <DTS:EventHandlers>
    <DTS:EventHandler
      DTS:refId="Package.EventHandlers[OnError]"
      DTS:CreationName="OnError"
      DTS:DTSID="{CC1506B2-F5AB-4AC5-BE50-6C29425477EF}"
      DTS:EventID="0"
      DTS:EventName="OnError"
      DTS:LocaleID="-1">
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="The propagate property of the event"
          DTS:DTSID="{CBECF149-A7E3-4C2A-BC45-4B24DF56FC22}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="System"
          DTS:ObjectName="Propagate">
          <DTS:VariableValue
            DTS:DataType="11">-1</DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnError]\Email error"
          DTS:CreationName="ZappySys.HtmlEmailTask"
          DTS:Description="Email Auth Failure"
          DTS:DTSID="{53B10EEC-A9A3-4E35-B40B-3F01089C25EF}"
          DTS:ExecutableType="ZappySys.HtmlEmailTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Email error"
          DTS:TaskContact="HTML Email Task; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support">
          <DTS:Variables />
          <DTS:ObjectData>
            <HtmlEmailTask
              SmtpConnection="SMTP"
              IsHtmlEmail="True"
              DefaultStyle="&#xA;&lt;style type=&quot;text/css&quot;&gt;&#xA;body,div,p,span,td,th,table {&#xA; font-family: Helvetica, Arial, sans-serif;&#xA; font-size: 10pt; &#xA;}&#xA;h1,h2,h3,h4,h5{&#xA;font-family: Helvetica, Arial, sans-serif;&#xA;}&#xA;&#xA;table { &#xA; border-collapse: &#xA; collapse; border-spacing: 0; &#xA;}&#xA;&#xA;tr.odd    {background-color: #cccccc}&#xA;tr.even   {background-color: #fafafa}&#xA;td, th { border: 1px solid #bbb;padding: 5 5 5 5} &#xA;th { background: #F3F3F3;  font-weight: bold;}&#xA;&lt;/style&gt;&#xA;&#xA;"
              Subject="Error occured in {{System::PackageName}}"
              From="alerts@spicerhaart.co.uk"
              To="{{User::PackageErrorEmail}}"
              Cc=""
              ReplyTo=""
              Bcc=""
              Attachments=""
              EmailPriority="High"
              MessageSourceType="Direct"
              MessageDirectValue="&lt;p&gt;Error occured and could not be logged in database&lt;p /&gt;&#xA;&lt;br&gt;&#xA;&lt;p&gt;Error code: {{System::ErrorCode}}&lt;p /&gt;&#xA;&lt;br&gt;&#xA;&lt;p&gt;Error message: {{System::ErrorDescription}}&lt;p /&gt;"
              MessageFileConnection=""
              MessageVariable=""
              LogLevel="Normal"
              PrefixTimestamp="False" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnError]\Insert error log into database"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{C5D54D18-8E77-4809-859F-30E113857A50}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Insert error log into database"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{1ACC4D99-A047-44CB-AAAD-088F42F69A23}"
              SQLTask:SqlStatementSource="INSERT INTO SSISErrorLog&#xA;(PackageName, StartTime, ErrorCode, ErrorDescription, AccountID)&#xA;VALUES&#xA;(?, ?, ?, ?, ?)" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@PackageName"
                SQLTask:DtsVariableName="System::PackageName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@StartTime"
                SQLTask:DtsVariableName="System::StartTime"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="7"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@ErrorCode"
                SQLTask:DtsVariableName="System::ErrorCode"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@ErrorDescription"
                SQLTask:DtsVariableName="System::ErrorDescription"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@AccountID"
                SQLTask:DtsVariableName="User::RexAccountID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package.EventHandlers[OnError].PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{D8FC39BA-FF29-4481-8718-429898ABD7E1}"
          DTS:From="Package.EventHandlers[OnError]\Insert error log into database"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package.EventHandlers[OnError]\Email error"
          DTS:Value="1" />
      </DTS:PrecedenceConstraints>
    </DTS:EventHandler>
    <DTS:EventHandler
      DTS:refId="Package.EventHandlers[OnTaskFailed]"
      DTS:CreationName="OnTaskFailed"
      DTS:DTSID="{04F41D26-9B26-4036-8C73-2A2B89A5B610}"
      DTS:EventID="0"
      DTS:EventName="OnTaskFailed"
      DTS:LocaleID="-1">
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="The propagate property of the event"
          DTS:DTSID="{B473FD01-DB10-4AEB-BE5E-6F59CAB5A675}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="System"
          DTS:ObjectName="Propagate">
          <DTS:VariableValue
            DTS:DataType="11">-1</DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:Executables />
    </DTS:EventHandler>
  </DTS:EventHandlers>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="145,42"
          Id="Package\Get Office List"
          TopLeft="363.5,5.5" />
        <NodeLayout
          Size="121,42"
          Id="Package\Iterate Offices\Sequence Container\Add note"
          TopLeft="489.5,515.5" />
        <NodeLayout
          Size="143,42"
          Id="Package\Iterate Offices\Sequence Container\Add reminder"
          TopLeft="671.5,515.5" />
        <NodeLayout
          Size="160,42"
          Id="Package\Iterate Offices\Sequence Container\Add to Campaign"
          TopLeft="269,515.5" />
        <NodeLayout
          Size="203,42"
          Id="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY"
          TopLeft="5.5,515.5" />
        <NodeLayout
          Size="160,42"
          Id="Package\Iterate Offices\Sequence Container\ClearCampaignId"
          TopLeft="413,107.5" />
        <NodeLayout
          Size="154,42"
          Id="Package\Iterate Offices\Sequence Container\Create Contacts"
          TopLeft="473,413.5" />
        <NodeLayout
          Size="233,42"
          Id="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign"
          TopLeft="611.5,311.5" />
        <NodeLayout
          Size="164,42"
          Id="Package\Iterate Offices\Sequence Container\Email Auth Failure"
          TopLeft="200,209.5" />
        <NodeLayout
          Size="141,42"
          Id="Package\Iterate Offices\Sequence Container\Get Auth Key"
          TopLeft="211.5,107.5" />
        <NodeLayout
          Size="210,42"
          Id="Package\Iterate Offices\Sequence Container\Search for Campaign Status"
          TopLeft="256,336" />
        <NodeLayout
          Size="250,42"
          Id="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign"
          TopLeft="425,209.5" />
        <NodeLayout
          Size="216,42"
          Id="Package\Iterate Offices\Sequence Container\Set SSIS Variables From XML"
          TopLeft="385,5.5" />
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container.PrecedenceConstraints[Constraint]"
          TopLeft="458.333333333333,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-176.333333333333,60"
              Start="0,0"
              End="-176.333333333333,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.2647058823529" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.2647058823529"
                    Point2="0,24.2647058823529"
                    Point3="-4,24.2647058823529" />
                  <mssgle:LineSegment
                    End="-172.333333333333,24.2647058823529" />
                  <mssgle:CubicBezierSegment
                    Point1="-172.333333333333,24.2647058823529"
                    Point2="-176.333333333333,24.2647058823529"
                    Point3="-176.333333333333,28.2647058823529" />
                  <mssgle:LineSegment
                    End="-176.333333333333,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container.PrecedenceConstraints[Constraint 1]"
          TopLeft="506.2,455.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-399.2,60.0000000000001"
              Start="0,0"
              End="-399.2,52.5000000000001">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,14.0762250453721" />
                  <mssgle:CubicBezierSegment
                    Point1="0,14.0762250453721"
                    Point2="0,18.0762250453721"
                    Point3="-4,18.0762250453721" />
                  <mssgle:LineSegment
                    End="-395.2,18.0762250453721" />
                  <mssgle:CubicBezierSegment
                    Point1="-395.2,18.0762250453721"
                    Point2="-399.2,18.0762250453721"
                    Point3="-399.2,22.0762250453721" />
                  <mssgle:LineSegment
                    End="-399.2,52.5000000000001" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container.PrecedenceConstraints[Constraint 10]"
          TopLeft="593.8,455.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="149.2,60"
              Start="0,0"
              End="149.2,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,14.0762250453721" />
                  <mssgle:CubicBezierSegment
                    Point1="0,14.0762250453721"
                    Point2="0,18.0762250453721"
                    Point3="4,18.0762250453721" />
                  <mssgle:LineSegment
                    End="145.2,18.0762250453721" />
                  <mssgle:CubicBezierSegment
                    Point1="145.2,18.0762250453721"
                    Point2="149.2,18.0762250453721"
                    Point3="149.2,22.0762250453721" />
                  <mssgle:LineSegment
                    End="149.2,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container.PrecedenceConstraints[Constraint 11]"
          TopLeft="361,378">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="189,35.5"
              Start="0,0"
              End="189,28">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,13.75" />
                  <mssgle:CubicBezierSegment
                    Point1="0,13.75"
                    Point2="0,17.75"
                    Point3="4,17.75" />
                  <mssgle:LineSegment
                    End="185,17.75" />
                  <mssgle:CubicBezierSegment
                    Point1="185,17.75"
                    Point2="189,17.75"
                    Point3="189,21.75" />
                  <mssgle:LineSegment
                    End="189,28" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="86.5,22.75,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container.PrecedenceConstraints[Constraint 2]"
          TopLeft="259.833333333333,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="22.1666666666667,60"
              Start="0,0"
              End="22.1666666666667,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.4039270687237" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.4039270687237"
                    Point2="0,24.4039270687237"
                    Point3="4,24.4039270687237" />
                  <mssgle:LineSegment
                    End="18.1666666666667,24.4039270687237" />
                  <mssgle:CubicBezierSegment
                    Point1="18.1666666666667,24.4039270687237"
                    Point2="22.1666666666667,24.4039270687237"
                    Point3="22.1666666666667,28.4039270687237" />
                  <mssgle:LineSegment
                    End="22.1666666666667,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-4.15801432291666,29.4039270687237,30.4826953125,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container.PrecedenceConstraints[Constraint 3]"
          TopLeft="509.666666666667,251.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-148.666666666667,84.5"
              Start="0,0"
              End="-148.666666666667,77">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,30.1224165341812" />
                  <mssgle:CubicBezierSegment
                    Point1="0,30.1224165341812"
                    Point2="0,34.1224165341812"
                    Point3="-4,34.1224165341812" />
                  <mssgle:LineSegment
                    End="-144.666666666667,34.1224165341812" />
                  <mssgle:CubicBezierSegment
                    Point1="-144.666666666667,34.1224165341812"
                    Point2="-148.666666666667,34.1224165341812"
                    Point3="-148.666666666667,38.1224165341812" />
                  <mssgle:LineSegment
                    End="-148.666666666667,77" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-82.3333333333333,39.1224165341812,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container.PrecedenceConstraints[Constraint 4]"
          TopLeft="304.166666666667,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="245.833333333333,60"
              Start="0,0"
              End="245.833333333333,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.4039270687237" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.4039270687237"
                    Point2="0,24.4039270687237"
                    Point3="4,24.4039270687237" />
                  <mssgle:LineSegment
                    End="241.833333333333,24.4039270687237" />
                  <mssgle:CubicBezierSegment
                    Point1="241.833333333333,24.4039270687237"
                    Point2="245.833333333333,24.4039270687237"
                    Point3="245.833333333333,28.4039270687237" />
                  <mssgle:LineSegment
                    End="245.833333333333,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container.PrecedenceConstraints[Constraint 5]"
          TopLeft="527.666666666667,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-34.6666666666666,60"
              Start="0,0"
              End="-34.6666666666666,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.2647058823529" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.2647058823529"
                    Point2="0,24.2647058823529"
                    Point3="-4,24.2647058823529" />
                  <mssgle:LineSegment
                    End="-30.6666666666666,24.2647058823529" />
                  <mssgle:CubicBezierSegment
                    Point1="-30.6666666666666,24.2647058823529"
                    Point2="-34.6666666666666,24.2647058823529"
                    Point3="-34.6666666666666,28.2647058823529" />
                  <mssgle:LineSegment
                    End="-34.6666666666666,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container.PrecedenceConstraints[Constraint 6]"
          TopLeft="535.4,455.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-186.4,60"
              Start="0,0"
              End="-186.4,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22.857962697274" />
                  <mssgle:CubicBezierSegment
                    Point1="0,22.857962697274"
                    Point2="0,26.857962697274"
                    Point3="-4,26.857962697274" />
                  <mssgle:LineSegment
                    End="-182.4,26.857962697274" />
                  <mssgle:CubicBezierSegment
                    Point1="-182.4,26.857962697274"
                    Point2="-186.4,26.857962697274"
                    Point3="-186.4,30.857962697274" />
                  <mssgle:LineSegment
                    End="-186.4,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container.PrecedenceConstraints[Constraint 7]"
          TopLeft="564.6,455.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-14.6,60"
              Start="0,0"
              End="-14.6,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22.857962697274" />
                  <mssgle:CubicBezierSegment
                    Point1="0,22.857962697274"
                    Point2="0,26.857962697274"
                    Point3="-4,26.857962697274" />
                  <mssgle:LineSegment
                    End="-10.6,26.857962697274" />
                  <mssgle:CubicBezierSegment
                    Point1="-10.6,26.857962697274"
                    Point2="-14.6,26.857962697274"
                    Point3="-14.6,30.857962697274" />
                  <mssgle:LineSegment
                    End="-14.6,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container.PrecedenceConstraints[Constraint 8]"
          TopLeft="590.333333333333,251.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="137.666666666667,60"
              Start="0,0"
              End="137.666666666667,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.2289348171701" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.2289348171701"
                    Point2="0,24.2289348171701"
                    Point3="4,24.2289348171701" />
                  <mssgle:LineSegment
                    End="133.666666666667,24.2289348171701" />
                  <mssgle:CubicBezierSegment
                    Point1="133.666666666667,24.2289348171701"
                    Point2="137.666666666667,24.2289348171701"
                    Point3="137.666666666667,28.2289348171701" />
                  <mssgle:LineSegment
                    End="137.666666666667,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="60.8333333333334,29.2289348171701,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container.PrecedenceConstraints[Constraint 9]"
          TopLeft="611.5,332.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-145.5,24.5"
              Start="0,0"
              End="-138,24.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-68.75,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-68.75,0"
                    Point2="-72.75,0"
                    Point3="-72.75,4" />
                  <mssgle:LineSegment
                    End="-72.75,20.5" />
                  <mssgle:CubicBezierSegment
                    Point1="-72.75,20.5"
                    Point2="-72.75,24.5"
                    Point3="-76.75,24.5" />
                  <mssgle:LineSegment
                    End="-138,24.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-80.75,-22,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="850,613"
          Size="850,656"
          Id="Package\Iterate Offices\Sequence Container"
          TopLeft="5.50000000000011,5.5" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="861,717"
          Size="861,760"
          Id="Package\Iterate Offices"
          TopLeft="5.50000000000011,107.5" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 8 1]"
          TopLeft="436,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <DtsEventHandler
    design-time-name="Package.EventHandlers[OnError]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="NaN,NaN"
          Id="Package.EventHandlers[OnError]\Email error"
          TopLeft="NaN,NaN" />
        <NodeLayout
          Size="NaN,NaN"
          Id="Package.EventHandlers[OnError]\Insert error log into database"
          TopLeft="NaN,NaN" />
        <EdgeLayout
          Id="Package.EventHandlers[OnError].PrecedenceConstraints[Constraint]"
          TopLeft="NaN,NaN">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="{assembly:Null}"
              Start="0,0"
              End="0,0">
              <mssgle:Curve.Segments>
                <assembly:Null />
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <DtsEventHandler
    design-time-name="Package.EventHandlers[OnTaskFailed]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="131,42"
          Id="{7B24456E-71A1-42ED-8BF3-CE0C7825D6DF}"
          TopLeft="203,130" />
        <NodeLayout
          Size="178,42"
          Id="{1F31AF16-4BD6-4A53-A279-CE4F8DEAF5C6}"
          TopLeft="179,23" />
        <EdgeLayout
          Id="{160B05A4-98A6-4E8D-887A-A70D0F08AA63}"
          TopLeft="268.25,65">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,65"
              Start="0,0"
              End="0,57.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,57.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <TaskHost
    design-time-name="Package\Iterate Offices\Sequence Container\Add note">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="171,42"
          Id="Package\Iterate Offices\Sequence Container\Add note\Trash Destination 1"
          TopLeft="486.5,617.5" />
        <NodeLayout
          Size="171,42"
          Id="Package\Iterate Offices\Sequence Container\Add note\Trash Destination 2"
          TopLeft="5.50000000000006,719.5" />
        <NodeLayout
          Size="253,42"
          Id="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL"
          TopLeft="445.5,5.5" />
        <NodeLayout
          Size="199,42"
          Id="Package\Iterate Offices\Sequence Container\Add note\Update SQL as Processed"
          TopLeft="237.5,719.5" />
        <NodeLayout
          Size="143,42"
          Id="Package\Iterate Offices\Sequence Container\Add note\Read Success"
          TopLeft="500.5,515.5" />
        <NodeLayout
          Size="178,42"
          Id="Package\Iterate Offices\Sequence Container\Add note\Error Message Check"
          TopLeft="248,617.5" />
        <NodeLayout
          Size="170,42"
          Id="Package\Iterate Offices\Sequence Container\Add note\Post Batch Request"
          TopLeft="487,413.5" />
        <NodeLayout
          Size="148,42"
          Id="Package\Iterate Offices\Sequence Container\Add note\Build note text"
          TopLeft="498,107.5" />
        <NodeLayout
          Size="171,42"
          Id="Package\Iterate Offices\Sequence Container\Add note\Trash Destination 3"
          TopLeft="497.5,719.5" />
        <NodeLayout
          Size="162,42"
          Id="Package\Iterate Offices\Sequence Container\Add note\Trash Destination"
          TopLeft="278,515.5" />
        <NodeLayout
          Size="157,42"
          Id="Package\Iterate Offices\Sequence Container\Add note\Cancat note text"
          TopLeft="493.5,209.5" />
        <NodeLayout
          Size="156,42"
          Id="Package\Iterate Offices\Sequence Container\Add note\Build Note JSON"
          TopLeft="494,311.5" />
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Add note.Paths[Response Output]"
          TopLeft="599,455.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-27,60"
              Start="0,0"
              End="-27,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.3356643356643" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.3356643356643"
                    Point2="0,24.3356643356643"
                    Point3="-4,24.3356643356643" />
                  <mssgle:LineSegment
                    End="-23,24.3356643356643" />
                  <mssgle:CubicBezierSegment
                    Point1="-23,24.3356643356643"
                    Point2="-27,24.3356643356643"
                    Point3="-27,28.3356643356643" />
                  <mssgle:LineSegment
                    End="-27,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Add note.Paths[OLE DB Source Output]"
          TopLeft="572,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Add note.Paths[JsonParserTransformOutput]"
          TopLeft="549.5,557.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-212.5,60"
              Start="0,0"
              End="-212.5,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.3983402489627" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.3983402489627"
                    Point2="0,24.3983402489627"
                    Point3="-4,24.3983402489627" />
                  <mssgle:LineSegment
                    End="-208.5,24.3983402489627" />
                  <mssgle:CubicBezierSegment
                    Point1="-208.5,24.3983402489627"
                    Point2="-212.5,24.3983402489627"
                    Point3="-212.5,28.3983402489627" />
                  <mssgle:LineSegment
                    End="-212.5,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Add note.Paths[JsonParserTransform Error Output]"
          TopLeft="594.5,557.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-22.5,60"
              Start="0,0"
              End="-22.5,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.3983402489627" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.3983402489627"
                    Point2="0,24.3983402489627"
                    Point3="-4,24.3983402489627" />
                  <mssgle:LineSegment
                    End="-18.5,24.3983402489627" />
                  <mssgle:CubicBezierSegment
                    Point1="-18.5,24.3983402489627"
                    Point2="-22.5,24.3983402489627"
                    Point3="-22.5,28.3983402489627" />
                  <mssgle:LineSegment
                    End="-22.5,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-87.82806640625,29.3983402489627,153.1561328125,11.658203125"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Add note.Paths[Fail]"
          TopLeft="379.5,659.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="203.5,60"
              Start="0,0"
              End="203.5,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.590405904059" />
                  <mssgle:CubicBezierSegment
                    Point1="0,16.590405904059"
                    Point2="0,20.590405904059"
                    Point3="4,20.590405904059" />
                  <mssgle:LineSegment
                    End="199.5,20.590405904059" />
                  <mssgle:CubicBezierSegment
                    Point1="199.5,20.590405904059"
                    Point2="203.5,20.590405904059"
                    Point3="203.5,24.590405904059" />
                  <mssgle:LineSegment
                    End="203.5,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="93.94287109375,25.590405904059,15.6142578125,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Add note.Paths[Derived Column Output1]"
          TopLeft="572,251.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Add note.Paths[Derived Column Output]"
          TopLeft="572,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Add note.Paths[Conditional Split Error Output]"
          TopLeft="294.5,659.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-203.5,60.0000000000001"
              Start="0,0"
              End="-203.5,52.5000000000001">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.5904059040591" />
                  <mssgle:CubicBezierSegment
                    Point1="0,16.5904059040591"
                    Point2="0,20.5904059040591"
                    Point3="-4,20.5904059040591" />
                  <mssgle:LineSegment
                    End="-199.5,20.5904059040591" />
                  <mssgle:CubicBezierSegment
                    Point1="-199.5,20.5904059040591"
                    Point2="-203.5,20.5904059040591"
                    Point3="-203.5,24.5904059040591" />
                  <mssgle:LineSegment
                    End="-203.5,52.5000000000001" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-167.44390625,25.5904059040591,131.3878125,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Add note.Paths[Conditional Split Default Output]"
          TopLeft="337,659.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-70.61390625,20.4208984375,141.2278125,11.658203125"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Add note.Paths[WebApiDestination Error Output]"
          TopLeft="545,455.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-186,60"
              Start="0,0"
              End="-186,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.3356643356643" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.3356643356643"
                    Point2="0,24.3356643356643"
                    Point3="-4,24.3356643356643" />
                  <mssgle:LineSegment
                    End="-182,24.3356643356643" />
                  <mssgle:CubicBezierSegment
                    Point1="-182,24.3356643356643"
                    Point2="-186,24.3356643356643"
                    Point3="-186,28.3356643356643" />
                  <mssgle:LineSegment
                    End="-186,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-164.8215625,29.3356643356643,143.643125,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Add note.Paths[TemplateTransformOutput]"
          TopLeft="572,353.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Iterate Offices\Sequence Container\Add note\Get Rosie Loaded Contacts from SQL">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Iterate Offices\Sequence Container\Add reminder">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="199,42"
          Id="Package\Iterate Offices\Sequence Container\Add reminder\Update SQL as Processed"
          TopLeft="608,697" />
        <NodeLayout
          Size="169,42"
          Id="Package\Iterate Offices\Sequence Container\Add reminder\Build reminder text"
          TopLeft="387.5,187" />
        <NodeLayout
          Size="143,42"
          Id="Package\Iterate Offices\Sequence Container\Add reminder\Read Success"
          TopLeft="390,493" />
        <NodeLayout
          Size="171,42"
          Id="Package\Iterate Offices\Sequence Container\Add reminder\Trash Destination 1"
          TopLeft="141,595" />
        <NodeLayout
          Size="178,42"
          Id="Package\Iterate Offices\Sequence Container\Add reminder\Error Message Check"
          TopLeft="372.5,595" />
        <NodeLayout
          Size="170,42"
          Id="Package\Iterate Offices\Sequence Container\Add reminder\Post Batch Request"
          TopLeft="376.5,391" />
        <NodeLayout
          Size="162,42"
          Id="Package\Iterate Offices\Sequence Container\Add reminder\Trash Destination"
          TopLeft="167.5,493" />
        <NodeLayout
          Size="253,42"
          Id="Package\Iterate Offices\Sequence Container\Add reminder\Get Rosie Loaded Contacts from SQL"
          TopLeft="335,85" />
        <NodeLayout
          Size="179,42"
          Id="Package\Iterate Offices\Sequence Container\Add reminder\Build Reminder JSON"
          TopLeft="383.5,289" />
        <NodeLayout
          Size="171,42"
          Id="Package\Iterate Offices\Sequence Container\Add reminder\Trash Destination 2"
          TopLeft="376,697" />
        <NodeLayout
          Size="171,42"
          Id="Package\Iterate Offices\Sequence Container\Add reminder\Trash Destination 3"
          TopLeft="144,697" />
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Add reminder.Paths[Conditional Split Error Output]"
          TopLeft="461.5,637">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-65.69390625,20.4453125,131.3878125,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Add reminder.Paths[Conditional Split Default Output]"
          TopLeft="504,637">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="203.5,60"
              Start="0,0"
              End="203.5,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.590405904059" />
                  <mssgle:CubicBezierSegment
                    Point1="0,16.590405904059"
                    Point2="0,20.590405904059"
                    Point3="4,20.590405904059" />
                  <mssgle:LineSegment
                    End="199.5,20.590405904059" />
                  <mssgle:CubicBezierSegment
                    Point1="199.5,20.590405904059"
                    Point2="203.5,20.590405904059"
                    Point3="203.5,24.590405904059" />
                  <mssgle:LineSegment
                    End="203.5,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="31.13609375,25.590405904059,141.2278125,11.658203125"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Add reminder.Paths[WebApiDestination Error Output]"
          TopLeft="434.5,433">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-186,60"
              Start="0,0"
              End="-186,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.3356643356643" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.3356643356643"
                    Point2="0,24.3356643356643"
                    Point3="-4,24.3356643356643" />
                  <mssgle:LineSegment
                    End="-182,24.3356643356643" />
                  <mssgle:CubicBezierSegment
                    Point1="-182,24.3356643356643"
                    Point2="-186,24.3356643356643"
                    Point3="-186,28.3356643356643" />
                  <mssgle:LineSegment
                    End="-186,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-173.3850390625,29.3356643356643,143.643125,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Add reminder.Paths[TemplateTransformOutput]"
          TopLeft="473,331">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-11.5,60"
              Start="0,0"
              End="-11.5,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26" />
                  <mssgle:CubicBezierSegment
                    Point1="0,26"
                    Point2="0,30"
                    Point3="-4,30" />
                  <mssgle:LineSegment
                    End="-7.5,30" />
                  <mssgle:CubicBezierSegment
                    Point1="-7.5,30"
                    Point2="-11.5,30"
                    Point3="-11.5,34" />
                  <mssgle:LineSegment
                    End="-11.5,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Add reminder.Paths[Response Output]"
          TopLeft="488.5,433">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-27,60"
              Start="0,0"
              End="-27,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.3356643356643" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.3356643356643"
                    Point2="0,24.3356643356643"
                    Point3="-4,24.3356643356643" />
                  <mssgle:LineSegment
                    End="-23,24.3356643356643" />
                  <mssgle:CubicBezierSegment
                    Point1="-23,24.3356643356643"
                    Point2="-27,24.3356643356643"
                    Point3="-27,28.3356643356643" />
                  <mssgle:LineSegment
                    End="-27,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-21.5,29.3356643356643,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Add reminder.Paths[OLE DB Source Output]"
          TopLeft="461.5,127">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="10.5,60"
              Start="0,0"
              End="10.5,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26" />
                  <mssgle:CubicBezierSegment
                    Point1="0,26"
                    Point2="0,30"
                    Point3="4,30" />
                  <mssgle:LineSegment
                    End="6.5,30" />
                  <mssgle:CubicBezierSegment
                    Point1="6.5,30"
                    Point2="10.5,30"
                    Point3="10.5,34" />
                  <mssgle:LineSegment
                    End="10.5,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Add reminder.Paths[JsonParserTransformOutput]"
          TopLeft="484,535">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-22.5,60"
              Start="0,0"
              End="-22.5,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.3983402489627" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.3983402489627"
                    Point2="0,24.3983402489627"
                    Point3="-4,24.3983402489627" />
                  <mssgle:LineSegment
                    End="-18.5,24.3983402489627" />
                  <mssgle:CubicBezierSegment
                    Point1="-18.5,24.3983402489627"
                    Point2="-22.5,24.3983402489627"
                    Point3="-22.5,28.3983402489627" />
                  <mssgle:LineSegment
                    End="-22.5,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Add reminder.Paths[JsonParserTransform Error Output]"
          TopLeft="439,535">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-212.5,60.0000000000001"
              Start="0,0"
              End="-212.5,52.5000000000001">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.3983402489627" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.3983402489627"
                    Point2="0,24.3983402489627"
                    Point3="-4,24.3983402489627" />
                  <mssgle:LineSegment
                    End="-208.5,24.3983402489627" />
                  <mssgle:CubicBezierSegment
                    Point1="-208.5,24.3983402489627"
                    Point2="-212.5,24.3983402489627"
                    Point3="-212.5,28.3983402489627" />
                  <mssgle:LineSegment
                    End="-212.5,52.5000000000001" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-182.82806640625,29.3983402489627,153.1561328125,11.658203125"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Add reminder.Paths[Fail]"
          TopLeft="419,637">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-189.5,60.0000000000001"
              Start="0,0"
              End="-189.5,52.5000000000001">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.5904059040591" />
                  <mssgle:CubicBezierSegment
                    Point1="0,16.5904059040591"
                    Point2="0,20.5904059040591"
                    Point3="-4,20.5904059040591" />
                  <mssgle:LineSegment
                    End="-185.5,20.5904059040591" />
                  <mssgle:CubicBezierSegment
                    Point1="-185.5,20.5904059040591"
                    Point2="-189.5,20.5904059040591"
                    Point3="-189.5,24.5904059040591" />
                  <mssgle:LineSegment
                    End="-189.5,52.5000000000001" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-102.55712890625,25.5904059040591,15.6142578125,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Add reminder.Paths[Derived Column Output]"
          TopLeft="472.5,229">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Iterate Offices\Sequence Container\Add reminder\Get Rosie Loaded Contacts from SQL">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Iterate Offices\Sequence Container\Add to Campaign">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="234,42"
          Id="Package\Iterate Offices\Sequence Container\Add to Campaign\Post Contact Cust Fields Request"
          TopLeft="248.5,209.5" />
        <NodeLayout
          Size="155,42"
          Id="Package\Iterate Offices\Sequence Container\Add to Campaign\Conditional Split"
          TopLeft="288,413.5" />
        <NodeLayout
          Size="162,42"
          Id="Package\Iterate Offices\Sequence Container\Add to Campaign\Trash Destination"
          TopLeft="71.5,311.5" />
        <NodeLayout
          Size="253,42"
          Id="Package\Iterate Offices\Sequence Container\Add to Campaign\Get Rosie Loaded Contacts from SQL"
          TopLeft="239,5.5" />
        <NodeLayout
          Size="143,42"
          Id="Package\Iterate Offices\Sequence Container\Add to Campaign\Read Success"
          TopLeft="294,311.5" />
        <NodeLayout
          Size="171,42"
          Id="Package\Iterate Offices\Sequence Container\Add to Campaign\Trash Destination 2"
          TopLeft="280,515.5" />
        <NodeLayout
          Size="171,42"
          Id="Package\Iterate Offices\Sequence Container\Add to Campaign\Trash Destination 1"
          TopLeft="56,413.5" />
        <NodeLayout
          Size="214,42"
          Id="Package\Iterate Offices\Sequence Container\Add to Campaign\Update Campaign MemberId"
          TopLeft="5.50000000000006,515.5" />
        <NodeLayout
          Size="208,42"
          Id="Package\Iterate Offices\Sequence Container\Add to Campaign\Build CampaignMemberAdd"
          TopLeft="261.5,107.5" />
        <NodeLayout
          Size="171,42"
          Id="Package\Iterate Offices\Sequence Container\Add to Campaign\Trash Destination 3"
          TopLeft="745,460" />
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Add to Campaign.Paths[WebApiDestination Error Output]"
          TopLeft="327.833333333333,251.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-175.333333333333,60"
              Start="0,0"
              End="-175.333333333333,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.2444821731749" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.2444821731749"
                    Point2="0,24.2444821731749"
                    Point3="-4,24.2444821731749" />
                  <mssgle:LineSegment
                    End="-171.333333333333,24.2444821731749" />
                  <mssgle:CubicBezierSegment
                    Point1="-171.333333333333,24.2444821731749"
                    Point2="-175.333333333333,24.2444821731749"
                    Point3="-175.333333333333,28.2444821731749" />
                  <mssgle:LineSegment
                    End="-175.333333333333,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-159.488229166666,29.2444821731749,143.643125,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Add to Campaign.Paths[TemplateTransformOutput]"
          TopLeft="365.5,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Add to Campaign.Paths[Response Output]"
          TopLeft="403.166666666667,251.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-37.6666666666666,60"
              Start="0,0"
              End="-37.6666666666666,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.2444821731749" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.2444821731749"
                    Point2="0,24.2444821731749"
                    Point3="-4,24.2444821731749" />
                  <mssgle:LineSegment
                    End="-33.6666666666666,24.2444821731749" />
                  <mssgle:CubicBezierSegment
                    Point1="-33.6666666666666,24.2444821731749"
                    Point2="-37.6666666666666,24.2444821731749"
                    Point3="-37.6666666666666,28.2444821731749" />
                  <mssgle:LineSegment
                    End="-37.6666666666666,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Add to Campaign.Paths[OLE DB Source Output]"
          TopLeft="365.5,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Add to Campaign.Paths[JsonParserTransformOutput]"
          TopLeft="388,353.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-22.4999999999999,60"
              Start="0,0"
              End="-22.4999999999999,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.3983402489627" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.3983402489627"
                    Point2="0,24.3983402489627"
                    Point3="-4,24.3983402489627" />
                  <mssgle:LineSegment
                    End="-18.4999999999999,24.3983402489627" />
                  <mssgle:CubicBezierSegment
                    Point1="-18.4999999999999,24.3983402489627"
                    Point2="-22.4999999999999,24.3983402489627"
                    Point3="-22.4999999999999,28.3983402489627" />
                  <mssgle:LineSegment
                    End="-22.4999999999999,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Add to Campaign.Paths[JsonParserTransform Error Output]"
          TopLeft="343,353.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-201.5,60"
              Start="0,0"
              End="-201.5,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.3983402489627" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.3983402489627"
                    Point2="0,24.3983402489627"
                    Point3="-4,24.3983402489627" />
                  <mssgle:LineSegment
                    End="-197.5,24.3983402489627" />
                  <mssgle:CubicBezierSegment
                    Point1="-197.5,24.3983402489627"
                    Point2="-201.5,24.3983402489627"
                    Point3="-201.5,28.3983402489627" />
                  <mssgle:LineSegment
                    End="-201.5,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-185.8500390625,29.3983402489627,170.200078125,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Add to Campaign.Paths[Fail]"
          TopLeft="443,434.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="302,46.5"
              Start="0,0"
              End="294.5,46.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="147,0" />
                  <mssgle:CubicBezierSegment
                    Point1="147,0"
                    Point2="151,0"
                    Point3="151,4" />
                  <mssgle:LineSegment
                    End="151,42.5" />
                  <mssgle:CubicBezierSegment
                    Point1="151,42.5"
                    Point2="151,46.5"
                    Point3="155,46.5" />
                  <mssgle:LineSegment
                    End="294.5,46.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="143.19287109375,-15.7490234375,15.6142578125,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Add to Campaign.Paths[Conditional Split Error Output]"
          TopLeft="390,455.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-24.5,60"
              Start="0,0"
              End="-24.5,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.367816091954" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.367816091954"
                    Point2="0,24.367816091954"
                    Point3="-4,24.367816091954" />
                  <mssgle:LineSegment
                    End="-20.5,24.367816091954" />
                  <mssgle:CubicBezierSegment
                    Point1="-20.5,24.367816091954"
                    Point2="-24.5,24.367816091954"
                    Point3="-24.5,28.367816091954" />
                  <mssgle:LineSegment
                    End="-24.5,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-77.94390625,29.367816091954,131.3878125,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Add to Campaign.Paths[Conditional Split Default Output]"
          TopLeft="341,455.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-228.5,60"
              Start="0,0"
              End="-228.5,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.367816091954" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.367816091954"
                    Point2="0,24.367816091954"
                    Point3="-4,24.367816091954" />
                  <mssgle:LineSegment
                    End="-224.5,24.367816091954" />
                  <mssgle:CubicBezierSegment
                    Point1="-224.5,24.367816091954"
                    Point2="-228.5,24.367816091954"
                    Point3="-228.5,28.367816091954" />
                  <mssgle:LineSegment
                    End="-228.5,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-184.86390625,29.367816091954,141.2278125,11.658203125"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Iterate Offices\Sequence Container\Add to Campaign\Get Rosie Loaded Contacts from SQL">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="126,42"
          Id="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Test Error"
          TopLeft="276,413.5" />
        <NodeLayout
          Size="143,42"
          Id="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Read Success"
          TopLeft="282,311.5" />
        <NodeLayout
          Size="162,42"
          Id="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Trash Destination"
          TopLeft="59.5,311.5" />
        <NodeLayout
          Size="171,42"
          Id="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Trash Destination 1"
          TopLeft="44,413.5" />
        <NodeLayout
          Size="171,42"
          Id="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Trash Destination 2"
          TopLeft="268,515.5" />
        <NodeLayout
          Size="202,42"
          Id="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Update DB Imp Req Table"
          TopLeft="5.50000000000006,515.5" />
        <NodeLayout
          Size="234,42"
          Id="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Post Contact Cust Fields Request"
          TopLeft="236.5,209.5" />
        <NodeLayout
          Size="207,42"
          Id="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Existing Contacts from SQL"
          TopLeft="250,5.5" />
        <NodeLayout
          Size="195,42"
          Id="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Build Contact Cust Fields"
          TopLeft="256,107.5" />
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY.Paths[WebApiDestination Error Output]"
          TopLeft="315.833333333333,251.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-175.333333333333,60"
              Start="0,0"
              End="-175.333333333333,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.2444821731749" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.2444821731749"
                    Point2="0,24.2444821731749"
                    Point3="-4,24.2444821731749" />
                  <mssgle:LineSegment
                    End="-171.333333333333,24.2444821731749" />
                  <mssgle:CubicBezierSegment
                    Point1="-171.333333333333,24.2444821731749"
                    Point2="-175.333333333333,24.2444821731749"
                    Point3="-175.333333333333,28.2444821731749" />
                  <mssgle:LineSegment
                    End="-175.333333333333,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-168.051705729166,29.2444821731749,160.770078125,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY.Paths[TemplateTransformOutput]"
          TopLeft="353.5,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-15.3901171875,21.46337890625,30.780234375,9.5732421875"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY.Paths[Response Output]"
          TopLeft="391.166666666667,251.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-37.6666666666666,60"
              Start="0,0"
              End="-37.6666666666666,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.2444821731749" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.2444821731749"
                    Point2="0,24.2444821731749"
                    Point3="-4,24.2444821731749" />
                  <mssgle:LineSegment
                    End="-33.6666666666666,24.2444821731749" />
                  <mssgle:CubicBezierSegment
                    Point1="-33.6666666666666,24.2444821731749"
                    Point2="-37.6666666666666,24.2444821731749"
                    Point3="-37.6666666666666,28.2444821731749" />
                  <mssgle:LineSegment
                    End="-37.6666666666666,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-34.2234505208333,29.2444821731749,30.780234375,9.5732421875"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY.Paths[OLE DB Source Output]"
          TopLeft="353.5,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-15.3901171875,21.46337890625,30.780234375,9.5732421875"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY.Paths[JsonParserTransformOutput]"
          TopLeft="376,353.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-36.9999999999999,60"
              Start="0,0"
              End="-36.9999999999999,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.3983402489627" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.3983402489627"
                    Point2="0,24.3983402489627"
                    Point3="-4,24.3983402489627" />
                  <mssgle:LineSegment
                    End="-32.9999999999999,24.3983402489627" />
                  <mssgle:CubicBezierSegment
                    Point1="-32.9999999999999,24.3983402489627"
                    Point2="-36.9999999999999,24.3983402489627"
                    Point3="-36.9999999999999,28.3983402489627" />
                  <mssgle:LineSegment
                    End="-36.9999999999999,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-33.8901171875,29.3983402489627,30.780234375,9.5732421875"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY.Paths[JsonParserTransform Error Output]"
          TopLeft="331,353.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-201.5,60"
              Start="0,0"
              End="-201.5,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.3983402489627" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.3983402489627"
                    Point2="0,24.3983402489627"
                    Point3="-4,24.3983402489627" />
                  <mssgle:LineSegment
                    End="-197.5,24.3983402489627" />
                  <mssgle:CubicBezierSegment
                    Point1="-197.5,24.3983402489627"
                    Point2="-201.5,24.3983402489627"
                    Point3="-201.5,28.3983402489627" />
                  <mssgle:LineSegment
                    End="-201.5,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-185.8500390625,29.3983402489627,170.200078125,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY.Paths[Conditional Split Default Output]"
          TopLeft="356.083333333333,455.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-70.61390625,20.4208984375,141.2278125,11.658203125"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY.Paths[Case 1]"
          TopLeft="319.333333333333,455.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-212.833333333333,60"
              Start="0,0"
              End="-212.833333333333,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.4514106583072" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.4514106583072"
                    Point2="0,24.4514106583072"
                    Point3="-4,24.4514106583072" />
                  <mssgle:LineSegment
                    End="-208.833333333333,24.4514106583072" />
                  <mssgle:CubicBezierSegment
                    Point1="-208.833333333333,24.4514106583072"
                    Point2="-212.833333333333,24.4514106583072"
                    Point3="-212.833333333333,28.4514106583072" />
                  <mssgle:LineSegment
                    End="-212.833333333333,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-141.920924479167,29.4514106583072,71.008515625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Iterate Offices\Sequence Container\Assign Pref Guid and WHY\Existing Contacts from SQL">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Iterate Offices\Sequence Container\Create Contacts">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="213,42"
          Id="Package\Iterate Offices\Sequence Container\Create Contacts\Post Contact Create Request"
          TopLeft="231.5,209.5" />
        <NodeLayout
          Size="152,42"
          Id="Package\Iterate Offices\Sequence Container\Create Contacts\Read ContactId"
          TopLeft="262,311.5" />
        <NodeLayout
          Size="169,42"
          Id="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL"
          TopLeft="253.5,5.5" />
        <NodeLayout
          Size="155,42"
          Id="Package\Iterate Offices\Sequence Container\Create Contacts\Conditional Split"
          TopLeft="260.5,413.5" />
        <NodeLayout
          Size="162,42"
          Id="Package\Iterate Offices\Sequence Container\Create Contacts\Trash Destination"
          TopLeft="39,311.5" />
        <NodeLayout
          Size="171,42"
          Id="Package\Iterate Offices\Sequence Container\Create Contacts\Trash Destination 1"
          TopLeft="5.50000000000006,515.5" />
        <NodeLayout
          Size="202,42"
          Id="Package\Iterate Offices\Sequence Container\Create Contacts\Update DB Imp Req Table"
          TopLeft="237,515.5" />
        <NodeLayout
          Size="175,42"
          Id="Package\Iterate Offices\Sequence Container\Create Contacts\Build Contact Create"
          TopLeft="250.5,107.5" />
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Create Contacts.Paths[WebApiDestination Error Output]"
          TopLeft="303.833333333333,251.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-183.833333333333,60"
              Start="0,0"
              End="-183.833333333333,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.2684063373719" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.2684063373719"
                    Point2="0,24.2684063373719"
                    Point3="-4,24.2684063373719" />
                  <mssgle:LineSegment
                    End="-179.833333333333,24.2684063373719" />
                  <mssgle:CubicBezierSegment
                    Point1="-179.833333333333,24.2684063373719"
                    Point2="-183.833333333333,24.2684063373719"
                    Point3="-183.833333333333,28.2684063373719" />
                  <mssgle:LineSegment
                    End="-183.833333333333,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-163.738229166666,29.2684063373719,143.643125,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Create Contacts.Paths[TemplateTransformOutput]"
          TopLeft="338,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Create Contacts.Paths[Response Output]"
          TopLeft="372.166666666667,251.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-34.1666666666666,60"
              Start="0,0"
              End="-34.1666666666666,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.2684063373719" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.2684063373719"
                    Point2="0,24.2684063373719"
                    Point3="-4,24.2684063373719" />
                  <mssgle:LineSegment
                    End="-30.1666666666666,24.2684063373719" />
                  <mssgle:CubicBezierSegment
                    Point1="-30.1666666666666,24.2684063373719"
                    Point2="-34.1666666666666,24.2684063373719"
                    Point3="-34.1666666666666,28.2684063373719" />
                  <mssgle:LineSegment
                    End="-34.1666666666666,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Create Contacts.Paths[OLE DB Source Output]"
          TopLeft="338,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Create Contacts.Paths[JsonParserTransformOutput]"
          TopLeft="338,353.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Create Contacts.Paths[Conditional Split Default Output]"
          TopLeft="313.5,455.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-222.5,60"
              Start="0,0"
              End="-222.5,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.367816091954" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.367816091954"
                    Point2="0,24.367816091954"
                    Point3="-4,24.367816091954" />
                  <mssgle:LineSegment
                    End="-218.5,24.367816091954" />
                  <mssgle:CubicBezierSegment
                    Point1="-218.5,24.367816091954"
                    Point2="-222.5,24.367816091954"
                    Point3="-222.5,28.367816091954" />
                  <mssgle:LineSegment
                    End="-222.5,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-181.86390625,29.367816091954,141.2278125,11.658203125"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Create Contacts.Paths[Case 1]"
          TopLeft="362.5,455.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-24.5,60"
              Start="0,0"
              End="-24.5,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.367816091954" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.367816091954"
                    Point2="0,24.367816091954"
                    Point3="-4,24.367816091954" />
                  <mssgle:LineSegment
                    End="-20.5,24.367816091954" />
                  <mssgle:CubicBezierSegment
                    Point1="-20.5,24.367816091954"
                    Point2="-24.5,24.367816091954"
                    Point3="-24.5,28.367816091954" />
                  <mssgle:LineSegment
                    End="-24.5,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-27.4680859375,29.367816091954,30.436171875,9.5537109375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Iterate Offices\Sequence Container\Create Contacts\Contacts From SQL">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="162,42"
          Id="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign\Trash Destination"
          TopLeft="239,365" />
        <NodeLayout
          Size="171,42"
          Id="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign\Trash Destination 1"
          TopLeft="461.5,365" />
        <NodeLayout
          Size="171,42"
          Id="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign\Trash Destination 2"
          TopLeft="693.5,365" />
        <NodeLayout
          Size="154,42"
          Id="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign\Set CampaignId"
          TopLeft="257,263" />
        <NodeLayout
          Size="150,42"
          Id="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign\Check for error"
          TopLeft="472,263" />
        <NodeLayout
          Size="146,42"
          Id="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign\Check if exists"
          TopLeft="474,161" />
        <NodeLayout
          Size="233,42"
          Id="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign\Create Network Leads Campaign"
          TopLeft="423,59" />
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign.Paths[SetVariableTransformOutput]"
          TopLeft="334,305">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-14,60"
              Start="0,0"
              End="-14,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26" />
                  <mssgle:CubicBezierSegment
                    Point1="0,26"
                    Point2="0,30"
                    Point3="-4,30" />
                  <mssgle:LineSegment
                    End="-10,30" />
                  <mssgle:CubicBezierSegment
                    Point1="-10,30"
                    Point2="-14,30"
                    Point3="-14,34" />
                  <mssgle:LineSegment
                    End="-14,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign.Paths[JsonSourceOutput]"
          TopLeft="543.25,101">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign.Paths[Exists]"
          TopLeft="524,203">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-190,60"
              Start="0,0"
              End="-190,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.390243902439" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.390243902439"
                    Point2="0,24.390243902439"
                    Point3="-4,24.390243902439" />
                  <mssgle:LineSegment
                    End="-186,24.390243902439" />
                  <mssgle:CubicBezierSegment
                    Point1="-186,24.390243902439"
                    Point2="-190,24.390243902439"
                    Point3="-190,28.390243902439" />
                  <mssgle:LineSegment
                    End="-190,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-108.092578125,29.390243902439,26.18515625,9.451171875"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign.Paths[Error]"
          TopLeft="570.666666666667,305">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="208.333333333333,60"
              Start="0,0"
              End="208.333333333333,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.3799472295515" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.3799472295515"
                    Point2="0,24.3799472295515"
                    Point3="4,24.3799472295515" />
                  <mssgle:LineSegment
                    End="204.333333333333,24.3799472295515" />
                  <mssgle:CubicBezierSegment
                    Point1="204.333333333333,24.3799472295515"
                    Point2="208.333333333333,24.3799472295515"
                    Point3="208.333333333333,28.3799472295515" />
                  <mssgle:LineSegment
                    End="208.333333333333,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="92.6379752604165,29.3799472295515,23.0573828125,9.421875"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign.Paths[Doesnt Exist]"
          TopLeft="570,203">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-23,60"
              Start="0,0"
              End="-23,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.390243902439" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.390243902439"
                    Point2="0,24.390243902439"
                    Point3="-4,24.390243902439" />
                  <mssgle:LineSegment
                    End="-19,24.390243902439" />
                  <mssgle:CubicBezierSegment
                    Point1="-19,24.390243902439"
                    Point2="-23,24.390243902439"
                    Point3="-23,28.390243902439" />
                  <mssgle:LineSegment
                    End="-23,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-39.44138671875,29.390243902439,55.8827734375,9.470703125"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Create Network Leads Campaign.Paths[Create]"
          TopLeft="523.333333333333,305">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="23.6666666666667,60"
              Start="0,0"
              End="23.6666666666667,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.3799472295514" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.3799472295514"
                    Point2="0,24.3799472295514"
                    Point3="4,24.3799472295514" />
                  <mssgle:LineSegment
                    End="19.6666666666667,24.3799472295514" />
                  <mssgle:CubicBezierSegment
                    Point1="19.6666666666667,24.3799472295514"
                    Point2="23.6666666666667,24.3799472295514"
                    Point3="23.6666666666667,28.3799472295514" />
                  <mssgle:LineSegment
                    End="23.6666666666667,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-3.23553385416665,29.3799472295514,30.137734375,9.5537109375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <TaskHost
    design-time-name="Package\Iterate Offices\Sequence Container\Search for Campaign Status">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="183,42"
          Id="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Set CampaignStatusId"
          TopLeft="23.5000000000001,209.5" />
        <NodeLayout
          Size="171,42"
          Id="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Trash Destination 1"
          TopLeft="228,311.5" />
        <NodeLayout
          Size="171,42"
          Id="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Trash Destination 2"
          TopLeft="460,311.5" />
        <NodeLayout
          Size="162,42"
          Id="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Trash Destination"
          TopLeft="5.50000000000006,311.5" />
        <NodeLayout
          Size="150,42"
          Id="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Check for error"
          TopLeft="238.5,209.5" />
        <NodeLayout
          Size="146,42"
          Id="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Check if exists"
          TopLeft="240.5,107.5" />
        <NodeLayout
          Size="252,42"
          Id="Package\Iterate Offices\Sequence Container\Search for Campaign Status\Search For Network Leads Campaign"
          TopLeft="189.5,5.49999999999989" />
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Search for Campaign Status.Paths[Exists]"
          TopLeft="290.5,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-175.5,60"
              Start="0,0"
              End="-175.5,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.390243902439" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.390243902439"
                    Point2="0,24.390243902439"
                    Point3="-4,24.390243902439" />
                  <mssgle:LineSegment
                    End="-171.5,24.390243902439" />
                  <mssgle:CubicBezierSegment
                    Point1="-171.5,24.390243902439"
                    Point2="-175.5,24.390243902439"
                    Point3="-175.5,28.390243902439" />
                  <mssgle:LineSegment
                    End="-175.5,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-120.81673828125,29.390243902439,66.1334765625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Search for Campaign Status.Paths[Error]"
          TopLeft="337.166666666667,251.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="208.333333333333,60"
              Start="0,0"
              End="208.333333333333,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.3799472295515" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.3799472295515"
                    Point2="0,24.3799472295515"
                    Point3="4,24.3799472295515" />
                  <mssgle:LineSegment
                    End="204.333333333333,24.3799472295515" />
                  <mssgle:CubicBezierSegment
                    Point1="204.333333333333,24.3799472295515"
                    Point2="208.333333333333,24.3799472295515"
                    Point3="208.333333333333,28.3799472295515" />
                  <mssgle:LineSegment
                    End="208.333333333333,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="92.6379752604165,29.3799472295515,23.0573828125,9.421875"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Search for Campaign Status.Paths[Doesnt Exist]"
          TopLeft="336.5,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-23,60"
              Start="0,0"
              End="-23,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.390243902439" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.390243902439"
                    Point2="0,24.390243902439"
                    Point3="-4,24.390243902439" />
                  <mssgle:LineSegment
                    End="-19,24.390243902439" />
                  <mssgle:CubicBezierSegment
                    Point1="-19,24.390243902439"
                    Point2="-23,24.390243902439"
                    Point3="-23,28.390243902439" />
                  <mssgle:LineSegment
                    End="-23,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-39.44138671875,29.390243902439,55.8827734375,9.470703125"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Search for Campaign Status.Paths[Create]"
          TopLeft="289.833333333333,251.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="23.6666666666667,60"
              Start="0,0"
              End="23.6666666666667,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.3799472295514" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.3799472295514"
                    Point2="0,24.3799472295514"
                    Point3="4,24.3799472295514" />
                  <mssgle:LineSegment
                    End="19.6666666666667,24.3799472295514" />
                  <mssgle:CubicBezierSegment
                    Point1="19.6666666666667,24.3799472295514"
                    Point2="23.6666666666667,24.3799472295514"
                    Point3="23.6666666666667,28.3799472295514" />
                  <mssgle:LineSegment
                    End="23.6666666666667,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-3.23553385416665,29.3799472295514,30.137734375,9.5537109375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Search for Campaign Status.Paths[SetVariableTransformOutput]"
          TopLeft="115,251.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-28.5,60"
              Start="0,0"
              End="-28.5,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26" />
                  <mssgle:CubicBezierSegment
                    Point1="0,26"
                    Point2="0,30"
                    Point3="-4,30" />
                  <mssgle:LineSegment
                    End="-24.5,30" />
                  <mssgle:CubicBezierSegment
                    Point1="-24.5,30"
                    Point2="-28.5,30"
                    Point3="-28.5,34" />
                  <mssgle:LineSegment
                    End="-28.5,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-29.35447265625,35,30.2089453125,9.4462890625"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Search for Campaign Status.Paths[JsonSourceOutput]"
          TopLeft="314.5,47.4999999999999">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60.0000000000001"
              Start="0,0"
              End="0,52.5000000000001">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5000000000001" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-15.10447265625,21.5268554687501,30.2089453125,9.4462890625"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <TaskHost
    design-time-name="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="162,42"
          Id="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Trash Destination"
          TopLeft="5.50000000000006,311.5" />
        <NodeLayout
          Size="154,42"
          Id="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Set CampaignId"
          TopLeft="23.5000000000001,209.5" />
        <NodeLayout
          Size="171,42"
          Id="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Trash Destination 1"
          TopLeft="228,311.5" />
        <NodeLayout
          Size="171,42"
          Id="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Trash Destination 2"
          TopLeft="460,311.5" />
        <NodeLayout
          Size="150,42"
          Id="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Check for error"
          TopLeft="238.5,209.5" />
        <NodeLayout
          Size="146,42"
          Id="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Check if exists"
          TopLeft="240.5,107.5" />
        <NodeLayout
          Size="252,42"
          Id="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign\Search For Network Leads Campaign"
          TopLeft="189.5,5.49999999999989" />
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign.Paths[SetVariableTransformOutput]"
          TopLeft="100.5,251.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-14,60"
              Start="0,0"
              End="-14,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26" />
                  <mssgle:CubicBezierSegment
                    Point1="0,26"
                    Point2="0,30"
                    Point3="-4,30" />
                  <mssgle:LineSegment
                    End="-10,30" />
                  <mssgle:CubicBezierSegment
                    Point1="-10,30"
                    Point2="-14,30"
                    Point3="-14,34" />
                  <mssgle:LineSegment
                    End="-14,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-22.10447265625,35,30.2089453125,9.4462890625"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign.Paths[JsonSourceOutput]"
          TopLeft="314.5,47.4999999999999">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60.0000000000001"
              Start="0,0"
              End="0,52.5000000000001">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5000000000001" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-15.10447265625,21.5268554687501,30.2089453125,9.4462890625"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign.Paths[Exists]"
          TopLeft="290.5,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-190,60"
              Start="0,0"
              End="-190,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.390243902439" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.390243902439"
                    Point2="0,24.390243902439"
                    Point3="-4,24.390243902439" />
                  <mssgle:LineSegment
                    End="-186,24.390243902439" />
                  <mssgle:CubicBezierSegment
                    Point1="-186,24.390243902439"
                    Point2="-190,24.390243902439"
                    Point3="-190,28.390243902439" />
                  <mssgle:LineSegment
                    End="-190,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-128.06673828125,29.390243902439,66.1334765625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign.Paths[Error]"
          TopLeft="337.166666666667,251.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="208.333333333333,60"
              Start="0,0"
              End="208.333333333333,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.3799472295515" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.3799472295515"
                    Point2="0,24.3799472295515"
                    Point3="4,24.3799472295515" />
                  <mssgle:LineSegment
                    End="204.333333333333,24.3799472295515" />
                  <mssgle:CubicBezierSegment
                    Point1="204.333333333333,24.3799472295515"
                    Point2="208.333333333333,24.3799472295515"
                    Point3="208.333333333333,28.3799472295515" />
                  <mssgle:LineSegment
                    End="208.333333333333,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="92.6379752604165,29.3799472295515,23.0573828125,9.421875"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign.Paths[Doesnt Exist]"
          TopLeft="336.5,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-23,60"
              Start="0,0"
              End="-23,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.390243902439" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.390243902439"
                    Point2="0,24.390243902439"
                    Point3="-4,24.390243902439" />
                  <mssgle:LineSegment
                    End="-19,24.390243902439" />
                  <mssgle:CubicBezierSegment
                    Point1="-19,24.390243902439"
                    Point2="-23,24.390243902439"
                    Point3="-23,28.390243902439" />
                  <mssgle:LineSegment
                    End="-23,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-39.44138671875,29.390243902439,55.8827734375,9.470703125"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Iterate Offices\Sequence Container\Search for Network Leads Campaign.Paths[Create]"
          TopLeft="289.833333333333,251.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="23.6666666666667,60"
              Start="0,0"
              End="23.6666666666667,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.3799472295514" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.3799472295514"
                    Point2="0,24.3799472295514"
                    Point3="4,24.3799472295514" />
                  <mssgle:LineSegment
                    End="19.6666666666667,24.3799472295514" />
                  <mssgle:CubicBezierSegment
                    Point1="19.6666666666667,24.3799472295514"
                    Point2="23.6666666666667,24.3799472295514"
                    Point3="23.6666666666667,28.3799472295514" />
                  <mssgle:LineSegment
                    End="23.6666666666667,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-3.23553385416665,29.3799472295514,30.137734375,9.5537109375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>