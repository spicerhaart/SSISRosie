<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="7/11/2019 12:40:28 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="WX9000ITD17"
  DTS:CreatorName="SPICERHAART\1905887"
  DTS:DTSID="{5A8A5B89-7998-42EE-B529-06909052D796}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.1301.433"
  DTS:LocaleID="2057"
  DTS:ObjectName="PropertyNotesPush"
  DTS:PackageType="5"
  DTS:ProtectionLevel="1"
  DTS:VersionBuild="64"
  DTS:VersionGUID="{C57B27B3-ECBF-4418-A5E6-97E56BF45D3E}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[HTTP]"
      DTS:CreationName="ZS-HTTP"
      DTS:DTSID="{7476F889-2B8C-4E63-AEE7-86E3F4C4AE2C}"
      DTS:ObjectName="HTTP">
      <DTS:ObjectData>
        <ConnectionManager
          ConnectionString="Url=www.spicerhaart.co.uk;CredentialType=Notset;UserName=;Timeout=100000;SoapWssPasswordType=Notset;JwtCustomClaims=;UseProxy=False;ProxyUrl=;UseProxyCreds=False;ProxyUserName=;DoNotUseDefaultProxy=False;UseClientCertificate=False;CertificatePath=;CertificateStorageType=CurrentUser;CertificateStoreName=My;CertificateThumbprint=;RetryMode=RetryAny;RetryCountMax=5;RetryWaitTimeMs=2000;RetryMultiplyWaitTime=True;RetryMessageList=;RetryStatusCodeList=;AuthScheme=Bearer;TokenAuthHeader=;TokenUrl=;TokenRequestData=;TokenRequestHeaders=Accept:*/*||Cache-Control:no-cache;TokenRequestMethod=;TokenRequestContentType=Default;TokenResponseContentFilter=;TokenResponseValueExtractMode=Body;TokenResponseCookie=;TokenResponseHeader=;TokenResponseContentType=None;TokenExpirationTimeInSeconds=3600" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[RexSync.xml]"
      DTS:CreationName="FILE"
      DTS:DTSID="{E4D8D135-0B17-4DAD-963C-2DB5324A7648}"
      DTS:ObjectName="RexSync.xml">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="C:\SSISVariables\RexSync.xml" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:PackageParameters>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{70CF2355-4A76-449D-9EFA-AEEB983C2AE8}"
      DTS:ObjectName="IDBSOfficeID">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">0195</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="3"
      DTS:DTSID="{120DC4A5-8C8A-4013-A84B-64959B3E6CEF}"
      DTS:ObjectName="RexAccountID">
      <DTS:Property
        DTS:DataType="3"
        DTS:Name="ParameterValue">1930</DTS:Property>
    </DTS:PackageParameter>
  </DTS:PackageParameters>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A734B571-7CB4-42E5-BA4E-8EF7C8A0A438}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="APIError_InsertNote">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{952A0880-BB9E-4C7B-8A57-4C3861C4E3BF}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="APIError_InsertNoteMessage">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{3EC4A550-8D57-4F95-BD3E-6CBE31331F03}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="APIError_SearchNotes">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{7BCF14F9-5AB7-4B81-B821-AB3551C6A217}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="APIError_TrashNote">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B10AD18C-DEE0-42D5-89CA-1BE6EFB877B7}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="APIError_TrashNoteMessage">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{CD8F99E0-6D53-4F4F-844F-C25BCDE5A4A9}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="APIPassword">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{DD11BF93-DD3B-48D2-927B-F140AFD2243C}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="APIToken">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A0CAEEE9-188D-4C35-BD79-859242DB2CF3}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="APIUser">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A789668E-EC96-4818-9CF9-7630F5F9F453}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="DeleteFailCount">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{9D4147F5-41D3-4FD7-8AEB-D7398264128F}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="DeleteNotes">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F873A541-2646-4DA6-92F6-8A116B54C641}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="DeleteSuccessCount">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{698B3C6E-7549-4900-B3B5-722F1AC9D07A}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ErrorEmail">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{2444989C-95EA-479F-A226-B2E907F67F52}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="IDBSPropertyRef">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{2AFF4841-6A19-4D6D-BA2A-06E15B0A09FD}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="InsertFailCount">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{BE4AD1B5-A238-419F-93C3-CD0B7AD64A74}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="InsertSuccessCount">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{253384F9-4C93-4EA5-A25B-D6B48B5489CB}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="JSON_PropertyNotes">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{12DAC564-9DFE-442D-84F9-C77EC9FED773}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="JSON_ReadNote">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{E7C3B66C-BF4C-4320-9376-1E532F8DAF07}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="JSON_ReadNoteReadOnly">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{BEFD73FF-3A41-4189-9DC6-16EE636E0C23}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="JSON_ReadNoteReturn">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{4B0A2274-EC4A-415E-B133-7754C5E4305E}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="JSON_ReadNoteReturnResult">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{744EDC2A-73D1-4809-B656-F27DC25E0A68}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="JSON_SearchNotes">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{C39FEB17-0276-4DEB-8A33-43EBE1F0870C}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="JSON_TrashNote">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{971C0CA3-E335-4A9F-8B3F-C06929447B8A}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="JSON_TrashNoteReadOnly">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{C8E57925-AC82-47F0-B478-63217F4CF458}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="Object_NotesToDelete">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{41048FC0-3A59-4136-9699-F4FCBF21FED5}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="Object_Properties">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{59B5A0F5-3FC3-4DFA-B578-C19294DB34C9}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="Object_PropertyNotes">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{29C23D5B-168F-4A8F-9D1B-D83DC6E98DCE}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="PropertyStartTime">
      <DTS:VariableValue
        DTS:DataType="7">7/15/2019 12:58:21 PM</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{1FC4B191-42BC-41A8-8064-44905A02352C}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="RexAPIWebURL">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{ECB2E10A-F5F6-4204-A854-5A726BCC7F48}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="RexCreatedUserID">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F15CD365-B7B4-4938-A24D-E1821D801F72}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="RexNoteID">
      <DTS:VariableValue
        DTS:DataType="20">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{62AE9CD4-812B-4338-B6C6-839C29E94CF9}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="RexPropertyID">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{60B8CC95-5298-4255-A2A4-0BE1688A6BB5}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="WorkTableID">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Foreach property"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:Description="Foreach Loop Container"
      DTS:DTSID="{EFD988C7-39C9-48FA-B00D-7CBFA1B586CB}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="-1"
      DTS:ObjectName="Foreach property">
      <DTS:ForEachEnumerator
        DTS:CreationName="Microsoft.ForEachADOEnumerator"
        DTS:DTSID="{7C43D033-909F-4291-83AE-1852FA119938}"
        DTS:ObjectName="{7C43D033-909F-4291-83AE-1852FA119938}">
        <DTS:ObjectData>
          <FEEADO
            EnumType="EnumerateRowsInFirstTable"
            VarName="User::Object_Properties" />
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Foreach property\Add log"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{DFACC3F0-69FB-47B6-BEB0-10E5609196ED}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Add log"
          DTS:ThreadHint="4">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{1ACC4D99-A047-44CB-AAAD-088F42F69A23}"
              SQLTask:SqlStatementSource="DECLARE @date DATETIME = GETDATE()&#xA;&#xA;EXEC uspUpsertPropertyNoteLog ?, ?, ?, ?, ?, ?, ?, @date" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@prop_ref"
                SQLTask:DtsVariableName="User::IDBSPropertyRef"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@rid_property"
                SQLTask:DtsVariableName="User::RexPropertyID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@notes_deleted_success"
                SQLTask:DtsVariableName="User::DeleteSuccessCount"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@notes_deleted_fail"
                SQLTask:DtsVariableName="User::DeleteFailCount"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@notes_added_success"
                SQLTask:DtsVariableName="User::InsertSuccessCount"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@notes_added_fail"
                SQLTask:DtsVariableName="User::InsertFailCount"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@start_time"
                SQLTask:DtsVariableName="User::PropertyStartTime"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="7"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach property\Foreach property note"
          DTS:CreationName="STOCK:FOREACHLOOP"
          DTS:Description="Foreach Loop Container"
          DTS:DTSID="{C8392A00-B30E-4F18-A952-D5389180144E}"
          DTS:ExecutableType="STOCK:FOREACHLOOP"
          DTS:LocaleID="-1"
          DTS:ObjectName="Foreach property note">
          <DTS:ForEachEnumerator
            DTS:CreationName="Microsoft.ForEachADOEnumerator"
            DTS:DTSID="{61ED8778-E337-4894-9B41-F990EEE4AD26}"
            DTS:ObjectName="{61ED8778-E337-4894-9B41-F990EEE4AD26}">
            <DTS:ObjectData>
              <FEEADO
                EnumType="EnumerateRowsInFirstTable"
                VarName="User::Object_PropertyNotes" />
            </DTS:ObjectData>
          </DTS:ForEachEnumerator>
          <DTS:Variables />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Foreach property\Foreach property note\Insert API error"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{da5d5484-0ff9-44c6-addf-217d8e5d6a1f}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Insert API error"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="4">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{1ACC4D99-A047-44CB-AAAD-088F42F69A23}"
                  SQLTask:SqlStatementSource="INSERT INTO SSISErrorLog&#xA;(PackageName, StartTime, ErrorCode, AccountID, ErrorDescription)&#xA;VALUES&#xA;(?, ?, 0, ?, 'Error inserting property note. Request body: ' + LEFT(?, 1950) + '. API Response: ' + LEFT(?, 1950))" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="@PackageName"
                    SQLTask:DtsVariableName="System::PackageName"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="129"
                    SQLTask:ParameterSize="-1" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="@StartTime"
                    SQLTask:DtsVariableName="System::StartTime"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="7"
                    SQLTask:ParameterSize="-1" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="@AccountID"
                    SQLTask:DtsVariableName="$Package::RexAccountID"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="3"
                    SQLTask:ParameterSize="-1" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="@RequestBody"
                    SQLTask:DtsVariableName="User::JSON_PropertyNotes"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="129"
                    SQLTask:ParameterSize="-1" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="@APIError"
                    SQLTask:DtsVariableName="User::APIError_InsertNoteMessage"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="129"
                    SQLTask:ParameterSize="-1" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Foreach property\Foreach property note\Insert note"
              DTS:CreationName="ZappySys.RestApiTask"
              DTS:Description="ZS REST API Task"
              DTS:DTSID="{798F0F27-67B3-4220-AF6A-2471FEFC5A20}"
              DTS:ExecutableType="ZappySys.RestApiTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Insert note"
              DTS:ThreadHint="4">
              <DTS:Variables />
              <DTS:ObjectData>
                <RestApiTask
                  RequestAccessMode="UrlFromConnection"
                  RequestUrlVariable="User::RexAPIWebURL"
                  EnableStatusCheck="False"
                  StatucCheckMaxWaitSeconds="1200"
                  StatucCheckIterationWaitSeconds="10"
                  StatusCheckForFailedValue="False"
                  StatusSuccessValue=""
                  StatusFailedValue=""
                  IsMultiPartUpload="False"
                  PreventAutoRedirect="False"
                  RequestTimeoutMs="0"
                  SecurityProtocol="Default"
                  EnableCompressionSupport="True"
                  AllowUnsecureSuite="False"
                  IgnoreCertificateErrors="False"
                  RequestUrl="{{User::RexAPIWebURL}}"
                  RequestUrlConnection="HTTP"
                  RequestMethod="POST"
                  RequestContentType="ApplicationJson"
                  OverrideConnectionUrl="True"
                  RequestHeaders="&lt;request&gt;&lt;header&gt;&lt;name&gt;Accept&lt;/name&gt;&lt;value&gt;*/*&lt;/value&gt;&lt;/header&gt;&lt;header&gt;&lt;name&gt;Cache-Control&lt;/name&gt;&lt;value&gt;no-cache&lt;/value&gt;&lt;/header&gt;&lt;/request&gt;"
                  RequestData="{{User::JSON_PropertyNotes}}"
                  SaveResponse="True"
                  SaveResponseStatusCode="False"
                  ResponseAccessMode="Variable"
                  SaveAsBinary="False"
                  ResponseDataFilePath=""
                  ResponseHeaderMappings="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-16&quot;?&gt;&lt;ArrayOfKeyValueMapping xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; /&gt;"
                  ResponseCookieMappings="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-16&quot;?&gt;&lt;ArrayOfKeyValueMapping xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; /&gt;"
                  CookieContainerVariable=""
                  ConvertXmlToJson="False"
                  ResponseDataVariable="User::APIError_InsertNote"
                  ResponseStatusCodeVariable=""
                  ResponseContentType="Json"
                  ResponseContentFilter=""
                  ResponseCharset=""
                  ValidateResponse="False"
                  ValidationRules="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-16&quot;?&gt;&lt;ResponseValidationSetting xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot;&gt;&lt;MatchAny&gt;false&lt;/MatchAny&gt;&lt;Rules&gt;&lt;ResponseValidationRule xsi:type=&quot;StatusCodeValidationRule&quot;&gt;&lt;Enabled&gt;false&lt;/Enabled&gt;&lt;Operator&gt;Eq&lt;/Operator&gt;&lt;StatusCode&gt;200&lt;/StatusCode&gt;&lt;/ResponseValidationRule&gt;&lt;ResponseValidationRule xsi:type=&quot;ContentValidationRule&quot;&gt;&lt;Enabled&gt;false&lt;/Enabled&gt;&lt;Operator&gt;Eq&lt;/Operator&gt;&lt;Value /&gt;&lt;/ResponseValidationRule&gt;&lt;ResponseValidationRule xsi:type=&quot;HeaderValidationRule&quot;&gt;&lt;Enabled&gt;false&lt;/Enabled&gt;&lt;Operator&gt;Eq&lt;/Operator&gt;&lt;KeyName /&gt;&lt;Value /&gt;&lt;DataType&gt;String&lt;/DataType&gt;&lt;/ResponseValidationRule&gt;&lt;/Rules&gt;&lt;/ResponseValidationSetting&gt;"
                  ConsumeResponseOnError="False"
                  ContineOnAnyError="False"
                  ContineOnErrorForMessage="False"
                  ContineOnErrorForStatusCode="False"
                  ErrorStatusCodeToMatch="404"
                  MatchForEqual="True"
                  ErrorSubstringToMatch=""
                  ContineOn404Error="False"
                  SaveErrorFlagToVariable="False"
                  ErrorFlagVariableName=""
                  LogLevel="Normal"
                  PrefixTimestamp="False" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Foreach property\Foreach property note\Parse insert note error"
              DTS:CreationName="ZappySys.JsonParserTask"
              DTS:Description="ZS JSON Parser Task"
              DTS:DTSID="{C3F329DE-F3DC-4CA7-9513-DBFDDB872FF0}"
              DTS:ExecutableType="ZappySys.JsonParserTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Parse insert note error"
              DTS:ThreadHint="4">
              <DTS:Variables />
              <DTS:ObjectData>
                <JsonParserTask
                  SourceAccessMode="Variable"
                  SourceVariable="User::APIError_InsertNote"
                  SourceConnection=""
                  SourceDirectValue="{&#xA;&quot;CustomerID&quot;: &quot;ALFKI&quot;,&#xA;&quot;CustomerName&quot;: &quot;Alfredo Koli&quot;,&#xA;&quot;Age&quot;: 55,&#xA;&quot;LocationInfo&quot;: {&quot;City&quot;:&quot;Newyork&quot;, &quot;State&quot;:&quot;NY&quot;, &quot;Zip&quot;:&quot;23234&quot;},&#xA;&quot;OrderIDList&quot;: [111,222,333,444,555]&#xA;}"
                  TargetSettings="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-16&quot;?&gt;&lt;JsonParserSetting xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot;&gt;&lt;Mappings&gt;&lt;JsonParserMapping&gt;&lt;Path&gt;error.message&lt;/Path&gt;&lt;Target&gt;User::APIError_InsertNoteMessage&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;Description /&gt;&lt;/JsonParserMapping&gt;&lt;/Mappings&gt;&lt;Path /&gt;&lt;/JsonParserSetting&gt;"
                  LogLevel="Normal"
                  PrefixTimestamp="False" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Foreach property\Foreach property note\Replace import notes JSON"
              DTS:CreationName="Microsoft.ExpressionTask"
              DTS:Description="Expression Task"
              DTS:DTSID="{3E5BE8AA-E6D5-4639-ADBB-E35A067DBE15}"
              DTS:ExecutableType="Microsoft.ExpressionTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Replace import notes JSON"
              DTS:ThreadHint="4">
              <DTS:Variables />
              <DTS:ObjectData>
                <ExpressionTask
                  Expression="@[User::JSON_PropertyNotes] = REPLACE(@[User::JSON_PropertyNotes], &quot;{{TOKEN}}&quot;, @[User::APIToken])" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Foreach property\Foreach property note\Reset API error"
              DTS:CreationName="Microsoft.ExpressionTask"
              DTS:Description="Expression Task"
              DTS:DTSID="{0cf65d4c-945f-43b0-be1a-218ccf44d1c1}"
              DTS:ExecutableType="Microsoft.ExpressionTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Reset API error"
              DTS:ThreadHint="4">
              <DTS:Variables />
              <DTS:ObjectData>
                <ExpressionTask
                  Expression="@[User::APIError_InsertNoteMessage] = &quot;&quot;" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Foreach property\Foreach property note\Reset API error object"
              DTS:CreationName="Microsoft.ExpressionTask"
              DTS:Description="Expression Task"
              DTS:DTSID="{7F09C448-0361-4399-A1EF-6DE8BFCFCAA4}"
              DTS:ExecutableType="Microsoft.ExpressionTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Reset API error object"
              DTS:ThreadHint="5">
              <DTS:Variables />
              <DTS:ObjectData>
                <ExpressionTask
                  Expression="@[User::APIError_InsertNote] = &quot;&quot;" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Foreach property\Foreach property note\Set fail count"
              DTS:CreationName="Microsoft.ExpressionTask"
              DTS:Description="Expression Task"
              DTS:DTSID="{42cef4a2-b020-4343-878a-4f34d0f26845}"
              DTS:ExecutableType="Microsoft.ExpressionTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Set fail count"
              DTS:ThreadHint="6">
              <DTS:Variables />
              <DTS:ObjectData>
                <ExpressionTask
                  Expression="@[User::InsertFailCount] = @[User::InsertFailCount] + 1" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Foreach property\Foreach property note\Set success count"
              DTS:CreationName="Microsoft.ExpressionTask"
              DTS:Description="Expression Task"
              DTS:DTSID="{98c2beee-f70a-4ee7-a347-1fc4534585e0}"
              DTS:ExecutableType="Microsoft.ExpressionTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Set success count"
              DTS:ThreadHint="7">
              <DTS:Variables />
              <DTS:ObjectData>
                <ExpressionTask
                  Expression="@[User::InsertSuccessCount] = @[User::InsertSuccessCount] + 1" />
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Foreach property\Foreach property note.PrecedenceConstraints[Constraint]"
              DTS:CreationName=""
              DTS:DTSID="{0B4ACF8C-2026-49D5-9888-B2CB42BDEC2B}"
              DTS:From="Package\Foreach property\Foreach property note\Replace import notes JSON"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint"
              DTS:To="Package\Foreach property\Foreach property note\Insert note" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Foreach property\Foreach property note.PrecedenceConstraints[Constraint 1]"
              DTS:CreationName=""
              DTS:DTSID="{44CF8554-29F0-4213-B9DB-C76A92701C15}"
              DTS:From="Package\Foreach property\Foreach property note\Insert note"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 1"
              DTS:To="Package\Foreach property\Foreach property note\Parse insert note error" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Foreach property\Foreach property note.PrecedenceConstraints[Constraint 2]"
              DTS:CreationName=""
              DTS:DTSID="{9e84e791-dea6-4e3a-adfd-5cf41ae0885d}"
              DTS:From="Package\Foreach property\Foreach property note\Insert API error"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 2"
              DTS:To="Package\Foreach property\Foreach property note\Reset API error"
              DTS:Value="2" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Foreach property\Foreach property note.PrecedenceConstraints[Constraint 3]"
              DTS:CreationName=""
              DTS:DTSID="{AA6AED1C-E071-4CC4-B51B-94B35D73BC77}"
              DTS:From="Package\Foreach property\Foreach property note\Insert API error"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 3"
              DTS:To="Package\Foreach property\Foreach property note\Reset API error object"
              DTS:Value="2" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Foreach property\Foreach property note.PrecedenceConstraints[Constraint 4]"
              DTS:CreationName=""
              DTS:DTSID="{871E41AB-DABD-40FB-814A-052BAA5672EC}"
              DTS:From="Package\Foreach property\Foreach property note\Insert API error"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 4"
              DTS:To="Package\Foreach property\Foreach property note\Set fail count"
              DTS:Value="2" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Foreach property\Foreach property note.PrecedenceConstraints[Constraint 5]"
              DTS:CreationName=""
              DTS:DTSID="{B24D41EE-962C-4E7E-BB41-08B9BF763174}"
              DTS:EvalOp="3"
              DTS:Expression="@[User::APIError_InsertNoteMessage] == &quot;&quot;"
              DTS:From="Package\Foreach property\Foreach property note\Parse insert note error"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 5"
              DTS:To="Package\Foreach property\Foreach property note\Set success count" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Foreach property\Foreach property note.PrecedenceConstraints[Error]"
              DTS:CreationName=""
              DTS:DTSID="{5DC93866-F154-4739-B1C5-15994A4FF242}"
              DTS:EvalOp="4"
              DTS:Expression="@[User::APIError_InsertNoteMessage] != &quot;&quot;"
              DTS:From="Package\Foreach property\Foreach property note\Parse insert note error"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Error"
              DTS:To="Package\Foreach property\Foreach property note\Insert API error"
              DTS:Value="1" />
          </DTS:PrecedenceConstraints>
          <DTS:ForEachVariableMappings>
            <DTS:ForEachVariableMapping
              DTS:CreationName=""
              DTS:DTSID="{6BF396FA-1505-4308-A617-B482C6683B2B}"
              DTS:ObjectName="{6BF396FA-1505-4308-A617-B482C6683B2B}"
              DTS:ValueIndex="0"
              DTS:VariableName="User::JSON_PropertyNotes" />
          </DTS:ForEachVariableMappings>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach property\Foreach property note for deletion"
          DTS:CreationName="STOCK:FOREACHLOOP"
          DTS:Description="Foreach Loop Container"
          DTS:DTSID="{E225FDF1-FEB9-47F3-882D-B28B8671864E}"
          DTS:ExecutableType="STOCK:FOREACHLOOP"
          DTS:LocaleID="-1"
          DTS:ObjectName="Foreach property note for deletion">
          <DTS:ForEachEnumerator
            DTS:CreationName="Microsoft.ForEachADOEnumerator"
            DTS:DTSID="{8301C8FE-A7F4-4A3F-9F30-5401D0AE834B}"
            DTS:ObjectName="{8301C8FE-A7F4-4A3F-9F30-5401D0AE834B}">
            <DTS:ObjectData>
              <FEEADO
                EnumType="EnumerateRowsInFirstTable"
                VarName="User::Object_NotesToDelete" />
            </DTS:ObjectData>
          </DTS:ForEachEnumerator>
          <DTS:Variables />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Foreach property\Foreach property note for deletion\Insert API error"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{4ff497db-e25e-430a-b81b-50e6c6926dc2}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Insert API error"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{1ACC4D99-A047-44CB-AAAD-088F42F69A23}"
                  SQLTask:SqlStatementSource="INSERT INTO SSISErrorLog&#xA;(PackageName, StartTime, ErrorCode, AccountID, ErrorDescription)&#xA;VALUES&#xA;(?, ?, 0, ?, 'Error trashing property notes. Request body: ' + ? + '. API Response: ' + ?)" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="@PackageName"
                    SQLTask:DtsVariableName="System::PackageName"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="129"
                    SQLTask:ParameterSize="-1" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="@StartTime"
                    SQLTask:DtsVariableName="System::StartTime"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="7"
                    SQLTask:ParameterSize="-1" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="@AccountID"
                    SQLTask:DtsVariableName="$Package::RexAccountID"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="3"
                    SQLTask:ParameterSize="-1" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="@RequestBody"
                    SQLTask:DtsVariableName="User::JSON_TrashNote"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="129"
                    SQLTask:ParameterSize="-1" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="@APIError"
                    SQLTask:DtsVariableName="User::APIError_TrashNoteMessage"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="129"
                    SQLTask:ParameterSize="-1" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Foreach property\Foreach property note for deletion\Parse result"
              DTS:CreationName="ZappySys.JsonParserTask"
              DTS:Description="ZS JSON Parser Task"
              DTS:DTSID="{D8095829-7F57-4746-9849-7F09A9C828CB}"
              DTS:ExecutableType="ZappySys.JsonParserTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Parse result"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <JsonParserTask
                  SourceAccessMode="Variable"
                  SourceVariable="User::JSON_ReadNoteReturn"
                  SourceConnection=""
                  SourceDirectValue="{&#xA;&quot;CustomerID&quot;: &quot;ALFKI&quot;,&#xA;&quot;CustomerName&quot;: &quot;Alfredo Koli&quot;,&#xA;&quot;Age&quot;: 55,&#xA;&quot;LocationInfo&quot;: {&quot;City&quot;:&quot;Newyork&quot;, &quot;State&quot;:&quot;NY&quot;, &quot;Zip&quot;:&quot;23234&quot;},&#xA;&quot;OrderIDList&quot;: [111,222,333,444,555]&#xA;}"
                  TargetSettings="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-16&quot;?&gt;&lt;JsonParserSetting xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot;&gt;&lt;Mappings&gt;&lt;JsonParserMapping&gt;&lt;Path&gt;result&lt;/Path&gt;&lt;Target&gt;User::JSON_ReadNoteReturnResult&lt;/Target&gt;&lt;Required&gt;true&lt;/Required&gt;&lt;Description /&gt;&lt;/JsonParserMapping&gt;&lt;JsonParserMapping&gt;&lt;Path&gt;result.system_created_user.id&lt;/Path&gt;&lt;Target&gt;User::RexCreatedUserID&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;Description /&gt;&lt;/JsonParserMapping&gt;&lt;/Mappings&gt;&lt;Path /&gt;&lt;/JsonParserSetting&gt;"
                  LogLevel="Normal"
                  PrefixTimestamp="False" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Foreach property\Foreach property note for deletion\Parse trash note error"
              DTS:CreationName="ZappySys.JsonParserTask"
              DTS:Description="ZS JSON Parser Task"
              DTS:DTSID="{BF852351-4EFE-4154-A03E-174C2805CF5B}"
              DTS:ExecutableType="ZappySys.JsonParserTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Parse trash note error"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <JsonParserTask
                  SourceAccessMode="Variable"
                  SourceVariable="User::APIError_TrashNote"
                  SourceConnection=""
                  SourceDirectValue="{&#xA;&quot;CustomerID&quot;: &quot;ALFKI&quot;,&#xA;&quot;CustomerName&quot;: &quot;Alfredo Koli&quot;,&#xA;&quot;Age&quot;: 55,&#xA;&quot;LocationInfo&quot;: {&quot;City&quot;:&quot;Newyork&quot;, &quot;State&quot;:&quot;NY&quot;, &quot;Zip&quot;:&quot;23234&quot;},&#xA;&quot;OrderIDList&quot;: [111,222,333,444,555]&#xA;}"
                  TargetSettings="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-16&quot;?&gt;&lt;JsonParserSetting xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot;&gt;&lt;Mappings&gt;&lt;JsonParserMapping&gt;&lt;Path&gt;error.message&lt;/Path&gt;&lt;Target&gt;User::APIError_TrashNoteMessage&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;Description /&gt;&lt;/JsonParserMapping&gt;&lt;/Mappings&gt;&lt;Path /&gt;&lt;/JsonParserSetting&gt;"
                  LogLevel="Normal"
                  PrefixTimestamp="False" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Foreach property\Foreach property note for deletion\Read note"
              DTS:CreationName="ZappySys.RestApiTask"
              DTS:Description="ZS REST API Task"
              DTS:DTSID="{E5AA8CA5-069E-4028-99D4-51323D20B73F}"
              DTS:ExecutableType="ZappySys.RestApiTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Read note"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <RestApiTask
                  RequestAccessMode="UrlFromConnection"
                  RequestUrlVariable="User::RexAPIWebURL"
                  EnableStatusCheck="False"
                  StatucCheckMaxWaitSeconds="1200"
                  StatucCheckIterationWaitSeconds="10"
                  StatusCheckForFailedValue="False"
                  StatusSuccessValue=""
                  StatusFailedValue=""
                  IsMultiPartUpload="False"
                  PreventAutoRedirect="False"
                  RequestTimeoutMs="0"
                  SecurityProtocol="Default"
                  EnableCompressionSupport="True"
                  AllowUnsecureSuite="False"
                  IgnoreCertificateErrors="False"
                  RequestUrl="{{User::RexAPIWebURL}}"
                  RequestUrlConnection="HTTP"
                  RequestMethod="POST"
                  RequestContentType="ApplicationJson"
                  OverrideConnectionUrl="True"
                  RequestHeaders="&lt;request&gt;&lt;header&gt;&lt;name&gt;Accept&lt;/name&gt;&lt;value&gt;*/*&lt;/value&gt;&lt;/header&gt;&lt;header&gt;&lt;name&gt;Cache-Control&lt;/name&gt;&lt;value&gt;no-cache&lt;/value&gt;&lt;/header&gt;&lt;/request&gt;"
                  RequestData="{{User::JSON_ReadNote}}"
                  SaveResponse="True"
                  SaveResponseStatusCode="False"
                  ResponseAccessMode="Variable"
                  SaveAsBinary="False"
                  ResponseDataFilePath=""
                  ResponseHeaderMappings="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-16&quot;?&gt;&lt;ArrayOfKeyValueMapping xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; /&gt;"
                  ResponseCookieMappings="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-16&quot;?&gt;&lt;ArrayOfKeyValueMapping xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; /&gt;"
                  CookieContainerVariable=""
                  ConvertXmlToJson="False"
                  ResponseDataVariable="User::JSON_ReadNoteReturn"
                  ResponseStatusCodeVariable=""
                  ResponseContentType="Json"
                  ResponseContentFilter=""
                  ResponseCharset=""
                  ValidateResponse="False"
                  ValidationRules="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-16&quot;?&gt;&lt;ResponseValidationSetting xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot;&gt;&lt;MatchAny&gt;false&lt;/MatchAny&gt;&lt;Rules&gt;&lt;ResponseValidationRule xsi:type=&quot;StatusCodeValidationRule&quot;&gt;&lt;Enabled&gt;false&lt;/Enabled&gt;&lt;Operator&gt;Eq&lt;/Operator&gt;&lt;StatusCode&gt;200&lt;/StatusCode&gt;&lt;/ResponseValidationRule&gt;&lt;ResponseValidationRule xsi:type=&quot;ContentValidationRule&quot;&gt;&lt;Enabled&gt;false&lt;/Enabled&gt;&lt;Operator&gt;Eq&lt;/Operator&gt;&lt;Value /&gt;&lt;/ResponseValidationRule&gt;&lt;ResponseValidationRule xsi:type=&quot;HeaderValidationRule&quot;&gt;&lt;Enabled&gt;false&lt;/Enabled&gt;&lt;Operator&gt;Eq&lt;/Operator&gt;&lt;KeyName /&gt;&lt;Value /&gt;&lt;DataType&gt;String&lt;/DataType&gt;&lt;/ResponseValidationRule&gt;&lt;/Rules&gt;&lt;/ResponseValidationSetting&gt;"
                  ConsumeResponseOnError="False"
                  ContineOnAnyError="False"
                  ContineOnErrorForMessage="False"
                  ContineOnErrorForStatusCode="False"
                  ErrorStatusCodeToMatch="404"
                  MatchForEqual="True"
                  ErrorSubstringToMatch=""
                  ContineOn404Error="False"
                  SaveErrorFlagToVariable="False"
                  ErrorFlagVariableName=""
                  LogLevel="Normal"
                  PrefixTimestamp="False" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Foreach property\Foreach property note for deletion\Replace read note JSON"
              DTS:CreationName="Microsoft.ExpressionTask"
              DTS:Description="Expression Task"
              DTS:DTSID="{c5da424e-9dc3-407b-a262-6728fe674070}"
              DTS:ExecutableType="Microsoft.ExpressionTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Replace read note JSON"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <ExpressionTask
                  Expression="@[User::JSON_ReadNote] = REPLACE(REPLACE(@[User::JSON_ReadNoteReadOnly], &quot;{{TOKEN}}&quot;, @[User::APIToken]), &quot;{{NOTE_ID}}&quot;, (DT_STR, 10, 1252)@[User::RexNoteID])" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Foreach property\Foreach property note for deletion\Replace trash note JSON"
              DTS:CreationName="Microsoft.ExpressionTask"
              DTS:Description="Expression Task"
              DTS:DTSID="{76C25A11-1B92-4B72-85DF-3C102D12A060}"
              DTS:ExecutableType="Microsoft.ExpressionTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Replace trash note JSON"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <ExpressionTask
                  Expression="@[User::JSON_TrashNote] = REPLACE(REPLACE(@[User::JSON_TrashNoteReadOnly], &quot;{{TOKEN}}&quot;, @[User::APIToken]), &quot;{{NOTE_ID}}&quot;, (DT_STR, 10, 1252)@[User::RexNoteID])" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Foreach property\Foreach property note for deletion\Reset API error"
              DTS:CreationName="Microsoft.ExpressionTask"
              DTS:Description="Expression Task"
              DTS:DTSID="{4bdcbc52-e4af-47c8-a043-72d606aa56c1}"
              DTS:ExecutableType="Microsoft.ExpressionTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Reset API error"
              DTS:ThreadHint="3">
              <DTS:Variables />
              <DTS:ObjectData>
                <ExpressionTask
                  Expression="@[User::APIError_TrashNoteMessage] = &quot;&quot;" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Foreach property\Foreach property note for deletion\Reset API error object"
              DTS:CreationName="Microsoft.ExpressionTask"
              DTS:Description="Expression Task"
              DTS:DTSID="{EE89BFD5-AA9B-4C9C-BC21-2400B6BA6011}"
              DTS:ExecutableType="Microsoft.ExpressionTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Reset API error object"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <ExpressionTask
                  Expression="@[User::APIError_TrashNote] = &quot;&quot;" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Foreach property\Foreach property note for deletion\Save note"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{6CD8E62B-E220-4A1E-941B-0D5DF660235F}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Save note"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{1ACC4D99-A047-44CB-AAAD-088F42F69A23}"
                  SQLTask:SqlStatementSource="EXEC uspInsertPropertyNoteDeletionLog ?, ?, ?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="@rid_account"
                    SQLTask:DtsVariableName="$Package::RexAccountID"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="3"
                    SQLTask:ParameterSize="-1" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="@rid_property"
                    SQLTask:DtsVariableName="User::RexPropertyID"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="3"
                    SQLTask:ParameterSize="-1" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="@note_json"
                    SQLTask:DtsVariableName="User::JSON_ReadNoteReturn"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="129"
                    SQLTask:ParameterSize="-1" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Foreach property\Foreach property note for deletion\Set fail count"
              DTS:CreationName="Microsoft.ExpressionTask"
              DTS:Description="Expression Task"
              DTS:DTSID="{15C43967-5AF0-483F-B4E0-D5F39A539C41}"
              DTS:ExecutableType="Microsoft.ExpressionTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Set fail count"
              DTS:ThreadHint="1">
              <DTS:Variables />
              <DTS:ObjectData>
                <ExpressionTask
                  Expression="@[User::DeleteFailCount] = @[User::DeleteFailCount] + 1" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Foreach property\Foreach property note for deletion\Set success count"
              DTS:CreationName="Microsoft.ExpressionTask"
              DTS:Description="Expression Task"
              DTS:DTSID="{F0E059A6-536D-49D7-B9D1-A08317BE3C4D}"
              DTS:ExecutableType="Microsoft.ExpressionTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Set success count"
              DTS:ThreadHint="2">
              <DTS:Variables />
              <DTS:ObjectData>
                <ExpressionTask
                  Expression="@[User::DeleteSuccessCount] = @[User::DeleteSuccessCount] + 1" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Foreach property\Foreach property note for deletion\Trash note"
              DTS:CreationName="ZappySys.RestApiTask"
              DTS:Description="ZS REST API Task"
              DTS:DTSID="{EBD5E705-886C-4950-BAE8-27047B78B68E}"
              DTS:ExecutableType="ZappySys.RestApiTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Trash note"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <RestApiTask
                  RequestAccessMode="UrlFromConnection"
                  RequestUrlVariable="User::RexAPIWebURL"
                  EnableStatusCheck="False"
                  StatucCheckMaxWaitSeconds="1200"
                  StatucCheckIterationWaitSeconds="10"
                  StatusCheckForFailedValue="False"
                  StatusSuccessValue=""
                  StatusFailedValue=""
                  IsMultiPartUpload="False"
                  PreventAutoRedirect="False"
                  RequestTimeoutMs="0"
                  SecurityProtocol="Default"
                  EnableCompressionSupport="True"
                  AllowUnsecureSuite="False"
                  IgnoreCertificateErrors="False"
                  RequestUrl="{{User::RexAPIWebURL}}"
                  RequestUrlConnection="HTTP"
                  RequestMethod="POST"
                  RequestContentType="ApplicationJson"
                  OverrideConnectionUrl="True"
                  RequestHeaders="&lt;request&gt;&lt;header&gt;&lt;name&gt;Accept&lt;/name&gt;&lt;value&gt;*/*&lt;/value&gt;&lt;/header&gt;&lt;header&gt;&lt;name&gt;Cache-Control&lt;/name&gt;&lt;value&gt;no-cache&lt;/value&gt;&lt;/header&gt;&lt;/request&gt;"
                  RequestData="{{User::JSON_TrashNote}}"
                  SaveResponse="True"
                  SaveResponseStatusCode="False"
                  ResponseAccessMode="Variable"
                  SaveAsBinary="False"
                  ResponseDataFilePath=""
                  ResponseHeaderMappings="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-16&quot;?&gt;&lt;ArrayOfKeyValueMapping xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; /&gt;"
                  ResponseCookieMappings="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-16&quot;?&gt;&lt;ArrayOfKeyValueMapping xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; /&gt;"
                  CookieContainerVariable=""
                  ConvertXmlToJson="False"
                  ResponseDataVariable="User::APIError_TrashNote"
                  ResponseStatusCodeVariable=""
                  ResponseContentType="Json"
                  ResponseContentFilter=""
                  ResponseCharset=""
                  ValidateResponse="False"
                  ValidationRules="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-16&quot;?&gt;&lt;ResponseValidationSetting xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot;&gt;&lt;MatchAny&gt;false&lt;/MatchAny&gt;&lt;Rules&gt;&lt;ResponseValidationRule xsi:type=&quot;StatusCodeValidationRule&quot;&gt;&lt;Enabled&gt;false&lt;/Enabled&gt;&lt;Operator&gt;Eq&lt;/Operator&gt;&lt;StatusCode&gt;200&lt;/StatusCode&gt;&lt;/ResponseValidationRule&gt;&lt;ResponseValidationRule xsi:type=&quot;ContentValidationRule&quot;&gt;&lt;Enabled&gt;false&lt;/Enabled&gt;&lt;Operator&gt;Eq&lt;/Operator&gt;&lt;Value /&gt;&lt;/ResponseValidationRule&gt;&lt;ResponseValidationRule xsi:type=&quot;HeaderValidationRule&quot;&gt;&lt;Enabled&gt;false&lt;/Enabled&gt;&lt;Operator&gt;Eq&lt;/Operator&gt;&lt;KeyName /&gt;&lt;Value /&gt;&lt;DataType&gt;String&lt;/DataType&gt;&lt;/ResponseValidationRule&gt;&lt;/Rules&gt;&lt;/ResponseValidationSetting&gt;"
                  ConsumeResponseOnError="False"
                  ContineOnAnyError="False"
                  ContineOnErrorForMessage="False"
                  ContineOnErrorForStatusCode="False"
                  ErrorStatusCodeToMatch="404"
                  MatchForEqual="True"
                  ErrorSubstringToMatch=""
                  ContineOn404Error="False"
                  SaveErrorFlagToVariable="False"
                  ErrorFlagVariableName=""
                  LogLevel="Normal"
                  PrefixTimestamp="False" />
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Foreach property\Foreach property note for deletion.PrecedenceConstraints[Constraint]"
              DTS:CreationName=""
              DTS:DTSID="{61DCCEA1-EB6F-4E9F-AF5A-E25A56C0D173}"
              DTS:From="Package\Foreach property\Foreach property note for deletion\Replace trash note JSON"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint"
              DTS:To="Package\Foreach property\Foreach property note for deletion\Trash note" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Foreach property\Foreach property note for deletion.PrecedenceConstraints[Constraint 1]"
              DTS:CreationName=""
              DTS:DTSID="{4E38FCEE-163F-4900-84CB-E806D4CF99ED}"
              DTS:From="Package\Foreach property\Foreach property note for deletion\Trash note"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 1"
              DTS:To="Package\Foreach property\Foreach property note for deletion\Parse trash note error" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Foreach property\Foreach property note for deletion.PrecedenceConstraints[Constraint 2]"
              DTS:CreationName=""
              DTS:DTSID="{F39C3032-A088-4B78-8CEF-2BF044720388}"
              DTS:From="Package\Foreach property\Foreach property note for deletion\Insert API error"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 2"
              DTS:To="Package\Foreach property\Foreach property note for deletion\Reset API error"
              DTS:Value="2" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Foreach property\Foreach property note for deletion.PrecedenceConstraints[Constraint 3]"
              DTS:CreationName=""
              DTS:DTSID="{31295A9F-3EB0-4107-9E61-624B68C8B6E4}"
              DTS:From="Package\Foreach property\Foreach property note for deletion\Insert API error"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 3"
              DTS:To="Package\Foreach property\Foreach property note for deletion\Reset API error object"
              DTS:Value="2" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Foreach property\Foreach property note for deletion.PrecedenceConstraints[Constraint 4]"
              DTS:CreationName=""
              DTS:DTSID="{27B75987-ADB0-4BC4-9DA3-5386E8339641}"
              DTS:From="Package\Foreach property\Foreach property note for deletion\Insert API error"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 4"
              DTS:To="Package\Foreach property\Foreach property note for deletion\Set fail count"
              DTS:Value="2" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Foreach property\Foreach property note for deletion.PrecedenceConstraints[Constraint 5]"
              DTS:CreationName=""
              DTS:DTSID="{32B81152-7A65-4E32-8C48-1134955FB14C}"
              DTS:From="Package\Foreach property\Foreach property note for deletion\Replace read note JSON"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 5"
              DTS:To="Package\Foreach property\Foreach property note for deletion\Read note" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Foreach property\Foreach property note for deletion.PrecedenceConstraints[Constraint 6]"
              DTS:CreationName=""
              DTS:DTSID="{57FD9246-2D2E-4B06-9784-9A1F2D597E66}"
              DTS:From="Package\Foreach property\Foreach property note for deletion\Read note"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 6"
              DTS:To="Package\Foreach property\Foreach property note for deletion\Parse result" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Foreach property\Foreach property note for deletion.PrecedenceConstraints[Constraint 7]"
              DTS:CreationName=""
              DTS:DTSID="{F0101631-239D-4B23-B1A0-16291C31DE4D}"
              DTS:From="Package\Foreach property\Foreach property note for deletion\Save note"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 7"
              DTS:To="Package\Foreach property\Foreach property note for deletion\Replace trash note JSON" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Foreach property\Foreach property note for deletion.PrecedenceConstraints[Created user is Rosie API]"
              DTS:CreationName=""
              DTS:DTSID="{1642CA1D-6312-4B49-A46F-DD047BEFB43F}"
              DTS:EvalOp="3"
              DTS:Expression="REPLACENULL(@[User::RexCreatedUserID], 0) == 19443"
              DTS:From="Package\Foreach property\Foreach property note for deletion\Parse result"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Created user is Rosie API"
              DTS:To="Package\Foreach property\Foreach property note for deletion\Save note" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Foreach property\Foreach property note for deletion.PrecedenceConstraints[Error]"
              DTS:CreationName=""
              DTS:DTSID="{A6771687-ED42-4C07-817F-F49988928398}"
              DTS:EvalOp="4"
              DTS:Expression="@[User::APIError_TrashNoteMessage] != &quot;&quot;"
              DTS:From="Package\Foreach property\Foreach property note for deletion\Parse trash note error"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Error"
              DTS:To="Package\Foreach property\Foreach property note for deletion\Insert API error"
              DTS:Value="1" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Foreach property\Foreach property note for deletion.PrecedenceConstraints[No error]"
              DTS:CreationName=""
              DTS:DTSID="{CCDDE532-993A-4992-9C58-602AA2438EAD}"
              DTS:EvalOp="3"
              DTS:Expression="@[User::APIError_TrashNoteMessage] == &quot;&quot;"
              DTS:From="Package\Foreach property\Foreach property note for deletion\Parse trash note error"
              DTS:LogicalAnd="True"
              DTS:ObjectName="No error"
              DTS:To="Package\Foreach property\Foreach property note for deletion\Set success count" />
          </DTS:PrecedenceConstraints>
          <DTS:ForEachVariableMappings>
            <DTS:ForEachVariableMapping
              DTS:CreationName=""
              DTS:DTSID="{00EFC89E-39CF-40C1-ABC8-E481D20606D1}"
              DTS:ObjectName="{00EFC89E-39CF-40C1-ABC8-E481D20606D1}"
              DTS:ValueIndex="0"
              DTS:VariableName="User::RexNoteID" />
          </DTS:ForEachVariableMappings>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach property\Get property notes"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{4AD8F696-D5B7-4EFF-95E7-FCC6D7824497}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Get property notes"
          DTS:ThreadHint="4">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{78432CA1-1FEA-4ED4-9C0F-D552A4A9DE0E}"
              SQLTask:SqlStatementSource="EXEC ROSIE_getPropertyNotes ?, ?"
              SQLTask:ResultType="ResultSetType_Rowset" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ResultBinding
                SQLTask:ResultName="0"
                SQLTask:DtsVariableName="User::Object_PropertyNotes" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@prop_ref"
                SQLTask:DtsVariableName="User::IDBSPropertyRef"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@office_id"
                SQLTask:DtsVariableName="$Package::IDBSOfficeID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach property\Get property notes for deletion"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{6716D369-3437-4D60-8D82-B81FA29F6B02}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Get property notes for deletion"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Foreach property\Get property notes for deletion\Error?"
                  componentClassID="Microsoft.ConditionalSplit"
                  contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
                  name="Error?"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach property\Get property notes for deletion\Error?.Inputs[Conditional Split Input]"
                      description="Input to the Conditional Split Transformation"
                      name="Conditional Split Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach property\Get property notes for deletion\Error?.Inputs[Conditional Split Input].Columns[error]"
                          cachedDataType="wstr"
                          cachedLength="4000"
                          cachedName="error"
                          lineageId="Package\Foreach property\Get property notes for deletion\Search property for notes.Outputs[JsonSourceOutput].Columns[error]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach property\Get property notes for deletion\Error?.Outputs[No error]"
                      description="Output 1 of the Conditional Split Transformation"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      exclusionGroup="1"
                      name="No error"
                      synchronousInputId="Package\Foreach property\Get property notes for deletion\Error?.Inputs[Conditional Split Input]"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                          name="Expression">[REPLACENULL](#{Package\Foreach property\Get property notes for deletion\Search property for notes.Outputs[JsonSourceOutput].Columns[error]},"") == ""</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the friendly version of the expression. This expression version uses column names."
                          expressionType="Notify"
                          name="FriendlyExpression">REPLACENULL(error,"") == ""</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                          name="EvaluationOrder">0</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach property\Get property notes for deletion\Error?.Outputs[Error]"
                      description="Output 2 of the Conditional Split Transformation"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      exclusionGroup="1"
                      name="Error"
                      synchronousInputId="Package\Foreach property\Get property notes for deletion\Error?.Inputs[Conditional Split Input]"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                          name="Expression">[REPLACENULL](#{Package\Foreach property\Get property notes for deletion\Search property for notes.Outputs[JsonSourceOutput].Columns[error]},"") != ""</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the friendly version of the expression. This expression version uses column names."
                          expressionType="Notify"
                          name="FriendlyExpression">REPLACENULL(error,"") != ""</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                          name="EvaluationOrder">1</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach property\Get property notes for deletion\Error?.Outputs[Conditional Split Default Output]"
                      description="Default Output of the Conditional Split Transformation"
                      exclusionGroup="1"
                      name="Conditional Split Default Output"
                      synchronousInputId="Package\Foreach property\Get property notes for deletion\Error?.Inputs[Conditional Split Input]">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          name="IsDefaultOut">true</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach property\Get property notes for deletion\Error?.Outputs[Conditional Split Error Output]"
                      description="Error Output of the Conditional Split Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Conditional Split Error Output"
                      synchronousInputId="Package\Foreach property\Get property notes for deletion\Error?.Inputs[Conditional Split Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach property\Get property notes for deletion\Error?.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach property\Get property notes for deletion\Error?.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach property\Get property notes for deletion\Error?.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach property\Get property notes for deletion\Error?.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach property\Get property notes for deletion\Parse error"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="JSON Parser Transform; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                  description="Parse incoming JSON String into columns. You can also parse and transform single JSON record into multiple rows by filtering data based on JSON Path (e.g. $.Customer.Orders[*])"
                  name="Parse error"
                  usesDispositions="true"
                  version="2">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                      expressionType="Notify"
                      name="LoggingMode"
                      typeConverter="ZappySys.PowerPack.Common.LoggingMode, ZappySys.PowerPack130, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                    <property
                      dataType="System.Boolean"
                      description="When you enable this property it will prefix timestamp before Log messages."
                      expressionType="Notify"
                      name="PrefixTimestamp">false</property>
                    <property
                      dataType="System.Null"
                      expressionType="Notify"
                      name="SelfRef"
                      typeConverter="NOTBROWSABLE" />
                    <property
                      dataType="System.Boolean"
                      description="Treat empty string as NULL for any numeric data types"
                      expressionType="Notify"
                      name="TreatBlankNumberAsNull">true</property>
                    <property
                      dataType="System.Boolean"
                      description="Treat empty string as NULL for bool data types"
                      expressionType="Notify"
                      name="TreatBlankBoolAsNull">true</property>
                    <property
                      dataType="System.Boolean"
                      description="Treat empty string as NULL for any date/time data types"
                      expressionType="Notify"
                      name="TreatBlankDateAsNull">true</property>
                    <property
                      dataType="System.String"
                      description="Sample JSON data used to parse output columns."
                      expressionType="Notify"
                      name="SampleData"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">{
        "message": "The field passed in 'related_property.d' is not a permissible or valid search field.",
        "type": "InvalidFieldException",
        "code": 0,
        "extra": {
            "field_name": null,
            "request_data": {
                "method": "Notes::search",
                "args": {
                    "criteria": [
                        {
                            "name": "related_property.d",
                            "type": "=",
                            "value": "4260103"
                        },
                        {
                            "name": "system_ctime",
                            "type": "&gt;=",
                            "value": 1562851282
                        },
                        {
                            "name": "system_ctime",
                            "type": "&lt;=",
                            "value": 1562851282
                        }
                    ]
                },
                "strip_response_prefix": true,
                "token": "1af0-d90a-58d1-e581-87b7-b444-30fb-bbec"
            }
        }
    }</property>
                    <property
                      dataType="System.Boolean"
                      description="Include all upstream parent columns into output except the one you selected to parse. By default only parsed columns from Input document is included in the output. If you wish to include all other upstream columns in the output too then check this option."
                      expressionType="Notify"
                      name="OutputAllUpstreamColumns">false</property>
                    <property
                      dataType="System.Int32"
                      description="Defines how to handle empty input. By default NULL or Empty input is skipped from parsing."
                      expressionType="Notify"
                      name="EmptyInputProcessingMode"
                      typeConverter="ZappySys.Common.Data.EmptyInputProcessingMode, ZappySys.Common, Version=1.0.2018.11210, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                    <property
                      dataType="System.String"
                      description="Defines how to handle empty input. By default NULL or Empty input is skipped from parsing."
                      expressionType="Notify"
                      name="TreatEmptyInputAs">{ }</property>
                    <property
                      dataType="System.Int32"
                      description="Maximum JSON records to fetch. Set this value to 0 for all records"
                      expressionType="Notify"
                      name="MaxRows">0</property>
                    <property
                      dataType="System.String"
                      description="Enter expression here to filter data.(Example:  $.Users[*].UserName ) This will fetch User names from users records"
                      expressionType="Notify"
                      name="Filter"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.Boolean"
                      description="Use this option to include parent properties (Non array) in the output along with Filtered Rows"
                      expressionType="Notify"
                      name="IncludeParentColumns">true</property>
                    <property
                      dataType="System.Boolean"
                      description="By default child and parent information is not included in the output if children not found for specified expression. For example if you want to extract all orders from all customers nodes then you can type $.Customers[*].Orders[*]. This will fetch all orders from all customers. By default customers records without orders wont be included in the output. If you want to include those customers where orders not found then check this option (Output null information for order attributes). This behavior is similar to LEFT OUTER JOIN in SQL (Left side is parent, right side is child). This option is ***resource intensive*** so only check if you really care about this behavior."
                      expressionType="Notify"
                      name="IncludeParentColumnsWhenChildMissing">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Set this option to true if you want to output parent columns which are array. By default any parent column which is an array is not included in output. See also FilterForParentColumnsWithArrayType property if you set this property"
                      expressionType="Notify"
                      name="IncludeParentColumnsWithArrayType">false</property>
                    <property
                      dataType="System.String"
                      description="Filter expression to extract value form parent"
                      expressionType="Notify"
                      name="FilterForParentColumnsWithArrayType"></property>
                    <property
                      dataType="System.String"
                      description="Prefix for parent column name. This option is only valid if you have set IncludeParentColumns=True"
                      expressionType="Notify"
                      name="ParentColumnPrefix">P_</property>
                    <property
                      dataType="System.Boolean"
                      description="Throw error if property name specified in filter expression is missing. By default it will ignore any missing property errors."
                      expressionType="Notify"
                      name="ThrowErrorIfPropertyMissing">false</property>
                    <property
                      dataType="System.Int32"
                      description="This property how many nested levels should be scanned to fetch various properties. 0=Scan all child levels."
                      expressionType="Notify"
                      name="MaxLevelsToScan">0</property>
                    <property
                      dataType="System.String"
                      description="List comma separated property names from JSON document which you want to exclude from output. Specify parent property name to exclude all child nodes."
                      expressionType="Notify"
                      name="ExcludedProperties"></property>
                    <property
                      dataType="System.String"
                      description="Property level separator used in generated property name (separator for outer properties - Above selected filter node). Use this if default separator is producing duplicate property name which is conflicting with existing name."
                      expressionType="Notify"
                      name="LevelSeparator">_</property>
                    <property
                      dataType="System.Boolean"
                      description="Enables deep array flattening for selected filtered hierarchy. When you turn on this property it will flatten each property of each array item and expose as column (e.g. If you have Filter set as $.customers[*] and for each customer you have an array of Addresses then you may see output columns like Addresses.1.City, Addresses.1.State, Addresses.2.City, Addresses.2.State .... Addresses.N.City, Addresses.N.State). You can control how many array items you want to flatten by setting MaxArrayItemsToFlatten property."
                      expressionType="Notify"
                      name="EnableArrayFlattening">false</property>
                    <property
                      dataType="System.Int32"
                      description="Maximum number of array items to flatten. inner array flattening. Adjust this property to control how many columns being generated. This option is ignored if you set EnableArrayFlattening=false"
                      expressionType="Notify"
                      name="MaxArrayItemsToFlatten">10</property>
                    <property
                      dataType="System.String"
                      description="Specifies how custom date formatted strings are parsed when reading JSON."
                      expressionType="Notify"
                      name="DateFormatString"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies how date formatted strings, e.g. Date(1198908717056) and 2012-03-21T05:40Z, are parsed when reading JSON."
                      expressionType="Notify"
                      name="DateParseHandling"
                      typeConverter="ZappySys.Common.DateParseHandling, ZappySys.Common, Version=1.0.2018.11210, Culture=neutral, PublicKeyToken=1903265a93eae502">1</property>
                    <property
                      dataType="System.Boolean"
                      description="Output as raw JSON document rather than parsing individual fields. This option is helpful if you have documents stored in a file and you want to pass them downstream as raw JSON string rather than parsing into columns."
                      expressionType="Notify"
                      name="OutputRawDocument">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indent JSON output so its easy to read."
                      expressionType="Notify"
                      name="IndentOutput">false</property>
                    <property
                      dataType="System.Boolean"
                      description="When this property is true then Column is converted to Row. Pivoted names will appear under  Pivot_Name column and values will appear under Pivot_Value field."
                      expressionType="Notify"
                      name="EnablePivot">false</property>
                    <property
                      dataType="System.Int32"
                      description="Array Transformation you want to apply. Useful for case when you have 2-Dimensional arrays with rows/columns in separate arrays."
                      expressionType="Notify"
                      name="ArrayTransformationType"
                      typeConverter="ZappySys.Json.ArrayTransformType, ZappySys.Json, Version=1.0.2018.11210, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                    <property
                      dataType="System.String"
                      description="Filter expression to use to extract column names for array transformation."
                      expressionType="Notify"
                      name="ArrayTransColumnNameFilter"></property>
                    <property
                      dataType="System.String"
                      description="Filter expression for row values (Not applicable for simple array transformation)."
                      expressionType="Notify"
                      name="ArrayTransRowValueFilter"></property>
                    <property
                      dataType="System.Boolean"
                      description="When you have 2D array but don't have column list specified in a separate array then use this option (e.g. { arr: [[10,11],[21,22]] } )."
                      expressionType="Notify"
                      name="ArrayTransEnableCustomColumns">false</property>
                    <property
                      dataType="System.String"
                      description="When you have 2D array but don't have column list specified in a separate array then use specify column names here. Use comma separated list (e.g col1,col2,col3 ). Column name Order must match value order."
                      expressionType="Notify"
                      name="ArrayTransCustomColumns"></property>
                    <property
                      dataType="System.Int32"
                      description="Metadata scan mode controls how data type and length is determined. By default few records scanned to determine datatype/length. Changing ScanMode affects length/datatype accuracy."
                      expressionType="Notify"
                      name="MetaDataScanMode"
                      typeConverter="ZappySys.Common.Data.MetaDataScanMode, ZappySys.Common, Version=1.0.2018.11210, Culture=neutral, PublicKeyToken=1903265a93eae502">4</property>
                    <property
                      dataType="System.Int32"
                      description="Length for all string column. This option is only valid for MetaDataScanMode=Custom"
                      expressionType="Notify"
                      name="MetaDataCustomLength">1000</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">ZappySys.JsonParserTransform</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Foreach property\Get property notes for deletion\Parse error.Inputs[JsonParserTransformInput]"
                      errorRowDisposition="FailComponent"
                      name="JsonParserTransformInput"
                      truncationRowDisposition="FailComponent">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach property\Get property notes for deletion\Parse error.Inputs[JsonParserTransformInput].Columns[error]"
                          cachedDataType="wstr"
                          cachedLength="4000"
                          cachedName="error"
                          lineageId="Package\Foreach property\Get property notes for deletion\Search property for notes.Outputs[JsonSourceOutput].Columns[error]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True" />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach property\Get property notes for deletion\Parse error.Outputs[JsonParserTransformOutput]"
                      errorOrTruncationOperation="Error"
                      errorRowDisposition="FailComponent"
                      name="JsonParserTransformOutput"
                      truncationRowDisposition="FailComponent">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach property\Get property notes for deletion\Parse error.Outputs[JsonParserTransformOutput].Columns[error.message]"
                          dataType="wstr"
                          externalMetadataColumnId="Package\Foreach property\Get property notes for deletion\Parse error.Outputs[JsonParserTransformOutput].ExternalColumns[message]"
                          length="4000"
                          lineageId="Package\Foreach property\Get property notes for deletion\Parse error.Outputs[JsonParserTransformOutput].Columns[error.message]"
                          name="error.message" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach property\Get property notes for deletion\Parse error.Outputs[JsonParserTransformOutput].ExternalColumns[message]"
                          dataType="wstr"
                          length="336"
                          name="message" />
                        <externalMetadataColumn
                          refId="Package\Foreach property\Get property notes for deletion\Parse error.Outputs[JsonParserTransformOutput].ExternalColumns[type]"
                          dataType="wstr"
                          length="84"
                          name="type" />
                        <externalMetadataColumn
                          refId="Package\Foreach property\Get property notes for deletion\Parse error.Outputs[JsonParserTransformOutput].ExternalColumns[code]"
                          dataType="i8"
                          name="code" />
                        <externalMetadataColumn
                          refId="Package\Foreach property\Get property notes for deletion\Parse error.Outputs[JsonParserTransformOutput].ExternalColumns[extra.field_name]"
                          dataType="wstr"
                          length="1020"
                          name="extra.field_name" />
                        <externalMetadataColumn
                          refId="Package\Foreach property\Get property notes for deletion\Parse error.Outputs[JsonParserTransformOutput].ExternalColumns[extra.request_data.method]"
                          dataType="wstr"
                          length="52"
                          name="extra.request_data.method" />
                        <externalMetadataColumn
                          refId="Package\Foreach property\Get property notes for deletion\Parse error.Outputs[JsonParserTransformOutput].ExternalColumns[extra.request_data.args.criteria]"
                          dataType="wstr"
                          length="1036"
                          name="extra.request_data.args.criteria" />
                        <externalMetadataColumn
                          refId="Package\Foreach property\Get property notes for deletion\Parse error.Outputs[JsonParserTransformOutput].ExternalColumns[extra.request_data.strip_response_prefix]"
                          dataType="bool"
                          name="extra.request_data.strip_response_prefix" />
                        <externalMetadataColumn
                          refId="Package\Foreach property\Get property notes for deletion\Parse error.Outputs[JsonParserTransformOutput].ExternalColumns[extra.request_data.token]"
                          dataType="wstr"
                          length="156"
                          name="extra.request_data.token" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Foreach property\Get property notes for deletion\Parse error.Outputs[JsonParserTransform Error Output]"
                      isErrorOut="true"
                      name="JsonParserTransform Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach property\Get property notes for deletion\Parse error.Outputs[JsonParserTransform Error Output].Columns[error.message]"
                          dataType="wstr"
                          length="4000"
                          lineageId="Package\Foreach property\Get property notes for deletion\Parse error.Outputs[JsonParserTransform Error Output].Columns[error.message]"
                          name="error.message" />
                        <outputColumn
                          refId="Package\Foreach property\Get property notes for deletion\Parse error.Outputs[JsonParserTransform Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach property\Get property notes for deletion\Parse error.Outputs[JsonParserTransform Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach property\Get property notes for deletion\Parse error.Outputs[JsonParserTransform Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach property\Get property notes for deletion\Parse error.Outputs[JsonParserTransform Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                        <outputColumn
                          refId="Package\Foreach property\Get property notes for deletion\Parse error.Outputs[JsonParserTransform Error Output].Columns[ErrorColumnName]"
                          codePage="1252"
                          dataType="str"
                          length="128"
                          lineageId="Package\Foreach property\Get property notes for deletion\Parse error.Outputs[JsonParserTransform Error Output].Columns[ErrorColumnName]"
                          name="ErrorColumnName" />
                        <outputColumn
                          refId="Package\Foreach property\Get property notes for deletion\Parse error.Outputs[JsonParserTransform Error Output].Columns[ErrorMessage]"
                          dataType="wstr"
                          length="1024"
                          lineageId="Package\Foreach property\Get property notes for deletion\Parse error.Outputs[JsonParserTransform Error Output].Columns[ErrorMessage]"
                          name="ErrorMessage" />
                        <outputColumn
                          refId="Package\Foreach property\Get property notes for deletion\Parse error.Outputs[JsonParserTransform Error Output].Columns[ErrorRawData]"
                          dataType="nText"
                          lineageId="Package\Foreach property\Get property notes for deletion\Parse error.Outputs[JsonParserTransform Error Output].Columns[ErrorRawData]"
                          name="ErrorRawData" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach property\Get property notes for deletion\Parse notes"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="JSON Parser Transform; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                  description="Parse incoming JSON String into columns. You can also parse and transform single JSON record into multiple rows by filtering data based on JSON Path (e.g. $.Customer.Orders[*])"
                  name="Parse notes"
                  usesDispositions="true"
                  version="2">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                      expressionType="Notify"
                      name="LoggingMode"
                      typeConverter="ZappySys.PowerPack.Common.LoggingMode, ZappySys.PowerPack130, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                    <property
                      dataType="System.Boolean"
                      description="When you enable this property it will prefix timestamp before Log messages."
                      expressionType="Notify"
                      name="PrefixTimestamp">false</property>
                    <property
                      dataType="System.Null"
                      expressionType="Notify"
                      name="SelfRef"
                      typeConverter="NOTBROWSABLE" />
                    <property
                      dataType="System.Boolean"
                      description="Treat empty string as NULL for any numeric data types"
                      expressionType="Notify"
                      name="TreatBlankNumberAsNull">true</property>
                    <property
                      dataType="System.Boolean"
                      description="Treat empty string as NULL for bool data types"
                      expressionType="Notify"
                      name="TreatBlankBoolAsNull">true</property>
                    <property
                      dataType="System.Boolean"
                      description="Treat empty string as NULL for any date/time data types"
                      expressionType="Notify"
                      name="TreatBlankDateAsNull">true</property>
                    <property
                      dataType="System.String"
                      description="Sample JSON data used to parse output columns."
                      expressionType="Notify"
                      name="SampleData"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">[
    {
        "system_record_state": "active",
        "system_ctime": 1561563759,
        "system_modtime": 1561563759,
        "reminder_id": null,
        "_security_user_rights": [
            "read",
            "update",
            "trash"
        ],
        "note": "Sales Progression\r\n\r\nYOUR  REFERENCE: OUR REFERENCE:   KY1/AD1/W1213/WALFORDDEAR SIRSOUR CLIENT: GARY KENNETH WALFORD AND KIM LORRAINE WALFORDPROPERTY: 22, SPRING CLOSE, HAVERHILL, SUFFOLK, CB9 7BFTHANK YOU FOR YOUR LETTER SENDING US DETAILS OF OUR CLIENTS PROPOSED PURCHASE.THE CLIENTS INSTRUCTIONS HAVE BEEN ACCEPTED AND FIRST LETTERS HAVE BEEN SENT TO THEMWE ARE IN TOUCH WITH THE SELLERS CONVEYANCERS AND WILL KEEP YOU ADVISED OF PROGRESS.REGARDSVALENTINE &amp;amp; CO\r\n\r\nDec 12 2018  4:35PM by: Sonia Barrington",
        "_related": {
            "note_contacts": [],
            "note_market_leads": [],
            "note_properties": [
                {
                    "_id": "1297954",
                    "property": {
                        "_system_search_key": "22 Spring Close, Haverhill, Suffolk CB9 7BF",
                        "_system_geo_location": "POINT(52.0875572 0.4116077)",
                        "_adr_latitude": "52.0875572",
                        "_adr_longitude": "0.4116077",
                        "_adr_unit_number": null,
                        "_adr_street_number": "22",
                        "_adr_street_name": "Spring Close",
                        "_adr_state_or_region": "Suffolk",
                        "_adr_locality": null,
                        "_adr_suburb_or_town": "Haverhill",
                        "_adr_postcode": "CB9 7BF",
                        "_adr_country": "uk",
                        "_adr_estate_name": null,
                        "_adr_estate_stage": null,
                        "_system_owner_user": {
                            "id": "19443",
                            "_name": "Rosie API",
                            "_first_name": "Rosie",
                            "_last_name": "API",
                            "_email_address": "rosie@spicerhaart.co.uk"
                        },
                        "_adr_building": null,
                        "_property_category": {
                            "id": "residential",
                            "text": "Residential"
                        },
                        "_property_image": {
                            "uri": "rexlive://1739/listings/6401/images/HRT011518829_01_e052-aea5-bba2-4a89-9941-41ba-8fff-942a_20190627014241.jpg",
                            "_url": "//app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com/app/livestore/accounts/1739/listings/6401/images/HRT011518829_01_e052-aea5-bba2-4a89-9941-41ba-8fff-942a_20190627014241.jpg",
                            "_thumbs": {
                                "800x600": {
                                    "uri": "rexlive://1739/listings/6401/images/HRT011518829_01_e052-aea5-bba2-4a89-9941-41ba-8fff-942a_20190627014241_800x600.jpg",
                                    "_url": "//app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com/app/livestore/accounts/1739/listings/6401/images/HRT011518829_01_e052-aea5-bba2-4a89-9941-41ba-8fff-942a_20190627014241_800x600.jpg"
                                },
                                "400x300": {
                                    "uri": "rexlive://1739/listings/6401/images/HRT011518829_01_e052-aea5-bba2-4a89-9941-41ba-8fff-942a_20190627014241_400x300.jpg",
                                    "_url": "//app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com/app/livestore/accounts/1739/listings/6401/images/HRT011518829_01_e052-aea5-bba2-4a89-9941-41ba-8fff-942a_20190627014241_400x300.jpg"
                                },
                                "200x150": {
                                    "uri": "rexlive://1739/listings/6401/images/HRT011518829_01_e052-aea5-bba2-4a89-9941-41ba-8fff-942a_20190627014241_200x150.jpg",
                                    "_url": "//app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com/app/livestore/accounts/1739/listings/6401/images/HRT011518829_01_e052-aea5-bba2-4a89-9941-41ba-8fff-942a_20190627014241_200x150.jpg"
                                },
                                "80x60": {
                                    "uri": "rexlive://1739/listings/6401/images/HRT011518829_01_e052-aea5-bba2-4a89-9941-41ba-8fff-942a_20190627014241_80x60.jpg",
                                    "_url": "//app-r2-live-uk-appstore.s3.eu-west-2.amazonaws.com/app/livestore/accounts/1739/listings/6401/images/HRT011518829_01_e052-aea5-bba2-4a89-9941-41ba-8fff-942a_20190627014241_80x60.jpg"
                                }
                            }
                        },
                        "_etag": "4260103-1561558959",
                        "id": "4260103"
                    }
                }
            ],
            "note_projects": [],
            "note_project_stages": []
        },
        "system_modified_user": {
            "id": "19443",
            "_name": "Rosie API",
            "_first_name": "Rosie",
            "_last_name": "API",
            "_email_address": "rosie@spicerhaart.co.uk"
        },
        "system_created_user": {
            "id": "19443",
            "_name": "Rosie API",
            "_first_name": "Rosie",
            "_last_name": "API",
            "_email_address": "rosie@spicerhaart.co.uk"
        },
        "note_type": {
            "id": "note",
            "text": "Note"
        },
        "etag": "1357700-1561563759",
        "_id": 1357700
    }
]</property>
                    <property
                      dataType="System.Boolean"
                      description="Include all upstream parent columns into output except the one you selected to parse. By default only parsed columns from Input document is included in the output. If you wish to include all other upstream columns in the output too then check this option."
                      expressionType="Notify"
                      name="OutputAllUpstreamColumns">false</property>
                    <property
                      dataType="System.Int32"
                      description="Defines how to handle empty input. By default NULL or Empty input is skipped from parsing."
                      expressionType="Notify"
                      name="EmptyInputProcessingMode"
                      typeConverter="ZappySys.Common.Data.EmptyInputProcessingMode, ZappySys.Common, Version=1.0.2018.11210, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                    <property
                      dataType="System.String"
                      description="Defines how to handle empty input. By default NULL or Empty input is skipped from parsing."
                      expressionType="Notify"
                      name="TreatEmptyInputAs">{ }</property>
                    <property
                      dataType="System.Int32"
                      description="Maximum JSON records to fetch. Set this value to 0 for all records"
                      expressionType="Notify"
                      name="MaxRows">0</property>
                    <property
                      dataType="System.String"
                      description="Enter expression here to filter data.(Example:  $.Users[*].UserName ) This will fetch User names from users records"
                      expressionType="Notify"
                      name="Filter"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.Boolean"
                      description="Use this option to include parent properties (Non array) in the output along with Filtered Rows"
                      expressionType="Notify"
                      name="IncludeParentColumns">true</property>
                    <property
                      dataType="System.Boolean"
                      description="By default child and parent information is not included in the output if children not found for specified expression. For example if you want to extract all orders from all customers nodes then you can type $.Customers[*].Orders[*]. This will fetch all orders from all customers. By default customers records without orders wont be included in the output. If you want to include those customers where orders not found then check this option (Output null information for order attributes). This behavior is similar to LEFT OUTER JOIN in SQL (Left side is parent, right side is child). This option is ***resource intensive*** so only check if you really care about this behavior."
                      expressionType="Notify"
                      name="IncludeParentColumnsWhenChildMissing">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Set this option to true if you want to output parent columns which are array. By default any parent column which is an array is not included in output. See also FilterForParentColumnsWithArrayType property if you set this property"
                      expressionType="Notify"
                      name="IncludeParentColumnsWithArrayType">false</property>
                    <property
                      dataType="System.String"
                      description="Filter expression to extract value form parent"
                      expressionType="Notify"
                      name="FilterForParentColumnsWithArrayType"></property>
                    <property
                      dataType="System.String"
                      description="Prefix for parent column name. This option is only valid if you have set IncludeParentColumns=True"
                      expressionType="Notify"
                      name="ParentColumnPrefix">P_</property>
                    <property
                      dataType="System.Boolean"
                      description="Throw error if property name specified in filter expression is missing. By default it will ignore any missing property errors."
                      expressionType="Notify"
                      name="ThrowErrorIfPropertyMissing">false</property>
                    <property
                      dataType="System.Int32"
                      description="This property how many nested levels should be scanned to fetch various properties. 0=Scan all child levels."
                      expressionType="Notify"
                      name="MaxLevelsToScan">0</property>
                    <property
                      dataType="System.String"
                      description="List comma separated property names from JSON document which you want to exclude from output. Specify parent property name to exclude all child nodes."
                      expressionType="Notify"
                      name="ExcludedProperties"></property>
                    <property
                      dataType="System.String"
                      description="Property level separator used in generated property name (separator for outer properties - Above selected filter node). Use this if default separator is producing duplicate property name which is conflicting with existing name."
                      expressionType="Notify"
                      name="LevelSeparator">_</property>
                    <property
                      dataType="System.Boolean"
                      description="Enables deep array flattening for selected filtered hierarchy. When you turn on this property it will flatten each property of each array item and expose as column (e.g. If you have Filter set as $.customers[*] and for each customer you have an array of Addresses then you may see output columns like Addresses.1.City, Addresses.1.State, Addresses.2.City, Addresses.2.State .... Addresses.N.City, Addresses.N.State). You can control how many array items you want to flatten by setting MaxArrayItemsToFlatten property."
                      expressionType="Notify"
                      name="EnableArrayFlattening">false</property>
                    <property
                      dataType="System.Int32"
                      description="Maximum number of array items to flatten. inner array flattening. Adjust this property to control how many columns being generated. This option is ignored if you set EnableArrayFlattening=false"
                      expressionType="Notify"
                      name="MaxArrayItemsToFlatten">10</property>
                    <property
                      dataType="System.String"
                      description="Specifies how custom date formatted strings are parsed when reading JSON."
                      expressionType="Notify"
                      name="DateFormatString"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies how date formatted strings, e.g. Date(1198908717056) and 2012-03-21T05:40Z, are parsed when reading JSON."
                      expressionType="Notify"
                      name="DateParseHandling"
                      typeConverter="ZappySys.Common.DateParseHandling, ZappySys.Common, Version=1.0.2018.11210, Culture=neutral, PublicKeyToken=1903265a93eae502">1</property>
                    <property
                      dataType="System.Boolean"
                      description="Output as raw JSON document rather than parsing individual fields. This option is helpful if you have documents stored in a file and you want to pass them downstream as raw JSON string rather than parsing into columns."
                      expressionType="Notify"
                      name="OutputRawDocument">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indent JSON output so its easy to read."
                      expressionType="Notify"
                      name="IndentOutput">false</property>
                    <property
                      dataType="System.Boolean"
                      description="When this property is true then Column is converted to Row. Pivoted names will appear under  Pivot_Name column and values will appear under Pivot_Value field."
                      expressionType="Notify"
                      name="EnablePivot">false</property>
                    <property
                      dataType="System.Int32"
                      description="Array Transformation you want to apply. Useful for case when you have 2-Dimensional arrays with rows/columns in separate arrays."
                      expressionType="Notify"
                      name="ArrayTransformationType"
                      typeConverter="ZappySys.Json.ArrayTransformType, ZappySys.Json, Version=1.0.2018.11210, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                    <property
                      dataType="System.String"
                      description="Filter expression to use to extract column names for array transformation."
                      expressionType="Notify"
                      name="ArrayTransColumnNameFilter"></property>
                    <property
                      dataType="System.String"
                      description="Filter expression for row values (Not applicable for simple array transformation)."
                      expressionType="Notify"
                      name="ArrayTransRowValueFilter"></property>
                    <property
                      dataType="System.Boolean"
                      description="When you have 2D array but don't have column list specified in a separate array then use this option (e.g. { arr: [[10,11],[21,22]] } )."
                      expressionType="Notify"
                      name="ArrayTransEnableCustomColumns">false</property>
                    <property
                      dataType="System.String"
                      description="When you have 2D array but don't have column list specified in a separate array then use specify column names here. Use comma separated list (e.g col1,col2,col3 ). Column name Order must match value order."
                      expressionType="Notify"
                      name="ArrayTransCustomColumns"></property>
                    <property
                      dataType="System.Int32"
                      description="Metadata scan mode controls how data type and length is determined. By default few records scanned to determine datatype/length. Changing ScanMode affects length/datatype accuracy."
                      expressionType="Notify"
                      name="MetaDataScanMode"
                      typeConverter="ZappySys.Common.Data.MetaDataScanMode, ZappySys.Common, Version=1.0.2018.11210, Culture=neutral, PublicKeyToken=1903265a93eae502">4</property>
                    <property
                      dataType="System.Int32"
                      description="Length for all string column. This option is only valid for MetaDataScanMode=Custom"
                      expressionType="Notify"
                      name="MetaDataCustomLength">1000</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">ZappySys.JsonParserTransform</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Foreach property\Get property notes for deletion\Parse notes.Inputs[JsonParserTransformInput]"
                      errorRowDisposition="FailComponent"
                      name="JsonParserTransformInput"
                      truncationRowDisposition="FailComponent">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach property\Get property notes for deletion\Parse notes.Inputs[JsonParserTransformInput].Columns[result.rows]"
                          cachedDataType="nText"
                          cachedName="result.rows"
                          lineageId="Package\Foreach property\Get property notes for deletion\Search property for notes.Outputs[JsonSourceOutput].Columns[result.rows]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True" />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach property\Get property notes for deletion\Parse notes.Outputs[JsonParserTransformOutput]"
                      errorOrTruncationOperation="Error"
                      errorRowDisposition="FailComponent"
                      name="JsonParserTransformOutput"
                      truncationRowDisposition="FailComponent">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach property\Get property notes for deletion\Parse notes.Outputs[JsonParserTransformOutput].Columns[note_id]"
                          dataType="i8"
                          externalMetadataColumnId="Package\Foreach property\Get property notes for deletion\Parse notes.Outputs[JsonParserTransformOutput].ExternalColumns[_id]"
                          lineageId="Package\Foreach property\Get property notes for deletion\Parse notes.Outputs[JsonParserTransformOutput].Columns[note_id]"
                          name="note_id" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach property\Get property notes for deletion\Parse notes.Outputs[JsonParserTransformOutput].ExternalColumns[system_record_state]"
                          dataType="wstr"
                          length="24"
                          name="system_record_state" />
                        <externalMetadataColumn
                          refId="Package\Foreach property\Get property notes for deletion\Parse notes.Outputs[JsonParserTransformOutput].ExternalColumns[system_ctime]"
                          dataType="i8"
                          name="system_ctime" />
                        <externalMetadataColumn
                          refId="Package\Foreach property\Get property notes for deletion\Parse notes.Outputs[JsonParserTransformOutput].ExternalColumns[system_modtime]"
                          dataType="i8"
                          name="system_modtime" />
                        <externalMetadataColumn
                          refId="Package\Foreach property\Get property notes for deletion\Parse notes.Outputs[JsonParserTransformOutput].ExternalColumns[reminder_id]"
                          dataType="wstr"
                          length="1020"
                          name="reminder_id" />
                        <externalMetadataColumn
                          refId="Package\Foreach property\Get property notes for deletion\Parse notes.Outputs[JsonParserTransformOutput].ExternalColumns[_security_user_rights]"
                          dataType="wstr"
                          length="156"
                          name="_security_user_rights" />
                        <externalMetadataColumn
                          refId="Package\Foreach property\Get property notes for deletion\Parse notes.Outputs[JsonParserTransformOutput].ExternalColumns[note]"
                          dataType="wstr"
                          length="2048"
                          name="note" />
                        <externalMetadataColumn
                          refId="Package\Foreach property\Get property notes for deletion\Parse notes.Outputs[JsonParserTransformOutput].ExternalColumns[_related.note_contacts]"
                          dataType="wstr"
                          length="8"
                          name="_related.note_contacts" />
                        <externalMetadataColumn
                          refId="Package\Foreach property\Get property notes for deletion\Parse notes.Outputs[JsonParserTransformOutput].ExternalColumns[_related.note_market_leads]"
                          dataType="wstr"
                          length="8"
                          name="_related.note_market_leads" />
                        <externalMetadataColumn
                          refId="Package\Foreach property\Get property notes for deletion\Parse notes.Outputs[JsonParserTransformOutput].ExternalColumns[_related.note_properties]"
                          dataType="nText"
                          name="_related.note_properties" />
                        <externalMetadataColumn
                          refId="Package\Foreach property\Get property notes for deletion\Parse notes.Outputs[JsonParserTransformOutput].ExternalColumns[_related.note_projects]"
                          dataType="wstr"
                          length="8"
                          name="_related.note_projects" />
                        <externalMetadataColumn
                          refId="Package\Foreach property\Get property notes for deletion\Parse notes.Outputs[JsonParserTransformOutput].ExternalColumns[_related.note_project_stages]"
                          dataType="wstr"
                          length="8"
                          name="_related.note_project_stages" />
                        <externalMetadataColumn
                          refId="Package\Foreach property\Get property notes for deletion\Parse notes.Outputs[JsonParserTransformOutput].ExternalColumns[system_modified_user.id]"
                          dataType="wstr"
                          length="20"
                          name="system_modified_user.id" />
                        <externalMetadataColumn
                          refId="Package\Foreach property\Get property notes for deletion\Parse notes.Outputs[JsonParserTransformOutput].ExternalColumns[system_modified_user._name]"
                          dataType="wstr"
                          length="36"
                          name="system_modified_user._name" />
                        <externalMetadataColumn
                          refId="Package\Foreach property\Get property notes for deletion\Parse notes.Outputs[JsonParserTransformOutput].ExternalColumns[system_modified_user._first_name]"
                          dataType="wstr"
                          length="20"
                          name="system_modified_user._first_name" />
                        <externalMetadataColumn
                          refId="Package\Foreach property\Get property notes for deletion\Parse notes.Outputs[JsonParserTransformOutput].ExternalColumns[system_modified_user._last_name]"
                          dataType="wstr"
                          length="12"
                          name="system_modified_user._last_name" />
                        <externalMetadataColumn
                          refId="Package\Foreach property\Get property notes for deletion\Parse notes.Outputs[JsonParserTransformOutput].ExternalColumns[system_modified_user._email_address]"
                          dataType="wstr"
                          length="92"
                          name="system_modified_user._email_address" />
                        <externalMetadataColumn
                          refId="Package\Foreach property\Get property notes for deletion\Parse notes.Outputs[JsonParserTransformOutput].ExternalColumns[system_created_user.id]"
                          dataType="wstr"
                          length="20"
                          name="system_created_user.id" />
                        <externalMetadataColumn
                          refId="Package\Foreach property\Get property notes for deletion\Parse notes.Outputs[JsonParserTransformOutput].ExternalColumns[system_created_user._name]"
                          dataType="wstr"
                          length="36"
                          name="system_created_user._name" />
                        <externalMetadataColumn
                          refId="Package\Foreach property\Get property notes for deletion\Parse notes.Outputs[JsonParserTransformOutput].ExternalColumns[system_created_user._first_name]"
                          dataType="wstr"
                          length="20"
                          name="system_created_user._first_name" />
                        <externalMetadataColumn
                          refId="Package\Foreach property\Get property notes for deletion\Parse notes.Outputs[JsonParserTransformOutput].ExternalColumns[system_created_user._last_name]"
                          dataType="wstr"
                          length="12"
                          name="system_created_user._last_name" />
                        <externalMetadataColumn
                          refId="Package\Foreach property\Get property notes for deletion\Parse notes.Outputs[JsonParserTransformOutput].ExternalColumns[system_created_user._email_address]"
                          dataType="wstr"
                          length="92"
                          name="system_created_user._email_address" />
                        <externalMetadataColumn
                          refId="Package\Foreach property\Get property notes for deletion\Parse notes.Outputs[JsonParserTransformOutput].ExternalColumns[note_type.id]"
                          dataType="wstr"
                          length="16"
                          name="note_type.id" />
                        <externalMetadataColumn
                          refId="Package\Foreach property\Get property notes for deletion\Parse notes.Outputs[JsonParserTransformOutput].ExternalColumns[note_type.text]"
                          dataType="wstr"
                          length="16"
                          name="note_type.text" />
                        <externalMetadataColumn
                          refId="Package\Foreach property\Get property notes for deletion\Parse notes.Outputs[JsonParserTransformOutput].ExternalColumns[etag]"
                          dataType="wstr"
                          length="72"
                          name="etag" />
                        <externalMetadataColumn
                          refId="Package\Foreach property\Get property notes for deletion\Parse notes.Outputs[JsonParserTransformOutput].ExternalColumns[_id]"
                          dataType="i8"
                          name="_id" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Foreach property\Get property notes for deletion\Parse notes.Outputs[JsonParserTransform Error Output]"
                      isErrorOut="true"
                      name="JsonParserTransform Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach property\Get property notes for deletion\Parse notes.Outputs[JsonParserTransform Error Output].Columns[note_id]"
                          dataType="i8"
                          lineageId="Package\Foreach property\Get property notes for deletion\Parse notes.Outputs[JsonParserTransform Error Output].Columns[note_id]"
                          name="note_id" />
                        <outputColumn
                          refId="Package\Foreach property\Get property notes for deletion\Parse notes.Outputs[JsonParserTransform Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach property\Get property notes for deletion\Parse notes.Outputs[JsonParserTransform Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach property\Get property notes for deletion\Parse notes.Outputs[JsonParserTransform Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach property\Get property notes for deletion\Parse notes.Outputs[JsonParserTransform Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                        <outputColumn
                          refId="Package\Foreach property\Get property notes for deletion\Parse notes.Outputs[JsonParserTransform Error Output].Columns[ErrorColumnName]"
                          codePage="1252"
                          dataType="str"
                          length="128"
                          lineageId="Package\Foreach property\Get property notes for deletion\Parse notes.Outputs[JsonParserTransform Error Output].Columns[ErrorColumnName]"
                          name="ErrorColumnName" />
                        <outputColumn
                          refId="Package\Foreach property\Get property notes for deletion\Parse notes.Outputs[JsonParserTransform Error Output].Columns[ErrorMessage]"
                          dataType="wstr"
                          length="1024"
                          lineageId="Package\Foreach property\Get property notes for deletion\Parse notes.Outputs[JsonParserTransform Error Output].Columns[ErrorMessage]"
                          name="ErrorMessage" />
                        <outputColumn
                          refId="Package\Foreach property\Get property notes for deletion\Parse notes.Outputs[JsonParserTransform Error Output].Columns[ErrorRawData]"
                          dataType="nText"
                          lineageId="Package\Foreach property\Get property notes for deletion\Parse notes.Outputs[JsonParserTransform Error Output].Columns[ErrorRawData]"
                          name="ErrorRawData" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach property\Get property notes for deletion\Search property for notes"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="JSON Source (REST API or File); ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                  description="The JSON source is used to read data from JSON files, RESTful Web Service or direct JSON String."
                  name="Search property for notes"
                  usesDispositions="true"
                  version="29">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                      expressionType="Notify"
                      name="LoggingMode"
                      typeConverter="ZappySys.PowerPack.Common.LoggingMode, ZappySys.PowerPack130, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                    <property
                      dataType="System.Boolean"
                      description="When you enable this property it will prefix timestamp before Log messages."
                      expressionType="Notify"
                      name="PrefixTimestamp">false</property>
                    <property
                      dataType="System.Null"
                      expressionType="Notify"
                      name="SelfRef"
                      typeConverter="NOTBROWSABLE" />
                    <property
                      dataType="System.Boolean"
                      description="Treat empty string as NULL for any numeric data types"
                      expressionType="Notify"
                      name="TreatBlankNumberAsNull">true</property>
                    <property
                      dataType="System.Boolean"
                      description="Treat empty string as NULL for bool data types"
                      expressionType="Notify"
                      name="TreatBlankBoolAsNull">true</property>
                    <property
                      dataType="System.Boolean"
                      description="Treat empty string as NULL for any date/time data types"
                      expressionType="Notify"
                      name="TreatBlankDateAsNull">true</property>
                    <property
                      dataType="System.Int32"
                      description="Defines how to read the JSON file or direct string"
                      expressionType="Notify"
                      name="AccessMode"
                      typeConverter="ZappySys.Common.Ssis.FileValueAccessMode, ZappySys.Common, Version=1.0.2018.11210, Culture=neutral, PublicKeyToken=1903265a93eae502">3</property>
                    <property
                      dataType="System.String"
                      description="Defines how to read the JSON file or direct string"
                      expressionType="Notify"
                      name="DirectValue"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.String"
                      description="Variable name which holds JSON string"
                      expressionType="Notify"
                      name="ValueVariable"
                      typeConverter="ZappySys.PowerPack.Converters.VariableEditor,ZappySys.PowerPack130.UI,Version=1.0.0.0,Culture=neutral,PublicKeyToken=1903265a93eae502">User::RexAPIWebURL</property>
                    <property
                      dataType="System.String"
                      description="Variable name which holds data file path or url"
                      expressionType="Notify"
                      name="PathVariable"
                      typeConverter="ZappySys.PowerPack.Converters.VariableEditor,ZappySys.PowerPack130.UI,Version=1.0.0.0,Culture=neutral,PublicKeyToken=1903265a93eae502">User::RexAPIWebURL</property>
                    <property
                      dataType="System.String"
                      description="JSON file file path (e.g. c:\data\myfile.json) or pattern to process multiple files (e.g. c:\data\*.json)"
                      expressionType="Notify"
                      name="DirectPath"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">https://beta-api.uk.rexsoftware.com/rex.php</property>
                    <property
                      dataType="System.Boolean"
                      description="Include files from sub folders too."
                      expressionType="Notify"
                      name="Recursive">false</property>
                    <property
                      dataType="System.String"
                      description="Set this if you want to set custom Http headers. You may use variable anywhere in the header value using syntax {{User::YourVarName}}. Syntax of Header key value pair is : &amp;lt;request&amp;gt;&amp;lt;header&amp;gt;&amp;lt;name&amp;gt;x-myheader-1&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;AAA&amp;lt;/value&amp;gt;&amp;lt;/header&amp;gt; &amp;lt;header&amp;gt;&amp;lt;name&amp;gt;x-myheader-2&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;BBB&amp;lt;/value&amp;gt;&amp;lt;/header&amp;gt;&amp;lt;/request&amp;gt;"
                      expressionType="Notify"
                      name="HttpHeaders">&lt;request&gt;&lt;header&gt;&lt;name&gt;Accept&lt;/name&gt;&lt;value&gt;*/*&lt;/value&gt;&lt;/header&gt;&lt;header&gt;&lt;name&gt;Cache-Control&lt;/name&gt;&lt;value&gt;no-cache&lt;/value&gt;&lt;/header&gt;&lt;/request&gt;</property>
                    <property
                      dataType="System.String"
                      description="User defined data you wish to send along with your HTTP Request (e.g. Upload file data, Form POST data). Usually you have to set content-type of your data but if you select RequestMethod=POST then system will automatically set content-type=application/x-www-form-urlencoded."
                      expressionType="Notify"
                      name="HttpRequestData">{{User::JSON_SearchNotes}}</property>
                    <property
                      dataType="System.String"
                      description="Http Web Request Method (e.g. POST, GET, PUT, LIST, DELETE...). Refer your API documentation if you are not sure which method you have to use."
                      expressionType="Notify"
                      name="HttpRequestMethod">POST</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies content type for data you wish to POST. If you select Default option then system default content type will be used (i.e. application/x-www-form-urlencoded). If you specify Content-Type header along with this option then header value takes precedence."
                      expressionType="Notify"
                      name="HttpRequestContentType"
                      typeConverter="ZappySys.Common.Web.HttpRequestContentType, ZappySys.Common, Version=1.0.2018.11210, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                    <property
                      dataType="System.Int32"
                      description="Data format coming from HTTP Response. This is useful for example when you have OData service and you want to automatically consume all pages of data using odata.netUrl. Setting JsonFormat=Odata will automatically do it for you. This setting is only applicable if JSON is coming from HTTP WebRequest."
                      expressionType="Notify"
                      name="JsonFormat"
                      typeConverter="ZappySys.Json.JsonFormat, ZappySys.Json, Version=1.0.2018.11210, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                    <property
                      dataType="System.Boolean"
                      description="Enable custom proxy settings (If this is not set then system default proxy will be used. To disable proxy totally uncheck this option and check DoNotUseDefaultProxy option if available)"
                      expressionType="Notify"
                      name="UseProxy">false</property>
                    <property
                      dataType="System.String"
                      description="Web URL of Proxy server (including port  if necessary). [e.g. http://myproxyserver:8080/]"
                      expressionType="Notify"
                      name="ProxyUrl"></property>
                    <property
                      dataType="System.Boolean"
                      description="Enable passing userid and password to proxy server"
                      expressionType="Notify"
                      name="UseProxyCreds">false</property>
                    <property
                      dataType="System.String"
                      description="Proxy username"
                      expressionType="Notify"
                      name="ProxyUserName"></property>
                    <property
                      dataType="System.String"
                      description="Proxy password"
                      expressionType="Notify"
                      name="ProxyPassword"></property>
                    <property
                      dataType="System.String"
                      description="If Service response support pagination using some sort of next url attribute then specify which attribute name in JSON Response string which holds next url. If no attribute found or its null then component will stop fetching next resultset. Example: $.pagingInfo.nextUrl"
                      expressionType="Notify"
                      name="NextUrlAttribute"></property>
                    <property
                      dataType="System.String"
                      description="If Service response support pagination using some sort of prev/next url attribute then specify which previous link attribute name from JSON Response string which holds previous url."
                      expressionType="Notify"
                      name="PrevUrlAttribute"></property>
                    <property
                      dataType="System.String"
                      description="Specifies value for NextUrlAttribute or StopIndicatorAttribute which indicates last page to stop pagination. If you have specified StopIndicatorAttribute then you can use Regular expression rather than static value to indicate last page. To use regular expression value of this property must start with regex= prefix. Example : regex=FALSE|N  (assuming you set StopIndicatorAttribute to something like $.hasMore)"
                      expressionType="Notify"
                      name="NextUrlStopIndicator"></property>
                    <property
                      dataType="System.String"
                      description="Attribute name or expression for attribute which can be used as stop indicator (e.g. hasmore --or-- $.pagination.hasmore). If this value is blank then NextUrlAttribute is used"
                      expressionType="Notify"
                      name="StopIndicatorAttribute"></property>
                    <property
                      dataType="System.String"
                      description="If you want to include certain text (or parameters) at the end of Next url then specify this attribute (e.g. &amp;format=json). Another common usecase of this property is to supply pagination token to next Page URL. You can also use &lt;%nextlink%&gt; or  &lt;%nextlink_encoded%&gt; placeholder (e.g. &amp;cursor=&lt;%nextlink_encoded%&gt; )"
                      expressionType="Notify"
                      name="NextUrlSuffix"></property>
                    <property
                      dataType="System.Int32"
                      description="This property indicates total number of milliseconds you want to wait before sending next request. This option allows you to adjust how many API calls can be made within certain timeframe. If your API Service has no limit then set this option to zero"
                      expressionType="Notify"
                      name="NextUrlWait">0</property>
                    <property
                      dataType="System.Boolean"
                      description="If this option is true then component will continue without exception on 404 error (Url not found). This allows you to consume data gracefully."
                      expressionType="Notify"
                      name="ContinueOnUrlNotFoundError">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Continue when any type of exception occurs during http request"
                      expressionType="Notify"
                      name="ContineOnAnyError">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Continue on error when specified substring found in response"
                      expressionType="Notify"
                      name="ContineOnErrorForMessage">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Continue on error when specified status code returned from web server"
                      expressionType="Notify"
                      name="ContineOnErrorForStatusCode">false</property>
                    <property
                      dataType="System.Boolean"
                      description="When error occurs no data is returned. Use this option to get content eventhough error occurs. When this option is checked you can't use [continue on error when specific string found in response] option"
                      expressionType="Notify"
                      name="ConsumeResponseOnError">false</property>
                    <property
                      dataType="System.Int32"
                      description="Status code to match when error occurs and ContineOnErrorForStatusCode option is true. If Response status code matches to this code then task continues to run"
                      expressionType="Notify"
                      name="ErrorStatusCodeToMatch">404</property>
                    <property
                      dataType="System.String"
                      description="Error substring to match when error occurs and ContineOnErrorForMessage option is true. If Response status code matches to this code then task continues to run"
                      expressionType="Notify"
                      name="ErrorSubstringToMatch"></property>
                    <property
                      dataType="System.String"
                      description="Cookie Container can be used to maintain state between multiple web requests. Example: You can login to site like wordpress and then extract any private page content by simply passing authentication cookies using this variable."
                      expressionType="Notify"
                      name="CookieContainerVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Http request Timeout in seconds. Set this to 0 if you want to use system default value (i.e. 100 seconds)"
                      expressionType="Notify"
                      name="RequestTimeout">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies which security protocol is supported for HTTPS communication. Using this option you can enable legacy protocol or enforce to use latest version of security protocol (Note: TLS 1.2 is only supported in SSIS 2014 or Higher)."
                      expressionType="Notify"
                      name="SecurityProtocol"
                      typeConverter="ZappySys.PowerPack.Common.HttpsSecurityProtocolType, ZappySys.PowerPack130, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                    <property
                      dataType="System.Boolean"
                      description="Enable support for gzip or deflate compression. When you check this option compressed response automatically de-compressed saving bandwidth. This option is only valid if web server supports compressed response stream. Check your API documentation for more information."
                      expressionType="Notify"
                      name="EnableCompressionSupport">true</property>
                    <property
                      dataType="System.Boolean"
                      description="Ignore SSL certificate related errors. Example: if you getting SSL/TLS errors because of certificate expired or certificate is not from trusted authority or certificate is self-signed. By checking this option you will not get SSL/TLS error."
                      expressionType="Notify"
                      name="IgnoreCertificateErrors">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Allow unsecure ciphers/suites and curves for SSLS/TLS communication. Use this option to communicate with web servers which needs legacy / unsecured ciphers support. This option is only trigged when you change default SSL/TLS Version on advanced settings tab."
                      expressionType="Notify"
                      name="AllowUnsecureSuite">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Use connection to pass credentials for authentication (e.g. Use UserID/Password or Use OAuth Protocol for token based approach)"
                      expressionType="Notify"
                      name="UseConnection">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specified how you want to loop through multiple pages returned by REST API."
                      expressionType="Notify"
                      name="PagingMode"
                      typeConverter="ZappySys.Common.RestApiPagingMode, ZappySys.Common, Version=1.0.2018.11210, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                    <property
                      dataType="System.Boolean"
                      description="If you wish to pass extracted pagination token or current page number in the body of next request then set this option to true. You can use [$pagetoken$] and [$pagetoken$] placeholders anywhere in the Body where you wish to insert extracted Page token. You must set encoded token you can use &lt;%nextlink_encoded%&gt; inside SuffixForNextUrl Property. If you dont use SuffixForNextUrl then raw nextLink or Token will be inserted inside the body. If you dont specify [$pagetoken$] placeholder in the body then NextPage Token will be appended at the end. NextPage Token is extracted by filter expression specified using property NextUrlSuffix"
                      expressionType="Notify"
                      name="EnablePageTokenForBody">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Set this to true if you wish to specify different URL, Header, Body or Filter for first page and next page (i.e. Paginated response). Some APIs like Amazon MWS, NetSuite, Zuora) you may need to set this to true."
                      expressionType="Notify"
                      name="HasDifferentNextPageInfo">false</property>
                    <property
                      dataType="System.String"
                      description="When HasDifferentNextPageInfo=true you can set this property to indicate first page and next page. You can specify different URL, Header, Body or Filter for first page and next page (i.e. Paginated response). Use [$tag$] as placeholder anywhere in the URL, Header, Body or Filter and at runtime system will replace it with correct value (first page or next page value). Syntax to specify placeholder for first page vs next page is like a connectionstring url=FirstPageValue|NextPageValue;header=FirstPageValue|NextPageValue;body=FirstPageValue|NextPageValue;filter=FirstPageValue|NextPageValue; You can use one or more key/value pairs to make things dynamic (e.g. url, header, body or filter)  .For example if you have pagination in your API and First URL is http://abc.com/api/items/get and to get more records you have to call http://abc.com/api/items/getNext then you can use [$tag$] as placeholder in the URL http://abc.com/api/items/[$tag$] and specify this property with first page tag and next page tag as url=get|getNext  (Tags are separated using vertical bar). "
                      expressionType="Notify"
                      name="PagePlaceholders"></property>
                    <property
                      dataType="System.String"
                      description="Use this property to set request body fragment for first page. HasDifferentNextPageInfo must be set to true to use this property."
                      expressionType="Notify"
                      name="FirstPageBodyPart"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.String"
                      description="Use this property to set request body fragment for any request after first request. HasDifferentNextPageInfo must be set to true to use this property."
                      expressionType="Notify"
                      name="NextPageBodyPart"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.String"
                      description="Expression to extract Maximum pages to loop through. Some APIs don't stop pagination and keep returning last page data when you try to read data after last page. Specify expression (e.g. $.page_count ) to read total pages to loop through using this property."
                      expressionType="Notify"
                      name="PagingMaxPagesExpr"></property>
                    <property
                      dataType="System.String"
                      description="e.g. Type page_num if URL looks like this =&gt; http://abc.com/?page_num=1&amp;sort=true  (page number via query string)&#xA;--or-- Type &lt;%page%&gt; if page number is inside URL path like this =&gt; http://abc.com/1/?sort=true  (e.g. replace page number in url with placeholder http://abc.com/&lt;%page%&gt;/?sort=true)&#xA;Page number will be incremented by one for next URL until last page is reached or [Max Page Number] is reached"
                      expressionType="Notify"
                      name="PageNumberAttributeNameInUrl"></property>
                    <property
                      dataType="System.Int32"
                      description="Maximum page number until which auto increment is allowed. Type zero for no limit. Next URL contains next page number (increment by one) until last page is detected or [Max Page Number] limit is reached."
                      expressionType="Notify"
                      name="MaxPageNumber">0</property>
                    <property
                      dataType="System.String"
                      description="Variable name which will hold starting page number. This is ignored if you useing parameter name from query string to indicate page number."
                      expressionType="Notify"
                      name="StartPageNumberVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Page counter increment. By default next page is incremented by one if this value is zero. You can also enter negative number if you want to decrease page counter."
                      expressionType="Notify"
                      name="PageNumberIncrement">1</property>
                    <property
                      dataType="System.Int32"
                      description="Specified how you want detect last page."
                      expressionType="Notify"
                      name="PagingEndStrategy"
                      typeConverter="ZappySys.Common.UrlPagingEndDetectionStrategy, ZappySys.Common, Version=1.0.2018.11210, Culture=neutral, PublicKeyToken=1903265a93eae502">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Condition result to compare to detect last page. Set this property to True if you want detect last page if condition is true else set this to False."
                      expressionType="Notify"
                      name="LastPageWhenConditionEqualsTo">true</property>
                    <property
                      dataType="System.Int32"
                      description="Minimum bytes expected from response."
                      expressionType="Notify"
                      name="ResponseMinBytes">0</property>
                    <property
                      dataType="System.Int32"
                      description="Maximum bytes from response."
                      expressionType="Notify"
                      name="ResponseMaxBytes">3</property>
                    <property
                      dataType="System.String"
                      description="Expected error message sub string from response."
                      expressionType="Notify"
                      name="ResponseErrorString">not found</property>
                    <property
                      dataType="System.Int32"
                      description="Expected status code from response when page number you trying to access not found."
                      expressionType="Notify"
                      name="ResponseStatusCode">404</property>
                    <property
                      dataType="System.Int32"
                      description="Maximum JSON records to fetch. Set this value to 0 for all records"
                      expressionType="Notify"
                      name="MaxRows">0</property>
                    <property
                      dataType="System.String"
                      description="Enter expression here to filter data.(Example:  $.Users[*].UserName ) This will fetch User names from users records"
                      expressionType="Notify"
                      name="Filter"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.Boolean"
                      description="Use this option to include parent properties (Non array) in the output along with Filtered Rows"
                      expressionType="Notify"
                      name="IncludeParentColumns">true</property>
                    <property
                      dataType="System.Boolean"
                      description="By default child and parent information is not included in the output if children not found for specified expression. For example if you want to extract all orders from all customers nodes then you can type $.Customers[*].Orders[*]. This will fetch all orders from all customers. By default customers records without orders wont be included in the output. If you want to include those customers where orders not found then check this option (Output null information for order attributes). This behavior is similar to LEFT OUTER JOIN in SQL (Left side is parent, right side is child). This option is ***resource intensive*** so only check if you really care about this behavior."
                      expressionType="Notify"
                      name="IncludeParentColumnsWhenChildMissing">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Set this option to true if you want to output parent columns which are array. By default any parent column which is an array is not included in output. See also FilterForParentColumnsWithArrayType property if you set this property"
                      expressionType="Notify"
                      name="IncludeParentColumnsWithArrayType">false</property>
                    <property
                      dataType="System.String"
                      description="Filter expression to extract value form parent"
                      expressionType="Notify"
                      name="FilterForParentColumnsWithArrayType"></property>
                    <property
                      dataType="System.String"
                      description="Prefix for parent column name. This option is only valid if you have set IncludeParentColumns=True"
                      expressionType="Notify"
                      name="ParentColumnPrefix">P_</property>
                    <property
                      dataType="System.Boolean"
                      description="Throw error if property name specified in filter expression is missing. By default it will ignore any missing property errors."
                      expressionType="Notify"
                      name="ThrowErrorIfPropertyMissing">false</property>
                    <property
                      dataType="System.Int32"
                      description="This property how many nested levels should be scanned to fetch various properties. 0=Scan all child levels."
                      expressionType="Notify"
                      name="MaxLevelsToScan">0</property>
                    <property
                      dataType="System.String"
                      description="List comma separated property names from JSON document which you want to exclude from output. Specify parent property name to exclude all child nodes."
                      expressionType="Notify"
                      name="ExcludedProperties"></property>
                    <property
                      dataType="System.String"
                      description="Property level separator used in generated property name (separator for outer properties - Above selected filter node). Use this if default separator is producing duplicate property name which is conflicting with existing name."
                      expressionType="Notify"
                      name="LevelSeparator">_</property>
                    <property
                      dataType="System.Boolean"
                      description="Enables deep array flattening for selected filtered hierarchy. When you turn on this property it will flatten each property of each array item and expose as column (e.g. If you have Filter set as $.customers[*] and for each customer you have an array of Addresses then you may see output columns like Addresses.1.City, Addresses.1.State, Addresses.2.City, Addresses.2.State .... Addresses.N.City, Addresses.N.State). You can control how many array items you want to flatten by setting MaxArrayItemsToFlatten property."
                      expressionType="Notify"
                      name="EnableArrayFlattening">false</property>
                    <property
                      dataType="System.Int32"
                      description="Maximum number of array items to flatten. inner array flattening. Adjust this property to control how many columns being generated. This option is ignored if you set EnableArrayFlattening=false"
                      expressionType="Notify"
                      name="MaxArrayItemsToFlatten">10</property>
                    <property
                      dataType="System.Int32"
                      description="Compression format for source file (e.g. gzip, zip)"
                      expressionType="Notify"
                      name="FileCompressionType"
                      typeConverter="ZappySys.Common.FileCompressionType, ZappySys.Common, Version=1.0.2018.11210, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                    <property
                      dataType="System.Int32"
                      description="Array Transformation you want to apply. Useful for case when you have 2-Dimensional arrays with rows/columns in separate arrays."
                      expressionType="Notify"
                      name="ArrayTransformationType"
                      typeConverter="ZappySys.Json.ArrayTransformType, ZappySys.Json, Version=1.0.2018.11210, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                    <property
                      dataType="System.String"
                      description="Filter expression to use to extract column names for array transformation."
                      expressionType="Notify"
                      name="ArrayTransColumnNameFilter"></property>
                    <property
                      dataType="System.String"
                      description="Filter expression for row values (Not applicable for simple array transformation)."
                      expressionType="Notify"
                      name="ArrayTransRowValueFilter"></property>
                    <property
                      dataType="System.Boolean"
                      description="When you have 2D array but don't have column list specified in a separate array then use this option (e.g. { arr: [[10,11],[21,22]] } )."
                      expressionType="Notify"
                      name="ArrayTransEnableCustomColumns">false</property>
                    <property
                      dataType="System.String"
                      description="When you have 2D array but don't have column list specified in a separate array then use specify column names here. Use comma separated list (e.g col1,col2,col3 ). Column name Order must match value order."
                      expressionType="Notify"
                      name="ArrayTransCustomColumns"></property>
                    <property
                      dataType="System.String"
                      description="Specifies how custom date formatted strings are parsed when reading JSON."
                      expressionType="Notify"
                      name="DateFormatString"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies how date formatted strings, e.g. Date(1198908717056) and 2012-03-21T05:40Z, are parsed when reading JSON."
                      expressionType="Notify"
                      name="DateParseHandling"
                      typeConverter="ZappySys.Common.DateParseHandling, ZappySys.Common, Version=1.0.2018.11210, Culture=neutral, PublicKeyToken=1903265a93eae502">1</property>
                    <property
                      dataType="System.Boolean"
                      description="Output as raw JSON document rather than parsing individual fields. This option is helpful if you have documents stored in a file and you want to pass them downstream as raw JSON string rather than parsing into columns."
                      expressionType="Notify"
                      name="OutputRawDocument">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indent JSON output so its easy to read."
                      expressionType="Notify"
                      name="IndentOutput">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Set this option to true if you want to output FilePath. This option is ignored when you consume DirectValue or data from Url rather than local files. Output column name will be __FilePath"
                      expressionType="Notify"
                      name="OutputFilePath">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Set this option to true if you want to output FileName. This option is ignored when you consume DirectValue or data from Url rather than local files. Output column name will be __FileName"
                      expressionType="Notify"
                      name="OutputFileName">true</property>
                    <property
                      dataType="System.Boolean"
                      description="Set this option to true if you want to move processed file to archive folder."
                      expressionType="Notify"
                      name="EnableArchiveFile">false</property>
                    <property
                      dataType="System.String"
                      description="Folder path where you want to move processed file."
                      expressionType="Notify"
                      name="ArchiveFolderPath"></property>
                    <property
                      dataType="System.Boolean"
                      description="Folder path where you want to move processed file."
                      expressionType="Notify"
                      name="OverwriteFileInArchiveFolder">false</property>
                    <property
                      dataType="System.String"
                      description="File naming convention for archived file. By default it will same name as original source file processed. But you can control naming format using {%name%} and {%ext%} placeholders. e.g. {%name%}_processed{%ext%} or {%name%}{%ext%}.{{System::ContainerStartTime,yyyyMMdd_HHmmss_fff}}"
                      expressionType="Notify"
                      name="ArchiveFileNamingConvention"></property>
                    <property
                      dataType="System.Boolean"
                      description="When this property is true then Column is converted to Row. Pivoted names will appear under  Pivot_Name column and values will appear under Pivot_Value field."
                      expressionType="Notify"
                      name="EnablePivot">false</property>
                    <property
                      dataType="System.Int32"
                      description="Metadata scan mode controls how data type and length is determined. By default few records scanned to determine datatype/length. Changing ScanMode affects length/datatype accuracy."
                      expressionType="Notify"
                      name="MetaDataScanMode"
                      typeConverter="ZappySys.Common.Data.MetaDataScanMode, ZappySys.Common, Version=1.0.2018.11210, Culture=neutral, PublicKeyToken=1903265a93eae502">4</property>
                    <property
                      dataType="System.Int32"
                      description="Length for all string column. This option is only valid for MetaDataScanMode=Custom"
                      expressionType="Notify"
                      name="MetaDataCustomLength">1000</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">ZappySys.JsonSource</property>
                  </properties>
                  <outputs>
                    <output
                      refId="Package\Foreach property\Get property notes for deletion\Search property for notes.Outputs[JsonSourceOutput]"
                      errorOrTruncationOperation="Error"
                      errorRowDisposition="FailComponent"
                      name="JsonSourceOutput"
                      truncationRowDisposition="FailComponent">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach property\Get property notes for deletion\Search property for notes.Outputs[JsonSourceOutput].Columns[result.rows]"
                          dataType="nText"
                          externalMetadataColumnId="Package\Foreach property\Get property notes for deletion\Search property for notes.Outputs[JsonSourceOutput].ExternalColumns[result.rows]"
                          lineageId="Package\Foreach property\Get property notes for deletion\Search property for notes.Outputs[JsonSourceOutput].Columns[result.rows]"
                          name="result.rows">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="This flag indicates column is locked so it doesn't refresh datatype automatically or column is manually added by user rather than auto detect"
                              expressionType="Notify"
                              name="ManuallyAdded">true</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach property\Get property notes for deletion\Search property for notes.Outputs[JsonSourceOutput].Columns[error]"
                          dataType="wstr"
                          externalMetadataColumnId="Package\Foreach property\Get property notes for deletion\Search property for notes.Outputs[JsonSourceOutput].ExternalColumns[error]"
                          length="4000"
                          lineageId="Package\Foreach property\Get property notes for deletion\Search property for notes.Outputs[JsonSourceOutput].Columns[error]"
                          name="error">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="This flag indicates column is locked so it doesn't refresh datatype automatically or column is manually added by user rather than auto detect"
                              expressionType="Notify"
                              name="ManuallyAdded">true</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach property\Get property notes for deletion\Search property for notes.Outputs[JsonSourceOutput].ExternalColumns[result.rows]"
                          dataType="nText"
                          name="result.rows" />
                        <externalMetadataColumn
                          refId="Package\Foreach property\Get property notes for deletion\Search property for notes.Outputs[JsonSourceOutput].ExternalColumns[result.total]"
                          dataType="i8"
                          name="result.total" />
                        <externalMetadataColumn
                          refId="Package\Foreach property\Get property notes for deletion\Search property for notes.Outputs[JsonSourceOutput].ExternalColumns[result.viewstate_id]"
                          dataType="wstr"
                          length="1020"
                          name="result.viewstate_id" />
                        <externalMetadataColumn
                          refId="Package\Foreach property\Get property notes for deletion\Search property for notes.Outputs[JsonSourceOutput].ExternalColumns[result.criteria]"
                          dataType="wstr"
                          length="1320"
                          name="result.criteria" />
                        <externalMetadataColumn
                          refId="Package\Foreach property\Get property notes for deletion\Search property for notes.Outputs[JsonSourceOutput].ExternalColumns[result.order_by]"
                          dataType="wstr"
                          length="8"
                          name="result.order_by" />
                        <externalMetadataColumn
                          refId="Package\Foreach property\Get property notes for deletion\Search property for notes.Outputs[JsonSourceOutput].ExternalColumns[error]"
                          dataType="wstr"
                          length="1020"
                          name="error" />
                        <externalMetadataColumn
                          refId="Package\Foreach property\Get property notes for deletion\Search property for notes.Outputs[JsonSourceOutput].ExternalColumns[__FileName]"
                          dataType="wstr"
                          length="600"
                          name="__FileName" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Foreach property\Get property notes for deletion\Search property for notes.Outputs[JsonSource Error Output]"
                      isErrorOut="true"
                      name="JsonSource Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach property\Get property notes for deletion\Search property for notes.Outputs[JsonSource Error Output].Columns[result.rows]"
                          dataType="nText"
                          lineageId="Package\Foreach property\Get property notes for deletion\Search property for notes.Outputs[JsonSource Error Output].Columns[result.rows]"
                          name="result.rows" />
                        <outputColumn
                          refId="Package\Foreach property\Get property notes for deletion\Search property for notes.Outputs[JsonSource Error Output].Columns[error]"
                          dataType="wstr"
                          length="4000"
                          lineageId="Package\Foreach property\Get property notes for deletion\Search property for notes.Outputs[JsonSource Error Output].Columns[error]"
                          name="error" />
                        <outputColumn
                          refId="Package\Foreach property\Get property notes for deletion\Search property for notes.Outputs[JsonSource Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach property\Get property notes for deletion\Search property for notes.Outputs[JsonSource Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach property\Get property notes for deletion\Search property for notes.Outputs[JsonSource Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach property\Get property notes for deletion\Search property for notes.Outputs[JsonSource Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                        <outputColumn
                          refId="Package\Foreach property\Get property notes for deletion\Search property for notes.Outputs[JsonSource Error Output].Columns[ErrorColumnName]"
                          codePage="1252"
                          dataType="str"
                          length="128"
                          lineageId="Package\Foreach property\Get property notes for deletion\Search property for notes.Outputs[JsonSource Error Output].Columns[ErrorColumnName]"
                          name="ErrorColumnName" />
                        <outputColumn
                          refId="Package\Foreach property\Get property notes for deletion\Search property for notes.Outputs[JsonSource Error Output].Columns[ErrorMessage]"
                          dataType="wstr"
                          length="1024"
                          lineageId="Package\Foreach property\Get property notes for deletion\Search property for notes.Outputs[JsonSource Error Output].Columns[ErrorMessage]"
                          name="ErrorMessage" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach property\Get property notes for deletion\Set object"
                  componentClassID="Microsoft.RecordsetDestination"
                  contactInfo="Recordset Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates and populates an in-memory ADO recordset that is available outside of the data flow. Scripts and other package elements can use the recordset. For example, use a recordset to store the names of files that will be loaded into the data warehouse."
                  name="Set object">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the recordset."
                      name="VariableName">User::Object_NotesToDelete</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Foreach property\Get property notes for deletion\Set object.Inputs[Recordset Destination Input]"
                      hasSideEffects="true"
                      name="Recordset Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach property\Get property notes for deletion\Set object.Inputs[Recordset Destination Input].Columns[note_id]"
                          cachedDataType="i8"
                          cachedName="note_id"
                          lineageId="Package\Foreach property\Get property notes for deletion\Parse notes.Outputs[JsonParserTransformOutput].Columns[note_id]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                </component>
                <component
                  refId="Package\Foreach property\Get property notes for deletion\Set variable"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Set Variable Transform; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                  description="Set Variable with multiple operations such as Set, Increment, Replace, Append"
                  name="Set variable"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                      expressionType="Notify"
                      name="LoggingMode"
                      typeConverter="ZappySys.PowerPack.Common.LoggingMode, ZappySys.PowerPack130, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                    <property
                      dataType="System.Boolean"
                      description="When you enable this property it will prefix timestamp before Log messages."
                      expressionType="Notify"
                      name="PrefixTimestamp">false</property>
                    <property
                      dataType="System.Null"
                      expressionType="Notify"
                      name="SelfRef"
                      typeConverter="NOTBROWSABLE" />
                    <property
                      dataType="System.Int32"
                      description="Action you like to perform. If you set any action with ReplacePlaceholder then you must use placeholder &lt;%value%&gt; where you like to insert upstream value. Use variable placeholder (e.g. {{User::MyVar}} ) if you wish to replace value from variable. Example for placeholder use: { tags : [&lt;%value%&gt;] , Package: &quot;{{System::PackageName}}&quot; }"
                      expressionType="Notify"
                      name="VariableSetMode"
                      typeConverter="ZappySys.PowerPack.Common.VariableSetMode, ZappySys.PowerPack130, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                    <property
                      dataType="System.String"
                      description="Name of variable you want to set (e.g. User::vMyData)"
                      expressionType="Notify"
                      name="VariableToSet"
                      typeConverter="ZappySys.PowerPack.Converters.VariableEditor,ZappySys.PowerPack130.UI,Version=1.0.0.0,Culture=neutral,PublicKeyToken=1903265a93eae502">User::APIError_SearchNotes</property>
                    <property
                      dataType="System.Int32"
                      description="Number to add in previous variable value (This number can be -ve or +ve)"
                      expressionType="Notify"
                      name="IncrementBy">1</property>
                    <property
                      dataType="System.String"
                      description="Separator to use for Append mode (not valid for other mode). You can use \r\n for new line, \t for tab, \n for unix style new line."
                      expressionType="Notify"
                      name="RowSeparator">\r\n</property>
                    <property
                      dataType="System.String"
                      description="Separator to use for last row (Only valid of ."
                      expressionType="Notify"
                      name="LastRowSeparator"></property>
                    <property
                      dataType="System.String"
                      description="Header string to use for Append mode."
                      expressionType="Notify"
                      name="Header"></property>
                    <property
                      dataType="System.String"
                      description="Footer string to use for Append mode."
                      expressionType="Notify"
                      name="Footer"></property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">ZappySys.SetVariableTransform</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Foreach property\Get property notes for deletion\Set variable.Inputs[SetVariableTransformInput]"
                      name="SetVariableTransformInput">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach property\Get property notes for deletion\Set variable.Inputs[SetVariableTransformInput].Columns[error.message]"
                          cachedDataType="wstr"
                          cachedLength="4000"
                          cachedName="error.message"
                          lineageId="Package\Foreach property\Get property notes for deletion\Parse error.Outputs[JsonParserTransformOutput].Columns[error.message]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach property\Get property notes for deletion\Set variable.Outputs[SetVariableTransformOutput]"
                      errorOrTruncationOperation="Error"
                      name="SetVariableTransformOutput"
                      synchronousInputId="Package\Foreach property\Get property notes for deletion\Set variable.Inputs[SetVariableTransformInput]">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach property\Get property notes for deletion\Trash Destination"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Trash Destination; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                  description="The trash destination is used to create dummy destination which ends data path without any processing."
                  name="Trash Destination"
                  version="2">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                      expressionType="Notify"
                      name="LoggingMode"
                      typeConverter="ZappySys.PowerPack.Common.LoggingMode, ZappySys.PowerPack130, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                    <property
                      dataType="System.Boolean"
                      description="When you enable this property it will prefix timestamp before Log messages."
                      expressionType="Notify"
                      name="PrefixTimestamp">false</property>
                    <property
                      dataType="System.Null"
                      expressionType="Notify"
                      name="SelfRef"
                      typeConverter="NOTBROWSABLE" />
                    <property
                      dataType="System.String"
                      description="File path where you want to save data"
                      expressionType="Notify"
                      name="FilePath"></property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates if you want to save input data to comma separated text file"
                      expressionType="Notify"
                      name="SaveDataToFile">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Append data to file"
                      expressionType="Notify"
                      name="Append">false</property>
                    <property
                      dataType="System.String"
                      description="RowSeparator"
                      expressionType="Notify"
                      name="RowSeparator">{NEWLINE}</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether you want to overwrite target file if exists"
                      expressionType="Notify"
                      name="OverwriteFileIfExists">true</property>
                    <property
                      dataType="System.String"
                      description="ColumnSeparator"
                      expressionType="Notify"
                      name="ColumnSeparator">,</property>
                    <property
                      dataType="System.Boolean"
                      description="SupportUnicode"
                      expressionType="Notify"
                      name="SupportUnicode">true</property>
                    <property
                      dataType="System.Boolean"
                      description="ColumnNamesInFirstRow"
                      expressionType="Notify"
                      name="ColumnNamesInFirstRow">true</property>
                    <property
                      dataType="System.Boolean"
                      description="QuoteDataIfNeeded"
                      expressionType="Notify"
                      name="QuoteDataIfNeeded">true</property>
                    <property
                      dataType="System.String"
                      description="Date time format string for any column with DT_DBDATETIME, DT_DBDATETIME2 or DB_DATE format"
                      expressionType="Notify"
                      name="DateTimeFormat">yyyy-MM-dd HH:mm:ss</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">ZappySys.TrashDestination</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Foreach property\Get property notes for deletion\Trash Destination.Inputs[TrashDestinationInput]"
                      hasSideEffects="true"
                      name="TrashDestinationInput">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Foreach property\Get property notes for deletion.Paths[Error]"
                  endId="Package\Foreach property\Get property notes for deletion\Parse error.Inputs[JsonParserTransformInput]"
                  name="Error"
                  startId="Package\Foreach property\Get property notes for deletion\Error?.Outputs[Error]" />
                <path
                  refId="Package\Foreach property\Get property notes for deletion.Paths[JsonParserTransformOutput]"
                  endId="Package\Foreach property\Get property notes for deletion\Set object.Inputs[Recordset Destination Input]"
                  name="JsonParserTransformOutput"
                  startId="Package\Foreach property\Get property notes for deletion\Parse notes.Outputs[JsonParserTransformOutput]" />
                <path
                  refId="Package\Foreach property\Get property notes for deletion.Paths[JsonParserTransformOutput1]"
                  endId="Package\Foreach property\Get property notes for deletion\Set variable.Inputs[SetVariableTransformInput]"
                  name="JsonParserTransformOutput"
                  startId="Package\Foreach property\Get property notes for deletion\Parse error.Outputs[JsonParserTransformOutput]" />
                <path
                  refId="Package\Foreach property\Get property notes for deletion.Paths[JsonSourceOutput]"
                  endId="Package\Foreach property\Get property notes for deletion\Error?.Inputs[Conditional Split Input]"
                  name="JsonSourceOutput"
                  startId="Package\Foreach property\Get property notes for deletion\Search property for notes.Outputs[JsonSourceOutput]" />
                <path
                  refId="Package\Foreach property\Get property notes for deletion.Paths[No error]"
                  endId="Package\Foreach property\Get property notes for deletion\Parse notes.Inputs[JsonParserTransformInput]"
                  name="No error"
                  startId="Package\Foreach property\Get property notes for deletion\Error?.Outputs[No error]" />
                <path
                  refId="Package\Foreach property\Get property notes for deletion.Paths[SetVariableTransformOutput]"
                  endId="Package\Foreach property\Get property notes for deletion\Trash Destination.Inputs[TrashDestinationInput]"
                  name="SetVariableTransformOutput"
                  startId="Package\Foreach property\Get property notes for deletion\Set variable.Outputs[SetVariableTransformOutput]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach property\Insert API error"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{fb74b0ec-070d-4edb-a4a7-a7c324f0cd9d}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Insert API error"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="4">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{1ACC4D99-A047-44CB-AAAD-088F42F69A23}"
              SQLTask:SqlStatementSource="INSERT INTO SSISErrorLog&#xA;(PackageName, StartTime, ErrorCode, AccountID, ErrorDescription)&#xA;VALUES&#xA;(?, ?, 0, ?, 'Error searching property notes. Request body: ' + ? + '. API Response: ' + ?)" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@PackageName"
                SQLTask:DtsVariableName="System::PackageName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@StartTime"
                SQLTask:DtsVariableName="System::StartTime"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="7"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@AccountID"
                SQLTask:DtsVariableName="$Package::RexAccountID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@RequestBody"
                SQLTask:DtsVariableName="User::JSON_SearchNotes"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@APIError"
                SQLTask:DtsVariableName="User::APIError_SearchNotes"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach property\Mark as complete"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{8B6BA873-2FAF-4A94-B6FF-6EF3E09A6036}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Mark as complete"
          DTS:ThreadHint="5">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{78432CA1-1FEA-4ED4-9C0F-D552A4A9DE0E}"
              SQLTask:SqlStatementSource="UPDATE tbl_RosiePropNotesWorkTable&#xA;SET ProcessedDate = GETDATE(),&#xA;&#x9;Status = 'P'&#xA;WHERE ID = ?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@WorkTableID"
                SQLTask:DtsVariableName="User::WorkTableID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach property\Replace notes search JSON"
          DTS:CreationName="Microsoft.ExpressionTask"
          DTS:Description="Expression Task"
          DTS:DTSID="{88E29CD2-F150-45B6-80BD-5E10BB949CBF}"
          DTS:ExecutableType="Microsoft.ExpressionTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Replace notes search JSON"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ExpressionTask
              Expression="@[User::JSON_SearchNotes] = REPLACE(@[User::JSON_SearchNotes], &quot;{{TOKEN}}&quot;, @[User::APIToken])" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach property\Reset API error"
          DTS:CreationName="Microsoft.ExpressionTask"
          DTS:Description="Expression Task"
          DTS:DTSID="{372d53fc-3f4c-44a8-a407-7aa01538a455}"
          DTS:ExecutableType="Microsoft.ExpressionTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Reset API error"
          DTS:ThreadHint="4">
          <DTS:Variables />
          <DTS:ObjectData>
            <ExpressionTask
              Expression="@[User::APIError_SearchNotes] = &quot;&quot;" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach property\Reset delete count"
          DTS:CreationName="Microsoft.ExpressionTask"
          DTS:Description="Expression Task"
          DTS:DTSID="{9630ECE3-C857-4A65-87B2-7DD2B8ADD306}"
          DTS:ExecutableType="Microsoft.ExpressionTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Reset delete count"
          DTS:ThreadHint="2">
          <DTS:Variables />
          <DTS:ObjectData>
            <ExpressionTask
              Expression="@[User::DeleteSuccessCount] = 0" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach property\Reset delete fail count"
          DTS:CreationName="Microsoft.ExpressionTask"
          DTS:Description="Expression Task"
          DTS:DTSID="{6AC0CB84-E524-4DB8-B718-E15123A077A3}"
          DTS:ExecutableType="Microsoft.ExpressionTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Reset delete fail count"
          DTS:ThreadHint="3">
          <DTS:Variables />
          <DTS:ObjectData>
            <ExpressionTask
              Expression="@[User::DeleteFailCount] = 0" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach property\Reset deletion failed"
          DTS:CreationName="Microsoft.ExpressionTask"
          DTS:Description="Expression Task"
          DTS:DTSID="{10A1A770-8063-40E6-99B3-69CD28112B33}"
          DTS:ExecutableType="Microsoft.ExpressionTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Reset deletion failed"
          DTS:ThreadHint="4">
          <DTS:Variables />
          <DTS:ObjectData>
            <ExpressionTask
              Expression="@[User::DeleteFailCount] = 0" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach property\Reset deletion success"
          DTS:CreationName="Microsoft.ExpressionTask"
          DTS:Description="Expression Task"
          DTS:DTSID="{60419F39-16EB-405A-BD62-72818755CE19}"
          DTS:ExecutableType="Microsoft.ExpressionTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Reset deletion success"
          DTS:ThreadHint="5">
          <DTS:Variables />
          <DTS:ObjectData>
            <ExpressionTask
              Expression="@[User::DeleteSuccessCount] = 0" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach property\Reset insert count"
          DTS:CreationName="Microsoft.ExpressionTask"
          DTS:Description="Expression Task"
          DTS:DTSID="{D3BA1647-72BD-4484-918C-15493544ED46}"
          DTS:ExecutableType="Microsoft.ExpressionTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Reset insert count"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ExpressionTask
              Expression="@[User::InsertSuccessCount] = 0" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach property\Reset insert fail count"
          DTS:CreationName="Microsoft.ExpressionTask"
          DTS:Description="Expression Task"
          DTS:DTSID="{5D5FC259-7570-4018-B8A8-7C6EFA42E17E}"
          DTS:ExecutableType="Microsoft.ExpressionTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Reset insert fail count"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:ObjectData>
            <ExpressionTask
              Expression="@[User::InsertFailCount] = 0" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach property\Reset insert failed"
          DTS:CreationName="Microsoft.ExpressionTask"
          DTS:Description="Expression Task"
          DTS:DTSID="{F5B6102A-7DD3-4870-A103-439D84257D29}"
          DTS:ExecutableType="Microsoft.ExpressionTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Reset insert failed"
          DTS:ThreadHint="6">
          <DTS:Variables />
          <DTS:ObjectData>
            <ExpressionTask
              Expression="@[User::InsertFailCount] = 0" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach property\Reset insert success"
          DTS:CreationName="Microsoft.ExpressionTask"
          DTS:Description="Expression Task"
          DTS:DTSID="{D01E0557-C636-4753-9028-ACD2FB862D6B}"
          DTS:ExecutableType="Microsoft.ExpressionTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Reset insert success"
          DTS:ThreadHint="7">
          <DTS:Variables />
          <DTS:ObjectData>
            <ExpressionTask
              Expression="@[User::InsertSuccessCount] = 0" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach property\Set start time"
          DTS:CreationName="Microsoft.ExpressionTask"
          DTS:Description="Expression Task"
          DTS:DTSID="{8c02c98b-1fc5-44cf-8383-5d2be77e93fe}"
          DTS:ExecutableType="Microsoft.ExpressionTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Set start time"
          DTS:ThreadHint="4">
          <DTS:Variables />
          <DTS:ObjectData>
            <ExpressionTask
              Expression="@[User::PropertyStartTime] = GETDATE()" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach property.PrecedenceConstraints[API error]"
          DTS:CreationName=""
          DTS:DTSID="{7A4DB95A-B369-4577-AED8-997D6F6E1DAA}"
          DTS:EvalOp="4"
          DTS:Expression="@[User::APIError_SearchNotes] != &quot;&quot;"
          DTS:From="Package\Foreach property\Get property notes for deletion"
          DTS:LogicalAnd="True"
          DTS:ObjectName="API error"
          DTS:To="Package\Foreach property\Insert API error"
          DTS:Value="1" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach property.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{044A2139-3FF6-418F-990B-AACE0C2A4D22}"
          DTS:From="Package\Foreach property\Get property notes"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Foreach property\Foreach property note" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach property.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{B6AD2D86-39F8-4D03-BB9B-B8FCD3D40027}"
          DTS:From="Package\Foreach property\Foreach property note"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Foreach property\Mark as complete" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach property.PrecedenceConstraints[Constraint 10]"
          DTS:CreationName=""
          DTS:DTSID="{B296AB2E-BBEB-4C54-AD56-F550FEE4B1C5}"
          DTS:From="Package\Foreach property\Reset delete count"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 10"
          DTS:To="Package\Foreach property\Replace notes search JSON" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach property.PrecedenceConstraints[Constraint 11]"
          DTS:CreationName=""
          DTS:DTSID="{CEBE7278-71E3-42CA-A352-EEC489CC77E5}"
          DTS:From="Package\Foreach property\Reset delete fail count"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 11"
          DTS:To="Package\Foreach property\Replace notes search JSON" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach property.PrecedenceConstraints[Constraint 12]"
          DTS:CreationName=""
          DTS:DTSID="{DF3F3D59-FBA0-43B5-B503-C17BE1E0F155}"
          DTS:From="Package\Foreach property\Reset insert count"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 12"
          DTS:To="Package\Foreach property\Replace notes search JSON" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach property.PrecedenceConstraints[Constraint 13]"
          DTS:CreationName=""
          DTS:DTSID="{5253C991-E5F6-4C19-9A99-6B37E6B13FC4}"
          DTS:From="Package\Foreach property\Reset insert fail count"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 13"
          DTS:To="Package\Foreach property\Replace notes search JSON" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach property.PrecedenceConstraints[Constraint 2]"
          DTS:CreationName=""
          DTS:DTSID="{AD37FBC3-22E4-4298-9E41-75A8C10D241A}"
          DTS:From="Package\Foreach property\Insert API error"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 2"
          DTS:To="Package\Foreach property\Reset API error"
          DTS:Value="2" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach property.PrecedenceConstraints[Constraint 3]"
          DTS:CreationName=""
          DTS:DTSID="{9726D265-DF88-40A1-BCAA-721F19571F08}"
          DTS:From="Package\Foreach property\Foreach property note for deletion"
          DTS:ObjectName="Constraint 3"
          DTS:To="Package\Foreach property\Get property notes" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach property.PrecedenceConstraints[Constraint 4]"
          DTS:CreationName=""
          DTS:DTSID="{BC6016A4-A33F-43D1-ACD8-68851D3E92D8}"
          DTS:From="Package\Foreach property\Foreach property note"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 4"
          DTS:To="Package\Foreach property\Add log"
          DTS:Value="2" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach property.PrecedenceConstraints[Constraint 5]"
          DTS:CreationName=""
          DTS:DTSID="{5E73879F-A109-4CDA-BE73-C0E78FBF78E2}"
          DTS:From="Package\Foreach property\Add log"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 5"
          DTS:To="Package\Foreach property\Reset deletion failed"
          DTS:Value="2" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach property.PrecedenceConstraints[Constraint 6]"
          DTS:CreationName=""
          DTS:DTSID="{BF08C164-2AC7-4EB1-94C5-ACC9C0CEDEAF}"
          DTS:From="Package\Foreach property\Add log"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 6"
          DTS:To="Package\Foreach property\Reset insert failed"
          DTS:Value="2" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach property.PrecedenceConstraints[Constraint 7]"
          DTS:CreationName=""
          DTS:DTSID="{FC21A088-A70C-4143-9EA3-5F7095C6873B}"
          DTS:From="Package\Foreach property\Add log"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 7"
          DTS:To="Package\Foreach property\Reset insert success"
          DTS:Value="2" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach property.PrecedenceConstraints[Constraint 8]"
          DTS:CreationName=""
          DTS:DTSID="{F447E2E0-63BB-4E73-BCA2-75D6BDF4AA90}"
          DTS:From="Package\Foreach property\Add log"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 8"
          DTS:To="Package\Foreach property\Reset deletion success"
          DTS:Value="2" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach property.PrecedenceConstraints[Constraint 9]"
          DTS:CreationName=""
          DTS:DTSID="{DFA3EBDB-E41A-418A-8D07-2DE18202488C}"
          DTS:From="Package\Foreach property\Set start time"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 9"
          DTS:To="Package\Foreach property\Replace notes search JSON" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach property.PrecedenceConstraints[Delete notes]"
          DTS:CreationName=""
          DTS:DTSID="{D66AE07B-CE25-4B1B-B345-1F75291E7901}"
          DTS:EvalOp="3"
          DTS:Expression="@[User::DeleteNotes]"
          DTS:From="Package\Foreach property\Replace notes search JSON"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Delete notes"
          DTS:To="Package\Foreach property\Get property notes for deletion" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach property.PrecedenceConstraints[Don't delete notes]"
          DTS:CreationName=""
          DTS:DTSID="{E9A8A8F7-61A4-4B1E-9F8F-134D88B6096C}"
          DTS:EvalOp="3"
          DTS:Expression="!@[User::DeleteNotes]"
          DTS:From="Package\Foreach property\Replace notes search JSON"
          DTS:ObjectName="Don't delete notes"
          DTS:To="Package\Foreach property\Get property notes" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach property.PrecedenceConstraints[No API error]"
          DTS:CreationName=""
          DTS:DTSID="{64A6943A-22C5-46C3-9160-30053E1EFC10}"
          DTS:EvalOp="3"
          DTS:Expression="@[User::APIError_SearchNotes] == &quot;&quot;"
          DTS:From="Package\Foreach property\Get property notes for deletion"
          DTS:LogicalAnd="True"
          DTS:ObjectName="No API error"
          DTS:To="Package\Foreach property\Foreach property note for deletion" />
      </DTS:PrecedenceConstraints>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{E94B8F48-F0AB-4BE2-BBAF-839F70762C6D}"
          DTS:ObjectName="{E94B8F48-F0AB-4BE2-BBAF-839F70762C6D}"
          DTS:ValueIndex="0"
          DTS:VariableName="User::WorkTableID" />
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{93A3D454-3C91-44E9-8FF0-03C06845B925}"
          DTS:ObjectName="{93A3D454-3C91-44E9-8FF0-03C06845B925}"
          DTS:ValueIndex="1"
          DTS:VariableName="User::IDBSPropertyRef" />
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{2F27F654-95FE-498D-A2EF-B5155200D18C}"
          DTS:ObjectName="{2F27F654-95FE-498D-A2EF-B5155200D18C}"
          DTS:ValueIndex="2"
          DTS:VariableName="User::DeleteNotes" />
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{A3F774A0-622A-47A7-B833-2648D610719D}"
          DTS:ObjectName="{A3F774A0-622A-47A7-B833-2648D610719D}"
          DTS:ValueIndex="3"
          DTS:VariableName="User::RexPropertyID" />
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{996B6EB1-5B7B-496F-A59D-F5EE8999F332}"
          DTS:ObjectName="{996B6EB1-5B7B-496F-A59D-F5EE8999F332}"
          DTS:ValueIndex="4"
          DTS:VariableName="User::JSON_SearchNotes" />
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{61DDFD51-33C3-4A93-BD0C-5D62BCD62C9C}"
          DTS:ObjectName="{61DDFD51-33C3-4A93-BD0C-5D62BCD62C9C}"
          DTS:ValueIndex="5"
          DTS:VariableName="User::JSON_TrashNoteReadOnly" />
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{E410B800-AC3B-4753-A0DE-98E90C1AFE5A}"
          DTS:ObjectName="{E410B800-AC3B-4753-A0DE-98E90C1AFE5A}"
          DTS:ValueIndex="6"
          DTS:VariableName="User::JSON_ReadNoteReadOnly" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Get auth key"
      DTS:CreationName="ZappySys.RestApiTask"
      DTS:Description="ZS REST API Task"
      DTS:DTSID="{bed29584-cd2a-4d48-b7f5-65d47bf0fd3e}"
      DTS:ExecutableType="ZappySys.RestApiTask"
      DTS:FailPackageOnFailure="True"
      DTS:LocaleID="-1"
      DTS:ObjectName="Get auth key"
      DTS:TaskContact="REST API Task; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <RestApiTask
          RequestAccessMode="UrlFromConnection"
          RequestUrlVariable="User::RexAPIWebURL"
          EnableStatusCheck="False"
          StatucCheckMaxWaitSeconds="0"
          StatucCheckIterationWaitSeconds="0"
          StatusCheckForFailedValue="False"
          StatusSuccessValue=""
          StatusFailedValue=""
          IsMultiPartUpload="False"
          PreventAutoRedirect="False"
          RequestTimeoutMs="0"
          SecurityProtocol="Default"
          EnableCompressionSupport="True"
          AllowUnsecureSuite="False"
          IgnoreCertificateErrors="False"
          RequestUrl="{{User::RexAPIWebURL}}"
          RequestUrlConnection="HTTP"
          RequestMethod="POST"
          RequestContentType="ApplicationJson"
          OverrideConnectionUrl="True"
          RequestHeaders="&lt;request&gt;&lt;header&gt;&lt;name&gt;Accept&lt;/name&gt;&lt;value&gt;*/*&lt;/value&gt;&lt;/header&gt;&lt;header&gt;&lt;name&gt;Cache-Control&lt;/name&gt;&lt;value&gt;no-cache&lt;/value&gt;&lt;/header&gt;&lt;/request&gt;"
          RequestData="{&#xA; &quot;method&quot;:&quot;Authentication::login&quot;,&#xA; &quot;args&quot;:&#xA; {&#xA;  &quot;email&quot;:&quot;{{User::APIUser}}&quot;,&#xA;  &quot;password&quot;:&quot;{{User::APIPassword}}&quot;,&#xA;  &quot;application&quot;:&quot;rex&quot;,&#xA;  &quot;account_id&quot;:{{$Package::RexAccountID}}&#xA; }&#xA;}"
          SaveResponse="True"
          SaveResponseStatusCode="False"
          ResponseAccessMode="Variable"
          SaveAsBinary="False"
          ResponseDataFilePath=""
          ResponseHeaderMappings="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-16&quot;?&gt;&lt;ArrayOfKeyValueMapping xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot;&gt;&lt;KeyValueMapping&gt;&lt;Key&gt;Transfer-Encoding&lt;/Key&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;/KeyValueMapping&gt;&lt;KeyValueMapping&gt;&lt;Key&gt;Connection&lt;/Key&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;/KeyValueMapping&gt;&lt;KeyValueMapping&gt;&lt;Key&gt;Access-Control-Allow-Origin&lt;/Key&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;/KeyValueMapping&gt;&lt;KeyValueMapping&gt;&lt;Key&gt;Access-Control-Allow-Headers&lt;/Key&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;/KeyValueMapping&gt;&lt;KeyValueMapping&gt;&lt;Key&gt;Access-Control-Allow-Methods&lt;/Key&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;/KeyValueMapping&gt;&lt;KeyValueMapping&gt;&lt;Key&gt;Access-Control-Max-Age&lt;/Key&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;/KeyValueMapping&gt;&lt;KeyValueMapping&gt;&lt;Key&gt;Vary&lt;/Key&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;/KeyValueMapping&gt;&lt;KeyValueMapping&gt;&lt;Key&gt;Content-Encoding&lt;/Key&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;/KeyValueMapping&gt;&lt;KeyValueMapping&gt;&lt;Key&gt;Content-Type&lt;/Key&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;/KeyValueMapping&gt;&lt;KeyValueMapping&gt;&lt;Key&gt;Date&lt;/Key&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;/KeyValueMapping&gt;&lt;KeyValueMapping&gt;&lt;Key&gt;Server&lt;/Key&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;/KeyValueMapping&gt;&lt;/ArrayOfKeyValueMapping&gt;"
          ResponseCookieMappings="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-16&quot;?&gt;&lt;ArrayOfKeyValueMapping xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; /&gt;"
          CookieContainerVariable=""
          ConvertXmlToJson="False"
          ResponseDataVariable="User::APIToken"
          ResponseStatusCodeVariable=""
          ResponseContentType="Json"
          ResponseContentFilter="$.result"
          ResponseCharset=""
          ValidateResponse="False"
          ValidationRules="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-16&quot;?&gt;&lt;ResponseValidationSetting xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot;&gt;&lt;MatchAny&gt;false&lt;/MatchAny&gt;&lt;Rules&gt;&lt;ResponseValidationRule xsi:type=&quot;StatusCodeValidationRule&quot;&gt;&lt;Enabled&gt;false&lt;/Enabled&gt;&lt;Operator&gt;Eq&lt;/Operator&gt;&lt;StatusCode&gt;200&lt;/StatusCode&gt;&lt;/ResponseValidationRule&gt;&lt;ResponseValidationRule xsi:type=&quot;ContentValidationRule&quot;&gt;&lt;Enabled&gt;false&lt;/Enabled&gt;&lt;Operator&gt;Eq&lt;/Operator&gt;&lt;Value /&gt;&lt;/ResponseValidationRule&gt;&lt;ResponseValidationRule xsi:type=&quot;HeaderValidationRule&quot;&gt;&lt;Enabled&gt;false&lt;/Enabled&gt;&lt;Operator&gt;Eq&lt;/Operator&gt;&lt;KeyName /&gt;&lt;Value /&gt;&lt;DataType&gt;String&lt;/DataType&gt;&lt;/ResponseValidationRule&gt;&lt;/Rules&gt;&lt;/ResponseValidationSetting&gt;"
          ConsumeResponseOnError="False"
          ContineOnAnyError="False"
          ContineOnErrorForMessage="False"
          ContineOnErrorForStatusCode="False"
          ErrorStatusCodeToMatch="404"
          MatchForEqual="True"
          ErrorSubstringToMatch=""
          ContineOn404Error="False"
          SaveErrorFlagToVariable="False"
          ErrorFlagVariableName=""
          LogLevel="Debugging"
          PrefixTimestamp="False" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Get property queue"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{3AF62AA4-D10F-4171-AFED-83F03059F878}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Get property queue"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{78432CA1-1FEA-4ED4-9C0F-D552A4A9DE0E}"
          SQLTask:SqlStatementSource="EXEC ROSIE_getPropertiesForNotes ?"
          SQLTask:ResultType="ResultSetType_Rowset" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ResultBinding
            SQLTask:ResultName="0"
            SQLTask:DtsVariableName="User::Object_Properties" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="@office_id"
            SQLTask:DtsVariableName="$Package::IDBSOfficeID"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="129"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Set Variables"
      DTS:CreationName="ZappySys.XmlParserTask"
      DTS:Description="ZS Xml Parser Task"
      DTS:DTSID="{e834663b-7c33-4386-bcff-865ce4da7288}"
      DTS:ExecutableType="ZappySys.XmlParserTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Set Variables"
      DTS:TaskContact="Xml Parser Task; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <XmlParserTask
          SourceAccessMode="Connection"
          SourceVariable=""
          SourceConnection="{E4D8D135-0B17-4DAD-963C-2DB5324A7648}"
          SourceDirectValue="&lt;!-- &#xA;Using XML Parser Task you can extract values from XML document using XPath Expression &#xA;See example in below grid. Read description for each mapping.&#xA;See more examples: https://msdn.microsoft.com/en-us/library/ms256086(v=vs.110).aspx&#xA;--&gt;&#xA;&lt;catalog&gt;&#xA;   &lt;book id=&quot;bk101&quot;&gt;&#xA;      &lt;author&gt;Gambardella, Matthew&lt;/author&gt;&#xA;      &lt;title&gt;XML Developer's Guide&lt;/title&gt;&#xA;      &lt;genre&gt;Computer&lt;/genre&gt;&#xA;      &lt;price&gt;44.95&lt;/price&gt;&#xA;      &lt;publish_date&gt;2000-10-01&lt;/publish_date&gt;&#xA;      &lt;description&gt;An in-depth look at creating applications &#xA;      with XML.&lt;/description&gt;&#xA;   &lt;/book&gt;&#xA;   &lt;book id=&quot;bk102&quot;&gt;&#xA;      &lt;author&gt;Ralls, Kim&lt;/author&gt;&#xA;      &lt;title&gt;Midnight Rain&lt;/title&gt;&#xA;      &lt;genre&gt;Fantasy&lt;/genre&gt;&#xA;      &lt;price&gt;5.95&lt;/price&gt;&#xA;      &lt;publish_date&gt;2000-12-16&lt;/publish_date&gt;&#xA;      &lt;description&gt;A former architect battles corporate zombies, &#xA;      an evil sorceress, and her own childhood to become queen &#xA;      of the world.&lt;/description&gt;&#xA;   &lt;/book&gt;&#xA;   &lt;book id=&quot;bk103&quot;&gt;&#xA;      &lt;author&gt;Corets, Eva&lt;/author&gt;&#xA;      &lt;title&gt;Maeve Ascendant&lt;/title&gt;&#xA;      &lt;genre&gt;Fantasy&lt;/genre&gt;&#xA;      &lt;price&gt;5.95&lt;/price&gt;&#xA;      &lt;publish_date&gt;2000-11-17&lt;/publish_date&gt;&#xA;      &lt;description&gt;After the collapse of a nanotechnology &#xA;      society in England, the young survivors lay the &#xA;      foundation for a new society.&lt;/description&gt;&#xA;   &lt;/book&gt;&#xA;   &lt;book id=&quot;bk104&quot;&gt;&#xA;      &lt;author&gt;Corets, Eva&lt;/author&gt;&#xA;      &lt;title&gt;Oberon's Legacy&lt;/title&gt;&#xA;      &lt;genre&gt;Fantasy&lt;/genre&gt;&#xA;      &lt;price&gt;5.95&lt;/price&gt;&#xA;      &lt;publish_date&gt;2001-03-10&lt;/publish_date&gt;&#xA;      &lt;description&gt;In post-apocalypse England, the mysterious &#xA;      agent known only as Oberon helps to create a new life &#xA;      for the inhabitants of London. Sequel to Maeve &#xA;      Ascendant.&lt;/description&gt;&#xA;   &lt;/book&gt;&#xA;&lt;/catalog&gt;"
          TargetSettings="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-16&quot;?&gt;&lt;XmlParserSetting xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot;&gt;&lt;Mappings&gt;&lt;XmlParserMapping&gt;&lt;Path&gt;/SSISVariables/RexAPIWebURL&lt;/Path&gt;&lt;Target&gt;User::RexAPIWebURL&lt;/Target&gt;&lt;Required&gt;true&lt;/Required&gt;&lt;Description /&gt;&lt;/XmlParserMapping&gt;&lt;XmlParserMapping&gt;&lt;Path&gt;/SSISVariables/PackageUser&lt;/Path&gt;&lt;Target&gt;User::APIUser&lt;/Target&gt;&lt;Required&gt;true&lt;/Required&gt;&lt;Description /&gt;&lt;/XmlParserMapping&gt;&lt;XmlParserMapping&gt;&lt;Path&gt;/SSISVariables/PackagePassword&lt;/Path&gt;&lt;Target&gt;User::APIPassword&lt;/Target&gt;&lt;Required&gt;true&lt;/Required&gt;&lt;Description /&gt;&lt;/XmlParserMapping&gt;&lt;XmlParserMapping&gt;&lt;Path&gt;/SSISVariables/PackageErrorEmail&lt;/Path&gt;&lt;Target&gt;User::ErrorEmail&lt;/Target&gt;&lt;Required&gt;true&lt;/Required&gt;&lt;Description /&gt;&lt;/XmlParserMapping&gt;&lt;/Mappings&gt;&lt;Path /&gt;&lt;/XmlParserSetting&gt;"
          LogLevel="Normal"
          PrefixTimestamp="False" />
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{11AFADE3-D0AA-4012-AB55-BCD4F8543681}"
      DTS:From="Package\Set Variables"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Get auth key" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{0FB4CA96-7BDE-4D0C-B23A-2D6A65B043F8}"
      DTS:From="Package\Get property queue"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Foreach property" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Token aquired]"
      DTS:CreationName=""
      DTS:DTSID="{B718EA6A-E41E-4C0D-A313-8A72B51A591A}"
      DTS:EvalOp="3"
      DTS:Expression="@[User::APIToken] != &quot;&quot;"
      DTS:From="Package\Get auth key"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Token aquired"
      DTS:To="Package\Get property queue" />
  </DTS:PrecedenceConstraints>
  <DTS:EventHandlers>
    <DTS:EventHandler
      DTS:refId="Package.EventHandlers[OnError]"
      DTS:CreationName="OnError"
      DTS:DTSID="{F40BE8E3-862E-485D-8788-521D3EA49DE9}"
      DTS:EventID="0"
      DTS:EventName="OnError"
      DTS:LocaleID="-1">
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="The propagate property of the event"
          DTS:DTSID="{090CCE0D-A507-4608-8227-006748C92429}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="System"
          DTS:ObjectName="Propagate">
          <DTS:VariableValue
            DTS:DataType="11">-1</DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnError]\Insert error log into database"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{995d37cb-8e54-4a3f-9907-a7dba0050b9f}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Insert error log into database"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{1ACC4D99-A047-44CB-AAAD-088F42F69A23}"
              SQLTask:SqlStatementSource="INSERT INTO SSISErrorLog&#xA;(PackageName, StartTime, ErrorCode, ErrorDescription, AccountID)&#xA;VALUES&#xA;(?, ?, ?, ?, NULL)" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@PackageName"
                SQLTask:DtsVariableName="System::PackageName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@StartTime"
                SQLTask:DtsVariableName="System::StartTime"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="7"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@ErrorCode"
                SQLTask:DtsVariableName="System::ErrorCode"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@ErrorDescription"
                SQLTask:DtsVariableName="System::ErrorDescription"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:EventHandler>
  </DTS:EventHandlers>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="128" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph" xmlns:mssge="clr-namespace:Microsoft.SqlServer.Graph.Extended;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
        <NodeLayout
          Size="115,42"
          Id="Package\Foreach property\Add log"
          TopLeft="1147.5,916.5" />
        <NodeLayout
          Size="153,42"
          Id="Package\Foreach property\Foreach property note\Insert API error"
          TopLeft="232.5,311.5" />
        <NodeLayout
          Size="131,42"
          Id="Package\Foreach property\Foreach property note\Insert note"
          TopLeft="462.5,107.5" />
        <NodeLayout
          Size="185,42"
          Id="Package\Foreach property\Foreach property note\Parse insert note error"
          TopLeft="435.5,209.5" />
        <NodeLayout
          Size="207,42"
          Id="Package\Foreach property\Foreach property note\Replace import notes JSON"
          TopLeft="424.5,5.49999999999989" />
        <NodeLayout
          Size="151,42"
          Id="Package\Foreach property\Foreach property note\Reset API error"
          TopLeft="5.50000000000006,413.5" />
        <NodeLayout
          Size="183,42"
          Id="Package\Foreach property\Foreach property note\Reset API error object"
          TopLeft="217.5,413.5" />
        <NodeLayout
          Size="141,42"
          Id="Package\Foreach property\Foreach property note\Set fail count"
          TopLeft="461.5,413.5" />
        <NodeLayout
          Size="163,42"
          Id="Package\Foreach property\Foreach property note\Set success count"
          TopLeft="446.5,311.5" />
        <EdgeLayout
          Id="Package\Foreach property\Foreach property note.PrecedenceConstraints[Constraint]"
          TopLeft="528,47.4999999999999">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,60.0000000000001"
              Start="0,0"
              End="0,52.5000000000001">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5000000000001" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach property\Foreach property note.PrecedenceConstraints[Constraint 1]"
          TopLeft="528,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach property\Foreach property note.PrecedenceConstraints[Constraint 2]"
          TopLeft="272.75,353.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-191.75,60"
              Start="0,0"
              End="-191.75,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.6852248394004" />
                  <mssgle:CubicBezierSegment
                    Point1="0,16.6852248394004"
                    Point2="0,20.6852248394004"
                    Point3="-4,20.6852248394004" />
                  <mssgle:LineSegment
                    End="-187.75,20.6852248394004" />
                  <mssgle:CubicBezierSegment
                    Point1="-187.75,20.6852248394004"
                    Point2="-191.75,20.6852248394004"
                    Point3="-191.75,24.6852248394004" />
                  <mssgle:LineSegment
                    End="-191.75,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-121.179453125,25.6852248394004,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach property\Foreach property note.PrecedenceConstraints[Constraint 3]"
          TopLeft="309,353.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-25.304453125,20.4453125,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach property\Foreach property note.PrecedenceConstraints[Constraint 4]"
          TopLeft="345.25,353.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="186.75,60"
              Start="0,0"
              End="186.75,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.6852248394004" />
                  <mssgle:CubicBezierSegment
                    Point1="0,16.6852248394004"
                    Point2="0,20.6852248394004"
                    Point3="4,20.6852248394004" />
                  <mssgle:LineSegment
                    End="182.75,20.6852248394004" />
                  <mssgle:CubicBezierSegment
                    Point1="182.75,20.6852248394004"
                    Point2="186.75,20.6852248394004"
                    Point3="186.75,24.6852248394004" />
                  <mssgle:LineSegment
                    End="186.75,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="68.070546875,25.6852248394004,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach property\Foreach property note.PrecedenceConstraints[Constraint 5]"
          TopLeft="557.5,251.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-29.5,60"
              Start="0,0"
              End="-29.5,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.3086816720257" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.3086816720257"
                    Point2="0,24.3086816720257"
                    Point3="-4,24.3086816720257" />
                  <mssgle:LineSegment
                    End="-25.5,24.3086816720257" />
                  <mssgle:CubicBezierSegment
                    Point1="-25.5,24.3086816720257"
                    Point2="-29.5,24.3086816720257"
                    Point3="-29.5,28.3086816720257" />
                  <mssgle:LineSegment
                    End="-29.5,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-22.75,29.3086816720257,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach property\Foreach property note.PrecedenceConstraints[Error]"
          TopLeft="498.5,251.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-189.5,60"
              Start="0,0"
              End="-189.5,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.3086816720257" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.3086816720257"
                    Point2="0,24.3086816720257"
                    Point3="-4,24.3086816720257" />
                  <mssgle:LineSegment
                    End="-185.5,24.3086816720257" />
                  <mssgle:CubicBezierSegment
                    Point1="-185.5,24.3086816720257"
                    Point2="-189.5,24.3086816720257"
                    Point3="-189.5,28.3086816720257" />
                  <mssgle:LineSegment
                    End="-189.5,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-115.14734375,29.3086816720257,40.7946875,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="637,511"
          Size="637,554"
          Id="Package\Foreach property\Foreach property note"
          TopLeft="885.5,312.5" />
        <NodeLayout
          Size="153,42"
          Id="Package\Foreach property\Foreach property note for deletion\Insert API error"
          TopLeft="404.5,414.5" />
        <NodeLayout
          Size="134,42"
          Id="Package\Foreach property\Foreach property note for deletion\Parse result"
          TopLeft="245,5" />
        <NodeLayout
          Size="182,42"
          Id="Package\Foreach property\Foreach property note for deletion\Parse trash note error"
          TopLeft="609,312.5" />
        <NodeLayout
          Size="127,42"
          Id="Package\Foreach property\Foreach property note for deletion\Read note"
          TopLeft="54,105" />
        <NodeLayout
          Size="193,42"
          Id="Package\Foreach property\Foreach property note for deletion\Replace read note JSON"
          TopLeft="17.5,6.5" />
        <NodeLayout
          Size="195,42"
          Id="Package\Foreach property\Foreach property note for deletion\Replace trash note JSON"
          TopLeft="602,108.5" />
        <NodeLayout
          Size="151,42"
          Id="Package\Foreach property\Foreach property note for deletion\Reset API error"
          TopLeft="177.5,516.5" />
        <NodeLayout
          Size="183,42"
          Id="Package\Foreach property\Foreach property note for deletion\Reset API error object"
          TopLeft="389.5,516.5" />
        <NodeLayout
          Size="126,42"
          Id="Package\Foreach property\Foreach property note for deletion\Save note"
          TopLeft="635,6" />
        <NodeLayout
          Size="141,42"
          Id="Package\Foreach property\Foreach property note for deletion\Set fail count"
          TopLeft="633.5,516.5" />
        <NodeLayout
          Size="163,42"
          Id="Package\Foreach property\Foreach property note for deletion\Set success count"
          TopLeft="618.5,414.5" />
        <NodeLayout
          Size="130,42"
          Id="Package\Foreach property\Foreach property note for deletion\Trash note"
          TopLeft="635,210.5" />
        <EdgeLayout
          Id="Package\Foreach property\Foreach property note for deletion.PrecedenceConstraints[Constraint]"
          TopLeft="699.75,150.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach property\Foreach property note for deletion.PrecedenceConstraints[Constraint 1]"
          TopLeft="700,252.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach property\Foreach property note for deletion.PrecedenceConstraints[Constraint 2]"
          TopLeft="444.75,456.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-191.75,60"
              Start="0,0"
              End="-191.75,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.6852248394005" />
                  <mssgle:CubicBezierSegment
                    Point1="0,16.6852248394005"
                    Point2="0,20.6852248394005"
                    Point3="-4,20.6852248394005" />
                  <mssgle:LineSegment
                    End="-187.75,20.6852248394005" />
                  <mssgle:CubicBezierSegment
                    Point1="-187.75,20.6852248394005"
                    Point2="-191.75,20.6852248394005"
                    Point3="-191.75,24.6852248394005" />
                  <mssgle:LineSegment
                    End="-191.75,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-121.179453125,25.6852248394005,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach property\Foreach property note for deletion.PrecedenceConstraints[Constraint 3]"
          TopLeft="481,456.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-25.304453125,20.4453125,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach property\Foreach property note for deletion.PrecedenceConstraints[Constraint 4]"
          TopLeft="517.25,456.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="186.75,60"
              Start="0,0"
              End="186.75,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.6852248394005" />
                  <mssgle:CubicBezierSegment
                    Point1="0,16.6852248394005"
                    Point2="0,20.6852248394005"
                    Point3="4,20.6852248394005" />
                  <mssgle:LineSegment
                    End="182.75,20.6852248394005" />
                  <mssgle:CubicBezierSegment
                    Point1="182.75,20.6852248394005"
                    Point2="186.75,20.6852248394005"
                    Point3="186.75,24.6852248394005" />
                  <mssgle:LineSegment
                    End="186.75,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="68.070546875,25.6852248394005,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach property\Foreach property note for deletion.PrecedenceConstraints[Constraint 5]"
          TopLeft="114,48.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-16.3333333333333,56.5"
              Start="0,0"
              End="-16.3333333333333,49">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,29.4782270606532" />
                  <mssgle:CubicBezierSegment
                    Point1="0,29.4782270606532"
                    Point2="0,33.4782270606532"
                    Point3="-4,33.4782270606532" />
                  <mssgle:LineSegment
                    End="-12.3333333333333,33.4782270606532" />
                  <mssgle:CubicBezierSegment
                    Point1="-12.3333333333333,33.4782270606532"
                    Point2="-16.3333333333333,33.4782270606532"
                    Point3="-16.3333333333333,37.4782270606532" />
                  <mssgle:LineSegment
                    End="-16.3333333333333,49" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach property\Foreach property note for deletion.PrecedenceConstraints[Constraint 6]"
          TopLeft="137.333333333333,105">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="174.666666666667,-58"
              Start="0,0"
              End="174.666666666667,-50.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-19.6329704510109" />
                  <mssgle:CubicBezierSegment
                    Point1="0,-19.6329704510109"
                    Point2="0,-23.6329704510109"
                    Point3="4,-23.6329704510109" />
                  <mssgle:LineSegment
                    End="170.666666666667,-23.6329704510109" />
                  <mssgle:CubicBezierSegment
                    Point1="170.666666666667,-23.6329704510109"
                    Point2="174.666666666667,-23.6329704510109"
                    Point3="174.666666666667,-27.6329704510109" />
                  <mssgle:LineSegment
                    End="174.666666666667,-50.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach property\Foreach property note for deletion.PrecedenceConstraints[Constraint 7]"
          TopLeft="698.75,48">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,60.4999999999999"
              Start="0,0"
              End="0,52.9999999999999">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.9999999999999" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach property\Foreach property note for deletion.PrecedenceConstraints[Created user is Rosie API]"
          TopLeft="379,26.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="256,0"
              Start="0,0"
              End="248.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="248.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="59.32181640625,5,129.8563671875,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach property\Foreach property note for deletion.PrecedenceConstraints[Error]"
          TopLeft="671,354.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-190,60"
              Start="0,0"
              End="-190,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.313725490196" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.313725490196"
                    Point2="0,24.313725490196"
                    Point3="-4,24.313725490196" />
                  <mssgle:LineSegment
                    End="-186,24.313725490196" />
                  <mssgle:CubicBezierSegment
                    Point1="-186,24.313725490196"
                    Point2="-190,24.313725490196"
                    Point3="-190,28.313725490196" />
                  <mssgle:LineSegment
                    End="-190,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-115.39734375,29.313725490196,40.7946875,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach property\Foreach property note for deletion.PrecedenceConstraints[No error]"
          TopLeft="729,354.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-29,60"
              Start="0,0"
              End="-29,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.313725490196" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.313725490196"
                    Point2="0,24.313725490196"
                    Point3="-4,24.313725490196" />
                  <mssgle:LineSegment
                    End="-25,24.313725490196" />
                  <mssgle:CubicBezierSegment
                    Point1="-25,24.313725490196"
                    Point2="-29,24.313725490196"
                    Point3="-29,28.313725490196" />
                  <mssgle:LineSegment
                    End="-29,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-22.5,29.313725490196,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="824,636"
          Size="824,679"
          Id="Package\Foreach property\Foreach property note for deletion"
          TopLeft="25.5,312.5" />
        <NodeLayout
          Size="167,42"
          Id="Package\Foreach property\Get property notes"
          TopLeft="836.5,209.5" />
        <NodeLayout
          Size="224,42"
          Id="Package\Foreach property\Get property notes for deletion"
          TopLeft="438,109.5" />
        <NodeLayout
          Size="153,42"
          Id="Package\Foreach property\Insert API error"
          TopLeft="221.5,110" />
        <NodeLayout
          Size="162,42"
          Id="Package\Foreach property\Mark as complete"
          TopLeft="1328,917" />
        <NodeLayout
          Size="207,42"
          Id="Package\Foreach property\Replace notes search JSON"
          TopLeft="812.5,108.5" />
        <NodeLayout
          Size="151,42"
          Id="Package\Foreach property\Reset API error"
          TopLeft="8.5,111.5" />
        <NodeLayout
          Size="167,42"
          Id="Package\Foreach property\Reset delete count"
          TopLeft="415,11" />
        <NodeLayout
          Size="184,42"
          Id="Package\Foreach property\Reset delete fail count"
          TopLeft="621,11" />
        <NodeLayout
          Size="175,42"
          Id="Package\Foreach property\Reset deletion failed"
          TopLeft="658.5,1018.5" />
        <NodeLayout
          Size="185,42"
          Id="Package\Foreach property\Reset deletion success"
          TopLeft="1352.5,1018.5" />
        <NodeLayout
          Size="164,42"
          Id="Package\Foreach property\Reset insert count"
          TopLeft="1032,11" />
        <NodeLayout
          Size="181,42"
          Id="Package\Foreach property\Reset insert fail count"
          TopLeft="1234,10" />
        <NodeLayout
          Size="163,42"
          Id="Package\Foreach property\Reset insert failed"
          TopLeft="894.5,1018.5" />
        <NodeLayout
          Size="174,42"
          Id="Package\Foreach property\Reset insert success"
          TopLeft="1118,1018.5" />
        <NodeLayout
          Size="143,42"
          Id="Package\Foreach property\Set start time"
          TopLeft="844,11" />
        <EdgeLayout
          Id="Package\Foreach property.PrecedenceConstraints[API error]"
          TopLeft="438,130.75">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-63.5,0"
              Start="0,0"
              End="-56,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-56,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-57.40734375,5,58.8146875,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach property.PrecedenceConstraints[Constraint]"
          TopLeft="946.5,251.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="257.5,61"
              Start="0,0"
              End="257.5,53.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.7473309608541" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.7473309608541"
                    Point2="0,24.7473309608541"
                    Point3="4,24.7473309608541" />
                  <mssgle:LineSegment
                    End="253.5,24.7473309608541" />
                  <mssgle:CubicBezierSegment
                    Point1="253.5,24.7473309608541"
                    Point2="257.5,24.7473309608541"
                    Point3="257.5,28.7473309608541" />
                  <mssgle:LineSegment
                    End="257.5,53.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach property.PrecedenceConstraints[Constraint 1]"
          TopLeft="1308.83333333333,866.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="100.166666666667,50.5"
              Start="0,0"
              End="100.166666666667,43">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.2759160663952" />
                  <mssgle:CubicBezierSegment
                    Point1="0,16.2759160663952"
                    Point2="0,20.2759160663952"
                    Point3="4,20.2759160663952" />
                  <mssgle:LineSegment
                    End="96.166666666667,20.2759160663952" />
                  <mssgle:CubicBezierSegment
                    Point1="96.166666666667,20.2759160663952"
                    Point2="100.166666666667,20.2759160663952"
                    Point3="100.166666666667,24.2759160663952" />
                  <mssgle:LineSegment
                    End="100.166666666667,43" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach property.PrecedenceConstraints[Constraint 10]"
          TopLeft="498.5,53">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="351.166666666667,55.5"
              Start="0,0"
              End="351.166666666667,48">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,36.8359004739337" />
                  <mssgle:CubicBezierSegment
                    Point1="0,36.8359004739337"
                    Point2="0,40.8359004739337"
                    Point3="4,40.8359004739337" />
                  <mssgle:LineSegment
                    End="347.166666666667,40.8359004739337" />
                  <mssgle:CubicBezierSegment
                    Point1="347.166666666667,40.8359004739337"
                    Point2="351.166666666667,40.8359004739337"
                    Point3="351.166666666667,44.8359004739337" />
                  <mssgle:LineSegment
                    End="351.166666666667,48" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach property.PrecedenceConstraints[Constraint 11]"
          TopLeft="713,53">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="169.833333333333,55.5"
              Start="0,0"
              End="169.833333333333,48">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,29.0445829338447" />
                  <mssgle:CubicBezierSegment
                    Point1="0,29.0445829338447"
                    Point2="0,33.0445829338447"
                    Point3="4,33.0445829338447" />
                  <mssgle:LineSegment
                    End="165.833333333333,33.0445829338447" />
                  <mssgle:CubicBezierSegment
                    Point1="165.833333333333,33.0445829338447"
                    Point2="169.833333333333,33.0445829338447"
                    Point3="169.833333333333,37.0445829338447" />
                  <mssgle:LineSegment
                    End="169.833333333333,48" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach property.PrecedenceConstraints[Constraint 12]"
          TopLeft="1114,53">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-164.833333333333,55.5"
              Start="0,0"
              End="-164.833333333333,48">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,29.0445829338447" />
                  <mssgle:CubicBezierSegment
                    Point1="0,29.0445829338447"
                    Point2="0,33.0445829338447"
                    Point3="-4,33.0445829338447" />
                  <mssgle:LineSegment
                    End="-160.833333333333,33.0445829338447" />
                  <mssgle:CubicBezierSegment
                    Point1="-160.833333333333,33.0445829338447"
                    Point2="-164.833333333333,33.0445829338447"
                    Point3="-164.833333333333,37.0445829338447" />
                  <mssgle:LineSegment
                    End="-164.833333333333,48" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach property.PrecedenceConstraints[Constraint 13]"
          TopLeft="1324.5,52">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-342.166666666667,56.5"
              Start="0,0"
              End="-342.166666666667,49">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,37.571682464455" />
                  <mssgle:CubicBezierSegment
                    Point1="0,37.571682464455"
                    Point2="0,41.571682464455"
                    Point3="-4,41.571682464455" />
                  <mssgle:LineSegment
                    End="-338.166666666667,41.571682464455" />
                  <mssgle:CubicBezierSegment
                    Point1="-338.166666666667,41.571682464455"
                    Point2="-342.166666666667,41.571682464455"
                    Point3="-342.166666666667,45.571682464455" />
                  <mssgle:LineSegment
                    End="-342.166666666667,49" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach property.PrecedenceConstraints[Constraint 2]"
          TopLeft="221.5,131.75">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-62,0"
              Start="0,0"
              End="-54.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-54.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-52.554453125,5,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach property.PrecedenceConstraints[Constraint 3]"
          TopLeft="573.5,312.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="320,-61"
              Start="0,0"
              End="320,-53.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-26.2128949065119" />
                  <mssgle:CubicBezierSegment
                    Point1="0,-26.2128949065119"
                    Point2="0,-30.2128949065119"
                    Point3="4,-30.2128949065119" />
                  <mssgle:LineSegment
                    End="316,-30.2128949065119" />
                  <mssgle:CubicBezierSegment
                    Point1="316,-30.2128949065119"
                    Point2="320,-30.2128949065119"
                    Point3="320,-34.2128949065119" />
                  <mssgle:LineSegment
                    End="320,-53.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach property.PrecedenceConstraints[Constraint 4]"
          TopLeft="1204.5,866.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,50"
              Start="0,0"
              End="0,42.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,42.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-25.304453125,15.4453125,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach property.PrecedenceConstraints[Constraint 5]"
          TopLeft="1172.9,958.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-426.9,60"
              Start="0,0"
              End="-426.9,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,14.3835946924005" />
                  <mssgle:CubicBezierSegment
                    Point1="0,14.3835946924005"
                    Point2="0,18.3835946924005"
                    Point3="-4,18.3835946924005" />
                  <mssgle:LineSegment
                    End="-422.9,18.3835946924005" />
                  <mssgle:CubicBezierSegment
                    Point1="-422.9,18.3835946924005"
                    Point2="-426.9,18.3835946924005"
                    Point3="-426.9,22.3835946924005" />
                  <mssgle:LineSegment
                    End="-426.9,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-238.754453125,23.3835946924005,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach property.PrecedenceConstraints[Constraint 6]"
          TopLeft="1194.3,958.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-218.3,60"
              Start="0,0"
              End="-218.3,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22.9223394055609" />
                  <mssgle:CubicBezierSegment
                    Point1="0,22.9223394055609"
                    Point2="0,26.9223394055609"
                    Point3="-4,26.9223394055609" />
                  <mssgle:LineSegment
                    End="-214.3,26.9223394055609" />
                  <mssgle:CubicBezierSegment
                    Point1="-214.3,26.9223394055609"
                    Point2="-218.3,26.9223394055609"
                    Point3="-218.3,30.9223394055609" />
                  <mssgle:LineSegment
                    End="-218.3,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-134.454453125,31.9223394055609,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach property.PrecedenceConstraints[Constraint 7]"
          TopLeft="1215.7,958.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-10.6999999999998,60"
              Start="0,0"
              End="-10.6999999999998,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22.9223394055609" />
                  <mssgle:CubicBezierSegment
                    Point1="0,22.9223394055609"
                    Point2="0,26.9223394055609"
                    Point3="-4,26.9223394055609" />
                  <mssgle:LineSegment
                    End="-6.69999999999982,26.9223394055609" />
                  <mssgle:CubicBezierSegment
                    Point1="-6.69999999999982,26.9223394055609"
                    Point2="-10.6999999999998,26.9223394055609"
                    Point3="-10.6999999999998,30.9223394055609" />
                  <mssgle:LineSegment
                    End="-10.6999999999998,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-30.6544531249999,31.9223394055609,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach property.PrecedenceConstraints[Constraint 8]"
          TopLeft="1237.1,958.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="207.9,60"
              Start="0,0"
              End="207.9,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,14.3835946924005" />
                  <mssgle:CubicBezierSegment
                    Point1="0,14.3835946924005"
                    Point2="0,18.3835946924005"
                    Point3="4,18.3835946924005" />
                  <mssgle:LineSegment
                    End="203.9,18.3835946924005" />
                  <mssgle:CubicBezierSegment
                    Point1="203.9,18.3835946924005"
                    Point2="207.9,18.3835946924005"
                    Point3="207.9,22.3835946924005" />
                  <mssgle:LineSegment
                    End="207.9,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="78.645546875,23.3835946924005,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach property.PrecedenceConstraints[Constraint 9]"
          TopLeft="915.75,53">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,55.5"
              Start="0,0"
              End="0,48">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,48" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach property.PrecedenceConstraints[Delete notes]"
          TopLeft="812.5,130">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-150.5,0"
              Start="0,0"
              End="-143,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-143,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-108.60123046875,5,74.2024609375,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach property.PrecedenceConstraints[Don't delete notes]"
          TopLeft="918,150.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,59"
              Start="0,0"
              End="0,51.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,51.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-49.66123046875,17.75,99.3224609375,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach property.PrecedenceConstraints[No API error]"
          TopLeft="550,151.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-248.5,161"
              Start="0,0"
              End="-248.5,153.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,92.4127906976744" />
                  <mssgle:CubicBezierSegment
                    Point1="0,92.4127906976744"
                    Point2="0,96.4127906976744"
                    Point3="-4,96.4127906976744" />
                  <mssgle:LineSegment
                    End="-244.5,96.4127906976744" />
                  <mssgle:CubicBezierSegment
                    Point1="-244.5,96.4127906976744"
                    Point2="-248.5,96.4127906976744"
                    Point3="-248.5,100.412790697674" />
                  <mssgle:LineSegment
                    End="-248.5,153.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-161.27234375,101.412790697674,74.0446875,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="1588,1116"
          Size="1588,1159"
          Id="Package\Foreach property"
          TopLeft="707.5,311.5" />
        <NodeLayout
          Size="139,42"
          Id="Package\Get auth key"
          TopLeft="1426,123.5" />
        <NodeLayout
          Size="171,42"
          Id="Package\Get property queue"
          TopLeft="1416,220.5" />
        <NodeLayout
          Size="140,42"
          Id="Package\Set Variables"
          TopLeft="1425.5,32.5" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="1495.5,74.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,49"
              Start="0,0"
              End="0,41.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,41.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="1501.5,262.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,49"
              Start="0,0"
              End="0,41.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,41.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Token aquired]"
          TopLeft="1498.5,165.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,55"
              Start="0,0"
              End="0,47.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,47.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-40.796640625,15.75,81.59328125,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <AnnotationLayout
          Text="To run this package, add property references into tbl_RosiePropNotesWorkTable using SP ROSIE_InsertPropertiesForNotesPush, then run this package with the office id &amp; rex account id parameters set."
          ParentId="Package"
          Size="329,77"
          Id="b167c8ff-d77a-4f60-8e74-bcfa8634ea8b"
          TopLeft="1022.5,149">
          <AnnotationLayout.FontInfo>
            <mssge:FontInfo
              Color="#FFF1F1F1">
              <mssge:FontInfo.TextDecorations>
                <av:TextDecorationCollection />
              </mssge:FontInfo.TextDecorations>
            </mssge:FontInfo>
          </AnnotationLayout.FontInfo>
        </AnnotationLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <DtsEventHandler
    design-time-name="Package.EventHandlers[OnError]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="217,42"
          Id="Package.EventHandlers[OnError]\Insert error log into database"
          TopLeft="NaN,NaN" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <PrecedenceConstraint
    design-time-name="Package\Foreach property\Foreach property note.PrecedenceConstraints[Error]">
    <ShowAnnotation>ConstraintName</ShowAnnotation>
  </PrecedenceConstraint>
  <PrecedenceConstraint
    design-time-name="Package\Foreach property\Foreach property note for deletion.PrecedenceConstraints[Created user is Rosie API]">
    <ShowAnnotation>ConstraintName</ShowAnnotation>
  </PrecedenceConstraint>
  <PrecedenceConstraint
    design-time-name="Package\Foreach property\Foreach property note for deletion.PrecedenceConstraints[Error]">
    <ShowAnnotation>ConstraintName</ShowAnnotation>
  </PrecedenceConstraint>
  <TaskHost
    design-time-name="Package\Foreach property\Get property notes for deletion">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="199,42"
          Id="Package\Foreach property\Get property notes for deletion\Search property for notes"
          TopLeft="166,5.5" />
        <NodeLayout
          Size="134,42"
          Id="Package\Foreach property\Get property notes for deletion\Set variable"
          TopLeft="198.5,311.5" />
        <NodeLayout
          Size="134,42"
          Id="Package\Foreach property\Get property notes for deletion\Parse notes"
          TopLeft="5.50000000000003,209.5" />
        <NodeLayout
          Size="126,42"
          Id="Package\Foreach property\Get property notes for deletion\Set object"
          TopLeft="9.50000000000003,311.5" />
        <NodeLayout
          Size="107,42"
          Id="Package\Foreach property\Get property notes for deletion\Error?"
          TopLeft="212,107.5" />
        <NodeLayout
          Size="131,42"
          Id="Package\Foreach property\Get property notes for deletion\Parse error"
          TopLeft="200,209.5" />
        <NodeLayout
          Size="162,42"
          Id="Package\Foreach property\Get property notes for deletion\Trash Destination"
          TopLeft="184.5,413.5" />
        <EdgeLayout
          Id="Package\Foreach property\Get property notes for deletion.Paths[SetVariableTransformOutput]"
          TopLeft="265.5,353.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach property\Get property notes for deletion.Paths[No error]"
          TopLeft="249,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-176.5,60"
              Start="0,0"
              End="-176.5,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.5303867403315" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.5303867403315"
                    Point2="0,24.5303867403315"
                    Point3="-4,24.5303867403315" />
                  <mssgle:LineSegment
                    End="-172.5,24.5303867403315" />
                  <mssgle:CubicBezierSegment
                    Point1="-172.5,24.5303867403315"
                    Point2="-176.5,24.5303867403315"
                    Point3="-176.5,28.5303867403315" />
                  <mssgle:LineSegment
                    End="-176.5,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-107.21869140625,29.5303867403315,37.9373828125,9.421875"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach property\Get property notes for deletion.Paths[JsonSourceOutput]"
          TopLeft="265.5,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach property\Get property notes for deletion.Paths[JsonParserTransformOutput1]"
          TopLeft="265.5,251.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach property\Get property notes for deletion.Paths[JsonParserTransformOutput]"
          TopLeft="72.5,251.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach property\Get property notes for deletion.Paths[Error]"
          TopLeft="282,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-16.5,60"
              Start="0,0"
              End="-16.5,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.5303867403315" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.5303867403315"
                    Point2="0,24.5303867403315"
                    Point3="-4,24.5303867403315" />
                  <mssgle:LineSegment
                    End="-12.5,24.5303867403315" />
                  <mssgle:CubicBezierSegment
                    Point1="-12.5,24.5303867403315"
                    Point2="-16.5,24.5303867403315"
                    Point3="-16.5,28.5303867403315" />
                  <mssgle:LineSegment
                    End="-16.5,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-19.77869140625,29.5303867403315,23.0573828125,9.421875"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PrecedenceConstraint
    design-time-name="Package\Foreach property.PrecedenceConstraints[API error]">
    <ShowAnnotation>ConstraintName</ShowAnnotation>
  </PrecedenceConstraint>
  <PrecedenceConstraint
    design-time-name="Package\Foreach property.PrecedenceConstraints[Delete notes]">
    <ShowAnnotation>ConstraintName</ShowAnnotation>
  </PrecedenceConstraint>
  <PrecedenceConstraint
    design-time-name="Package\Foreach property.PrecedenceConstraints[Don't delete notes]">
    <ShowAnnotation>ConstraintName</ShowAnnotation>
  </PrecedenceConstraint>
  <PrecedenceConstraint
    design-time-name="Package\Foreach property.PrecedenceConstraints[No API error]">
    <ShowAnnotation>ConstraintName</ShowAnnotation>
  </PrecedenceConstraint>
  <PrecedenceConstraint
    design-time-name="Package.PrecedenceConstraints[Token aquired]">
    <ShowAnnotation>ConstraintName</ShowAnnotation>
  </PrecedenceConstraint>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>