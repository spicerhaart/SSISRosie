<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="11/1/2018 10:35:34 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="WX9000ITD21"
  DTS:CreatorName="SPICERHAART\1920191"
  DTS:DTSID="{66314DA3-B858-44D3-94C2-839E1A93F265}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.1301.433"
  DTS:LocaleID="2057"
  DTS:MaxConcurrentExecutables="4"
  DTS:ObjectName="ContactVendorPush"
  DTS:PackageType="5"
  DTS:ProtectionLevel="1"
  DTS:TransactionOption="0"
  DTS:VersionBuild="489"
  DTS:VersionGUID="{4B0DE442-4357-4611-9B96-69A2F2351CA2}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[HTTP]"
      DTS:CreationName="ZS-HTTP"
      DTS:DTSID="{06F17EAF-74C4-4DCC-A726-B84BD8B62D34}"
      DTS:ObjectName="HTTP">
      <DTS:ObjectData>
        <ConnectionManager
          ConnectionString="Url=https://api.rexsoftware.com/rex.php;CredentialType=Notset;UserName=;Timeout=100000;SoapWssPasswordType=Notset;JwtCustomClaims=;UseProxy=False;ProxyUrl=;UseProxyCreds=False;ProxyUserName=;DoNotUseDefaultProxy=False;UseClientCertificate=False;CertificatePath=;CertificateStorageType=CurrentUser;CertificateStoreName=My;CertificateThumbprint=;RetryMode=RetryAny;RetryCountMax=5;RetryWaitTimeMs=2000;RetryMultiplyWaitTime=True;RetryMessageList=;RetryStatusCodeList=502 |  504;AuthScheme=Bearer;TokenAuthHeader=;TokenUrl=;TokenRequestData=;TokenRequestHeaders=;TokenRequestMethod=;TokenRequestContentType=Default;TokenResponseContentFilter=;TokenResponseValueExtractMode=Body;TokenResponseCookie=;TokenResponseHeader=;TokenResponseContentType=None;TokenExpirationTimeInSeconds=3600" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[HTTP 1]"
      DTS:CreationName="ZS-HTTP"
      DTS:DTSID="{A058AA28-1991-4923-A587-5393F3B220A5}"
      DTS:ObjectName="HTTP 1">
      <DTS:ObjectData>
        <ConnectionManager
          ConnectionString="Url=https://api.rexsoftware.com/rex.php;CredentialType=Notset;UserName=;Timeout=100000;SoapWssPasswordType=Notset;JwtCustomClaims=;UseProxy=False;ProxyUrl=;UseProxyCreds=False;ProxyUserName=;DoNotUseDefaultProxy=False;UseClientCertificate=False;CertificatePath=;CertificateStorageType=CurrentUser;CertificateStoreName=My;CertificateThumbprint=;RetryMode=None;RetryCountMax=3;RetryWaitTimeMs=2000;RetryMultiplyWaitTime=False;RetryMessageList=;RetryStatusCodeList=;AuthScheme=Bearer;TokenAuthHeader=;TokenUrl=;TokenRequestData=;TokenRequestHeaders=;TokenRequestMethod=;TokenRequestContentType=Default;TokenResponseContentFilter=;TokenResponseValueExtractMode=Body;TokenResponseCookie=;TokenResponseHeader=;TokenResponseContentType=None;TokenExpirationTimeInSeconds=3600" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[RexSync.xml]"
      DTS:CreationName="FILE"
      DTS:DTSID="{3333B180-AD35-4F8E-BEBB-710B2190619D}"
      DTS:ObjectName="RexSync.xml">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="C:\SSISVariables\RexSync.xml" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[SMTP]"
      DTS:CreationName="ZS-SMTP"
      DTS:DTSID="{1840882A-B8B9-40D7-BCB8-6EC1145881B5}"
      DTS:ObjectName="SMTP">
      <DTS:ObjectData>
        <ConnectionManager
          ConnectionString="SmtpServer=outlookcol;UserName=;Port=25;EnableSsl=False;Timeout=10000;EnableAnonymousAuth=False" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[SMTP Connection Manager]"
      DTS:CreationName="SMTP"
      DTS:DTSID="{73E09A11-76D0-4023-97EA-2217D284CD2A}"
      DTS:ObjectName="SMTP Connection Manager">
      <DTS:ObjectData>
        <SmtpConnectionManager
          ConnectionString="SmtpServer=outlookcol;UseWindowsAuthentication=False;EnableSsl=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:PackageParameters>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="3"
      DTS:Description="True for dont disturb,False for contactable"
      DTS:DTSID="{736E53FE-9E8F-4FEC-AC69-967BFF2792E5}"
      DTS:ObjectName="IsDND">
      <DTS:Property
        DTS:DataType="3"
        DTS:Name="ParameterValue">1</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:Description="THe Office the package is running against"
      DTS:DTSID="{F3CDF2B4-A556-4436-972D-BB303A4202B3}"
      DTS:ObjectName="PackageOfficeID"
      DTS:Required="True">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">0307</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="3"
      DTS:DTSID="{D7EB133E-16DF-4CB7-9AFE-147A957EEB33}"
      DTS:ObjectName="RexAccountID"
      DTS:Required="True">
      <DTS:Property
        DTS:DataType="3"
        DTS:Name="ParameterValue">1734</DTS:Property>
    </DTS:PackageParameter>
  </DTS:PackageParameters>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{7F7231BA-1AB3-448A-A824-F56D42DA168D}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="APIToken">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{8C48B908-71A2-4565-8372-8B865D686346}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="PackageErrorEmail">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{31266F4F-DF7E-4925-8E2B-39ABE299D006}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="PackagePassword">
      <DTS:VariableValue
        DTS:DataType="8">P4ssword</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{ED797879-E9A1-490C-BEF4-8AB3A5D822E6}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="PackageRosieURL">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{50E83444-124C-46B1-8233-CB9BA06DB614}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="PackageStartForNextRun">
      <DTS:VariableValue
        DTS:DataType="7">11/22/2018 5:13:48 PM</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{9F31EC82-C2E8-448D-A022-9BA2E3F55F16}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="PackageUsername">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B4BF72C2-5788-41C3-B349-F93AC6AD7340}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="ProcessingStart">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F39EA62F-F755-4DBE-A656-B85EE60CBFCC}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="RecCountFailed">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{233E09DF-C869-4345-A915-35D6091151DC}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="RecCountProcessed">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{3E07CC4F-09B8-4CCF-9D77-B7CF1B3C4AC2}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="RecCountSuccess">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{7EBCA31D-514C-4E63-8F19-42A3CC145579}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ResponseAuth">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{1EDCB32C-987D-49EE-878F-7AC01703D5B2}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ResponseAuthCode">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{BF31F366-1FFC-4451-AD59-3BB52AABB290}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ResponseConvey">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{0ADA3C0E-7C5D-4DE4-900B-DA835383C06A}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ResponseConveyCode">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{EC4C9F5D-8F6B-4985-AC10-BE2F3AB77B25}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ResponseCreate">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{222FB60C-0C8F-492E-A8D0-6671D8420E95}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ResponseCreateCode">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{5B90FC47-0B60-4710-ADE0-6F31FC108380}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varProductString">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{9D1BAC69-5FCA-4C79-BEC2-F648E20776EB}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="VarRecordsetConveyancers">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:LoggingOptions
    DTS:LoggingMode="1" />
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Clear Staging Table"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{3f342fc1-12c9-41a4-b6e4-0e1d799519aa}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Clear Staging Table"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{78432CA1-1FEA-4ED4-9C0F-D552A4A9DE0E}"
          SQLTask:SqlStatementSource="delete from ROSIE_ContactPush_staging where office_id = ? and entitytype = 1" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="@office_id"
            SQLTask:DtsVariableName="$Package::PackageOfficeID"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="129"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Email Auth Failure"
      DTS:CreationName="ZappySys.HtmlEmailTask"
      DTS:Description="Email Auth Failure"
      DTS:DTSID="{52B46DDD-0643-477F-B4C7-B880E07DAC7D}"
      DTS:ExecutableType="ZappySys.HtmlEmailTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Email Auth Failure"
      DTS:TaskContact="HTML Email Task; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
      DTS:ThreadHint="1">
      <DTS:Variables />
      <DTS:ObjectData>
        <HtmlEmailTask
          SmtpConnection="SMTP"
          IsHtmlEmail="True"
          DefaultStyle="&#xA;&lt;style type=&quot;text/css&quot;&gt;&#xA;body,div,p,span,td,th,table {&#xA; font-family: Helvetica, Arial, sans-serif;&#xA; font-size: 10pt; &#xA;}&#xA;h1,h2,h3,h4,h5{&#xA;font-family: Helvetica, Arial, sans-serif;&#xA;}&#xA;&#xA;table { &#xA; border-collapse: &#xA; collapse; border-spacing: 0; &#xA;}&#xA;&#xA;tr.odd    {background-color: #cccccc}&#xA;tr.even   {background-color: #fafafa}&#xA;td, th { border: 1px solid #bbb;padding: 5 5 5 5} &#xA;th { background: #F3F3F3;  font-weight: bold;}&#xA;&lt;/style&gt;&#xA;&#xA;"
          Subject="Error occured in {{System::PackageName}}"
          From="alerts@spicerhaart.co.uk"
          To="{{User::PackageErrorEmail}}"
          Cc=""
          ReplyTo=""
          Bcc=""
          Attachments=""
          EmailPriority="High"
          MessageSourceType="Direct"
          MessageDirectValue="&lt;b&gt;Failed to get Authorization Key&lt;/b&gt;&lt;p /&gt;&#xA;&#xA;&lt;p&gt; Response Code =&gt;{{User::ResponseAuthCode}} &lt;p /&gt;&#xA;"
          MessageFileConnection=""
          MessageVariable=""
          LogLevel="Normal"
          PrefixTimestamp="False" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Expression Task"
      DTS:CreationName="Microsoft.ExpressionTask"
      DTS:Description="Expression Task"
      DTS:DTSID="{2EAFC716-47DD-4642-8D4F-FA53C0121960}"
      DTS:ExecutableType="Microsoft.ExpressionTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Expression Task"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ExpressionTask
          Expression="@[User::RecCountFailed]= @[User::RecCountProcessed]- @[User::RecCountSuccess]" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Fix Customers"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{B43123AE-6263-429A-9B99-82F60DED7291}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Fix Customers"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{78432CA1-1FEA-4ED4-9C0F-D552A4A9DE0E}"
          SQLTask:SqlStatementSource="exec ROSIE_uspInsMissingCustomers ?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="@office_id"
            SQLTask:DtsVariableName="$Package::PackageOfficeID"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="129"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Get and Upload Vendors"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{FF129537-21D2-443B-B301-ECE7C9931DE6}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Get and Upload Vendors">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Get and Upload Vendors\Partition 1"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{b55fe744-bc29-40e0-8d8b-568df3aa825d}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Partition 1"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:TransactionOption="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Get and Upload Vendors\Partition 1\AML"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Web API Destination; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                  description="The Web API destination can be used to send data to Web API URL (e.g. Submit or POST data to REST API/SOAP or other HTTP/HTTPS endpoints)"
                  name="AML"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                      expressionType="Notify"
                      name="LoggingMode"
                      typeConverter="ZappySys.PowerPack.Common.LoggingMode, ZappySys.PowerPack130, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                    <property
                      dataType="System.Boolean"
                      description="When you enable this property it will prefix timestamp before Log messages."
                      expressionType="Notify"
                      name="PrefixTimestamp">false</property>
                    <property
                      dataType="System.Null"
                      expressionType="Notify"
                      name="SelfRef"
                      typeConverter="NOTBROWSABLE" />
                    <property
                      dataType="System.String"
                      description="API URL you want to access"
                      expressionType="Notify"
                      name="HttpRequestUrl">{{User::PackageRosieURL}}</property>
                    <property
                      dataType="System.String"
                      description="Http Web Request Method (e.g. POST, GET, PUT, LIST, DELETE...). Refer your API documentation if you are not sure which method you have to use."
                      expressionType="Notify"
                      name="HttpRequestMethod">POST</property>
                    <property
                      dataType="System.String"
                      description="Set this if you want to set custom Http headers. You may use variable anywhere in the header value using syntax {{User::YourVarName}}. Syntax of Header key value pair is : &amp;lt;request&amp;gt;&amp;lt;header&amp;gt;&amp;lt;name&amp;gt;x-myheader-1&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;AAA&amp;lt;/value&amp;gt;&amp;lt;/header&amp;gt; &amp;lt;header&amp;gt;&amp;lt;name&amp;gt;x-myheader-2&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;BBB&amp;lt;/value&amp;gt;&amp;lt;/header&amp;gt;&amp;lt;/request&amp;gt;"
                      expressionType="Notify"
                      name="HttpHeaders"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">&lt;request&gt;&lt;header&gt;&lt;name&gt;Accept&lt;/name&gt;&lt;value&gt;*/*&lt;/value&gt;&lt;/header&gt;&lt;header&gt;&lt;name&gt;Cache-Control&lt;/name&gt;&lt;value&gt;no-cache&lt;/value&gt;&lt;/header&gt;&lt;/request&gt;</property>
                    <property
                      dataType="System.String"
                      description="User defined data you wish to send along with your HTTP Request (e.g. Upload file data, Form POST data). Usually you have to set content-type of your data but if you select RequestMethod=POST then system will automatically set content-type=application/x-www-form-urlencoded."
                      expressionType="Notify"
                      name="HttpRequestData"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies content type for data you wish to POST. If you select Default option then system default content type will be used (i.e. application/x-www-form-urlencoded). If you specify Content-Type header along with this option then header value takes precedence."
                      expressionType="Notify"
                      name="HttpRequestContentType"
                      typeConverter="ZappySys.Common.Web.HttpRequestContentType, ZappySys.Common, Version=1.0.2018.11017, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                    <property
                      dataType="System.Boolean"
                      description="If this option is true then component will continue without exception on 404 error (Url not found). This allows you to consume data gracefully."
                      expressionType="Notify"
                      name="ContinueOnUrlNotFoundError">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Ignore SSL certificate related errors. Example: if you getting SSL/TLS errors because of certificate expired or certificate is not from trusted authority or certificate is self-signed. By checking this option you will not get SSL/TLS error."
                      expressionType="Notify"
                      name="IgnoreCertificateErrors">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Allow unsecure ciphers/suites and curves for SSLS/TLS communication. Use this option to communicate with web servers which needs legacy / unsecured ciphers support. This option is only trigged when you change default SSL/TLS Version on advanced settings tab."
                      expressionType="Notify"
                      name="AllowUnsecureSuite">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Enable support for gzip or deflate compression. When you check this option compressed response automatically de-compressed saving bandwidth. This option is only valid if web server supports compressed response stream. Check your API documentation for more information."
                      expressionType="Notify"
                      name="EnableCompressionSupport">true</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies which security protocol is supported for HTTPS communication. Using this option you can enable legacy protocol or enforce to use latest version of security protocol (Note: TLS 1.2 is only supported in SSIS 2014 or Higher)."
                      expressionType="Notify"
                      name="SecurityProtocol"
                      typeConverter="ZappySys.PowerPack.Common.HttpsSecurityProtocolType, ZappySys.PowerPack130, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                    <property
                      dataType="System.Int32"
                      description="Wait time in milliseconds (Pause after each request). 0=No wait. Use this delay time if your API has limit on how many requests you can make in certain time frame."
                      expressionType="Notify"
                      name="WaitTime">0</property>
                    <property
                      dataType="System.Boolean"
                      description="When you redirect error to error output by default you get additional information in ErrorMessage column. Check this option if you need exact Response Body (Useful if its in JSON/XML format which needs to be parsed for additional information for later step)."
                      expressionType="Notify"
                      name="OnErrorOutputResponseBody">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Enable multiple requests using parallel threads."
                      expressionType="Notify"
                      name="EnableParallelRequests">true</property>
                    <property
                      dataType="System.Int32"
                      description="Maximum parallel threads to use for processing multiple web requests."
                      expressionType="Notify"
                      name="MaxParallelThreads">20</property>
                    <property
                      dataType="System.Boolean"
                      description="By default one request is sent for each input row. If your API supports multiple records in a single call via HTTP Body then enable this setting. See also BodyBatchSize, BodyHeader, BodyFooter and BodyRowSeparator property."
                      expressionType="Notify"
                      name="EnableBodyBatch">false</property>
                    <property
                      dataType="System.String"
                      description="When you have to wrap input content between opening and closing tags for each call then set this property to specify opening for body content. For Example if you want to build Body like this (send max 100 rows per call) ==&gt; { records : [ {...}, {...}, {...} ] } then you can set BatchSize=100, BodyHeader as &quot;{ records: [&quot; , BodyFooter as &quot;] }&quot; and BodyRowSeperator as comma {,}. This property is ignored if EnableBodyBatch=false."
                      expressionType="Notify"
                      name="BodyHeader"></property>
                    <property
                      dataType="System.String"
                      description="When you have to wrap input content between opening and closing tags for each call then set this property to specify closing for body content. For Example if you want to build Body like this (send max 100 rows per call) ==&gt; { records : [ {...}, {...}, {...} ] } then you can set BatchSize=100, BodyHeader as &quot;{ records: [&quot; , BodyFooter as &quot;] }&quot; and BodyRowSeperator as comma {,}. This property is ignored if EnableBodyBatch=false."
                      expressionType="Notify"
                      name="BodyFooter"></property>
                    <property
                      dataType="System.Int32"
                      description="If your API supports multiple records via HTTP Body then change this setting &gt; 1 to include multiple upstream records into single call. See also BodyHeader, BodyFooter and BodyRowSeparator property. This property is ignored if EnableBodyBatch=false."
                      expressionType="Notify"
                      name="BodyBatchSize">100</property>
                    <property
                      dataType="System.String"
                      description="When you submit multiple rows in a batch you can separate multiple documents / records using custom separator (e.g. in JSON Array you can use comma {,} as record separator if POST document is in array format [ {...}, {...}, {...} ] ). For last row of batch blank separator is used."
                      expressionType="Notify"
                      name="BodyRowSeparator"></property>
                    <property
                      dataType="System.Boolean"
                      description="Returns response data as binary data (e.g. Byte Array). Check this option is response is Zip file, Image file or any non text data which needs to be exported as raw data without any encoding."
                      expressionType="Notify"
                      name="TreatResponseAsBinary">false</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">ZappySys.WebApiDestination</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Get and Upload Vendors\Partition 1\AML.Connections[Connection]"
                      connectionManagerID="Package.ConnectionManagers[HTTP]"
                      connectionManagerRefId="Package.ConnectionManagers[HTTP]"
                      description="Connection manager for authentication (e.g. HTTP or OAuth Connection)"
                      name="Connection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Get and Upload Vendors\Partition 1\AML.Inputs[WebApiDestinationInput]"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="WebApiDestinationInput"
                      truncationRowDisposition="FailComponent">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Get and Upload Vendors\Partition 1\AML.Inputs[WebApiDestinationInput].Columns[DerivedAMLJSON]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="3000"
                          cachedName="DerivedAMLJSON"
                          externalMetadataColumnId="Package\Get and Upload Vendors\Partition 1\AML.Inputs[WebApiDestinationInput].ExternalColumns[HttpRequestData]"
                          lineageId="Package\Get and Upload Vendors\Partition 1\Replace Rid_contact and prop_ref.Outputs[Derived Column Output].Columns[DerivedAMLJSON]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 1\AML.Inputs[WebApiDestinationInput].ExternalColumns[HttpRequestUrl]"
                          dataType="wstr"
                          length="2000"
                          name="HttpRequestUrl" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 1\AML.Inputs[WebApiDestinationInput].ExternalColumns[HttpRequestData]"
                          dataType="nText"
                          name="HttpRequestData" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 1\AML.Outputs[WebApiDestination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="WebApiDestination Error Output"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 1\AML.Inputs[WebApiDestinationInput]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 1\AML.Outputs[WebApiDestination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 1\AML.Outputs[WebApiDestination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 1\AML.Outputs[WebApiDestination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 1\AML.Outputs[WebApiDestination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 1\AML.Outputs[WebApiDestination Error Output].Columns[ErrorColumnName]"
                          codePage="1252"
                          dataType="str"
                          length="128"
                          lineageId="Package\Get and Upload Vendors\Partition 1\AML.Outputs[WebApiDestination Error Output].Columns[ErrorColumnName]"
                          name="ErrorColumnName" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 1\AML.Outputs[WebApiDestination Error Output].Columns[ErrorMessage]"
                          dataType="nText"
                          lineageId="Package\Get and Upload Vendors\Partition 1\AML.Outputs[WebApiDestination Error Output].Columns[ErrorMessage]"
                          name="ErrorMessage" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 1\AML.Outputs[Response Output]"
                      exclusionGroup="1"
                      name="Response Output"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 1\AML.Inputs[WebApiDestinationInput]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 1\AML.Outputs[Response Output].Columns[ResponseText]"
                          dataType="nText"
                          lineageId="Package\Get and Upload Vendors\Partition 1\AML.Outputs[Response Output].Columns[ResponseText]"
                          name="ResponseText" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 1\AML.Outputs[Response Output].Columns[StatusCode]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 1\AML.Outputs[Response Output].Columns[StatusCode]"
                          name="StatusCode" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Get and Upload Vendors\Partition 1\Check Error 1"
                  componentClassID="Microsoft.ConditionalSplit"
                  contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
                  name="Check Error 1"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Get and Upload Vendors\Partition 1\Check Error 1.Inputs[Conditional Split Input]"
                      description="Input to the Conditional Split Transformation"
                      name="Conditional Split Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Check Error 1.Inputs[Conditional Split Input].Columns[error]"
                          cachedDataType="wstr"
                          cachedLength="1020"
                          cachedName="error"
                          lineageId="Package\Get and Upload Vendors\Partition 1\Get Results.Outputs[JsonParserTransformOutput].Columns[error]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 1\Check Error 1.Outputs[Error]"
                      description="Output 1 of the Conditional Split Transformation"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      exclusionGroup="1"
                      name="Error"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 1\Check Error 1.Inputs[Conditional Split Input]"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                          name="Expression">[REPLACENULL](#{Package\Get and Upload Vendors\Partition 1\Get Results.Outputs[JsonParserTransformOutput].Columns[error]},"") != ""</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the friendly version of the expression. This expression version uses column names."
                          expressionType="Notify"
                          name="FriendlyExpression">REPLACENULL(error,"") != ""</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                          name="EvaluationOrder">0</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 1\Check Error 1.Outputs[No Error]"
                      description="Output 2 of the Conditional Split Transformation"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      exclusionGroup="1"
                      name="No Error"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 1\Check Error 1.Inputs[Conditional Split Input]"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                          name="Expression">[REPLACENULL](#{Package\Get and Upload Vendors\Partition 1\Get Results.Outputs[JsonParserTransformOutput].Columns[error]},"") == ""</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the friendly version of the expression. This expression version uses column names."
                          expressionType="Notify"
                          name="FriendlyExpression">REPLACENULL(error,"") == ""</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                          name="EvaluationOrder">1</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 1\Check Error 1.Outputs[Conditional Split Default Output]"
                      description="Default Output of the Conditional Split Transformation"
                      exclusionGroup="1"
                      name="Conditional Split Default Output"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 1\Check Error 1.Inputs[Conditional Split Input]">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          name="IsDefaultOut">true</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 1\Check Error 1.Outputs[Conditional Split Error Output]"
                      description="Error Output of the Conditional Split Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Conditional Split Error Output"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 1\Check Error 1.Inputs[Conditional Split Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Check Error 1.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 1\Check Error 1.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Check Error 1.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 1\Check Error 1.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Get and Upload Vendors\Partition 1\Conditional Split"
                  componentClassID="Microsoft.ConditionalSplit"
                  contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
                  name="Conditional Split"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Get and Upload Vendors\Partition 1\Conditional Split.Inputs[Conditional Split Input]"
                      description="Input to the Conditional Split Transformation"
                      name="Conditional Split Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Conditional Split.Inputs[Conditional Split Input].Columns[AMLCheck]"
                          cachedDataType="i4"
                          cachedName="AMLCheck"
                          lineageId="Package\Get and Upload Vendors\Partition 1\Lookup.Outputs[Lookup Match Output].Columns[AMLCheck]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 1\Conditional Split.Outputs[Need To Flag AML]"
                      description="Output 1 of the Conditional Split Transformation"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      exclusionGroup="1"
                      name="Need To Flag AML"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 1\Conditional Split.Inputs[Conditional Split Input]"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                          name="Expression">#{Package\Get and Upload Vendors\Partition 1\Lookup.Outputs[Lookup Match Output].Columns[AMLCheck]} == 1</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the friendly version of the expression. This expression version uses column names."
                          expressionType="Notify"
                          name="FriendlyExpression">AMLCheck == 1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                          name="EvaluationOrder">0</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 1\Conditional Split.Outputs[Do nothing]"
                      description="Output 2 of the Conditional Split Transformation"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      exclusionGroup="1"
                      name="Do nothing"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 1\Conditional Split.Inputs[Conditional Split Input]"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                          name="Expression">#{Package\Get and Upload Vendors\Partition 1\Lookup.Outputs[Lookup Match Output].Columns[AMLCheck]} == 0</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the friendly version of the expression. This expression version uses column names."
                          expressionType="Notify"
                          name="FriendlyExpression">AMLCheck == 0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                          name="EvaluationOrder">1</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 1\Conditional Split.Outputs[Conditional Split Default Output]"
                      description="Default Output of the Conditional Split Transformation"
                      exclusionGroup="1"
                      name="Conditional Split Default Output"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 1\Conditional Split.Inputs[Conditional Split Input]">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          name="IsDefaultOut">true</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 1\Conditional Split.Outputs[Conditional Split Error Output]"
                      description="Error Output of the Conditional Split Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Conditional Split Error Output"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 1\Conditional Split.Inputs[Conditional Split Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 1\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 1\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Get and Upload Vendors\Partition 1\Create Contact"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Web API Destination; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                  description="The Web API destination can be used to send data to Web API URL (e.g. Submit or POST data to REST API/SOAP or other HTTP/HTTPS endpoints)"
                  name="Create Contact"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                      expressionType="Notify"
                      name="LoggingMode"
                      typeConverter="ZappySys.PowerPack.Common.LoggingMode, ZappySys.PowerPack130, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                    <property
                      dataType="System.Boolean"
                      description="When you enable this property it will prefix timestamp before Log messages."
                      expressionType="Notify"
                      name="PrefixTimestamp">false</property>
                    <property
                      dataType="System.Null"
                      expressionType="Notify"
                      name="SelfRef"
                      typeConverter="NOTBROWSABLE" />
                    <property
                      dataType="System.String"
                      description="API URL you want to access"
                      expressionType="Notify"
                      name="HttpRequestUrl">{{User::PackageRosieURL}}</property>
                    <property
                      dataType="System.String"
                      description="Http Web Request Method (e.g. POST, GET, PUT, LIST, DELETE...). Refer your API documentation if you are not sure which method you have to use."
                      expressionType="Notify"
                      name="HttpRequestMethod">POST</property>
                    <property
                      dataType="System.String"
                      description="Set this if you want to set custom Http headers. You may use variable anywhere in the header value using syntax {{User::YourVarName}}. Syntax of Header key value pair is : &amp;lt;request&amp;gt;&amp;lt;header&amp;gt;&amp;lt;name&amp;gt;x-myheader-1&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;AAA&amp;lt;/value&amp;gt;&amp;lt;/header&amp;gt; &amp;lt;header&amp;gt;&amp;lt;name&amp;gt;x-myheader-2&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;BBB&amp;lt;/value&amp;gt;&amp;lt;/header&amp;gt;&amp;lt;/request&amp;gt;"
                      expressionType="Notify"
                      name="HttpHeaders"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">&lt;request&gt;&lt;header&gt;&lt;name&gt;Accept&lt;/name&gt;&lt;value&gt;*/*&lt;/value&gt;&lt;/header&gt;&lt;header&gt;&lt;name&gt;Cache-Control&lt;/name&gt;&lt;value&gt;no-cache&lt;/value&gt;&lt;/header&gt;&lt;/request&gt;</property>
                    <property
                      dataType="System.String"
                      description="User defined data you wish to send along with your HTTP Request (e.g. Upload file data, Form POST data). Usually you have to set content-type of your data but if you select RequestMethod=POST then system will automatically set content-type=application/x-www-form-urlencoded."
                      expressionType="Notify"
                      name="HttpRequestData"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies content type for data you wish to POST. If you select Default option then system default content type will be used (i.e. application/x-www-form-urlencoded). If you specify Content-Type header along with this option then header value takes precedence."
                      expressionType="Notify"
                      name="HttpRequestContentType"
                      typeConverter="ZappySys.Common.Web.HttpRequestContentType, ZappySys.Common, Version=1.0.2018.11017, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                    <property
                      dataType="System.Boolean"
                      description="If this option is true then component will continue without exception on 404 error (Url not found). This allows you to consume data gracefully."
                      expressionType="Notify"
                      name="ContinueOnUrlNotFoundError">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Ignore SSL certificate related errors. Example: if you getting SSL/TLS errors because of certificate expired or certificate is not from trusted authority or certificate is self-signed. By checking this option you will not get SSL/TLS error."
                      expressionType="Notify"
                      name="IgnoreCertificateErrors">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Allow unsecure ciphers/suites and curves for SSLS/TLS communication. Use this option to communicate with web servers which needs legacy / unsecured ciphers support. This option is only trigged when you change default SSL/TLS Version on advanced settings tab."
                      expressionType="Notify"
                      name="AllowUnsecureSuite">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Enable support for gzip or deflate compression. When you check this option compressed response automatically de-compressed saving bandwidth. This option is only valid if web server supports compressed response stream. Check your API documentation for more information."
                      expressionType="Notify"
                      name="EnableCompressionSupport">true</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies which security protocol is supported for HTTPS communication. Using this option you can enable legacy protocol or enforce to use latest version of security protocol (Note: TLS 1.2 is only supported in SSIS 2014 or Higher)."
                      expressionType="Notify"
                      name="SecurityProtocol"
                      typeConverter="ZappySys.PowerPack.Common.HttpsSecurityProtocolType, ZappySys.PowerPack130, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                    <property
                      dataType="System.Int32"
                      description="Wait time in milliseconds (Pause after each request). 0=No wait. Use this delay time if your API has limit on how many requests you can make in certain time frame."
                      expressionType="Notify"
                      name="WaitTime">0</property>
                    <property
                      dataType="System.Boolean"
                      description="When you redirect error to error output by default you get additional information in ErrorMessage column. Check this option if you need exact Response Body (Useful if its in JSON/XML format which needs to be parsed for additional information for later step)."
                      expressionType="Notify"
                      name="OnErrorOutputResponseBody">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Enable multiple requests using parallel threads."
                      expressionType="Notify"
                      name="EnableParallelRequests">true</property>
                    <property
                      dataType="System.Int32"
                      description="Maximum parallel threads to use for processing multiple web requests."
                      expressionType="Notify"
                      name="MaxParallelThreads">20</property>
                    <property
                      dataType="System.Boolean"
                      description="By default one request is sent for each input row. If your API supports multiple records in a single call via HTTP Body then enable this setting. See also BodyBatchSize, BodyHeader, BodyFooter and BodyRowSeparator property."
                      expressionType="Notify"
                      name="EnableBodyBatch">false</property>
                    <property
                      dataType="System.String"
                      description="When you have to wrap input content between opening and closing tags for each call then set this property to specify opening for body content. For Example if you want to build Body like this (send max 100 rows per call) ==&gt; { records : [ {...}, {...}, {...} ] } then you can set BatchSize=100, BodyHeader as &quot;{ records: [&quot; , BodyFooter as &quot;] }&quot; and BodyRowSeperator as comma {,}. This property is ignored if EnableBodyBatch=false."
                      expressionType="Notify"
                      name="BodyHeader"></property>
                    <property
                      dataType="System.String"
                      description="When you have to wrap input content between opening and closing tags for each call then set this property to specify closing for body content. For Example if you want to build Body like this (send max 100 rows per call) ==&gt; { records : [ {...}, {...}, {...} ] } then you can set BatchSize=100, BodyHeader as &quot;{ records: [&quot; , BodyFooter as &quot;] }&quot; and BodyRowSeperator as comma {,}. This property is ignored if EnableBodyBatch=false."
                      expressionType="Notify"
                      name="BodyFooter"></property>
                    <property
                      dataType="System.Int32"
                      description="If your API supports multiple records via HTTP Body then change this setting &gt; 1 to include multiple upstream records into single call. See also BodyHeader, BodyFooter and BodyRowSeparator property. This property is ignored if EnableBodyBatch=false."
                      expressionType="Notify"
                      name="BodyBatchSize">100</property>
                    <property
                      dataType="System.String"
                      description="When you submit multiple rows in a batch you can separate multiple documents / records using custom separator (e.g. in JSON Array you can use comma {,} as record separator if POST document is in array format [ {...}, {...}, {...} ] ). For last row of batch blank separator is used."
                      expressionType="Notify"
                      name="BodyRowSeparator"></property>
                    <property
                      dataType="System.Boolean"
                      description="Returns response data as binary data (e.g. Byte Array). Check this option is response is Zip file, Image file or any non text data which needs to be exported as raw data without any encoding."
                      expressionType="Notify"
                      name="TreatResponseAsBinary">false</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">ZappySys.WebApiDestination</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Get and Upload Vendors\Partition 1\Create Contact.Connections[Connection]"
                      connectionManagerID="Package.ConnectionManagers[HTTP]"
                      connectionManagerRefId="Package.ConnectionManagers[HTTP]"
                      description="Connection manager for authentication (e.g. HTTP or OAuth Connection)"
                      name="Connection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Get and Upload Vendors\Partition 1\Create Contact.Inputs[WebApiDestinationInput]"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="WebApiDestinationInput"
                      truncationRowDisposition="FailComponent">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Create Contact.Inputs[WebApiDestinationInput].Columns[DerivedVendorJSON]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="3000"
                          cachedName="DerivedVendorJSON"
                          externalMetadataColumnId="Package\Get and Upload Vendors\Partition 1\Create Contact.Inputs[WebApiDestinationInput].ExternalColumns[HttpRequestData]"
                          lineageId="Package\Get and Upload Vendors\Partition 1\Replace Token.Outputs[Derived Column Output].Columns[DerivedVendorJSON]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Create Contact.Inputs[WebApiDestinationInput].ExternalColumns[HttpRequestUrl]"
                          dataType="wstr"
                          length="2000"
                          name="HttpRequestUrl" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Create Contact.Inputs[WebApiDestinationInput].ExternalColumns[HttpRequestData]"
                          dataType="nText"
                          name="HttpRequestData" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 1\Create Contact.Outputs[WebApiDestination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="WebApiDestination Error Output"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 1\Create Contact.Inputs[WebApiDestinationInput]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Create Contact.Outputs[WebApiDestination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 1\Create Contact.Outputs[WebApiDestination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Create Contact.Outputs[WebApiDestination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 1\Create Contact.Outputs[WebApiDestination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Create Contact.Outputs[WebApiDestination Error Output].Columns[ErrorColumnName]"
                          codePage="1252"
                          dataType="str"
                          length="128"
                          lineageId="Package\Get and Upload Vendors\Partition 1\Create Contact.Outputs[WebApiDestination Error Output].Columns[ErrorColumnName]"
                          name="ErrorColumnName" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Create Contact.Outputs[WebApiDestination Error Output].Columns[ErrorMessage]"
                          dataType="nText"
                          lineageId="Package\Get and Upload Vendors\Partition 1\Create Contact.Outputs[WebApiDestination Error Output].Columns[ErrorMessage]"
                          name="ErrorMessage" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 1\Create Contact.Outputs[Response Output]"
                      exclusionGroup="1"
                      name="Response Output"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 1\Create Contact.Inputs[WebApiDestinationInput]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Create Contact.Outputs[Response Output].Columns[ResponseText]"
                          dataType="nText"
                          lineageId="Package\Get and Upload Vendors\Partition 1\Create Contact.Outputs[Response Output].Columns[ResponseText]"
                          name="ResponseText" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Create Contact.Outputs[Response Output].Columns[StatusCode]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 1\Create Contact.Outputs[Response Output].Columns[StatusCode]"
                          name="StatusCode" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Get and Upload Vendors\Partition 1\Get Results"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="JSON Parser Transform; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                  description="Parse incoming JSON String into columns. You can also parse and transform single JSON record into multiple rows by filtering data based on JSON Path (e.g. $.Customer.Orders[*])"
                  name="Get Results"
                  usesDispositions="true"
                  version="2">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                      expressionType="Notify"
                      name="LoggingMode"
                      typeConverter="ZappySys.PowerPack.Common.LoggingMode, ZappySys.PowerPack130, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                    <property
                      dataType="System.Boolean"
                      description="When you enable this property it will prefix timestamp before Log messages."
                      expressionType="Notify"
                      name="PrefixTimestamp">false</property>
                    <property
                      dataType="System.Null"
                      expressionType="Notify"
                      name="SelfRef"
                      typeConverter="NOTBROWSABLE" />
                    <property
                      dataType="System.Boolean"
                      description="Treat empty string as NULL for any numeric data types"
                      expressionType="Notify"
                      name="TreatBlankNumberAsNull">true</property>
                    <property
                      dataType="System.Boolean"
                      description="Treat empty string as NULL for bool data types"
                      expressionType="Notify"
                      name="TreatBlankBoolAsNull">true</property>
                    <property
                      dataType="System.Boolean"
                      description="Treat empty string as NULL for any date/time data types"
                      expressionType="Notify"
                      name="TreatBlankDateAsNull">true</property>
                    <property
                      dataType="System.String"
                      description="Sample JSON data used to parse output columns."
                      expressionType="Notify"
                      name="SampleData"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">{
    "result": {
        "system_record_state": "active",
        "system_ctime": 1551864889,
        "system_modtime": 1551864889,
        "system_search_key": "Jeff test",
        "address": "1",
        "address_postal": null,
        "marketing_postcode": "ss142rq",
        "marketing_enquiry_source": null,
        "marketing_gender": null,
        "marketing_birthday": null,
        "notes": null,
        "company_name": "Jeff test",
        "company_abn": null,
        "website_url": null,
        "is_dnd": null,
        "type": "company",
        "interest_level": null,
        "last_contacted_date": null,
        "name_legal": null,
        "name_salutation": null,
        "name_addressee": null,
        "last_contacted_at": null,
        "_id": 216403,
        "etag": "216403-1551864889",
        "system_owner_user": {
            "id": "19443",
            "_name": "Rosie API",
            "_first_name": "Rosie",
            "_last_name": "API",
            "_email_address": "rosie@spicerhaart.co.uk"
        },
        "system_modified_user": {
            "id": "19443",
            "_name": "Rosie API",
            "_first_name": "Rosie",
            "_last_name": "API",
            "_email_address": "rosie@spicerhaart.co.uk"
        },
        "system_created_user": {
            "id": "19443",
            "_name": "Rosie API",
            "_first_name": "Rosie",
            "_last_name": "API",
            "_email_address": "rosie@spicerhaart.co.uk"
        },
        "contact_image": null,
        "company_size": null,
        "marketing_enquiry_method": null,
        "_related": {
            "contact_emails": [
                {
                    "email_desc": "default",
                    "email_address": "MasterDave.Davidson@anemail.com",
                    "email_primary": true,
                    "email_secondary": null,
                    "is_invalid": null,
                    "_id": 147984
                }
            ],
            "contact_phones": [
                {
                    "phone_type": "default",
                    "phone_number": "09876543210",
                    "phone_primary": true,
                    "phone_primary_sms": null,
                    "is_invalid": null,
                    "system_e164_phone_number": "+449876543210",
                    "_id": 243549,
                    "wash": {
                        "present_on_lists": [],
                        "user_override": null,
                        "allow": true
                    }
                }
            ],
            "contact_tags": [],
            "contact_documents": [],
            "contact_mailing_lists": [],
            "contact_relationships": [],
            "contact_reln_property": [],
            "contact_reln_listing": []
        },
        "address_wash": {
            "present_on_lists": [],
            "user_override": null,
            "allow": true
        },
        "address_postal_wash": null,
        "smart_categories": false,
        "_security_user_rights": [
            "read",
            "update",
            "archive",
            "trash",
            "perms"
        ]
    },
    "error": null
}</property>
                    <property
                      dataType="System.Boolean"
                      description="Include all upstream parent columns into output except the one you selected to parse. By default only parsed columns from Input document is included in the output. If you wish to include all other upstream columns in the output too then check this option."
                      expressionType="Notify"
                      name="OutputAllUpstreamColumns">false</property>
                    <property
                      dataType="System.Int32"
                      description="Maximum JSON records to fetch. Set this value to 0 for all records"
                      expressionType="Notify"
                      name="MaxRows">0</property>
                    <property
                      dataType="System.String"
                      description="Enter expression here to filter data.(Example:  $.Users[*].UserName ) This will fetch User names from users records"
                      expressionType="Notify"
                      name="Filter"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.Boolean"
                      description="Use this option to include parent properties (Non array) in the output along with Filtered Rows"
                      expressionType="Notify"
                      name="IncludeParentColumns">true</property>
                    <property
                      dataType="System.Boolean"
                      description="By default child and parent information is not included in the output if children not found for specified expression. For example if you want to extract all orders from all customers nodes then you can type $.Customers[*].Orders[*]. This will fetch all orders from all customers. By default customers records without orders wont be included in the output. If you want to include those customers where orders not found then check this option (Output null information for order attributes). This behavior is similar to LEFT OUTER JOIN in SQL (Left side is parent, right side is child). This option is ***resource intensive*** so only check if you really care about this behavior."
                      expressionType="Notify"
                      name="IncludeParentColumnsWhenChildMissing">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Set this option to true if you want to output parent columns which are array. By default any parent column which is an array is not included in output. See also FilterForParentColumnsWithArrayType property if you set this property"
                      expressionType="Notify"
                      name="IncludeParentColumnsWithArrayType">false</property>
                    <property
                      dataType="System.String"
                      description="Filter expression to extract value form parent"
                      expressionType="Notify"
                      name="FilterForParentColumnsWithArrayType"></property>
                    <property
                      dataType="System.String"
                      description="Prefix for parent column name. This option is only valid if you have set IncludeParentColumns=True"
                      expressionType="Notify"
                      name="ParentColumnPrefix">P_</property>
                    <property
                      dataType="System.Boolean"
                      description="Throw error if property name specified in filter expression is missing. By default it will ignore any missing property errors."
                      expressionType="Notify"
                      name="ThrowErrorIfPropertyMissing">false</property>
                    <property
                      dataType="System.Int32"
                      description="This property how many nested levels should be scanned to fetch various properties. 0=Scan all child levels."
                      expressionType="Notify"
                      name="MaxLevelsToScan">0</property>
                    <property
                      dataType="System.String"
                      description="List comma separated property names from JSON document which you want to exclude from output. Specify parent property name to exclude all child nodes."
                      expressionType="Notify"
                      name="ExcludedProperties"></property>
                    <property
                      dataType="System.String"
                      description="Property level separator used in generated property name (separator for outer properties - Above selected filter node). Use this if default separator is producing duplicate property name which is conflicting with existing name."
                      expressionType="Notify"
                      name="LevelSeparator">_</property>
                    <property
                      dataType="System.Boolean"
                      description="Enables deep array flattening for selected filtered hierarchy. When you turn on this property it will flatten each property of each array item and expose as column (e.g. If you have Filter set as $.customers[*] and for each customer you have an array of Addresses then you may see output columns like Addresses.1.City, Addresses.1.State, Addresses.2.City, Addresses.2.State .... Addresses.N.City, Addresses.N.State). You can control how many array items you want to flatten by setting MaxArrayItemsToFlatten property."
                      expressionType="Notify"
                      name="EnableArrayFlattening">false</property>
                    <property
                      dataType="System.Int32"
                      description="Maximum number of array items to flatten. inner array flattening. Adjust this property to control how many columns being generated. This option is ignored if you set EnableArrayFlattening=false"
                      expressionType="Notify"
                      name="MaxArrayItemsToFlatten">10</property>
                    <property
                      dataType="System.String"
                      description="Specifies how custom date formatted strings are parsed when reading JSON."
                      expressionType="Notify"
                      name="DateFormatString"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies how date formatted strings, e.g. Date(1198908717056) and 2012-03-21T05:40Z, are parsed when reading JSON."
                      expressionType="Notify"
                      name="DateParseHandling"
                      typeConverter="ZappySys.Common.DateParseHandling, ZappySys.Common, Version=1.0.2018.11017, Culture=neutral, PublicKeyToken=1903265a93eae502">1</property>
                    <property
                      dataType="System.Boolean"
                      description="Output as raw JSON document rather than parsing individual fields. This option is helpful if you have documents stored in a file and you want to pass them downstream as raw JSON string rather than parsing into columns."
                      expressionType="Notify"
                      name="OutputRawDocument">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indent JSON output so its easy to read."
                      expressionType="Notify"
                      name="IndentOutput">false</property>
                    <property
                      dataType="System.Boolean"
                      description="When this property is true then Column is converted to Row. Pivoted names will appear under  Pivot_Name column and values will appear under Pivot_Value field."
                      expressionType="Notify"
                      name="EnablePivot">false</property>
                    <property
                      dataType="System.Int32"
                      description="Array Transformation you want to apply. Useful for case when you have 2-Dimensional arrays with rows/columns in separate arrays."
                      expressionType="Notify"
                      name="ArrayTransformationType"
                      typeConverter="ZappySys.Json.ArrayTransformType, ZappySys.Json, Version=1.0.2018.11017, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                    <property
                      dataType="System.String"
                      description="Filter expression to use to extract column names for array transformation."
                      expressionType="Notify"
                      name="ArrayTransColumnNameFilter"></property>
                    <property
                      dataType="System.String"
                      description="Filter expression for row values (Not applicable for simple array transformation)."
                      expressionType="Notify"
                      name="ArrayTransRowValueFilter"></property>
                    <property
                      dataType="System.Boolean"
                      description="When you have 2D array but don't have column list specified in a separate array then use this option (e.g. { arr: [[10,11],[21,22]] } )."
                      expressionType="Notify"
                      name="ArrayTransEnableCustomColumns">false</property>
                    <property
                      dataType="System.String"
                      description="When you have 2D array but don't have column list specified in a separate array then use specify column names here. Use comma separated list (e.g col1,col2,col3 ). Column name Order must match value order."
                      expressionType="Notify"
                      name="ArrayTransCustomColumns"></property>
                    <property
                      dataType="System.Int32"
                      description="Metadata scan mode controls how data type and length is determined. By default few records scanned to determine datatype/length. Changing ScanMode affects length/datatype accuracy."
                      expressionType="Notify"
                      name="MetaDataScanMode"
                      typeConverter="ZappySys.Common.Data.MetaDataScanMode, ZappySys.Common, Version=1.0.2018.11017, Culture=neutral, PublicKeyToken=1903265a93eae502">4</property>
                    <property
                      dataType="System.Int32"
                      description="Length for all string column. This option is only valid for MetaDataScanMode=Custom"
                      expressionType="Notify"
                      name="MetaDataCustomLength">1000</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">ZappySys.JsonParserTransform</property>
                    <property
                      dataType="System.Int32"
                      name="EmptyInputProcessingMode">0</property>
                    <property
                      dataType="System.String"
                      name="TreatEmptyInputAs">{ }</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Get and Upload Vendors\Partition 1\Get Results.Inputs[JsonParserTransformInput]"
                      errorRowDisposition="FailComponent"
                      name="JsonParserTransformInput"
                      truncationRowDisposition="FailComponent">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Get Results.Inputs[JsonParserTransformInput].Columns[ResponseText]"
                          cachedDataType="nText"
                          cachedName="ResponseText"
                          lineageId="Package\Get and Upload Vendors\Partition 1\Create Contact.Outputs[Response Output].Columns[ResponseText]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True" />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 1\Get Results.Outputs[JsonParserTransformOutput]"
                      errorOrTruncationOperation="Error"
                      errorRowDisposition="FailComponent"
                      name="JsonParserTransformOutput"
                      truncationRowDisposition="FailComponent">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Get Results.Outputs[JsonParserTransformOutput].Columns[result.notes]"
                          dataType="wstr"
                          externalMetadataColumnId="Package\Get and Upload Vendors\Partition 1\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.notes]"
                          length="1020"
                          lineageId="Package\Get and Upload Vendors\Partition 1\Get Results.Outputs[JsonParserTransformOutput].Columns[result.notes]"
                          name="result.notes" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Get Results.Outputs[JsonParserTransformOutput].Columns[result._id]"
                          dataType="i8"
                          externalMetadataColumnId="Package\Get and Upload Vendors\Partition 1\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result._id]"
                          lineageId="Package\Get and Upload Vendors\Partition 1\Get Results.Outputs[JsonParserTransformOutput].Columns[result._id]"
                          name="result._id" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Get Results.Outputs[JsonParserTransformOutput].Columns[result.etag]"
                          dataType="wstr"
                          externalMetadataColumnId="Package\Get and Upload Vendors\Partition 1\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.etag]"
                          length="68"
                          lineageId="Package\Get and Upload Vendors\Partition 1\Get Results.Outputs[JsonParserTransformOutput].Columns[result.etag]"
                          name="result.etag" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Get Results.Outputs[JsonParserTransformOutput].Columns[error]"
                          dataType="wstr"
                          externalMetadataColumnId="Package\Get and Upload Vendors\Partition 1\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[error]"
                          length="1020"
                          lineageId="Package\Get and Upload Vendors\Partition 1\Get Results.Outputs[JsonParserTransformOutput].Columns[error]"
                          name="error" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.system_record_state]"
                          dataType="wstr"
                          length="24"
                          name="result.system_record_state" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.system_ctime]"
                          dataType="i8"
                          name="result.system_ctime" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.system_modtime]"
                          dataType="i8"
                          name="result.system_modtime" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.system_search_key]"
                          dataType="wstr"
                          length="36"
                          name="result.system_search_key" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.address]"
                          dataType="wstr"
                          length="4"
                          name="result.address" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.address_postal]"
                          dataType="wstr"
                          length="1020"
                          name="result.address_postal" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.marketing_postcode]"
                          dataType="wstr"
                          length="28"
                          name="result.marketing_postcode" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.marketing_enquiry_source]"
                          dataType="wstr"
                          length="1020"
                          name="result.marketing_enquiry_source" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.marketing_gender]"
                          dataType="wstr"
                          length="1020"
                          name="result.marketing_gender" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.marketing_birthday]"
                          dataType="wstr"
                          length="1020"
                          name="result.marketing_birthday" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.notes]"
                          dataType="wstr"
                          length="1020"
                          name="result.notes" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.company_name]"
                          dataType="wstr"
                          length="36"
                          name="result.company_name" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.company_abn]"
                          dataType="wstr"
                          length="1020"
                          name="result.company_abn" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.website_url]"
                          dataType="wstr"
                          length="1020"
                          name="result.website_url" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.is_dnd]"
                          dataType="wstr"
                          length="1020"
                          name="result.is_dnd" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.type]"
                          dataType="wstr"
                          length="28"
                          name="result.type" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.interest_level]"
                          dataType="wstr"
                          length="1020"
                          name="result.interest_level" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.last_contacted_date]"
                          dataType="wstr"
                          length="1020"
                          name="result.last_contacted_date" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.name_legal]"
                          dataType="wstr"
                          length="1020"
                          name="result.name_legal" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.name_salutation]"
                          dataType="wstr"
                          length="1020"
                          name="result.name_salutation" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.name_addressee]"
                          dataType="wstr"
                          length="1020"
                          name="result.name_addressee" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.last_contacted_at]"
                          dataType="wstr"
                          length="1020"
                          name="result.last_contacted_at" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result._id]"
                          dataType="i8"
                          name="result._id" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.etag]"
                          dataType="wstr"
                          length="68"
                          name="result.etag" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.system_owner_user.id]"
                          dataType="wstr"
                          length="20"
                          name="result.system_owner_user.id" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.system_owner_user._name]"
                          dataType="wstr"
                          length="36"
                          name="result.system_owner_user._name" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.system_owner_user._first_name]"
                          dataType="wstr"
                          length="20"
                          name="result.system_owner_user._first_name" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.system_owner_user._last_name]"
                          dataType="wstr"
                          length="12"
                          name="result.system_owner_user._last_name" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.system_owner_user._email_address]"
                          dataType="wstr"
                          length="92"
                          name="result.system_owner_user._email_address" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.system_modified_user.id]"
                          dataType="wstr"
                          length="20"
                          name="result.system_modified_user.id" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.system_modified_user._name]"
                          dataType="wstr"
                          length="36"
                          name="result.system_modified_user._name" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.system_modified_user._first_name]"
                          dataType="wstr"
                          length="20"
                          name="result.system_modified_user._first_name" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.system_modified_user._last_name]"
                          dataType="wstr"
                          length="12"
                          name="result.system_modified_user._last_name" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.system_modified_user._email_address]"
                          dataType="wstr"
                          length="92"
                          name="result.system_modified_user._email_address" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.system_created_user.id]"
                          dataType="wstr"
                          length="20"
                          name="result.system_created_user.id" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.system_created_user._name]"
                          dataType="wstr"
                          length="36"
                          name="result.system_created_user._name" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.system_created_user._first_name]"
                          dataType="wstr"
                          length="20"
                          name="result.system_created_user._first_name" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.system_created_user._last_name]"
                          dataType="wstr"
                          length="12"
                          name="result.system_created_user._last_name" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.system_created_user._email_address]"
                          dataType="wstr"
                          length="92"
                          name="result.system_created_user._email_address" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.contact_image]"
                          dataType="wstr"
                          length="1020"
                          name="result.contact_image" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.company_size]"
                          dataType="wstr"
                          length="1020"
                          name="result.company_size" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.marketing_enquiry_method]"
                          dataType="wstr"
                          length="1020"
                          name="result.marketing_enquiry_method" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result._related.contact_emails]"
                          dataType="wstr"
                          length="812"
                          name="result._related.contact_emails" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result._related.contact_phones]"
                          dataType="wstr"
                          length="1356"
                          name="result._related.contact_phones" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result._related.contact_tags]"
                          dataType="wstr"
                          length="8"
                          name="result._related.contact_tags" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result._related.contact_documents]"
                          dataType="wstr"
                          length="8"
                          name="result._related.contact_documents" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result._related.contact_mailing_lists]"
                          dataType="wstr"
                          length="8"
                          name="result._related.contact_mailing_lists" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result._related.contact_relationships]"
                          dataType="wstr"
                          length="8"
                          name="result._related.contact_relationships" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result._related.contact_reln_property]"
                          dataType="wstr"
                          length="8"
                          name="result._related.contact_reln_property" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result._related.contact_reln_listing]"
                          dataType="wstr"
                          length="8"
                          name="result._related.contact_reln_listing" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.address_wash.present_on_lists]"
                          dataType="wstr"
                          length="8"
                          name="result.address_wash.present_on_lists" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.address_wash.user_override]"
                          dataType="wstr"
                          length="1020"
                          name="result.address_wash.user_override" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.address_wash.allow]"
                          dataType="bool"
                          name="result.address_wash.allow" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.address_postal_wash]"
                          dataType="wstr"
                          length="1020"
                          name="result.address_postal_wash" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.smart_categories]"
                          dataType="bool"
                          name="result.smart_categories" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result._security_user_rights]"
                          dataType="wstr"
                          length="260"
                          name="result._security_user_rights" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[error]"
                          dataType="wstr"
                          length="1020"
                          name="error" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 1\Get Results.Outputs[JsonParserTransform Error Output]"
                      isErrorOut="true"
                      name="JsonParserTransform Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Get Results.Outputs[JsonParserTransform Error Output].Columns[result.notes]"
                          dataType="wstr"
                          length="1020"
                          lineageId="Package\Get and Upload Vendors\Partition 1\Get Results.Outputs[JsonParserTransform Error Output].Columns[result.notes]"
                          name="result.notes" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Get Results.Outputs[JsonParserTransform Error Output].Columns[result._id]"
                          dataType="i8"
                          lineageId="Package\Get and Upload Vendors\Partition 1\Get Results.Outputs[JsonParserTransform Error Output].Columns[result._id]"
                          name="result._id" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Get Results.Outputs[JsonParserTransform Error Output].Columns[result.etag]"
                          dataType="wstr"
                          length="68"
                          lineageId="Package\Get and Upload Vendors\Partition 1\Get Results.Outputs[JsonParserTransform Error Output].Columns[result.etag]"
                          name="result.etag" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Get Results.Outputs[JsonParserTransform Error Output].Columns[error]"
                          dataType="wstr"
                          length="1020"
                          lineageId="Package\Get and Upload Vendors\Partition 1\Get Results.Outputs[JsonParserTransform Error Output].Columns[error]"
                          name="error" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Get Results.Outputs[JsonParserTransform Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 1\Get Results.Outputs[JsonParserTransform Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Get Results.Outputs[JsonParserTransform Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 1\Get Results.Outputs[JsonParserTransform Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Get Results.Outputs[JsonParserTransform Error Output].Columns[ErrorColumnName]"
                          codePage="1252"
                          dataType="str"
                          length="128"
                          lineageId="Package\Get and Upload Vendors\Partition 1\Get Results.Outputs[JsonParserTransform Error Output].Columns[ErrorColumnName]"
                          name="ErrorColumnName" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Get Results.Outputs[JsonParserTransform Error Output].Columns[ErrorMessage]"
                          dataType="wstr"
                          length="1024"
                          lineageId="Package\Get and Upload Vendors\Partition 1\Get Results.Outputs[JsonParserTransform Error Output].Columns[ErrorMessage]"
                          name="ErrorMessage" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Get Results.Outputs[JsonParserTransform Error Output].Columns[ErrorRawData]"
                          dataType="nText"
                          lineageId="Package\Get and Upload Vendors\Partition 1\Get Results.Outputs[JsonParserTransform Error Output].Columns[ErrorRawData]"
                          name="ErrorRawData" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Get and Upload Vendors\Partition 1\Get Vendors List"
                  componentClassID="Microsoft.OLEDBSource"
                  contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                  description="OLE DB Source"
                  name="Get Vendors List"
                  usesDispositions="true"
                  version="7">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset"></property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">SELECT * FROM ROSIE_ContactPush_staging WITH (NOLOCK) WHERE office_id = ? and entitytype = 1 and partition = 1</property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">2</property>
                    <property
                      dataType="System.String"
                      description="The mappings between the parameters in the SQL command and variables."
                      name="ParameterMapping">"@office_id:Input",{F3CDF2B4-5AA9-4436-972D-BB303A4202B3};</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Get and Upload Vendors\Partition 1\Get Vendors List.Connections[OleDbConnection]"
                      connectionManagerID="{78432CA1-1FEA-4ED4-9C0F-D552A4A9DE0E}:external"
                      connectionManagerRefId="Project.ConnectionManagers[InternetDB]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 1\Get Vendors List.Outputs[OLE DB Source Output]"
                      name="OLE DB Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Get Vendors List.Outputs[OLE DB Source Output].Columns[CustJSON]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Get and Upload Vendors\Partition 1\Get Vendors List.Outputs[OLE DB Source Output].ExternalColumns[CustJSON]"
                          length="3000"
                          lineageId="Package\Get and Upload Vendors\Partition 1\Get Vendors List.Outputs[OLE DB Source Output].Columns[CustJSON]"
                          name="CustJSON"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Get Vendors List.Outputs[OLE DB Source Output].Columns[AMLCheck]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Get and Upload Vendors\Partition 1\Get Vendors List.Outputs[OLE DB Source Output].ExternalColumns[AMLCheck]"
                          lineageId="Package\Get and Upload Vendors\Partition 1\Get Vendors List.Outputs[OLE DB Source Output].Columns[AMLCheck]"
                          name="AMLCheck"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Get Vendors List.Outputs[OLE DB Source Output].Columns[AMLJSON]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Get and Upload Vendors\Partition 1\Get Vendors List.Outputs[OLE DB Source Output].ExternalColumns[AMLJSON]"
                          length="3000"
                          lineageId="Package\Get and Upload Vendors\Partition 1\Get Vendors List.Outputs[OLE DB Source Output].Columns[AMLJSON]"
                          name="AMLJSON"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Get Vendors List.Outputs[OLE DB Source Output].Columns[office_id]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Get and Upload Vendors\Partition 1\Get Vendors List.Outputs[OLE DB Source Output].ExternalColumns[office_id]"
                          length="4"
                          lineageId="Package\Get and Upload Vendors\Partition 1\Get Vendors List.Outputs[OLE DB Source Output].Columns[office_id]"
                          name="office_id"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Get Vendors List.Outputs[OLE DB Source Output].Columns[Partition]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Get and Upload Vendors\Partition 1\Get Vendors List.Outputs[OLE DB Source Output].ExternalColumns[Partition]"
                          lineageId="Package\Get and Upload Vendors\Partition 1\Get Vendors List.Outputs[OLE DB Source Output].Columns[Partition]"
                          name="Partition"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Get Vendors List.Outputs[OLE DB Source Output].Columns[IDCHECKJSON]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Get and Upload Vendors\Partition 1\Get Vendors List.Outputs[OLE DB Source Output].ExternalColumns[IDCHECKJSON]"
                          length="3000"
                          lineageId="Package\Get and Upload Vendors\Partition 1\Get Vendors List.Outputs[OLE DB Source Output].Columns[IDCHECKJSON]"
                          name="IDCHECKJSON"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Get Vendors List.Outputs[OLE DB Source Output].Columns[ContactJSON]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Get and Upload Vendors\Partition 1\Get Vendors List.Outputs[OLE DB Source Output].ExternalColumns[ContactJSON]"
                          length="3000"
                          lineageId="Package\Get and Upload Vendors\Partition 1\Get Vendors List.Outputs[OLE DB Source Output].Columns[ContactJSON]"
                          name="ContactJSON"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Get Vendors List.Outputs[OLE DB Source Output].Columns[Reference]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Get and Upload Vendors\Partition 1\Get Vendors List.Outputs[OLE DB Source Output].ExternalColumns[Reference]"
                          length="25"
                          lineageId="Package\Get and Upload Vendors\Partition 1\Get Vendors List.Outputs[OLE DB Source Output].Columns[Reference]"
                          name="Reference"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Get Vendors List.Outputs[OLE DB Source Output].Columns[entityType]"
                          dataType="ui1"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Get and Upload Vendors\Partition 1\Get Vendors List.Outputs[OLE DB Source Output].ExternalColumns[entityType]"
                          lineageId="Package\Get and Upload Vendors\Partition 1\Get Vendors List.Outputs[OLE DB Source Output].Columns[entityType]"
                          name="entityType"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Get Vendors List.Outputs[OLE DB Source Output].ExternalColumns[CustJSON]"
                          codePage="1252"
                          dataType="str"
                          length="3000"
                          name="CustJSON" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Get Vendors List.Outputs[OLE DB Source Output].ExternalColumns[AMLCheck]"
                          dataType="i4"
                          name="AMLCheck" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Get Vendors List.Outputs[OLE DB Source Output].ExternalColumns[AMLJSON]"
                          codePage="1252"
                          dataType="str"
                          length="3000"
                          name="AMLJSON" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Get Vendors List.Outputs[OLE DB Source Output].ExternalColumns[office_id]"
                          codePage="1252"
                          dataType="str"
                          length="4"
                          name="office_id" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Get Vendors List.Outputs[OLE DB Source Output].ExternalColumns[Partition]"
                          dataType="i4"
                          name="Partition" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Get Vendors List.Outputs[OLE DB Source Output].ExternalColumns[IDCHECKJSON]"
                          codePage="1252"
                          dataType="str"
                          length="3000"
                          name="IDCHECKJSON" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Get Vendors List.Outputs[OLE DB Source Output].ExternalColumns[ContactJSON]"
                          codePage="1252"
                          dataType="str"
                          length="3000"
                          name="ContactJSON" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Get Vendors List.Outputs[OLE DB Source Output].ExternalColumns[Reference]"
                          codePage="1252"
                          dataType="str"
                          length="25"
                          name="Reference" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Get Vendors List.Outputs[OLE DB Source Output].ExternalColumns[entityType]"
                          dataType="ui1"
                          name="entityType" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 1\Get Vendors List.Outputs[OLE DB Source Error Output]"
                      isErrorOut="true"
                      name="OLE DB Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Get Vendors List.Outputs[OLE DB Source Error Output].Columns[ContactJSON]"
                          codePage="1252"
                          dataType="str"
                          length="3000"
                          lineageId="Package\Get and Upload Vendors\Partition 1\Get Vendors List.Outputs[OLE DB Source Error Output].Columns[ContactJSON]"
                          name="ContactJSON" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Get Vendors List.Outputs[OLE DB Source Error Output].Columns[Reference]"
                          codePage="1252"
                          dataType="str"
                          length="25"
                          lineageId="Package\Get and Upload Vendors\Partition 1\Get Vendors List.Outputs[OLE DB Source Error Output].Columns[Reference]"
                          name="Reference" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Get Vendors List.Outputs[OLE DB Source Error Output].Columns[CustJSON]"
                          codePage="1252"
                          dataType="str"
                          length="3000"
                          lineageId="Package\Get and Upload Vendors\Partition 1\Get Vendors List.Outputs[OLE DB Source Error Output].Columns[CustJSON]"
                          name="CustJSON" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Get Vendors List.Outputs[OLE DB Source Error Output].Columns[AMLCheck]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 1\Get Vendors List.Outputs[OLE DB Source Error Output].Columns[AMLCheck]"
                          name="AMLCheck" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Get Vendors List.Outputs[OLE DB Source Error Output].Columns[AMLJSON]"
                          codePage="1252"
                          dataType="str"
                          length="3000"
                          lineageId="Package\Get and Upload Vendors\Partition 1\Get Vendors List.Outputs[OLE DB Source Error Output].Columns[AMLJSON]"
                          name="AMLJSON" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Get Vendors List.Outputs[OLE DB Source Error Output].Columns[office_id]"
                          codePage="1252"
                          dataType="str"
                          length="4"
                          lineageId="Package\Get and Upload Vendors\Partition 1\Get Vendors List.Outputs[OLE DB Source Error Output].Columns[office_id]"
                          name="office_id" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Get Vendors List.Outputs[OLE DB Source Error Output].Columns[Partition]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 1\Get Vendors List.Outputs[OLE DB Source Error Output].Columns[Partition]"
                          name="Partition" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Get Vendors List.Outputs[OLE DB Source Error Output].Columns[IDCHECKJSON]"
                          codePage="1252"
                          dataType="str"
                          length="3000"
                          lineageId="Package\Get and Upload Vendors\Partition 1\Get Vendors List.Outputs[OLE DB Source Error Output].Columns[IDCHECKJSON]"
                          name="IDCHECKJSON" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Get Vendors List.Outputs[OLE DB Source Error Output].Columns[entityType]"
                          dataType="ui1"
                          lineageId="Package\Get and Upload Vendors\Partition 1\Get Vendors List.Outputs[OLE DB Source Error Output].Columns[entityType]"
                          name="entityType" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Get Vendors List.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 1\Get Vendors List.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Get Vendors List.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 1\Get Vendors List.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Get and Upload Vendors\Partition 1\Lookup"
                  componentClassID="Microsoft.Lookup"
                  contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
                  description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                  name="Lookup"
                  usesDispositions="true"
                  version="6">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the SQL statement that generates the lookup table."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">SELECT * FROM ROSIE_ContactPush_staging WITH (NOLOCK)
Where entitytype = 1</property>
                    <property
                      dataType="System.String"
                      description="Specifies a SQL statement that uses parameters to generate the lookup table."
                      expressionType="Notify"
                      name="SqlCommandParam"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from (SELECT * FROM ROSIE_ContactPush_staging WITH (NOLOCK)
Where entitytype = 1) [refTable]
where [refTable].[Reference] = ? and [refTable].[office_id] = ?</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the type of connection used to access the reference dataset."
                      name="ConnectionType"
                      typeConverter="LookupConnectionType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the cache type of the lookup table."
                      name="CacheType"
                      typeConverter="CacheType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                      name="NoMatchBehavior"
                      typeConverter="LookupNoMatchBehavior">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                      name="NoMatchCachePercentage">0</property>
                    <property
                      dataType="System.Int32"
                      description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                      name="MaxMemoryUsage">25</property>
                    <property
                      dataType="System.Int64"
                      description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                      name="MaxMemoryUsage64">25</property>
                    <property
                      dataType="System.String"
                      description="Indicates whether to reference metadata in an XML format."
                      name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="ContactJSON" dataType="DT_STR" length="3000" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="Reference" dataType="DT_STR" length="25" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="CustJSON" dataType="DT_STR" length="3000" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="AMLCheck" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="AMLJSON" dataType="DT_STR" length="3000" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="office_id" dataType="DT_STR" length="4" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="Partition" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="IDCHECKJSON" dataType="DT_STR" length="3000" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="entityType" dataType="DT_UI1" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                      name="ParameterMap">#{Package\Get and Upload Vendors\Partition 1\Map Results 1.Outputs[Derived Column Output].Columns[prop_ref]};#{Package\Get and Upload Vendors\Partition 1\Map Results 1.Outputs[Derived Column Output].Columns[office_Id]};</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                      name="TreatDuplicateKeysAsError">false</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Get and Upload Vendors\Partition 1\Lookup.Connections[OleDbConnection]"
                      connectionManagerID="{78432CA1-1FEA-4ED4-9C0F-D552A4A9DE0E}:external"
                      connectionManagerRefId="Project.ConnectionManagers[InternetDB]"
                      description="Connection manager used to access lookup data."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Get and Upload Vendors\Partition 1\Lookup.Inputs[Lookup Input]"
                      name="Lookup Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Lookup.Inputs[Lookup Input].Columns[office_Id]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="4"
                          cachedName="office_Id"
                          lineageId="Package\Get and Upload Vendors\Partition 1\Map Results 1.Outputs[Derived Column Output].Columns[office_Id]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">office_id</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Lookup.Inputs[Lookup Input].Columns[prop_ref]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="prop_ref"
                          lineageId="Package\Get and Upload Vendors\Partition 1\Map Results 1.Outputs[Derived Column Output].Columns[prop_ref]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">Reference</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 1\Lookup.Outputs[Lookup Match Output]"
                      errorOrTruncationOperation="Lookup"
                      errorRowDisposition="IgnoreFailure"
                      exclusionGroup="1"
                      name="Lookup Match Output"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 1\Lookup.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Lookup.Outputs[Lookup Match Output].Columns[office_id]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Copy Column"
                          length="4"
                          lineageId="Package\Get and Upload Vendors\Partition 1\Lookup.Outputs[Lookup Match Output].Columns[office_id]"
                          name="office_id"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">office_id</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Lookup.Outputs[Lookup Match Output].Columns[CustJSON]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Copy Column"
                          length="3000"
                          lineageId="Package\Get and Upload Vendors\Partition 1\Lookup.Outputs[Lookup Match Output].Columns[CustJSON]"
                          name="CustJSON"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">CustJSON</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Lookup.Outputs[Lookup Match Output].Columns[AMLCheck]"
                          dataType="i4"
                          errorOrTruncationOperation="Copy Column"
                          lineageId="Package\Get and Upload Vendors\Partition 1\Lookup.Outputs[Lookup Match Output].Columns[AMLCheck]"
                          name="AMLCheck"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">AMLCheck</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Lookup.Outputs[Lookup Match Output].Columns[AMLJSON]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Copy Column"
                          length="3000"
                          lineageId="Package\Get and Upload Vendors\Partition 1\Lookup.Outputs[Lookup Match Output].Columns[AMLJSON]"
                          name="AMLJSON"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">AMLJSON</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Lookup.Outputs[Lookup Match Output].Columns[IDCHECKJSON]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Copy Column"
                          length="3000"
                          lineageId="Package\Get and Upload Vendors\Partition 1\Lookup.Outputs[Lookup Match Output].Columns[IDCHECKJSON]"
                          name="IDCHECKJSON"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">IDCHECKJSON</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Lookup.Outputs[Lookup Match Output].Columns[ContactJSON]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Copy Column"
                          length="3000"
                          lineageId="Package\Get and Upload Vendors\Partition 1\Lookup.Outputs[Lookup Match Output].Columns[ContactJSON]"
                          name="ContactJSON"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">ContactJSON</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Lookup.Outputs[Lookup Match Output].Columns[Reference]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Copy Column"
                          length="25"
                          lineageId="Package\Get and Upload Vendors\Partition 1\Lookup.Outputs[Lookup Match Output].Columns[Reference]"
                          name="Reference"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">Reference</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 1\Lookup.Outputs[Lookup No Match Output]"
                      description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                      exclusionGroup="1"
                      name="Lookup No Match Output"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 1\Lookup.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 1\Lookup.Outputs[Lookup Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Lookup Error Output"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 1\Lookup.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Lookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 1\Lookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Lookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 1\Lookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Get and Upload Vendors\Partition 1\Main Record Count"
                  componentClassID="Microsoft.RowCount"
                  contactInfo="Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status."
                  name="Main Record Count">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the variable to hold the row count."
                      name="VariableName">User::RecCountProcessed</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Get and Upload Vendors\Partition 1\Main Record Count.Inputs[Row Count Input 1]"
                      hasSideEffects="true"
                      name="Row Count Input 1">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 1\Main Record Count.Outputs[Row Count Output 1]"
                      name="Row Count Output 1"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 1\Main Record Count.Inputs[Row Count Input 1]">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Get and Upload Vendors\Partition 1\Map Results 1"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Map Results 1"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Get and Upload Vendors\Partition 1\Map Results 1.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Map Results 1.Inputs[Derived Column Input].Columns[result.notes]"
                          cachedDataType="wstr"
                          cachedLength="1020"
                          cachedName="result.notes"
                          lineageId="Package\Get and Upload Vendors\Partition 1\Get Results.Outputs[JsonParserTransformOutput].Columns[result.notes]" />
                        <inputColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Map Results 1.Inputs[Derived Column Input].Columns[result._id]"
                          cachedDataType="i8"
                          cachedName="result._id"
                          lineageId="Package\Get and Upload Vendors\Partition 1\Get Results.Outputs[JsonParserTransformOutput].Columns[result._id]" />
                        <inputColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Map Results 1.Inputs[Derived Column Input].Columns[result.etag]"
                          cachedDataType="wstr"
                          cachedLength="68"
                          cachedName="result.etag"
                          lineageId="Package\Get and Upload Vendors\Partition 1\Get Results.Outputs[JsonParserTransformOutput].Columns[result.etag]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 1\Map Results 1.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 1\Map Results 1.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Map Results 1.Outputs[Derived Column Output].Columns[prop_ref]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Get and Upload Vendors\Partition 1\Map Results 1.Outputs[Derived Column Output].Columns[prop_ref]"
                          name="prop_ref"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_STR,50,1252)#{Package\Get and Upload Vendors\Partition 1\Get Results.Outputs[JsonParserTransformOutput].Columns[result.notes]}</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_STR,50,1252)[result.notes]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Map Results 1.Outputs[Derived Column Output].Columns[office_Id]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="4"
                          lineageId="Package\Get and Upload Vendors\Partition 1\Map Results 1.Outputs[Derived Column Output].Columns[office_Id]"
                          name="office_Id"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_STR,4,1252)@[$Package::PackageOfficeID]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_STR,4,1252)@[$Package::PackageOfficeID]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Map Results 1.Outputs[Derived Column Output].Columns[etag_contact]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="80"
                          lineageId="Package\Get and Upload Vendors\Partition 1\Map Results 1.Outputs[Derived Column Output].Columns[etag_contact]"
                          name="etag_contact"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_STR,80,1252)#{Package\Get and Upload Vendors\Partition 1\Get Results.Outputs[JsonParserTransformOutput].Columns[result.etag]}</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_STR,80,1252)[result.etag]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Map Results 1.Outputs[Derived Column Output].Columns[rid_contact]"
                          dataType="i8"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Get and Upload Vendors\Partition 1\Map Results 1.Outputs[Derived Column Output].Columns[rid_contact]"
                          name="rid_contact"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">#{Package\Get and Upload Vendors\Partition 1\Get Results.Outputs[JsonParserTransformOutput].Columns[result._id]}</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">[result._id]</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 1\Map Results 1.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 1\Map Results 1.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Map Results 1.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 1\Map Results 1.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Map Results 1.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 1\Map Results 1.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Get and Upload Vendors\Partition 1\Multicast"
                  componentClassID="Microsoft.Multicast"
                  contactInfo="Multicast;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Distributes every input row to every row in one or more outputs. For example, branch your data flow to make a copy of data so that some values can be masked before sharing with external partners."
                  name="Multicast">
                  <inputs>
                    <input
                      refId="Package\Get and Upload Vendors\Partition 1\Multicast.Inputs[Multicast Input 1]"
                      name="Multicast Input 1">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 1\Multicast.Outputs[Multicast Output 1]"
                      deleteOutputOnPathDetached="true"
                      name="Multicast Output 1"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 1\Multicast.Inputs[Multicast Input 1]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 1\Multicast.Outputs[Multicast Output 3]"
                      deleteOutputOnPathDetached="true"
                      name="Multicast Output 3"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 1\Multicast.Inputs[Multicast Input 1]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 1\Multicast.Outputs[Multicast Output 2]"
                      deleteOutputOnPathDetached="true"
                      name="Multicast Output 2"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 1\Multicast.Inputs[Multicast Input 1]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 1\Multicast.Outputs[Multicast Output 4]"
                      dangling="true"
                      deleteOutputOnPathDetached="true"
                      name="Multicast Output 4"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 1\Multicast.Inputs[Multicast Input 1]">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Get and Upload Vendors\Partition 1\Multicast 1"
                  componentClassID="Microsoft.Multicast"
                  contactInfo="Multicast;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Distributes every input row to every row in one or more outputs. For example, branch your data flow to make a copy of data so that some values can be masked before sharing with external partners."
                  name="Multicast 1">
                  <inputs>
                    <input
                      refId="Package\Get and Upload Vendors\Partition 1\Multicast 1.Inputs[Multicast Input 1]"
                      name="Multicast Input 1">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 1\Multicast 1.Outputs[Multicast Output 1]"
                      deleteOutputOnPathDetached="true"
                      name="Multicast Output 1"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 1\Multicast 1.Inputs[Multicast Input 1]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 1\Multicast 1.Outputs[Multicast Output 3]"
                      deleteOutputOnPathDetached="true"
                      name="Multicast Output 3"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 1\Multicast 1.Inputs[Multicast Input 1]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 1\Multicast 1.Outputs[Multicast Output 4]"
                      dangling="true"
                      deleteOutputOnPathDetached="true"
                      name="Multicast Output 4"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 1\Multicast 1.Inputs[Multicast Input 1]">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Get and Upload Vendors\Partition 1\Push Custom Fields"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Web API Destination; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                  description="The Web API destination can be used to send data to Web API URL (e.g. Submit or POST data to REST API/SOAP or other HTTP/HTTPS endpoints)"
                  name="Push Custom Fields"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                      expressionType="Notify"
                      name="LoggingMode"
                      typeConverter="ZappySys.PowerPack.Common.LoggingMode, ZappySys.PowerPack130, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                    <property
                      dataType="System.Boolean"
                      description="When you enable this property it will prefix timestamp before Log messages."
                      expressionType="Notify"
                      name="PrefixTimestamp">false</property>
                    <property
                      dataType="System.Null"
                      expressionType="Notify"
                      name="SelfRef"
                      typeConverter="NOTBROWSABLE" />
                    <property
                      dataType="System.String"
                      description="API URL you want to access"
                      expressionType="Notify"
                      name="HttpRequestUrl">{{User::PackageRosieURL}}</property>
                    <property
                      dataType="System.String"
                      description="Http Web Request Method (e.g. POST, GET, PUT, LIST, DELETE...). Refer your API documentation if you are not sure which method you have to use."
                      expressionType="Notify"
                      name="HttpRequestMethod">POST</property>
                    <property
                      dataType="System.String"
                      description="Set this if you want to set custom Http headers. You may use variable anywhere in the header value using syntax {{User::YourVarName}}. Syntax of Header key value pair is : &amp;lt;request&amp;gt;&amp;lt;header&amp;gt;&amp;lt;name&amp;gt;x-myheader-1&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;AAA&amp;lt;/value&amp;gt;&amp;lt;/header&amp;gt; &amp;lt;header&amp;gt;&amp;lt;name&amp;gt;x-myheader-2&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;BBB&amp;lt;/value&amp;gt;&amp;lt;/header&amp;gt;&amp;lt;/request&amp;gt;"
                      expressionType="Notify"
                      name="HttpHeaders"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">&lt;request&gt;&lt;header&gt;&lt;name&gt;Accept&lt;/name&gt;&lt;value&gt;*/*&lt;/value&gt;&lt;/header&gt;&lt;header&gt;&lt;name&gt;Cache-Control&lt;/name&gt;&lt;value&gt;no-cache&lt;/value&gt;&lt;/header&gt;&lt;/request&gt;</property>
                    <property
                      dataType="System.String"
                      description="User defined data you wish to send along with your HTTP Request (e.g. Upload file data, Form POST data). Usually you have to set content-type of your data but if you select RequestMethod=POST then system will automatically set content-type=application/x-www-form-urlencoded."
                      expressionType="Notify"
                      name="HttpRequestData"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies content type for data you wish to POST. If you select Default option then system default content type will be used (i.e. application/x-www-form-urlencoded). If you specify Content-Type header along with this option then header value takes precedence."
                      expressionType="Notify"
                      name="HttpRequestContentType"
                      typeConverter="ZappySys.Common.Web.HttpRequestContentType, ZappySys.Common, Version=1.0.2018.11017, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                    <property
                      dataType="System.Boolean"
                      description="If this option is true then component will continue without exception on 404 error (Url not found). This allows you to consume data gracefully."
                      expressionType="Notify"
                      name="ContinueOnUrlNotFoundError">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Ignore SSL certificate related errors. Example: if you getting SSL/TLS errors because of certificate expired or certificate is not from trusted authority or certificate is self-signed. By checking this option you will not get SSL/TLS error."
                      expressionType="Notify"
                      name="IgnoreCertificateErrors">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Allow unsecure ciphers/suites and curves for SSLS/TLS communication. Use this option to communicate with web servers which needs legacy / unsecured ciphers support. This option is only trigged when you change default SSL/TLS Version on advanced settings tab."
                      expressionType="Notify"
                      name="AllowUnsecureSuite">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Enable support for gzip or deflate compression. When you check this option compressed response automatically de-compressed saving bandwidth. This option is only valid if web server supports compressed response stream. Check your API documentation for more information."
                      expressionType="Notify"
                      name="EnableCompressionSupport">true</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies which security protocol is supported for HTTPS communication. Using this option you can enable legacy protocol or enforce to use latest version of security protocol (Note: TLS 1.2 is only supported in SSIS 2014 or Higher)."
                      expressionType="Notify"
                      name="SecurityProtocol"
                      typeConverter="ZappySys.PowerPack.Common.HttpsSecurityProtocolType, ZappySys.PowerPack130, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                    <property
                      dataType="System.Int32"
                      description="Wait time in milliseconds (Pause after each request). 0=No wait. Use this delay time if your API has limit on how many requests you can make in certain time frame."
                      expressionType="Notify"
                      name="WaitTime">0</property>
                    <property
                      dataType="System.Boolean"
                      description="When you redirect error to error output by default you get additional information in ErrorMessage column. Check this option if you need exact Response Body (Useful if its in JSON/XML format which needs to be parsed for additional information for later step)."
                      expressionType="Notify"
                      name="OnErrorOutputResponseBody">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Enable multiple requests using parallel threads."
                      expressionType="Notify"
                      name="EnableParallelRequests">true</property>
                    <property
                      dataType="System.Int32"
                      description="Maximum parallel threads to use for processing multiple web requests."
                      expressionType="Notify"
                      name="MaxParallelThreads">20</property>
                    <property
                      dataType="System.Boolean"
                      description="By default one request is sent for each input row. If your API supports multiple records in a single call via HTTP Body then enable this setting. See also BodyBatchSize, BodyHeader, BodyFooter and BodyRowSeparator property."
                      expressionType="Notify"
                      name="EnableBodyBatch">false</property>
                    <property
                      dataType="System.String"
                      description="When you have to wrap input content between opening and closing tags for each call then set this property to specify opening for body content. For Example if you want to build Body like this (send max 100 rows per call) ==&gt; { records : [ {...}, {...}, {...} ] } then you can set BatchSize=100, BodyHeader as &quot;{ records: [&quot; , BodyFooter as &quot;] }&quot; and BodyRowSeperator as comma {,}. This property is ignored if EnableBodyBatch=false."
                      expressionType="Notify"
                      name="BodyHeader"></property>
                    <property
                      dataType="System.String"
                      description="When you have to wrap input content between opening and closing tags for each call then set this property to specify closing for body content. For Example if you want to build Body like this (send max 100 rows per call) ==&gt; { records : [ {...}, {...}, {...} ] } then you can set BatchSize=100, BodyHeader as &quot;{ records: [&quot; , BodyFooter as &quot;] }&quot; and BodyRowSeperator as comma {,}. This property is ignored if EnableBodyBatch=false."
                      expressionType="Notify"
                      name="BodyFooter"></property>
                    <property
                      dataType="System.Int32"
                      description="If your API supports multiple records via HTTP Body then change this setting &gt; 1 to include multiple upstream records into single call. See also BodyHeader, BodyFooter and BodyRowSeparator property. This property is ignored if EnableBodyBatch=false."
                      expressionType="Notify"
                      name="BodyBatchSize">100</property>
                    <property
                      dataType="System.String"
                      description="When you submit multiple rows in a batch you can separate multiple documents / records using custom separator (e.g. in JSON Array you can use comma {,} as record separator if POST document is in array format [ {...}, {...}, {...} ] ). For last row of batch blank separator is used."
                      expressionType="Notify"
                      name="BodyRowSeparator"></property>
                    <property
                      dataType="System.Boolean"
                      description="Returns response data as binary data (e.g. Byte Array). Check this option is response is Zip file, Image file or any non text data which needs to be exported as raw data without any encoding."
                      expressionType="Notify"
                      name="TreatResponseAsBinary">false</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">ZappySys.WebApiDestination</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Get and Upload Vendors\Partition 1\Push Custom Fields.Connections[Connection]"
                      connectionManagerID="Package.ConnectionManagers[HTTP]"
                      connectionManagerRefId="Package.ConnectionManagers[HTTP]"
                      description="Connection manager for authentication (e.g. HTTP or OAuth Connection)"
                      name="Connection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Get and Upload Vendors\Partition 1\Push Custom Fields.Inputs[WebApiDestinationInput]"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="WebApiDestinationInput"
                      truncationRowDisposition="FailComponent">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Push Custom Fields.Inputs[WebApiDestinationInput].Columns[DerivedCustomJSON]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="3000"
                          cachedName="DerivedCustomJSON"
                          externalMetadataColumnId="Package\Get and Upload Vendors\Partition 1\Push Custom Fields.Inputs[WebApiDestinationInput].ExternalColumns[HttpRequestData]"
                          lineageId="Package\Get and Upload Vendors\Partition 1\Replace Rid_contact and prop_ref.Outputs[Derived Column Output].Columns[DerivedCustomJSON]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Push Custom Fields.Inputs[WebApiDestinationInput].ExternalColumns[HttpRequestUrl]"
                          dataType="wstr"
                          length="2000"
                          name="HttpRequestUrl" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Push Custom Fields.Inputs[WebApiDestinationInput].ExternalColumns[HttpRequestData]"
                          dataType="nText"
                          name="HttpRequestData" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 1\Push Custom Fields.Outputs[WebApiDestination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="WebApiDestination Error Output"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 1\Push Custom Fields.Inputs[WebApiDestinationInput]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Push Custom Fields.Outputs[WebApiDestination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 1\Push Custom Fields.Outputs[WebApiDestination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Push Custom Fields.Outputs[WebApiDestination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 1\Push Custom Fields.Outputs[WebApiDestination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Push Custom Fields.Outputs[WebApiDestination Error Output].Columns[ErrorColumnName]"
                          codePage="1252"
                          dataType="str"
                          length="128"
                          lineageId="Package\Get and Upload Vendors\Partition 1\Push Custom Fields.Outputs[WebApiDestination Error Output].Columns[ErrorColumnName]"
                          name="ErrorColumnName" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Push Custom Fields.Outputs[WebApiDestination Error Output].Columns[ErrorMessage]"
                          dataType="nText"
                          lineageId="Package\Get and Upload Vendors\Partition 1\Push Custom Fields.Outputs[WebApiDestination Error Output].Columns[ErrorMessage]"
                          name="ErrorMessage" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 1\Push Custom Fields.Outputs[Response Output]"
                      exclusionGroup="1"
                      name="Response Output"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 1\Push Custom Fields.Inputs[WebApiDestinationInput]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Push Custom Fields.Outputs[Response Output].Columns[ResponseText]"
                          dataType="nText"
                          lineageId="Package\Get and Upload Vendors\Partition 1\Push Custom Fields.Outputs[Response Output].Columns[ResponseText]"
                          name="ResponseText" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Push Custom Fields.Outputs[Response Output].Columns[StatusCode]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 1\Push Custom Fields.Outputs[Response Output].Columns[StatusCode]"
                          name="StatusCode" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Get and Upload Vendors\Partition 1\Push ID Check Data 1"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Web API Destination; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                  description="The Web API destination can be used to send data to Web API URL (e.g. Submit or POST data to REST API/SOAP or other HTTP/HTTPS endpoints)"
                  name="Push ID Check Data 1"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                      expressionType="Notify"
                      name="LoggingMode"
                      typeConverter="ZappySys.PowerPack.Common.LoggingMode, ZappySys.PowerPack130, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                    <property
                      dataType="System.Boolean"
                      description="When you enable this property it will prefix timestamp before Log messages."
                      expressionType="Notify"
                      name="PrefixTimestamp">false</property>
                    <property
                      dataType="System.Null"
                      expressionType="Notify"
                      name="SelfRef"
                      typeConverter="NOTBROWSABLE" />
                    <property
                      dataType="System.String"
                      description="API URL you want to access"
                      expressionType="Notify"
                      name="HttpRequestUrl">{{User::PackageRosieURL}}</property>
                    <property
                      dataType="System.String"
                      description="Http Web Request Method (e.g. POST, GET, PUT, LIST, DELETE...). Refer your API documentation if you are not sure which method you have to use."
                      expressionType="Notify"
                      name="HttpRequestMethod">POST</property>
                    <property
                      dataType="System.String"
                      description="Set this if you want to set custom Http headers. You may use variable anywhere in the header value using syntax {{User::YourVarName}}. Syntax of Header key value pair is : &amp;lt;request&amp;gt;&amp;lt;header&amp;gt;&amp;lt;name&amp;gt;x-myheader-1&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;AAA&amp;lt;/value&amp;gt;&amp;lt;/header&amp;gt; &amp;lt;header&amp;gt;&amp;lt;name&amp;gt;x-myheader-2&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;BBB&amp;lt;/value&amp;gt;&amp;lt;/header&amp;gt;&amp;lt;/request&amp;gt;"
                      expressionType="Notify"
                      name="HttpHeaders"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">&lt;request&gt;&lt;header&gt;&lt;name&gt;Accept&lt;/name&gt;&lt;value&gt;*/*&lt;/value&gt;&lt;/header&gt;&lt;header&gt;&lt;name&gt;Cache-Control&lt;/name&gt;&lt;value&gt;no-cache&lt;/value&gt;&lt;/header&gt;&lt;/request&gt;</property>
                    <property
                      dataType="System.String"
                      description="User defined data you wish to send along with your HTTP Request (e.g. Upload file data, Form POST data). Usually you have to set content-type of your data but if you select RequestMethod=POST then system will automatically set content-type=application/x-www-form-urlencoded."
                      expressionType="Notify"
                      name="HttpRequestData"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies content type for data you wish to POST. If you select Default option then system default content type will be used (i.e. application/x-www-form-urlencoded). If you specify Content-Type header along with this option then header value takes precedence."
                      expressionType="Notify"
                      name="HttpRequestContentType"
                      typeConverter="ZappySys.Common.Web.HttpRequestContentType, ZappySys.Common, Version=1.0.2018.11017, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                    <property
                      dataType="System.Boolean"
                      description="If this option is true then component will continue without exception on 404 error (Url not found). This allows you to consume data gracefully."
                      expressionType="Notify"
                      name="ContinueOnUrlNotFoundError">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Ignore SSL certificate related errors. Example: if you getting SSL/TLS errors because of certificate expired or certificate is not from trusted authority or certificate is self-signed. By checking this option you will not get SSL/TLS error."
                      expressionType="Notify"
                      name="IgnoreCertificateErrors">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Allow unsecure ciphers/suites and curves for SSLS/TLS communication. Use this option to communicate with web servers which needs legacy / unsecured ciphers support. This option is only trigged when you change default SSL/TLS Version on advanced settings tab."
                      expressionType="Notify"
                      name="AllowUnsecureSuite">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Enable support for gzip or deflate compression. When you check this option compressed response automatically de-compressed saving bandwidth. This option is only valid if web server supports compressed response stream. Check your API documentation for more information."
                      expressionType="Notify"
                      name="EnableCompressionSupport">true</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies which security protocol is supported for HTTPS communication. Using this option you can enable legacy protocol or enforce to use latest version of security protocol (Note: TLS 1.2 is only supported in SSIS 2014 or Higher)."
                      expressionType="Notify"
                      name="SecurityProtocol"
                      typeConverter="ZappySys.PowerPack.Common.HttpsSecurityProtocolType, ZappySys.PowerPack130, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                    <property
                      dataType="System.Int32"
                      description="Wait time in milliseconds (Pause after each request). 0=No wait. Use this delay time if your API has limit on how many requests you can make in certain time frame."
                      expressionType="Notify"
                      name="WaitTime">0</property>
                    <property
                      dataType="System.Boolean"
                      description="When you redirect error to error output by default you get additional information in ErrorMessage column. Check this option if you need exact Response Body (Useful if its in JSON/XML format which needs to be parsed for additional information for later step)."
                      expressionType="Notify"
                      name="OnErrorOutputResponseBody">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Enable multiple requests using parallel threads."
                      expressionType="Notify"
                      name="EnableParallelRequests">true</property>
                    <property
                      dataType="System.Int32"
                      description="Maximum parallel threads to use for processing multiple web requests."
                      expressionType="Notify"
                      name="MaxParallelThreads">20</property>
                    <property
                      dataType="System.Boolean"
                      description="By default one request is sent for each input row. If your API supports multiple records in a single call via HTTP Body then enable this setting. See also BodyBatchSize, BodyHeader, BodyFooter and BodyRowSeparator property."
                      expressionType="Notify"
                      name="EnableBodyBatch">false</property>
                    <property
                      dataType="System.String"
                      description="When you have to wrap input content between opening and closing tags for each call then set this property to specify opening for body content. For Example if you want to build Body like this (send max 100 rows per call) ==&gt; { records : [ {...}, {...}, {...} ] } then you can set BatchSize=100, BodyHeader as &quot;{ records: [&quot; , BodyFooter as &quot;] }&quot; and BodyRowSeperator as comma {,}. This property is ignored if EnableBodyBatch=false."
                      expressionType="Notify"
                      name="BodyHeader"></property>
                    <property
                      dataType="System.String"
                      description="When you have to wrap input content between opening and closing tags for each call then set this property to specify closing for body content. For Example if you want to build Body like this (send max 100 rows per call) ==&gt; { records : [ {...}, {...}, {...} ] } then you can set BatchSize=100, BodyHeader as &quot;{ records: [&quot; , BodyFooter as &quot;] }&quot; and BodyRowSeperator as comma {,}. This property is ignored if EnableBodyBatch=false."
                      expressionType="Notify"
                      name="BodyFooter"></property>
                    <property
                      dataType="System.Int32"
                      description="If your API supports multiple records via HTTP Body then change this setting &gt; 1 to include multiple upstream records into single call. See also BodyHeader, BodyFooter and BodyRowSeparator property. This property is ignored if EnableBodyBatch=false."
                      expressionType="Notify"
                      name="BodyBatchSize">100</property>
                    <property
                      dataType="System.String"
                      description="When you submit multiple rows in a batch you can separate multiple documents / records using custom separator (e.g. in JSON Array you can use comma {,} as record separator if POST document is in array format [ {...}, {...}, {...} ] ). For last row of batch blank separator is used."
                      expressionType="Notify"
                      name="BodyRowSeparator"></property>
                    <property
                      dataType="System.Boolean"
                      description="Returns response data as binary data (e.g. Byte Array). Check this option is response is Zip file, Image file or any non text data which needs to be exported as raw data without any encoding."
                      expressionType="Notify"
                      name="TreatResponseAsBinary">false</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">ZappySys.WebApiDestination</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Get and Upload Vendors\Partition 1\Push ID Check Data 1.Connections[Connection]"
                      connectionManagerID="Package.ConnectionManagers[HTTP]"
                      connectionManagerRefId="Package.ConnectionManagers[HTTP]"
                      description="Connection manager for authentication (e.g. HTTP or OAuth Connection)"
                      name="Connection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Get and Upload Vendors\Partition 1\Push ID Check Data 1.Inputs[WebApiDestinationInput]"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="WebApiDestinationInput"
                      truncationRowDisposition="FailComponent">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Push ID Check Data 1.Inputs[WebApiDestinationInput].Columns[DerivedIDCheckJSON]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="3000"
                          cachedName="DerivedIDCheckJSON"
                          externalMetadataColumnId="Package\Get and Upload Vendors\Partition 1\Push ID Check Data 1.Inputs[WebApiDestinationInput].ExternalColumns[HttpRequestData]"
                          lineageId="Package\Get and Upload Vendors\Partition 1\Replace Rid_contact and prop_ref.Outputs[Derived Column Output].Columns[DerivedIDCheckJSON]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Push ID Check Data 1.Inputs[WebApiDestinationInput].ExternalColumns[HttpRequestUrl]"
                          dataType="wstr"
                          length="2000"
                          name="HttpRequestUrl" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Push ID Check Data 1.Inputs[WebApiDestinationInput].ExternalColumns[HttpRequestData]"
                          dataType="nText"
                          name="HttpRequestData" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 1\Push ID Check Data 1.Outputs[WebApiDestination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="WebApiDestination Error Output"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 1\Push ID Check Data 1.Inputs[WebApiDestinationInput]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Push ID Check Data 1.Outputs[WebApiDestination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 1\Push ID Check Data 1.Outputs[WebApiDestination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Push ID Check Data 1.Outputs[WebApiDestination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 1\Push ID Check Data 1.Outputs[WebApiDestination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Push ID Check Data 1.Outputs[WebApiDestination Error Output].Columns[ErrorColumnName]"
                          codePage="1252"
                          dataType="str"
                          length="128"
                          lineageId="Package\Get and Upload Vendors\Partition 1\Push ID Check Data 1.Outputs[WebApiDestination Error Output].Columns[ErrorColumnName]"
                          name="ErrorColumnName" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Push ID Check Data 1.Outputs[WebApiDestination Error Output].Columns[ErrorMessage]"
                          dataType="nText"
                          lineageId="Package\Get and Upload Vendors\Partition 1\Push ID Check Data 1.Outputs[WebApiDestination Error Output].Columns[ErrorMessage]"
                          name="ErrorMessage" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 1\Push ID Check Data 1.Outputs[Response Output]"
                      exclusionGroup="1"
                      name="Response Output"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 1\Push ID Check Data 1.Inputs[WebApiDestinationInput]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Push ID Check Data 1.Outputs[Response Output].Columns[ResponseText]"
                          dataType="nText"
                          lineageId="Package\Get and Upload Vendors\Partition 1\Push ID Check Data 1.Outputs[Response Output].Columns[ResponseText]"
                          name="ResponseText" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Push ID Check Data 1.Outputs[Response Output].Columns[StatusCode]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 1\Push ID Check Data 1.Outputs[Response Output].Columns[StatusCode]"
                          name="StatusCode" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Get and Upload Vendors\Partition 1\Replace Rid_contact and prop_ref"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Replace Rid_contact and prop_ref"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Get and Upload Vendors\Partition 1\Replace Rid_contact and prop_ref.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Replace Rid_contact and prop_ref.Inputs[Derived Column Input].Columns[rid_contact]"
                          cachedDataType="i8"
                          cachedName="rid_contact"
                          lineageId="Package\Get and Upload Vendors\Partition 1\Map Results 1.Outputs[Derived Column Output].Columns[rid_contact]" />
                        <inputColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Replace Rid_contact and prop_ref.Inputs[Derived Column Input].Columns[DerivedCustomJSON]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="3000"
                          cachedName="DerivedCustomJSON"
                          lineageId="Package\Get and Upload Vendors\Partition 1\Replace Token 1 1.Outputs[Derived Column Output].Columns[DerivedCustomJSON]" />
                        <inputColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Replace Rid_contact and prop_ref.Inputs[Derived Column Input].Columns[prop_ref]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="prop_ref"
                          lineageId="Package\Get and Upload Vendors\Partition 1\Map Results 1.Outputs[Derived Column Output].Columns[prop_ref]" />
                        <inputColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Replace Rid_contact and prop_ref.Inputs[Derived Column Input].Columns[DerivedAMLJSON]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="3000"
                          cachedName="DerivedAMLJSON"
                          lineageId="Package\Get and Upload Vendors\Partition 1\Replace Token 1 1.Outputs[Derived Column Output].Columns[DerivedAMLJSON]" />
                        <inputColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Replace Rid_contact and prop_ref.Inputs[Derived Column Input].Columns[DerivedIDCheckJSON]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="3000"
                          cachedName="DerivedIDCheckJSON"
                          lineageId="Package\Get and Upload Vendors\Partition 1\Replace Token 1 1.Outputs[Derived Column Output].Columns[DerivedIDCheckJSON]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 1\Replace Rid_contact and prop_ref.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 1\Replace Rid_contact and prop_ref.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Replace Rid_contact and prop_ref.Outputs[Derived Column Output].Columns[DerivedCustomJSON]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="3000"
                          lineageId="Package\Get and Upload Vendors\Partition 1\Replace Rid_contact and prop_ref.Outputs[Derived Column Output].Columns[DerivedCustomJSON]"
                          name="DerivedCustomJSON"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_STR,3000,1252)([REPLACE]([REPLACE](#{Package\Get and Upload Vendors\Partition 1\Replace Token 1 1.Outputs[Derived Column Output].Columns[DerivedCustomJSON]},"{{RID_CONTACT}}",(DT_STR,30,1252)#{Package\Get and Upload Vendors\Partition 1\Map Results 1.Outputs[Derived Column Output].Columns[rid_contact]}),"{{PROP_REF}}",[REPLACE]([REPLACE](#{Package\Get and Upload Vendors\Partition 1\Map Results 1.Outputs[Derived Column Output].Columns[prop_ref]},"VENDOR1_",""),"VENDOR2_","")))</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_STR,3000,1252)(REPLACE(REPLACE(DerivedCustomJSON,"{{RID_CONTACT}}",(DT_STR,30,1252)rid_contact),"{{PROP_REF}}",REPLACE(REPLACE(prop_ref,"VENDOR1_",""),"VENDOR2_","")))</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Replace Rid_contact and prop_ref.Outputs[Derived Column Output].Columns[DerivedAMLJSON]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="3000"
                          lineageId="Package\Get and Upload Vendors\Partition 1\Replace Rid_contact and prop_ref.Outputs[Derived Column Output].Columns[DerivedAMLJSON]"
                          name="DerivedAMLJSON"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_STR,3000,1252)[REPLACE](#{Package\Get and Upload Vendors\Partition 1\Replace Token 1 1.Outputs[Derived Column Output].Columns[DerivedAMLJSON]},"{{RID_CONTACT}}",(DT_STR,30,1252)#{Package\Get and Upload Vendors\Partition 1\Map Results 1.Outputs[Derived Column Output].Columns[rid_contact]})</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_STR,3000,1252)REPLACE(DerivedAMLJSON,"{{RID_CONTACT}}",(DT_STR,30,1252)rid_contact)</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Replace Rid_contact and prop_ref.Outputs[Derived Column Output].Columns[DerivedIDCheckJSON]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="3000"
                          lineageId="Package\Get and Upload Vendors\Partition 1\Replace Rid_contact and prop_ref.Outputs[Derived Column Output].Columns[DerivedIDCheckJSON]"
                          name="DerivedIDCheckJSON"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_STR,3000,1252)[REPLACE](#{Package\Get and Upload Vendors\Partition 1\Replace Token 1 1.Outputs[Derived Column Output].Columns[DerivedIDCheckJSON]},"{{RID_CONTACT}}",(DT_STR,30,1252)#{Package\Get and Upload Vendors\Partition 1\Map Results 1.Outputs[Derived Column Output].Columns[rid_contact]})</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_STR,3000,1252)REPLACE(DerivedIDCheckJSON,"{{RID_CONTACT}}",(DT_STR,30,1252)rid_contact)</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 1\Replace Rid_contact and prop_ref.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 1\Replace Rid_contact and prop_ref.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Replace Rid_contact and prop_ref.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 1\Replace Rid_contact and prop_ref.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Replace Rid_contact and prop_ref.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 1\Replace Rid_contact and prop_ref.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Get and Upload Vendors\Partition 1\Replace Token"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Replace Token"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Get and Upload Vendors\Partition 1\Replace Token.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Replace Token.Inputs[Derived Column Input].Columns[CustJSON]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="3000"
                          cachedName="CustJSON"
                          lineageId="Package\Get and Upload Vendors\Partition 1\Get Vendors List.Outputs[OLE DB Source Output].Columns[CustJSON]" />
                        <inputColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Replace Token.Inputs[Derived Column Input].Columns[AMLJSON]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="3000"
                          cachedName="AMLJSON"
                          lineageId="Package\Get and Upload Vendors\Partition 1\Get Vendors List.Outputs[OLE DB Source Output].Columns[AMLJSON]" />
                        <inputColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Replace Token.Inputs[Derived Column Input].Columns[IDCHECKJSON]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="3000"
                          cachedName="IDCHECKJSON"
                          lineageId="Package\Get and Upload Vendors\Partition 1\Get Vendors List.Outputs[OLE DB Source Output].Columns[IDCHECKJSON]" />
                        <inputColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Replace Token.Inputs[Derived Column Input].Columns[ContactJSON]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="3000"
                          cachedName="ContactJSON"
                          lineageId="Package\Get and Upload Vendors\Partition 1\Get Vendors List.Outputs[OLE DB Source Output].Columns[ContactJSON]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 1\Replace Token.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 1\Replace Token.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Replace Token.Outputs[Derived Column Output].Columns[DerivedVendorJSON]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="3000"
                          lineageId="Package\Get and Upload Vendors\Partition 1\Replace Token.Outputs[Derived Column Output].Columns[DerivedVendorJSON]"
                          name="DerivedVendorJSON"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_STR,3000,1252)[REPLACE](#{Package\Get and Upload Vendors\Partition 1\Get Vendors List.Outputs[OLE DB Source Output].Columns[ContactJSON]},"{{TOKEN}}",@[User::APIToken])</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_STR,3000,1252)REPLACE(ContactJSON,"{{TOKEN}}",@[User::APIToken])</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Replace Token.Outputs[Derived Column Output].Columns[DerivedCustomJSON]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="3000"
                          lineageId="Package\Get and Upload Vendors\Partition 1\Replace Token.Outputs[Derived Column Output].Columns[DerivedCustomJSON]"
                          name="DerivedCustomJSON"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_STR,3000,1252)([REPLACE](#{Package\Get and Upload Vendors\Partition 1\Get Vendors List.Outputs[OLE DB Source Output].Columns[CustJSON]},"{{TOKEN}}",@[User::APIToken]))</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_STR,3000,1252)(REPLACE(CustJSON,"{{TOKEN}}",@[User::APIToken]))</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Replace Token.Outputs[Derived Column Output].Columns[DerivedAMLJSON]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="3000"
                          lineageId="Package\Get and Upload Vendors\Partition 1\Replace Token.Outputs[Derived Column Output].Columns[DerivedAMLJSON]"
                          name="DerivedAMLJSON"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_STR,3000,1252)([REPLACE](#{Package\Get and Upload Vendors\Partition 1\Get Vendors List.Outputs[OLE DB Source Output].Columns[AMLJSON]},"{{TOKEN}}",@[User::APIToken]))</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_STR,3000,1252)(REPLACE(AMLJSON,"{{TOKEN}}",@[User::APIToken]))</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Replace Token.Outputs[Derived Column Output].Columns[DerivedIDCheckJSON]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="3000"
                          lineageId="Package\Get and Upload Vendors\Partition 1\Replace Token.Outputs[Derived Column Output].Columns[DerivedIDCheckJSON]"
                          name="DerivedIDCheckJSON"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_STR,3000,1252)([REPLACE](#{Package\Get and Upload Vendors\Partition 1\Get Vendors List.Outputs[OLE DB Source Output].Columns[IDCHECKJSON]},"{{TOKEN}}",@[User::APIToken]))</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_STR,3000,1252)(REPLACE(IDCHECKJSON,"{{TOKEN}}",@[User::APIToken]))</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 1\Replace Token.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 1\Replace Token.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Replace Token.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 1\Replace Token.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Replace Token.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 1\Replace Token.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Get and Upload Vendors\Partition 1\Replace Token 1 1"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Replace Token 1 1"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Get and Upload Vendors\Partition 1\Replace Token 1 1.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Replace Token 1 1.Inputs[Derived Column Input].Columns[CustJSON]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="3000"
                          cachedName="CustJSON"
                          lineageId="Package\Get and Upload Vendors\Partition 1\Lookup.Outputs[Lookup Match Output].Columns[CustJSON]" />
                        <inputColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Replace Token 1 1.Inputs[Derived Column Input].Columns[AMLJSON]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="3000"
                          cachedName="AMLJSON"
                          lineageId="Package\Get and Upload Vendors\Partition 1\Lookup.Outputs[Lookup Match Output].Columns[AMLJSON]" />
                        <inputColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Replace Token 1 1.Inputs[Derived Column Input].Columns[IDCHECKJSON]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="3000"
                          cachedName="IDCHECKJSON"
                          lineageId="Package\Get and Upload Vendors\Partition 1\Lookup.Outputs[Lookup Match Output].Columns[IDCHECKJSON]" />
                        <inputColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Replace Token 1 1.Inputs[Derived Column Input].Columns[ContactJSON]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="3000"
                          cachedName="ContactJSON"
                          lineageId="Package\Get and Upload Vendors\Partition 1\Lookup.Outputs[Lookup Match Output].Columns[ContactJSON]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 1\Replace Token 1 1.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 1\Replace Token 1 1.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Replace Token 1 1.Outputs[Derived Column Output].Columns[DerivedVendorJSON]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="3000"
                          lineageId="Package\Get and Upload Vendors\Partition 1\Replace Token 1 1.Outputs[Derived Column Output].Columns[DerivedVendorJSON]"
                          name="DerivedVendorJSON"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_STR,3000,1252)[REPLACE](#{Package\Get and Upload Vendors\Partition 1\Lookup.Outputs[Lookup Match Output].Columns[ContactJSON]},"{{TOKEN}}",@[User::APIToken])</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_STR,3000,1252)REPLACE(ContactJSON,"{{TOKEN}}",@[User::APIToken])</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Replace Token 1 1.Outputs[Derived Column Output].Columns[DerivedCustomJSON]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="3000"
                          lineageId="Package\Get and Upload Vendors\Partition 1\Replace Token 1 1.Outputs[Derived Column Output].Columns[DerivedCustomJSON]"
                          name="DerivedCustomJSON"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_STR,3000,1252)([REPLACE](#{Package\Get and Upload Vendors\Partition 1\Lookup.Outputs[Lookup Match Output].Columns[CustJSON]},"{{TOKEN}}",@[User::APIToken]))</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_STR,3000,1252)(REPLACE(CustJSON,"{{TOKEN}}",@[User::APIToken]))</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Replace Token 1 1.Outputs[Derived Column Output].Columns[DerivedAMLJSON]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="3000"
                          lineageId="Package\Get and Upload Vendors\Partition 1\Replace Token 1 1.Outputs[Derived Column Output].Columns[DerivedAMLJSON]"
                          name="DerivedAMLJSON"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_STR,3000,1252)([REPLACE](#{Package\Get and Upload Vendors\Partition 1\Lookup.Outputs[Lookup Match Output].Columns[AMLJSON]},"{{TOKEN}}",@[User::APIToken]))</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_STR,3000,1252)(REPLACE(AMLJSON,"{{TOKEN}}",@[User::APIToken]))</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Replace Token 1 1.Outputs[Derived Column Output].Columns[DerivedIDCheckJSON]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="3000"
                          lineageId="Package\Get and Upload Vendors\Partition 1\Replace Token 1 1.Outputs[Derived Column Output].Columns[DerivedIDCheckJSON]"
                          name="DerivedIDCheckJSON"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_STR,3000,1252)([REPLACE](#{Package\Get and Upload Vendors\Partition 1\Lookup.Outputs[Lookup Match Output].Columns[IDCHECKJSON]},"{{TOKEN}}",@[User::APIToken]))</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_STR,3000,1252)(REPLACE(IDCHECKJSON,"{{TOKEN}}",@[User::APIToken]))</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 1\Replace Token 1 1.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 1\Replace Token 1 1.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Replace Token 1 1.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 1\Replace Token 1 1.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Replace Token 1 1.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 1\Replace Token 1 1.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Get and Upload Vendors\Partition 1\Row Count Success"
                  componentClassID="Microsoft.RowCount"
                  contactInfo="Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status."
                  name="Row Count Success">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the variable to hold the row count."
                      name="VariableName">User::RecCountSuccess</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Get and Upload Vendors\Partition 1\Row Count Success.Inputs[Row Count Input 1]"
                      hasSideEffects="true"
                      name="Row Count Input 1">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 1\Row Count Success.Outputs[Row Count Output 1]"
                      name="Row Count Output 1"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 1\Row Count Success.Inputs[Row Count Input 1]">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Get and Upload Vendors\Partition 1\Trash Destination 1"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Trash Destination; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                  description="The trash destination is used to create dummy destination which ends data path without any processing."
                  name="Trash Destination 1"
                  version="2">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                      expressionType="Notify"
                      name="LoggingMode"
                      typeConverter="ZappySys.PowerPack.Common.LoggingMode, ZappySys.PowerPack130, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                    <property
                      dataType="System.Boolean"
                      description="When you enable this property it will prefix timestamp before Log messages."
                      expressionType="Notify"
                      name="PrefixTimestamp">false</property>
                    <property
                      dataType="System.Null"
                      expressionType="Notify"
                      name="SelfRef"
                      typeConverter="NOTBROWSABLE" />
                    <property
                      dataType="System.String"
                      description="File path where you want to save data"
                      expressionType="Notify"
                      name="FilePath"></property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates if you want to save input data to comma separated text file"
                      expressionType="Notify"
                      name="SaveDataToFile">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Append data to file"
                      expressionType="Notify"
                      name="Append">false</property>
                    <property
                      dataType="System.String"
                      description="RowSeparator"
                      expressionType="Notify"
                      name="RowSeparator">{NEWLINE}</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether you want to overwrite target file if exists"
                      expressionType="Notify"
                      name="OverwriteFileIfExists">true</property>
                    <property
                      dataType="System.String"
                      description="ColumnSeparator"
                      expressionType="Notify"
                      name="ColumnSeparator">,</property>
                    <property
                      dataType="System.Boolean"
                      description="SupportUnicode"
                      expressionType="Notify"
                      name="SupportUnicode">true</property>
                    <property
                      dataType="System.Boolean"
                      description="ColumnNamesInFirstRow"
                      expressionType="Notify"
                      name="ColumnNamesInFirstRow">true</property>
                    <property
                      dataType="System.Boolean"
                      description="QuoteDataIfNeeded"
                      expressionType="Notify"
                      name="QuoteDataIfNeeded">true</property>
                    <property
                      dataType="System.String"
                      description="Date time format string for any column with DT_DBDATETIME, DT_DBDATETIME2 or DB_DATE format"
                      expressionType="Notify"
                      name="DateTimeFormat">yyyy-MM-dd HH:mm:ss</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">ZappySys.TrashDestination</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Get and Upload Vendors\Partition 1\Trash Destination 1.Inputs[TrashDestinationInput]"
                      hasSideEffects="true"
                      name="TrashDestinationInput">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                </component>
                <component
                  refId="Package\Get and Upload Vendors\Partition 1\Trash Destination 1 1"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Trash Destination; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                  description="The trash destination is used to create dummy destination which ends data path without any processing."
                  name="Trash Destination 1 1"
                  version="2">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                      expressionType="Notify"
                      name="LoggingMode"
                      typeConverter="ZappySys.PowerPack.Common.LoggingMode, ZappySys.PowerPack130, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                    <property
                      dataType="System.Boolean"
                      description="When you enable this property it will prefix timestamp before Log messages."
                      expressionType="Notify"
                      name="PrefixTimestamp">false</property>
                    <property
                      dataType="System.Null"
                      expressionType="Notify"
                      name="SelfRef"
                      typeConverter="NOTBROWSABLE" />
                    <property
                      dataType="System.String"
                      description="File path where you want to save data"
                      expressionType="Notify"
                      name="FilePath"></property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates if you want to save input data to comma separated text file"
                      expressionType="Notify"
                      name="SaveDataToFile">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Append data to file"
                      expressionType="Notify"
                      name="Append">false</property>
                    <property
                      dataType="System.String"
                      description="RowSeparator"
                      expressionType="Notify"
                      name="RowSeparator">{NEWLINE}</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether you want to overwrite target file if exists"
                      expressionType="Notify"
                      name="OverwriteFileIfExists">true</property>
                    <property
                      dataType="System.String"
                      description="ColumnSeparator"
                      expressionType="Notify"
                      name="ColumnSeparator">,</property>
                    <property
                      dataType="System.Boolean"
                      description="SupportUnicode"
                      expressionType="Notify"
                      name="SupportUnicode">true</property>
                    <property
                      dataType="System.Boolean"
                      description="ColumnNamesInFirstRow"
                      expressionType="Notify"
                      name="ColumnNamesInFirstRow">true</property>
                    <property
                      dataType="System.Boolean"
                      description="QuoteDataIfNeeded"
                      expressionType="Notify"
                      name="QuoteDataIfNeeded">true</property>
                    <property
                      dataType="System.String"
                      description="Date time format string for any column with DT_DBDATETIME, DT_DBDATETIME2 or DB_DATE format"
                      expressionType="Notify"
                      name="DateTimeFormat">yyyy-MM-dd HH:mm:ss</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">ZappySys.TrashDestination</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Get and Upload Vendors\Partition 1\Trash Destination 1 1.Inputs[TrashDestinationInput]"
                      hasSideEffects="true"
                      name="TrashDestinationInput">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                </component>
                <component
                  refId="Package\Get and Upload Vendors\Partition 1\Trash Destination 1 1 1"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Trash Destination; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                  description="The trash destination is used to create dummy destination which ends data path without any processing."
                  name="Trash Destination 1 1 1"
                  version="2">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                      expressionType="Notify"
                      name="LoggingMode"
                      typeConverter="ZappySys.PowerPack.Common.LoggingMode, ZappySys.PowerPack130, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                    <property
                      dataType="System.Boolean"
                      description="When you enable this property it will prefix timestamp before Log messages."
                      expressionType="Notify"
                      name="PrefixTimestamp">false</property>
                    <property
                      dataType="System.Null"
                      expressionType="Notify"
                      name="SelfRef"
                      typeConverter="NOTBROWSABLE" />
                    <property
                      dataType="System.String"
                      description="File path where you want to save data"
                      expressionType="Notify"
                      name="FilePath"></property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates if you want to save input data to comma separated text file"
                      expressionType="Notify"
                      name="SaveDataToFile">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Append data to file"
                      expressionType="Notify"
                      name="Append">false</property>
                    <property
                      dataType="System.String"
                      description="RowSeparator"
                      expressionType="Notify"
                      name="RowSeparator">{NEWLINE}</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether you want to overwrite target file if exists"
                      expressionType="Notify"
                      name="OverwriteFileIfExists">true</property>
                    <property
                      dataType="System.String"
                      description="ColumnSeparator"
                      expressionType="Notify"
                      name="ColumnSeparator">,</property>
                    <property
                      dataType="System.Boolean"
                      description="SupportUnicode"
                      expressionType="Notify"
                      name="SupportUnicode">true</property>
                    <property
                      dataType="System.Boolean"
                      description="ColumnNamesInFirstRow"
                      expressionType="Notify"
                      name="ColumnNamesInFirstRow">true</property>
                    <property
                      dataType="System.Boolean"
                      description="QuoteDataIfNeeded"
                      expressionType="Notify"
                      name="QuoteDataIfNeeded">true</property>
                    <property
                      dataType="System.String"
                      description="Date time format string for any column with DT_DBDATETIME, DT_DBDATETIME2 or DB_DATE format"
                      expressionType="Notify"
                      name="DateTimeFormat">yyyy-MM-dd HH:mm:ss</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">ZappySys.TrashDestination</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Get and Upload Vendors\Partition 1\Trash Destination 1 1 1.Inputs[TrashDestinationInput]"
                      hasSideEffects="true"
                      name="TrashDestinationInput">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                </component>
                <component
                  refId="Package\Get and Upload Vendors\Partition 1\Trash Destination 1 1 1 1"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Trash Destination; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                  description="The trash destination is used to create dummy destination which ends data path without any processing."
                  name="Trash Destination 1 1 1 1"
                  version="2">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                      expressionType="Notify"
                      name="LoggingMode"
                      typeConverter="ZappySys.PowerPack.Common.LoggingMode, ZappySys.PowerPack130, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                    <property
                      dataType="System.Boolean"
                      description="When you enable this property it will prefix timestamp before Log messages."
                      expressionType="Notify"
                      name="PrefixTimestamp">false</property>
                    <property
                      dataType="System.Null"
                      expressionType="Notify"
                      name="SelfRef"
                      typeConverter="NOTBROWSABLE" />
                    <property
                      dataType="System.String"
                      description="File path where you want to save data"
                      expressionType="Notify"
                      name="FilePath"></property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates if you want to save input data to comma separated text file"
                      expressionType="Notify"
                      name="SaveDataToFile">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Append data to file"
                      expressionType="Notify"
                      name="Append">false</property>
                    <property
                      dataType="System.String"
                      description="RowSeparator"
                      expressionType="Notify"
                      name="RowSeparator">{NEWLINE}</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether you want to overwrite target file if exists"
                      expressionType="Notify"
                      name="OverwriteFileIfExists">true</property>
                    <property
                      dataType="System.String"
                      description="ColumnSeparator"
                      expressionType="Notify"
                      name="ColumnSeparator">,</property>
                    <property
                      dataType="System.Boolean"
                      description="SupportUnicode"
                      expressionType="Notify"
                      name="SupportUnicode">true</property>
                    <property
                      dataType="System.Boolean"
                      description="ColumnNamesInFirstRow"
                      expressionType="Notify"
                      name="ColumnNamesInFirstRow">true</property>
                    <property
                      dataType="System.Boolean"
                      description="QuoteDataIfNeeded"
                      expressionType="Notify"
                      name="QuoteDataIfNeeded">true</property>
                    <property
                      dataType="System.String"
                      description="Date time format string for any column with DT_DBDATETIME, DT_DBDATETIME2 or DB_DATE format"
                      expressionType="Notify"
                      name="DateTimeFormat">yyyy-MM-dd HH:mm:ss</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">ZappySys.TrashDestination</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Get and Upload Vendors\Partition 1\Trash Destination 1 1 1 1.Inputs[TrashDestinationInput]"
                      hasSideEffects="true"
                      name="TrashDestinationInput">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                </component>
                <component
                  refId="Package\Get and Upload Vendors\Partition 1\Trash Destination 1 1 4 1"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Trash Destination; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                  description="The trash destination is used to create dummy destination which ends data path without any processing."
                  name="Trash Destination 1 1 4 1"
                  version="2">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                      expressionType="Notify"
                      name="LoggingMode"
                      typeConverter="ZappySys.PowerPack.Common.LoggingMode, ZappySys.PowerPack130, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                    <property
                      dataType="System.Boolean"
                      description="When you enable this property it will prefix timestamp before Log messages."
                      expressionType="Notify"
                      name="PrefixTimestamp">false</property>
                    <property
                      dataType="System.Null"
                      expressionType="Notify"
                      name="SelfRef"
                      typeConverter="NOTBROWSABLE" />
                    <property
                      dataType="System.String"
                      description="File path where you want to save data"
                      expressionType="Notify"
                      name="FilePath"></property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates if you want to save input data to comma separated text file"
                      expressionType="Notify"
                      name="SaveDataToFile">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Append data to file"
                      expressionType="Notify"
                      name="Append">false</property>
                    <property
                      dataType="System.String"
                      description="RowSeparator"
                      expressionType="Notify"
                      name="RowSeparator">{NEWLINE}</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether you want to overwrite target file if exists"
                      expressionType="Notify"
                      name="OverwriteFileIfExists">true</property>
                    <property
                      dataType="System.String"
                      description="ColumnSeparator"
                      expressionType="Notify"
                      name="ColumnSeparator">,</property>
                    <property
                      dataType="System.Boolean"
                      description="SupportUnicode"
                      expressionType="Notify"
                      name="SupportUnicode">true</property>
                    <property
                      dataType="System.Boolean"
                      description="ColumnNamesInFirstRow"
                      expressionType="Notify"
                      name="ColumnNamesInFirstRow">true</property>
                    <property
                      dataType="System.Boolean"
                      description="QuoteDataIfNeeded"
                      expressionType="Notify"
                      name="QuoteDataIfNeeded">true</property>
                    <property
                      dataType="System.String"
                      description="Date time format string for any column with DT_DBDATETIME, DT_DBDATETIME2 or DB_DATE format"
                      expressionType="Notify"
                      name="DateTimeFormat">yyyy-MM-dd HH:mm:ss</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">ZappySys.TrashDestination</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Get and Upload Vendors\Partition 1\Trash Destination 1 1 4 1.Inputs[TrashDestinationInput]"
                      hasSideEffects="true"
                      name="TrashDestinationInput">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                </component>
                <component
                  refId="Package\Get and Upload Vendors\Partition 1\Update RID"
                  componentClassID="Microsoft.OLEDBCommand"
                  contactInfo="OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
                  description="Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time."
                  name="Update RID"
                  usesDispositions="true"
                  version="2">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">exec Rosie_uspUpdVendorContactRid ?,?,?,?</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Get and Upload Vendors\Partition 1\Update RID.Connections[OleDbConnection]"
                      connectionManagerID="{78432CA1-1FEA-4ED4-9C0F-D552A4A9DE0E}:external"
                      connectionManagerRefId="Project.ConnectionManagers[InternetDB]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Get and Upload Vendors\Partition 1\Update RID.Inputs[OLE DB Command Input]"
                      errorOrTruncationOperation="Command Execution"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Command Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Update RID.Inputs[OLE DB Command Input].Columns[office_Id]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="4"
                          cachedName="office_Id"
                          externalMetadataColumnId="Package\Get and Upload Vendors\Partition 1\Update RID.Inputs[OLE DB Command Input].ExternalColumns[@office_id]"
                          lineageId="Package\Get and Upload Vendors\Partition 1\Map Results 1.Outputs[Derived Column Output].Columns[office_Id]" />
                        <inputColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Update RID.Inputs[OLE DB Command Input].Columns[rid_contact]"
                          cachedDataType="i8"
                          cachedName="rid_contact"
                          externalMetadataColumnId="Package\Get and Upload Vendors\Partition 1\Update RID.Inputs[OLE DB Command Input].ExternalColumns[@rid_contact]"
                          lineageId="Package\Get and Upload Vendors\Partition 1\Map Results 1.Outputs[Derived Column Output].Columns[rid_contact]" />
                        <inputColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Update RID.Inputs[OLE DB Command Input].Columns[etag_contact]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="80"
                          cachedName="etag_contact"
                          externalMetadataColumnId="Package\Get and Upload Vendors\Partition 1\Update RID.Inputs[OLE DB Command Input].ExternalColumns[@etag_contact]"
                          lineageId="Package\Get and Upload Vendors\Partition 1\Map Results 1.Outputs[Derived Column Output].Columns[etag_contact]" />
                        <inputColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Update RID.Inputs[OLE DB Command Input].Columns[prop_ref]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="prop_ref"
                          externalMetadataColumnId="Package\Get and Upload Vendors\Partition 1\Update RID.Inputs[OLE DB Command Input].ExternalColumns[@prop_Ref]"
                          lineageId="Package\Get and Upload Vendors\Partition 1\Map Results 1.Outputs[Derived Column Output].Columns[prop_ref]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Update RID.Inputs[OLE DB Command Input].ExternalColumns[@office_id]"
                          codePage="1252"
                          dataType="str"
                          length="4"
                          name="@office_id">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Update RID.Inputs[OLE DB Command Input].ExternalColumns[@rid_contact]"
                          dataType="i4"
                          name="@rid_contact">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">81</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Update RID.Inputs[OLE DB Command Input].ExternalColumns[@etag_contact]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="@etag_contact">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Update RID.Inputs[OLE DB Command Input].ExternalColumns[@prop_Ref]"
                          codePage="1252"
                          dataType="str"
                          length="25"
                          name="@prop_Ref">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 1\Update RID.Outputs[OLE DB Command Output]"
                      exclusionGroup="1"
                      name="OLE DB Command Output"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 1\Update RID.Inputs[OLE DB Command Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 1\Update RID.Outputs[OLE DB Command Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Command Error Output"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 1\Update RID.Inputs[OLE DB Command Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Update RID.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 1\Update RID.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 1\Update RID.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 1\Update RID.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Get and Upload Vendors\Partition 1.Paths[Derived Column Output]"
                  endId="Package\Get and Upload Vendors\Partition 1\Multicast.Inputs[Multicast Input 1]"
                  name="Derived Column Output"
                  startId="Package\Get and Upload Vendors\Partition 1\Replace Rid_contact and prop_ref.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Get and Upload Vendors\Partition 1.Paths[Derived Column Output1]"
                  endId="Package\Get and Upload Vendors\Partition 1\Replace Rid_contact and prop_ref.Inputs[Derived Column Input]"
                  name="Derived Column Output"
                  startId="Package\Get and Upload Vendors\Partition 1\Replace Token 1 1.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Get and Upload Vendors\Partition 1.Paths[Derived Column Output2]"
                  endId="Package\Get and Upload Vendors\Partition 1\Create Contact.Inputs[WebApiDestinationInput]"
                  name="Derived Column Output"
                  startId="Package\Get and Upload Vendors\Partition 1\Replace Token.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Get and Upload Vendors\Partition 1.Paths[Derived Column Output3]"
                  endId="Package\Get and Upload Vendors\Partition 1\Multicast 1.Inputs[Multicast Input 1]"
                  name="Derived Column Output"
                  startId="Package\Get and Upload Vendors\Partition 1\Map Results 1.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Get and Upload Vendors\Partition 1.Paths[Do nothing]"
                  endId="Package\Get and Upload Vendors\Partition 1\Trash Destination 1 1 1 1.Inputs[TrashDestinationInput]"
                  name="Do nothing"
                  startId="Package\Get and Upload Vendors\Partition 1\Conditional Split.Outputs[Do nothing]" />
                <path
                  refId="Package\Get and Upload Vendors\Partition 1.Paths[JsonParserTransformOutput]"
                  endId="Package\Get and Upload Vendors\Partition 1\Check Error 1.Inputs[Conditional Split Input]"
                  name="JsonParserTransformOutput"
                  startId="Package\Get and Upload Vendors\Partition 1\Get Results.Outputs[JsonParserTransformOutput]" />
                <path
                  refId="Package\Get and Upload Vendors\Partition 1.Paths[Lookup Match Output]"
                  endId="Package\Get and Upload Vendors\Partition 1\Replace Token 1 1.Inputs[Derived Column Input]"
                  name="Lookup Match Output"
                  startId="Package\Get and Upload Vendors\Partition 1\Lookup.Outputs[Lookup Match Output]" />
                <path
                  refId="Package\Get and Upload Vendors\Partition 1.Paths[Multicast Output 1]"
                  endId="Package\Get and Upload Vendors\Partition 1\Push Custom Fields.Inputs[WebApiDestinationInput]"
                  name="Multicast Output 1"
                  startId="Package\Get and Upload Vendors\Partition 1\Multicast.Outputs[Multicast Output 1]" />
                <path
                  refId="Package\Get and Upload Vendors\Partition 1.Paths[Multicast Output 11]"
                  endId="Package\Get and Upload Vendors\Partition 1\Update RID.Inputs[OLE DB Command Input]"
                  name="Multicast Output 1"
                  startId="Package\Get and Upload Vendors\Partition 1\Multicast 1.Outputs[Multicast Output 1]" />
                <path
                  refId="Package\Get and Upload Vendors\Partition 1.Paths[Multicast Output 2]"
                  endId="Package\Get and Upload Vendors\Partition 1\Push ID Check Data 1.Inputs[WebApiDestinationInput]"
                  name="Multicast Output 2"
                  startId="Package\Get and Upload Vendors\Partition 1\Multicast.Outputs[Multicast Output 2]" />
                <path
                  refId="Package\Get and Upload Vendors\Partition 1.Paths[Multicast Output 31]"
                  endId="Package\Get and Upload Vendors\Partition 1\Conditional Split.Inputs[Conditional Split Input]"
                  name="Multicast Output 3"
                  startId="Package\Get and Upload Vendors\Partition 1\Multicast.Outputs[Multicast Output 3]" />
                <path
                  refId="Package\Get and Upload Vendors\Partition 1.Paths[Multicast Output 3]"
                  endId="Package\Get and Upload Vendors\Partition 1\Lookup.Inputs[Lookup Input]"
                  name="Multicast Output 3"
                  startId="Package\Get and Upload Vendors\Partition 1\Multicast 1.Outputs[Multicast Output 3]" />
                <path
                  refId="Package\Get and Upload Vendors\Partition 1.Paths[Need To Flag AML]"
                  endId="Package\Get and Upload Vendors\Partition 1\AML.Inputs[WebApiDestinationInput]"
                  name="Need To Flag AML"
                  startId="Package\Get and Upload Vendors\Partition 1\Conditional Split.Outputs[Need To Flag AML]" />
                <path
                  refId="Package\Get and Upload Vendors\Partition 1.Paths[No Error]"
                  endId="Package\Get and Upload Vendors\Partition 1\Map Results 1.Inputs[Derived Column Input]"
                  name="No Error"
                  startId="Package\Get and Upload Vendors\Partition 1\Check Error 1.Outputs[No Error]" />
                <path
                  refId="Package\Get and Upload Vendors\Partition 1.Paths[OLE DB Command Output]"
                  endId="Package\Get and Upload Vendors\Partition 1\Row Count Success.Inputs[Row Count Input 1]"
                  name="OLE DB Command Output"
                  startId="Package\Get and Upload Vendors\Partition 1\Update RID.Outputs[OLE DB Command Output]" />
                <path
                  refId="Package\Get and Upload Vendors\Partition 1.Paths[OLE DB Source Output]"
                  endId="Package\Get and Upload Vendors\Partition 1\Main Record Count.Inputs[Row Count Input 1]"
                  name="OLE DB Source Output"
                  startId="Package\Get and Upload Vendors\Partition 1\Get Vendors List.Outputs[OLE DB Source Output]" />
                <path
                  refId="Package\Get and Upload Vendors\Partition 1.Paths[Response Output]"
                  endId="Package\Get and Upload Vendors\Partition 1\Trash Destination 1 1 4 1.Inputs[TrashDestinationInput]"
                  name="Response Output"
                  startId="Package\Get and Upload Vendors\Partition 1\Push ID Check Data 1.Outputs[Response Output]" />
                <path
                  refId="Package\Get and Upload Vendors\Partition 1.Paths[Response Output1]"
                  endId="Package\Get and Upload Vendors\Partition 1\Trash Destination 1 1 1.Inputs[TrashDestinationInput]"
                  name="Response Output"
                  startId="Package\Get and Upload Vendors\Partition 1\AML.Outputs[Response Output]" />
                <path
                  refId="Package\Get and Upload Vendors\Partition 1.Paths[Response Output2]"
                  endId="Package\Get and Upload Vendors\Partition 1\Trash Destination 1 1.Inputs[TrashDestinationInput]"
                  name="Response Output"
                  startId="Package\Get and Upload Vendors\Partition 1\Push Custom Fields.Outputs[Response Output]" />
                <path
                  refId="Package\Get and Upload Vendors\Partition 1.Paths[Response Output3]"
                  endId="Package\Get and Upload Vendors\Partition 1\Get Results.Inputs[JsonParserTransformInput]"
                  name="Response Output"
                  startId="Package\Get and Upload Vendors\Partition 1\Create Contact.Outputs[Response Output]" />
                <path
                  refId="Package\Get and Upload Vendors\Partition 1.Paths[Row Count Output 1]"
                  endId="Package\Get and Upload Vendors\Partition 1\Replace Token.Inputs[Derived Column Input]"
                  name="Row Count Output 1"
                  startId="Package\Get and Upload Vendors\Partition 1\Main Record Count.Outputs[Row Count Output 1]" />
                <path
                  refId="Package\Get and Upload Vendors\Partition 1.Paths[Row Count Output 11]"
                  endId="Package\Get and Upload Vendors\Partition 1\Trash Destination 1.Inputs[TrashDestinationInput]"
                  name="Row Count Output 1"
                  startId="Package\Get and Upload Vendors\Partition 1\Row Count Success.Outputs[Row Count Output 1]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Get and Upload Vendors\Partition 2"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{0db78b45-4445-4e79-a391-771c1236b503}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Partition 2"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:TransactionOption="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Get and Upload Vendors\Partition 2\AML"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Web API Destination; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                  description="The Web API destination can be used to send data to Web API URL (e.g. Submit or POST data to REST API/SOAP or other HTTP/HTTPS endpoints)"
                  name="AML"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                      expressionType="Notify"
                      name="LoggingMode"
                      typeConverter="ZappySys.PowerPack.Common.LoggingMode, ZappySys.PowerPack130, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                    <property
                      dataType="System.Boolean"
                      description="When you enable this property it will prefix timestamp before Log messages."
                      expressionType="Notify"
                      name="PrefixTimestamp">false</property>
                    <property
                      dataType="System.Null"
                      expressionType="Notify"
                      name="SelfRef"
                      typeConverter="NOTBROWSABLE" />
                    <property
                      dataType="System.String"
                      description="API URL you want to access"
                      expressionType="Notify"
                      name="HttpRequestUrl">{{User::PackageRosieURL}}</property>
                    <property
                      dataType="System.String"
                      description="Http Web Request Method (e.g. POST, GET, PUT, LIST, DELETE...). Refer your API documentation if you are not sure which method you have to use."
                      expressionType="Notify"
                      name="HttpRequestMethod">POST</property>
                    <property
                      dataType="System.String"
                      description="Set this if you want to set custom Http headers. You may use variable anywhere in the header value using syntax {{User::YourVarName}}. Syntax of Header key value pair is : &amp;lt;request&amp;gt;&amp;lt;header&amp;gt;&amp;lt;name&amp;gt;x-myheader-1&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;AAA&amp;lt;/value&amp;gt;&amp;lt;/header&amp;gt; &amp;lt;header&amp;gt;&amp;lt;name&amp;gt;x-myheader-2&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;BBB&amp;lt;/value&amp;gt;&amp;lt;/header&amp;gt;&amp;lt;/request&amp;gt;"
                      expressionType="Notify"
                      name="HttpHeaders"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">&lt;request&gt;&lt;header&gt;&lt;name&gt;Accept&lt;/name&gt;&lt;value&gt;*/*&lt;/value&gt;&lt;/header&gt;&lt;header&gt;&lt;name&gt;Cache-Control&lt;/name&gt;&lt;value&gt;no-cache&lt;/value&gt;&lt;/header&gt;&lt;/request&gt;</property>
                    <property
                      dataType="System.String"
                      description="User defined data you wish to send along with your HTTP Request (e.g. Upload file data, Form POST data). Usually you have to set content-type of your data but if you select RequestMethod=POST then system will automatically set content-type=application/x-www-form-urlencoded."
                      expressionType="Notify"
                      name="HttpRequestData"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies content type for data you wish to POST. If you select Default option then system default content type will be used (i.e. application/x-www-form-urlencoded). If you specify Content-Type header along with this option then header value takes precedence."
                      expressionType="Notify"
                      name="HttpRequestContentType"
                      typeConverter="ZappySys.Common.Web.HttpRequestContentType, ZappySys.Common, Version=1.0.2018.11017, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                    <property
                      dataType="System.Boolean"
                      description="If this option is true then component will continue without exception on 404 error (Url not found). This allows you to consume data gracefully."
                      expressionType="Notify"
                      name="ContinueOnUrlNotFoundError">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Ignore SSL certificate related errors. Example: if you getting SSL/TLS errors because of certificate expired or certificate is not from trusted authority or certificate is self-signed. By checking this option you will not get SSL/TLS error."
                      expressionType="Notify"
                      name="IgnoreCertificateErrors">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Allow unsecure ciphers/suites and curves for SSLS/TLS communication. Use this option to communicate with web servers which needs legacy / unsecured ciphers support. This option is only trigged when you change default SSL/TLS Version on advanced settings tab."
                      expressionType="Notify"
                      name="AllowUnsecureSuite">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Enable support for gzip or deflate compression. When you check this option compressed response automatically de-compressed saving bandwidth. This option is only valid if web server supports compressed response stream. Check your API documentation for more information."
                      expressionType="Notify"
                      name="EnableCompressionSupport">true</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies which security protocol is supported for HTTPS communication. Using this option you can enable legacy protocol or enforce to use latest version of security protocol (Note: TLS 1.2 is only supported in SSIS 2014 or Higher)."
                      expressionType="Notify"
                      name="SecurityProtocol"
                      typeConverter="ZappySys.PowerPack.Common.HttpsSecurityProtocolType, ZappySys.PowerPack130, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                    <property
                      dataType="System.Int32"
                      description="Wait time in milliseconds (Pause after each request). 0=No wait. Use this delay time if your API has limit on how many requests you can make in certain time frame."
                      expressionType="Notify"
                      name="WaitTime">0</property>
                    <property
                      dataType="System.Boolean"
                      description="When you redirect error to error output by default you get additional information in ErrorMessage column. Check this option if you need exact Response Body (Useful if its in JSON/XML format which needs to be parsed for additional information for later step)."
                      expressionType="Notify"
                      name="OnErrorOutputResponseBody">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Enable multiple requests using parallel threads."
                      expressionType="Notify"
                      name="EnableParallelRequests">true</property>
                    <property
                      dataType="System.Int32"
                      description="Maximum parallel threads to use for processing multiple web requests."
                      expressionType="Notify"
                      name="MaxParallelThreads">20</property>
                    <property
                      dataType="System.Boolean"
                      description="By default one request is sent for each input row. If your API supports multiple records in a single call via HTTP Body then enable this setting. See also BodyBatchSize, BodyHeader, BodyFooter and BodyRowSeparator property."
                      expressionType="Notify"
                      name="EnableBodyBatch">false</property>
                    <property
                      dataType="System.String"
                      description="When you have to wrap input content between opening and closing tags for each call then set this property to specify opening for body content. For Example if you want to build Body like this (send max 100 rows per call) ==&gt; { records : [ {...}, {...}, {...} ] } then you can set BatchSize=100, BodyHeader as &quot;{ records: [&quot; , BodyFooter as &quot;] }&quot; and BodyRowSeperator as comma {,}. This property is ignored if EnableBodyBatch=false."
                      expressionType="Notify"
                      name="BodyHeader"></property>
                    <property
                      dataType="System.String"
                      description="When you have to wrap input content between opening and closing tags for each call then set this property to specify closing for body content. For Example if you want to build Body like this (send max 100 rows per call) ==&gt; { records : [ {...}, {...}, {...} ] } then you can set BatchSize=100, BodyHeader as &quot;{ records: [&quot; , BodyFooter as &quot;] }&quot; and BodyRowSeperator as comma {,}. This property is ignored if EnableBodyBatch=false."
                      expressionType="Notify"
                      name="BodyFooter"></property>
                    <property
                      dataType="System.Int32"
                      description="If your API supports multiple records via HTTP Body then change this setting &gt; 1 to include multiple upstream records into single call. See also BodyHeader, BodyFooter and BodyRowSeparator property. This property is ignored if EnableBodyBatch=false."
                      expressionType="Notify"
                      name="BodyBatchSize">100</property>
                    <property
                      dataType="System.String"
                      description="When you submit multiple rows in a batch you can separate multiple documents / records using custom separator (e.g. in JSON Array you can use comma {,} as record separator if POST document is in array format [ {...}, {...}, {...} ] ). For last row of batch blank separator is used."
                      expressionType="Notify"
                      name="BodyRowSeparator"></property>
                    <property
                      dataType="System.Boolean"
                      description="Returns response data as binary data (e.g. Byte Array). Check this option is response is Zip file, Image file or any non text data which needs to be exported as raw data without any encoding."
                      expressionType="Notify"
                      name="TreatResponseAsBinary">false</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">ZappySys.WebApiDestination</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Get and Upload Vendors\Partition 2\AML.Connections[Connection]"
                      connectionManagerID="Package.ConnectionManagers[HTTP]"
                      connectionManagerRefId="Package.ConnectionManagers[HTTP]"
                      description="Connection manager for authentication (e.g. HTTP or OAuth Connection)"
                      name="Connection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Get and Upload Vendors\Partition 2\AML.Inputs[WebApiDestinationInput]"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="WebApiDestinationInput"
                      truncationRowDisposition="FailComponent">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Get and Upload Vendors\Partition 2\AML.Inputs[WebApiDestinationInput].Columns[DerivedAMLJSON]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="3000"
                          cachedName="DerivedAMLJSON"
                          externalMetadataColumnId="Package\Get and Upload Vendors\Partition 2\AML.Inputs[WebApiDestinationInput].ExternalColumns[HttpRequestData]"
                          lineageId="Package\Get and Upload Vendors\Partition 2\Replace Rid_contact and prop_ref.Outputs[Derived Column Output].Columns[DerivedAMLJSON]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 2\AML.Inputs[WebApiDestinationInput].ExternalColumns[HttpRequestUrl]"
                          dataType="wstr"
                          length="2000"
                          name="HttpRequestUrl" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 2\AML.Inputs[WebApiDestinationInput].ExternalColumns[HttpRequestData]"
                          dataType="nText"
                          name="HttpRequestData" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 2\AML.Outputs[WebApiDestination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="WebApiDestination Error Output"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 2\AML.Inputs[WebApiDestinationInput]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 2\AML.Outputs[WebApiDestination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 2\AML.Outputs[WebApiDestination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 2\AML.Outputs[WebApiDestination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 2\AML.Outputs[WebApiDestination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 2\AML.Outputs[WebApiDestination Error Output].Columns[ErrorColumnName]"
                          codePage="1252"
                          dataType="str"
                          length="128"
                          lineageId="Package\Get and Upload Vendors\Partition 2\AML.Outputs[WebApiDestination Error Output].Columns[ErrorColumnName]"
                          name="ErrorColumnName" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 2\AML.Outputs[WebApiDestination Error Output].Columns[ErrorMessage]"
                          dataType="nText"
                          lineageId="Package\Get and Upload Vendors\Partition 2\AML.Outputs[WebApiDestination Error Output].Columns[ErrorMessage]"
                          name="ErrorMessage" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 2\AML.Outputs[Response Output]"
                      exclusionGroup="1"
                      name="Response Output"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 2\AML.Inputs[WebApiDestinationInput]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 2\AML.Outputs[Response Output].Columns[ResponseText]"
                          dataType="nText"
                          lineageId="Package\Get and Upload Vendors\Partition 2\AML.Outputs[Response Output].Columns[ResponseText]"
                          name="ResponseText" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 2\AML.Outputs[Response Output].Columns[StatusCode]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 2\AML.Outputs[Response Output].Columns[StatusCode]"
                          name="StatusCode" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Get and Upload Vendors\Partition 2\Check Error 1"
                  componentClassID="Microsoft.ConditionalSplit"
                  contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
                  name="Check Error 1"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Get and Upload Vendors\Partition 2\Check Error 1.Inputs[Conditional Split Input]"
                      description="Input to the Conditional Split Transformation"
                      name="Conditional Split Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Check Error 1.Inputs[Conditional Split Input].Columns[error]"
                          cachedDataType="wstr"
                          cachedLength="1020"
                          cachedName="error"
                          lineageId="Package\Get and Upload Vendors\Partition 2\Get Results.Outputs[JsonParserTransformOutput].Columns[error]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 2\Check Error 1.Outputs[Error]"
                      description="Output 1 of the Conditional Split Transformation"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      exclusionGroup="1"
                      name="Error"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 2\Check Error 1.Inputs[Conditional Split Input]"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                          name="Expression">[REPLACENULL](#{Package\Get and Upload Vendors\Partition 2\Get Results.Outputs[JsonParserTransformOutput].Columns[error]},"") != ""</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the friendly version of the expression. This expression version uses column names."
                          expressionType="Notify"
                          name="FriendlyExpression">REPLACENULL(error,"") != ""</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                          name="EvaluationOrder">0</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 2\Check Error 1.Outputs[No Error]"
                      description="Output 2 of the Conditional Split Transformation"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      exclusionGroup="1"
                      name="No Error"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 2\Check Error 1.Inputs[Conditional Split Input]"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                          name="Expression">[REPLACENULL](#{Package\Get and Upload Vendors\Partition 2\Get Results.Outputs[JsonParserTransformOutput].Columns[error]},"") == ""</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the friendly version of the expression. This expression version uses column names."
                          expressionType="Notify"
                          name="FriendlyExpression">REPLACENULL(error,"") == ""</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                          name="EvaluationOrder">1</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 2\Check Error 1.Outputs[Conditional Split Default Output]"
                      description="Default Output of the Conditional Split Transformation"
                      exclusionGroup="1"
                      name="Conditional Split Default Output"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 2\Check Error 1.Inputs[Conditional Split Input]">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          name="IsDefaultOut">true</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 2\Check Error 1.Outputs[Conditional Split Error Output]"
                      description="Error Output of the Conditional Split Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Conditional Split Error Output"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 2\Check Error 1.Inputs[Conditional Split Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Check Error 1.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 2\Check Error 1.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Check Error 1.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 2\Check Error 1.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Get and Upload Vendors\Partition 2\Conditional Split"
                  componentClassID="Microsoft.ConditionalSplit"
                  contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
                  name="Conditional Split"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Get and Upload Vendors\Partition 2\Conditional Split.Inputs[Conditional Split Input]"
                      description="Input to the Conditional Split Transformation"
                      name="Conditional Split Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Conditional Split.Inputs[Conditional Split Input].Columns[AMLCheck]"
                          cachedDataType="i4"
                          cachedName="AMLCheck"
                          lineageId="Package\Get and Upload Vendors\Partition 2\Lookup.Outputs[Lookup Match Output].Columns[AMLCheck]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 2\Conditional Split.Outputs[Need To Flag AML]"
                      description="Output 1 of the Conditional Split Transformation"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      exclusionGroup="1"
                      name="Need To Flag AML"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 2\Conditional Split.Inputs[Conditional Split Input]"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                          name="Expression">#{Package\Get and Upload Vendors\Partition 2\Lookup.Outputs[Lookup Match Output].Columns[AMLCheck]} == 1</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the friendly version of the expression. This expression version uses column names."
                          expressionType="Notify"
                          name="FriendlyExpression">AMLCheck == 1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                          name="EvaluationOrder">0</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 2\Conditional Split.Outputs[Do nothing]"
                      description="Output 2 of the Conditional Split Transformation"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      exclusionGroup="1"
                      name="Do nothing"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 2\Conditional Split.Inputs[Conditional Split Input]"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                          name="Expression">#{Package\Get and Upload Vendors\Partition 2\Lookup.Outputs[Lookup Match Output].Columns[AMLCheck]} == 0</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the friendly version of the expression. This expression version uses column names."
                          expressionType="Notify"
                          name="FriendlyExpression">AMLCheck == 0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                          name="EvaluationOrder">1</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 2\Conditional Split.Outputs[Conditional Split Default Output]"
                      description="Default Output of the Conditional Split Transformation"
                      exclusionGroup="1"
                      name="Conditional Split Default Output"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 2\Conditional Split.Inputs[Conditional Split Input]">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          name="IsDefaultOut">true</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 2\Conditional Split.Outputs[Conditional Split Error Output]"
                      description="Error Output of the Conditional Split Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Conditional Split Error Output"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 2\Conditional Split.Inputs[Conditional Split Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 2\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 2\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Get and Upload Vendors\Partition 2\Create Contact"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Web API Destination; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                  description="The Web API destination can be used to send data to Web API URL (e.g. Submit or POST data to REST API/SOAP or other HTTP/HTTPS endpoints)"
                  name="Create Contact"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                      expressionType="Notify"
                      name="LoggingMode"
                      typeConverter="ZappySys.PowerPack.Common.LoggingMode, ZappySys.PowerPack130, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                    <property
                      dataType="System.Boolean"
                      description="When you enable this property it will prefix timestamp before Log messages."
                      expressionType="Notify"
                      name="PrefixTimestamp">false</property>
                    <property
                      dataType="System.Null"
                      expressionType="Notify"
                      name="SelfRef"
                      typeConverter="NOTBROWSABLE" />
                    <property
                      dataType="System.String"
                      description="API URL you want to access"
                      expressionType="Notify"
                      name="HttpRequestUrl">{{User::PackageRosieURL}}</property>
                    <property
                      dataType="System.String"
                      description="Http Web Request Method (e.g. POST, GET, PUT, LIST, DELETE...). Refer your API documentation if you are not sure which method you have to use."
                      expressionType="Notify"
                      name="HttpRequestMethod">POST</property>
                    <property
                      dataType="System.String"
                      description="Set this if you want to set custom Http headers. You may use variable anywhere in the header value using syntax {{User::YourVarName}}. Syntax of Header key value pair is : &amp;lt;request&amp;gt;&amp;lt;header&amp;gt;&amp;lt;name&amp;gt;x-myheader-1&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;AAA&amp;lt;/value&amp;gt;&amp;lt;/header&amp;gt; &amp;lt;header&amp;gt;&amp;lt;name&amp;gt;x-myheader-2&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;BBB&amp;lt;/value&amp;gt;&amp;lt;/header&amp;gt;&amp;lt;/request&amp;gt;"
                      expressionType="Notify"
                      name="HttpHeaders"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">&lt;request&gt;&lt;header&gt;&lt;name&gt;Accept&lt;/name&gt;&lt;value&gt;*/*&lt;/value&gt;&lt;/header&gt;&lt;header&gt;&lt;name&gt;Cache-Control&lt;/name&gt;&lt;value&gt;no-cache&lt;/value&gt;&lt;/header&gt;&lt;/request&gt;</property>
                    <property
                      dataType="System.String"
                      description="User defined data you wish to send along with your HTTP Request (e.g. Upload file data, Form POST data). Usually you have to set content-type of your data but if you select RequestMethod=POST then system will automatically set content-type=application/x-www-form-urlencoded."
                      expressionType="Notify"
                      name="HttpRequestData"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies content type for data you wish to POST. If you select Default option then system default content type will be used (i.e. application/x-www-form-urlencoded). If you specify Content-Type header along with this option then header value takes precedence."
                      expressionType="Notify"
                      name="HttpRequestContentType"
                      typeConverter="ZappySys.Common.Web.HttpRequestContentType, ZappySys.Common, Version=1.0.2018.11017, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                    <property
                      dataType="System.Boolean"
                      description="If this option is true then component will continue without exception on 404 error (Url not found). This allows you to consume data gracefully."
                      expressionType="Notify"
                      name="ContinueOnUrlNotFoundError">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Ignore SSL certificate related errors. Example: if you getting SSL/TLS errors because of certificate expired or certificate is not from trusted authority or certificate is self-signed. By checking this option you will not get SSL/TLS error."
                      expressionType="Notify"
                      name="IgnoreCertificateErrors">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Allow unsecure ciphers/suites and curves for SSLS/TLS communication. Use this option to communicate with web servers which needs legacy / unsecured ciphers support. This option is only trigged when you change default SSL/TLS Version on advanced settings tab."
                      expressionType="Notify"
                      name="AllowUnsecureSuite">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Enable support for gzip or deflate compression. When you check this option compressed response automatically de-compressed saving bandwidth. This option is only valid if web server supports compressed response stream. Check your API documentation for more information."
                      expressionType="Notify"
                      name="EnableCompressionSupport">true</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies which security protocol is supported for HTTPS communication. Using this option you can enable legacy protocol or enforce to use latest version of security protocol (Note: TLS 1.2 is only supported in SSIS 2014 or Higher)."
                      expressionType="Notify"
                      name="SecurityProtocol"
                      typeConverter="ZappySys.PowerPack.Common.HttpsSecurityProtocolType, ZappySys.PowerPack130, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                    <property
                      dataType="System.Int32"
                      description="Wait time in milliseconds (Pause after each request). 0=No wait. Use this delay time if your API has limit on how many requests you can make in certain time frame."
                      expressionType="Notify"
                      name="WaitTime">0</property>
                    <property
                      dataType="System.Boolean"
                      description="When you redirect error to error output by default you get additional information in ErrorMessage column. Check this option if you need exact Response Body (Useful if its in JSON/XML format which needs to be parsed for additional information for later step)."
                      expressionType="Notify"
                      name="OnErrorOutputResponseBody">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Enable multiple requests using parallel threads."
                      expressionType="Notify"
                      name="EnableParallelRequests">true</property>
                    <property
                      dataType="System.Int32"
                      description="Maximum parallel threads to use for processing multiple web requests."
                      expressionType="Notify"
                      name="MaxParallelThreads">20</property>
                    <property
                      dataType="System.Boolean"
                      description="By default one request is sent for each input row. If your API supports multiple records in a single call via HTTP Body then enable this setting. See also BodyBatchSize, BodyHeader, BodyFooter and BodyRowSeparator property."
                      expressionType="Notify"
                      name="EnableBodyBatch">false</property>
                    <property
                      dataType="System.String"
                      description="When you have to wrap input content between opening and closing tags for each call then set this property to specify opening for body content. For Example if you want to build Body like this (send max 100 rows per call) ==&gt; { records : [ {...}, {...}, {...} ] } then you can set BatchSize=100, BodyHeader as &quot;{ records: [&quot; , BodyFooter as &quot;] }&quot; and BodyRowSeperator as comma {,}. This property is ignored if EnableBodyBatch=false."
                      expressionType="Notify"
                      name="BodyHeader"></property>
                    <property
                      dataType="System.String"
                      description="When you have to wrap input content between opening and closing tags for each call then set this property to specify closing for body content. For Example if you want to build Body like this (send max 100 rows per call) ==&gt; { records : [ {...}, {...}, {...} ] } then you can set BatchSize=100, BodyHeader as &quot;{ records: [&quot; , BodyFooter as &quot;] }&quot; and BodyRowSeperator as comma {,}. This property is ignored if EnableBodyBatch=false."
                      expressionType="Notify"
                      name="BodyFooter"></property>
                    <property
                      dataType="System.Int32"
                      description="If your API supports multiple records via HTTP Body then change this setting &gt; 1 to include multiple upstream records into single call. See also BodyHeader, BodyFooter and BodyRowSeparator property. This property is ignored if EnableBodyBatch=false."
                      expressionType="Notify"
                      name="BodyBatchSize">100</property>
                    <property
                      dataType="System.String"
                      description="When you submit multiple rows in a batch you can separate multiple documents / records using custom separator (e.g. in JSON Array you can use comma {,} as record separator if POST document is in array format [ {...}, {...}, {...} ] ). For last row of batch blank separator is used."
                      expressionType="Notify"
                      name="BodyRowSeparator"></property>
                    <property
                      dataType="System.Boolean"
                      description="Returns response data as binary data (e.g. Byte Array). Check this option is response is Zip file, Image file or any non text data which needs to be exported as raw data without any encoding."
                      expressionType="Notify"
                      name="TreatResponseAsBinary">false</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">ZappySys.WebApiDestination</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Get and Upload Vendors\Partition 2\Create Contact.Connections[Connection]"
                      connectionManagerID="Package.ConnectionManagers[HTTP]"
                      connectionManagerRefId="Package.ConnectionManagers[HTTP]"
                      description="Connection manager for authentication (e.g. HTTP or OAuth Connection)"
                      name="Connection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Get and Upload Vendors\Partition 2\Create Contact.Inputs[WebApiDestinationInput]"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="WebApiDestinationInput"
                      truncationRowDisposition="FailComponent">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Create Contact.Inputs[WebApiDestinationInput].Columns[DerivedVendorJSON]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="3000"
                          cachedName="DerivedVendorJSON"
                          externalMetadataColumnId="Package\Get and Upload Vendors\Partition 2\Create Contact.Inputs[WebApiDestinationInput].ExternalColumns[HttpRequestData]"
                          lineageId="Package\Get and Upload Vendors\Partition 2\Replace Token.Outputs[Derived Column Output].Columns[DerivedVendorJSON]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Create Contact.Inputs[WebApiDestinationInput].ExternalColumns[HttpRequestUrl]"
                          dataType="wstr"
                          length="2000"
                          name="HttpRequestUrl" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Create Contact.Inputs[WebApiDestinationInput].ExternalColumns[HttpRequestData]"
                          dataType="nText"
                          name="HttpRequestData" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 2\Create Contact.Outputs[WebApiDestination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="WebApiDestination Error Output"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 2\Create Contact.Inputs[WebApiDestinationInput]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Create Contact.Outputs[WebApiDestination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 2\Create Contact.Outputs[WebApiDestination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Create Contact.Outputs[WebApiDestination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 2\Create Contact.Outputs[WebApiDestination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Create Contact.Outputs[WebApiDestination Error Output].Columns[ErrorColumnName]"
                          codePage="1252"
                          dataType="str"
                          length="128"
                          lineageId="Package\Get and Upload Vendors\Partition 2\Create Contact.Outputs[WebApiDestination Error Output].Columns[ErrorColumnName]"
                          name="ErrorColumnName" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Create Contact.Outputs[WebApiDestination Error Output].Columns[ErrorMessage]"
                          dataType="nText"
                          lineageId="Package\Get and Upload Vendors\Partition 2\Create Contact.Outputs[WebApiDestination Error Output].Columns[ErrorMessage]"
                          name="ErrorMessage" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 2\Create Contact.Outputs[Response Output]"
                      exclusionGroup="1"
                      name="Response Output"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 2\Create Contact.Inputs[WebApiDestinationInput]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Create Contact.Outputs[Response Output].Columns[ResponseText]"
                          dataType="nText"
                          lineageId="Package\Get and Upload Vendors\Partition 2\Create Contact.Outputs[Response Output].Columns[ResponseText]"
                          name="ResponseText" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Create Contact.Outputs[Response Output].Columns[StatusCode]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 2\Create Contact.Outputs[Response Output].Columns[StatusCode]"
                          name="StatusCode" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Get and Upload Vendors\Partition 2\Get Results"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="JSON Parser Transform; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                  description="Parse incoming JSON String into columns. You can also parse and transform single JSON record into multiple rows by filtering data based on JSON Path (e.g. $.Customer.Orders[*])"
                  name="Get Results"
                  usesDispositions="true"
                  version="2">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                      expressionType="Notify"
                      name="LoggingMode"
                      typeConverter="ZappySys.PowerPack.Common.LoggingMode, ZappySys.PowerPack130, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                    <property
                      dataType="System.Boolean"
                      description="When you enable this property it will prefix timestamp before Log messages."
                      expressionType="Notify"
                      name="PrefixTimestamp">false</property>
                    <property
                      dataType="System.Null"
                      expressionType="Notify"
                      name="SelfRef"
                      typeConverter="NOTBROWSABLE" />
                    <property
                      dataType="System.Boolean"
                      description="Treat empty string as NULL for any numeric data types"
                      expressionType="Notify"
                      name="TreatBlankNumberAsNull">true</property>
                    <property
                      dataType="System.Boolean"
                      description="Treat empty string as NULL for bool data types"
                      expressionType="Notify"
                      name="TreatBlankBoolAsNull">true</property>
                    <property
                      dataType="System.Boolean"
                      description="Treat empty string as NULL for any date/time data types"
                      expressionType="Notify"
                      name="TreatBlankDateAsNull">true</property>
                    <property
                      dataType="System.String"
                      description="Sample JSON data used to parse output columns."
                      expressionType="Notify"
                      name="SampleData"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">{
    "result": {
        "system_record_state": "active",
        "system_ctime": 1551864889,
        "system_modtime": 1551864889,
        "system_search_key": "Jeff test",
        "address": "1",
        "address_postal": null,
        "marketing_postcode": "ss142rq",
        "marketing_enquiry_source": null,
        "marketing_gender": null,
        "marketing_birthday": null,
        "notes": null,
        "company_name": "Jeff test",
        "company_abn": null,
        "website_url": null,
        "is_dnd": null,
        "type": "company",
        "interest_level": null,
        "last_contacted_date": null,
        "name_legal": null,
        "name_salutation": null,
        "name_addressee": null,
        "last_contacted_at": null,
        "_id": 216403,
        "etag": "216403-1551864889",
        "system_owner_user": {
            "id": "19443",
            "_name": "Rosie API",
            "_first_name": "Rosie",
            "_last_name": "API",
            "_email_address": "rosie@spicerhaart.co.uk"
        },
        "system_modified_user": {
            "id": "19443",
            "_name": "Rosie API",
            "_first_name": "Rosie",
            "_last_name": "API",
            "_email_address": "rosie@spicerhaart.co.uk"
        },
        "system_created_user": {
            "id": "19443",
            "_name": "Rosie API",
            "_first_name": "Rosie",
            "_last_name": "API",
            "_email_address": "rosie@spicerhaart.co.uk"
        },
        "contact_image": null,
        "company_size": null,
        "marketing_enquiry_method": null,
        "_related": {
            "contact_emails": [
                {
                    "email_desc": "default",
                    "email_address": "MasterDave.Davidson@anemail.com",
                    "email_primary": true,
                    "email_secondary": null,
                    "is_invalid": null,
                    "_id": 147984
                }
            ],
            "contact_phones": [
                {
                    "phone_type": "default",
                    "phone_number": "09876543210",
                    "phone_primary": true,
                    "phone_primary_sms": null,
                    "is_invalid": null,
                    "system_e164_phone_number": "+449876543210",
                    "_id": 243549,
                    "wash": {
                        "present_on_lists": [],
                        "user_override": null,
                        "allow": true
                    }
                }
            ],
            "contact_tags": [],
            "contact_documents": [],
            "contact_mailing_lists": [],
            "contact_relationships": [],
            "contact_reln_property": [],
            "contact_reln_listing": []
        },
        "address_wash": {
            "present_on_lists": [],
            "user_override": null,
            "allow": true
        },
        "address_postal_wash": null,
        "smart_categories": false,
        "_security_user_rights": [
            "read",
            "update",
            "archive",
            "trash",
            "perms"
        ]
    },
    "error": null
}</property>
                    <property
                      dataType="System.Boolean"
                      description="Include all upstream parent columns into output except the one you selected to parse. By default only parsed columns from Input document is included in the output. If you wish to include all other upstream columns in the output too then check this option."
                      expressionType="Notify"
                      name="OutputAllUpstreamColumns">false</property>
                    <property
                      dataType="System.Int32"
                      description="Maximum JSON records to fetch. Set this value to 0 for all records"
                      expressionType="Notify"
                      name="MaxRows">0</property>
                    <property
                      dataType="System.String"
                      description="Enter expression here to filter data.(Example:  $.Users[*].UserName ) This will fetch User names from users records"
                      expressionType="Notify"
                      name="Filter"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.Boolean"
                      description="Use this option to include parent properties (Non array) in the output along with Filtered Rows"
                      expressionType="Notify"
                      name="IncludeParentColumns">true</property>
                    <property
                      dataType="System.Boolean"
                      description="By default child and parent information is not included in the output if children not found for specified expression. For example if you want to extract all orders from all customers nodes then you can type $.Customers[*].Orders[*]. This will fetch all orders from all customers. By default customers records without orders wont be included in the output. If you want to include those customers where orders not found then check this option (Output null information for order attributes). This behavior is similar to LEFT OUTER JOIN in SQL (Left side is parent, right side is child). This option is ***resource intensive*** so only check if you really care about this behavior."
                      expressionType="Notify"
                      name="IncludeParentColumnsWhenChildMissing">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Set this option to true if you want to output parent columns which are array. By default any parent column which is an array is not included in output. See also FilterForParentColumnsWithArrayType property if you set this property"
                      expressionType="Notify"
                      name="IncludeParentColumnsWithArrayType">false</property>
                    <property
                      dataType="System.String"
                      description="Filter expression to extract value form parent"
                      expressionType="Notify"
                      name="FilterForParentColumnsWithArrayType"></property>
                    <property
                      dataType="System.String"
                      description="Prefix for parent column name. This option is only valid if you have set IncludeParentColumns=True"
                      expressionType="Notify"
                      name="ParentColumnPrefix">P_</property>
                    <property
                      dataType="System.Boolean"
                      description="Throw error if property name specified in filter expression is missing. By default it will ignore any missing property errors."
                      expressionType="Notify"
                      name="ThrowErrorIfPropertyMissing">false</property>
                    <property
                      dataType="System.Int32"
                      description="This property how many nested levels should be scanned to fetch various properties. 0=Scan all child levels."
                      expressionType="Notify"
                      name="MaxLevelsToScan">0</property>
                    <property
                      dataType="System.String"
                      description="List comma separated property names from JSON document which you want to exclude from output. Specify parent property name to exclude all child nodes."
                      expressionType="Notify"
                      name="ExcludedProperties"></property>
                    <property
                      dataType="System.String"
                      description="Property level separator used in generated property name (separator for outer properties - Above selected filter node). Use this if default separator is producing duplicate property name which is conflicting with existing name."
                      expressionType="Notify"
                      name="LevelSeparator">_</property>
                    <property
                      dataType="System.Boolean"
                      description="Enables deep array flattening for selected filtered hierarchy. When you turn on this property it will flatten each property of each array item and expose as column (e.g. If you have Filter set as $.customers[*] and for each customer you have an array of Addresses then you may see output columns like Addresses.1.City, Addresses.1.State, Addresses.2.City, Addresses.2.State .... Addresses.N.City, Addresses.N.State). You can control how many array items you want to flatten by setting MaxArrayItemsToFlatten property."
                      expressionType="Notify"
                      name="EnableArrayFlattening">false</property>
                    <property
                      dataType="System.Int32"
                      description="Maximum number of array items to flatten. inner array flattening. Adjust this property to control how many columns being generated. This option is ignored if you set EnableArrayFlattening=false"
                      expressionType="Notify"
                      name="MaxArrayItemsToFlatten">10</property>
                    <property
                      dataType="System.String"
                      description="Specifies how custom date formatted strings are parsed when reading JSON."
                      expressionType="Notify"
                      name="DateFormatString"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies how date formatted strings, e.g. Date(1198908717056) and 2012-03-21T05:40Z, are parsed when reading JSON."
                      expressionType="Notify"
                      name="DateParseHandling"
                      typeConverter="ZappySys.Common.DateParseHandling, ZappySys.Common, Version=1.0.2018.11017, Culture=neutral, PublicKeyToken=1903265a93eae502">1</property>
                    <property
                      dataType="System.Boolean"
                      description="Output as raw JSON document rather than parsing individual fields. This option is helpful if you have documents stored in a file and you want to pass them downstream as raw JSON string rather than parsing into columns."
                      expressionType="Notify"
                      name="OutputRawDocument">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indent JSON output so its easy to read."
                      expressionType="Notify"
                      name="IndentOutput">false</property>
                    <property
                      dataType="System.Boolean"
                      description="When this property is true then Column is converted to Row. Pivoted names will appear under  Pivot_Name column and values will appear under Pivot_Value field."
                      expressionType="Notify"
                      name="EnablePivot">false</property>
                    <property
                      dataType="System.Int32"
                      description="Array Transformation you want to apply. Useful for case when you have 2-Dimensional arrays with rows/columns in separate arrays."
                      expressionType="Notify"
                      name="ArrayTransformationType"
                      typeConverter="ZappySys.Json.ArrayTransformType, ZappySys.Json, Version=1.0.2018.11017, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                    <property
                      dataType="System.String"
                      description="Filter expression to use to extract column names for array transformation."
                      expressionType="Notify"
                      name="ArrayTransColumnNameFilter"></property>
                    <property
                      dataType="System.String"
                      description="Filter expression for row values (Not applicable for simple array transformation)."
                      expressionType="Notify"
                      name="ArrayTransRowValueFilter"></property>
                    <property
                      dataType="System.Boolean"
                      description="When you have 2D array but don't have column list specified in a separate array then use this option (e.g. { arr: [[10,11],[21,22]] } )."
                      expressionType="Notify"
                      name="ArrayTransEnableCustomColumns">false</property>
                    <property
                      dataType="System.String"
                      description="When you have 2D array but don't have column list specified in a separate array then use specify column names here. Use comma separated list (e.g col1,col2,col3 ). Column name Order must match value order."
                      expressionType="Notify"
                      name="ArrayTransCustomColumns"></property>
                    <property
                      dataType="System.Int32"
                      description="Metadata scan mode controls how data type and length is determined. By default few records scanned to determine datatype/length. Changing ScanMode affects length/datatype accuracy."
                      expressionType="Notify"
                      name="MetaDataScanMode"
                      typeConverter="ZappySys.Common.Data.MetaDataScanMode, ZappySys.Common, Version=1.0.2018.11017, Culture=neutral, PublicKeyToken=1903265a93eae502">4</property>
                    <property
                      dataType="System.Int32"
                      description="Length for all string column. This option is only valid for MetaDataScanMode=Custom"
                      expressionType="Notify"
                      name="MetaDataCustomLength">1000</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">ZappySys.JsonParserTransform</property>
                    <property
                      dataType="System.Int32"
                      name="EmptyInputProcessingMode">0</property>
                    <property
                      dataType="System.String"
                      name="TreatEmptyInputAs">{ }</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Get and Upload Vendors\Partition 2\Get Results.Inputs[JsonParserTransformInput]"
                      errorRowDisposition="FailComponent"
                      name="JsonParserTransformInput"
                      truncationRowDisposition="FailComponent">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Get Results.Inputs[JsonParserTransformInput].Columns[ResponseText]"
                          cachedDataType="nText"
                          cachedName="ResponseText"
                          lineageId="Package\Get and Upload Vendors\Partition 2\Create Contact.Outputs[Response Output].Columns[ResponseText]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True" />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 2\Get Results.Outputs[JsonParserTransformOutput]"
                      errorOrTruncationOperation="Error"
                      errorRowDisposition="FailComponent"
                      name="JsonParserTransformOutput"
                      truncationRowDisposition="FailComponent">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Get Results.Outputs[JsonParserTransformOutput].Columns[result.notes]"
                          dataType="wstr"
                          externalMetadataColumnId="Package\Get and Upload Vendors\Partition 2\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.notes]"
                          length="1020"
                          lineageId="Package\Get and Upload Vendors\Partition 2\Get Results.Outputs[JsonParserTransformOutput].Columns[result.notes]"
                          name="result.notes" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Get Results.Outputs[JsonParserTransformOutput].Columns[result._id]"
                          dataType="i8"
                          externalMetadataColumnId="Package\Get and Upload Vendors\Partition 2\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result._id]"
                          lineageId="Package\Get and Upload Vendors\Partition 2\Get Results.Outputs[JsonParserTransformOutput].Columns[result._id]"
                          name="result._id" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Get Results.Outputs[JsonParserTransformOutput].Columns[result.etag]"
                          dataType="wstr"
                          externalMetadataColumnId="Package\Get and Upload Vendors\Partition 2\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.etag]"
                          length="68"
                          lineageId="Package\Get and Upload Vendors\Partition 2\Get Results.Outputs[JsonParserTransformOutput].Columns[result.etag]"
                          name="result.etag" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Get Results.Outputs[JsonParserTransformOutput].Columns[error]"
                          dataType="wstr"
                          externalMetadataColumnId="Package\Get and Upload Vendors\Partition 2\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[error]"
                          length="1020"
                          lineageId="Package\Get and Upload Vendors\Partition 2\Get Results.Outputs[JsonParserTransformOutput].Columns[error]"
                          name="error" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.system_record_state]"
                          dataType="wstr"
                          length="24"
                          name="result.system_record_state" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.system_ctime]"
                          dataType="i8"
                          name="result.system_ctime" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.system_modtime]"
                          dataType="i8"
                          name="result.system_modtime" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.system_search_key]"
                          dataType="wstr"
                          length="36"
                          name="result.system_search_key" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.address]"
                          dataType="wstr"
                          length="4"
                          name="result.address" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.address_postal]"
                          dataType="wstr"
                          length="1020"
                          name="result.address_postal" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.marketing_postcode]"
                          dataType="wstr"
                          length="28"
                          name="result.marketing_postcode" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.marketing_enquiry_source]"
                          dataType="wstr"
                          length="1020"
                          name="result.marketing_enquiry_source" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.marketing_gender]"
                          dataType="wstr"
                          length="1020"
                          name="result.marketing_gender" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.marketing_birthday]"
                          dataType="wstr"
                          length="1020"
                          name="result.marketing_birthday" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.notes]"
                          dataType="wstr"
                          length="1020"
                          name="result.notes" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.company_name]"
                          dataType="wstr"
                          length="36"
                          name="result.company_name" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.company_abn]"
                          dataType="wstr"
                          length="1020"
                          name="result.company_abn" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.website_url]"
                          dataType="wstr"
                          length="1020"
                          name="result.website_url" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.is_dnd]"
                          dataType="wstr"
                          length="1020"
                          name="result.is_dnd" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.type]"
                          dataType="wstr"
                          length="28"
                          name="result.type" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.interest_level]"
                          dataType="wstr"
                          length="1020"
                          name="result.interest_level" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.last_contacted_date]"
                          dataType="wstr"
                          length="1020"
                          name="result.last_contacted_date" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.name_legal]"
                          dataType="wstr"
                          length="1020"
                          name="result.name_legal" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.name_salutation]"
                          dataType="wstr"
                          length="1020"
                          name="result.name_salutation" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.name_addressee]"
                          dataType="wstr"
                          length="1020"
                          name="result.name_addressee" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.last_contacted_at]"
                          dataType="wstr"
                          length="1020"
                          name="result.last_contacted_at" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result._id]"
                          dataType="i8"
                          name="result._id" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.etag]"
                          dataType="wstr"
                          length="68"
                          name="result.etag" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.system_owner_user.id]"
                          dataType="wstr"
                          length="20"
                          name="result.system_owner_user.id" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.system_owner_user._name]"
                          dataType="wstr"
                          length="36"
                          name="result.system_owner_user._name" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.system_owner_user._first_name]"
                          dataType="wstr"
                          length="20"
                          name="result.system_owner_user._first_name" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.system_owner_user._last_name]"
                          dataType="wstr"
                          length="12"
                          name="result.system_owner_user._last_name" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.system_owner_user._email_address]"
                          dataType="wstr"
                          length="92"
                          name="result.system_owner_user._email_address" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.system_modified_user.id]"
                          dataType="wstr"
                          length="20"
                          name="result.system_modified_user.id" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.system_modified_user._name]"
                          dataType="wstr"
                          length="36"
                          name="result.system_modified_user._name" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.system_modified_user._first_name]"
                          dataType="wstr"
                          length="20"
                          name="result.system_modified_user._first_name" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.system_modified_user._last_name]"
                          dataType="wstr"
                          length="12"
                          name="result.system_modified_user._last_name" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.system_modified_user._email_address]"
                          dataType="wstr"
                          length="92"
                          name="result.system_modified_user._email_address" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.system_created_user.id]"
                          dataType="wstr"
                          length="20"
                          name="result.system_created_user.id" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.system_created_user._name]"
                          dataType="wstr"
                          length="36"
                          name="result.system_created_user._name" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.system_created_user._first_name]"
                          dataType="wstr"
                          length="20"
                          name="result.system_created_user._first_name" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.system_created_user._last_name]"
                          dataType="wstr"
                          length="12"
                          name="result.system_created_user._last_name" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.system_created_user._email_address]"
                          dataType="wstr"
                          length="92"
                          name="result.system_created_user._email_address" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.contact_image]"
                          dataType="wstr"
                          length="1020"
                          name="result.contact_image" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.company_size]"
                          dataType="wstr"
                          length="1020"
                          name="result.company_size" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.marketing_enquiry_method]"
                          dataType="wstr"
                          length="1020"
                          name="result.marketing_enquiry_method" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result._related.contact_emails]"
                          dataType="wstr"
                          length="812"
                          name="result._related.contact_emails" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result._related.contact_phones]"
                          dataType="wstr"
                          length="1356"
                          name="result._related.contact_phones" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result._related.contact_tags]"
                          dataType="wstr"
                          length="8"
                          name="result._related.contact_tags" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result._related.contact_documents]"
                          dataType="wstr"
                          length="8"
                          name="result._related.contact_documents" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result._related.contact_mailing_lists]"
                          dataType="wstr"
                          length="8"
                          name="result._related.contact_mailing_lists" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result._related.contact_relationships]"
                          dataType="wstr"
                          length="8"
                          name="result._related.contact_relationships" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result._related.contact_reln_property]"
                          dataType="wstr"
                          length="8"
                          name="result._related.contact_reln_property" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result._related.contact_reln_listing]"
                          dataType="wstr"
                          length="8"
                          name="result._related.contact_reln_listing" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.address_wash.present_on_lists]"
                          dataType="wstr"
                          length="8"
                          name="result.address_wash.present_on_lists" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.address_wash.user_override]"
                          dataType="wstr"
                          length="1020"
                          name="result.address_wash.user_override" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.address_wash.allow]"
                          dataType="bool"
                          name="result.address_wash.allow" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.address_postal_wash]"
                          dataType="wstr"
                          length="1020"
                          name="result.address_postal_wash" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.smart_categories]"
                          dataType="bool"
                          name="result.smart_categories" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result._security_user_rights]"
                          dataType="wstr"
                          length="260"
                          name="result._security_user_rights" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[error]"
                          dataType="wstr"
                          length="1020"
                          name="error" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 2\Get Results.Outputs[JsonParserTransform Error Output]"
                      isErrorOut="true"
                      name="JsonParserTransform Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Get Results.Outputs[JsonParserTransform Error Output].Columns[result.notes]"
                          dataType="wstr"
                          length="1020"
                          lineageId="Package\Get and Upload Vendors\Partition 2\Get Results.Outputs[JsonParserTransform Error Output].Columns[result.notes]"
                          name="result.notes" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Get Results.Outputs[JsonParserTransform Error Output].Columns[result._id]"
                          dataType="i8"
                          lineageId="Package\Get and Upload Vendors\Partition 2\Get Results.Outputs[JsonParserTransform Error Output].Columns[result._id]"
                          name="result._id" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Get Results.Outputs[JsonParserTransform Error Output].Columns[result.etag]"
                          dataType="wstr"
                          length="68"
                          lineageId="Package\Get and Upload Vendors\Partition 2\Get Results.Outputs[JsonParserTransform Error Output].Columns[result.etag]"
                          name="result.etag" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Get Results.Outputs[JsonParserTransform Error Output].Columns[error]"
                          dataType="wstr"
                          length="1020"
                          lineageId="Package\Get and Upload Vendors\Partition 2\Get Results.Outputs[JsonParserTransform Error Output].Columns[error]"
                          name="error" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Get Results.Outputs[JsonParserTransform Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 2\Get Results.Outputs[JsonParserTransform Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Get Results.Outputs[JsonParserTransform Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 2\Get Results.Outputs[JsonParserTransform Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Get Results.Outputs[JsonParserTransform Error Output].Columns[ErrorColumnName]"
                          codePage="1252"
                          dataType="str"
                          length="128"
                          lineageId="Package\Get and Upload Vendors\Partition 2\Get Results.Outputs[JsonParserTransform Error Output].Columns[ErrorColumnName]"
                          name="ErrorColumnName" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Get Results.Outputs[JsonParserTransform Error Output].Columns[ErrorMessage]"
                          dataType="wstr"
                          length="1024"
                          lineageId="Package\Get and Upload Vendors\Partition 2\Get Results.Outputs[JsonParserTransform Error Output].Columns[ErrorMessage]"
                          name="ErrorMessage" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Get Results.Outputs[JsonParserTransform Error Output].Columns[ErrorRawData]"
                          dataType="nText"
                          lineageId="Package\Get and Upload Vendors\Partition 2\Get Results.Outputs[JsonParserTransform Error Output].Columns[ErrorRawData]"
                          name="ErrorRawData" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Get and Upload Vendors\Partition 2\Get Vendors List"
                  componentClassID="Microsoft.OLEDBSource"
                  contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                  description="OLE DB Source"
                  name="Get Vendors List"
                  usesDispositions="true"
                  version="7">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset"></property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">SELECT * FROM ROSIE_ContactPush_staging WITH (NOLOCK) WHERE office_id = ? and entitytype = 1 and partition = 2</property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">2</property>
                    <property
                      dataType="System.String"
                      description="The mappings between the parameters in the SQL command and variables."
                      name="ParameterMapping">"@office_id:Input",{F3CDF2B4-5AA9-4436-972D-BB303A4202B3};</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Get and Upload Vendors\Partition 2\Get Vendors List.Connections[OleDbConnection]"
                      connectionManagerID="{78432CA1-1FEA-4ED4-9C0F-D552A4A9DE0E}:external"
                      connectionManagerRefId="Project.ConnectionManagers[InternetDB]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 2\Get Vendors List.Outputs[OLE DB Source Output]"
                      name="OLE DB Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Get Vendors List.Outputs[OLE DB Source Output].Columns[CustJSON]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Get and Upload Vendors\Partition 2\Get Vendors List.Outputs[OLE DB Source Output].ExternalColumns[CustJSON]"
                          length="3000"
                          lineageId="Package\Get and Upload Vendors\Partition 2\Get Vendors List.Outputs[OLE DB Source Output].Columns[CustJSON]"
                          name="CustJSON"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Get Vendors List.Outputs[OLE DB Source Output].Columns[AMLCheck]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Get and Upload Vendors\Partition 2\Get Vendors List.Outputs[OLE DB Source Output].ExternalColumns[AMLCheck]"
                          lineageId="Package\Get and Upload Vendors\Partition 2\Get Vendors List.Outputs[OLE DB Source Output].Columns[AMLCheck]"
                          name="AMLCheck"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Get Vendors List.Outputs[OLE DB Source Output].Columns[AMLJSON]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Get and Upload Vendors\Partition 2\Get Vendors List.Outputs[OLE DB Source Output].ExternalColumns[AMLJSON]"
                          length="3000"
                          lineageId="Package\Get and Upload Vendors\Partition 2\Get Vendors List.Outputs[OLE DB Source Output].Columns[AMLJSON]"
                          name="AMLJSON"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Get Vendors List.Outputs[OLE DB Source Output].Columns[office_id]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Get and Upload Vendors\Partition 2\Get Vendors List.Outputs[OLE DB Source Output].ExternalColumns[office_id]"
                          length="4"
                          lineageId="Package\Get and Upload Vendors\Partition 2\Get Vendors List.Outputs[OLE DB Source Output].Columns[office_id]"
                          name="office_id"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Get Vendors List.Outputs[OLE DB Source Output].Columns[Partition]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Get and Upload Vendors\Partition 2\Get Vendors List.Outputs[OLE DB Source Output].ExternalColumns[Partition]"
                          lineageId="Package\Get and Upload Vendors\Partition 2\Get Vendors List.Outputs[OLE DB Source Output].Columns[Partition]"
                          name="Partition"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Get Vendors List.Outputs[OLE DB Source Output].Columns[IDCHECKJSON]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Get and Upload Vendors\Partition 2\Get Vendors List.Outputs[OLE DB Source Output].ExternalColumns[IDCHECKJSON]"
                          length="3000"
                          lineageId="Package\Get and Upload Vendors\Partition 2\Get Vendors List.Outputs[OLE DB Source Output].Columns[IDCHECKJSON]"
                          name="IDCHECKJSON"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Get Vendors List.Outputs[OLE DB Source Output].Columns[ContactJSON]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Get and Upload Vendors\Partition 2\Get Vendors List.Outputs[OLE DB Source Output].ExternalColumns[ContactJSON]"
                          length="3000"
                          lineageId="Package\Get and Upload Vendors\Partition 2\Get Vendors List.Outputs[OLE DB Source Output].Columns[ContactJSON]"
                          name="ContactJSON"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Get Vendors List.Outputs[OLE DB Source Output].Columns[Reference]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Get and Upload Vendors\Partition 2\Get Vendors List.Outputs[OLE DB Source Output].ExternalColumns[Reference]"
                          length="25"
                          lineageId="Package\Get and Upload Vendors\Partition 2\Get Vendors List.Outputs[OLE DB Source Output].Columns[Reference]"
                          name="Reference"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Get Vendors List.Outputs[OLE DB Source Output].Columns[entityType]"
                          dataType="ui1"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Get and Upload Vendors\Partition 2\Get Vendors List.Outputs[OLE DB Source Output].ExternalColumns[entityType]"
                          lineageId="Package\Get and Upload Vendors\Partition 2\Get Vendors List.Outputs[OLE DB Source Output].Columns[entityType]"
                          name="entityType"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Get Vendors List.Outputs[OLE DB Source Output].ExternalColumns[CustJSON]"
                          codePage="1252"
                          dataType="str"
                          length="3000"
                          name="CustJSON" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Get Vendors List.Outputs[OLE DB Source Output].ExternalColumns[AMLCheck]"
                          dataType="i4"
                          name="AMLCheck" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Get Vendors List.Outputs[OLE DB Source Output].ExternalColumns[AMLJSON]"
                          codePage="1252"
                          dataType="str"
                          length="3000"
                          name="AMLJSON" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Get Vendors List.Outputs[OLE DB Source Output].ExternalColumns[office_id]"
                          codePage="1252"
                          dataType="str"
                          length="4"
                          name="office_id" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Get Vendors List.Outputs[OLE DB Source Output].ExternalColumns[Partition]"
                          dataType="i4"
                          name="Partition" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Get Vendors List.Outputs[OLE DB Source Output].ExternalColumns[IDCHECKJSON]"
                          codePage="1252"
                          dataType="str"
                          length="3000"
                          name="IDCHECKJSON" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Get Vendors List.Outputs[OLE DB Source Output].ExternalColumns[ContactJSON]"
                          codePage="1252"
                          dataType="str"
                          length="3000"
                          name="ContactJSON" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Get Vendors List.Outputs[OLE DB Source Output].ExternalColumns[Reference]"
                          codePage="1252"
                          dataType="str"
                          length="25"
                          name="Reference" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Get Vendors List.Outputs[OLE DB Source Output].ExternalColumns[entityType]"
                          dataType="ui1"
                          name="entityType" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 2\Get Vendors List.Outputs[OLE DB Source Error Output]"
                      isErrorOut="true"
                      name="OLE DB Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Get Vendors List.Outputs[OLE DB Source Error Output].Columns[ContactJSON]"
                          codePage="1252"
                          dataType="str"
                          length="3000"
                          lineageId="Package\Get and Upload Vendors\Partition 2\Get Vendors List.Outputs[OLE DB Source Error Output].Columns[ContactJSON]"
                          name="ContactJSON" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Get Vendors List.Outputs[OLE DB Source Error Output].Columns[Reference]"
                          codePage="1252"
                          dataType="str"
                          length="25"
                          lineageId="Package\Get and Upload Vendors\Partition 2\Get Vendors List.Outputs[OLE DB Source Error Output].Columns[Reference]"
                          name="Reference" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Get Vendors List.Outputs[OLE DB Source Error Output].Columns[CustJSON]"
                          codePage="1252"
                          dataType="str"
                          length="3000"
                          lineageId="Package\Get and Upload Vendors\Partition 2\Get Vendors List.Outputs[OLE DB Source Error Output].Columns[CustJSON]"
                          name="CustJSON" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Get Vendors List.Outputs[OLE DB Source Error Output].Columns[AMLCheck]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 2\Get Vendors List.Outputs[OLE DB Source Error Output].Columns[AMLCheck]"
                          name="AMLCheck" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Get Vendors List.Outputs[OLE DB Source Error Output].Columns[AMLJSON]"
                          codePage="1252"
                          dataType="str"
                          length="3000"
                          lineageId="Package\Get and Upload Vendors\Partition 2\Get Vendors List.Outputs[OLE DB Source Error Output].Columns[AMLJSON]"
                          name="AMLJSON" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Get Vendors List.Outputs[OLE DB Source Error Output].Columns[office_id]"
                          codePage="1252"
                          dataType="str"
                          length="4"
                          lineageId="Package\Get and Upload Vendors\Partition 2\Get Vendors List.Outputs[OLE DB Source Error Output].Columns[office_id]"
                          name="office_id" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Get Vendors List.Outputs[OLE DB Source Error Output].Columns[Partition]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 2\Get Vendors List.Outputs[OLE DB Source Error Output].Columns[Partition]"
                          name="Partition" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Get Vendors List.Outputs[OLE DB Source Error Output].Columns[IDCHECKJSON]"
                          codePage="1252"
                          dataType="str"
                          length="3000"
                          lineageId="Package\Get and Upload Vendors\Partition 2\Get Vendors List.Outputs[OLE DB Source Error Output].Columns[IDCHECKJSON]"
                          name="IDCHECKJSON" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Get Vendors List.Outputs[OLE DB Source Error Output].Columns[entityType]"
                          dataType="ui1"
                          lineageId="Package\Get and Upload Vendors\Partition 2\Get Vendors List.Outputs[OLE DB Source Error Output].Columns[entityType]"
                          name="entityType" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Get Vendors List.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 2\Get Vendors List.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Get Vendors List.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 2\Get Vendors List.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Get and Upload Vendors\Partition 2\Lookup"
                  componentClassID="Microsoft.Lookup"
                  contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
                  description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                  name="Lookup"
                  usesDispositions="true"
                  version="6">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the SQL statement that generates the lookup table."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">SELECT * FROM ROSIE_ContactPush_staging WITH (NOLOCK)
Where entitytype = 1</property>
                    <property
                      dataType="System.String"
                      description="Specifies a SQL statement that uses parameters to generate the lookup table."
                      expressionType="Notify"
                      name="SqlCommandParam"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from (SELECT * FROM ROSIE_ContactPush_staging WITH (NOLOCK)
Where entitytype = 1) [refTable]
where [refTable].[Reference] = ? and [refTable].[office_id] = ?</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the type of connection used to access the reference dataset."
                      name="ConnectionType"
                      typeConverter="LookupConnectionType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the cache type of the lookup table."
                      name="CacheType"
                      typeConverter="CacheType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                      name="NoMatchBehavior"
                      typeConverter="LookupNoMatchBehavior">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                      name="NoMatchCachePercentage">0</property>
                    <property
                      dataType="System.Int32"
                      description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                      name="MaxMemoryUsage">25</property>
                    <property
                      dataType="System.Int64"
                      description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                      name="MaxMemoryUsage64">25</property>
                    <property
                      dataType="System.String"
                      description="Indicates whether to reference metadata in an XML format."
                      name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="ContactJSON" dataType="DT_STR" length="3000" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="Reference" dataType="DT_STR" length="25" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="CustJSON" dataType="DT_STR" length="3000" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="AMLCheck" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="AMLJSON" dataType="DT_STR" length="3000" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="office_id" dataType="DT_STR" length="4" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="Partition" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="IDCHECKJSON" dataType="DT_STR" length="3000" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="entityType" dataType="DT_UI1" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                      name="ParameterMap">#{Package\Get and Upload Vendors\Partition 2\Map Results 1.Outputs[Derived Column Output].Columns[prop_ref]};#{Package\Get and Upload Vendors\Partition 2\Map Results 1.Outputs[Derived Column Output].Columns[office_Id]};</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                      name="TreatDuplicateKeysAsError">false</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Get and Upload Vendors\Partition 2\Lookup.Connections[OleDbConnection]"
                      connectionManagerID="{78432CA1-1FEA-4ED4-9C0F-D552A4A9DE0E}:external"
                      connectionManagerRefId="Project.ConnectionManagers[InternetDB]"
                      description="Connection manager used to access lookup data."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Get and Upload Vendors\Partition 2\Lookup.Inputs[Lookup Input]"
                      name="Lookup Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Lookup.Inputs[Lookup Input].Columns[office_Id]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="4"
                          cachedName="office_Id"
                          lineageId="Package\Get and Upload Vendors\Partition 2\Map Results 1.Outputs[Derived Column Output].Columns[office_Id]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">office_id</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Lookup.Inputs[Lookup Input].Columns[prop_ref]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="prop_ref"
                          lineageId="Package\Get and Upload Vendors\Partition 2\Map Results 1.Outputs[Derived Column Output].Columns[prop_ref]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">Reference</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 2\Lookup.Outputs[Lookup Match Output]"
                      errorOrTruncationOperation="Lookup"
                      errorRowDisposition="IgnoreFailure"
                      exclusionGroup="1"
                      name="Lookup Match Output"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 2\Lookup.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Lookup.Outputs[Lookup Match Output].Columns[office_id]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Copy Column"
                          length="4"
                          lineageId="Package\Get and Upload Vendors\Partition 2\Lookup.Outputs[Lookup Match Output].Columns[office_id]"
                          name="office_id"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">office_id</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Lookup.Outputs[Lookup Match Output].Columns[CustJSON]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Copy Column"
                          length="3000"
                          lineageId="Package\Get and Upload Vendors\Partition 2\Lookup.Outputs[Lookup Match Output].Columns[CustJSON]"
                          name="CustJSON"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">CustJSON</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Lookup.Outputs[Lookup Match Output].Columns[AMLCheck]"
                          dataType="i4"
                          errorOrTruncationOperation="Copy Column"
                          lineageId="Package\Get and Upload Vendors\Partition 2\Lookup.Outputs[Lookup Match Output].Columns[AMLCheck]"
                          name="AMLCheck"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">AMLCheck</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Lookup.Outputs[Lookup Match Output].Columns[AMLJSON]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Copy Column"
                          length="3000"
                          lineageId="Package\Get and Upload Vendors\Partition 2\Lookup.Outputs[Lookup Match Output].Columns[AMLJSON]"
                          name="AMLJSON"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">AMLJSON</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Lookup.Outputs[Lookup Match Output].Columns[IDCHECKJSON]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Copy Column"
                          length="3000"
                          lineageId="Package\Get and Upload Vendors\Partition 2\Lookup.Outputs[Lookup Match Output].Columns[IDCHECKJSON]"
                          name="IDCHECKJSON"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">IDCHECKJSON</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Lookup.Outputs[Lookup Match Output].Columns[ContactJSON]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Copy Column"
                          length="3000"
                          lineageId="Package\Get and Upload Vendors\Partition 2\Lookup.Outputs[Lookup Match Output].Columns[ContactJSON]"
                          name="ContactJSON"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">ContactJSON</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Lookup.Outputs[Lookup Match Output].Columns[Reference]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Copy Column"
                          length="25"
                          lineageId="Package\Get and Upload Vendors\Partition 2\Lookup.Outputs[Lookup Match Output].Columns[Reference]"
                          name="Reference"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">Reference</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 2\Lookup.Outputs[Lookup No Match Output]"
                      description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                      exclusionGroup="1"
                      name="Lookup No Match Output"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 2\Lookup.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 2\Lookup.Outputs[Lookup Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Lookup Error Output"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 2\Lookup.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Lookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 2\Lookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Lookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 2\Lookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Get and Upload Vendors\Partition 2\Main Record Count"
                  componentClassID="Microsoft.RowCount"
                  contactInfo="Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status."
                  name="Main Record Count">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the variable to hold the row count."
                      name="VariableName">User::RecCountProcessed</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Get and Upload Vendors\Partition 2\Main Record Count.Inputs[Row Count Input 1]"
                      hasSideEffects="true"
                      name="Row Count Input 1">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 2\Main Record Count.Outputs[Row Count Output 1]"
                      name="Row Count Output 1"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 2\Main Record Count.Inputs[Row Count Input 1]">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Get and Upload Vendors\Partition 2\Map Results 1"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Map Results 1"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Get and Upload Vendors\Partition 2\Map Results 1.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Map Results 1.Inputs[Derived Column Input].Columns[result.notes]"
                          cachedDataType="wstr"
                          cachedLength="1020"
                          cachedName="result.notes"
                          lineageId="Package\Get and Upload Vendors\Partition 2\Get Results.Outputs[JsonParserTransformOutput].Columns[result.notes]" />
                        <inputColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Map Results 1.Inputs[Derived Column Input].Columns[result._id]"
                          cachedDataType="i8"
                          cachedName="result._id"
                          lineageId="Package\Get and Upload Vendors\Partition 2\Get Results.Outputs[JsonParserTransformOutput].Columns[result._id]" />
                        <inputColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Map Results 1.Inputs[Derived Column Input].Columns[result.etag]"
                          cachedDataType="wstr"
                          cachedLength="68"
                          cachedName="result.etag"
                          lineageId="Package\Get and Upload Vendors\Partition 2\Get Results.Outputs[JsonParserTransformOutput].Columns[result.etag]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 2\Map Results 1.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 2\Map Results 1.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Map Results 1.Outputs[Derived Column Output].Columns[prop_ref]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Get and Upload Vendors\Partition 2\Map Results 1.Outputs[Derived Column Output].Columns[prop_ref]"
                          name="prop_ref"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_STR,50,1252)#{Package\Get and Upload Vendors\Partition 2\Get Results.Outputs[JsonParserTransformOutput].Columns[result.notes]}</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_STR,50,1252)[result.notes]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Map Results 1.Outputs[Derived Column Output].Columns[office_Id]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="4"
                          lineageId="Package\Get and Upload Vendors\Partition 2\Map Results 1.Outputs[Derived Column Output].Columns[office_Id]"
                          name="office_Id"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_STR,4,1252)@[$Package::PackageOfficeID]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_STR,4,1252)@[$Package::PackageOfficeID]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Map Results 1.Outputs[Derived Column Output].Columns[etag_contact]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="80"
                          lineageId="Package\Get and Upload Vendors\Partition 2\Map Results 1.Outputs[Derived Column Output].Columns[etag_contact]"
                          name="etag_contact"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_STR,80,1252)#{Package\Get and Upload Vendors\Partition 2\Get Results.Outputs[JsonParserTransformOutput].Columns[result.etag]}</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_STR,80,1252)[result.etag]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Map Results 1.Outputs[Derived Column Output].Columns[rid_contact]"
                          dataType="i8"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Get and Upload Vendors\Partition 2\Map Results 1.Outputs[Derived Column Output].Columns[rid_contact]"
                          name="rid_contact"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">#{Package\Get and Upload Vendors\Partition 2\Get Results.Outputs[JsonParserTransformOutput].Columns[result._id]}</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">[result._id]</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 2\Map Results 1.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 2\Map Results 1.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Map Results 1.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 2\Map Results 1.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Map Results 1.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 2\Map Results 1.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Get and Upload Vendors\Partition 2\Multicast"
                  componentClassID="Microsoft.Multicast"
                  contactInfo="Multicast;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Distributes every input row to every row in one or more outputs. For example, branch your data flow to make a copy of data so that some values can be masked before sharing with external partners."
                  name="Multicast">
                  <inputs>
                    <input
                      refId="Package\Get and Upload Vendors\Partition 2\Multicast.Inputs[Multicast Input 1]"
                      name="Multicast Input 1">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 2\Multicast.Outputs[Multicast Output 1]"
                      deleteOutputOnPathDetached="true"
                      name="Multicast Output 1"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 2\Multicast.Inputs[Multicast Input 1]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 2\Multicast.Outputs[Multicast Output 3]"
                      deleteOutputOnPathDetached="true"
                      name="Multicast Output 3"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 2\Multicast.Inputs[Multicast Input 1]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 2\Multicast.Outputs[Multicast Output 2]"
                      deleteOutputOnPathDetached="true"
                      name="Multicast Output 2"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 2\Multicast.Inputs[Multicast Input 1]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 2\Multicast.Outputs[Multicast Output 4]"
                      dangling="true"
                      deleteOutputOnPathDetached="true"
                      name="Multicast Output 4"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 2\Multicast.Inputs[Multicast Input 1]">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Get and Upload Vendors\Partition 2\Multicast 1"
                  componentClassID="Microsoft.Multicast"
                  contactInfo="Multicast;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Distributes every input row to every row in one or more outputs. For example, branch your data flow to make a copy of data so that some values can be masked before sharing with external partners."
                  name="Multicast 1">
                  <inputs>
                    <input
                      refId="Package\Get and Upload Vendors\Partition 2\Multicast 1.Inputs[Multicast Input 1]"
                      name="Multicast Input 1">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 2\Multicast 1.Outputs[Multicast Output 1]"
                      deleteOutputOnPathDetached="true"
                      name="Multicast Output 1"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 2\Multicast 1.Inputs[Multicast Input 1]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 2\Multicast 1.Outputs[Multicast Output 3]"
                      deleteOutputOnPathDetached="true"
                      name="Multicast Output 3"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 2\Multicast 1.Inputs[Multicast Input 1]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 2\Multicast 1.Outputs[Multicast Output 4]"
                      dangling="true"
                      deleteOutputOnPathDetached="true"
                      name="Multicast Output 4"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 2\Multicast 1.Inputs[Multicast Input 1]">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Get and Upload Vendors\Partition 2\Push Custom Fields"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Web API Destination; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                  description="The Web API destination can be used to send data to Web API URL (e.g. Submit or POST data to REST API/SOAP or other HTTP/HTTPS endpoints)"
                  name="Push Custom Fields"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                      expressionType="Notify"
                      name="LoggingMode"
                      typeConverter="ZappySys.PowerPack.Common.LoggingMode, ZappySys.PowerPack130, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                    <property
                      dataType="System.Boolean"
                      description="When you enable this property it will prefix timestamp before Log messages."
                      expressionType="Notify"
                      name="PrefixTimestamp">false</property>
                    <property
                      dataType="System.Null"
                      expressionType="Notify"
                      name="SelfRef"
                      typeConverter="NOTBROWSABLE" />
                    <property
                      dataType="System.String"
                      description="API URL you want to access"
                      expressionType="Notify"
                      name="HttpRequestUrl">{{User::PackageRosieURL}}</property>
                    <property
                      dataType="System.String"
                      description="Http Web Request Method (e.g. POST, GET, PUT, LIST, DELETE...). Refer your API documentation if you are not sure which method you have to use."
                      expressionType="Notify"
                      name="HttpRequestMethod">POST</property>
                    <property
                      dataType="System.String"
                      description="Set this if you want to set custom Http headers. You may use variable anywhere in the header value using syntax {{User::YourVarName}}. Syntax of Header key value pair is : &amp;lt;request&amp;gt;&amp;lt;header&amp;gt;&amp;lt;name&amp;gt;x-myheader-1&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;AAA&amp;lt;/value&amp;gt;&amp;lt;/header&amp;gt; &amp;lt;header&amp;gt;&amp;lt;name&amp;gt;x-myheader-2&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;BBB&amp;lt;/value&amp;gt;&amp;lt;/header&amp;gt;&amp;lt;/request&amp;gt;"
                      expressionType="Notify"
                      name="HttpHeaders"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">&lt;request&gt;&lt;header&gt;&lt;name&gt;Accept&lt;/name&gt;&lt;value&gt;*/*&lt;/value&gt;&lt;/header&gt;&lt;header&gt;&lt;name&gt;Cache-Control&lt;/name&gt;&lt;value&gt;no-cache&lt;/value&gt;&lt;/header&gt;&lt;/request&gt;</property>
                    <property
                      dataType="System.String"
                      description="User defined data you wish to send along with your HTTP Request (e.g. Upload file data, Form POST data). Usually you have to set content-type of your data but if you select RequestMethod=POST then system will automatically set content-type=application/x-www-form-urlencoded."
                      expressionType="Notify"
                      name="HttpRequestData"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies content type for data you wish to POST. If you select Default option then system default content type will be used (i.e. application/x-www-form-urlencoded). If you specify Content-Type header along with this option then header value takes precedence."
                      expressionType="Notify"
                      name="HttpRequestContentType"
                      typeConverter="ZappySys.Common.Web.HttpRequestContentType, ZappySys.Common, Version=1.0.2018.11017, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                    <property
                      dataType="System.Boolean"
                      description="If this option is true then component will continue without exception on 404 error (Url not found). This allows you to consume data gracefully."
                      expressionType="Notify"
                      name="ContinueOnUrlNotFoundError">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Ignore SSL certificate related errors. Example: if you getting SSL/TLS errors because of certificate expired or certificate is not from trusted authority or certificate is self-signed. By checking this option you will not get SSL/TLS error."
                      expressionType="Notify"
                      name="IgnoreCertificateErrors">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Allow unsecure ciphers/suites and curves for SSLS/TLS communication. Use this option to communicate with web servers which needs legacy / unsecured ciphers support. This option is only trigged when you change default SSL/TLS Version on advanced settings tab."
                      expressionType="Notify"
                      name="AllowUnsecureSuite">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Enable support for gzip or deflate compression. When you check this option compressed response automatically de-compressed saving bandwidth. This option is only valid if web server supports compressed response stream. Check your API documentation for more information."
                      expressionType="Notify"
                      name="EnableCompressionSupport">true</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies which security protocol is supported for HTTPS communication. Using this option you can enable legacy protocol or enforce to use latest version of security protocol (Note: TLS 1.2 is only supported in SSIS 2014 or Higher)."
                      expressionType="Notify"
                      name="SecurityProtocol"
                      typeConverter="ZappySys.PowerPack.Common.HttpsSecurityProtocolType, ZappySys.PowerPack130, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                    <property
                      dataType="System.Int32"
                      description="Wait time in milliseconds (Pause after each request). 0=No wait. Use this delay time if your API has limit on how many requests you can make in certain time frame."
                      expressionType="Notify"
                      name="WaitTime">0</property>
                    <property
                      dataType="System.Boolean"
                      description="When you redirect error to error output by default you get additional information in ErrorMessage column. Check this option if you need exact Response Body (Useful if its in JSON/XML format which needs to be parsed for additional information for later step)."
                      expressionType="Notify"
                      name="OnErrorOutputResponseBody">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Enable multiple requests using parallel threads."
                      expressionType="Notify"
                      name="EnableParallelRequests">true</property>
                    <property
                      dataType="System.Int32"
                      description="Maximum parallel threads to use for processing multiple web requests."
                      expressionType="Notify"
                      name="MaxParallelThreads">20</property>
                    <property
                      dataType="System.Boolean"
                      description="By default one request is sent for each input row. If your API supports multiple records in a single call via HTTP Body then enable this setting. See also BodyBatchSize, BodyHeader, BodyFooter and BodyRowSeparator property."
                      expressionType="Notify"
                      name="EnableBodyBatch">false</property>
                    <property
                      dataType="System.String"
                      description="When you have to wrap input content between opening and closing tags for each call then set this property to specify opening for body content. For Example if you want to build Body like this (send max 100 rows per call) ==&gt; { records : [ {...}, {...}, {...} ] } then you can set BatchSize=100, BodyHeader as &quot;{ records: [&quot; , BodyFooter as &quot;] }&quot; and BodyRowSeperator as comma {,}. This property is ignored if EnableBodyBatch=false."
                      expressionType="Notify"
                      name="BodyHeader"></property>
                    <property
                      dataType="System.String"
                      description="When you have to wrap input content between opening and closing tags for each call then set this property to specify closing for body content. For Example if you want to build Body like this (send max 100 rows per call) ==&gt; { records : [ {...}, {...}, {...} ] } then you can set BatchSize=100, BodyHeader as &quot;{ records: [&quot; , BodyFooter as &quot;] }&quot; and BodyRowSeperator as comma {,}. This property is ignored if EnableBodyBatch=false."
                      expressionType="Notify"
                      name="BodyFooter"></property>
                    <property
                      dataType="System.Int32"
                      description="If your API supports multiple records via HTTP Body then change this setting &gt; 1 to include multiple upstream records into single call. See also BodyHeader, BodyFooter and BodyRowSeparator property. This property is ignored if EnableBodyBatch=false."
                      expressionType="Notify"
                      name="BodyBatchSize">100</property>
                    <property
                      dataType="System.String"
                      description="When you submit multiple rows in a batch you can separate multiple documents / records using custom separator (e.g. in JSON Array you can use comma {,} as record separator if POST document is in array format [ {...}, {...}, {...} ] ). For last row of batch blank separator is used."
                      expressionType="Notify"
                      name="BodyRowSeparator"></property>
                    <property
                      dataType="System.Boolean"
                      description="Returns response data as binary data (e.g. Byte Array). Check this option is response is Zip file, Image file or any non text data which needs to be exported as raw data without any encoding."
                      expressionType="Notify"
                      name="TreatResponseAsBinary">false</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">ZappySys.WebApiDestination</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Get and Upload Vendors\Partition 2\Push Custom Fields.Connections[Connection]"
                      connectionManagerID="Package.ConnectionManagers[HTTP]"
                      connectionManagerRefId="Package.ConnectionManagers[HTTP]"
                      description="Connection manager for authentication (e.g. HTTP or OAuth Connection)"
                      name="Connection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Get and Upload Vendors\Partition 2\Push Custom Fields.Inputs[WebApiDestinationInput]"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="WebApiDestinationInput"
                      truncationRowDisposition="FailComponent">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Push Custom Fields.Inputs[WebApiDestinationInput].Columns[DerivedCustomJSON]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="3000"
                          cachedName="DerivedCustomJSON"
                          externalMetadataColumnId="Package\Get and Upload Vendors\Partition 2\Push Custom Fields.Inputs[WebApiDestinationInput].ExternalColumns[HttpRequestData]"
                          lineageId="Package\Get and Upload Vendors\Partition 2\Replace Rid_contact and prop_ref.Outputs[Derived Column Output].Columns[DerivedCustomJSON]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Push Custom Fields.Inputs[WebApiDestinationInput].ExternalColumns[HttpRequestUrl]"
                          dataType="wstr"
                          length="2000"
                          name="HttpRequestUrl" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Push Custom Fields.Inputs[WebApiDestinationInput].ExternalColumns[HttpRequestData]"
                          dataType="nText"
                          name="HttpRequestData" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 2\Push Custom Fields.Outputs[WebApiDestination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="WebApiDestination Error Output"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 2\Push Custom Fields.Inputs[WebApiDestinationInput]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Push Custom Fields.Outputs[WebApiDestination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 2\Push Custom Fields.Outputs[WebApiDestination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Push Custom Fields.Outputs[WebApiDestination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 2\Push Custom Fields.Outputs[WebApiDestination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Push Custom Fields.Outputs[WebApiDestination Error Output].Columns[ErrorColumnName]"
                          codePage="1252"
                          dataType="str"
                          length="128"
                          lineageId="Package\Get and Upload Vendors\Partition 2\Push Custom Fields.Outputs[WebApiDestination Error Output].Columns[ErrorColumnName]"
                          name="ErrorColumnName" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Push Custom Fields.Outputs[WebApiDestination Error Output].Columns[ErrorMessage]"
                          dataType="nText"
                          lineageId="Package\Get and Upload Vendors\Partition 2\Push Custom Fields.Outputs[WebApiDestination Error Output].Columns[ErrorMessage]"
                          name="ErrorMessage" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 2\Push Custom Fields.Outputs[Response Output]"
                      exclusionGroup="1"
                      name="Response Output"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 2\Push Custom Fields.Inputs[WebApiDestinationInput]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Push Custom Fields.Outputs[Response Output].Columns[ResponseText]"
                          dataType="nText"
                          lineageId="Package\Get and Upload Vendors\Partition 2\Push Custom Fields.Outputs[Response Output].Columns[ResponseText]"
                          name="ResponseText" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Push Custom Fields.Outputs[Response Output].Columns[StatusCode]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 2\Push Custom Fields.Outputs[Response Output].Columns[StatusCode]"
                          name="StatusCode" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Get and Upload Vendors\Partition 2\Push ID Check Data 1"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Web API Destination; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                  description="The Web API destination can be used to send data to Web API URL (e.g. Submit or POST data to REST API/SOAP or other HTTP/HTTPS endpoints)"
                  name="Push ID Check Data 1"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                      expressionType="Notify"
                      name="LoggingMode"
                      typeConverter="ZappySys.PowerPack.Common.LoggingMode, ZappySys.PowerPack130, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                    <property
                      dataType="System.Boolean"
                      description="When you enable this property it will prefix timestamp before Log messages."
                      expressionType="Notify"
                      name="PrefixTimestamp">false</property>
                    <property
                      dataType="System.Null"
                      expressionType="Notify"
                      name="SelfRef"
                      typeConverter="NOTBROWSABLE" />
                    <property
                      dataType="System.String"
                      description="API URL you want to access"
                      expressionType="Notify"
                      name="HttpRequestUrl">{{User::PackageRosieURL}}</property>
                    <property
                      dataType="System.String"
                      description="Http Web Request Method (e.g. POST, GET, PUT, LIST, DELETE...). Refer your API documentation if you are not sure which method you have to use."
                      expressionType="Notify"
                      name="HttpRequestMethod">POST</property>
                    <property
                      dataType="System.String"
                      description="Set this if you want to set custom Http headers. You may use variable anywhere in the header value using syntax {{User::YourVarName}}. Syntax of Header key value pair is : &amp;lt;request&amp;gt;&amp;lt;header&amp;gt;&amp;lt;name&amp;gt;x-myheader-1&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;AAA&amp;lt;/value&amp;gt;&amp;lt;/header&amp;gt; &amp;lt;header&amp;gt;&amp;lt;name&amp;gt;x-myheader-2&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;BBB&amp;lt;/value&amp;gt;&amp;lt;/header&amp;gt;&amp;lt;/request&amp;gt;"
                      expressionType="Notify"
                      name="HttpHeaders"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">&lt;request&gt;&lt;header&gt;&lt;name&gt;Accept&lt;/name&gt;&lt;value&gt;*/*&lt;/value&gt;&lt;/header&gt;&lt;header&gt;&lt;name&gt;Cache-Control&lt;/name&gt;&lt;value&gt;no-cache&lt;/value&gt;&lt;/header&gt;&lt;/request&gt;</property>
                    <property
                      dataType="System.String"
                      description="User defined data you wish to send along with your HTTP Request (e.g. Upload file data, Form POST data). Usually you have to set content-type of your data but if you select RequestMethod=POST then system will automatically set content-type=application/x-www-form-urlencoded."
                      expressionType="Notify"
                      name="HttpRequestData"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies content type for data you wish to POST. If you select Default option then system default content type will be used (i.e. application/x-www-form-urlencoded). If you specify Content-Type header along with this option then header value takes precedence."
                      expressionType="Notify"
                      name="HttpRequestContentType"
                      typeConverter="ZappySys.Common.Web.HttpRequestContentType, ZappySys.Common, Version=1.0.2018.11017, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                    <property
                      dataType="System.Boolean"
                      description="If this option is true then component will continue without exception on 404 error (Url not found). This allows you to consume data gracefully."
                      expressionType="Notify"
                      name="ContinueOnUrlNotFoundError">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Ignore SSL certificate related errors. Example: if you getting SSL/TLS errors because of certificate expired or certificate is not from trusted authority or certificate is self-signed. By checking this option you will not get SSL/TLS error."
                      expressionType="Notify"
                      name="IgnoreCertificateErrors">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Allow unsecure ciphers/suites and curves for SSLS/TLS communication. Use this option to communicate with web servers which needs legacy / unsecured ciphers support. This option is only trigged when you change default SSL/TLS Version on advanced settings tab."
                      expressionType="Notify"
                      name="AllowUnsecureSuite">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Enable support for gzip or deflate compression. When you check this option compressed response automatically de-compressed saving bandwidth. This option is only valid if web server supports compressed response stream. Check your API documentation for more information."
                      expressionType="Notify"
                      name="EnableCompressionSupport">true</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies which security protocol is supported for HTTPS communication. Using this option you can enable legacy protocol or enforce to use latest version of security protocol (Note: TLS 1.2 is only supported in SSIS 2014 or Higher)."
                      expressionType="Notify"
                      name="SecurityProtocol"
                      typeConverter="ZappySys.PowerPack.Common.HttpsSecurityProtocolType, ZappySys.PowerPack130, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                    <property
                      dataType="System.Int32"
                      description="Wait time in milliseconds (Pause after each request). 0=No wait. Use this delay time if your API has limit on how many requests you can make in certain time frame."
                      expressionType="Notify"
                      name="WaitTime">0</property>
                    <property
                      dataType="System.Boolean"
                      description="When you redirect error to error output by default you get additional information in ErrorMessage column. Check this option if you need exact Response Body (Useful if its in JSON/XML format which needs to be parsed for additional information for later step)."
                      expressionType="Notify"
                      name="OnErrorOutputResponseBody">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Enable multiple requests using parallel threads."
                      expressionType="Notify"
                      name="EnableParallelRequests">true</property>
                    <property
                      dataType="System.Int32"
                      description="Maximum parallel threads to use for processing multiple web requests."
                      expressionType="Notify"
                      name="MaxParallelThreads">20</property>
                    <property
                      dataType="System.Boolean"
                      description="By default one request is sent for each input row. If your API supports multiple records in a single call via HTTP Body then enable this setting. See also BodyBatchSize, BodyHeader, BodyFooter and BodyRowSeparator property."
                      expressionType="Notify"
                      name="EnableBodyBatch">false</property>
                    <property
                      dataType="System.String"
                      description="When you have to wrap input content between opening and closing tags for each call then set this property to specify opening for body content. For Example if you want to build Body like this (send max 100 rows per call) ==&gt; { records : [ {...}, {...}, {...} ] } then you can set BatchSize=100, BodyHeader as &quot;{ records: [&quot; , BodyFooter as &quot;] }&quot; and BodyRowSeperator as comma {,}. This property is ignored if EnableBodyBatch=false."
                      expressionType="Notify"
                      name="BodyHeader"></property>
                    <property
                      dataType="System.String"
                      description="When you have to wrap input content between opening and closing tags for each call then set this property to specify closing for body content. For Example if you want to build Body like this (send max 100 rows per call) ==&gt; { records : [ {...}, {...}, {...} ] } then you can set BatchSize=100, BodyHeader as &quot;{ records: [&quot; , BodyFooter as &quot;] }&quot; and BodyRowSeperator as comma {,}. This property is ignored if EnableBodyBatch=false."
                      expressionType="Notify"
                      name="BodyFooter"></property>
                    <property
                      dataType="System.Int32"
                      description="If your API supports multiple records via HTTP Body then change this setting &gt; 1 to include multiple upstream records into single call. See also BodyHeader, BodyFooter and BodyRowSeparator property. This property is ignored if EnableBodyBatch=false."
                      expressionType="Notify"
                      name="BodyBatchSize">100</property>
                    <property
                      dataType="System.String"
                      description="When you submit multiple rows in a batch you can separate multiple documents / records using custom separator (e.g. in JSON Array you can use comma {,} as record separator if POST document is in array format [ {...}, {...}, {...} ] ). For last row of batch blank separator is used."
                      expressionType="Notify"
                      name="BodyRowSeparator"></property>
                    <property
                      dataType="System.Boolean"
                      description="Returns response data as binary data (e.g. Byte Array). Check this option is response is Zip file, Image file or any non text data which needs to be exported as raw data without any encoding."
                      expressionType="Notify"
                      name="TreatResponseAsBinary">false</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">ZappySys.WebApiDestination</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Get and Upload Vendors\Partition 2\Push ID Check Data 1.Connections[Connection]"
                      connectionManagerID="Package.ConnectionManagers[HTTP]"
                      connectionManagerRefId="Package.ConnectionManagers[HTTP]"
                      description="Connection manager for authentication (e.g. HTTP or OAuth Connection)"
                      name="Connection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Get and Upload Vendors\Partition 2\Push ID Check Data 1.Inputs[WebApiDestinationInput]"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="WebApiDestinationInput"
                      truncationRowDisposition="FailComponent">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Push ID Check Data 1.Inputs[WebApiDestinationInput].Columns[DerivedIDCheckJSON]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="3000"
                          cachedName="DerivedIDCheckJSON"
                          externalMetadataColumnId="Package\Get and Upload Vendors\Partition 2\Push ID Check Data 1.Inputs[WebApiDestinationInput].ExternalColumns[HttpRequestData]"
                          lineageId="Package\Get and Upload Vendors\Partition 2\Replace Rid_contact and prop_ref.Outputs[Derived Column Output].Columns[DerivedIDCheckJSON]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Push ID Check Data 1.Inputs[WebApiDestinationInput].ExternalColumns[HttpRequestUrl]"
                          dataType="wstr"
                          length="2000"
                          name="HttpRequestUrl" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Push ID Check Data 1.Inputs[WebApiDestinationInput].ExternalColumns[HttpRequestData]"
                          dataType="nText"
                          name="HttpRequestData" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 2\Push ID Check Data 1.Outputs[WebApiDestination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="WebApiDestination Error Output"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 2\Push ID Check Data 1.Inputs[WebApiDestinationInput]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Push ID Check Data 1.Outputs[WebApiDestination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 2\Push ID Check Data 1.Outputs[WebApiDestination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Push ID Check Data 1.Outputs[WebApiDestination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 2\Push ID Check Data 1.Outputs[WebApiDestination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Push ID Check Data 1.Outputs[WebApiDestination Error Output].Columns[ErrorColumnName]"
                          codePage="1252"
                          dataType="str"
                          length="128"
                          lineageId="Package\Get and Upload Vendors\Partition 2\Push ID Check Data 1.Outputs[WebApiDestination Error Output].Columns[ErrorColumnName]"
                          name="ErrorColumnName" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Push ID Check Data 1.Outputs[WebApiDestination Error Output].Columns[ErrorMessage]"
                          dataType="nText"
                          lineageId="Package\Get and Upload Vendors\Partition 2\Push ID Check Data 1.Outputs[WebApiDestination Error Output].Columns[ErrorMessage]"
                          name="ErrorMessage" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 2\Push ID Check Data 1.Outputs[Response Output]"
                      exclusionGroup="1"
                      name="Response Output"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 2\Push ID Check Data 1.Inputs[WebApiDestinationInput]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Push ID Check Data 1.Outputs[Response Output].Columns[ResponseText]"
                          dataType="nText"
                          lineageId="Package\Get and Upload Vendors\Partition 2\Push ID Check Data 1.Outputs[Response Output].Columns[ResponseText]"
                          name="ResponseText" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Push ID Check Data 1.Outputs[Response Output].Columns[StatusCode]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 2\Push ID Check Data 1.Outputs[Response Output].Columns[StatusCode]"
                          name="StatusCode" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Get and Upload Vendors\Partition 2\Replace Rid_contact and prop_ref"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Replace Rid_contact and prop_ref"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Get and Upload Vendors\Partition 2\Replace Rid_contact and prop_ref.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Replace Rid_contact and prop_ref.Inputs[Derived Column Input].Columns[rid_contact]"
                          cachedDataType="i8"
                          cachedName="rid_contact"
                          lineageId="Package\Get and Upload Vendors\Partition 2\Map Results 1.Outputs[Derived Column Output].Columns[rid_contact]" />
                        <inputColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Replace Rid_contact and prop_ref.Inputs[Derived Column Input].Columns[DerivedCustomJSON]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="3000"
                          cachedName="DerivedCustomJSON"
                          lineageId="Package\Get and Upload Vendors\Partition 2\Replace Token 1 1.Outputs[Derived Column Output].Columns[DerivedCustomJSON]" />
                        <inputColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Replace Rid_contact and prop_ref.Inputs[Derived Column Input].Columns[prop_ref]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="prop_ref"
                          lineageId="Package\Get and Upload Vendors\Partition 2\Map Results 1.Outputs[Derived Column Output].Columns[prop_ref]" />
                        <inputColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Replace Rid_contact and prop_ref.Inputs[Derived Column Input].Columns[DerivedAMLJSON]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="3000"
                          cachedName="DerivedAMLJSON"
                          lineageId="Package\Get and Upload Vendors\Partition 2\Replace Token 1 1.Outputs[Derived Column Output].Columns[DerivedAMLJSON]" />
                        <inputColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Replace Rid_contact and prop_ref.Inputs[Derived Column Input].Columns[DerivedIDCheckJSON]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="3000"
                          cachedName="DerivedIDCheckJSON"
                          lineageId="Package\Get and Upload Vendors\Partition 2\Replace Token 1 1.Outputs[Derived Column Output].Columns[DerivedIDCheckJSON]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 2\Replace Rid_contact and prop_ref.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 2\Replace Rid_contact and prop_ref.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Replace Rid_contact and prop_ref.Outputs[Derived Column Output].Columns[DerivedCustomJSON]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="3000"
                          lineageId="Package\Get and Upload Vendors\Partition 2\Replace Rid_contact and prop_ref.Outputs[Derived Column Output].Columns[DerivedCustomJSON]"
                          name="DerivedCustomJSON"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_STR,3000,1252)([REPLACE]([REPLACE](#{Package\Get and Upload Vendors\Partition 2\Replace Token 1 1.Outputs[Derived Column Output].Columns[DerivedCustomJSON]},"{{RID_CONTACT}}",(DT_STR,30,1252)#{Package\Get and Upload Vendors\Partition 2\Map Results 1.Outputs[Derived Column Output].Columns[rid_contact]}),"{{PROP_REF}}",[REPLACE]([REPLACE](#{Package\Get and Upload Vendors\Partition 2\Map Results 1.Outputs[Derived Column Output].Columns[prop_ref]},"VENDOR1_",""),"VENDOR2_","")))</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_STR,3000,1252)(REPLACE(REPLACE(DerivedCustomJSON,"{{RID_CONTACT}}",(DT_STR,30,1252)rid_contact),"{{PROP_REF}}",REPLACE(REPLACE(prop_ref,"VENDOR1_",""),"VENDOR2_","")))</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Replace Rid_contact and prop_ref.Outputs[Derived Column Output].Columns[DerivedAMLJSON]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="3000"
                          lineageId="Package\Get and Upload Vendors\Partition 2\Replace Rid_contact and prop_ref.Outputs[Derived Column Output].Columns[DerivedAMLJSON]"
                          name="DerivedAMLJSON"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_STR,3000,1252)[REPLACE](#{Package\Get and Upload Vendors\Partition 2\Replace Token 1 1.Outputs[Derived Column Output].Columns[DerivedAMLJSON]},"{{RID_CONTACT}}",(DT_STR,30,1252)#{Package\Get and Upload Vendors\Partition 2\Map Results 1.Outputs[Derived Column Output].Columns[rid_contact]})</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_STR,3000,1252)REPLACE(DerivedAMLJSON,"{{RID_CONTACT}}",(DT_STR,30,1252)rid_contact)</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Replace Rid_contact and prop_ref.Outputs[Derived Column Output].Columns[DerivedIDCheckJSON]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="3000"
                          lineageId="Package\Get and Upload Vendors\Partition 2\Replace Rid_contact and prop_ref.Outputs[Derived Column Output].Columns[DerivedIDCheckJSON]"
                          name="DerivedIDCheckJSON"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_STR,3000,1252)[REPLACE](#{Package\Get and Upload Vendors\Partition 2\Replace Token 1 1.Outputs[Derived Column Output].Columns[DerivedIDCheckJSON]},"{{RID_CONTACT}}",(DT_STR,30,1252)#{Package\Get and Upload Vendors\Partition 2\Map Results 1.Outputs[Derived Column Output].Columns[rid_contact]})</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_STR,3000,1252)REPLACE(DerivedIDCheckJSON,"{{RID_CONTACT}}",(DT_STR,30,1252)rid_contact)</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 2\Replace Rid_contact and prop_ref.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 2\Replace Rid_contact and prop_ref.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Replace Rid_contact and prop_ref.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 2\Replace Rid_contact and prop_ref.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Replace Rid_contact and prop_ref.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 2\Replace Rid_contact and prop_ref.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Get and Upload Vendors\Partition 2\Replace Token"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Replace Token"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Get and Upload Vendors\Partition 2\Replace Token.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Replace Token.Inputs[Derived Column Input].Columns[CustJSON]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="3000"
                          cachedName="CustJSON"
                          lineageId="Package\Get and Upload Vendors\Partition 2\Get Vendors List.Outputs[OLE DB Source Output].Columns[CustJSON]" />
                        <inputColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Replace Token.Inputs[Derived Column Input].Columns[AMLJSON]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="3000"
                          cachedName="AMLJSON"
                          lineageId="Package\Get and Upload Vendors\Partition 2\Get Vendors List.Outputs[OLE DB Source Output].Columns[AMLJSON]" />
                        <inputColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Replace Token.Inputs[Derived Column Input].Columns[IDCHECKJSON]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="3000"
                          cachedName="IDCHECKJSON"
                          lineageId="Package\Get and Upload Vendors\Partition 2\Get Vendors List.Outputs[OLE DB Source Output].Columns[IDCHECKJSON]" />
                        <inputColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Replace Token.Inputs[Derived Column Input].Columns[ContactJSON]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="3000"
                          cachedName="ContactJSON"
                          lineageId="Package\Get and Upload Vendors\Partition 2\Get Vendors List.Outputs[OLE DB Source Output].Columns[ContactJSON]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 2\Replace Token.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 2\Replace Token.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Replace Token.Outputs[Derived Column Output].Columns[DerivedVendorJSON]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="3000"
                          lineageId="Package\Get and Upload Vendors\Partition 2\Replace Token.Outputs[Derived Column Output].Columns[DerivedVendorJSON]"
                          name="DerivedVendorJSON"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_STR,3000,1252)[REPLACE](#{Package\Get and Upload Vendors\Partition 2\Get Vendors List.Outputs[OLE DB Source Output].Columns[ContactJSON]},"{{TOKEN}}",@[User::APIToken])</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_STR,3000,1252)REPLACE(ContactJSON,"{{TOKEN}}",@[User::APIToken])</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Replace Token.Outputs[Derived Column Output].Columns[DerivedCustomJSON]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="3000"
                          lineageId="Package\Get and Upload Vendors\Partition 2\Replace Token.Outputs[Derived Column Output].Columns[DerivedCustomJSON]"
                          name="DerivedCustomJSON"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_STR,3000,1252)([REPLACE](#{Package\Get and Upload Vendors\Partition 2\Get Vendors List.Outputs[OLE DB Source Output].Columns[CustJSON]},"{{TOKEN}}",@[User::APIToken]))</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_STR,3000,1252)(REPLACE(CustJSON,"{{TOKEN}}",@[User::APIToken]))</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Replace Token.Outputs[Derived Column Output].Columns[DerivedAMLJSON]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="3000"
                          lineageId="Package\Get and Upload Vendors\Partition 2\Replace Token.Outputs[Derived Column Output].Columns[DerivedAMLJSON]"
                          name="DerivedAMLJSON"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_STR,3000,1252)([REPLACE](#{Package\Get and Upload Vendors\Partition 2\Get Vendors List.Outputs[OLE DB Source Output].Columns[AMLJSON]},"{{TOKEN}}",@[User::APIToken]))</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_STR,3000,1252)(REPLACE(AMLJSON,"{{TOKEN}}",@[User::APIToken]))</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Replace Token.Outputs[Derived Column Output].Columns[DerivedIDCheckJSON]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="3000"
                          lineageId="Package\Get and Upload Vendors\Partition 2\Replace Token.Outputs[Derived Column Output].Columns[DerivedIDCheckJSON]"
                          name="DerivedIDCheckJSON"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_STR,3000,1252)([REPLACE](#{Package\Get and Upload Vendors\Partition 2\Get Vendors List.Outputs[OLE DB Source Output].Columns[IDCHECKJSON]},"{{TOKEN}}",@[User::APIToken]))</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_STR,3000,1252)(REPLACE(IDCHECKJSON,"{{TOKEN}}",@[User::APIToken]))</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 2\Replace Token.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 2\Replace Token.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Replace Token.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 2\Replace Token.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Replace Token.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 2\Replace Token.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Get and Upload Vendors\Partition 2\Replace Token 1 1"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Replace Token 1 1"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Get and Upload Vendors\Partition 2\Replace Token 1 1.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Replace Token 1 1.Inputs[Derived Column Input].Columns[CustJSON]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="3000"
                          cachedName="CustJSON"
                          lineageId="Package\Get and Upload Vendors\Partition 2\Lookup.Outputs[Lookup Match Output].Columns[CustJSON]" />
                        <inputColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Replace Token 1 1.Inputs[Derived Column Input].Columns[AMLJSON]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="3000"
                          cachedName="AMLJSON"
                          lineageId="Package\Get and Upload Vendors\Partition 2\Lookup.Outputs[Lookup Match Output].Columns[AMLJSON]" />
                        <inputColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Replace Token 1 1.Inputs[Derived Column Input].Columns[IDCHECKJSON]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="3000"
                          cachedName="IDCHECKJSON"
                          lineageId="Package\Get and Upload Vendors\Partition 2\Lookup.Outputs[Lookup Match Output].Columns[IDCHECKJSON]" />
                        <inputColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Replace Token 1 1.Inputs[Derived Column Input].Columns[ContactJSON]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="3000"
                          cachedName="ContactJSON"
                          lineageId="Package\Get and Upload Vendors\Partition 2\Lookup.Outputs[Lookup Match Output].Columns[ContactJSON]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 2\Replace Token 1 1.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 2\Replace Token 1 1.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Replace Token 1 1.Outputs[Derived Column Output].Columns[DerivedVendorJSON]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="3000"
                          lineageId="Package\Get and Upload Vendors\Partition 2\Replace Token 1 1.Outputs[Derived Column Output].Columns[DerivedVendorJSON]"
                          name="DerivedVendorJSON"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_STR,3000,1252)[REPLACE](#{Package\Get and Upload Vendors\Partition 2\Lookup.Outputs[Lookup Match Output].Columns[ContactJSON]},"{{TOKEN}}",@[User::APIToken])</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_STR,3000,1252)REPLACE(ContactJSON,"{{TOKEN}}",@[User::APIToken])</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Replace Token 1 1.Outputs[Derived Column Output].Columns[DerivedCustomJSON]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="3000"
                          lineageId="Package\Get and Upload Vendors\Partition 2\Replace Token 1 1.Outputs[Derived Column Output].Columns[DerivedCustomJSON]"
                          name="DerivedCustomJSON"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_STR,3000,1252)([REPLACE](#{Package\Get and Upload Vendors\Partition 2\Lookup.Outputs[Lookup Match Output].Columns[CustJSON]},"{{TOKEN}}",@[User::APIToken]))</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_STR,3000,1252)(REPLACE(CustJSON,"{{TOKEN}}",@[User::APIToken]))</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Replace Token 1 1.Outputs[Derived Column Output].Columns[DerivedAMLJSON]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="3000"
                          lineageId="Package\Get and Upload Vendors\Partition 2\Replace Token 1 1.Outputs[Derived Column Output].Columns[DerivedAMLJSON]"
                          name="DerivedAMLJSON"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_STR,3000,1252)([REPLACE](#{Package\Get and Upload Vendors\Partition 2\Lookup.Outputs[Lookup Match Output].Columns[AMLJSON]},"{{TOKEN}}",@[User::APIToken]))</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_STR,3000,1252)(REPLACE(AMLJSON,"{{TOKEN}}",@[User::APIToken]))</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Replace Token 1 1.Outputs[Derived Column Output].Columns[DerivedIDCheckJSON]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="3000"
                          lineageId="Package\Get and Upload Vendors\Partition 2\Replace Token 1 1.Outputs[Derived Column Output].Columns[DerivedIDCheckJSON]"
                          name="DerivedIDCheckJSON"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_STR,3000,1252)([REPLACE](#{Package\Get and Upload Vendors\Partition 2\Lookup.Outputs[Lookup Match Output].Columns[IDCHECKJSON]},"{{TOKEN}}",@[User::APIToken]))</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_STR,3000,1252)(REPLACE(IDCHECKJSON,"{{TOKEN}}",@[User::APIToken]))</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 2\Replace Token 1 1.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 2\Replace Token 1 1.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Replace Token 1 1.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 2\Replace Token 1 1.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Replace Token 1 1.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 2\Replace Token 1 1.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Get and Upload Vendors\Partition 2\Row Count Success"
                  componentClassID="Microsoft.RowCount"
                  contactInfo="Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status."
                  name="Row Count Success">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the variable to hold the row count."
                      name="VariableName">User::RecCountSuccess</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Get and Upload Vendors\Partition 2\Row Count Success.Inputs[Row Count Input 1]"
                      hasSideEffects="true"
                      name="Row Count Input 1">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 2\Row Count Success.Outputs[Row Count Output 1]"
                      name="Row Count Output 1"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 2\Row Count Success.Inputs[Row Count Input 1]">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Get and Upload Vendors\Partition 2\Trash Destination 1"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Trash Destination; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                  description="The trash destination is used to create dummy destination which ends data path without any processing."
                  name="Trash Destination 1"
                  version="2">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                      expressionType="Notify"
                      name="LoggingMode"
                      typeConverter="ZappySys.PowerPack.Common.LoggingMode, ZappySys.PowerPack130, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                    <property
                      dataType="System.Boolean"
                      description="When you enable this property it will prefix timestamp before Log messages."
                      expressionType="Notify"
                      name="PrefixTimestamp">false</property>
                    <property
                      dataType="System.Null"
                      expressionType="Notify"
                      name="SelfRef"
                      typeConverter="NOTBROWSABLE" />
                    <property
                      dataType="System.String"
                      description="File path where you want to save data"
                      expressionType="Notify"
                      name="FilePath"></property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates if you want to save input data to comma separated text file"
                      expressionType="Notify"
                      name="SaveDataToFile">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Append data to file"
                      expressionType="Notify"
                      name="Append">false</property>
                    <property
                      dataType="System.String"
                      description="RowSeparator"
                      expressionType="Notify"
                      name="RowSeparator">{NEWLINE}</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether you want to overwrite target file if exists"
                      expressionType="Notify"
                      name="OverwriteFileIfExists">true</property>
                    <property
                      dataType="System.String"
                      description="ColumnSeparator"
                      expressionType="Notify"
                      name="ColumnSeparator">,</property>
                    <property
                      dataType="System.Boolean"
                      description="SupportUnicode"
                      expressionType="Notify"
                      name="SupportUnicode">true</property>
                    <property
                      dataType="System.Boolean"
                      description="ColumnNamesInFirstRow"
                      expressionType="Notify"
                      name="ColumnNamesInFirstRow">true</property>
                    <property
                      dataType="System.Boolean"
                      description="QuoteDataIfNeeded"
                      expressionType="Notify"
                      name="QuoteDataIfNeeded">true</property>
                    <property
                      dataType="System.String"
                      description="Date time format string for any column with DT_DBDATETIME, DT_DBDATETIME2 or DB_DATE format"
                      expressionType="Notify"
                      name="DateTimeFormat">yyyy-MM-dd HH:mm:ss</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">ZappySys.TrashDestination</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Get and Upload Vendors\Partition 2\Trash Destination 1.Inputs[TrashDestinationInput]"
                      hasSideEffects="true"
                      name="TrashDestinationInput">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                </component>
                <component
                  refId="Package\Get and Upload Vendors\Partition 2\Trash Destination 1 1"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Trash Destination; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                  description="The trash destination is used to create dummy destination which ends data path without any processing."
                  name="Trash Destination 1 1"
                  version="2">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                      expressionType="Notify"
                      name="LoggingMode"
                      typeConverter="ZappySys.PowerPack.Common.LoggingMode, ZappySys.PowerPack130, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                    <property
                      dataType="System.Boolean"
                      description="When you enable this property it will prefix timestamp before Log messages."
                      expressionType="Notify"
                      name="PrefixTimestamp">false</property>
                    <property
                      dataType="System.Null"
                      expressionType="Notify"
                      name="SelfRef"
                      typeConverter="NOTBROWSABLE" />
                    <property
                      dataType="System.String"
                      description="File path where you want to save data"
                      expressionType="Notify"
                      name="FilePath"></property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates if you want to save input data to comma separated text file"
                      expressionType="Notify"
                      name="SaveDataToFile">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Append data to file"
                      expressionType="Notify"
                      name="Append">false</property>
                    <property
                      dataType="System.String"
                      description="RowSeparator"
                      expressionType="Notify"
                      name="RowSeparator">{NEWLINE}</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether you want to overwrite target file if exists"
                      expressionType="Notify"
                      name="OverwriteFileIfExists">true</property>
                    <property
                      dataType="System.String"
                      description="ColumnSeparator"
                      expressionType="Notify"
                      name="ColumnSeparator">,</property>
                    <property
                      dataType="System.Boolean"
                      description="SupportUnicode"
                      expressionType="Notify"
                      name="SupportUnicode">true</property>
                    <property
                      dataType="System.Boolean"
                      description="ColumnNamesInFirstRow"
                      expressionType="Notify"
                      name="ColumnNamesInFirstRow">true</property>
                    <property
                      dataType="System.Boolean"
                      description="QuoteDataIfNeeded"
                      expressionType="Notify"
                      name="QuoteDataIfNeeded">true</property>
                    <property
                      dataType="System.String"
                      description="Date time format string for any column with DT_DBDATETIME, DT_DBDATETIME2 or DB_DATE format"
                      expressionType="Notify"
                      name="DateTimeFormat">yyyy-MM-dd HH:mm:ss</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">ZappySys.TrashDestination</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Get and Upload Vendors\Partition 2\Trash Destination 1 1.Inputs[TrashDestinationInput]"
                      hasSideEffects="true"
                      name="TrashDestinationInput">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                </component>
                <component
                  refId="Package\Get and Upload Vendors\Partition 2\Trash Destination 1 1 1"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Trash Destination; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                  description="The trash destination is used to create dummy destination which ends data path without any processing."
                  name="Trash Destination 1 1 1"
                  version="2">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                      expressionType="Notify"
                      name="LoggingMode"
                      typeConverter="ZappySys.PowerPack.Common.LoggingMode, ZappySys.PowerPack130, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                    <property
                      dataType="System.Boolean"
                      description="When you enable this property it will prefix timestamp before Log messages."
                      expressionType="Notify"
                      name="PrefixTimestamp">false</property>
                    <property
                      dataType="System.Null"
                      expressionType="Notify"
                      name="SelfRef"
                      typeConverter="NOTBROWSABLE" />
                    <property
                      dataType="System.String"
                      description="File path where you want to save data"
                      expressionType="Notify"
                      name="FilePath"></property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates if you want to save input data to comma separated text file"
                      expressionType="Notify"
                      name="SaveDataToFile">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Append data to file"
                      expressionType="Notify"
                      name="Append">false</property>
                    <property
                      dataType="System.String"
                      description="RowSeparator"
                      expressionType="Notify"
                      name="RowSeparator">{NEWLINE}</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether you want to overwrite target file if exists"
                      expressionType="Notify"
                      name="OverwriteFileIfExists">true</property>
                    <property
                      dataType="System.String"
                      description="ColumnSeparator"
                      expressionType="Notify"
                      name="ColumnSeparator">,</property>
                    <property
                      dataType="System.Boolean"
                      description="SupportUnicode"
                      expressionType="Notify"
                      name="SupportUnicode">true</property>
                    <property
                      dataType="System.Boolean"
                      description="ColumnNamesInFirstRow"
                      expressionType="Notify"
                      name="ColumnNamesInFirstRow">true</property>
                    <property
                      dataType="System.Boolean"
                      description="QuoteDataIfNeeded"
                      expressionType="Notify"
                      name="QuoteDataIfNeeded">true</property>
                    <property
                      dataType="System.String"
                      description="Date time format string for any column with DT_DBDATETIME, DT_DBDATETIME2 or DB_DATE format"
                      expressionType="Notify"
                      name="DateTimeFormat">yyyy-MM-dd HH:mm:ss</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">ZappySys.TrashDestination</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Get and Upload Vendors\Partition 2\Trash Destination 1 1 1.Inputs[TrashDestinationInput]"
                      hasSideEffects="true"
                      name="TrashDestinationInput">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                </component>
                <component
                  refId="Package\Get and Upload Vendors\Partition 2\Trash Destination 1 1 1 1"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Trash Destination; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                  description="The trash destination is used to create dummy destination which ends data path without any processing."
                  name="Trash Destination 1 1 1 1"
                  version="2">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                      expressionType="Notify"
                      name="LoggingMode"
                      typeConverter="ZappySys.PowerPack.Common.LoggingMode, ZappySys.PowerPack130, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                    <property
                      dataType="System.Boolean"
                      description="When you enable this property it will prefix timestamp before Log messages."
                      expressionType="Notify"
                      name="PrefixTimestamp">false</property>
                    <property
                      dataType="System.Null"
                      expressionType="Notify"
                      name="SelfRef"
                      typeConverter="NOTBROWSABLE" />
                    <property
                      dataType="System.String"
                      description="File path where you want to save data"
                      expressionType="Notify"
                      name="FilePath"></property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates if you want to save input data to comma separated text file"
                      expressionType="Notify"
                      name="SaveDataToFile">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Append data to file"
                      expressionType="Notify"
                      name="Append">false</property>
                    <property
                      dataType="System.String"
                      description="RowSeparator"
                      expressionType="Notify"
                      name="RowSeparator">{NEWLINE}</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether you want to overwrite target file if exists"
                      expressionType="Notify"
                      name="OverwriteFileIfExists">true</property>
                    <property
                      dataType="System.String"
                      description="ColumnSeparator"
                      expressionType="Notify"
                      name="ColumnSeparator">,</property>
                    <property
                      dataType="System.Boolean"
                      description="SupportUnicode"
                      expressionType="Notify"
                      name="SupportUnicode">true</property>
                    <property
                      dataType="System.Boolean"
                      description="ColumnNamesInFirstRow"
                      expressionType="Notify"
                      name="ColumnNamesInFirstRow">true</property>
                    <property
                      dataType="System.Boolean"
                      description="QuoteDataIfNeeded"
                      expressionType="Notify"
                      name="QuoteDataIfNeeded">true</property>
                    <property
                      dataType="System.String"
                      description="Date time format string for any column with DT_DBDATETIME, DT_DBDATETIME2 or DB_DATE format"
                      expressionType="Notify"
                      name="DateTimeFormat">yyyy-MM-dd HH:mm:ss</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">ZappySys.TrashDestination</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Get and Upload Vendors\Partition 2\Trash Destination 1 1 1 1.Inputs[TrashDestinationInput]"
                      hasSideEffects="true"
                      name="TrashDestinationInput">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                </component>
                <component
                  refId="Package\Get and Upload Vendors\Partition 2\Trash Destination 1 1 4 1"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Trash Destination; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                  description="The trash destination is used to create dummy destination which ends data path without any processing."
                  name="Trash Destination 1 1 4 1"
                  version="2">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                      expressionType="Notify"
                      name="LoggingMode"
                      typeConverter="ZappySys.PowerPack.Common.LoggingMode, ZappySys.PowerPack130, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                    <property
                      dataType="System.Boolean"
                      description="When you enable this property it will prefix timestamp before Log messages."
                      expressionType="Notify"
                      name="PrefixTimestamp">false</property>
                    <property
                      dataType="System.Null"
                      expressionType="Notify"
                      name="SelfRef"
                      typeConverter="NOTBROWSABLE" />
                    <property
                      dataType="System.String"
                      description="File path where you want to save data"
                      expressionType="Notify"
                      name="FilePath"></property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates if you want to save input data to comma separated text file"
                      expressionType="Notify"
                      name="SaveDataToFile">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Append data to file"
                      expressionType="Notify"
                      name="Append">false</property>
                    <property
                      dataType="System.String"
                      description="RowSeparator"
                      expressionType="Notify"
                      name="RowSeparator">{NEWLINE}</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether you want to overwrite target file if exists"
                      expressionType="Notify"
                      name="OverwriteFileIfExists">true</property>
                    <property
                      dataType="System.String"
                      description="ColumnSeparator"
                      expressionType="Notify"
                      name="ColumnSeparator">,</property>
                    <property
                      dataType="System.Boolean"
                      description="SupportUnicode"
                      expressionType="Notify"
                      name="SupportUnicode">true</property>
                    <property
                      dataType="System.Boolean"
                      description="ColumnNamesInFirstRow"
                      expressionType="Notify"
                      name="ColumnNamesInFirstRow">true</property>
                    <property
                      dataType="System.Boolean"
                      description="QuoteDataIfNeeded"
                      expressionType="Notify"
                      name="QuoteDataIfNeeded">true</property>
                    <property
                      dataType="System.String"
                      description="Date time format string for any column with DT_DBDATETIME, DT_DBDATETIME2 or DB_DATE format"
                      expressionType="Notify"
                      name="DateTimeFormat">yyyy-MM-dd HH:mm:ss</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">ZappySys.TrashDestination</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Get and Upload Vendors\Partition 2\Trash Destination 1 1 4 1.Inputs[TrashDestinationInput]"
                      hasSideEffects="true"
                      name="TrashDestinationInput">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                </component>
                <component
                  refId="Package\Get and Upload Vendors\Partition 2\Update RID"
                  componentClassID="Microsoft.OLEDBCommand"
                  contactInfo="OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
                  description="Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time."
                  name="Update RID"
                  usesDispositions="true"
                  version="2">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">exec Rosie_uspUpdVendorContactRid ?,?,?,?</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Get and Upload Vendors\Partition 2\Update RID.Connections[OleDbConnection]"
                      connectionManagerID="{78432CA1-1FEA-4ED4-9C0F-D552A4A9DE0E}:external"
                      connectionManagerRefId="Project.ConnectionManagers[InternetDB]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Get and Upload Vendors\Partition 2\Update RID.Inputs[OLE DB Command Input]"
                      errorOrTruncationOperation="Command Execution"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Command Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Update RID.Inputs[OLE DB Command Input].Columns[office_Id]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="4"
                          cachedName="office_Id"
                          externalMetadataColumnId="Package\Get and Upload Vendors\Partition 2\Update RID.Inputs[OLE DB Command Input].ExternalColumns[@office_id]"
                          lineageId="Package\Get and Upload Vendors\Partition 2\Map Results 1.Outputs[Derived Column Output].Columns[office_Id]" />
                        <inputColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Update RID.Inputs[OLE DB Command Input].Columns[rid_contact]"
                          cachedDataType="i8"
                          cachedName="rid_contact"
                          externalMetadataColumnId="Package\Get and Upload Vendors\Partition 2\Update RID.Inputs[OLE DB Command Input].ExternalColumns[@rid_contact]"
                          lineageId="Package\Get and Upload Vendors\Partition 2\Map Results 1.Outputs[Derived Column Output].Columns[rid_contact]" />
                        <inputColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Update RID.Inputs[OLE DB Command Input].Columns[etag_contact]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="80"
                          cachedName="etag_contact"
                          externalMetadataColumnId="Package\Get and Upload Vendors\Partition 2\Update RID.Inputs[OLE DB Command Input].ExternalColumns[@etag_contact]"
                          lineageId="Package\Get and Upload Vendors\Partition 2\Map Results 1.Outputs[Derived Column Output].Columns[etag_contact]" />
                        <inputColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Update RID.Inputs[OLE DB Command Input].Columns[prop_ref]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="prop_ref"
                          externalMetadataColumnId="Package\Get and Upload Vendors\Partition 2\Update RID.Inputs[OLE DB Command Input].ExternalColumns[@prop_Ref]"
                          lineageId="Package\Get and Upload Vendors\Partition 2\Map Results 1.Outputs[Derived Column Output].Columns[prop_ref]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Update RID.Inputs[OLE DB Command Input].ExternalColumns[@office_id]"
                          codePage="1252"
                          dataType="str"
                          length="4"
                          name="@office_id">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Update RID.Inputs[OLE DB Command Input].ExternalColumns[@rid_contact]"
                          dataType="i4"
                          name="@rid_contact">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">81</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Update RID.Inputs[OLE DB Command Input].ExternalColumns[@etag_contact]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="@etag_contact">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Update RID.Inputs[OLE DB Command Input].ExternalColumns[@prop_Ref]"
                          codePage="1252"
                          dataType="str"
                          length="25"
                          name="@prop_Ref">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 2\Update RID.Outputs[OLE DB Command Output]"
                      exclusionGroup="1"
                      name="OLE DB Command Output"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 2\Update RID.Inputs[OLE DB Command Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 2\Update RID.Outputs[OLE DB Command Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Command Error Output"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 2\Update RID.Inputs[OLE DB Command Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Update RID.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 2\Update RID.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 2\Update RID.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 2\Update RID.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Get and Upload Vendors\Partition 2.Paths[Derived Column Output]"
                  endId="Package\Get and Upload Vendors\Partition 2\Multicast.Inputs[Multicast Input 1]"
                  name="Derived Column Output"
                  startId="Package\Get and Upload Vendors\Partition 2\Replace Rid_contact and prop_ref.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Get and Upload Vendors\Partition 2.Paths[Derived Column Output1]"
                  endId="Package\Get and Upload Vendors\Partition 2\Replace Rid_contact and prop_ref.Inputs[Derived Column Input]"
                  name="Derived Column Output"
                  startId="Package\Get and Upload Vendors\Partition 2\Replace Token 1 1.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Get and Upload Vendors\Partition 2.Paths[Derived Column Output2]"
                  endId="Package\Get and Upload Vendors\Partition 2\Create Contact.Inputs[WebApiDestinationInput]"
                  name="Derived Column Output"
                  startId="Package\Get and Upload Vendors\Partition 2\Replace Token.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Get and Upload Vendors\Partition 2.Paths[Derived Column Output3]"
                  endId="Package\Get and Upload Vendors\Partition 2\Multicast 1.Inputs[Multicast Input 1]"
                  name="Derived Column Output"
                  startId="Package\Get and Upload Vendors\Partition 2\Map Results 1.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Get and Upload Vendors\Partition 2.Paths[Do nothing]"
                  endId="Package\Get and Upload Vendors\Partition 2\Trash Destination 1 1 1 1.Inputs[TrashDestinationInput]"
                  name="Do nothing"
                  startId="Package\Get and Upload Vendors\Partition 2\Conditional Split.Outputs[Do nothing]" />
                <path
                  refId="Package\Get and Upload Vendors\Partition 2.Paths[JsonParserTransformOutput]"
                  endId="Package\Get and Upload Vendors\Partition 2\Check Error 1.Inputs[Conditional Split Input]"
                  name="JsonParserTransformOutput"
                  startId="Package\Get and Upload Vendors\Partition 2\Get Results.Outputs[JsonParserTransformOutput]" />
                <path
                  refId="Package\Get and Upload Vendors\Partition 2.Paths[Lookup Match Output]"
                  endId="Package\Get and Upload Vendors\Partition 2\Replace Token 1 1.Inputs[Derived Column Input]"
                  name="Lookup Match Output"
                  startId="Package\Get and Upload Vendors\Partition 2\Lookup.Outputs[Lookup Match Output]" />
                <path
                  refId="Package\Get and Upload Vendors\Partition 2.Paths[Multicast Output 1]"
                  endId="Package\Get and Upload Vendors\Partition 2\Push Custom Fields.Inputs[WebApiDestinationInput]"
                  name="Multicast Output 1"
                  startId="Package\Get and Upload Vendors\Partition 2\Multicast.Outputs[Multicast Output 1]" />
                <path
                  refId="Package\Get and Upload Vendors\Partition 2.Paths[Multicast Output 11]"
                  endId="Package\Get and Upload Vendors\Partition 2\Update RID.Inputs[OLE DB Command Input]"
                  name="Multicast Output 1"
                  startId="Package\Get and Upload Vendors\Partition 2\Multicast 1.Outputs[Multicast Output 1]" />
                <path
                  refId="Package\Get and Upload Vendors\Partition 2.Paths[Multicast Output 2]"
                  endId="Package\Get and Upload Vendors\Partition 2\Push ID Check Data 1.Inputs[WebApiDestinationInput]"
                  name="Multicast Output 2"
                  startId="Package\Get and Upload Vendors\Partition 2\Multicast.Outputs[Multicast Output 2]" />
                <path
                  refId="Package\Get and Upload Vendors\Partition 2.Paths[Multicast Output 31]"
                  endId="Package\Get and Upload Vendors\Partition 2\Conditional Split.Inputs[Conditional Split Input]"
                  name="Multicast Output 3"
                  startId="Package\Get and Upload Vendors\Partition 2\Multicast.Outputs[Multicast Output 3]" />
                <path
                  refId="Package\Get and Upload Vendors\Partition 2.Paths[Multicast Output 3]"
                  endId="Package\Get and Upload Vendors\Partition 2\Lookup.Inputs[Lookup Input]"
                  name="Multicast Output 3"
                  startId="Package\Get and Upload Vendors\Partition 2\Multicast 1.Outputs[Multicast Output 3]" />
                <path
                  refId="Package\Get and Upload Vendors\Partition 2.Paths[Need To Flag AML]"
                  endId="Package\Get and Upload Vendors\Partition 2\AML.Inputs[WebApiDestinationInput]"
                  name="Need To Flag AML"
                  startId="Package\Get and Upload Vendors\Partition 2\Conditional Split.Outputs[Need To Flag AML]" />
                <path
                  refId="Package\Get and Upload Vendors\Partition 2.Paths[No Error]"
                  endId="Package\Get and Upload Vendors\Partition 2\Map Results 1.Inputs[Derived Column Input]"
                  name="No Error"
                  startId="Package\Get and Upload Vendors\Partition 2\Check Error 1.Outputs[No Error]" />
                <path
                  refId="Package\Get and Upload Vendors\Partition 2.Paths[OLE DB Command Output]"
                  endId="Package\Get and Upload Vendors\Partition 2\Row Count Success.Inputs[Row Count Input 1]"
                  name="OLE DB Command Output"
                  startId="Package\Get and Upload Vendors\Partition 2\Update RID.Outputs[OLE DB Command Output]" />
                <path
                  refId="Package\Get and Upload Vendors\Partition 2.Paths[OLE DB Source Output]"
                  endId="Package\Get and Upload Vendors\Partition 2\Main Record Count.Inputs[Row Count Input 1]"
                  name="OLE DB Source Output"
                  startId="Package\Get and Upload Vendors\Partition 2\Get Vendors List.Outputs[OLE DB Source Output]" />
                <path
                  refId="Package\Get and Upload Vendors\Partition 2.Paths[Response Output]"
                  endId="Package\Get and Upload Vendors\Partition 2\Trash Destination 1 1 4 1.Inputs[TrashDestinationInput]"
                  name="Response Output"
                  startId="Package\Get and Upload Vendors\Partition 2\Push ID Check Data 1.Outputs[Response Output]" />
                <path
                  refId="Package\Get and Upload Vendors\Partition 2.Paths[Response Output1]"
                  endId="Package\Get and Upload Vendors\Partition 2\Trash Destination 1 1 1.Inputs[TrashDestinationInput]"
                  name="Response Output"
                  startId="Package\Get and Upload Vendors\Partition 2\AML.Outputs[Response Output]" />
                <path
                  refId="Package\Get and Upload Vendors\Partition 2.Paths[Response Output2]"
                  endId="Package\Get and Upload Vendors\Partition 2\Trash Destination 1 1.Inputs[TrashDestinationInput]"
                  name="Response Output"
                  startId="Package\Get and Upload Vendors\Partition 2\Push Custom Fields.Outputs[Response Output]" />
                <path
                  refId="Package\Get and Upload Vendors\Partition 2.Paths[Response Output3]"
                  endId="Package\Get and Upload Vendors\Partition 2\Get Results.Inputs[JsonParserTransformInput]"
                  name="Response Output"
                  startId="Package\Get and Upload Vendors\Partition 2\Create Contact.Outputs[Response Output]" />
                <path
                  refId="Package\Get and Upload Vendors\Partition 2.Paths[Row Count Output 1]"
                  endId="Package\Get and Upload Vendors\Partition 2\Replace Token.Inputs[Derived Column Input]"
                  name="Row Count Output 1"
                  startId="Package\Get and Upload Vendors\Partition 2\Main Record Count.Outputs[Row Count Output 1]" />
                <path
                  refId="Package\Get and Upload Vendors\Partition 2.Paths[Row Count Output 11]"
                  endId="Package\Get and Upload Vendors\Partition 2\Trash Destination 1.Inputs[TrashDestinationInput]"
                  name="Row Count Output 1"
                  startId="Package\Get and Upload Vendors\Partition 2\Row Count Success.Outputs[Row Count Output 1]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Get and Upload Vendors\Partition 3"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{dc3edea0-291f-4cbf-8280-4b03c88a1a87}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Partition 3"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:TransactionOption="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Get and Upload Vendors\Partition 3\AML"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Web API Destination; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                  description="The Web API destination can be used to send data to Web API URL (e.g. Submit or POST data to REST API/SOAP or other HTTP/HTTPS endpoints)"
                  name="AML"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                      expressionType="Notify"
                      name="LoggingMode"
                      typeConverter="ZappySys.PowerPack.Common.LoggingMode, ZappySys.PowerPack130, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                    <property
                      dataType="System.Boolean"
                      description="When you enable this property it will prefix timestamp before Log messages."
                      expressionType="Notify"
                      name="PrefixTimestamp">false</property>
                    <property
                      dataType="System.Null"
                      expressionType="Notify"
                      name="SelfRef"
                      typeConverter="NOTBROWSABLE" />
                    <property
                      dataType="System.String"
                      description="API URL you want to access"
                      expressionType="Notify"
                      name="HttpRequestUrl">{{User::PackageRosieURL}}</property>
                    <property
                      dataType="System.String"
                      description="Http Web Request Method (e.g. POST, GET, PUT, LIST, DELETE...). Refer your API documentation if you are not sure which method you have to use."
                      expressionType="Notify"
                      name="HttpRequestMethod">POST</property>
                    <property
                      dataType="System.String"
                      description="Set this if you want to set custom Http headers. You may use variable anywhere in the header value using syntax {{User::YourVarName}}. Syntax of Header key value pair is : &amp;lt;request&amp;gt;&amp;lt;header&amp;gt;&amp;lt;name&amp;gt;x-myheader-1&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;AAA&amp;lt;/value&amp;gt;&amp;lt;/header&amp;gt; &amp;lt;header&amp;gt;&amp;lt;name&amp;gt;x-myheader-2&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;BBB&amp;lt;/value&amp;gt;&amp;lt;/header&amp;gt;&amp;lt;/request&amp;gt;"
                      expressionType="Notify"
                      name="HttpHeaders"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">&lt;request&gt;&lt;header&gt;&lt;name&gt;Accept&lt;/name&gt;&lt;value&gt;*/*&lt;/value&gt;&lt;/header&gt;&lt;header&gt;&lt;name&gt;Cache-Control&lt;/name&gt;&lt;value&gt;no-cache&lt;/value&gt;&lt;/header&gt;&lt;/request&gt;</property>
                    <property
                      dataType="System.String"
                      description="User defined data you wish to send along with your HTTP Request (e.g. Upload file data, Form POST data). Usually you have to set content-type of your data but if you select RequestMethod=POST then system will automatically set content-type=application/x-www-form-urlencoded."
                      expressionType="Notify"
                      name="HttpRequestData"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies content type for data you wish to POST. If you select Default option then system default content type will be used (i.e. application/x-www-form-urlencoded). If you specify Content-Type header along with this option then header value takes precedence."
                      expressionType="Notify"
                      name="HttpRequestContentType"
                      typeConverter="ZappySys.Common.Web.HttpRequestContentType, ZappySys.Common, Version=1.0.2018.11017, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                    <property
                      dataType="System.Boolean"
                      description="If this option is true then component will continue without exception on 404 error (Url not found). This allows you to consume data gracefully."
                      expressionType="Notify"
                      name="ContinueOnUrlNotFoundError">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Ignore SSL certificate related errors. Example: if you getting SSL/TLS errors because of certificate expired or certificate is not from trusted authority or certificate is self-signed. By checking this option you will not get SSL/TLS error."
                      expressionType="Notify"
                      name="IgnoreCertificateErrors">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Allow unsecure ciphers/suites and curves for SSLS/TLS communication. Use this option to communicate with web servers which needs legacy / unsecured ciphers support. This option is only trigged when you change default SSL/TLS Version on advanced settings tab."
                      expressionType="Notify"
                      name="AllowUnsecureSuite">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Enable support for gzip or deflate compression. When you check this option compressed response automatically de-compressed saving bandwidth. This option is only valid if web server supports compressed response stream. Check your API documentation for more information."
                      expressionType="Notify"
                      name="EnableCompressionSupport">true</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies which security protocol is supported for HTTPS communication. Using this option you can enable legacy protocol or enforce to use latest version of security protocol (Note: TLS 1.2 is only supported in SSIS 2014 or Higher)."
                      expressionType="Notify"
                      name="SecurityProtocol"
                      typeConverter="ZappySys.PowerPack.Common.HttpsSecurityProtocolType, ZappySys.PowerPack130, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                    <property
                      dataType="System.Int32"
                      description="Wait time in milliseconds (Pause after each request). 0=No wait. Use this delay time if your API has limit on how many requests you can make in certain time frame."
                      expressionType="Notify"
                      name="WaitTime">0</property>
                    <property
                      dataType="System.Boolean"
                      description="When you redirect error to error output by default you get additional information in ErrorMessage column. Check this option if you need exact Response Body (Useful if its in JSON/XML format which needs to be parsed for additional information for later step)."
                      expressionType="Notify"
                      name="OnErrorOutputResponseBody">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Enable multiple requests using parallel threads."
                      expressionType="Notify"
                      name="EnableParallelRequests">true</property>
                    <property
                      dataType="System.Int32"
                      description="Maximum parallel threads to use for processing multiple web requests."
                      expressionType="Notify"
                      name="MaxParallelThreads">20</property>
                    <property
                      dataType="System.Boolean"
                      description="By default one request is sent for each input row. If your API supports multiple records in a single call via HTTP Body then enable this setting. See also BodyBatchSize, BodyHeader, BodyFooter and BodyRowSeparator property."
                      expressionType="Notify"
                      name="EnableBodyBatch">false</property>
                    <property
                      dataType="System.String"
                      description="When you have to wrap input content between opening and closing tags for each call then set this property to specify opening for body content. For Example if you want to build Body like this (send max 100 rows per call) ==&gt; { records : [ {...}, {...}, {...} ] } then you can set BatchSize=100, BodyHeader as &quot;{ records: [&quot; , BodyFooter as &quot;] }&quot; and BodyRowSeperator as comma {,}. This property is ignored if EnableBodyBatch=false."
                      expressionType="Notify"
                      name="BodyHeader"></property>
                    <property
                      dataType="System.String"
                      description="When you have to wrap input content between opening and closing tags for each call then set this property to specify closing for body content. For Example if you want to build Body like this (send max 100 rows per call) ==&gt; { records : [ {...}, {...}, {...} ] } then you can set BatchSize=100, BodyHeader as &quot;{ records: [&quot; , BodyFooter as &quot;] }&quot; and BodyRowSeperator as comma {,}. This property is ignored if EnableBodyBatch=false."
                      expressionType="Notify"
                      name="BodyFooter"></property>
                    <property
                      dataType="System.Int32"
                      description="If your API supports multiple records via HTTP Body then change this setting &gt; 1 to include multiple upstream records into single call. See also BodyHeader, BodyFooter and BodyRowSeparator property. This property is ignored if EnableBodyBatch=false."
                      expressionType="Notify"
                      name="BodyBatchSize">100</property>
                    <property
                      dataType="System.String"
                      description="When you submit multiple rows in a batch you can separate multiple documents / records using custom separator (e.g. in JSON Array you can use comma {,} as record separator if POST document is in array format [ {...}, {...}, {...} ] ). For last row of batch blank separator is used."
                      expressionType="Notify"
                      name="BodyRowSeparator"></property>
                    <property
                      dataType="System.Boolean"
                      description="Returns response data as binary data (e.g. Byte Array). Check this option is response is Zip file, Image file or any non text data which needs to be exported as raw data without any encoding."
                      expressionType="Notify"
                      name="TreatResponseAsBinary">false</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">ZappySys.WebApiDestination</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Get and Upload Vendors\Partition 3\AML.Connections[Connection]"
                      connectionManagerID="Package.ConnectionManagers[HTTP]"
                      connectionManagerRefId="Package.ConnectionManagers[HTTP]"
                      description="Connection manager for authentication (e.g. HTTP or OAuth Connection)"
                      name="Connection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Get and Upload Vendors\Partition 3\AML.Inputs[WebApiDestinationInput]"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="WebApiDestinationInput"
                      truncationRowDisposition="FailComponent">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Get and Upload Vendors\Partition 3\AML.Inputs[WebApiDestinationInput].Columns[DerivedAMLJSON]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="3000"
                          cachedName="DerivedAMLJSON"
                          externalMetadataColumnId="Package\Get and Upload Vendors\Partition 3\AML.Inputs[WebApiDestinationInput].ExternalColumns[HttpRequestData]"
                          lineageId="Package\Get and Upload Vendors\Partition 3\Replace Rid_contact and prop_ref.Outputs[Derived Column Output].Columns[DerivedAMLJSON]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 3\AML.Inputs[WebApiDestinationInput].ExternalColumns[HttpRequestUrl]"
                          dataType="wstr"
                          length="2000"
                          name="HttpRequestUrl" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 3\AML.Inputs[WebApiDestinationInput].ExternalColumns[HttpRequestData]"
                          dataType="nText"
                          name="HttpRequestData" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 3\AML.Outputs[WebApiDestination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="WebApiDestination Error Output"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 3\AML.Inputs[WebApiDestinationInput]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 3\AML.Outputs[WebApiDestination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 3\AML.Outputs[WebApiDestination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 3\AML.Outputs[WebApiDestination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 3\AML.Outputs[WebApiDestination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 3\AML.Outputs[WebApiDestination Error Output].Columns[ErrorColumnName]"
                          codePage="1252"
                          dataType="str"
                          length="128"
                          lineageId="Package\Get and Upload Vendors\Partition 3\AML.Outputs[WebApiDestination Error Output].Columns[ErrorColumnName]"
                          name="ErrorColumnName" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 3\AML.Outputs[WebApiDestination Error Output].Columns[ErrorMessage]"
                          dataType="nText"
                          lineageId="Package\Get and Upload Vendors\Partition 3\AML.Outputs[WebApiDestination Error Output].Columns[ErrorMessage]"
                          name="ErrorMessage" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 3\AML.Outputs[Response Output]"
                      exclusionGroup="1"
                      name="Response Output"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 3\AML.Inputs[WebApiDestinationInput]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 3\AML.Outputs[Response Output].Columns[ResponseText]"
                          dataType="nText"
                          lineageId="Package\Get and Upload Vendors\Partition 3\AML.Outputs[Response Output].Columns[ResponseText]"
                          name="ResponseText" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 3\AML.Outputs[Response Output].Columns[StatusCode]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 3\AML.Outputs[Response Output].Columns[StatusCode]"
                          name="StatusCode" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Get and Upload Vendors\Partition 3\Check Error 1"
                  componentClassID="Microsoft.ConditionalSplit"
                  contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
                  name="Check Error 1"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Get and Upload Vendors\Partition 3\Check Error 1.Inputs[Conditional Split Input]"
                      description="Input to the Conditional Split Transformation"
                      name="Conditional Split Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Check Error 1.Inputs[Conditional Split Input].Columns[error]"
                          cachedDataType="wstr"
                          cachedLength="1020"
                          cachedName="error"
                          lineageId="Package\Get and Upload Vendors\Partition 3\Get Results.Outputs[JsonParserTransformOutput].Columns[error]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 3\Check Error 1.Outputs[Error]"
                      description="Output 1 of the Conditional Split Transformation"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      exclusionGroup="1"
                      name="Error"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 3\Check Error 1.Inputs[Conditional Split Input]"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                          name="Expression">[REPLACENULL](#{Package\Get and Upload Vendors\Partition 3\Get Results.Outputs[JsonParserTransformOutput].Columns[error]},"") != ""</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the friendly version of the expression. This expression version uses column names."
                          expressionType="Notify"
                          name="FriendlyExpression">REPLACENULL(error,"") != ""</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                          name="EvaluationOrder">0</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 3\Check Error 1.Outputs[No Error]"
                      description="Output 2 of the Conditional Split Transformation"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      exclusionGroup="1"
                      name="No Error"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 3\Check Error 1.Inputs[Conditional Split Input]"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                          name="Expression">[REPLACENULL](#{Package\Get and Upload Vendors\Partition 3\Get Results.Outputs[JsonParserTransformOutput].Columns[error]},"") == ""</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the friendly version of the expression. This expression version uses column names."
                          expressionType="Notify"
                          name="FriendlyExpression">REPLACENULL(error,"") == ""</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                          name="EvaluationOrder">1</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 3\Check Error 1.Outputs[Conditional Split Default Output]"
                      description="Default Output of the Conditional Split Transformation"
                      exclusionGroup="1"
                      name="Conditional Split Default Output"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 3\Check Error 1.Inputs[Conditional Split Input]">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          name="IsDefaultOut">true</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 3\Check Error 1.Outputs[Conditional Split Error Output]"
                      description="Error Output of the Conditional Split Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Conditional Split Error Output"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 3\Check Error 1.Inputs[Conditional Split Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Check Error 1.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 3\Check Error 1.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Check Error 1.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 3\Check Error 1.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Get and Upload Vendors\Partition 3\Conditional Split"
                  componentClassID="Microsoft.ConditionalSplit"
                  contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
                  name="Conditional Split"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Get and Upload Vendors\Partition 3\Conditional Split.Inputs[Conditional Split Input]"
                      description="Input to the Conditional Split Transformation"
                      name="Conditional Split Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Conditional Split.Inputs[Conditional Split Input].Columns[AMLCheck]"
                          cachedDataType="i4"
                          cachedName="AMLCheck"
                          lineageId="Package\Get and Upload Vendors\Partition 3\Lookup.Outputs[Lookup Match Output].Columns[AMLCheck]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 3\Conditional Split.Outputs[Need To Flag AML]"
                      description="Output 1 of the Conditional Split Transformation"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      exclusionGroup="1"
                      name="Need To Flag AML"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 3\Conditional Split.Inputs[Conditional Split Input]"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                          name="Expression">#{Package\Get and Upload Vendors\Partition 3\Lookup.Outputs[Lookup Match Output].Columns[AMLCheck]} == 1</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the friendly version of the expression. This expression version uses column names."
                          expressionType="Notify"
                          name="FriendlyExpression">AMLCheck == 1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                          name="EvaluationOrder">0</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 3\Conditional Split.Outputs[Do nothing]"
                      description="Output 2 of the Conditional Split Transformation"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      exclusionGroup="1"
                      name="Do nothing"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 3\Conditional Split.Inputs[Conditional Split Input]"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                          name="Expression">#{Package\Get and Upload Vendors\Partition 3\Lookup.Outputs[Lookup Match Output].Columns[AMLCheck]} == 0</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the friendly version of the expression. This expression version uses column names."
                          expressionType="Notify"
                          name="FriendlyExpression">AMLCheck == 0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                          name="EvaluationOrder">1</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 3\Conditional Split.Outputs[Conditional Split Default Output]"
                      description="Default Output of the Conditional Split Transformation"
                      exclusionGroup="1"
                      name="Conditional Split Default Output"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 3\Conditional Split.Inputs[Conditional Split Input]">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          name="IsDefaultOut">true</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 3\Conditional Split.Outputs[Conditional Split Error Output]"
                      description="Error Output of the Conditional Split Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Conditional Split Error Output"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 3\Conditional Split.Inputs[Conditional Split Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 3\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 3\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Get and Upload Vendors\Partition 3\Create Contact"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Web API Destination; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                  description="The Web API destination can be used to send data to Web API URL (e.g. Submit or POST data to REST API/SOAP or other HTTP/HTTPS endpoints)"
                  name="Create Contact"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                      expressionType="Notify"
                      name="LoggingMode"
                      typeConverter="ZappySys.PowerPack.Common.LoggingMode, ZappySys.PowerPack130, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                    <property
                      dataType="System.Boolean"
                      description="When you enable this property it will prefix timestamp before Log messages."
                      expressionType="Notify"
                      name="PrefixTimestamp">false</property>
                    <property
                      dataType="System.Null"
                      expressionType="Notify"
                      name="SelfRef"
                      typeConverter="NOTBROWSABLE" />
                    <property
                      dataType="System.String"
                      description="API URL you want to access"
                      expressionType="Notify"
                      name="HttpRequestUrl">{{User::PackageRosieURL}}</property>
                    <property
                      dataType="System.String"
                      description="Http Web Request Method (e.g. POST, GET, PUT, LIST, DELETE...). Refer your API documentation if you are not sure which method you have to use."
                      expressionType="Notify"
                      name="HttpRequestMethod">POST</property>
                    <property
                      dataType="System.String"
                      description="Set this if you want to set custom Http headers. You may use variable anywhere in the header value using syntax {{User::YourVarName}}. Syntax of Header key value pair is : &amp;lt;request&amp;gt;&amp;lt;header&amp;gt;&amp;lt;name&amp;gt;x-myheader-1&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;AAA&amp;lt;/value&amp;gt;&amp;lt;/header&amp;gt; &amp;lt;header&amp;gt;&amp;lt;name&amp;gt;x-myheader-2&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;BBB&amp;lt;/value&amp;gt;&amp;lt;/header&amp;gt;&amp;lt;/request&amp;gt;"
                      expressionType="Notify"
                      name="HttpHeaders"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">&lt;request&gt;&lt;header&gt;&lt;name&gt;Accept&lt;/name&gt;&lt;value&gt;*/*&lt;/value&gt;&lt;/header&gt;&lt;header&gt;&lt;name&gt;Cache-Control&lt;/name&gt;&lt;value&gt;no-cache&lt;/value&gt;&lt;/header&gt;&lt;/request&gt;</property>
                    <property
                      dataType="System.String"
                      description="User defined data you wish to send along with your HTTP Request (e.g. Upload file data, Form POST data). Usually you have to set content-type of your data but if you select RequestMethod=POST then system will automatically set content-type=application/x-www-form-urlencoded."
                      expressionType="Notify"
                      name="HttpRequestData"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies content type for data you wish to POST. If you select Default option then system default content type will be used (i.e. application/x-www-form-urlencoded). If you specify Content-Type header along with this option then header value takes precedence."
                      expressionType="Notify"
                      name="HttpRequestContentType"
                      typeConverter="ZappySys.Common.Web.HttpRequestContentType, ZappySys.Common, Version=1.0.2018.11017, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                    <property
                      dataType="System.Boolean"
                      description="If this option is true then component will continue without exception on 404 error (Url not found). This allows you to consume data gracefully."
                      expressionType="Notify"
                      name="ContinueOnUrlNotFoundError">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Ignore SSL certificate related errors. Example: if you getting SSL/TLS errors because of certificate expired or certificate is not from trusted authority or certificate is self-signed. By checking this option you will not get SSL/TLS error."
                      expressionType="Notify"
                      name="IgnoreCertificateErrors">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Allow unsecure ciphers/suites and curves for SSLS/TLS communication. Use this option to communicate with web servers which needs legacy / unsecured ciphers support. This option is only trigged when you change default SSL/TLS Version on advanced settings tab."
                      expressionType="Notify"
                      name="AllowUnsecureSuite">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Enable support for gzip or deflate compression. When you check this option compressed response automatically de-compressed saving bandwidth. This option is only valid if web server supports compressed response stream. Check your API documentation for more information."
                      expressionType="Notify"
                      name="EnableCompressionSupport">true</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies which security protocol is supported for HTTPS communication. Using this option you can enable legacy protocol or enforce to use latest version of security protocol (Note: TLS 1.2 is only supported in SSIS 2014 or Higher)."
                      expressionType="Notify"
                      name="SecurityProtocol"
                      typeConverter="ZappySys.PowerPack.Common.HttpsSecurityProtocolType, ZappySys.PowerPack130, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                    <property
                      dataType="System.Int32"
                      description="Wait time in milliseconds (Pause after each request). 0=No wait. Use this delay time if your API has limit on how many requests you can make in certain time frame."
                      expressionType="Notify"
                      name="WaitTime">0</property>
                    <property
                      dataType="System.Boolean"
                      description="When you redirect error to error output by default you get additional information in ErrorMessage column. Check this option if you need exact Response Body (Useful if its in JSON/XML format which needs to be parsed for additional information for later step)."
                      expressionType="Notify"
                      name="OnErrorOutputResponseBody">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Enable multiple requests using parallel threads."
                      expressionType="Notify"
                      name="EnableParallelRequests">true</property>
                    <property
                      dataType="System.Int32"
                      description="Maximum parallel threads to use for processing multiple web requests."
                      expressionType="Notify"
                      name="MaxParallelThreads">20</property>
                    <property
                      dataType="System.Boolean"
                      description="By default one request is sent for each input row. If your API supports multiple records in a single call via HTTP Body then enable this setting. See also BodyBatchSize, BodyHeader, BodyFooter and BodyRowSeparator property."
                      expressionType="Notify"
                      name="EnableBodyBatch">false</property>
                    <property
                      dataType="System.String"
                      description="When you have to wrap input content between opening and closing tags for each call then set this property to specify opening for body content. For Example if you want to build Body like this (send max 100 rows per call) ==&gt; { records : [ {...}, {...}, {...} ] } then you can set BatchSize=100, BodyHeader as &quot;{ records: [&quot; , BodyFooter as &quot;] }&quot; and BodyRowSeperator as comma {,}. This property is ignored if EnableBodyBatch=false."
                      expressionType="Notify"
                      name="BodyHeader"></property>
                    <property
                      dataType="System.String"
                      description="When you have to wrap input content between opening and closing tags for each call then set this property to specify closing for body content. For Example if you want to build Body like this (send max 100 rows per call) ==&gt; { records : [ {...}, {...}, {...} ] } then you can set BatchSize=100, BodyHeader as &quot;{ records: [&quot; , BodyFooter as &quot;] }&quot; and BodyRowSeperator as comma {,}. This property is ignored if EnableBodyBatch=false."
                      expressionType="Notify"
                      name="BodyFooter"></property>
                    <property
                      dataType="System.Int32"
                      description="If your API supports multiple records via HTTP Body then change this setting &gt; 1 to include multiple upstream records into single call. See also BodyHeader, BodyFooter and BodyRowSeparator property. This property is ignored if EnableBodyBatch=false."
                      expressionType="Notify"
                      name="BodyBatchSize">100</property>
                    <property
                      dataType="System.String"
                      description="When you submit multiple rows in a batch you can separate multiple documents / records using custom separator (e.g. in JSON Array you can use comma {,} as record separator if POST document is in array format [ {...}, {...}, {...} ] ). For last row of batch blank separator is used."
                      expressionType="Notify"
                      name="BodyRowSeparator"></property>
                    <property
                      dataType="System.Boolean"
                      description="Returns response data as binary data (e.g. Byte Array). Check this option is response is Zip file, Image file or any non text data which needs to be exported as raw data without any encoding."
                      expressionType="Notify"
                      name="TreatResponseAsBinary">false</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">ZappySys.WebApiDestination</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Get and Upload Vendors\Partition 3\Create Contact.Connections[Connection]"
                      connectionManagerID="Package.ConnectionManagers[HTTP]"
                      connectionManagerRefId="Package.ConnectionManagers[HTTP]"
                      description="Connection manager for authentication (e.g. HTTP or OAuth Connection)"
                      name="Connection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Get and Upload Vendors\Partition 3\Create Contact.Inputs[WebApiDestinationInput]"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="WebApiDestinationInput"
                      truncationRowDisposition="FailComponent">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Create Contact.Inputs[WebApiDestinationInput].Columns[DerivedVendorJSON]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="3000"
                          cachedName="DerivedVendorJSON"
                          externalMetadataColumnId="Package\Get and Upload Vendors\Partition 3\Create Contact.Inputs[WebApiDestinationInput].ExternalColumns[HttpRequestData]"
                          lineageId="Package\Get and Upload Vendors\Partition 3\Replace Token.Outputs[Derived Column Output].Columns[DerivedVendorJSON]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Create Contact.Inputs[WebApiDestinationInput].ExternalColumns[HttpRequestUrl]"
                          dataType="wstr"
                          length="2000"
                          name="HttpRequestUrl" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Create Contact.Inputs[WebApiDestinationInput].ExternalColumns[HttpRequestData]"
                          dataType="nText"
                          name="HttpRequestData" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 3\Create Contact.Outputs[WebApiDestination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="WebApiDestination Error Output"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 3\Create Contact.Inputs[WebApiDestinationInput]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Create Contact.Outputs[WebApiDestination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 3\Create Contact.Outputs[WebApiDestination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Create Contact.Outputs[WebApiDestination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 3\Create Contact.Outputs[WebApiDestination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Create Contact.Outputs[WebApiDestination Error Output].Columns[ErrorColumnName]"
                          codePage="1252"
                          dataType="str"
                          length="128"
                          lineageId="Package\Get and Upload Vendors\Partition 3\Create Contact.Outputs[WebApiDestination Error Output].Columns[ErrorColumnName]"
                          name="ErrorColumnName" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Create Contact.Outputs[WebApiDestination Error Output].Columns[ErrorMessage]"
                          dataType="nText"
                          lineageId="Package\Get and Upload Vendors\Partition 3\Create Contact.Outputs[WebApiDestination Error Output].Columns[ErrorMessage]"
                          name="ErrorMessage" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 3\Create Contact.Outputs[Response Output]"
                      exclusionGroup="1"
                      name="Response Output"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 3\Create Contact.Inputs[WebApiDestinationInput]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Create Contact.Outputs[Response Output].Columns[ResponseText]"
                          dataType="nText"
                          lineageId="Package\Get and Upload Vendors\Partition 3\Create Contact.Outputs[Response Output].Columns[ResponseText]"
                          name="ResponseText" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Create Contact.Outputs[Response Output].Columns[StatusCode]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 3\Create Contact.Outputs[Response Output].Columns[StatusCode]"
                          name="StatusCode" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Get and Upload Vendors\Partition 3\Get Results"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="JSON Parser Transform; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                  description="Parse incoming JSON String into columns. You can also parse and transform single JSON record into multiple rows by filtering data based on JSON Path (e.g. $.Customer.Orders[*])"
                  name="Get Results"
                  usesDispositions="true"
                  version="2">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                      expressionType="Notify"
                      name="LoggingMode"
                      typeConverter="ZappySys.PowerPack.Common.LoggingMode, ZappySys.PowerPack130, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                    <property
                      dataType="System.Boolean"
                      description="When you enable this property it will prefix timestamp before Log messages."
                      expressionType="Notify"
                      name="PrefixTimestamp">false</property>
                    <property
                      dataType="System.Null"
                      expressionType="Notify"
                      name="SelfRef"
                      typeConverter="NOTBROWSABLE" />
                    <property
                      dataType="System.Boolean"
                      description="Treat empty string as NULL for any numeric data types"
                      expressionType="Notify"
                      name="TreatBlankNumberAsNull">true</property>
                    <property
                      dataType="System.Boolean"
                      description="Treat empty string as NULL for bool data types"
                      expressionType="Notify"
                      name="TreatBlankBoolAsNull">true</property>
                    <property
                      dataType="System.Boolean"
                      description="Treat empty string as NULL for any date/time data types"
                      expressionType="Notify"
                      name="TreatBlankDateAsNull">true</property>
                    <property
                      dataType="System.String"
                      description="Sample JSON data used to parse output columns."
                      expressionType="Notify"
                      name="SampleData"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">{
    "result": {
        "system_record_state": "active",
        "system_ctime": 1551864889,
        "system_modtime": 1551864889,
        "system_search_key": "Jeff test",
        "address": "1",
        "address_postal": null,
        "marketing_postcode": "ss142rq",
        "marketing_enquiry_source": null,
        "marketing_gender": null,
        "marketing_birthday": null,
        "notes": null,
        "company_name": "Jeff test",
        "company_abn": null,
        "website_url": null,
        "is_dnd": null,
        "type": "company",
        "interest_level": null,
        "last_contacted_date": null,
        "name_legal": null,
        "name_salutation": null,
        "name_addressee": null,
        "last_contacted_at": null,
        "_id": 216403,
        "etag": "216403-1551864889",
        "system_owner_user": {
            "id": "19443",
            "_name": "Rosie API",
            "_first_name": "Rosie",
            "_last_name": "API",
            "_email_address": "rosie@spicerhaart.co.uk"
        },
        "system_modified_user": {
            "id": "19443",
            "_name": "Rosie API",
            "_first_name": "Rosie",
            "_last_name": "API",
            "_email_address": "rosie@spicerhaart.co.uk"
        },
        "system_created_user": {
            "id": "19443",
            "_name": "Rosie API",
            "_first_name": "Rosie",
            "_last_name": "API",
            "_email_address": "rosie@spicerhaart.co.uk"
        },
        "contact_image": null,
        "company_size": null,
        "marketing_enquiry_method": null,
        "_related": {
            "contact_emails": [
                {
                    "email_desc": "default",
                    "email_address": "MasterDave.Davidson@anemail.com",
                    "email_primary": true,
                    "email_secondary": null,
                    "is_invalid": null,
                    "_id": 147984
                }
            ],
            "contact_phones": [
                {
                    "phone_type": "default",
                    "phone_number": "09876543210",
                    "phone_primary": true,
                    "phone_primary_sms": null,
                    "is_invalid": null,
                    "system_e164_phone_number": "+449876543210",
                    "_id": 243549,
                    "wash": {
                        "present_on_lists": [],
                        "user_override": null,
                        "allow": true
                    }
                }
            ],
            "contact_tags": [],
            "contact_documents": [],
            "contact_mailing_lists": [],
            "contact_relationships": [],
            "contact_reln_property": [],
            "contact_reln_listing": []
        },
        "address_wash": {
            "present_on_lists": [],
            "user_override": null,
            "allow": true
        },
        "address_postal_wash": null,
        "smart_categories": false,
        "_security_user_rights": [
            "read",
            "update",
            "archive",
            "trash",
            "perms"
        ]
    },
    "error": null
}</property>
                    <property
                      dataType="System.Boolean"
                      description="Include all upstream parent columns into output except the one you selected to parse. By default only parsed columns from Input document is included in the output. If you wish to include all other upstream columns in the output too then check this option."
                      expressionType="Notify"
                      name="OutputAllUpstreamColumns">false</property>
                    <property
                      dataType="System.Int32"
                      description="Maximum JSON records to fetch. Set this value to 0 for all records"
                      expressionType="Notify"
                      name="MaxRows">0</property>
                    <property
                      dataType="System.String"
                      description="Enter expression here to filter data.(Example:  $.Users[*].UserName ) This will fetch User names from users records"
                      expressionType="Notify"
                      name="Filter"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.Boolean"
                      description="Use this option to include parent properties (Non array) in the output along with Filtered Rows"
                      expressionType="Notify"
                      name="IncludeParentColumns">true</property>
                    <property
                      dataType="System.Boolean"
                      description="By default child and parent information is not included in the output if children not found for specified expression. For example if you want to extract all orders from all customers nodes then you can type $.Customers[*].Orders[*]. This will fetch all orders from all customers. By default customers records without orders wont be included in the output. If you want to include those customers where orders not found then check this option (Output null information for order attributes). This behavior is similar to LEFT OUTER JOIN in SQL (Left side is parent, right side is child). This option is ***resource intensive*** so only check if you really care about this behavior."
                      expressionType="Notify"
                      name="IncludeParentColumnsWhenChildMissing">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Set this option to true if you want to output parent columns which are array. By default any parent column which is an array is not included in output. See also FilterForParentColumnsWithArrayType property if you set this property"
                      expressionType="Notify"
                      name="IncludeParentColumnsWithArrayType">false</property>
                    <property
                      dataType="System.String"
                      description="Filter expression to extract value form parent"
                      expressionType="Notify"
                      name="FilterForParentColumnsWithArrayType"></property>
                    <property
                      dataType="System.String"
                      description="Prefix for parent column name. This option is only valid if you have set IncludeParentColumns=True"
                      expressionType="Notify"
                      name="ParentColumnPrefix">P_</property>
                    <property
                      dataType="System.Boolean"
                      description="Throw error if property name specified in filter expression is missing. By default it will ignore any missing property errors."
                      expressionType="Notify"
                      name="ThrowErrorIfPropertyMissing">false</property>
                    <property
                      dataType="System.Int32"
                      description="This property how many nested levels should be scanned to fetch various properties. 0=Scan all child levels."
                      expressionType="Notify"
                      name="MaxLevelsToScan">0</property>
                    <property
                      dataType="System.String"
                      description="List comma separated property names from JSON document which you want to exclude from output. Specify parent property name to exclude all child nodes."
                      expressionType="Notify"
                      name="ExcludedProperties"></property>
                    <property
                      dataType="System.String"
                      description="Property level separator used in generated property name (separator for outer properties - Above selected filter node). Use this if default separator is producing duplicate property name which is conflicting with existing name."
                      expressionType="Notify"
                      name="LevelSeparator">_</property>
                    <property
                      dataType="System.Boolean"
                      description="Enables deep array flattening for selected filtered hierarchy. When you turn on this property it will flatten each property of each array item and expose as column (e.g. If you have Filter set as $.customers[*] and for each customer you have an array of Addresses then you may see output columns like Addresses.1.City, Addresses.1.State, Addresses.2.City, Addresses.2.State .... Addresses.N.City, Addresses.N.State). You can control how many array items you want to flatten by setting MaxArrayItemsToFlatten property."
                      expressionType="Notify"
                      name="EnableArrayFlattening">false</property>
                    <property
                      dataType="System.Int32"
                      description="Maximum number of array items to flatten. inner array flattening. Adjust this property to control how many columns being generated. This option is ignored if you set EnableArrayFlattening=false"
                      expressionType="Notify"
                      name="MaxArrayItemsToFlatten">10</property>
                    <property
                      dataType="System.String"
                      description="Specifies how custom date formatted strings are parsed when reading JSON."
                      expressionType="Notify"
                      name="DateFormatString"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies how date formatted strings, e.g. Date(1198908717056) and 2012-03-21T05:40Z, are parsed when reading JSON."
                      expressionType="Notify"
                      name="DateParseHandling"
                      typeConverter="ZappySys.Common.DateParseHandling, ZappySys.Common, Version=1.0.2018.11017, Culture=neutral, PublicKeyToken=1903265a93eae502">1</property>
                    <property
                      dataType="System.Boolean"
                      description="Output as raw JSON document rather than parsing individual fields. This option is helpful if you have documents stored in a file and you want to pass them downstream as raw JSON string rather than parsing into columns."
                      expressionType="Notify"
                      name="OutputRawDocument">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indent JSON output so its easy to read."
                      expressionType="Notify"
                      name="IndentOutput">false</property>
                    <property
                      dataType="System.Boolean"
                      description="When this property is true then Column is converted to Row. Pivoted names will appear under  Pivot_Name column and values will appear under Pivot_Value field."
                      expressionType="Notify"
                      name="EnablePivot">false</property>
                    <property
                      dataType="System.Int32"
                      description="Array Transformation you want to apply. Useful for case when you have 2-Dimensional arrays with rows/columns in separate arrays."
                      expressionType="Notify"
                      name="ArrayTransformationType"
                      typeConverter="ZappySys.Json.ArrayTransformType, ZappySys.Json, Version=1.0.2018.11017, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                    <property
                      dataType="System.String"
                      description="Filter expression to use to extract column names for array transformation."
                      expressionType="Notify"
                      name="ArrayTransColumnNameFilter"></property>
                    <property
                      dataType="System.String"
                      description="Filter expression for row values (Not applicable for simple array transformation)."
                      expressionType="Notify"
                      name="ArrayTransRowValueFilter"></property>
                    <property
                      dataType="System.Boolean"
                      description="When you have 2D array but don't have column list specified in a separate array then use this option (e.g. { arr: [[10,11],[21,22]] } )."
                      expressionType="Notify"
                      name="ArrayTransEnableCustomColumns">false</property>
                    <property
                      dataType="System.String"
                      description="When you have 2D array but don't have column list specified in a separate array then use specify column names here. Use comma separated list (e.g col1,col2,col3 ). Column name Order must match value order."
                      expressionType="Notify"
                      name="ArrayTransCustomColumns"></property>
                    <property
                      dataType="System.Int32"
                      description="Metadata scan mode controls how data type and length is determined. By default few records scanned to determine datatype/length. Changing ScanMode affects length/datatype accuracy."
                      expressionType="Notify"
                      name="MetaDataScanMode"
                      typeConverter="ZappySys.Common.Data.MetaDataScanMode, ZappySys.Common, Version=1.0.2018.11017, Culture=neutral, PublicKeyToken=1903265a93eae502">4</property>
                    <property
                      dataType="System.Int32"
                      description="Length for all string column. This option is only valid for MetaDataScanMode=Custom"
                      expressionType="Notify"
                      name="MetaDataCustomLength">1000</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">ZappySys.JsonParserTransform</property>
                    <property
                      dataType="System.Int32"
                      name="EmptyInputProcessingMode">0</property>
                    <property
                      dataType="System.String"
                      name="TreatEmptyInputAs">{ }</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Get and Upload Vendors\Partition 3\Get Results.Inputs[JsonParserTransformInput]"
                      errorRowDisposition="FailComponent"
                      name="JsonParserTransformInput"
                      truncationRowDisposition="FailComponent">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Get Results.Inputs[JsonParserTransformInput].Columns[ResponseText]"
                          cachedDataType="nText"
                          cachedName="ResponseText"
                          lineageId="Package\Get and Upload Vendors\Partition 3\Create Contact.Outputs[Response Output].Columns[ResponseText]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True" />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 3\Get Results.Outputs[JsonParserTransformOutput]"
                      errorOrTruncationOperation="Error"
                      errorRowDisposition="FailComponent"
                      name="JsonParserTransformOutput"
                      truncationRowDisposition="FailComponent">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Get Results.Outputs[JsonParserTransformOutput].Columns[result.notes]"
                          dataType="wstr"
                          externalMetadataColumnId="Package\Get and Upload Vendors\Partition 3\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.notes]"
                          length="1020"
                          lineageId="Package\Get and Upload Vendors\Partition 3\Get Results.Outputs[JsonParserTransformOutput].Columns[result.notes]"
                          name="result.notes" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Get Results.Outputs[JsonParserTransformOutput].Columns[result._id]"
                          dataType="i8"
                          externalMetadataColumnId="Package\Get and Upload Vendors\Partition 3\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result._id]"
                          lineageId="Package\Get and Upload Vendors\Partition 3\Get Results.Outputs[JsonParserTransformOutput].Columns[result._id]"
                          name="result._id" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Get Results.Outputs[JsonParserTransformOutput].Columns[result.etag]"
                          dataType="wstr"
                          externalMetadataColumnId="Package\Get and Upload Vendors\Partition 3\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.etag]"
                          length="68"
                          lineageId="Package\Get and Upload Vendors\Partition 3\Get Results.Outputs[JsonParserTransformOutput].Columns[result.etag]"
                          name="result.etag" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Get Results.Outputs[JsonParserTransformOutput].Columns[error]"
                          dataType="wstr"
                          externalMetadataColumnId="Package\Get and Upload Vendors\Partition 3\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[error]"
                          length="1020"
                          lineageId="Package\Get and Upload Vendors\Partition 3\Get Results.Outputs[JsonParserTransformOutput].Columns[error]"
                          name="error" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.system_record_state]"
                          dataType="wstr"
                          length="24"
                          name="result.system_record_state" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.system_ctime]"
                          dataType="i8"
                          name="result.system_ctime" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.system_modtime]"
                          dataType="i8"
                          name="result.system_modtime" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.system_search_key]"
                          dataType="wstr"
                          length="36"
                          name="result.system_search_key" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.address]"
                          dataType="wstr"
                          length="4"
                          name="result.address" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.address_postal]"
                          dataType="wstr"
                          length="1020"
                          name="result.address_postal" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.marketing_postcode]"
                          dataType="wstr"
                          length="28"
                          name="result.marketing_postcode" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.marketing_enquiry_source]"
                          dataType="wstr"
                          length="1020"
                          name="result.marketing_enquiry_source" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.marketing_gender]"
                          dataType="wstr"
                          length="1020"
                          name="result.marketing_gender" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.marketing_birthday]"
                          dataType="wstr"
                          length="1020"
                          name="result.marketing_birthday" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.notes]"
                          dataType="wstr"
                          length="1020"
                          name="result.notes" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.company_name]"
                          dataType="wstr"
                          length="36"
                          name="result.company_name" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.company_abn]"
                          dataType="wstr"
                          length="1020"
                          name="result.company_abn" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.website_url]"
                          dataType="wstr"
                          length="1020"
                          name="result.website_url" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.is_dnd]"
                          dataType="wstr"
                          length="1020"
                          name="result.is_dnd" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.type]"
                          dataType="wstr"
                          length="28"
                          name="result.type" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.interest_level]"
                          dataType="wstr"
                          length="1020"
                          name="result.interest_level" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.last_contacted_date]"
                          dataType="wstr"
                          length="1020"
                          name="result.last_contacted_date" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.name_legal]"
                          dataType="wstr"
                          length="1020"
                          name="result.name_legal" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.name_salutation]"
                          dataType="wstr"
                          length="1020"
                          name="result.name_salutation" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.name_addressee]"
                          dataType="wstr"
                          length="1020"
                          name="result.name_addressee" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.last_contacted_at]"
                          dataType="wstr"
                          length="1020"
                          name="result.last_contacted_at" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result._id]"
                          dataType="i8"
                          name="result._id" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.etag]"
                          dataType="wstr"
                          length="68"
                          name="result.etag" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.system_owner_user.id]"
                          dataType="wstr"
                          length="20"
                          name="result.system_owner_user.id" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.system_owner_user._name]"
                          dataType="wstr"
                          length="36"
                          name="result.system_owner_user._name" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.system_owner_user._first_name]"
                          dataType="wstr"
                          length="20"
                          name="result.system_owner_user._first_name" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.system_owner_user._last_name]"
                          dataType="wstr"
                          length="12"
                          name="result.system_owner_user._last_name" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.system_owner_user._email_address]"
                          dataType="wstr"
                          length="92"
                          name="result.system_owner_user._email_address" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.system_modified_user.id]"
                          dataType="wstr"
                          length="20"
                          name="result.system_modified_user.id" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.system_modified_user._name]"
                          dataType="wstr"
                          length="36"
                          name="result.system_modified_user._name" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.system_modified_user._first_name]"
                          dataType="wstr"
                          length="20"
                          name="result.system_modified_user._first_name" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.system_modified_user._last_name]"
                          dataType="wstr"
                          length="12"
                          name="result.system_modified_user._last_name" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.system_modified_user._email_address]"
                          dataType="wstr"
                          length="92"
                          name="result.system_modified_user._email_address" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.system_created_user.id]"
                          dataType="wstr"
                          length="20"
                          name="result.system_created_user.id" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.system_created_user._name]"
                          dataType="wstr"
                          length="36"
                          name="result.system_created_user._name" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.system_created_user._first_name]"
                          dataType="wstr"
                          length="20"
                          name="result.system_created_user._first_name" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.system_created_user._last_name]"
                          dataType="wstr"
                          length="12"
                          name="result.system_created_user._last_name" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.system_created_user._email_address]"
                          dataType="wstr"
                          length="92"
                          name="result.system_created_user._email_address" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.contact_image]"
                          dataType="wstr"
                          length="1020"
                          name="result.contact_image" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.company_size]"
                          dataType="wstr"
                          length="1020"
                          name="result.company_size" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.marketing_enquiry_method]"
                          dataType="wstr"
                          length="1020"
                          name="result.marketing_enquiry_method" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result._related.contact_emails]"
                          dataType="wstr"
                          length="812"
                          name="result._related.contact_emails" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result._related.contact_phones]"
                          dataType="wstr"
                          length="1356"
                          name="result._related.contact_phones" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result._related.contact_tags]"
                          dataType="wstr"
                          length="8"
                          name="result._related.contact_tags" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result._related.contact_documents]"
                          dataType="wstr"
                          length="8"
                          name="result._related.contact_documents" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result._related.contact_mailing_lists]"
                          dataType="wstr"
                          length="8"
                          name="result._related.contact_mailing_lists" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result._related.contact_relationships]"
                          dataType="wstr"
                          length="8"
                          name="result._related.contact_relationships" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result._related.contact_reln_property]"
                          dataType="wstr"
                          length="8"
                          name="result._related.contact_reln_property" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result._related.contact_reln_listing]"
                          dataType="wstr"
                          length="8"
                          name="result._related.contact_reln_listing" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.address_wash.present_on_lists]"
                          dataType="wstr"
                          length="8"
                          name="result.address_wash.present_on_lists" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.address_wash.user_override]"
                          dataType="wstr"
                          length="1020"
                          name="result.address_wash.user_override" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.address_wash.allow]"
                          dataType="bool"
                          name="result.address_wash.allow" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.address_postal_wash]"
                          dataType="wstr"
                          length="1020"
                          name="result.address_postal_wash" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.smart_categories]"
                          dataType="bool"
                          name="result.smart_categories" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result._security_user_rights]"
                          dataType="wstr"
                          length="260"
                          name="result._security_user_rights" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[error]"
                          dataType="wstr"
                          length="1020"
                          name="error" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 3\Get Results.Outputs[JsonParserTransform Error Output]"
                      isErrorOut="true"
                      name="JsonParserTransform Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Get Results.Outputs[JsonParserTransform Error Output].Columns[result.notes]"
                          dataType="wstr"
                          length="1020"
                          lineageId="Package\Get and Upload Vendors\Partition 3\Get Results.Outputs[JsonParserTransform Error Output].Columns[result.notes]"
                          name="result.notes" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Get Results.Outputs[JsonParserTransform Error Output].Columns[result._id]"
                          dataType="i8"
                          lineageId="Package\Get and Upload Vendors\Partition 3\Get Results.Outputs[JsonParserTransform Error Output].Columns[result._id]"
                          name="result._id" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Get Results.Outputs[JsonParserTransform Error Output].Columns[result.etag]"
                          dataType="wstr"
                          length="68"
                          lineageId="Package\Get and Upload Vendors\Partition 3\Get Results.Outputs[JsonParserTransform Error Output].Columns[result.etag]"
                          name="result.etag" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Get Results.Outputs[JsonParserTransform Error Output].Columns[error]"
                          dataType="wstr"
                          length="1020"
                          lineageId="Package\Get and Upload Vendors\Partition 3\Get Results.Outputs[JsonParserTransform Error Output].Columns[error]"
                          name="error" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Get Results.Outputs[JsonParserTransform Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 3\Get Results.Outputs[JsonParserTransform Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Get Results.Outputs[JsonParserTransform Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 3\Get Results.Outputs[JsonParserTransform Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Get Results.Outputs[JsonParserTransform Error Output].Columns[ErrorColumnName]"
                          codePage="1252"
                          dataType="str"
                          length="128"
                          lineageId="Package\Get and Upload Vendors\Partition 3\Get Results.Outputs[JsonParserTransform Error Output].Columns[ErrorColumnName]"
                          name="ErrorColumnName" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Get Results.Outputs[JsonParserTransform Error Output].Columns[ErrorMessage]"
                          dataType="wstr"
                          length="1024"
                          lineageId="Package\Get and Upload Vendors\Partition 3\Get Results.Outputs[JsonParserTransform Error Output].Columns[ErrorMessage]"
                          name="ErrorMessage" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Get Results.Outputs[JsonParserTransform Error Output].Columns[ErrorRawData]"
                          dataType="nText"
                          lineageId="Package\Get and Upload Vendors\Partition 3\Get Results.Outputs[JsonParserTransform Error Output].Columns[ErrorRawData]"
                          name="ErrorRawData" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Get and Upload Vendors\Partition 3\Get Vendors List"
                  componentClassID="Microsoft.OLEDBSource"
                  contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                  description="OLE DB Source"
                  name="Get Vendors List"
                  usesDispositions="true"
                  version="7">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset"></property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">SELECT * FROM ROSIE_ContactPush_staging WITH (NOLOCK) WHERE office_id = ? and entitytype = 1 and partition = 3</property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">2</property>
                    <property
                      dataType="System.String"
                      description="The mappings between the parameters in the SQL command and variables."
                      name="ParameterMapping">"@office_id:Input",{F3CDF2B4-5AA9-4436-972D-BB303A4202B3};</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Get and Upload Vendors\Partition 3\Get Vendors List.Connections[OleDbConnection]"
                      connectionManagerID="{78432CA1-1FEA-4ED4-9C0F-D552A4A9DE0E}:external"
                      connectionManagerRefId="Project.ConnectionManagers[InternetDB]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 3\Get Vendors List.Outputs[OLE DB Source Output]"
                      name="OLE DB Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Get Vendors List.Outputs[OLE DB Source Output].Columns[CustJSON]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Get and Upload Vendors\Partition 3\Get Vendors List.Outputs[OLE DB Source Output].ExternalColumns[CustJSON]"
                          length="3000"
                          lineageId="Package\Get and Upload Vendors\Partition 3\Get Vendors List.Outputs[OLE DB Source Output].Columns[CustJSON]"
                          name="CustJSON"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Get Vendors List.Outputs[OLE DB Source Output].Columns[AMLCheck]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Get and Upload Vendors\Partition 3\Get Vendors List.Outputs[OLE DB Source Output].ExternalColumns[AMLCheck]"
                          lineageId="Package\Get and Upload Vendors\Partition 3\Get Vendors List.Outputs[OLE DB Source Output].Columns[AMLCheck]"
                          name="AMLCheck"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Get Vendors List.Outputs[OLE DB Source Output].Columns[AMLJSON]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Get and Upload Vendors\Partition 3\Get Vendors List.Outputs[OLE DB Source Output].ExternalColumns[AMLJSON]"
                          length="3000"
                          lineageId="Package\Get and Upload Vendors\Partition 3\Get Vendors List.Outputs[OLE DB Source Output].Columns[AMLJSON]"
                          name="AMLJSON"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Get Vendors List.Outputs[OLE DB Source Output].Columns[office_id]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Get and Upload Vendors\Partition 3\Get Vendors List.Outputs[OLE DB Source Output].ExternalColumns[office_id]"
                          length="4"
                          lineageId="Package\Get and Upload Vendors\Partition 3\Get Vendors List.Outputs[OLE DB Source Output].Columns[office_id]"
                          name="office_id"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Get Vendors List.Outputs[OLE DB Source Output].Columns[Partition]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Get and Upload Vendors\Partition 3\Get Vendors List.Outputs[OLE DB Source Output].ExternalColumns[Partition]"
                          lineageId="Package\Get and Upload Vendors\Partition 3\Get Vendors List.Outputs[OLE DB Source Output].Columns[Partition]"
                          name="Partition"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Get Vendors List.Outputs[OLE DB Source Output].Columns[IDCHECKJSON]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Get and Upload Vendors\Partition 3\Get Vendors List.Outputs[OLE DB Source Output].ExternalColumns[IDCHECKJSON]"
                          length="3000"
                          lineageId="Package\Get and Upload Vendors\Partition 3\Get Vendors List.Outputs[OLE DB Source Output].Columns[IDCHECKJSON]"
                          name="IDCHECKJSON"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Get Vendors List.Outputs[OLE DB Source Output].Columns[ContactJSON]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Get and Upload Vendors\Partition 3\Get Vendors List.Outputs[OLE DB Source Output].ExternalColumns[ContactJSON]"
                          length="3000"
                          lineageId="Package\Get and Upload Vendors\Partition 3\Get Vendors List.Outputs[OLE DB Source Output].Columns[ContactJSON]"
                          name="ContactJSON"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Get Vendors List.Outputs[OLE DB Source Output].Columns[Reference]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Get and Upload Vendors\Partition 3\Get Vendors List.Outputs[OLE DB Source Output].ExternalColumns[Reference]"
                          length="25"
                          lineageId="Package\Get and Upload Vendors\Partition 3\Get Vendors List.Outputs[OLE DB Source Output].Columns[Reference]"
                          name="Reference"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Get Vendors List.Outputs[OLE DB Source Output].Columns[entityType]"
                          dataType="ui1"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Get and Upload Vendors\Partition 3\Get Vendors List.Outputs[OLE DB Source Output].ExternalColumns[entityType]"
                          lineageId="Package\Get and Upload Vendors\Partition 3\Get Vendors List.Outputs[OLE DB Source Output].Columns[entityType]"
                          name="entityType"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Get Vendors List.Outputs[OLE DB Source Output].ExternalColumns[CustJSON]"
                          codePage="1252"
                          dataType="str"
                          length="3000"
                          name="CustJSON" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Get Vendors List.Outputs[OLE DB Source Output].ExternalColumns[AMLCheck]"
                          dataType="i4"
                          name="AMLCheck" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Get Vendors List.Outputs[OLE DB Source Output].ExternalColumns[AMLJSON]"
                          codePage="1252"
                          dataType="str"
                          length="3000"
                          name="AMLJSON" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Get Vendors List.Outputs[OLE DB Source Output].ExternalColumns[office_id]"
                          codePage="1252"
                          dataType="str"
                          length="4"
                          name="office_id" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Get Vendors List.Outputs[OLE DB Source Output].ExternalColumns[Partition]"
                          dataType="i4"
                          name="Partition" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Get Vendors List.Outputs[OLE DB Source Output].ExternalColumns[IDCHECKJSON]"
                          codePage="1252"
                          dataType="str"
                          length="3000"
                          name="IDCHECKJSON" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Get Vendors List.Outputs[OLE DB Source Output].ExternalColumns[ContactJSON]"
                          codePage="1252"
                          dataType="str"
                          length="3000"
                          name="ContactJSON" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Get Vendors List.Outputs[OLE DB Source Output].ExternalColumns[Reference]"
                          codePage="1252"
                          dataType="str"
                          length="25"
                          name="Reference" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Get Vendors List.Outputs[OLE DB Source Output].ExternalColumns[entityType]"
                          dataType="ui1"
                          name="entityType" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 3\Get Vendors List.Outputs[OLE DB Source Error Output]"
                      isErrorOut="true"
                      name="OLE DB Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Get Vendors List.Outputs[OLE DB Source Error Output].Columns[ContactJSON]"
                          codePage="1252"
                          dataType="str"
                          length="3000"
                          lineageId="Package\Get and Upload Vendors\Partition 3\Get Vendors List.Outputs[OLE DB Source Error Output].Columns[ContactJSON]"
                          name="ContactJSON" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Get Vendors List.Outputs[OLE DB Source Error Output].Columns[Reference]"
                          codePage="1252"
                          dataType="str"
                          length="25"
                          lineageId="Package\Get and Upload Vendors\Partition 3\Get Vendors List.Outputs[OLE DB Source Error Output].Columns[Reference]"
                          name="Reference" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Get Vendors List.Outputs[OLE DB Source Error Output].Columns[CustJSON]"
                          codePage="1252"
                          dataType="str"
                          length="3000"
                          lineageId="Package\Get and Upload Vendors\Partition 3\Get Vendors List.Outputs[OLE DB Source Error Output].Columns[CustJSON]"
                          name="CustJSON" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Get Vendors List.Outputs[OLE DB Source Error Output].Columns[AMLCheck]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 3\Get Vendors List.Outputs[OLE DB Source Error Output].Columns[AMLCheck]"
                          name="AMLCheck" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Get Vendors List.Outputs[OLE DB Source Error Output].Columns[AMLJSON]"
                          codePage="1252"
                          dataType="str"
                          length="3000"
                          lineageId="Package\Get and Upload Vendors\Partition 3\Get Vendors List.Outputs[OLE DB Source Error Output].Columns[AMLJSON]"
                          name="AMLJSON" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Get Vendors List.Outputs[OLE DB Source Error Output].Columns[office_id]"
                          codePage="1252"
                          dataType="str"
                          length="4"
                          lineageId="Package\Get and Upload Vendors\Partition 3\Get Vendors List.Outputs[OLE DB Source Error Output].Columns[office_id]"
                          name="office_id" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Get Vendors List.Outputs[OLE DB Source Error Output].Columns[Partition]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 3\Get Vendors List.Outputs[OLE DB Source Error Output].Columns[Partition]"
                          name="Partition" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Get Vendors List.Outputs[OLE DB Source Error Output].Columns[IDCHECKJSON]"
                          codePage="1252"
                          dataType="str"
                          length="3000"
                          lineageId="Package\Get and Upload Vendors\Partition 3\Get Vendors List.Outputs[OLE DB Source Error Output].Columns[IDCHECKJSON]"
                          name="IDCHECKJSON" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Get Vendors List.Outputs[OLE DB Source Error Output].Columns[entityType]"
                          dataType="ui1"
                          lineageId="Package\Get and Upload Vendors\Partition 3\Get Vendors List.Outputs[OLE DB Source Error Output].Columns[entityType]"
                          name="entityType" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Get Vendors List.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 3\Get Vendors List.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Get Vendors List.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 3\Get Vendors List.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Get and Upload Vendors\Partition 3\Lookup"
                  componentClassID="Microsoft.Lookup"
                  contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
                  description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                  name="Lookup"
                  usesDispositions="true"
                  version="6">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the SQL statement that generates the lookup table."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">SELECT * FROM ROSIE_ContactPush_staging WITH (NOLOCK)
Where entitytype = 1</property>
                    <property
                      dataType="System.String"
                      description="Specifies a SQL statement that uses parameters to generate the lookup table."
                      expressionType="Notify"
                      name="SqlCommandParam"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from (SELECT * FROM ROSIE_ContactPush_staging WITH (NOLOCK)
Where entitytype = 1) [refTable]
where [refTable].[Reference] = ? and [refTable].[office_id] = ?</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the type of connection used to access the reference dataset."
                      name="ConnectionType"
                      typeConverter="LookupConnectionType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the cache type of the lookup table."
                      name="CacheType"
                      typeConverter="CacheType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                      name="NoMatchBehavior"
                      typeConverter="LookupNoMatchBehavior">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                      name="NoMatchCachePercentage">0</property>
                    <property
                      dataType="System.Int32"
                      description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                      name="MaxMemoryUsage">25</property>
                    <property
                      dataType="System.Int64"
                      description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                      name="MaxMemoryUsage64">25</property>
                    <property
                      dataType="System.String"
                      description="Indicates whether to reference metadata in an XML format."
                      name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="ContactJSON" dataType="DT_STR" length="3000" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="Reference" dataType="DT_STR" length="25" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="CustJSON" dataType="DT_STR" length="3000" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="AMLCheck" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="AMLJSON" dataType="DT_STR" length="3000" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="office_id" dataType="DT_STR" length="4" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="Partition" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="IDCHECKJSON" dataType="DT_STR" length="3000" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="entityType" dataType="DT_UI1" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                      name="ParameterMap">#{Package\Get and Upload Vendors\Partition 3\Map Results 1.Outputs[Derived Column Output].Columns[prop_ref]};#{Package\Get and Upload Vendors\Partition 3\Map Results 1.Outputs[Derived Column Output].Columns[office_Id]};</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                      name="TreatDuplicateKeysAsError">false</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Get and Upload Vendors\Partition 3\Lookup.Connections[OleDbConnection]"
                      connectionManagerID="{78432CA1-1FEA-4ED4-9C0F-D552A4A9DE0E}:external"
                      connectionManagerRefId="Project.ConnectionManagers[InternetDB]"
                      description="Connection manager used to access lookup data."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Get and Upload Vendors\Partition 3\Lookup.Inputs[Lookup Input]"
                      name="Lookup Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Lookup.Inputs[Lookup Input].Columns[office_Id]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="4"
                          cachedName="office_Id"
                          lineageId="Package\Get and Upload Vendors\Partition 3\Map Results 1.Outputs[Derived Column Output].Columns[office_Id]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">office_id</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Lookup.Inputs[Lookup Input].Columns[prop_ref]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="prop_ref"
                          lineageId="Package\Get and Upload Vendors\Partition 3\Map Results 1.Outputs[Derived Column Output].Columns[prop_ref]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">Reference</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 3\Lookup.Outputs[Lookup Match Output]"
                      errorOrTruncationOperation="Lookup"
                      errorRowDisposition="IgnoreFailure"
                      exclusionGroup="1"
                      name="Lookup Match Output"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 3\Lookup.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Lookup.Outputs[Lookup Match Output].Columns[office_id]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Copy Column"
                          length="4"
                          lineageId="Package\Get and Upload Vendors\Partition 3\Lookup.Outputs[Lookup Match Output].Columns[office_id]"
                          name="office_id"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">office_id</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Lookup.Outputs[Lookup Match Output].Columns[CustJSON]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Copy Column"
                          length="3000"
                          lineageId="Package\Get and Upload Vendors\Partition 3\Lookup.Outputs[Lookup Match Output].Columns[CustJSON]"
                          name="CustJSON"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">CustJSON</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Lookup.Outputs[Lookup Match Output].Columns[AMLCheck]"
                          dataType="i4"
                          errorOrTruncationOperation="Copy Column"
                          lineageId="Package\Get and Upload Vendors\Partition 3\Lookup.Outputs[Lookup Match Output].Columns[AMLCheck]"
                          name="AMLCheck"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">AMLCheck</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Lookup.Outputs[Lookup Match Output].Columns[AMLJSON]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Copy Column"
                          length="3000"
                          lineageId="Package\Get and Upload Vendors\Partition 3\Lookup.Outputs[Lookup Match Output].Columns[AMLJSON]"
                          name="AMLJSON"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">AMLJSON</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Lookup.Outputs[Lookup Match Output].Columns[IDCHECKJSON]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Copy Column"
                          length="3000"
                          lineageId="Package\Get and Upload Vendors\Partition 3\Lookup.Outputs[Lookup Match Output].Columns[IDCHECKJSON]"
                          name="IDCHECKJSON"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">IDCHECKJSON</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Lookup.Outputs[Lookup Match Output].Columns[ContactJSON]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Copy Column"
                          length="3000"
                          lineageId="Package\Get and Upload Vendors\Partition 3\Lookup.Outputs[Lookup Match Output].Columns[ContactJSON]"
                          name="ContactJSON"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">ContactJSON</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Lookup.Outputs[Lookup Match Output].Columns[Reference]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Copy Column"
                          length="25"
                          lineageId="Package\Get and Upload Vendors\Partition 3\Lookup.Outputs[Lookup Match Output].Columns[Reference]"
                          name="Reference"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">Reference</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 3\Lookup.Outputs[Lookup No Match Output]"
                      description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                      exclusionGroup="1"
                      name="Lookup No Match Output"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 3\Lookup.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 3\Lookup.Outputs[Lookup Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Lookup Error Output"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 3\Lookup.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Lookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 3\Lookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Lookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 3\Lookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Get and Upload Vendors\Partition 3\Main Record Count"
                  componentClassID="Microsoft.RowCount"
                  contactInfo="Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status."
                  name="Main Record Count">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the variable to hold the row count."
                      name="VariableName">User::RecCountProcessed</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Get and Upload Vendors\Partition 3\Main Record Count.Inputs[Row Count Input 1]"
                      hasSideEffects="true"
                      name="Row Count Input 1">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 3\Main Record Count.Outputs[Row Count Output 1]"
                      name="Row Count Output 1"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 3\Main Record Count.Inputs[Row Count Input 1]">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Get and Upload Vendors\Partition 3\Map Results 1"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Map Results 1"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Get and Upload Vendors\Partition 3\Map Results 1.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Map Results 1.Inputs[Derived Column Input].Columns[result.notes]"
                          cachedDataType="wstr"
                          cachedLength="1020"
                          cachedName="result.notes"
                          lineageId="Package\Get and Upload Vendors\Partition 3\Get Results.Outputs[JsonParserTransformOutput].Columns[result.notes]" />
                        <inputColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Map Results 1.Inputs[Derived Column Input].Columns[result._id]"
                          cachedDataType="i8"
                          cachedName="result._id"
                          lineageId="Package\Get and Upload Vendors\Partition 3\Get Results.Outputs[JsonParserTransformOutput].Columns[result._id]" />
                        <inputColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Map Results 1.Inputs[Derived Column Input].Columns[result.etag]"
                          cachedDataType="wstr"
                          cachedLength="68"
                          cachedName="result.etag"
                          lineageId="Package\Get and Upload Vendors\Partition 3\Get Results.Outputs[JsonParserTransformOutput].Columns[result.etag]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 3\Map Results 1.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 3\Map Results 1.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Map Results 1.Outputs[Derived Column Output].Columns[prop_ref]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Get and Upload Vendors\Partition 3\Map Results 1.Outputs[Derived Column Output].Columns[prop_ref]"
                          name="prop_ref"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_STR,50,1252)#{Package\Get and Upload Vendors\Partition 3\Get Results.Outputs[JsonParserTransformOutput].Columns[result.notes]}</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_STR,50,1252)[result.notes]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Map Results 1.Outputs[Derived Column Output].Columns[office_Id]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="4"
                          lineageId="Package\Get and Upload Vendors\Partition 3\Map Results 1.Outputs[Derived Column Output].Columns[office_Id]"
                          name="office_Id"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_STR,4,1252)@[$Package::PackageOfficeID]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_STR,4,1252)@[$Package::PackageOfficeID]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Map Results 1.Outputs[Derived Column Output].Columns[etag_contact]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="80"
                          lineageId="Package\Get and Upload Vendors\Partition 3\Map Results 1.Outputs[Derived Column Output].Columns[etag_contact]"
                          name="etag_contact"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_STR,80,1252)#{Package\Get and Upload Vendors\Partition 3\Get Results.Outputs[JsonParserTransformOutput].Columns[result.etag]}</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_STR,80,1252)[result.etag]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Map Results 1.Outputs[Derived Column Output].Columns[rid_contact]"
                          dataType="i8"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Get and Upload Vendors\Partition 3\Map Results 1.Outputs[Derived Column Output].Columns[rid_contact]"
                          name="rid_contact"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">#{Package\Get and Upload Vendors\Partition 3\Get Results.Outputs[JsonParserTransformOutput].Columns[result._id]}</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">[result._id]</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 3\Map Results 1.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 3\Map Results 1.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Map Results 1.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 3\Map Results 1.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Map Results 1.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 3\Map Results 1.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Get and Upload Vendors\Partition 3\Multicast"
                  componentClassID="Microsoft.Multicast"
                  contactInfo="Multicast;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Distributes every input row to every row in one or more outputs. For example, branch your data flow to make a copy of data so that some values can be masked before sharing with external partners."
                  name="Multicast">
                  <inputs>
                    <input
                      refId="Package\Get and Upload Vendors\Partition 3\Multicast.Inputs[Multicast Input 1]"
                      name="Multicast Input 1">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 3\Multicast.Outputs[Multicast Output 1]"
                      deleteOutputOnPathDetached="true"
                      name="Multicast Output 1"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 3\Multicast.Inputs[Multicast Input 1]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 3\Multicast.Outputs[Multicast Output 3]"
                      deleteOutputOnPathDetached="true"
                      name="Multicast Output 3"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 3\Multicast.Inputs[Multicast Input 1]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 3\Multicast.Outputs[Multicast Output 2]"
                      deleteOutputOnPathDetached="true"
                      name="Multicast Output 2"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 3\Multicast.Inputs[Multicast Input 1]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 3\Multicast.Outputs[Multicast Output 4]"
                      dangling="true"
                      deleteOutputOnPathDetached="true"
                      name="Multicast Output 4"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 3\Multicast.Inputs[Multicast Input 1]">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Get and Upload Vendors\Partition 3\Multicast 1"
                  componentClassID="Microsoft.Multicast"
                  contactInfo="Multicast;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Distributes every input row to every row in one or more outputs. For example, branch your data flow to make a copy of data so that some values can be masked before sharing with external partners."
                  name="Multicast 1">
                  <inputs>
                    <input
                      refId="Package\Get and Upload Vendors\Partition 3\Multicast 1.Inputs[Multicast Input 1]"
                      name="Multicast Input 1">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 3\Multicast 1.Outputs[Multicast Output 1]"
                      deleteOutputOnPathDetached="true"
                      name="Multicast Output 1"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 3\Multicast 1.Inputs[Multicast Input 1]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 3\Multicast 1.Outputs[Multicast Output 3]"
                      deleteOutputOnPathDetached="true"
                      name="Multicast Output 3"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 3\Multicast 1.Inputs[Multicast Input 1]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 3\Multicast 1.Outputs[Multicast Output 4]"
                      dangling="true"
                      deleteOutputOnPathDetached="true"
                      name="Multicast Output 4"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 3\Multicast 1.Inputs[Multicast Input 1]">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Get and Upload Vendors\Partition 3\Push Custom Fields"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Web API Destination; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                  description="The Web API destination can be used to send data to Web API URL (e.g. Submit or POST data to REST API/SOAP or other HTTP/HTTPS endpoints)"
                  name="Push Custom Fields"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                      expressionType="Notify"
                      name="LoggingMode"
                      typeConverter="ZappySys.PowerPack.Common.LoggingMode, ZappySys.PowerPack130, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                    <property
                      dataType="System.Boolean"
                      description="When you enable this property it will prefix timestamp before Log messages."
                      expressionType="Notify"
                      name="PrefixTimestamp">false</property>
                    <property
                      dataType="System.Null"
                      expressionType="Notify"
                      name="SelfRef"
                      typeConverter="NOTBROWSABLE" />
                    <property
                      dataType="System.String"
                      description="API URL you want to access"
                      expressionType="Notify"
                      name="HttpRequestUrl">{{User::PackageRosieURL}}</property>
                    <property
                      dataType="System.String"
                      description="Http Web Request Method (e.g. POST, GET, PUT, LIST, DELETE...). Refer your API documentation if you are not sure which method you have to use."
                      expressionType="Notify"
                      name="HttpRequestMethod">POST</property>
                    <property
                      dataType="System.String"
                      description="Set this if you want to set custom Http headers. You may use variable anywhere in the header value using syntax {{User::YourVarName}}. Syntax of Header key value pair is : &amp;lt;request&amp;gt;&amp;lt;header&amp;gt;&amp;lt;name&amp;gt;x-myheader-1&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;AAA&amp;lt;/value&amp;gt;&amp;lt;/header&amp;gt; &amp;lt;header&amp;gt;&amp;lt;name&amp;gt;x-myheader-2&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;BBB&amp;lt;/value&amp;gt;&amp;lt;/header&amp;gt;&amp;lt;/request&amp;gt;"
                      expressionType="Notify"
                      name="HttpHeaders"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">&lt;request&gt;&lt;header&gt;&lt;name&gt;Accept&lt;/name&gt;&lt;value&gt;*/*&lt;/value&gt;&lt;/header&gt;&lt;header&gt;&lt;name&gt;Cache-Control&lt;/name&gt;&lt;value&gt;no-cache&lt;/value&gt;&lt;/header&gt;&lt;/request&gt;</property>
                    <property
                      dataType="System.String"
                      description="User defined data you wish to send along with your HTTP Request (e.g. Upload file data, Form POST data). Usually you have to set content-type of your data but if you select RequestMethod=POST then system will automatically set content-type=application/x-www-form-urlencoded."
                      expressionType="Notify"
                      name="HttpRequestData"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies content type for data you wish to POST. If you select Default option then system default content type will be used (i.e. application/x-www-form-urlencoded). If you specify Content-Type header along with this option then header value takes precedence."
                      expressionType="Notify"
                      name="HttpRequestContentType"
                      typeConverter="ZappySys.Common.Web.HttpRequestContentType, ZappySys.Common, Version=1.0.2018.11017, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                    <property
                      dataType="System.Boolean"
                      description="If this option is true then component will continue without exception on 404 error (Url not found). This allows you to consume data gracefully."
                      expressionType="Notify"
                      name="ContinueOnUrlNotFoundError">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Ignore SSL certificate related errors. Example: if you getting SSL/TLS errors because of certificate expired or certificate is not from trusted authority or certificate is self-signed. By checking this option you will not get SSL/TLS error."
                      expressionType="Notify"
                      name="IgnoreCertificateErrors">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Allow unsecure ciphers/suites and curves for SSLS/TLS communication. Use this option to communicate with web servers which needs legacy / unsecured ciphers support. This option is only trigged when you change default SSL/TLS Version on advanced settings tab."
                      expressionType="Notify"
                      name="AllowUnsecureSuite">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Enable support for gzip or deflate compression. When you check this option compressed response automatically de-compressed saving bandwidth. This option is only valid if web server supports compressed response stream. Check your API documentation for more information."
                      expressionType="Notify"
                      name="EnableCompressionSupport">true</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies which security protocol is supported for HTTPS communication. Using this option you can enable legacy protocol or enforce to use latest version of security protocol (Note: TLS 1.2 is only supported in SSIS 2014 or Higher)."
                      expressionType="Notify"
                      name="SecurityProtocol"
                      typeConverter="ZappySys.PowerPack.Common.HttpsSecurityProtocolType, ZappySys.PowerPack130, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                    <property
                      dataType="System.Int32"
                      description="Wait time in milliseconds (Pause after each request). 0=No wait. Use this delay time if your API has limit on how many requests you can make in certain time frame."
                      expressionType="Notify"
                      name="WaitTime">0</property>
                    <property
                      dataType="System.Boolean"
                      description="When you redirect error to error output by default you get additional information in ErrorMessage column. Check this option if you need exact Response Body (Useful if its in JSON/XML format which needs to be parsed for additional information for later step)."
                      expressionType="Notify"
                      name="OnErrorOutputResponseBody">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Enable multiple requests using parallel threads."
                      expressionType="Notify"
                      name="EnableParallelRequests">true</property>
                    <property
                      dataType="System.Int32"
                      description="Maximum parallel threads to use for processing multiple web requests."
                      expressionType="Notify"
                      name="MaxParallelThreads">20</property>
                    <property
                      dataType="System.Boolean"
                      description="By default one request is sent for each input row. If your API supports multiple records in a single call via HTTP Body then enable this setting. See also BodyBatchSize, BodyHeader, BodyFooter and BodyRowSeparator property."
                      expressionType="Notify"
                      name="EnableBodyBatch">false</property>
                    <property
                      dataType="System.String"
                      description="When you have to wrap input content between opening and closing tags for each call then set this property to specify opening for body content. For Example if you want to build Body like this (send max 100 rows per call) ==&gt; { records : [ {...}, {...}, {...} ] } then you can set BatchSize=100, BodyHeader as &quot;{ records: [&quot; , BodyFooter as &quot;] }&quot; and BodyRowSeperator as comma {,}. This property is ignored if EnableBodyBatch=false."
                      expressionType="Notify"
                      name="BodyHeader"></property>
                    <property
                      dataType="System.String"
                      description="When you have to wrap input content between opening and closing tags for each call then set this property to specify closing for body content. For Example if you want to build Body like this (send max 100 rows per call) ==&gt; { records : [ {...}, {...}, {...} ] } then you can set BatchSize=100, BodyHeader as &quot;{ records: [&quot; , BodyFooter as &quot;] }&quot; and BodyRowSeperator as comma {,}. This property is ignored if EnableBodyBatch=false."
                      expressionType="Notify"
                      name="BodyFooter"></property>
                    <property
                      dataType="System.Int32"
                      description="If your API supports multiple records via HTTP Body then change this setting &gt; 1 to include multiple upstream records into single call. See also BodyHeader, BodyFooter and BodyRowSeparator property. This property is ignored if EnableBodyBatch=false."
                      expressionType="Notify"
                      name="BodyBatchSize">100</property>
                    <property
                      dataType="System.String"
                      description="When you submit multiple rows in a batch you can separate multiple documents / records using custom separator (e.g. in JSON Array you can use comma {,} as record separator if POST document is in array format [ {...}, {...}, {...} ] ). For last row of batch blank separator is used."
                      expressionType="Notify"
                      name="BodyRowSeparator"></property>
                    <property
                      dataType="System.Boolean"
                      description="Returns response data as binary data (e.g. Byte Array). Check this option is response is Zip file, Image file or any non text data which needs to be exported as raw data without any encoding."
                      expressionType="Notify"
                      name="TreatResponseAsBinary">false</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">ZappySys.WebApiDestination</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Get and Upload Vendors\Partition 3\Push Custom Fields.Connections[Connection]"
                      connectionManagerID="Package.ConnectionManagers[HTTP]"
                      connectionManagerRefId="Package.ConnectionManagers[HTTP]"
                      description="Connection manager for authentication (e.g. HTTP or OAuth Connection)"
                      name="Connection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Get and Upload Vendors\Partition 3\Push Custom Fields.Inputs[WebApiDestinationInput]"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="WebApiDestinationInput"
                      truncationRowDisposition="FailComponent">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Push Custom Fields.Inputs[WebApiDestinationInput].Columns[DerivedCustomJSON]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="3000"
                          cachedName="DerivedCustomJSON"
                          externalMetadataColumnId="Package\Get and Upload Vendors\Partition 3\Push Custom Fields.Inputs[WebApiDestinationInput].ExternalColumns[HttpRequestData]"
                          lineageId="Package\Get and Upload Vendors\Partition 3\Replace Rid_contact and prop_ref.Outputs[Derived Column Output].Columns[DerivedCustomJSON]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Push Custom Fields.Inputs[WebApiDestinationInput].ExternalColumns[HttpRequestUrl]"
                          dataType="wstr"
                          length="2000"
                          name="HttpRequestUrl" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Push Custom Fields.Inputs[WebApiDestinationInput].ExternalColumns[HttpRequestData]"
                          dataType="nText"
                          name="HttpRequestData" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 3\Push Custom Fields.Outputs[WebApiDestination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="WebApiDestination Error Output"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 3\Push Custom Fields.Inputs[WebApiDestinationInput]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Push Custom Fields.Outputs[WebApiDestination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 3\Push Custom Fields.Outputs[WebApiDestination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Push Custom Fields.Outputs[WebApiDestination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 3\Push Custom Fields.Outputs[WebApiDestination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Push Custom Fields.Outputs[WebApiDestination Error Output].Columns[ErrorColumnName]"
                          codePage="1252"
                          dataType="str"
                          length="128"
                          lineageId="Package\Get and Upload Vendors\Partition 3\Push Custom Fields.Outputs[WebApiDestination Error Output].Columns[ErrorColumnName]"
                          name="ErrorColumnName" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Push Custom Fields.Outputs[WebApiDestination Error Output].Columns[ErrorMessage]"
                          dataType="nText"
                          lineageId="Package\Get and Upload Vendors\Partition 3\Push Custom Fields.Outputs[WebApiDestination Error Output].Columns[ErrorMessage]"
                          name="ErrorMessage" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 3\Push Custom Fields.Outputs[Response Output]"
                      exclusionGroup="1"
                      name="Response Output"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 3\Push Custom Fields.Inputs[WebApiDestinationInput]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Push Custom Fields.Outputs[Response Output].Columns[ResponseText]"
                          dataType="nText"
                          lineageId="Package\Get and Upload Vendors\Partition 3\Push Custom Fields.Outputs[Response Output].Columns[ResponseText]"
                          name="ResponseText" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Push Custom Fields.Outputs[Response Output].Columns[StatusCode]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 3\Push Custom Fields.Outputs[Response Output].Columns[StatusCode]"
                          name="StatusCode" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Get and Upload Vendors\Partition 3\Push ID Check Data 1"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Web API Destination; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                  description="The Web API destination can be used to send data to Web API URL (e.g. Submit or POST data to REST API/SOAP or other HTTP/HTTPS endpoints)"
                  name="Push ID Check Data 1"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                      expressionType="Notify"
                      name="LoggingMode"
                      typeConverter="ZappySys.PowerPack.Common.LoggingMode, ZappySys.PowerPack130, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                    <property
                      dataType="System.Boolean"
                      description="When you enable this property it will prefix timestamp before Log messages."
                      expressionType="Notify"
                      name="PrefixTimestamp">false</property>
                    <property
                      dataType="System.Null"
                      expressionType="Notify"
                      name="SelfRef"
                      typeConverter="NOTBROWSABLE" />
                    <property
                      dataType="System.String"
                      description="API URL you want to access"
                      expressionType="Notify"
                      name="HttpRequestUrl">{{User::PackageRosieURL}}</property>
                    <property
                      dataType="System.String"
                      description="Http Web Request Method (e.g. POST, GET, PUT, LIST, DELETE...). Refer your API documentation if you are not sure which method you have to use."
                      expressionType="Notify"
                      name="HttpRequestMethod">POST</property>
                    <property
                      dataType="System.String"
                      description="Set this if you want to set custom Http headers. You may use variable anywhere in the header value using syntax {{User::YourVarName}}. Syntax of Header key value pair is : &amp;lt;request&amp;gt;&amp;lt;header&amp;gt;&amp;lt;name&amp;gt;x-myheader-1&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;AAA&amp;lt;/value&amp;gt;&amp;lt;/header&amp;gt; &amp;lt;header&amp;gt;&amp;lt;name&amp;gt;x-myheader-2&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;BBB&amp;lt;/value&amp;gt;&amp;lt;/header&amp;gt;&amp;lt;/request&amp;gt;"
                      expressionType="Notify"
                      name="HttpHeaders"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">&lt;request&gt;&lt;header&gt;&lt;name&gt;Accept&lt;/name&gt;&lt;value&gt;*/*&lt;/value&gt;&lt;/header&gt;&lt;header&gt;&lt;name&gt;Cache-Control&lt;/name&gt;&lt;value&gt;no-cache&lt;/value&gt;&lt;/header&gt;&lt;/request&gt;</property>
                    <property
                      dataType="System.String"
                      description="User defined data you wish to send along with your HTTP Request (e.g. Upload file data, Form POST data). Usually you have to set content-type of your data but if you select RequestMethod=POST then system will automatically set content-type=application/x-www-form-urlencoded."
                      expressionType="Notify"
                      name="HttpRequestData"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies content type for data you wish to POST. If you select Default option then system default content type will be used (i.e. application/x-www-form-urlencoded). If you specify Content-Type header along with this option then header value takes precedence."
                      expressionType="Notify"
                      name="HttpRequestContentType"
                      typeConverter="ZappySys.Common.Web.HttpRequestContentType, ZappySys.Common, Version=1.0.2018.11017, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                    <property
                      dataType="System.Boolean"
                      description="If this option is true then component will continue without exception on 404 error (Url not found). This allows you to consume data gracefully."
                      expressionType="Notify"
                      name="ContinueOnUrlNotFoundError">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Ignore SSL certificate related errors. Example: if you getting SSL/TLS errors because of certificate expired or certificate is not from trusted authority or certificate is self-signed. By checking this option you will not get SSL/TLS error."
                      expressionType="Notify"
                      name="IgnoreCertificateErrors">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Allow unsecure ciphers/suites and curves for SSLS/TLS communication. Use this option to communicate with web servers which needs legacy / unsecured ciphers support. This option is only trigged when you change default SSL/TLS Version on advanced settings tab."
                      expressionType="Notify"
                      name="AllowUnsecureSuite">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Enable support for gzip or deflate compression. When you check this option compressed response automatically de-compressed saving bandwidth. This option is only valid if web server supports compressed response stream. Check your API documentation for more information."
                      expressionType="Notify"
                      name="EnableCompressionSupport">true</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies which security protocol is supported for HTTPS communication. Using this option you can enable legacy protocol or enforce to use latest version of security protocol (Note: TLS 1.2 is only supported in SSIS 2014 or Higher)."
                      expressionType="Notify"
                      name="SecurityProtocol"
                      typeConverter="ZappySys.PowerPack.Common.HttpsSecurityProtocolType, ZappySys.PowerPack130, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                    <property
                      dataType="System.Int32"
                      description="Wait time in milliseconds (Pause after each request). 0=No wait. Use this delay time if your API has limit on how many requests you can make in certain time frame."
                      expressionType="Notify"
                      name="WaitTime">0</property>
                    <property
                      dataType="System.Boolean"
                      description="When you redirect error to error output by default you get additional information in ErrorMessage column. Check this option if you need exact Response Body (Useful if its in JSON/XML format which needs to be parsed for additional information for later step)."
                      expressionType="Notify"
                      name="OnErrorOutputResponseBody">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Enable multiple requests using parallel threads."
                      expressionType="Notify"
                      name="EnableParallelRequests">true</property>
                    <property
                      dataType="System.Int32"
                      description="Maximum parallel threads to use for processing multiple web requests."
                      expressionType="Notify"
                      name="MaxParallelThreads">20</property>
                    <property
                      dataType="System.Boolean"
                      description="By default one request is sent for each input row. If your API supports multiple records in a single call via HTTP Body then enable this setting. See also BodyBatchSize, BodyHeader, BodyFooter and BodyRowSeparator property."
                      expressionType="Notify"
                      name="EnableBodyBatch">false</property>
                    <property
                      dataType="System.String"
                      description="When you have to wrap input content between opening and closing tags for each call then set this property to specify opening for body content. For Example if you want to build Body like this (send max 100 rows per call) ==&gt; { records : [ {...}, {...}, {...} ] } then you can set BatchSize=100, BodyHeader as &quot;{ records: [&quot; , BodyFooter as &quot;] }&quot; and BodyRowSeperator as comma {,}. This property is ignored if EnableBodyBatch=false."
                      expressionType="Notify"
                      name="BodyHeader"></property>
                    <property
                      dataType="System.String"
                      description="When you have to wrap input content between opening and closing tags for each call then set this property to specify closing for body content. For Example if you want to build Body like this (send max 100 rows per call) ==&gt; { records : [ {...}, {...}, {...} ] } then you can set BatchSize=100, BodyHeader as &quot;{ records: [&quot; , BodyFooter as &quot;] }&quot; and BodyRowSeperator as comma {,}. This property is ignored if EnableBodyBatch=false."
                      expressionType="Notify"
                      name="BodyFooter"></property>
                    <property
                      dataType="System.Int32"
                      description="If your API supports multiple records via HTTP Body then change this setting &gt; 1 to include multiple upstream records into single call. See also BodyHeader, BodyFooter and BodyRowSeparator property. This property is ignored if EnableBodyBatch=false."
                      expressionType="Notify"
                      name="BodyBatchSize">100</property>
                    <property
                      dataType="System.String"
                      description="When you submit multiple rows in a batch you can separate multiple documents / records using custom separator (e.g. in JSON Array you can use comma {,} as record separator if POST document is in array format [ {...}, {...}, {...} ] ). For last row of batch blank separator is used."
                      expressionType="Notify"
                      name="BodyRowSeparator"></property>
                    <property
                      dataType="System.Boolean"
                      description="Returns response data as binary data (e.g. Byte Array). Check this option is response is Zip file, Image file or any non text data which needs to be exported as raw data without any encoding."
                      expressionType="Notify"
                      name="TreatResponseAsBinary">false</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">ZappySys.WebApiDestination</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Get and Upload Vendors\Partition 3\Push ID Check Data 1.Connections[Connection]"
                      connectionManagerID="Package.ConnectionManagers[HTTP]"
                      connectionManagerRefId="Package.ConnectionManagers[HTTP]"
                      description="Connection manager for authentication (e.g. HTTP or OAuth Connection)"
                      name="Connection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Get and Upload Vendors\Partition 3\Push ID Check Data 1.Inputs[WebApiDestinationInput]"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="WebApiDestinationInput"
                      truncationRowDisposition="FailComponent">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Push ID Check Data 1.Inputs[WebApiDestinationInput].Columns[DerivedIDCheckJSON]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="3000"
                          cachedName="DerivedIDCheckJSON"
                          externalMetadataColumnId="Package\Get and Upload Vendors\Partition 3\Push ID Check Data 1.Inputs[WebApiDestinationInput].ExternalColumns[HttpRequestData]"
                          lineageId="Package\Get and Upload Vendors\Partition 3\Replace Rid_contact and prop_ref.Outputs[Derived Column Output].Columns[DerivedIDCheckJSON]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Push ID Check Data 1.Inputs[WebApiDestinationInput].ExternalColumns[HttpRequestUrl]"
                          dataType="wstr"
                          length="2000"
                          name="HttpRequestUrl" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Push ID Check Data 1.Inputs[WebApiDestinationInput].ExternalColumns[HttpRequestData]"
                          dataType="nText"
                          name="HttpRequestData" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 3\Push ID Check Data 1.Outputs[WebApiDestination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="WebApiDestination Error Output"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 3\Push ID Check Data 1.Inputs[WebApiDestinationInput]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Push ID Check Data 1.Outputs[WebApiDestination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 3\Push ID Check Data 1.Outputs[WebApiDestination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Push ID Check Data 1.Outputs[WebApiDestination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 3\Push ID Check Data 1.Outputs[WebApiDestination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Push ID Check Data 1.Outputs[WebApiDestination Error Output].Columns[ErrorColumnName]"
                          codePage="1252"
                          dataType="str"
                          length="128"
                          lineageId="Package\Get and Upload Vendors\Partition 3\Push ID Check Data 1.Outputs[WebApiDestination Error Output].Columns[ErrorColumnName]"
                          name="ErrorColumnName" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Push ID Check Data 1.Outputs[WebApiDestination Error Output].Columns[ErrorMessage]"
                          dataType="nText"
                          lineageId="Package\Get and Upload Vendors\Partition 3\Push ID Check Data 1.Outputs[WebApiDestination Error Output].Columns[ErrorMessage]"
                          name="ErrorMessage" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 3\Push ID Check Data 1.Outputs[Response Output]"
                      exclusionGroup="1"
                      name="Response Output"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 3\Push ID Check Data 1.Inputs[WebApiDestinationInput]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Push ID Check Data 1.Outputs[Response Output].Columns[ResponseText]"
                          dataType="nText"
                          lineageId="Package\Get and Upload Vendors\Partition 3\Push ID Check Data 1.Outputs[Response Output].Columns[ResponseText]"
                          name="ResponseText" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Push ID Check Data 1.Outputs[Response Output].Columns[StatusCode]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 3\Push ID Check Data 1.Outputs[Response Output].Columns[StatusCode]"
                          name="StatusCode" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Get and Upload Vendors\Partition 3\Replace Rid_contact and prop_ref"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Replace Rid_contact and prop_ref"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Get and Upload Vendors\Partition 3\Replace Rid_contact and prop_ref.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Replace Rid_contact and prop_ref.Inputs[Derived Column Input].Columns[rid_contact]"
                          cachedDataType="i8"
                          cachedName="rid_contact"
                          lineageId="Package\Get and Upload Vendors\Partition 3\Map Results 1.Outputs[Derived Column Output].Columns[rid_contact]" />
                        <inputColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Replace Rid_contact and prop_ref.Inputs[Derived Column Input].Columns[DerivedCustomJSON]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="3000"
                          cachedName="DerivedCustomJSON"
                          lineageId="Package\Get and Upload Vendors\Partition 3\Replace Token 1 1.Outputs[Derived Column Output].Columns[DerivedCustomJSON]" />
                        <inputColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Replace Rid_contact and prop_ref.Inputs[Derived Column Input].Columns[prop_ref]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="prop_ref"
                          lineageId="Package\Get and Upload Vendors\Partition 3\Map Results 1.Outputs[Derived Column Output].Columns[prop_ref]" />
                        <inputColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Replace Rid_contact and prop_ref.Inputs[Derived Column Input].Columns[DerivedAMLJSON]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="3000"
                          cachedName="DerivedAMLJSON"
                          lineageId="Package\Get and Upload Vendors\Partition 3\Replace Token 1 1.Outputs[Derived Column Output].Columns[DerivedAMLJSON]" />
                        <inputColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Replace Rid_contact and prop_ref.Inputs[Derived Column Input].Columns[DerivedIDCheckJSON]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="3000"
                          cachedName="DerivedIDCheckJSON"
                          lineageId="Package\Get and Upload Vendors\Partition 3\Replace Token 1 1.Outputs[Derived Column Output].Columns[DerivedIDCheckJSON]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 3\Replace Rid_contact and prop_ref.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 3\Replace Rid_contact and prop_ref.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Replace Rid_contact and prop_ref.Outputs[Derived Column Output].Columns[DerivedCustomJSON]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="3000"
                          lineageId="Package\Get and Upload Vendors\Partition 3\Replace Rid_contact and prop_ref.Outputs[Derived Column Output].Columns[DerivedCustomJSON]"
                          name="DerivedCustomJSON"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_STR,3000,1252)([REPLACE]([REPLACE](#{Package\Get and Upload Vendors\Partition 3\Replace Token 1 1.Outputs[Derived Column Output].Columns[DerivedCustomJSON]},"{{RID_CONTACT}}",(DT_STR,30,1252)#{Package\Get and Upload Vendors\Partition 3\Map Results 1.Outputs[Derived Column Output].Columns[rid_contact]}),"{{PROP_REF}}",[REPLACE]([REPLACE](#{Package\Get and Upload Vendors\Partition 3\Map Results 1.Outputs[Derived Column Output].Columns[prop_ref]},"VENDOR1_",""),"VENDOR2_","")))</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_STR,3000,1252)(REPLACE(REPLACE(DerivedCustomJSON,"{{RID_CONTACT}}",(DT_STR,30,1252)rid_contact),"{{PROP_REF}}",REPLACE(REPLACE(prop_ref,"VENDOR1_",""),"VENDOR2_","")))</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Replace Rid_contact and prop_ref.Outputs[Derived Column Output].Columns[DerivedAMLJSON]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="3000"
                          lineageId="Package\Get and Upload Vendors\Partition 3\Replace Rid_contact and prop_ref.Outputs[Derived Column Output].Columns[DerivedAMLJSON]"
                          name="DerivedAMLJSON"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_STR,3000,1252)[REPLACE](#{Package\Get and Upload Vendors\Partition 3\Replace Token 1 1.Outputs[Derived Column Output].Columns[DerivedAMLJSON]},"{{RID_CONTACT}}",(DT_STR,30,1252)#{Package\Get and Upload Vendors\Partition 3\Map Results 1.Outputs[Derived Column Output].Columns[rid_contact]})</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_STR,3000,1252)REPLACE(DerivedAMLJSON,"{{RID_CONTACT}}",(DT_STR,30,1252)rid_contact)</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Replace Rid_contact and prop_ref.Outputs[Derived Column Output].Columns[DerivedIDCheckJSON]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="3000"
                          lineageId="Package\Get and Upload Vendors\Partition 3\Replace Rid_contact and prop_ref.Outputs[Derived Column Output].Columns[DerivedIDCheckJSON]"
                          name="DerivedIDCheckJSON"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_STR,3000,1252)[REPLACE](#{Package\Get and Upload Vendors\Partition 3\Replace Token 1 1.Outputs[Derived Column Output].Columns[DerivedIDCheckJSON]},"{{RID_CONTACT}}",(DT_STR,30,1252)#{Package\Get and Upload Vendors\Partition 3\Map Results 1.Outputs[Derived Column Output].Columns[rid_contact]})</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_STR,3000,1252)REPLACE(DerivedIDCheckJSON,"{{RID_CONTACT}}",(DT_STR,30,1252)rid_contact)</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 3\Replace Rid_contact and prop_ref.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 3\Replace Rid_contact and prop_ref.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Replace Rid_contact and prop_ref.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 3\Replace Rid_contact and prop_ref.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Replace Rid_contact and prop_ref.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 3\Replace Rid_contact and prop_ref.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Get and Upload Vendors\Partition 3\Replace Token"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Replace Token"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Get and Upload Vendors\Partition 3\Replace Token.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Replace Token.Inputs[Derived Column Input].Columns[CustJSON]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="3000"
                          cachedName="CustJSON"
                          lineageId="Package\Get and Upload Vendors\Partition 3\Get Vendors List.Outputs[OLE DB Source Output].Columns[CustJSON]" />
                        <inputColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Replace Token.Inputs[Derived Column Input].Columns[AMLJSON]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="3000"
                          cachedName="AMLJSON"
                          lineageId="Package\Get and Upload Vendors\Partition 3\Get Vendors List.Outputs[OLE DB Source Output].Columns[AMLJSON]" />
                        <inputColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Replace Token.Inputs[Derived Column Input].Columns[IDCHECKJSON]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="3000"
                          cachedName="IDCHECKJSON"
                          lineageId="Package\Get and Upload Vendors\Partition 3\Get Vendors List.Outputs[OLE DB Source Output].Columns[IDCHECKJSON]" />
                        <inputColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Replace Token.Inputs[Derived Column Input].Columns[ContactJSON]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="3000"
                          cachedName="ContactJSON"
                          lineageId="Package\Get and Upload Vendors\Partition 3\Get Vendors List.Outputs[OLE DB Source Output].Columns[ContactJSON]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 3\Replace Token.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 3\Replace Token.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Replace Token.Outputs[Derived Column Output].Columns[DerivedVendorJSON]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="3000"
                          lineageId="Package\Get and Upload Vendors\Partition 3\Replace Token.Outputs[Derived Column Output].Columns[DerivedVendorJSON]"
                          name="DerivedVendorJSON"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_STR,3000,1252)[REPLACE](#{Package\Get and Upload Vendors\Partition 3\Get Vendors List.Outputs[OLE DB Source Output].Columns[ContactJSON]},"{{TOKEN}}",@[User::APIToken])</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_STR,3000,1252)REPLACE(ContactJSON,"{{TOKEN}}",@[User::APIToken])</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Replace Token.Outputs[Derived Column Output].Columns[DerivedCustomJSON]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="3000"
                          lineageId="Package\Get and Upload Vendors\Partition 3\Replace Token.Outputs[Derived Column Output].Columns[DerivedCustomJSON]"
                          name="DerivedCustomJSON"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_STR,3000,1252)([REPLACE](#{Package\Get and Upload Vendors\Partition 3\Get Vendors List.Outputs[OLE DB Source Output].Columns[CustJSON]},"{{TOKEN}}",@[User::APIToken]))</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_STR,3000,1252)(REPLACE(CustJSON,"{{TOKEN}}",@[User::APIToken]))</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Replace Token.Outputs[Derived Column Output].Columns[DerivedAMLJSON]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="3000"
                          lineageId="Package\Get and Upload Vendors\Partition 3\Replace Token.Outputs[Derived Column Output].Columns[DerivedAMLJSON]"
                          name="DerivedAMLJSON"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_STR,3000,1252)([REPLACE](#{Package\Get and Upload Vendors\Partition 3\Get Vendors List.Outputs[OLE DB Source Output].Columns[AMLJSON]},"{{TOKEN}}",@[User::APIToken]))</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_STR,3000,1252)(REPLACE(AMLJSON,"{{TOKEN}}",@[User::APIToken]))</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Replace Token.Outputs[Derived Column Output].Columns[DerivedIDCheckJSON]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="3000"
                          lineageId="Package\Get and Upload Vendors\Partition 3\Replace Token.Outputs[Derived Column Output].Columns[DerivedIDCheckJSON]"
                          name="DerivedIDCheckJSON"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_STR,3000,1252)([REPLACE](#{Package\Get and Upload Vendors\Partition 3\Get Vendors List.Outputs[OLE DB Source Output].Columns[IDCHECKJSON]},"{{TOKEN}}",@[User::APIToken]))</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_STR,3000,1252)(REPLACE(IDCHECKJSON,"{{TOKEN}}",@[User::APIToken]))</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 3\Replace Token.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 3\Replace Token.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Replace Token.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 3\Replace Token.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Replace Token.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 3\Replace Token.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Get and Upload Vendors\Partition 3\Replace Token 1 1"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Replace Token 1 1"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Get and Upload Vendors\Partition 3\Replace Token 1 1.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Replace Token 1 1.Inputs[Derived Column Input].Columns[CustJSON]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="3000"
                          cachedName="CustJSON"
                          lineageId="Package\Get and Upload Vendors\Partition 3\Lookup.Outputs[Lookup Match Output].Columns[CustJSON]" />
                        <inputColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Replace Token 1 1.Inputs[Derived Column Input].Columns[AMLJSON]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="3000"
                          cachedName="AMLJSON"
                          lineageId="Package\Get and Upload Vendors\Partition 3\Lookup.Outputs[Lookup Match Output].Columns[AMLJSON]" />
                        <inputColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Replace Token 1 1.Inputs[Derived Column Input].Columns[IDCHECKJSON]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="3000"
                          cachedName="IDCHECKJSON"
                          lineageId="Package\Get and Upload Vendors\Partition 3\Lookup.Outputs[Lookup Match Output].Columns[IDCHECKJSON]" />
                        <inputColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Replace Token 1 1.Inputs[Derived Column Input].Columns[ContactJSON]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="3000"
                          cachedName="ContactJSON"
                          lineageId="Package\Get and Upload Vendors\Partition 3\Lookup.Outputs[Lookup Match Output].Columns[ContactJSON]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 3\Replace Token 1 1.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 3\Replace Token 1 1.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Replace Token 1 1.Outputs[Derived Column Output].Columns[DerivedVendorJSON]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="3000"
                          lineageId="Package\Get and Upload Vendors\Partition 3\Replace Token 1 1.Outputs[Derived Column Output].Columns[DerivedVendorJSON]"
                          name="DerivedVendorJSON"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_STR,3000,1252)[REPLACE](#{Package\Get and Upload Vendors\Partition 3\Lookup.Outputs[Lookup Match Output].Columns[ContactJSON]},"{{TOKEN}}",@[User::APIToken])</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_STR,3000,1252)REPLACE(ContactJSON,"{{TOKEN}}",@[User::APIToken])</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Replace Token 1 1.Outputs[Derived Column Output].Columns[DerivedCustomJSON]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="3000"
                          lineageId="Package\Get and Upload Vendors\Partition 3\Replace Token 1 1.Outputs[Derived Column Output].Columns[DerivedCustomJSON]"
                          name="DerivedCustomJSON"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_STR,3000,1252)([REPLACE](#{Package\Get and Upload Vendors\Partition 3\Lookup.Outputs[Lookup Match Output].Columns[CustJSON]},"{{TOKEN}}",@[User::APIToken]))</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_STR,3000,1252)(REPLACE(CustJSON,"{{TOKEN}}",@[User::APIToken]))</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Replace Token 1 1.Outputs[Derived Column Output].Columns[DerivedAMLJSON]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="3000"
                          lineageId="Package\Get and Upload Vendors\Partition 3\Replace Token 1 1.Outputs[Derived Column Output].Columns[DerivedAMLJSON]"
                          name="DerivedAMLJSON"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_STR,3000,1252)([REPLACE](#{Package\Get and Upload Vendors\Partition 3\Lookup.Outputs[Lookup Match Output].Columns[AMLJSON]},"{{TOKEN}}",@[User::APIToken]))</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_STR,3000,1252)(REPLACE(AMLJSON,"{{TOKEN}}",@[User::APIToken]))</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Replace Token 1 1.Outputs[Derived Column Output].Columns[DerivedIDCheckJSON]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="3000"
                          lineageId="Package\Get and Upload Vendors\Partition 3\Replace Token 1 1.Outputs[Derived Column Output].Columns[DerivedIDCheckJSON]"
                          name="DerivedIDCheckJSON"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_STR,3000,1252)([REPLACE](#{Package\Get and Upload Vendors\Partition 3\Lookup.Outputs[Lookup Match Output].Columns[IDCHECKJSON]},"{{TOKEN}}",@[User::APIToken]))</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_STR,3000,1252)(REPLACE(IDCHECKJSON,"{{TOKEN}}",@[User::APIToken]))</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 3\Replace Token 1 1.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 3\Replace Token 1 1.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Replace Token 1 1.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 3\Replace Token 1 1.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Replace Token 1 1.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 3\Replace Token 1 1.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Get and Upload Vendors\Partition 3\Row Count Success"
                  componentClassID="Microsoft.RowCount"
                  contactInfo="Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status."
                  name="Row Count Success">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the variable to hold the row count."
                      name="VariableName">User::RecCountSuccess</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Get and Upload Vendors\Partition 3\Row Count Success.Inputs[Row Count Input 1]"
                      hasSideEffects="true"
                      name="Row Count Input 1">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 3\Row Count Success.Outputs[Row Count Output 1]"
                      name="Row Count Output 1"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 3\Row Count Success.Inputs[Row Count Input 1]">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Get and Upload Vendors\Partition 3\Trash Destination 1"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Trash Destination; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                  description="The trash destination is used to create dummy destination which ends data path without any processing."
                  name="Trash Destination 1"
                  version="2">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                      expressionType="Notify"
                      name="LoggingMode"
                      typeConverter="ZappySys.PowerPack.Common.LoggingMode, ZappySys.PowerPack130, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                    <property
                      dataType="System.Boolean"
                      description="When you enable this property it will prefix timestamp before Log messages."
                      expressionType="Notify"
                      name="PrefixTimestamp">false</property>
                    <property
                      dataType="System.Null"
                      expressionType="Notify"
                      name="SelfRef"
                      typeConverter="NOTBROWSABLE" />
                    <property
                      dataType="System.String"
                      description="File path where you want to save data"
                      expressionType="Notify"
                      name="FilePath"></property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates if you want to save input data to comma separated text file"
                      expressionType="Notify"
                      name="SaveDataToFile">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Append data to file"
                      expressionType="Notify"
                      name="Append">false</property>
                    <property
                      dataType="System.String"
                      description="RowSeparator"
                      expressionType="Notify"
                      name="RowSeparator">{NEWLINE}</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether you want to overwrite target file if exists"
                      expressionType="Notify"
                      name="OverwriteFileIfExists">true</property>
                    <property
                      dataType="System.String"
                      description="ColumnSeparator"
                      expressionType="Notify"
                      name="ColumnSeparator">,</property>
                    <property
                      dataType="System.Boolean"
                      description="SupportUnicode"
                      expressionType="Notify"
                      name="SupportUnicode">true</property>
                    <property
                      dataType="System.Boolean"
                      description="ColumnNamesInFirstRow"
                      expressionType="Notify"
                      name="ColumnNamesInFirstRow">true</property>
                    <property
                      dataType="System.Boolean"
                      description="QuoteDataIfNeeded"
                      expressionType="Notify"
                      name="QuoteDataIfNeeded">true</property>
                    <property
                      dataType="System.String"
                      description="Date time format string for any column with DT_DBDATETIME, DT_DBDATETIME2 or DB_DATE format"
                      expressionType="Notify"
                      name="DateTimeFormat">yyyy-MM-dd HH:mm:ss</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">ZappySys.TrashDestination</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Get and Upload Vendors\Partition 3\Trash Destination 1.Inputs[TrashDestinationInput]"
                      hasSideEffects="true"
                      name="TrashDestinationInput">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                </component>
                <component
                  refId="Package\Get and Upload Vendors\Partition 3\Trash Destination 1 1"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Trash Destination; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                  description="The trash destination is used to create dummy destination which ends data path without any processing."
                  name="Trash Destination 1 1"
                  version="2">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                      expressionType="Notify"
                      name="LoggingMode"
                      typeConverter="ZappySys.PowerPack.Common.LoggingMode, ZappySys.PowerPack130, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                    <property
                      dataType="System.Boolean"
                      description="When you enable this property it will prefix timestamp before Log messages."
                      expressionType="Notify"
                      name="PrefixTimestamp">false</property>
                    <property
                      dataType="System.Null"
                      expressionType="Notify"
                      name="SelfRef"
                      typeConverter="NOTBROWSABLE" />
                    <property
                      dataType="System.String"
                      description="File path where you want to save data"
                      expressionType="Notify"
                      name="FilePath"></property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates if you want to save input data to comma separated text file"
                      expressionType="Notify"
                      name="SaveDataToFile">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Append data to file"
                      expressionType="Notify"
                      name="Append">false</property>
                    <property
                      dataType="System.String"
                      description="RowSeparator"
                      expressionType="Notify"
                      name="RowSeparator">{NEWLINE}</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether you want to overwrite target file if exists"
                      expressionType="Notify"
                      name="OverwriteFileIfExists">true</property>
                    <property
                      dataType="System.String"
                      description="ColumnSeparator"
                      expressionType="Notify"
                      name="ColumnSeparator">,</property>
                    <property
                      dataType="System.Boolean"
                      description="SupportUnicode"
                      expressionType="Notify"
                      name="SupportUnicode">true</property>
                    <property
                      dataType="System.Boolean"
                      description="ColumnNamesInFirstRow"
                      expressionType="Notify"
                      name="ColumnNamesInFirstRow">true</property>
                    <property
                      dataType="System.Boolean"
                      description="QuoteDataIfNeeded"
                      expressionType="Notify"
                      name="QuoteDataIfNeeded">true</property>
                    <property
                      dataType="System.String"
                      description="Date time format string for any column with DT_DBDATETIME, DT_DBDATETIME2 or DB_DATE format"
                      expressionType="Notify"
                      name="DateTimeFormat">yyyy-MM-dd HH:mm:ss</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">ZappySys.TrashDestination</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Get and Upload Vendors\Partition 3\Trash Destination 1 1.Inputs[TrashDestinationInput]"
                      hasSideEffects="true"
                      name="TrashDestinationInput">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                </component>
                <component
                  refId="Package\Get and Upload Vendors\Partition 3\Trash Destination 1 1 1"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Trash Destination; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                  description="The trash destination is used to create dummy destination which ends data path without any processing."
                  name="Trash Destination 1 1 1"
                  version="2">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                      expressionType="Notify"
                      name="LoggingMode"
                      typeConverter="ZappySys.PowerPack.Common.LoggingMode, ZappySys.PowerPack130, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                    <property
                      dataType="System.Boolean"
                      description="When you enable this property it will prefix timestamp before Log messages."
                      expressionType="Notify"
                      name="PrefixTimestamp">false</property>
                    <property
                      dataType="System.Null"
                      expressionType="Notify"
                      name="SelfRef"
                      typeConverter="NOTBROWSABLE" />
                    <property
                      dataType="System.String"
                      description="File path where you want to save data"
                      expressionType="Notify"
                      name="FilePath"></property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates if you want to save input data to comma separated text file"
                      expressionType="Notify"
                      name="SaveDataToFile">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Append data to file"
                      expressionType="Notify"
                      name="Append">false</property>
                    <property
                      dataType="System.String"
                      description="RowSeparator"
                      expressionType="Notify"
                      name="RowSeparator">{NEWLINE}</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether you want to overwrite target file if exists"
                      expressionType="Notify"
                      name="OverwriteFileIfExists">true</property>
                    <property
                      dataType="System.String"
                      description="ColumnSeparator"
                      expressionType="Notify"
                      name="ColumnSeparator">,</property>
                    <property
                      dataType="System.Boolean"
                      description="SupportUnicode"
                      expressionType="Notify"
                      name="SupportUnicode">true</property>
                    <property
                      dataType="System.Boolean"
                      description="ColumnNamesInFirstRow"
                      expressionType="Notify"
                      name="ColumnNamesInFirstRow">true</property>
                    <property
                      dataType="System.Boolean"
                      description="QuoteDataIfNeeded"
                      expressionType="Notify"
                      name="QuoteDataIfNeeded">true</property>
                    <property
                      dataType="System.String"
                      description="Date time format string for any column with DT_DBDATETIME, DT_DBDATETIME2 or DB_DATE format"
                      expressionType="Notify"
                      name="DateTimeFormat">yyyy-MM-dd HH:mm:ss</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">ZappySys.TrashDestination</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Get and Upload Vendors\Partition 3\Trash Destination 1 1 1.Inputs[TrashDestinationInput]"
                      hasSideEffects="true"
                      name="TrashDestinationInput">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                </component>
                <component
                  refId="Package\Get and Upload Vendors\Partition 3\Trash Destination 1 1 1 1"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Trash Destination; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                  description="The trash destination is used to create dummy destination which ends data path without any processing."
                  name="Trash Destination 1 1 1 1"
                  version="2">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                      expressionType="Notify"
                      name="LoggingMode"
                      typeConverter="ZappySys.PowerPack.Common.LoggingMode, ZappySys.PowerPack130, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                    <property
                      dataType="System.Boolean"
                      description="When you enable this property it will prefix timestamp before Log messages."
                      expressionType="Notify"
                      name="PrefixTimestamp">false</property>
                    <property
                      dataType="System.Null"
                      expressionType="Notify"
                      name="SelfRef"
                      typeConverter="NOTBROWSABLE" />
                    <property
                      dataType="System.String"
                      description="File path where you want to save data"
                      expressionType="Notify"
                      name="FilePath"></property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates if you want to save input data to comma separated text file"
                      expressionType="Notify"
                      name="SaveDataToFile">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Append data to file"
                      expressionType="Notify"
                      name="Append">false</property>
                    <property
                      dataType="System.String"
                      description="RowSeparator"
                      expressionType="Notify"
                      name="RowSeparator">{NEWLINE}</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether you want to overwrite target file if exists"
                      expressionType="Notify"
                      name="OverwriteFileIfExists">true</property>
                    <property
                      dataType="System.String"
                      description="ColumnSeparator"
                      expressionType="Notify"
                      name="ColumnSeparator">,</property>
                    <property
                      dataType="System.Boolean"
                      description="SupportUnicode"
                      expressionType="Notify"
                      name="SupportUnicode">true</property>
                    <property
                      dataType="System.Boolean"
                      description="ColumnNamesInFirstRow"
                      expressionType="Notify"
                      name="ColumnNamesInFirstRow">true</property>
                    <property
                      dataType="System.Boolean"
                      description="QuoteDataIfNeeded"
                      expressionType="Notify"
                      name="QuoteDataIfNeeded">true</property>
                    <property
                      dataType="System.String"
                      description="Date time format string for any column with DT_DBDATETIME, DT_DBDATETIME2 or DB_DATE format"
                      expressionType="Notify"
                      name="DateTimeFormat">yyyy-MM-dd HH:mm:ss</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">ZappySys.TrashDestination</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Get and Upload Vendors\Partition 3\Trash Destination 1 1 1 1.Inputs[TrashDestinationInput]"
                      hasSideEffects="true"
                      name="TrashDestinationInput">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                </component>
                <component
                  refId="Package\Get and Upload Vendors\Partition 3\Trash Destination 1 1 4 1"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Trash Destination; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                  description="The trash destination is used to create dummy destination which ends data path without any processing."
                  name="Trash Destination 1 1 4 1"
                  version="2">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                      expressionType="Notify"
                      name="LoggingMode"
                      typeConverter="ZappySys.PowerPack.Common.LoggingMode, ZappySys.PowerPack130, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                    <property
                      dataType="System.Boolean"
                      description="When you enable this property it will prefix timestamp before Log messages."
                      expressionType="Notify"
                      name="PrefixTimestamp">false</property>
                    <property
                      dataType="System.Null"
                      expressionType="Notify"
                      name="SelfRef"
                      typeConverter="NOTBROWSABLE" />
                    <property
                      dataType="System.String"
                      description="File path where you want to save data"
                      expressionType="Notify"
                      name="FilePath"></property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates if you want to save input data to comma separated text file"
                      expressionType="Notify"
                      name="SaveDataToFile">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Append data to file"
                      expressionType="Notify"
                      name="Append">false</property>
                    <property
                      dataType="System.String"
                      description="RowSeparator"
                      expressionType="Notify"
                      name="RowSeparator">{NEWLINE}</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether you want to overwrite target file if exists"
                      expressionType="Notify"
                      name="OverwriteFileIfExists">true</property>
                    <property
                      dataType="System.String"
                      description="ColumnSeparator"
                      expressionType="Notify"
                      name="ColumnSeparator">,</property>
                    <property
                      dataType="System.Boolean"
                      description="SupportUnicode"
                      expressionType="Notify"
                      name="SupportUnicode">true</property>
                    <property
                      dataType="System.Boolean"
                      description="ColumnNamesInFirstRow"
                      expressionType="Notify"
                      name="ColumnNamesInFirstRow">true</property>
                    <property
                      dataType="System.Boolean"
                      description="QuoteDataIfNeeded"
                      expressionType="Notify"
                      name="QuoteDataIfNeeded">true</property>
                    <property
                      dataType="System.String"
                      description="Date time format string for any column with DT_DBDATETIME, DT_DBDATETIME2 or DB_DATE format"
                      expressionType="Notify"
                      name="DateTimeFormat">yyyy-MM-dd HH:mm:ss</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">ZappySys.TrashDestination</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Get and Upload Vendors\Partition 3\Trash Destination 1 1 4 1.Inputs[TrashDestinationInput]"
                      hasSideEffects="true"
                      name="TrashDestinationInput">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                </component>
                <component
                  refId="Package\Get and Upload Vendors\Partition 3\Update RID"
                  componentClassID="Microsoft.OLEDBCommand"
                  contactInfo="OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
                  description="Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time."
                  name="Update RID"
                  usesDispositions="true"
                  version="2">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">exec Rosie_uspUpdVendorContactRid ?,?,?,?</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Get and Upload Vendors\Partition 3\Update RID.Connections[OleDbConnection]"
                      connectionManagerID="{78432CA1-1FEA-4ED4-9C0F-D552A4A9DE0E}:external"
                      connectionManagerRefId="Project.ConnectionManagers[InternetDB]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Get and Upload Vendors\Partition 3\Update RID.Inputs[OLE DB Command Input]"
                      errorOrTruncationOperation="Command Execution"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Command Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Update RID.Inputs[OLE DB Command Input].Columns[office_Id]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="4"
                          cachedName="office_Id"
                          externalMetadataColumnId="Package\Get and Upload Vendors\Partition 3\Update RID.Inputs[OLE DB Command Input].ExternalColumns[@office_id]"
                          lineageId="Package\Get and Upload Vendors\Partition 3\Map Results 1.Outputs[Derived Column Output].Columns[office_Id]" />
                        <inputColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Update RID.Inputs[OLE DB Command Input].Columns[rid_contact]"
                          cachedDataType="i8"
                          cachedName="rid_contact"
                          externalMetadataColumnId="Package\Get and Upload Vendors\Partition 3\Update RID.Inputs[OLE DB Command Input].ExternalColumns[@rid_contact]"
                          lineageId="Package\Get and Upload Vendors\Partition 3\Map Results 1.Outputs[Derived Column Output].Columns[rid_contact]" />
                        <inputColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Update RID.Inputs[OLE DB Command Input].Columns[etag_contact]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="80"
                          cachedName="etag_contact"
                          externalMetadataColumnId="Package\Get and Upload Vendors\Partition 3\Update RID.Inputs[OLE DB Command Input].ExternalColumns[@etag_contact]"
                          lineageId="Package\Get and Upload Vendors\Partition 3\Map Results 1.Outputs[Derived Column Output].Columns[etag_contact]" />
                        <inputColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Update RID.Inputs[OLE DB Command Input].Columns[prop_ref]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="prop_ref"
                          externalMetadataColumnId="Package\Get and Upload Vendors\Partition 3\Update RID.Inputs[OLE DB Command Input].ExternalColumns[@prop_Ref]"
                          lineageId="Package\Get and Upload Vendors\Partition 3\Map Results 1.Outputs[Derived Column Output].Columns[prop_ref]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Update RID.Inputs[OLE DB Command Input].ExternalColumns[@office_id]"
                          codePage="1252"
                          dataType="str"
                          length="4"
                          name="@office_id">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Update RID.Inputs[OLE DB Command Input].ExternalColumns[@rid_contact]"
                          dataType="i4"
                          name="@rid_contact">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">81</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Update RID.Inputs[OLE DB Command Input].ExternalColumns[@etag_contact]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="@etag_contact">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Update RID.Inputs[OLE DB Command Input].ExternalColumns[@prop_Ref]"
                          codePage="1252"
                          dataType="str"
                          length="25"
                          name="@prop_Ref">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 3\Update RID.Outputs[OLE DB Command Output]"
                      exclusionGroup="1"
                      name="OLE DB Command Output"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 3\Update RID.Inputs[OLE DB Command Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 3\Update RID.Outputs[OLE DB Command Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Command Error Output"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 3\Update RID.Inputs[OLE DB Command Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Update RID.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 3\Update RID.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 3\Update RID.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 3\Update RID.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Get and Upload Vendors\Partition 3.Paths[Derived Column Output]"
                  endId="Package\Get and Upload Vendors\Partition 3\Multicast.Inputs[Multicast Input 1]"
                  name="Derived Column Output"
                  startId="Package\Get and Upload Vendors\Partition 3\Replace Rid_contact and prop_ref.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Get and Upload Vendors\Partition 3.Paths[Derived Column Output1]"
                  endId="Package\Get and Upload Vendors\Partition 3\Replace Rid_contact and prop_ref.Inputs[Derived Column Input]"
                  name="Derived Column Output"
                  startId="Package\Get and Upload Vendors\Partition 3\Replace Token 1 1.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Get and Upload Vendors\Partition 3.Paths[Derived Column Output2]"
                  endId="Package\Get and Upload Vendors\Partition 3\Create Contact.Inputs[WebApiDestinationInput]"
                  name="Derived Column Output"
                  startId="Package\Get and Upload Vendors\Partition 3\Replace Token.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Get and Upload Vendors\Partition 3.Paths[Derived Column Output3]"
                  endId="Package\Get and Upload Vendors\Partition 3\Multicast 1.Inputs[Multicast Input 1]"
                  name="Derived Column Output"
                  startId="Package\Get and Upload Vendors\Partition 3\Map Results 1.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Get and Upload Vendors\Partition 3.Paths[Do nothing]"
                  endId="Package\Get and Upload Vendors\Partition 3\Trash Destination 1 1 1 1.Inputs[TrashDestinationInput]"
                  name="Do nothing"
                  startId="Package\Get and Upload Vendors\Partition 3\Conditional Split.Outputs[Do nothing]" />
                <path
                  refId="Package\Get and Upload Vendors\Partition 3.Paths[JsonParserTransformOutput]"
                  endId="Package\Get and Upload Vendors\Partition 3\Check Error 1.Inputs[Conditional Split Input]"
                  name="JsonParserTransformOutput"
                  startId="Package\Get and Upload Vendors\Partition 3\Get Results.Outputs[JsonParserTransformOutput]" />
                <path
                  refId="Package\Get and Upload Vendors\Partition 3.Paths[Lookup Match Output]"
                  endId="Package\Get and Upload Vendors\Partition 3\Replace Token 1 1.Inputs[Derived Column Input]"
                  name="Lookup Match Output"
                  startId="Package\Get and Upload Vendors\Partition 3\Lookup.Outputs[Lookup Match Output]" />
                <path
                  refId="Package\Get and Upload Vendors\Partition 3.Paths[Multicast Output 1]"
                  endId="Package\Get and Upload Vendors\Partition 3\Push Custom Fields.Inputs[WebApiDestinationInput]"
                  name="Multicast Output 1"
                  startId="Package\Get and Upload Vendors\Partition 3\Multicast.Outputs[Multicast Output 1]" />
                <path
                  refId="Package\Get and Upload Vendors\Partition 3.Paths[Multicast Output 11]"
                  endId="Package\Get and Upload Vendors\Partition 3\Update RID.Inputs[OLE DB Command Input]"
                  name="Multicast Output 1"
                  startId="Package\Get and Upload Vendors\Partition 3\Multicast 1.Outputs[Multicast Output 1]" />
                <path
                  refId="Package\Get and Upload Vendors\Partition 3.Paths[Multicast Output 2]"
                  endId="Package\Get and Upload Vendors\Partition 3\Push ID Check Data 1.Inputs[WebApiDestinationInput]"
                  name="Multicast Output 2"
                  startId="Package\Get and Upload Vendors\Partition 3\Multicast.Outputs[Multicast Output 2]" />
                <path
                  refId="Package\Get and Upload Vendors\Partition 3.Paths[Multicast Output 31]"
                  endId="Package\Get and Upload Vendors\Partition 3\Conditional Split.Inputs[Conditional Split Input]"
                  name="Multicast Output 3"
                  startId="Package\Get and Upload Vendors\Partition 3\Multicast.Outputs[Multicast Output 3]" />
                <path
                  refId="Package\Get and Upload Vendors\Partition 3.Paths[Multicast Output 3]"
                  endId="Package\Get and Upload Vendors\Partition 3\Lookup.Inputs[Lookup Input]"
                  name="Multicast Output 3"
                  startId="Package\Get and Upload Vendors\Partition 3\Multicast 1.Outputs[Multicast Output 3]" />
                <path
                  refId="Package\Get and Upload Vendors\Partition 3.Paths[Need To Flag AML]"
                  endId="Package\Get and Upload Vendors\Partition 3\AML.Inputs[WebApiDestinationInput]"
                  name="Need To Flag AML"
                  startId="Package\Get and Upload Vendors\Partition 3\Conditional Split.Outputs[Need To Flag AML]" />
                <path
                  refId="Package\Get and Upload Vendors\Partition 3.Paths[No Error]"
                  endId="Package\Get and Upload Vendors\Partition 3\Map Results 1.Inputs[Derived Column Input]"
                  name="No Error"
                  startId="Package\Get and Upload Vendors\Partition 3\Check Error 1.Outputs[No Error]" />
                <path
                  refId="Package\Get and Upload Vendors\Partition 3.Paths[OLE DB Command Output]"
                  endId="Package\Get and Upload Vendors\Partition 3\Row Count Success.Inputs[Row Count Input 1]"
                  name="OLE DB Command Output"
                  startId="Package\Get and Upload Vendors\Partition 3\Update RID.Outputs[OLE DB Command Output]" />
                <path
                  refId="Package\Get and Upload Vendors\Partition 3.Paths[OLE DB Source Output]"
                  endId="Package\Get and Upload Vendors\Partition 3\Main Record Count.Inputs[Row Count Input 1]"
                  name="OLE DB Source Output"
                  startId="Package\Get and Upload Vendors\Partition 3\Get Vendors List.Outputs[OLE DB Source Output]" />
                <path
                  refId="Package\Get and Upload Vendors\Partition 3.Paths[Response Output]"
                  endId="Package\Get and Upload Vendors\Partition 3\Trash Destination 1 1 4 1.Inputs[TrashDestinationInput]"
                  name="Response Output"
                  startId="Package\Get and Upload Vendors\Partition 3\Push ID Check Data 1.Outputs[Response Output]" />
                <path
                  refId="Package\Get and Upload Vendors\Partition 3.Paths[Response Output1]"
                  endId="Package\Get and Upload Vendors\Partition 3\Trash Destination 1 1 1.Inputs[TrashDestinationInput]"
                  name="Response Output"
                  startId="Package\Get and Upload Vendors\Partition 3\AML.Outputs[Response Output]" />
                <path
                  refId="Package\Get and Upload Vendors\Partition 3.Paths[Response Output2]"
                  endId="Package\Get and Upload Vendors\Partition 3\Trash Destination 1 1.Inputs[TrashDestinationInput]"
                  name="Response Output"
                  startId="Package\Get and Upload Vendors\Partition 3\Push Custom Fields.Outputs[Response Output]" />
                <path
                  refId="Package\Get and Upload Vendors\Partition 3.Paths[Response Output3]"
                  endId="Package\Get and Upload Vendors\Partition 3\Get Results.Inputs[JsonParserTransformInput]"
                  name="Response Output"
                  startId="Package\Get and Upload Vendors\Partition 3\Create Contact.Outputs[Response Output]" />
                <path
                  refId="Package\Get and Upload Vendors\Partition 3.Paths[Row Count Output 1]"
                  endId="Package\Get and Upload Vendors\Partition 3\Replace Token.Inputs[Derived Column Input]"
                  name="Row Count Output 1"
                  startId="Package\Get and Upload Vendors\Partition 3\Main Record Count.Outputs[Row Count Output 1]" />
                <path
                  refId="Package\Get and Upload Vendors\Partition 3.Paths[Row Count Output 11]"
                  endId="Package\Get and Upload Vendors\Partition 3\Trash Destination 1.Inputs[TrashDestinationInput]"
                  name="Row Count Output 1"
                  startId="Package\Get and Upload Vendors\Partition 3\Row Count Success.Outputs[Row Count Output 1]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Get and Upload Vendors\Partition 4"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{83a86ec8-2f2d-4f88-9bc2-1cf34a4ca3ab}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Partition 4"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:TransactionOption="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Get and Upload Vendors\Partition 4\AML"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Web API Destination; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                  description="The Web API destination can be used to send data to Web API URL (e.g. Submit or POST data to REST API/SOAP or other HTTP/HTTPS endpoints)"
                  name="AML"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                      expressionType="Notify"
                      name="LoggingMode"
                      typeConverter="ZappySys.PowerPack.Common.LoggingMode, ZappySys.PowerPack130, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                    <property
                      dataType="System.Boolean"
                      description="When you enable this property it will prefix timestamp before Log messages."
                      expressionType="Notify"
                      name="PrefixTimestamp">false</property>
                    <property
                      dataType="System.Null"
                      expressionType="Notify"
                      name="SelfRef"
                      typeConverter="NOTBROWSABLE" />
                    <property
                      dataType="System.String"
                      description="API URL you want to access"
                      expressionType="Notify"
                      name="HttpRequestUrl">{{User::PackageRosieURL}}</property>
                    <property
                      dataType="System.String"
                      description="Http Web Request Method (e.g. POST, GET, PUT, LIST, DELETE...). Refer your API documentation if you are not sure which method you have to use."
                      expressionType="Notify"
                      name="HttpRequestMethod">POST</property>
                    <property
                      dataType="System.String"
                      description="Set this if you want to set custom Http headers. You may use variable anywhere in the header value using syntax {{User::YourVarName}}. Syntax of Header key value pair is : &amp;lt;request&amp;gt;&amp;lt;header&amp;gt;&amp;lt;name&amp;gt;x-myheader-1&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;AAA&amp;lt;/value&amp;gt;&amp;lt;/header&amp;gt; &amp;lt;header&amp;gt;&amp;lt;name&amp;gt;x-myheader-2&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;BBB&amp;lt;/value&amp;gt;&amp;lt;/header&amp;gt;&amp;lt;/request&amp;gt;"
                      expressionType="Notify"
                      name="HttpHeaders"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">&lt;request&gt;&lt;header&gt;&lt;name&gt;Accept&lt;/name&gt;&lt;value&gt;*/*&lt;/value&gt;&lt;/header&gt;&lt;header&gt;&lt;name&gt;Cache-Control&lt;/name&gt;&lt;value&gt;no-cache&lt;/value&gt;&lt;/header&gt;&lt;/request&gt;</property>
                    <property
                      dataType="System.String"
                      description="User defined data you wish to send along with your HTTP Request (e.g. Upload file data, Form POST data). Usually you have to set content-type of your data but if you select RequestMethod=POST then system will automatically set content-type=application/x-www-form-urlencoded."
                      expressionType="Notify"
                      name="HttpRequestData"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies content type for data you wish to POST. If you select Default option then system default content type will be used (i.e. application/x-www-form-urlencoded). If you specify Content-Type header along with this option then header value takes precedence."
                      expressionType="Notify"
                      name="HttpRequestContentType"
                      typeConverter="ZappySys.Common.Web.HttpRequestContentType, ZappySys.Common, Version=1.0.2018.11017, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                    <property
                      dataType="System.Boolean"
                      description="If this option is true then component will continue without exception on 404 error (Url not found). This allows you to consume data gracefully."
                      expressionType="Notify"
                      name="ContinueOnUrlNotFoundError">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Ignore SSL certificate related errors. Example: if you getting SSL/TLS errors because of certificate expired or certificate is not from trusted authority or certificate is self-signed. By checking this option you will not get SSL/TLS error."
                      expressionType="Notify"
                      name="IgnoreCertificateErrors">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Allow unsecure ciphers/suites and curves for SSLS/TLS communication. Use this option to communicate with web servers which needs legacy / unsecured ciphers support. This option is only trigged when you change default SSL/TLS Version on advanced settings tab."
                      expressionType="Notify"
                      name="AllowUnsecureSuite">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Enable support for gzip or deflate compression. When you check this option compressed response automatically de-compressed saving bandwidth. This option is only valid if web server supports compressed response stream. Check your API documentation for more information."
                      expressionType="Notify"
                      name="EnableCompressionSupport">true</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies which security protocol is supported for HTTPS communication. Using this option you can enable legacy protocol or enforce to use latest version of security protocol (Note: TLS 1.2 is only supported in SSIS 2014 or Higher)."
                      expressionType="Notify"
                      name="SecurityProtocol"
                      typeConverter="ZappySys.PowerPack.Common.HttpsSecurityProtocolType, ZappySys.PowerPack130, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                    <property
                      dataType="System.Int32"
                      description="Wait time in milliseconds (Pause after each request). 0=No wait. Use this delay time if your API has limit on how many requests you can make in certain time frame."
                      expressionType="Notify"
                      name="WaitTime">0</property>
                    <property
                      dataType="System.Boolean"
                      description="When you redirect error to error output by default you get additional information in ErrorMessage column. Check this option if you need exact Response Body (Useful if its in JSON/XML format which needs to be parsed for additional information for later step)."
                      expressionType="Notify"
                      name="OnErrorOutputResponseBody">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Enable multiple requests using parallel threads."
                      expressionType="Notify"
                      name="EnableParallelRequests">true</property>
                    <property
                      dataType="System.Int32"
                      description="Maximum parallel threads to use for processing multiple web requests."
                      expressionType="Notify"
                      name="MaxParallelThreads">20</property>
                    <property
                      dataType="System.Boolean"
                      description="By default one request is sent for each input row. If your API supports multiple records in a single call via HTTP Body then enable this setting. See also BodyBatchSize, BodyHeader, BodyFooter and BodyRowSeparator property."
                      expressionType="Notify"
                      name="EnableBodyBatch">false</property>
                    <property
                      dataType="System.String"
                      description="When you have to wrap input content between opening and closing tags for each call then set this property to specify opening for body content. For Example if you want to build Body like this (send max 100 rows per call) ==&gt; { records : [ {...}, {...}, {...} ] } then you can set BatchSize=100, BodyHeader as &quot;{ records: [&quot; , BodyFooter as &quot;] }&quot; and BodyRowSeperator as comma {,}. This property is ignored if EnableBodyBatch=false."
                      expressionType="Notify"
                      name="BodyHeader"></property>
                    <property
                      dataType="System.String"
                      description="When you have to wrap input content between opening and closing tags for each call then set this property to specify closing for body content. For Example if you want to build Body like this (send max 100 rows per call) ==&gt; { records : [ {...}, {...}, {...} ] } then you can set BatchSize=100, BodyHeader as &quot;{ records: [&quot; , BodyFooter as &quot;] }&quot; and BodyRowSeperator as comma {,}. This property is ignored if EnableBodyBatch=false."
                      expressionType="Notify"
                      name="BodyFooter"></property>
                    <property
                      dataType="System.Int32"
                      description="If your API supports multiple records via HTTP Body then change this setting &gt; 1 to include multiple upstream records into single call. See also BodyHeader, BodyFooter and BodyRowSeparator property. This property is ignored if EnableBodyBatch=false."
                      expressionType="Notify"
                      name="BodyBatchSize">100</property>
                    <property
                      dataType="System.String"
                      description="When you submit multiple rows in a batch you can separate multiple documents / records using custom separator (e.g. in JSON Array you can use comma {,} as record separator if POST document is in array format [ {...}, {...}, {...} ] ). For last row of batch blank separator is used."
                      expressionType="Notify"
                      name="BodyRowSeparator"></property>
                    <property
                      dataType="System.Boolean"
                      description="Returns response data as binary data (e.g. Byte Array). Check this option is response is Zip file, Image file or any non text data which needs to be exported as raw data without any encoding."
                      expressionType="Notify"
                      name="TreatResponseAsBinary">false</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">ZappySys.WebApiDestination</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Get and Upload Vendors\Partition 4\AML.Connections[Connection]"
                      connectionManagerID="Package.ConnectionManagers[HTTP]"
                      connectionManagerRefId="Package.ConnectionManagers[HTTP]"
                      description="Connection manager for authentication (e.g. HTTP or OAuth Connection)"
                      name="Connection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Get and Upload Vendors\Partition 4\AML.Inputs[WebApiDestinationInput]"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="WebApiDestinationInput"
                      truncationRowDisposition="FailComponent">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Get and Upload Vendors\Partition 4\AML.Inputs[WebApiDestinationInput].Columns[DerivedAMLJSON]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="3000"
                          cachedName="DerivedAMLJSON"
                          externalMetadataColumnId="Package\Get and Upload Vendors\Partition 4\AML.Inputs[WebApiDestinationInput].ExternalColumns[HttpRequestData]"
                          lineageId="Package\Get and Upload Vendors\Partition 4\Replace Rid_contact and prop_ref.Outputs[Derived Column Output].Columns[DerivedAMLJSON]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 4\AML.Inputs[WebApiDestinationInput].ExternalColumns[HttpRequestUrl]"
                          dataType="wstr"
                          length="2000"
                          name="HttpRequestUrl" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 4\AML.Inputs[WebApiDestinationInput].ExternalColumns[HttpRequestData]"
                          dataType="nText"
                          name="HttpRequestData" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 4\AML.Outputs[WebApiDestination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="WebApiDestination Error Output"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 4\AML.Inputs[WebApiDestinationInput]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 4\AML.Outputs[WebApiDestination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 4\AML.Outputs[WebApiDestination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 4\AML.Outputs[WebApiDestination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 4\AML.Outputs[WebApiDestination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 4\AML.Outputs[WebApiDestination Error Output].Columns[ErrorColumnName]"
                          codePage="1252"
                          dataType="str"
                          length="128"
                          lineageId="Package\Get and Upload Vendors\Partition 4\AML.Outputs[WebApiDestination Error Output].Columns[ErrorColumnName]"
                          name="ErrorColumnName" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 4\AML.Outputs[WebApiDestination Error Output].Columns[ErrorMessage]"
                          dataType="nText"
                          lineageId="Package\Get and Upload Vendors\Partition 4\AML.Outputs[WebApiDestination Error Output].Columns[ErrorMessage]"
                          name="ErrorMessage" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 4\AML.Outputs[Response Output]"
                      exclusionGroup="1"
                      name="Response Output"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 4\AML.Inputs[WebApiDestinationInput]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 4\AML.Outputs[Response Output].Columns[ResponseText]"
                          dataType="nText"
                          lineageId="Package\Get and Upload Vendors\Partition 4\AML.Outputs[Response Output].Columns[ResponseText]"
                          name="ResponseText" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 4\AML.Outputs[Response Output].Columns[StatusCode]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 4\AML.Outputs[Response Output].Columns[StatusCode]"
                          name="StatusCode" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Get and Upload Vendors\Partition 4\Check Error 1"
                  componentClassID="Microsoft.ConditionalSplit"
                  contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
                  name="Check Error 1"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Get and Upload Vendors\Partition 4\Check Error 1.Inputs[Conditional Split Input]"
                      description="Input to the Conditional Split Transformation"
                      name="Conditional Split Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Check Error 1.Inputs[Conditional Split Input].Columns[error]"
                          cachedDataType="wstr"
                          cachedLength="1020"
                          cachedName="error"
                          lineageId="Package\Get and Upload Vendors\Partition 4\Get Results.Outputs[JsonParserTransformOutput].Columns[error]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 4\Check Error 1.Outputs[Error]"
                      description="Output 1 of the Conditional Split Transformation"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      exclusionGroup="1"
                      name="Error"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 4\Check Error 1.Inputs[Conditional Split Input]"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                          name="Expression">[REPLACENULL](#{Package\Get and Upload Vendors\Partition 4\Get Results.Outputs[JsonParserTransformOutput].Columns[error]},"") != ""</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the friendly version of the expression. This expression version uses column names."
                          expressionType="Notify"
                          name="FriendlyExpression">REPLACENULL(error,"") != ""</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                          name="EvaluationOrder">0</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 4\Check Error 1.Outputs[No Error]"
                      description="Output 2 of the Conditional Split Transformation"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      exclusionGroup="1"
                      name="No Error"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 4\Check Error 1.Inputs[Conditional Split Input]"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                          name="Expression">[REPLACENULL](#{Package\Get and Upload Vendors\Partition 4\Get Results.Outputs[JsonParserTransformOutput].Columns[error]},"") == ""</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the friendly version of the expression. This expression version uses column names."
                          expressionType="Notify"
                          name="FriendlyExpression">REPLACENULL(error,"") == ""</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                          name="EvaluationOrder">1</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 4\Check Error 1.Outputs[Conditional Split Default Output]"
                      description="Default Output of the Conditional Split Transformation"
                      exclusionGroup="1"
                      name="Conditional Split Default Output"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 4\Check Error 1.Inputs[Conditional Split Input]">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          name="IsDefaultOut">true</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 4\Check Error 1.Outputs[Conditional Split Error Output]"
                      description="Error Output of the Conditional Split Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Conditional Split Error Output"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 4\Check Error 1.Inputs[Conditional Split Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Check Error 1.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 4\Check Error 1.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Check Error 1.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 4\Check Error 1.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Get and Upload Vendors\Partition 4\Conditional Split"
                  componentClassID="Microsoft.ConditionalSplit"
                  contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
                  name="Conditional Split"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Get and Upload Vendors\Partition 4\Conditional Split.Inputs[Conditional Split Input]"
                      description="Input to the Conditional Split Transformation"
                      name="Conditional Split Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Conditional Split.Inputs[Conditional Split Input].Columns[AMLCheck]"
                          cachedDataType="i4"
                          cachedName="AMLCheck"
                          lineageId="Package\Get and Upload Vendors\Partition 4\Lookup.Outputs[Lookup Match Output].Columns[AMLCheck]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 4\Conditional Split.Outputs[Need To Flag AML]"
                      description="Output 1 of the Conditional Split Transformation"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      exclusionGroup="1"
                      name="Need To Flag AML"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 4\Conditional Split.Inputs[Conditional Split Input]"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                          name="Expression">#{Package\Get and Upload Vendors\Partition 4\Lookup.Outputs[Lookup Match Output].Columns[AMLCheck]} == 1</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the friendly version of the expression. This expression version uses column names."
                          expressionType="Notify"
                          name="FriendlyExpression">AMLCheck == 1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                          name="EvaluationOrder">0</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 4\Conditional Split.Outputs[Do nothing]"
                      description="Output 2 of the Conditional Split Transformation"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      exclusionGroup="1"
                      name="Do nothing"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 4\Conditional Split.Inputs[Conditional Split Input]"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                          name="Expression">#{Package\Get and Upload Vendors\Partition 4\Lookup.Outputs[Lookup Match Output].Columns[AMLCheck]} == 0</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the friendly version of the expression. This expression version uses column names."
                          expressionType="Notify"
                          name="FriendlyExpression">AMLCheck == 0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                          name="EvaluationOrder">1</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 4\Conditional Split.Outputs[Conditional Split Default Output]"
                      description="Default Output of the Conditional Split Transformation"
                      exclusionGroup="1"
                      name="Conditional Split Default Output"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 4\Conditional Split.Inputs[Conditional Split Input]">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          name="IsDefaultOut">true</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 4\Conditional Split.Outputs[Conditional Split Error Output]"
                      description="Error Output of the Conditional Split Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Conditional Split Error Output"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 4\Conditional Split.Inputs[Conditional Split Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 4\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 4\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Get and Upload Vendors\Partition 4\Create Contact"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Web API Destination; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                  description="The Web API destination can be used to send data to Web API URL (e.g. Submit or POST data to REST API/SOAP or other HTTP/HTTPS endpoints)"
                  name="Create Contact"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                      expressionType="Notify"
                      name="LoggingMode"
                      typeConverter="ZappySys.PowerPack.Common.LoggingMode, ZappySys.PowerPack130, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                    <property
                      dataType="System.Boolean"
                      description="When you enable this property it will prefix timestamp before Log messages."
                      expressionType="Notify"
                      name="PrefixTimestamp">false</property>
                    <property
                      dataType="System.Null"
                      expressionType="Notify"
                      name="SelfRef"
                      typeConverter="NOTBROWSABLE" />
                    <property
                      dataType="System.String"
                      description="API URL you want to access"
                      expressionType="Notify"
                      name="HttpRequestUrl">{{User::PackageRosieURL}}</property>
                    <property
                      dataType="System.String"
                      description="Http Web Request Method (e.g. POST, GET, PUT, LIST, DELETE...). Refer your API documentation if you are not sure which method you have to use."
                      expressionType="Notify"
                      name="HttpRequestMethod">POST</property>
                    <property
                      dataType="System.String"
                      description="Set this if you want to set custom Http headers. You may use variable anywhere in the header value using syntax {{User::YourVarName}}. Syntax of Header key value pair is : &amp;lt;request&amp;gt;&amp;lt;header&amp;gt;&amp;lt;name&amp;gt;x-myheader-1&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;AAA&amp;lt;/value&amp;gt;&amp;lt;/header&amp;gt; &amp;lt;header&amp;gt;&amp;lt;name&amp;gt;x-myheader-2&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;BBB&amp;lt;/value&amp;gt;&amp;lt;/header&amp;gt;&amp;lt;/request&amp;gt;"
                      expressionType="Notify"
                      name="HttpHeaders"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">&lt;request&gt;&lt;header&gt;&lt;name&gt;Accept&lt;/name&gt;&lt;value&gt;*/*&lt;/value&gt;&lt;/header&gt;&lt;header&gt;&lt;name&gt;Cache-Control&lt;/name&gt;&lt;value&gt;no-cache&lt;/value&gt;&lt;/header&gt;&lt;/request&gt;</property>
                    <property
                      dataType="System.String"
                      description="User defined data you wish to send along with your HTTP Request (e.g. Upload file data, Form POST data). Usually you have to set content-type of your data but if you select RequestMethod=POST then system will automatically set content-type=application/x-www-form-urlencoded."
                      expressionType="Notify"
                      name="HttpRequestData"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies content type for data you wish to POST. If you select Default option then system default content type will be used (i.e. application/x-www-form-urlencoded). If you specify Content-Type header along with this option then header value takes precedence."
                      expressionType="Notify"
                      name="HttpRequestContentType"
                      typeConverter="ZappySys.Common.Web.HttpRequestContentType, ZappySys.Common, Version=1.0.2018.11017, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                    <property
                      dataType="System.Boolean"
                      description="If this option is true then component will continue without exception on 404 error (Url not found). This allows you to consume data gracefully."
                      expressionType="Notify"
                      name="ContinueOnUrlNotFoundError">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Ignore SSL certificate related errors. Example: if you getting SSL/TLS errors because of certificate expired or certificate is not from trusted authority or certificate is self-signed. By checking this option you will not get SSL/TLS error."
                      expressionType="Notify"
                      name="IgnoreCertificateErrors">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Allow unsecure ciphers/suites and curves for SSLS/TLS communication. Use this option to communicate with web servers which needs legacy / unsecured ciphers support. This option is only trigged when you change default SSL/TLS Version on advanced settings tab."
                      expressionType="Notify"
                      name="AllowUnsecureSuite">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Enable support for gzip or deflate compression. When you check this option compressed response automatically de-compressed saving bandwidth. This option is only valid if web server supports compressed response stream. Check your API documentation for more information."
                      expressionType="Notify"
                      name="EnableCompressionSupport">true</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies which security protocol is supported for HTTPS communication. Using this option you can enable legacy protocol or enforce to use latest version of security protocol (Note: TLS 1.2 is only supported in SSIS 2014 or Higher)."
                      expressionType="Notify"
                      name="SecurityProtocol"
                      typeConverter="ZappySys.PowerPack.Common.HttpsSecurityProtocolType, ZappySys.PowerPack130, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                    <property
                      dataType="System.Int32"
                      description="Wait time in milliseconds (Pause after each request). 0=No wait. Use this delay time if your API has limit on how many requests you can make in certain time frame."
                      expressionType="Notify"
                      name="WaitTime">0</property>
                    <property
                      dataType="System.Boolean"
                      description="When you redirect error to error output by default you get additional information in ErrorMessage column. Check this option if you need exact Response Body (Useful if its in JSON/XML format which needs to be parsed for additional information for later step)."
                      expressionType="Notify"
                      name="OnErrorOutputResponseBody">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Enable multiple requests using parallel threads."
                      expressionType="Notify"
                      name="EnableParallelRequests">true</property>
                    <property
                      dataType="System.Int32"
                      description="Maximum parallel threads to use for processing multiple web requests."
                      expressionType="Notify"
                      name="MaxParallelThreads">20</property>
                    <property
                      dataType="System.Boolean"
                      description="By default one request is sent for each input row. If your API supports multiple records in a single call via HTTP Body then enable this setting. See also BodyBatchSize, BodyHeader, BodyFooter and BodyRowSeparator property."
                      expressionType="Notify"
                      name="EnableBodyBatch">false</property>
                    <property
                      dataType="System.String"
                      description="When you have to wrap input content between opening and closing tags for each call then set this property to specify opening for body content. For Example if you want to build Body like this (send max 100 rows per call) ==&gt; { records : [ {...}, {...}, {...} ] } then you can set BatchSize=100, BodyHeader as &quot;{ records: [&quot; , BodyFooter as &quot;] }&quot; and BodyRowSeperator as comma {,}. This property is ignored if EnableBodyBatch=false."
                      expressionType="Notify"
                      name="BodyHeader"></property>
                    <property
                      dataType="System.String"
                      description="When you have to wrap input content between opening and closing tags for each call then set this property to specify closing for body content. For Example if you want to build Body like this (send max 100 rows per call) ==&gt; { records : [ {...}, {...}, {...} ] } then you can set BatchSize=100, BodyHeader as &quot;{ records: [&quot; , BodyFooter as &quot;] }&quot; and BodyRowSeperator as comma {,}. This property is ignored if EnableBodyBatch=false."
                      expressionType="Notify"
                      name="BodyFooter"></property>
                    <property
                      dataType="System.Int32"
                      description="If your API supports multiple records via HTTP Body then change this setting &gt; 1 to include multiple upstream records into single call. See also BodyHeader, BodyFooter and BodyRowSeparator property. This property is ignored if EnableBodyBatch=false."
                      expressionType="Notify"
                      name="BodyBatchSize">100</property>
                    <property
                      dataType="System.String"
                      description="When you submit multiple rows in a batch you can separate multiple documents / records using custom separator (e.g. in JSON Array you can use comma {,} as record separator if POST document is in array format [ {...}, {...}, {...} ] ). For last row of batch blank separator is used."
                      expressionType="Notify"
                      name="BodyRowSeparator"></property>
                    <property
                      dataType="System.Boolean"
                      description="Returns response data as binary data (e.g. Byte Array). Check this option is response is Zip file, Image file or any non text data which needs to be exported as raw data without any encoding."
                      expressionType="Notify"
                      name="TreatResponseAsBinary">false</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">ZappySys.WebApiDestination</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Get and Upload Vendors\Partition 4\Create Contact.Connections[Connection]"
                      connectionManagerID="Package.ConnectionManagers[HTTP]"
                      connectionManagerRefId="Package.ConnectionManagers[HTTP]"
                      description="Connection manager for authentication (e.g. HTTP or OAuth Connection)"
                      name="Connection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Get and Upload Vendors\Partition 4\Create Contact.Inputs[WebApiDestinationInput]"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="WebApiDestinationInput"
                      truncationRowDisposition="FailComponent">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Create Contact.Inputs[WebApiDestinationInput].Columns[DerivedVendorJSON]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="3000"
                          cachedName="DerivedVendorJSON"
                          externalMetadataColumnId="Package\Get and Upload Vendors\Partition 4\Create Contact.Inputs[WebApiDestinationInput].ExternalColumns[HttpRequestData]"
                          lineageId="Package\Get and Upload Vendors\Partition 4\Replace Token.Outputs[Derived Column Output].Columns[DerivedVendorJSON]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Create Contact.Inputs[WebApiDestinationInput].ExternalColumns[HttpRequestUrl]"
                          dataType="wstr"
                          length="2000"
                          name="HttpRequestUrl" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Create Contact.Inputs[WebApiDestinationInput].ExternalColumns[HttpRequestData]"
                          dataType="nText"
                          name="HttpRequestData" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 4\Create Contact.Outputs[WebApiDestination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="WebApiDestination Error Output"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 4\Create Contact.Inputs[WebApiDestinationInput]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Create Contact.Outputs[WebApiDestination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 4\Create Contact.Outputs[WebApiDestination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Create Contact.Outputs[WebApiDestination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 4\Create Contact.Outputs[WebApiDestination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Create Contact.Outputs[WebApiDestination Error Output].Columns[ErrorColumnName]"
                          codePage="1252"
                          dataType="str"
                          length="128"
                          lineageId="Package\Get and Upload Vendors\Partition 4\Create Contact.Outputs[WebApiDestination Error Output].Columns[ErrorColumnName]"
                          name="ErrorColumnName" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Create Contact.Outputs[WebApiDestination Error Output].Columns[ErrorMessage]"
                          dataType="nText"
                          lineageId="Package\Get and Upload Vendors\Partition 4\Create Contact.Outputs[WebApiDestination Error Output].Columns[ErrorMessage]"
                          name="ErrorMessage" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 4\Create Contact.Outputs[Response Output]"
                      exclusionGroup="1"
                      name="Response Output"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 4\Create Contact.Inputs[WebApiDestinationInput]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Create Contact.Outputs[Response Output].Columns[ResponseText]"
                          dataType="nText"
                          lineageId="Package\Get and Upload Vendors\Partition 4\Create Contact.Outputs[Response Output].Columns[ResponseText]"
                          name="ResponseText" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Create Contact.Outputs[Response Output].Columns[StatusCode]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 4\Create Contact.Outputs[Response Output].Columns[StatusCode]"
                          name="StatusCode" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Get and Upload Vendors\Partition 4\Get Results"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="JSON Parser Transform; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                  description="Parse incoming JSON String into columns. You can also parse and transform single JSON record into multiple rows by filtering data based on JSON Path (e.g. $.Customer.Orders[*])"
                  name="Get Results"
                  usesDispositions="true"
                  version="2">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                      expressionType="Notify"
                      name="LoggingMode"
                      typeConverter="ZappySys.PowerPack.Common.LoggingMode, ZappySys.PowerPack130, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                    <property
                      dataType="System.Boolean"
                      description="When you enable this property it will prefix timestamp before Log messages."
                      expressionType="Notify"
                      name="PrefixTimestamp">false</property>
                    <property
                      dataType="System.Null"
                      expressionType="Notify"
                      name="SelfRef"
                      typeConverter="NOTBROWSABLE" />
                    <property
                      dataType="System.Boolean"
                      description="Treat empty string as NULL for any numeric data types"
                      expressionType="Notify"
                      name="TreatBlankNumberAsNull">true</property>
                    <property
                      dataType="System.Boolean"
                      description="Treat empty string as NULL for bool data types"
                      expressionType="Notify"
                      name="TreatBlankBoolAsNull">true</property>
                    <property
                      dataType="System.Boolean"
                      description="Treat empty string as NULL for any date/time data types"
                      expressionType="Notify"
                      name="TreatBlankDateAsNull">true</property>
                    <property
                      dataType="System.String"
                      description="Sample JSON data used to parse output columns."
                      expressionType="Notify"
                      name="SampleData"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">{
    "result": {
        "system_record_state": "active",
        "system_ctime": 1551864889,
        "system_modtime": 1551864889,
        "system_search_key": "Jeff test",
        "address": "1",
        "address_postal": null,
        "marketing_postcode": "ss142rq",
        "marketing_enquiry_source": null,
        "marketing_gender": null,
        "marketing_birthday": null,
        "notes": null,
        "company_name": "Jeff test",
        "company_abn": null,
        "website_url": null,
        "is_dnd": null,
        "type": "company",
        "interest_level": null,
        "last_contacted_date": null,
        "name_legal": null,
        "name_salutation": null,
        "name_addressee": null,
        "last_contacted_at": null,
        "_id": 216403,
        "etag": "216403-1551864889",
        "system_owner_user": {
            "id": "19443",
            "_name": "Rosie API",
            "_first_name": "Rosie",
            "_last_name": "API",
            "_email_address": "rosie@spicerhaart.co.uk"
        },
        "system_modified_user": {
            "id": "19443",
            "_name": "Rosie API",
            "_first_name": "Rosie",
            "_last_name": "API",
            "_email_address": "rosie@spicerhaart.co.uk"
        },
        "system_created_user": {
            "id": "19443",
            "_name": "Rosie API",
            "_first_name": "Rosie",
            "_last_name": "API",
            "_email_address": "rosie@spicerhaart.co.uk"
        },
        "contact_image": null,
        "company_size": null,
        "marketing_enquiry_method": null,
        "_related": {
            "contact_emails": [
                {
                    "email_desc": "default",
                    "email_address": "MasterDave.Davidson@anemail.com",
                    "email_primary": true,
                    "email_secondary": null,
                    "is_invalid": null,
                    "_id": 147984
                }
            ],
            "contact_phones": [
                {
                    "phone_type": "default",
                    "phone_number": "09876543210",
                    "phone_primary": true,
                    "phone_primary_sms": null,
                    "is_invalid": null,
                    "system_e164_phone_number": "+449876543210",
                    "_id": 243549,
                    "wash": {
                        "present_on_lists": [],
                        "user_override": null,
                        "allow": true
                    }
                }
            ],
            "contact_tags": [],
            "contact_documents": [],
            "contact_mailing_lists": [],
            "contact_relationships": [],
            "contact_reln_property": [],
            "contact_reln_listing": []
        },
        "address_wash": {
            "present_on_lists": [],
            "user_override": null,
            "allow": true
        },
        "address_postal_wash": null,
        "smart_categories": false,
        "_security_user_rights": [
            "read",
            "update",
            "archive",
            "trash",
            "perms"
        ]
    },
    "error": null
}</property>
                    <property
                      dataType="System.Boolean"
                      description="Include all upstream parent columns into output except the one you selected to parse. By default only parsed columns from Input document is included in the output. If you wish to include all other upstream columns in the output too then check this option."
                      expressionType="Notify"
                      name="OutputAllUpstreamColumns">false</property>
                    <property
                      dataType="System.Int32"
                      description="Maximum JSON records to fetch. Set this value to 0 for all records"
                      expressionType="Notify"
                      name="MaxRows">0</property>
                    <property
                      dataType="System.String"
                      description="Enter expression here to filter data.(Example:  $.Users[*].UserName ) This will fetch User names from users records"
                      expressionType="Notify"
                      name="Filter"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.Boolean"
                      description="Use this option to include parent properties (Non array) in the output along with Filtered Rows"
                      expressionType="Notify"
                      name="IncludeParentColumns">true</property>
                    <property
                      dataType="System.Boolean"
                      description="By default child and parent information is not included in the output if children not found for specified expression. For example if you want to extract all orders from all customers nodes then you can type $.Customers[*].Orders[*]. This will fetch all orders from all customers. By default customers records without orders wont be included in the output. If you want to include those customers where orders not found then check this option (Output null information for order attributes). This behavior is similar to LEFT OUTER JOIN in SQL (Left side is parent, right side is child). This option is ***resource intensive*** so only check if you really care about this behavior."
                      expressionType="Notify"
                      name="IncludeParentColumnsWhenChildMissing">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Set this option to true if you want to output parent columns which are array. By default any parent column which is an array is not included in output. See also FilterForParentColumnsWithArrayType property if you set this property"
                      expressionType="Notify"
                      name="IncludeParentColumnsWithArrayType">false</property>
                    <property
                      dataType="System.String"
                      description="Filter expression to extract value form parent"
                      expressionType="Notify"
                      name="FilterForParentColumnsWithArrayType"></property>
                    <property
                      dataType="System.String"
                      description="Prefix for parent column name. This option is only valid if you have set IncludeParentColumns=True"
                      expressionType="Notify"
                      name="ParentColumnPrefix">P_</property>
                    <property
                      dataType="System.Boolean"
                      description="Throw error if property name specified in filter expression is missing. By default it will ignore any missing property errors."
                      expressionType="Notify"
                      name="ThrowErrorIfPropertyMissing">false</property>
                    <property
                      dataType="System.Int32"
                      description="This property how many nested levels should be scanned to fetch various properties. 0=Scan all child levels."
                      expressionType="Notify"
                      name="MaxLevelsToScan">0</property>
                    <property
                      dataType="System.String"
                      description="List comma separated property names from JSON document which you want to exclude from output. Specify parent property name to exclude all child nodes."
                      expressionType="Notify"
                      name="ExcludedProperties"></property>
                    <property
                      dataType="System.String"
                      description="Property level separator used in generated property name (separator for outer properties - Above selected filter node). Use this if default separator is producing duplicate property name which is conflicting with existing name."
                      expressionType="Notify"
                      name="LevelSeparator">_</property>
                    <property
                      dataType="System.Boolean"
                      description="Enables deep array flattening for selected filtered hierarchy. When you turn on this property it will flatten each property of each array item and expose as column (e.g. If you have Filter set as $.customers[*] and for each customer you have an array of Addresses then you may see output columns like Addresses.1.City, Addresses.1.State, Addresses.2.City, Addresses.2.State .... Addresses.N.City, Addresses.N.State). You can control how many array items you want to flatten by setting MaxArrayItemsToFlatten property."
                      expressionType="Notify"
                      name="EnableArrayFlattening">false</property>
                    <property
                      dataType="System.Int32"
                      description="Maximum number of array items to flatten. inner array flattening. Adjust this property to control how many columns being generated. This option is ignored if you set EnableArrayFlattening=false"
                      expressionType="Notify"
                      name="MaxArrayItemsToFlatten">10</property>
                    <property
                      dataType="System.String"
                      description="Specifies how custom date formatted strings are parsed when reading JSON."
                      expressionType="Notify"
                      name="DateFormatString"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies how date formatted strings, e.g. Date(1198908717056) and 2012-03-21T05:40Z, are parsed when reading JSON."
                      expressionType="Notify"
                      name="DateParseHandling"
                      typeConverter="ZappySys.Common.DateParseHandling, ZappySys.Common, Version=1.0.2018.11017, Culture=neutral, PublicKeyToken=1903265a93eae502">1</property>
                    <property
                      dataType="System.Boolean"
                      description="Output as raw JSON document rather than parsing individual fields. This option is helpful if you have documents stored in a file and you want to pass them downstream as raw JSON string rather than parsing into columns."
                      expressionType="Notify"
                      name="OutputRawDocument">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indent JSON output so its easy to read."
                      expressionType="Notify"
                      name="IndentOutput">false</property>
                    <property
                      dataType="System.Boolean"
                      description="When this property is true then Column is converted to Row. Pivoted names will appear under  Pivot_Name column and values will appear under Pivot_Value field."
                      expressionType="Notify"
                      name="EnablePivot">false</property>
                    <property
                      dataType="System.Int32"
                      description="Array Transformation you want to apply. Useful for case when you have 2-Dimensional arrays with rows/columns in separate arrays."
                      expressionType="Notify"
                      name="ArrayTransformationType"
                      typeConverter="ZappySys.Json.ArrayTransformType, ZappySys.Json, Version=1.0.2018.11017, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                    <property
                      dataType="System.String"
                      description="Filter expression to use to extract column names for array transformation."
                      expressionType="Notify"
                      name="ArrayTransColumnNameFilter"></property>
                    <property
                      dataType="System.String"
                      description="Filter expression for row values (Not applicable for simple array transformation)."
                      expressionType="Notify"
                      name="ArrayTransRowValueFilter"></property>
                    <property
                      dataType="System.Boolean"
                      description="When you have 2D array but don't have column list specified in a separate array then use this option (e.g. { arr: [[10,11],[21,22]] } )."
                      expressionType="Notify"
                      name="ArrayTransEnableCustomColumns">false</property>
                    <property
                      dataType="System.String"
                      description="When you have 2D array but don't have column list specified in a separate array then use specify column names here. Use comma separated list (e.g col1,col2,col3 ). Column name Order must match value order."
                      expressionType="Notify"
                      name="ArrayTransCustomColumns"></property>
                    <property
                      dataType="System.Int32"
                      description="Metadata scan mode controls how data type and length is determined. By default few records scanned to determine datatype/length. Changing ScanMode affects length/datatype accuracy."
                      expressionType="Notify"
                      name="MetaDataScanMode"
                      typeConverter="ZappySys.Common.Data.MetaDataScanMode, ZappySys.Common, Version=1.0.2018.11017, Culture=neutral, PublicKeyToken=1903265a93eae502">4</property>
                    <property
                      dataType="System.Int32"
                      description="Length for all string column. This option is only valid for MetaDataScanMode=Custom"
                      expressionType="Notify"
                      name="MetaDataCustomLength">1000</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">ZappySys.JsonParserTransform</property>
                    <property
                      dataType="System.Int32"
                      name="EmptyInputProcessingMode">0</property>
                    <property
                      dataType="System.String"
                      name="TreatEmptyInputAs">{ }</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Get and Upload Vendors\Partition 4\Get Results.Inputs[JsonParserTransformInput]"
                      errorRowDisposition="FailComponent"
                      name="JsonParserTransformInput"
                      truncationRowDisposition="FailComponent">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Get Results.Inputs[JsonParserTransformInput].Columns[ResponseText]"
                          cachedDataType="nText"
                          cachedName="ResponseText"
                          lineageId="Package\Get and Upload Vendors\Partition 4\Create Contact.Outputs[Response Output].Columns[ResponseText]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True" />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 4\Get Results.Outputs[JsonParserTransformOutput]"
                      errorOrTruncationOperation="Error"
                      errorRowDisposition="FailComponent"
                      name="JsonParserTransformOutput"
                      truncationRowDisposition="FailComponent">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Get Results.Outputs[JsonParserTransformOutput].Columns[result.notes]"
                          dataType="wstr"
                          externalMetadataColumnId="Package\Get and Upload Vendors\Partition 4\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.notes]"
                          length="1020"
                          lineageId="Package\Get and Upload Vendors\Partition 4\Get Results.Outputs[JsonParserTransformOutput].Columns[result.notes]"
                          name="result.notes" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Get Results.Outputs[JsonParserTransformOutput].Columns[result._id]"
                          dataType="i8"
                          externalMetadataColumnId="Package\Get and Upload Vendors\Partition 4\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result._id]"
                          lineageId="Package\Get and Upload Vendors\Partition 4\Get Results.Outputs[JsonParserTransformOutput].Columns[result._id]"
                          name="result._id" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Get Results.Outputs[JsonParserTransformOutput].Columns[result.etag]"
                          dataType="wstr"
                          externalMetadataColumnId="Package\Get and Upload Vendors\Partition 4\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.etag]"
                          length="68"
                          lineageId="Package\Get and Upload Vendors\Partition 4\Get Results.Outputs[JsonParserTransformOutput].Columns[result.etag]"
                          name="result.etag" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Get Results.Outputs[JsonParserTransformOutput].Columns[error]"
                          dataType="wstr"
                          externalMetadataColumnId="Package\Get and Upload Vendors\Partition 4\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[error]"
                          length="1020"
                          lineageId="Package\Get and Upload Vendors\Partition 4\Get Results.Outputs[JsonParserTransformOutput].Columns[error]"
                          name="error" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.system_record_state]"
                          dataType="wstr"
                          length="24"
                          name="result.system_record_state" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.system_ctime]"
                          dataType="i8"
                          name="result.system_ctime" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.system_modtime]"
                          dataType="i8"
                          name="result.system_modtime" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.system_search_key]"
                          dataType="wstr"
                          length="36"
                          name="result.system_search_key" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.address]"
                          dataType="wstr"
                          length="4"
                          name="result.address" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.address_postal]"
                          dataType="wstr"
                          length="1020"
                          name="result.address_postal" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.marketing_postcode]"
                          dataType="wstr"
                          length="28"
                          name="result.marketing_postcode" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.marketing_enquiry_source]"
                          dataType="wstr"
                          length="1020"
                          name="result.marketing_enquiry_source" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.marketing_gender]"
                          dataType="wstr"
                          length="1020"
                          name="result.marketing_gender" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.marketing_birthday]"
                          dataType="wstr"
                          length="1020"
                          name="result.marketing_birthday" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.notes]"
                          dataType="wstr"
                          length="1020"
                          name="result.notes" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.company_name]"
                          dataType="wstr"
                          length="36"
                          name="result.company_name" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.company_abn]"
                          dataType="wstr"
                          length="1020"
                          name="result.company_abn" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.website_url]"
                          dataType="wstr"
                          length="1020"
                          name="result.website_url" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.is_dnd]"
                          dataType="wstr"
                          length="1020"
                          name="result.is_dnd" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.type]"
                          dataType="wstr"
                          length="28"
                          name="result.type" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.interest_level]"
                          dataType="wstr"
                          length="1020"
                          name="result.interest_level" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.last_contacted_date]"
                          dataType="wstr"
                          length="1020"
                          name="result.last_contacted_date" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.name_legal]"
                          dataType="wstr"
                          length="1020"
                          name="result.name_legal" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.name_salutation]"
                          dataType="wstr"
                          length="1020"
                          name="result.name_salutation" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.name_addressee]"
                          dataType="wstr"
                          length="1020"
                          name="result.name_addressee" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.last_contacted_at]"
                          dataType="wstr"
                          length="1020"
                          name="result.last_contacted_at" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result._id]"
                          dataType="i8"
                          name="result._id" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.etag]"
                          dataType="wstr"
                          length="68"
                          name="result.etag" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.system_owner_user.id]"
                          dataType="wstr"
                          length="20"
                          name="result.system_owner_user.id" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.system_owner_user._name]"
                          dataType="wstr"
                          length="36"
                          name="result.system_owner_user._name" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.system_owner_user._first_name]"
                          dataType="wstr"
                          length="20"
                          name="result.system_owner_user._first_name" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.system_owner_user._last_name]"
                          dataType="wstr"
                          length="12"
                          name="result.system_owner_user._last_name" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.system_owner_user._email_address]"
                          dataType="wstr"
                          length="92"
                          name="result.system_owner_user._email_address" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.system_modified_user.id]"
                          dataType="wstr"
                          length="20"
                          name="result.system_modified_user.id" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.system_modified_user._name]"
                          dataType="wstr"
                          length="36"
                          name="result.system_modified_user._name" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.system_modified_user._first_name]"
                          dataType="wstr"
                          length="20"
                          name="result.system_modified_user._first_name" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.system_modified_user._last_name]"
                          dataType="wstr"
                          length="12"
                          name="result.system_modified_user._last_name" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.system_modified_user._email_address]"
                          dataType="wstr"
                          length="92"
                          name="result.system_modified_user._email_address" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.system_created_user.id]"
                          dataType="wstr"
                          length="20"
                          name="result.system_created_user.id" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.system_created_user._name]"
                          dataType="wstr"
                          length="36"
                          name="result.system_created_user._name" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.system_created_user._first_name]"
                          dataType="wstr"
                          length="20"
                          name="result.system_created_user._first_name" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.system_created_user._last_name]"
                          dataType="wstr"
                          length="12"
                          name="result.system_created_user._last_name" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.system_created_user._email_address]"
                          dataType="wstr"
                          length="92"
                          name="result.system_created_user._email_address" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.contact_image]"
                          dataType="wstr"
                          length="1020"
                          name="result.contact_image" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.company_size]"
                          dataType="wstr"
                          length="1020"
                          name="result.company_size" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.marketing_enquiry_method]"
                          dataType="wstr"
                          length="1020"
                          name="result.marketing_enquiry_method" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result._related.contact_emails]"
                          dataType="wstr"
                          length="812"
                          name="result._related.contact_emails" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result._related.contact_phones]"
                          dataType="wstr"
                          length="1356"
                          name="result._related.contact_phones" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result._related.contact_tags]"
                          dataType="wstr"
                          length="8"
                          name="result._related.contact_tags" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result._related.contact_documents]"
                          dataType="wstr"
                          length="8"
                          name="result._related.contact_documents" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result._related.contact_mailing_lists]"
                          dataType="wstr"
                          length="8"
                          name="result._related.contact_mailing_lists" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result._related.contact_relationships]"
                          dataType="wstr"
                          length="8"
                          name="result._related.contact_relationships" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result._related.contact_reln_property]"
                          dataType="wstr"
                          length="8"
                          name="result._related.contact_reln_property" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result._related.contact_reln_listing]"
                          dataType="wstr"
                          length="8"
                          name="result._related.contact_reln_listing" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.address_wash.present_on_lists]"
                          dataType="wstr"
                          length="8"
                          name="result.address_wash.present_on_lists" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.address_wash.user_override]"
                          dataType="wstr"
                          length="1020"
                          name="result.address_wash.user_override" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.address_wash.allow]"
                          dataType="bool"
                          name="result.address_wash.allow" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.address_postal_wash]"
                          dataType="wstr"
                          length="1020"
                          name="result.address_postal_wash" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.smart_categories]"
                          dataType="bool"
                          name="result.smart_categories" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result._security_user_rights]"
                          dataType="wstr"
                          length="260"
                          name="result._security_user_rights" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[error]"
                          dataType="wstr"
                          length="1020"
                          name="error" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 4\Get Results.Outputs[JsonParserTransform Error Output]"
                      isErrorOut="true"
                      name="JsonParserTransform Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Get Results.Outputs[JsonParserTransform Error Output].Columns[result.notes]"
                          dataType="wstr"
                          length="1020"
                          lineageId="Package\Get and Upload Vendors\Partition 4\Get Results.Outputs[JsonParserTransform Error Output].Columns[result.notes]"
                          name="result.notes" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Get Results.Outputs[JsonParserTransform Error Output].Columns[result._id]"
                          dataType="i8"
                          lineageId="Package\Get and Upload Vendors\Partition 4\Get Results.Outputs[JsonParserTransform Error Output].Columns[result._id]"
                          name="result._id" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Get Results.Outputs[JsonParserTransform Error Output].Columns[result.etag]"
                          dataType="wstr"
                          length="68"
                          lineageId="Package\Get and Upload Vendors\Partition 4\Get Results.Outputs[JsonParserTransform Error Output].Columns[result.etag]"
                          name="result.etag" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Get Results.Outputs[JsonParserTransform Error Output].Columns[error]"
                          dataType="wstr"
                          length="1020"
                          lineageId="Package\Get and Upload Vendors\Partition 4\Get Results.Outputs[JsonParserTransform Error Output].Columns[error]"
                          name="error" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Get Results.Outputs[JsonParserTransform Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 4\Get Results.Outputs[JsonParserTransform Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Get Results.Outputs[JsonParserTransform Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 4\Get Results.Outputs[JsonParserTransform Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Get Results.Outputs[JsonParserTransform Error Output].Columns[ErrorColumnName]"
                          codePage="1252"
                          dataType="str"
                          length="128"
                          lineageId="Package\Get and Upload Vendors\Partition 4\Get Results.Outputs[JsonParserTransform Error Output].Columns[ErrorColumnName]"
                          name="ErrorColumnName" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Get Results.Outputs[JsonParserTransform Error Output].Columns[ErrorMessage]"
                          dataType="wstr"
                          length="1024"
                          lineageId="Package\Get and Upload Vendors\Partition 4\Get Results.Outputs[JsonParserTransform Error Output].Columns[ErrorMessage]"
                          name="ErrorMessage" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Get Results.Outputs[JsonParserTransform Error Output].Columns[ErrorRawData]"
                          dataType="nText"
                          lineageId="Package\Get and Upload Vendors\Partition 4\Get Results.Outputs[JsonParserTransform Error Output].Columns[ErrorRawData]"
                          name="ErrorRawData" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Get and Upload Vendors\Partition 4\Get Vendors List"
                  componentClassID="Microsoft.OLEDBSource"
                  contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                  description="OLE DB Source"
                  name="Get Vendors List"
                  usesDispositions="true"
                  version="7">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset"></property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">SELECT * FROM ROSIE_ContactPush_staging WITH (NOLOCK) WHERE office_id = ? and entitytype = 1 and partition = 4</property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">2</property>
                    <property
                      dataType="System.String"
                      description="The mappings between the parameters in the SQL command and variables."
                      name="ParameterMapping">"@office_id:Input",{F3CDF2B4-5AA9-4436-972D-BB303A4202B3};</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Get and Upload Vendors\Partition 4\Get Vendors List.Connections[OleDbConnection]"
                      connectionManagerID="{78432CA1-1FEA-4ED4-9C0F-D552A4A9DE0E}:external"
                      connectionManagerRefId="Project.ConnectionManagers[InternetDB]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 4\Get Vendors List.Outputs[OLE DB Source Output]"
                      name="OLE DB Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Get Vendors List.Outputs[OLE DB Source Output].Columns[CustJSON]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Get and Upload Vendors\Partition 4\Get Vendors List.Outputs[OLE DB Source Output].ExternalColumns[CustJSON]"
                          length="3000"
                          lineageId="Package\Get and Upload Vendors\Partition 4\Get Vendors List.Outputs[OLE DB Source Output].Columns[CustJSON]"
                          name="CustJSON"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Get Vendors List.Outputs[OLE DB Source Output].Columns[AMLCheck]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Get and Upload Vendors\Partition 4\Get Vendors List.Outputs[OLE DB Source Output].ExternalColumns[AMLCheck]"
                          lineageId="Package\Get and Upload Vendors\Partition 4\Get Vendors List.Outputs[OLE DB Source Output].Columns[AMLCheck]"
                          name="AMLCheck"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Get Vendors List.Outputs[OLE DB Source Output].Columns[AMLJSON]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Get and Upload Vendors\Partition 4\Get Vendors List.Outputs[OLE DB Source Output].ExternalColumns[AMLJSON]"
                          length="3000"
                          lineageId="Package\Get and Upload Vendors\Partition 4\Get Vendors List.Outputs[OLE DB Source Output].Columns[AMLJSON]"
                          name="AMLJSON"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Get Vendors List.Outputs[OLE DB Source Output].Columns[office_id]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Get and Upload Vendors\Partition 4\Get Vendors List.Outputs[OLE DB Source Output].ExternalColumns[office_id]"
                          length="4"
                          lineageId="Package\Get and Upload Vendors\Partition 4\Get Vendors List.Outputs[OLE DB Source Output].Columns[office_id]"
                          name="office_id"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Get Vendors List.Outputs[OLE DB Source Output].Columns[Partition]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Get and Upload Vendors\Partition 4\Get Vendors List.Outputs[OLE DB Source Output].ExternalColumns[Partition]"
                          lineageId="Package\Get and Upload Vendors\Partition 4\Get Vendors List.Outputs[OLE DB Source Output].Columns[Partition]"
                          name="Partition"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Get Vendors List.Outputs[OLE DB Source Output].Columns[IDCHECKJSON]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Get and Upload Vendors\Partition 4\Get Vendors List.Outputs[OLE DB Source Output].ExternalColumns[IDCHECKJSON]"
                          length="3000"
                          lineageId="Package\Get and Upload Vendors\Partition 4\Get Vendors List.Outputs[OLE DB Source Output].Columns[IDCHECKJSON]"
                          name="IDCHECKJSON"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Get Vendors List.Outputs[OLE DB Source Output].Columns[ContactJSON]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Get and Upload Vendors\Partition 4\Get Vendors List.Outputs[OLE DB Source Output].ExternalColumns[ContactJSON]"
                          length="3000"
                          lineageId="Package\Get and Upload Vendors\Partition 4\Get Vendors List.Outputs[OLE DB Source Output].Columns[ContactJSON]"
                          name="ContactJSON"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Get Vendors List.Outputs[OLE DB Source Output].Columns[Reference]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Get and Upload Vendors\Partition 4\Get Vendors List.Outputs[OLE DB Source Output].ExternalColumns[Reference]"
                          length="25"
                          lineageId="Package\Get and Upload Vendors\Partition 4\Get Vendors List.Outputs[OLE DB Source Output].Columns[Reference]"
                          name="Reference"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Get Vendors List.Outputs[OLE DB Source Output].Columns[entityType]"
                          dataType="ui1"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Get and Upload Vendors\Partition 4\Get Vendors List.Outputs[OLE DB Source Output].ExternalColumns[entityType]"
                          lineageId="Package\Get and Upload Vendors\Partition 4\Get Vendors List.Outputs[OLE DB Source Output].Columns[entityType]"
                          name="entityType"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Get Vendors List.Outputs[OLE DB Source Output].ExternalColumns[CustJSON]"
                          codePage="1252"
                          dataType="str"
                          length="3000"
                          name="CustJSON" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Get Vendors List.Outputs[OLE DB Source Output].ExternalColumns[AMLCheck]"
                          dataType="i4"
                          name="AMLCheck" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Get Vendors List.Outputs[OLE DB Source Output].ExternalColumns[AMLJSON]"
                          codePage="1252"
                          dataType="str"
                          length="3000"
                          name="AMLJSON" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Get Vendors List.Outputs[OLE DB Source Output].ExternalColumns[office_id]"
                          codePage="1252"
                          dataType="str"
                          length="4"
                          name="office_id" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Get Vendors List.Outputs[OLE DB Source Output].ExternalColumns[Partition]"
                          dataType="i4"
                          name="Partition" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Get Vendors List.Outputs[OLE DB Source Output].ExternalColumns[IDCHECKJSON]"
                          codePage="1252"
                          dataType="str"
                          length="3000"
                          name="IDCHECKJSON" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Get Vendors List.Outputs[OLE DB Source Output].ExternalColumns[ContactJSON]"
                          codePage="1252"
                          dataType="str"
                          length="3000"
                          name="ContactJSON" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Get Vendors List.Outputs[OLE DB Source Output].ExternalColumns[Reference]"
                          codePage="1252"
                          dataType="str"
                          length="25"
                          name="Reference" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Get Vendors List.Outputs[OLE DB Source Output].ExternalColumns[entityType]"
                          dataType="ui1"
                          name="entityType" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 4\Get Vendors List.Outputs[OLE DB Source Error Output]"
                      isErrorOut="true"
                      name="OLE DB Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Get Vendors List.Outputs[OLE DB Source Error Output].Columns[ContactJSON]"
                          codePage="1252"
                          dataType="str"
                          length="3000"
                          lineageId="Package\Get and Upload Vendors\Partition 4\Get Vendors List.Outputs[OLE DB Source Error Output].Columns[ContactJSON]"
                          name="ContactJSON" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Get Vendors List.Outputs[OLE DB Source Error Output].Columns[Reference]"
                          codePage="1252"
                          dataType="str"
                          length="25"
                          lineageId="Package\Get and Upload Vendors\Partition 4\Get Vendors List.Outputs[OLE DB Source Error Output].Columns[Reference]"
                          name="Reference" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Get Vendors List.Outputs[OLE DB Source Error Output].Columns[CustJSON]"
                          codePage="1252"
                          dataType="str"
                          length="3000"
                          lineageId="Package\Get and Upload Vendors\Partition 4\Get Vendors List.Outputs[OLE DB Source Error Output].Columns[CustJSON]"
                          name="CustJSON" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Get Vendors List.Outputs[OLE DB Source Error Output].Columns[AMLCheck]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 4\Get Vendors List.Outputs[OLE DB Source Error Output].Columns[AMLCheck]"
                          name="AMLCheck" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Get Vendors List.Outputs[OLE DB Source Error Output].Columns[AMLJSON]"
                          codePage="1252"
                          dataType="str"
                          length="3000"
                          lineageId="Package\Get and Upload Vendors\Partition 4\Get Vendors List.Outputs[OLE DB Source Error Output].Columns[AMLJSON]"
                          name="AMLJSON" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Get Vendors List.Outputs[OLE DB Source Error Output].Columns[office_id]"
                          codePage="1252"
                          dataType="str"
                          length="4"
                          lineageId="Package\Get and Upload Vendors\Partition 4\Get Vendors List.Outputs[OLE DB Source Error Output].Columns[office_id]"
                          name="office_id" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Get Vendors List.Outputs[OLE DB Source Error Output].Columns[Partition]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 4\Get Vendors List.Outputs[OLE DB Source Error Output].Columns[Partition]"
                          name="Partition" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Get Vendors List.Outputs[OLE DB Source Error Output].Columns[IDCHECKJSON]"
                          codePage="1252"
                          dataType="str"
                          length="3000"
                          lineageId="Package\Get and Upload Vendors\Partition 4\Get Vendors List.Outputs[OLE DB Source Error Output].Columns[IDCHECKJSON]"
                          name="IDCHECKJSON" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Get Vendors List.Outputs[OLE DB Source Error Output].Columns[entityType]"
                          dataType="ui1"
                          lineageId="Package\Get and Upload Vendors\Partition 4\Get Vendors List.Outputs[OLE DB Source Error Output].Columns[entityType]"
                          name="entityType" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Get Vendors List.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 4\Get Vendors List.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Get Vendors List.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 4\Get Vendors List.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Get and Upload Vendors\Partition 4\Lookup"
                  componentClassID="Microsoft.Lookup"
                  contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
                  description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                  name="Lookup"
                  usesDispositions="true"
                  version="6">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the SQL statement that generates the lookup table."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">SELECT * FROM ROSIE_ContactPush_staging WITH (NOLOCK)
Where entitytype = 1</property>
                    <property
                      dataType="System.String"
                      description="Specifies a SQL statement that uses parameters to generate the lookup table."
                      expressionType="Notify"
                      name="SqlCommandParam"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from (SELECT * FROM ROSIE_ContactPush_staging WITH (NOLOCK)
Where entitytype = 1) [refTable]
where [refTable].[Reference] = ? and [refTable].[office_id] = ?</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the type of connection used to access the reference dataset."
                      name="ConnectionType"
                      typeConverter="LookupConnectionType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the cache type of the lookup table."
                      name="CacheType"
                      typeConverter="CacheType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                      name="NoMatchBehavior"
                      typeConverter="LookupNoMatchBehavior">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                      name="NoMatchCachePercentage">0</property>
                    <property
                      dataType="System.Int32"
                      description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                      name="MaxMemoryUsage">25</property>
                    <property
                      dataType="System.Int64"
                      description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                      name="MaxMemoryUsage64">25</property>
                    <property
                      dataType="System.String"
                      description="Indicates whether to reference metadata in an XML format."
                      name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="ContactJSON" dataType="DT_STR" length="3000" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="Reference" dataType="DT_STR" length="25" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="CustJSON" dataType="DT_STR" length="3000" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="AMLCheck" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="AMLJSON" dataType="DT_STR" length="3000" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="office_id" dataType="DT_STR" length="4" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="Partition" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="IDCHECKJSON" dataType="DT_STR" length="3000" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="entityType" dataType="DT_UI1" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                      name="ParameterMap">#{Package\Get and Upload Vendors\Partition 4\Map Results 1.Outputs[Derived Column Output].Columns[prop_ref]};#{Package\Get and Upload Vendors\Partition 4\Map Results 1.Outputs[Derived Column Output].Columns[office_Id]};</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                      name="TreatDuplicateKeysAsError">false</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Get and Upload Vendors\Partition 4\Lookup.Connections[OleDbConnection]"
                      connectionManagerID="{78432CA1-1FEA-4ED4-9C0F-D552A4A9DE0E}:external"
                      connectionManagerRefId="Project.ConnectionManagers[InternetDB]"
                      description="Connection manager used to access lookup data."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Get and Upload Vendors\Partition 4\Lookup.Inputs[Lookup Input]"
                      name="Lookup Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Lookup.Inputs[Lookup Input].Columns[office_Id]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="4"
                          cachedName="office_Id"
                          lineageId="Package\Get and Upload Vendors\Partition 4\Map Results 1.Outputs[Derived Column Output].Columns[office_Id]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">office_id</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Lookup.Inputs[Lookup Input].Columns[prop_ref]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="prop_ref"
                          lineageId="Package\Get and Upload Vendors\Partition 4\Map Results 1.Outputs[Derived Column Output].Columns[prop_ref]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">Reference</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 4\Lookup.Outputs[Lookup Match Output]"
                      errorOrTruncationOperation="Lookup"
                      errorRowDisposition="IgnoreFailure"
                      exclusionGroup="1"
                      name="Lookup Match Output"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 4\Lookup.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Lookup.Outputs[Lookup Match Output].Columns[office_id]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Copy Column"
                          length="4"
                          lineageId="Package\Get and Upload Vendors\Partition 4\Lookup.Outputs[Lookup Match Output].Columns[office_id]"
                          name="office_id"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">office_id</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Lookup.Outputs[Lookup Match Output].Columns[CustJSON]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Copy Column"
                          length="3000"
                          lineageId="Package\Get and Upload Vendors\Partition 4\Lookup.Outputs[Lookup Match Output].Columns[CustJSON]"
                          name="CustJSON"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">CustJSON</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Lookup.Outputs[Lookup Match Output].Columns[AMLCheck]"
                          dataType="i4"
                          errorOrTruncationOperation="Copy Column"
                          lineageId="Package\Get and Upload Vendors\Partition 4\Lookup.Outputs[Lookup Match Output].Columns[AMLCheck]"
                          name="AMLCheck"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">AMLCheck</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Lookup.Outputs[Lookup Match Output].Columns[AMLJSON]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Copy Column"
                          length="3000"
                          lineageId="Package\Get and Upload Vendors\Partition 4\Lookup.Outputs[Lookup Match Output].Columns[AMLJSON]"
                          name="AMLJSON"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">AMLJSON</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Lookup.Outputs[Lookup Match Output].Columns[IDCHECKJSON]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Copy Column"
                          length="3000"
                          lineageId="Package\Get and Upload Vendors\Partition 4\Lookup.Outputs[Lookup Match Output].Columns[IDCHECKJSON]"
                          name="IDCHECKJSON"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">IDCHECKJSON</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Lookup.Outputs[Lookup Match Output].Columns[ContactJSON]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Copy Column"
                          length="3000"
                          lineageId="Package\Get and Upload Vendors\Partition 4\Lookup.Outputs[Lookup Match Output].Columns[ContactJSON]"
                          name="ContactJSON"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">ContactJSON</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Lookup.Outputs[Lookup Match Output].Columns[Reference]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Copy Column"
                          length="25"
                          lineageId="Package\Get and Upload Vendors\Partition 4\Lookup.Outputs[Lookup Match Output].Columns[Reference]"
                          name="Reference"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">Reference</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 4\Lookup.Outputs[Lookup No Match Output]"
                      description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                      exclusionGroup="1"
                      name="Lookup No Match Output"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 4\Lookup.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 4\Lookup.Outputs[Lookup Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Lookup Error Output"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 4\Lookup.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Lookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 4\Lookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Lookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 4\Lookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Get and Upload Vendors\Partition 4\Main Record Count"
                  componentClassID="Microsoft.RowCount"
                  contactInfo="Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status."
                  name="Main Record Count">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the variable to hold the row count."
                      name="VariableName">User::RecCountProcessed</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Get and Upload Vendors\Partition 4\Main Record Count.Inputs[Row Count Input 1]"
                      hasSideEffects="true"
                      name="Row Count Input 1">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 4\Main Record Count.Outputs[Row Count Output 1]"
                      name="Row Count Output 1"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 4\Main Record Count.Inputs[Row Count Input 1]">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Get and Upload Vendors\Partition 4\Map Results 1"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Map Results 1"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Get and Upload Vendors\Partition 4\Map Results 1.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Map Results 1.Inputs[Derived Column Input].Columns[result.notes]"
                          cachedDataType="wstr"
                          cachedLength="1020"
                          cachedName="result.notes"
                          lineageId="Package\Get and Upload Vendors\Partition 4\Get Results.Outputs[JsonParserTransformOutput].Columns[result.notes]" />
                        <inputColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Map Results 1.Inputs[Derived Column Input].Columns[result._id]"
                          cachedDataType="i8"
                          cachedName="result._id"
                          lineageId="Package\Get and Upload Vendors\Partition 4\Get Results.Outputs[JsonParserTransformOutput].Columns[result._id]" />
                        <inputColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Map Results 1.Inputs[Derived Column Input].Columns[result.etag]"
                          cachedDataType="wstr"
                          cachedLength="68"
                          cachedName="result.etag"
                          lineageId="Package\Get and Upload Vendors\Partition 4\Get Results.Outputs[JsonParserTransformOutput].Columns[result.etag]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 4\Map Results 1.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 4\Map Results 1.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Map Results 1.Outputs[Derived Column Output].Columns[prop_ref]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Get and Upload Vendors\Partition 4\Map Results 1.Outputs[Derived Column Output].Columns[prop_ref]"
                          name="prop_ref"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_STR,50,1252)#{Package\Get and Upload Vendors\Partition 4\Get Results.Outputs[JsonParserTransformOutput].Columns[result.notes]}</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_STR,50,1252)[result.notes]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Map Results 1.Outputs[Derived Column Output].Columns[office_Id]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="4"
                          lineageId="Package\Get and Upload Vendors\Partition 4\Map Results 1.Outputs[Derived Column Output].Columns[office_Id]"
                          name="office_Id"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_STR,4,1252)@[$Package::PackageOfficeID]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_STR,4,1252)@[$Package::PackageOfficeID]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Map Results 1.Outputs[Derived Column Output].Columns[etag_contact]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="80"
                          lineageId="Package\Get and Upload Vendors\Partition 4\Map Results 1.Outputs[Derived Column Output].Columns[etag_contact]"
                          name="etag_contact"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_STR,80,1252)#{Package\Get and Upload Vendors\Partition 4\Get Results.Outputs[JsonParserTransformOutput].Columns[result.etag]}</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_STR,80,1252)[result.etag]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Map Results 1.Outputs[Derived Column Output].Columns[rid_contact]"
                          dataType="i8"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Get and Upload Vendors\Partition 4\Map Results 1.Outputs[Derived Column Output].Columns[rid_contact]"
                          name="rid_contact"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">#{Package\Get and Upload Vendors\Partition 4\Get Results.Outputs[JsonParserTransformOutput].Columns[result._id]}</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">[result._id]</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 4\Map Results 1.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 4\Map Results 1.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Map Results 1.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 4\Map Results 1.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Map Results 1.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 4\Map Results 1.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Get and Upload Vendors\Partition 4\Multicast"
                  componentClassID="Microsoft.Multicast"
                  contactInfo="Multicast;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Distributes every input row to every row in one or more outputs. For example, branch your data flow to make a copy of data so that some values can be masked before sharing with external partners."
                  name="Multicast">
                  <inputs>
                    <input
                      refId="Package\Get and Upload Vendors\Partition 4\Multicast.Inputs[Multicast Input 1]"
                      name="Multicast Input 1">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 4\Multicast.Outputs[Multicast Output 1]"
                      deleteOutputOnPathDetached="true"
                      name="Multicast Output 1"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 4\Multicast.Inputs[Multicast Input 1]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 4\Multicast.Outputs[Multicast Output 3]"
                      deleteOutputOnPathDetached="true"
                      name="Multicast Output 3"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 4\Multicast.Inputs[Multicast Input 1]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 4\Multicast.Outputs[Multicast Output 2]"
                      deleteOutputOnPathDetached="true"
                      name="Multicast Output 2"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 4\Multicast.Inputs[Multicast Input 1]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 4\Multicast.Outputs[Multicast Output 4]"
                      dangling="true"
                      deleteOutputOnPathDetached="true"
                      name="Multicast Output 4"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 4\Multicast.Inputs[Multicast Input 1]">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Get and Upload Vendors\Partition 4\Multicast 1"
                  componentClassID="Microsoft.Multicast"
                  contactInfo="Multicast;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Distributes every input row to every row in one or more outputs. For example, branch your data flow to make a copy of data so that some values can be masked before sharing with external partners."
                  name="Multicast 1">
                  <inputs>
                    <input
                      refId="Package\Get and Upload Vendors\Partition 4\Multicast 1.Inputs[Multicast Input 1]"
                      name="Multicast Input 1">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 4\Multicast 1.Outputs[Multicast Output 1]"
                      deleteOutputOnPathDetached="true"
                      name="Multicast Output 1"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 4\Multicast 1.Inputs[Multicast Input 1]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 4\Multicast 1.Outputs[Multicast Output 3]"
                      deleteOutputOnPathDetached="true"
                      name="Multicast Output 3"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 4\Multicast 1.Inputs[Multicast Input 1]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 4\Multicast 1.Outputs[Multicast Output 4]"
                      dangling="true"
                      deleteOutputOnPathDetached="true"
                      name="Multicast Output 4"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 4\Multicast 1.Inputs[Multicast Input 1]">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Get and Upload Vendors\Partition 4\Push Custom Fields"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Web API Destination; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                  description="The Web API destination can be used to send data to Web API URL (e.g. Submit or POST data to REST API/SOAP or other HTTP/HTTPS endpoints)"
                  name="Push Custom Fields"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                      expressionType="Notify"
                      name="LoggingMode"
                      typeConverter="ZappySys.PowerPack.Common.LoggingMode, ZappySys.PowerPack130, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                    <property
                      dataType="System.Boolean"
                      description="When you enable this property it will prefix timestamp before Log messages."
                      expressionType="Notify"
                      name="PrefixTimestamp">false</property>
                    <property
                      dataType="System.Null"
                      expressionType="Notify"
                      name="SelfRef"
                      typeConverter="NOTBROWSABLE" />
                    <property
                      dataType="System.String"
                      description="API URL you want to access"
                      expressionType="Notify"
                      name="HttpRequestUrl">{{User::PackageRosieURL}}</property>
                    <property
                      dataType="System.String"
                      description="Http Web Request Method (e.g. POST, GET, PUT, LIST, DELETE...). Refer your API documentation if you are not sure which method you have to use."
                      expressionType="Notify"
                      name="HttpRequestMethod">POST</property>
                    <property
                      dataType="System.String"
                      description="Set this if you want to set custom Http headers. You may use variable anywhere in the header value using syntax {{User::YourVarName}}. Syntax of Header key value pair is : &amp;lt;request&amp;gt;&amp;lt;header&amp;gt;&amp;lt;name&amp;gt;x-myheader-1&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;AAA&amp;lt;/value&amp;gt;&amp;lt;/header&amp;gt; &amp;lt;header&amp;gt;&amp;lt;name&amp;gt;x-myheader-2&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;BBB&amp;lt;/value&amp;gt;&amp;lt;/header&amp;gt;&amp;lt;/request&amp;gt;"
                      expressionType="Notify"
                      name="HttpHeaders"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">&lt;request&gt;&lt;header&gt;&lt;name&gt;Accept&lt;/name&gt;&lt;value&gt;*/*&lt;/value&gt;&lt;/header&gt;&lt;header&gt;&lt;name&gt;Cache-Control&lt;/name&gt;&lt;value&gt;no-cache&lt;/value&gt;&lt;/header&gt;&lt;/request&gt;</property>
                    <property
                      dataType="System.String"
                      description="User defined data you wish to send along with your HTTP Request (e.g. Upload file data, Form POST data). Usually you have to set content-type of your data but if you select RequestMethod=POST then system will automatically set content-type=application/x-www-form-urlencoded."
                      expressionType="Notify"
                      name="HttpRequestData"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies content type for data you wish to POST. If you select Default option then system default content type will be used (i.e. application/x-www-form-urlencoded). If you specify Content-Type header along with this option then header value takes precedence."
                      expressionType="Notify"
                      name="HttpRequestContentType"
                      typeConverter="ZappySys.Common.Web.HttpRequestContentType, ZappySys.Common, Version=1.0.2018.11017, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                    <property
                      dataType="System.Boolean"
                      description="If this option is true then component will continue without exception on 404 error (Url not found). This allows you to consume data gracefully."
                      expressionType="Notify"
                      name="ContinueOnUrlNotFoundError">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Ignore SSL certificate related errors. Example: if you getting SSL/TLS errors because of certificate expired or certificate is not from trusted authority or certificate is self-signed. By checking this option you will not get SSL/TLS error."
                      expressionType="Notify"
                      name="IgnoreCertificateErrors">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Allow unsecure ciphers/suites and curves for SSLS/TLS communication. Use this option to communicate with web servers which needs legacy / unsecured ciphers support. This option is only trigged when you change default SSL/TLS Version on advanced settings tab."
                      expressionType="Notify"
                      name="AllowUnsecureSuite">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Enable support for gzip or deflate compression. When you check this option compressed response automatically de-compressed saving bandwidth. This option is only valid if web server supports compressed response stream. Check your API documentation for more information."
                      expressionType="Notify"
                      name="EnableCompressionSupport">true</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies which security protocol is supported for HTTPS communication. Using this option you can enable legacy protocol or enforce to use latest version of security protocol (Note: TLS 1.2 is only supported in SSIS 2014 or Higher)."
                      expressionType="Notify"
                      name="SecurityProtocol"
                      typeConverter="ZappySys.PowerPack.Common.HttpsSecurityProtocolType, ZappySys.PowerPack130, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                    <property
                      dataType="System.Int32"
                      description="Wait time in milliseconds (Pause after each request). 0=No wait. Use this delay time if your API has limit on how many requests you can make in certain time frame."
                      expressionType="Notify"
                      name="WaitTime">0</property>
                    <property
                      dataType="System.Boolean"
                      description="When you redirect error to error output by default you get additional information in ErrorMessage column. Check this option if you need exact Response Body (Useful if its in JSON/XML format which needs to be parsed for additional information for later step)."
                      expressionType="Notify"
                      name="OnErrorOutputResponseBody">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Enable multiple requests using parallel threads."
                      expressionType="Notify"
                      name="EnableParallelRequests">true</property>
                    <property
                      dataType="System.Int32"
                      description="Maximum parallel threads to use for processing multiple web requests."
                      expressionType="Notify"
                      name="MaxParallelThreads">20</property>
                    <property
                      dataType="System.Boolean"
                      description="By default one request is sent for each input row. If your API supports multiple records in a single call via HTTP Body then enable this setting. See also BodyBatchSize, BodyHeader, BodyFooter and BodyRowSeparator property."
                      expressionType="Notify"
                      name="EnableBodyBatch">false</property>
                    <property
                      dataType="System.String"
                      description="When you have to wrap input content between opening and closing tags for each call then set this property to specify opening for body content. For Example if you want to build Body like this (send max 100 rows per call) ==&gt; { records : [ {...}, {...}, {...} ] } then you can set BatchSize=100, BodyHeader as &quot;{ records: [&quot; , BodyFooter as &quot;] }&quot; and BodyRowSeperator as comma {,}. This property is ignored if EnableBodyBatch=false."
                      expressionType="Notify"
                      name="BodyHeader"></property>
                    <property
                      dataType="System.String"
                      description="When you have to wrap input content between opening and closing tags for each call then set this property to specify closing for body content. For Example if you want to build Body like this (send max 100 rows per call) ==&gt; { records : [ {...}, {...}, {...} ] } then you can set BatchSize=100, BodyHeader as &quot;{ records: [&quot; , BodyFooter as &quot;] }&quot; and BodyRowSeperator as comma {,}. This property is ignored if EnableBodyBatch=false."
                      expressionType="Notify"
                      name="BodyFooter"></property>
                    <property
                      dataType="System.Int32"
                      description="If your API supports multiple records via HTTP Body then change this setting &gt; 1 to include multiple upstream records into single call. See also BodyHeader, BodyFooter and BodyRowSeparator property. This property is ignored if EnableBodyBatch=false."
                      expressionType="Notify"
                      name="BodyBatchSize">100</property>
                    <property
                      dataType="System.String"
                      description="When you submit multiple rows in a batch you can separate multiple documents / records using custom separator (e.g. in JSON Array you can use comma {,} as record separator if POST document is in array format [ {...}, {...}, {...} ] ). For last row of batch blank separator is used."
                      expressionType="Notify"
                      name="BodyRowSeparator"></property>
                    <property
                      dataType="System.Boolean"
                      description="Returns response data as binary data (e.g. Byte Array). Check this option is response is Zip file, Image file or any non text data which needs to be exported as raw data without any encoding."
                      expressionType="Notify"
                      name="TreatResponseAsBinary">false</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">ZappySys.WebApiDestination</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Get and Upload Vendors\Partition 4\Push Custom Fields.Connections[Connection]"
                      connectionManagerID="Package.ConnectionManagers[HTTP]"
                      connectionManagerRefId="Package.ConnectionManagers[HTTP]"
                      description="Connection manager for authentication (e.g. HTTP or OAuth Connection)"
                      name="Connection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Get and Upload Vendors\Partition 4\Push Custom Fields.Inputs[WebApiDestinationInput]"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="WebApiDestinationInput"
                      truncationRowDisposition="FailComponent">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Push Custom Fields.Inputs[WebApiDestinationInput].Columns[DerivedCustomJSON]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="3000"
                          cachedName="DerivedCustomJSON"
                          externalMetadataColumnId="Package\Get and Upload Vendors\Partition 4\Push Custom Fields.Inputs[WebApiDestinationInput].ExternalColumns[HttpRequestData]"
                          lineageId="Package\Get and Upload Vendors\Partition 4\Replace Rid_contact and prop_ref.Outputs[Derived Column Output].Columns[DerivedCustomJSON]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Push Custom Fields.Inputs[WebApiDestinationInput].ExternalColumns[HttpRequestUrl]"
                          dataType="wstr"
                          length="2000"
                          name="HttpRequestUrl" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Push Custom Fields.Inputs[WebApiDestinationInput].ExternalColumns[HttpRequestData]"
                          dataType="nText"
                          name="HttpRequestData" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 4\Push Custom Fields.Outputs[WebApiDestination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="WebApiDestination Error Output"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 4\Push Custom Fields.Inputs[WebApiDestinationInput]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Push Custom Fields.Outputs[WebApiDestination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 4\Push Custom Fields.Outputs[WebApiDestination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Push Custom Fields.Outputs[WebApiDestination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 4\Push Custom Fields.Outputs[WebApiDestination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Push Custom Fields.Outputs[WebApiDestination Error Output].Columns[ErrorColumnName]"
                          codePage="1252"
                          dataType="str"
                          length="128"
                          lineageId="Package\Get and Upload Vendors\Partition 4\Push Custom Fields.Outputs[WebApiDestination Error Output].Columns[ErrorColumnName]"
                          name="ErrorColumnName" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Push Custom Fields.Outputs[WebApiDestination Error Output].Columns[ErrorMessage]"
                          dataType="nText"
                          lineageId="Package\Get and Upload Vendors\Partition 4\Push Custom Fields.Outputs[WebApiDestination Error Output].Columns[ErrorMessage]"
                          name="ErrorMessage" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 4\Push Custom Fields.Outputs[Response Output]"
                      exclusionGroup="1"
                      name="Response Output"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 4\Push Custom Fields.Inputs[WebApiDestinationInput]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Push Custom Fields.Outputs[Response Output].Columns[ResponseText]"
                          dataType="nText"
                          lineageId="Package\Get and Upload Vendors\Partition 4\Push Custom Fields.Outputs[Response Output].Columns[ResponseText]"
                          name="ResponseText" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Push Custom Fields.Outputs[Response Output].Columns[StatusCode]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 4\Push Custom Fields.Outputs[Response Output].Columns[StatusCode]"
                          name="StatusCode" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Get and Upload Vendors\Partition 4\Push ID Check Data 1"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Web API Destination; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                  description="The Web API destination can be used to send data to Web API URL (e.g. Submit or POST data to REST API/SOAP or other HTTP/HTTPS endpoints)"
                  name="Push ID Check Data 1"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                      expressionType="Notify"
                      name="LoggingMode"
                      typeConverter="ZappySys.PowerPack.Common.LoggingMode, ZappySys.PowerPack130, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                    <property
                      dataType="System.Boolean"
                      description="When you enable this property it will prefix timestamp before Log messages."
                      expressionType="Notify"
                      name="PrefixTimestamp">false</property>
                    <property
                      dataType="System.Null"
                      expressionType="Notify"
                      name="SelfRef"
                      typeConverter="NOTBROWSABLE" />
                    <property
                      dataType="System.String"
                      description="API URL you want to access"
                      expressionType="Notify"
                      name="HttpRequestUrl">{{User::PackageRosieURL}}</property>
                    <property
                      dataType="System.String"
                      description="Http Web Request Method (e.g. POST, GET, PUT, LIST, DELETE...). Refer your API documentation if you are not sure which method you have to use."
                      expressionType="Notify"
                      name="HttpRequestMethod">POST</property>
                    <property
                      dataType="System.String"
                      description="Set this if you want to set custom Http headers. You may use variable anywhere in the header value using syntax {{User::YourVarName}}. Syntax of Header key value pair is : &amp;lt;request&amp;gt;&amp;lt;header&amp;gt;&amp;lt;name&amp;gt;x-myheader-1&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;AAA&amp;lt;/value&amp;gt;&amp;lt;/header&amp;gt; &amp;lt;header&amp;gt;&amp;lt;name&amp;gt;x-myheader-2&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;BBB&amp;lt;/value&amp;gt;&amp;lt;/header&amp;gt;&amp;lt;/request&amp;gt;"
                      expressionType="Notify"
                      name="HttpHeaders"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">&lt;request&gt;&lt;header&gt;&lt;name&gt;Accept&lt;/name&gt;&lt;value&gt;*/*&lt;/value&gt;&lt;/header&gt;&lt;header&gt;&lt;name&gt;Cache-Control&lt;/name&gt;&lt;value&gt;no-cache&lt;/value&gt;&lt;/header&gt;&lt;/request&gt;</property>
                    <property
                      dataType="System.String"
                      description="User defined data you wish to send along with your HTTP Request (e.g. Upload file data, Form POST data). Usually you have to set content-type of your data but if you select RequestMethod=POST then system will automatically set content-type=application/x-www-form-urlencoded."
                      expressionType="Notify"
                      name="HttpRequestData"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies content type for data you wish to POST. If you select Default option then system default content type will be used (i.e. application/x-www-form-urlencoded). If you specify Content-Type header along with this option then header value takes precedence."
                      expressionType="Notify"
                      name="HttpRequestContentType"
                      typeConverter="ZappySys.Common.Web.HttpRequestContentType, ZappySys.Common, Version=1.0.2018.11017, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                    <property
                      dataType="System.Boolean"
                      description="If this option is true then component will continue without exception on 404 error (Url not found). This allows you to consume data gracefully."
                      expressionType="Notify"
                      name="ContinueOnUrlNotFoundError">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Ignore SSL certificate related errors. Example: if you getting SSL/TLS errors because of certificate expired or certificate is not from trusted authority or certificate is self-signed. By checking this option you will not get SSL/TLS error."
                      expressionType="Notify"
                      name="IgnoreCertificateErrors">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Allow unsecure ciphers/suites and curves for SSLS/TLS communication. Use this option to communicate with web servers which needs legacy / unsecured ciphers support. This option is only trigged when you change default SSL/TLS Version on advanced settings tab."
                      expressionType="Notify"
                      name="AllowUnsecureSuite">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Enable support for gzip or deflate compression. When you check this option compressed response automatically de-compressed saving bandwidth. This option is only valid if web server supports compressed response stream. Check your API documentation for more information."
                      expressionType="Notify"
                      name="EnableCompressionSupport">true</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies which security protocol is supported for HTTPS communication. Using this option you can enable legacy protocol or enforce to use latest version of security protocol (Note: TLS 1.2 is only supported in SSIS 2014 or Higher)."
                      expressionType="Notify"
                      name="SecurityProtocol"
                      typeConverter="ZappySys.PowerPack.Common.HttpsSecurityProtocolType, ZappySys.PowerPack130, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                    <property
                      dataType="System.Int32"
                      description="Wait time in milliseconds (Pause after each request). 0=No wait. Use this delay time if your API has limit on how many requests you can make in certain time frame."
                      expressionType="Notify"
                      name="WaitTime">0</property>
                    <property
                      dataType="System.Boolean"
                      description="When you redirect error to error output by default you get additional information in ErrorMessage column. Check this option if you need exact Response Body (Useful if its in JSON/XML format which needs to be parsed for additional information for later step)."
                      expressionType="Notify"
                      name="OnErrorOutputResponseBody">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Enable multiple requests using parallel threads."
                      expressionType="Notify"
                      name="EnableParallelRequests">true</property>
                    <property
                      dataType="System.Int32"
                      description="Maximum parallel threads to use for processing multiple web requests."
                      expressionType="Notify"
                      name="MaxParallelThreads">20</property>
                    <property
                      dataType="System.Boolean"
                      description="By default one request is sent for each input row. If your API supports multiple records in a single call via HTTP Body then enable this setting. See also BodyBatchSize, BodyHeader, BodyFooter and BodyRowSeparator property."
                      expressionType="Notify"
                      name="EnableBodyBatch">false</property>
                    <property
                      dataType="System.String"
                      description="When you have to wrap input content between opening and closing tags for each call then set this property to specify opening for body content. For Example if you want to build Body like this (send max 100 rows per call) ==&gt; { records : [ {...}, {...}, {...} ] } then you can set BatchSize=100, BodyHeader as &quot;{ records: [&quot; , BodyFooter as &quot;] }&quot; and BodyRowSeperator as comma {,}. This property is ignored if EnableBodyBatch=false."
                      expressionType="Notify"
                      name="BodyHeader"></property>
                    <property
                      dataType="System.String"
                      description="When you have to wrap input content between opening and closing tags for each call then set this property to specify closing for body content. For Example if you want to build Body like this (send max 100 rows per call) ==&gt; { records : [ {...}, {...}, {...} ] } then you can set BatchSize=100, BodyHeader as &quot;{ records: [&quot; , BodyFooter as &quot;] }&quot; and BodyRowSeperator as comma {,}. This property is ignored if EnableBodyBatch=false."
                      expressionType="Notify"
                      name="BodyFooter"></property>
                    <property
                      dataType="System.Int32"
                      description="If your API supports multiple records via HTTP Body then change this setting &gt; 1 to include multiple upstream records into single call. See also BodyHeader, BodyFooter and BodyRowSeparator property. This property is ignored if EnableBodyBatch=false."
                      expressionType="Notify"
                      name="BodyBatchSize">100</property>
                    <property
                      dataType="System.String"
                      description="When you submit multiple rows in a batch you can separate multiple documents / records using custom separator (e.g. in JSON Array you can use comma {,} as record separator if POST document is in array format [ {...}, {...}, {...} ] ). For last row of batch blank separator is used."
                      expressionType="Notify"
                      name="BodyRowSeparator"></property>
                    <property
                      dataType="System.Boolean"
                      description="Returns response data as binary data (e.g. Byte Array). Check this option is response is Zip file, Image file or any non text data which needs to be exported as raw data without any encoding."
                      expressionType="Notify"
                      name="TreatResponseAsBinary">false</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">ZappySys.WebApiDestination</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Get and Upload Vendors\Partition 4\Push ID Check Data 1.Connections[Connection]"
                      connectionManagerID="Package.ConnectionManagers[HTTP]"
                      connectionManagerRefId="Package.ConnectionManagers[HTTP]"
                      description="Connection manager for authentication (e.g. HTTP or OAuth Connection)"
                      name="Connection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Get and Upload Vendors\Partition 4\Push ID Check Data 1.Inputs[WebApiDestinationInput]"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="WebApiDestinationInput"
                      truncationRowDisposition="FailComponent">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Push ID Check Data 1.Inputs[WebApiDestinationInput].Columns[DerivedIDCheckJSON]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="3000"
                          cachedName="DerivedIDCheckJSON"
                          externalMetadataColumnId="Package\Get and Upload Vendors\Partition 4\Push ID Check Data 1.Inputs[WebApiDestinationInput].ExternalColumns[HttpRequestData]"
                          lineageId="Package\Get and Upload Vendors\Partition 4\Replace Rid_contact and prop_ref.Outputs[Derived Column Output].Columns[DerivedIDCheckJSON]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Push ID Check Data 1.Inputs[WebApiDestinationInput].ExternalColumns[HttpRequestUrl]"
                          dataType="wstr"
                          length="2000"
                          name="HttpRequestUrl" />
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Push ID Check Data 1.Inputs[WebApiDestinationInput].ExternalColumns[HttpRequestData]"
                          dataType="nText"
                          name="HttpRequestData" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 4\Push ID Check Data 1.Outputs[WebApiDestination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="WebApiDestination Error Output"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 4\Push ID Check Data 1.Inputs[WebApiDestinationInput]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Push ID Check Data 1.Outputs[WebApiDestination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 4\Push ID Check Data 1.Outputs[WebApiDestination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Push ID Check Data 1.Outputs[WebApiDestination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 4\Push ID Check Data 1.Outputs[WebApiDestination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Push ID Check Data 1.Outputs[WebApiDestination Error Output].Columns[ErrorColumnName]"
                          codePage="1252"
                          dataType="str"
                          length="128"
                          lineageId="Package\Get and Upload Vendors\Partition 4\Push ID Check Data 1.Outputs[WebApiDestination Error Output].Columns[ErrorColumnName]"
                          name="ErrorColumnName" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Push ID Check Data 1.Outputs[WebApiDestination Error Output].Columns[ErrorMessage]"
                          dataType="nText"
                          lineageId="Package\Get and Upload Vendors\Partition 4\Push ID Check Data 1.Outputs[WebApiDestination Error Output].Columns[ErrorMessage]"
                          name="ErrorMessage" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 4\Push ID Check Data 1.Outputs[Response Output]"
                      exclusionGroup="1"
                      name="Response Output"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 4\Push ID Check Data 1.Inputs[WebApiDestinationInput]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Push ID Check Data 1.Outputs[Response Output].Columns[ResponseText]"
                          dataType="nText"
                          lineageId="Package\Get and Upload Vendors\Partition 4\Push ID Check Data 1.Outputs[Response Output].Columns[ResponseText]"
                          name="ResponseText" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Push ID Check Data 1.Outputs[Response Output].Columns[StatusCode]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 4\Push ID Check Data 1.Outputs[Response Output].Columns[StatusCode]"
                          name="StatusCode" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Get and Upload Vendors\Partition 4\Replace Rid_contact and prop_ref"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Replace Rid_contact and prop_ref"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Get and Upload Vendors\Partition 4\Replace Rid_contact and prop_ref.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Replace Rid_contact and prop_ref.Inputs[Derived Column Input].Columns[rid_contact]"
                          cachedDataType="i8"
                          cachedName="rid_contact"
                          lineageId="Package\Get and Upload Vendors\Partition 4\Map Results 1.Outputs[Derived Column Output].Columns[rid_contact]" />
                        <inputColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Replace Rid_contact and prop_ref.Inputs[Derived Column Input].Columns[DerivedCustomJSON]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="3000"
                          cachedName="DerivedCustomJSON"
                          lineageId="Package\Get and Upload Vendors\Partition 4\Replace Token 1 1.Outputs[Derived Column Output].Columns[DerivedCustomJSON]" />
                        <inputColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Replace Rid_contact and prop_ref.Inputs[Derived Column Input].Columns[prop_ref]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="prop_ref"
                          lineageId="Package\Get and Upload Vendors\Partition 4\Map Results 1.Outputs[Derived Column Output].Columns[prop_ref]" />
                        <inputColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Replace Rid_contact and prop_ref.Inputs[Derived Column Input].Columns[DerivedAMLJSON]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="3000"
                          cachedName="DerivedAMLJSON"
                          lineageId="Package\Get and Upload Vendors\Partition 4\Replace Token 1 1.Outputs[Derived Column Output].Columns[DerivedAMLJSON]" />
                        <inputColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Replace Rid_contact and prop_ref.Inputs[Derived Column Input].Columns[DerivedIDCheckJSON]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="3000"
                          cachedName="DerivedIDCheckJSON"
                          lineageId="Package\Get and Upload Vendors\Partition 4\Replace Token 1 1.Outputs[Derived Column Output].Columns[DerivedIDCheckJSON]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 4\Replace Rid_contact and prop_ref.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 4\Replace Rid_contact and prop_ref.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Replace Rid_contact and prop_ref.Outputs[Derived Column Output].Columns[DerivedCustomJSON]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="3000"
                          lineageId="Package\Get and Upload Vendors\Partition 4\Replace Rid_contact and prop_ref.Outputs[Derived Column Output].Columns[DerivedCustomJSON]"
                          name="DerivedCustomJSON"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_STR,3000,1252)([REPLACE]([REPLACE](#{Package\Get and Upload Vendors\Partition 4\Replace Token 1 1.Outputs[Derived Column Output].Columns[DerivedCustomJSON]},"{{RID_CONTACT}}",(DT_STR,30,1252)#{Package\Get and Upload Vendors\Partition 4\Map Results 1.Outputs[Derived Column Output].Columns[rid_contact]}),"{{PROP_REF}}",[REPLACE]([REPLACE](#{Package\Get and Upload Vendors\Partition 4\Map Results 1.Outputs[Derived Column Output].Columns[prop_ref]},"VENDOR1_",""),"VENDOR2_","")))</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_STR,3000,1252)(REPLACE(REPLACE(DerivedCustomJSON,"{{RID_CONTACT}}",(DT_STR,30,1252)rid_contact),"{{PROP_REF}}",REPLACE(REPLACE(prop_ref,"VENDOR1_",""),"VENDOR2_","")))</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Replace Rid_contact and prop_ref.Outputs[Derived Column Output].Columns[DerivedAMLJSON]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="3000"
                          lineageId="Package\Get and Upload Vendors\Partition 4\Replace Rid_contact and prop_ref.Outputs[Derived Column Output].Columns[DerivedAMLJSON]"
                          name="DerivedAMLJSON"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_STR,3000,1252)[REPLACE](#{Package\Get and Upload Vendors\Partition 4\Replace Token 1 1.Outputs[Derived Column Output].Columns[DerivedAMLJSON]},"{{RID_CONTACT}}",(DT_STR,30,1252)#{Package\Get and Upload Vendors\Partition 4\Map Results 1.Outputs[Derived Column Output].Columns[rid_contact]})</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_STR,3000,1252)REPLACE(DerivedAMLJSON,"{{RID_CONTACT}}",(DT_STR,30,1252)rid_contact)</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Replace Rid_contact and prop_ref.Outputs[Derived Column Output].Columns[DerivedIDCheckJSON]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="3000"
                          lineageId="Package\Get and Upload Vendors\Partition 4\Replace Rid_contact and prop_ref.Outputs[Derived Column Output].Columns[DerivedIDCheckJSON]"
                          name="DerivedIDCheckJSON"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_STR,3000,1252)[REPLACE](#{Package\Get and Upload Vendors\Partition 4\Replace Token 1 1.Outputs[Derived Column Output].Columns[DerivedIDCheckJSON]},"{{RID_CONTACT}}",(DT_STR,30,1252)#{Package\Get and Upload Vendors\Partition 4\Map Results 1.Outputs[Derived Column Output].Columns[rid_contact]})</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_STR,3000,1252)REPLACE(DerivedIDCheckJSON,"{{RID_CONTACT}}",(DT_STR,30,1252)rid_contact)</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 4\Replace Rid_contact and prop_ref.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 4\Replace Rid_contact and prop_ref.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Replace Rid_contact and prop_ref.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 4\Replace Rid_contact and prop_ref.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Replace Rid_contact and prop_ref.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 4\Replace Rid_contact and prop_ref.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Get and Upload Vendors\Partition 4\Replace Token"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Replace Token"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Get and Upload Vendors\Partition 4\Replace Token.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Replace Token.Inputs[Derived Column Input].Columns[CustJSON]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="3000"
                          cachedName="CustJSON"
                          lineageId="Package\Get and Upload Vendors\Partition 4\Get Vendors List.Outputs[OLE DB Source Output].Columns[CustJSON]" />
                        <inputColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Replace Token.Inputs[Derived Column Input].Columns[AMLJSON]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="3000"
                          cachedName="AMLJSON"
                          lineageId="Package\Get and Upload Vendors\Partition 4\Get Vendors List.Outputs[OLE DB Source Output].Columns[AMLJSON]" />
                        <inputColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Replace Token.Inputs[Derived Column Input].Columns[IDCHECKJSON]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="3000"
                          cachedName="IDCHECKJSON"
                          lineageId="Package\Get and Upload Vendors\Partition 4\Get Vendors List.Outputs[OLE DB Source Output].Columns[IDCHECKJSON]" />
                        <inputColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Replace Token.Inputs[Derived Column Input].Columns[ContactJSON]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="3000"
                          cachedName="ContactJSON"
                          lineageId="Package\Get and Upload Vendors\Partition 4\Get Vendors List.Outputs[OLE DB Source Output].Columns[ContactJSON]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 4\Replace Token.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 4\Replace Token.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Replace Token.Outputs[Derived Column Output].Columns[DerivedVendorJSON]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="3000"
                          lineageId="Package\Get and Upload Vendors\Partition 4\Replace Token.Outputs[Derived Column Output].Columns[DerivedVendorJSON]"
                          name="DerivedVendorJSON"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_STR,3000,1252)[REPLACE](#{Package\Get and Upload Vendors\Partition 4\Get Vendors List.Outputs[OLE DB Source Output].Columns[ContactJSON]},"{{TOKEN}}",@[User::APIToken])</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_STR,3000,1252)REPLACE(ContactJSON,"{{TOKEN}}",@[User::APIToken])</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Replace Token.Outputs[Derived Column Output].Columns[DerivedCustomJSON]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="3000"
                          lineageId="Package\Get and Upload Vendors\Partition 4\Replace Token.Outputs[Derived Column Output].Columns[DerivedCustomJSON]"
                          name="DerivedCustomJSON"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_STR,3000,1252)([REPLACE](#{Package\Get and Upload Vendors\Partition 4\Get Vendors List.Outputs[OLE DB Source Output].Columns[CustJSON]},"{{TOKEN}}",@[User::APIToken]))</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_STR,3000,1252)(REPLACE(CustJSON,"{{TOKEN}}",@[User::APIToken]))</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Replace Token.Outputs[Derived Column Output].Columns[DerivedAMLJSON]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="3000"
                          lineageId="Package\Get and Upload Vendors\Partition 4\Replace Token.Outputs[Derived Column Output].Columns[DerivedAMLJSON]"
                          name="DerivedAMLJSON"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_STR,3000,1252)([REPLACE](#{Package\Get and Upload Vendors\Partition 4\Get Vendors List.Outputs[OLE DB Source Output].Columns[AMLJSON]},"{{TOKEN}}",@[User::APIToken]))</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_STR,3000,1252)(REPLACE(AMLJSON,"{{TOKEN}}",@[User::APIToken]))</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Replace Token.Outputs[Derived Column Output].Columns[DerivedIDCheckJSON]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="3000"
                          lineageId="Package\Get and Upload Vendors\Partition 4\Replace Token.Outputs[Derived Column Output].Columns[DerivedIDCheckJSON]"
                          name="DerivedIDCheckJSON"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_STR,3000,1252)([REPLACE](#{Package\Get and Upload Vendors\Partition 4\Get Vendors List.Outputs[OLE DB Source Output].Columns[IDCHECKJSON]},"{{TOKEN}}",@[User::APIToken]))</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_STR,3000,1252)(REPLACE(IDCHECKJSON,"{{TOKEN}}",@[User::APIToken]))</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 4\Replace Token.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 4\Replace Token.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Replace Token.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 4\Replace Token.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Replace Token.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 4\Replace Token.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Get and Upload Vendors\Partition 4\Replace Token 1 1"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Replace Token 1 1"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Get and Upload Vendors\Partition 4\Replace Token 1 1.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Replace Token 1 1.Inputs[Derived Column Input].Columns[CustJSON]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="3000"
                          cachedName="CustJSON"
                          lineageId="Package\Get and Upload Vendors\Partition 4\Lookup.Outputs[Lookup Match Output].Columns[CustJSON]" />
                        <inputColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Replace Token 1 1.Inputs[Derived Column Input].Columns[AMLJSON]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="3000"
                          cachedName="AMLJSON"
                          lineageId="Package\Get and Upload Vendors\Partition 4\Lookup.Outputs[Lookup Match Output].Columns[AMLJSON]" />
                        <inputColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Replace Token 1 1.Inputs[Derived Column Input].Columns[IDCHECKJSON]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="3000"
                          cachedName="IDCHECKJSON"
                          lineageId="Package\Get and Upload Vendors\Partition 4\Lookup.Outputs[Lookup Match Output].Columns[IDCHECKJSON]" />
                        <inputColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Replace Token 1 1.Inputs[Derived Column Input].Columns[ContactJSON]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="3000"
                          cachedName="ContactJSON"
                          lineageId="Package\Get and Upload Vendors\Partition 4\Lookup.Outputs[Lookup Match Output].Columns[ContactJSON]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 4\Replace Token 1 1.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 4\Replace Token 1 1.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Replace Token 1 1.Outputs[Derived Column Output].Columns[DerivedVendorJSON]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="3000"
                          lineageId="Package\Get and Upload Vendors\Partition 4\Replace Token 1 1.Outputs[Derived Column Output].Columns[DerivedVendorJSON]"
                          name="DerivedVendorJSON"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_STR,3000,1252)[REPLACE](#{Package\Get and Upload Vendors\Partition 4\Lookup.Outputs[Lookup Match Output].Columns[ContactJSON]},"{{TOKEN}}",@[User::APIToken])</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_STR,3000,1252)REPLACE(ContactJSON,"{{TOKEN}}",@[User::APIToken])</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Replace Token 1 1.Outputs[Derived Column Output].Columns[DerivedCustomJSON]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="3000"
                          lineageId="Package\Get and Upload Vendors\Partition 4\Replace Token 1 1.Outputs[Derived Column Output].Columns[DerivedCustomJSON]"
                          name="DerivedCustomJSON"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_STR,3000,1252)([REPLACE](#{Package\Get and Upload Vendors\Partition 4\Lookup.Outputs[Lookup Match Output].Columns[CustJSON]},"{{TOKEN}}",@[User::APIToken]))</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_STR,3000,1252)(REPLACE(CustJSON,"{{TOKEN}}",@[User::APIToken]))</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Replace Token 1 1.Outputs[Derived Column Output].Columns[DerivedAMLJSON]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="3000"
                          lineageId="Package\Get and Upload Vendors\Partition 4\Replace Token 1 1.Outputs[Derived Column Output].Columns[DerivedAMLJSON]"
                          name="DerivedAMLJSON"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_STR,3000,1252)([REPLACE](#{Package\Get and Upload Vendors\Partition 4\Lookup.Outputs[Lookup Match Output].Columns[AMLJSON]},"{{TOKEN}}",@[User::APIToken]))</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_STR,3000,1252)(REPLACE(AMLJSON,"{{TOKEN}}",@[User::APIToken]))</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Replace Token 1 1.Outputs[Derived Column Output].Columns[DerivedIDCheckJSON]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="3000"
                          lineageId="Package\Get and Upload Vendors\Partition 4\Replace Token 1 1.Outputs[Derived Column Output].Columns[DerivedIDCheckJSON]"
                          name="DerivedIDCheckJSON"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_STR,3000,1252)([REPLACE](#{Package\Get and Upload Vendors\Partition 4\Lookup.Outputs[Lookup Match Output].Columns[IDCHECKJSON]},"{{TOKEN}}",@[User::APIToken]))</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_STR,3000,1252)(REPLACE(IDCHECKJSON,"{{TOKEN}}",@[User::APIToken]))</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 4\Replace Token 1 1.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 4\Replace Token 1 1.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Replace Token 1 1.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 4\Replace Token 1 1.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Replace Token 1 1.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 4\Replace Token 1 1.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Get and Upload Vendors\Partition 4\Row Count Success"
                  componentClassID="Microsoft.RowCount"
                  contactInfo="Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status."
                  name="Row Count Success">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the variable to hold the row count."
                      name="VariableName">User::RecCountSuccess</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Get and Upload Vendors\Partition 4\Row Count Success.Inputs[Row Count Input 1]"
                      hasSideEffects="true"
                      name="Row Count Input 1">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 4\Row Count Success.Outputs[Row Count Output 1]"
                      name="Row Count Output 1"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 4\Row Count Success.Inputs[Row Count Input 1]">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Get and Upload Vendors\Partition 4\Trash Destination 1"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Trash Destination; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                  description="The trash destination is used to create dummy destination which ends data path without any processing."
                  name="Trash Destination 1"
                  version="2">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                      expressionType="Notify"
                      name="LoggingMode"
                      typeConverter="ZappySys.PowerPack.Common.LoggingMode, ZappySys.PowerPack130, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                    <property
                      dataType="System.Boolean"
                      description="When you enable this property it will prefix timestamp before Log messages."
                      expressionType="Notify"
                      name="PrefixTimestamp">false</property>
                    <property
                      dataType="System.Null"
                      expressionType="Notify"
                      name="SelfRef"
                      typeConverter="NOTBROWSABLE" />
                    <property
                      dataType="System.String"
                      description="File path where you want to save data"
                      expressionType="Notify"
                      name="FilePath"></property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates if you want to save input data to comma separated text file"
                      expressionType="Notify"
                      name="SaveDataToFile">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Append data to file"
                      expressionType="Notify"
                      name="Append">false</property>
                    <property
                      dataType="System.String"
                      description="RowSeparator"
                      expressionType="Notify"
                      name="RowSeparator">{NEWLINE}</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether you want to overwrite target file if exists"
                      expressionType="Notify"
                      name="OverwriteFileIfExists">true</property>
                    <property
                      dataType="System.String"
                      description="ColumnSeparator"
                      expressionType="Notify"
                      name="ColumnSeparator">,</property>
                    <property
                      dataType="System.Boolean"
                      description="SupportUnicode"
                      expressionType="Notify"
                      name="SupportUnicode">true</property>
                    <property
                      dataType="System.Boolean"
                      description="ColumnNamesInFirstRow"
                      expressionType="Notify"
                      name="ColumnNamesInFirstRow">true</property>
                    <property
                      dataType="System.Boolean"
                      description="QuoteDataIfNeeded"
                      expressionType="Notify"
                      name="QuoteDataIfNeeded">true</property>
                    <property
                      dataType="System.String"
                      description="Date time format string for any column with DT_DBDATETIME, DT_DBDATETIME2 or DB_DATE format"
                      expressionType="Notify"
                      name="DateTimeFormat">yyyy-MM-dd HH:mm:ss</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">ZappySys.TrashDestination</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Get and Upload Vendors\Partition 4\Trash Destination 1.Inputs[TrashDestinationInput]"
                      hasSideEffects="true"
                      name="TrashDestinationInput">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                </component>
                <component
                  refId="Package\Get and Upload Vendors\Partition 4\Trash Destination 1 1"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Trash Destination; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                  description="The trash destination is used to create dummy destination which ends data path without any processing."
                  name="Trash Destination 1 1"
                  version="2">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                      expressionType="Notify"
                      name="LoggingMode"
                      typeConverter="ZappySys.PowerPack.Common.LoggingMode, ZappySys.PowerPack130, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                    <property
                      dataType="System.Boolean"
                      description="When you enable this property it will prefix timestamp before Log messages."
                      expressionType="Notify"
                      name="PrefixTimestamp">false</property>
                    <property
                      dataType="System.Null"
                      expressionType="Notify"
                      name="SelfRef"
                      typeConverter="NOTBROWSABLE" />
                    <property
                      dataType="System.String"
                      description="File path where you want to save data"
                      expressionType="Notify"
                      name="FilePath"></property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates if you want to save input data to comma separated text file"
                      expressionType="Notify"
                      name="SaveDataToFile">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Append data to file"
                      expressionType="Notify"
                      name="Append">false</property>
                    <property
                      dataType="System.String"
                      description="RowSeparator"
                      expressionType="Notify"
                      name="RowSeparator">{NEWLINE}</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether you want to overwrite target file if exists"
                      expressionType="Notify"
                      name="OverwriteFileIfExists">true</property>
                    <property
                      dataType="System.String"
                      description="ColumnSeparator"
                      expressionType="Notify"
                      name="ColumnSeparator">,</property>
                    <property
                      dataType="System.Boolean"
                      description="SupportUnicode"
                      expressionType="Notify"
                      name="SupportUnicode">true</property>
                    <property
                      dataType="System.Boolean"
                      description="ColumnNamesInFirstRow"
                      expressionType="Notify"
                      name="ColumnNamesInFirstRow">true</property>
                    <property
                      dataType="System.Boolean"
                      description="QuoteDataIfNeeded"
                      expressionType="Notify"
                      name="QuoteDataIfNeeded">true</property>
                    <property
                      dataType="System.String"
                      description="Date time format string for any column with DT_DBDATETIME, DT_DBDATETIME2 or DB_DATE format"
                      expressionType="Notify"
                      name="DateTimeFormat">yyyy-MM-dd HH:mm:ss</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">ZappySys.TrashDestination</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Get and Upload Vendors\Partition 4\Trash Destination 1 1.Inputs[TrashDestinationInput]"
                      hasSideEffects="true"
                      name="TrashDestinationInput">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                </component>
                <component
                  refId="Package\Get and Upload Vendors\Partition 4\Trash Destination 1 1 1"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Trash Destination; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                  description="The trash destination is used to create dummy destination which ends data path without any processing."
                  name="Trash Destination 1 1 1"
                  version="2">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                      expressionType="Notify"
                      name="LoggingMode"
                      typeConverter="ZappySys.PowerPack.Common.LoggingMode, ZappySys.PowerPack130, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                    <property
                      dataType="System.Boolean"
                      description="When you enable this property it will prefix timestamp before Log messages."
                      expressionType="Notify"
                      name="PrefixTimestamp">false</property>
                    <property
                      dataType="System.Null"
                      expressionType="Notify"
                      name="SelfRef"
                      typeConverter="NOTBROWSABLE" />
                    <property
                      dataType="System.String"
                      description="File path where you want to save data"
                      expressionType="Notify"
                      name="FilePath"></property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates if you want to save input data to comma separated text file"
                      expressionType="Notify"
                      name="SaveDataToFile">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Append data to file"
                      expressionType="Notify"
                      name="Append">false</property>
                    <property
                      dataType="System.String"
                      description="RowSeparator"
                      expressionType="Notify"
                      name="RowSeparator">{NEWLINE}</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether you want to overwrite target file if exists"
                      expressionType="Notify"
                      name="OverwriteFileIfExists">true</property>
                    <property
                      dataType="System.String"
                      description="ColumnSeparator"
                      expressionType="Notify"
                      name="ColumnSeparator">,</property>
                    <property
                      dataType="System.Boolean"
                      description="SupportUnicode"
                      expressionType="Notify"
                      name="SupportUnicode">true</property>
                    <property
                      dataType="System.Boolean"
                      description="ColumnNamesInFirstRow"
                      expressionType="Notify"
                      name="ColumnNamesInFirstRow">true</property>
                    <property
                      dataType="System.Boolean"
                      description="QuoteDataIfNeeded"
                      expressionType="Notify"
                      name="QuoteDataIfNeeded">true</property>
                    <property
                      dataType="System.String"
                      description="Date time format string for any column with DT_DBDATETIME, DT_DBDATETIME2 or DB_DATE format"
                      expressionType="Notify"
                      name="DateTimeFormat">yyyy-MM-dd HH:mm:ss</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">ZappySys.TrashDestination</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Get and Upload Vendors\Partition 4\Trash Destination 1 1 1.Inputs[TrashDestinationInput]"
                      hasSideEffects="true"
                      name="TrashDestinationInput">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                </component>
                <component
                  refId="Package\Get and Upload Vendors\Partition 4\Trash Destination 1 1 1 1"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Trash Destination; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                  description="The trash destination is used to create dummy destination which ends data path without any processing."
                  name="Trash Destination 1 1 1 1"
                  version="2">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                      expressionType="Notify"
                      name="LoggingMode"
                      typeConverter="ZappySys.PowerPack.Common.LoggingMode, ZappySys.PowerPack130, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                    <property
                      dataType="System.Boolean"
                      description="When you enable this property it will prefix timestamp before Log messages."
                      expressionType="Notify"
                      name="PrefixTimestamp">false</property>
                    <property
                      dataType="System.Null"
                      expressionType="Notify"
                      name="SelfRef"
                      typeConverter="NOTBROWSABLE" />
                    <property
                      dataType="System.String"
                      description="File path where you want to save data"
                      expressionType="Notify"
                      name="FilePath"></property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates if you want to save input data to comma separated text file"
                      expressionType="Notify"
                      name="SaveDataToFile">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Append data to file"
                      expressionType="Notify"
                      name="Append">false</property>
                    <property
                      dataType="System.String"
                      description="RowSeparator"
                      expressionType="Notify"
                      name="RowSeparator">{NEWLINE}</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether you want to overwrite target file if exists"
                      expressionType="Notify"
                      name="OverwriteFileIfExists">true</property>
                    <property
                      dataType="System.String"
                      description="ColumnSeparator"
                      expressionType="Notify"
                      name="ColumnSeparator">,</property>
                    <property
                      dataType="System.Boolean"
                      description="SupportUnicode"
                      expressionType="Notify"
                      name="SupportUnicode">true</property>
                    <property
                      dataType="System.Boolean"
                      description="ColumnNamesInFirstRow"
                      expressionType="Notify"
                      name="ColumnNamesInFirstRow">true</property>
                    <property
                      dataType="System.Boolean"
                      description="QuoteDataIfNeeded"
                      expressionType="Notify"
                      name="QuoteDataIfNeeded">true</property>
                    <property
                      dataType="System.String"
                      description="Date time format string for any column with DT_DBDATETIME, DT_DBDATETIME2 or DB_DATE format"
                      expressionType="Notify"
                      name="DateTimeFormat">yyyy-MM-dd HH:mm:ss</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">ZappySys.TrashDestination</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Get and Upload Vendors\Partition 4\Trash Destination 1 1 1 1.Inputs[TrashDestinationInput]"
                      hasSideEffects="true"
                      name="TrashDestinationInput">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                </component>
                <component
                  refId="Package\Get and Upload Vendors\Partition 4\Trash Destination 1 1 4 1"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Trash Destination; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                  description="The trash destination is used to create dummy destination which ends data path without any processing."
                  name="Trash Destination 1 1 4 1"
                  version="2">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                      expressionType="Notify"
                      name="LoggingMode"
                      typeConverter="ZappySys.PowerPack.Common.LoggingMode, ZappySys.PowerPack130, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                    <property
                      dataType="System.Boolean"
                      description="When you enable this property it will prefix timestamp before Log messages."
                      expressionType="Notify"
                      name="PrefixTimestamp">false</property>
                    <property
                      dataType="System.Null"
                      expressionType="Notify"
                      name="SelfRef"
                      typeConverter="NOTBROWSABLE" />
                    <property
                      dataType="System.String"
                      description="File path where you want to save data"
                      expressionType="Notify"
                      name="FilePath"></property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates if you want to save input data to comma separated text file"
                      expressionType="Notify"
                      name="SaveDataToFile">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Append data to file"
                      expressionType="Notify"
                      name="Append">false</property>
                    <property
                      dataType="System.String"
                      description="RowSeparator"
                      expressionType="Notify"
                      name="RowSeparator">{NEWLINE}</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether you want to overwrite target file if exists"
                      expressionType="Notify"
                      name="OverwriteFileIfExists">true</property>
                    <property
                      dataType="System.String"
                      description="ColumnSeparator"
                      expressionType="Notify"
                      name="ColumnSeparator">,</property>
                    <property
                      dataType="System.Boolean"
                      description="SupportUnicode"
                      expressionType="Notify"
                      name="SupportUnicode">true</property>
                    <property
                      dataType="System.Boolean"
                      description="ColumnNamesInFirstRow"
                      expressionType="Notify"
                      name="ColumnNamesInFirstRow">true</property>
                    <property
                      dataType="System.Boolean"
                      description="QuoteDataIfNeeded"
                      expressionType="Notify"
                      name="QuoteDataIfNeeded">true</property>
                    <property
                      dataType="System.String"
                      description="Date time format string for any column with DT_DBDATETIME, DT_DBDATETIME2 or DB_DATE format"
                      expressionType="Notify"
                      name="DateTimeFormat">yyyy-MM-dd HH:mm:ss</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">ZappySys.TrashDestination</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Get and Upload Vendors\Partition 4\Trash Destination 1 1 4 1.Inputs[TrashDestinationInput]"
                      hasSideEffects="true"
                      name="TrashDestinationInput">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                </component>
                <component
                  refId="Package\Get and Upload Vendors\Partition 4\Update RID"
                  componentClassID="Microsoft.OLEDBCommand"
                  contactInfo="OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
                  description="Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time."
                  name="Update RID"
                  usesDispositions="true"
                  version="2">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">exec Rosie_uspUpdVendorContactRid ?,?,?,?</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Get and Upload Vendors\Partition 4\Update RID.Connections[OleDbConnection]"
                      connectionManagerID="{78432CA1-1FEA-4ED4-9C0F-D552A4A9DE0E}:external"
                      connectionManagerRefId="Project.ConnectionManagers[InternetDB]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Get and Upload Vendors\Partition 4\Update RID.Inputs[OLE DB Command Input]"
                      errorOrTruncationOperation="Command Execution"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Command Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Update RID.Inputs[OLE DB Command Input].Columns[office_Id]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="4"
                          cachedName="office_Id"
                          externalMetadataColumnId="Package\Get and Upload Vendors\Partition 4\Update RID.Inputs[OLE DB Command Input].ExternalColumns[@office_id]"
                          lineageId="Package\Get and Upload Vendors\Partition 4\Map Results 1.Outputs[Derived Column Output].Columns[office_Id]" />
                        <inputColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Update RID.Inputs[OLE DB Command Input].Columns[rid_contact]"
                          cachedDataType="i8"
                          cachedName="rid_contact"
                          externalMetadataColumnId="Package\Get and Upload Vendors\Partition 4\Update RID.Inputs[OLE DB Command Input].ExternalColumns[@rid_contact]"
                          lineageId="Package\Get and Upload Vendors\Partition 4\Map Results 1.Outputs[Derived Column Output].Columns[rid_contact]" />
                        <inputColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Update RID.Inputs[OLE DB Command Input].Columns[etag_contact]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="80"
                          cachedName="etag_contact"
                          externalMetadataColumnId="Package\Get and Upload Vendors\Partition 4\Update RID.Inputs[OLE DB Command Input].ExternalColumns[@etag_contact]"
                          lineageId="Package\Get and Upload Vendors\Partition 4\Map Results 1.Outputs[Derived Column Output].Columns[etag_contact]" />
                        <inputColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Update RID.Inputs[OLE DB Command Input].Columns[prop_ref]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="prop_ref"
                          externalMetadataColumnId="Package\Get and Upload Vendors\Partition 4\Update RID.Inputs[OLE DB Command Input].ExternalColumns[@prop_Ref]"
                          lineageId="Package\Get and Upload Vendors\Partition 4\Map Results 1.Outputs[Derived Column Output].Columns[prop_ref]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Update RID.Inputs[OLE DB Command Input].ExternalColumns[@office_id]"
                          codePage="1252"
                          dataType="str"
                          length="4"
                          name="@office_id">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Update RID.Inputs[OLE DB Command Input].ExternalColumns[@rid_contact]"
                          dataType="i4"
                          name="@rid_contact">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">81</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Update RID.Inputs[OLE DB Command Input].ExternalColumns[@etag_contact]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="@etag_contact">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Update RID.Inputs[OLE DB Command Input].ExternalColumns[@prop_Ref]"
                          codePage="1252"
                          dataType="str"
                          length="25"
                          name="@prop_Ref">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 4\Update RID.Outputs[OLE DB Command Output]"
                      exclusionGroup="1"
                      name="OLE DB Command Output"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 4\Update RID.Inputs[OLE DB Command Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Get and Upload Vendors\Partition 4\Update RID.Outputs[OLE DB Command Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Command Error Output"
                      synchronousInputId="Package\Get and Upload Vendors\Partition 4\Update RID.Inputs[OLE DB Command Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Update RID.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 4\Update RID.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Get and Upload Vendors\Partition 4\Update RID.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Get and Upload Vendors\Partition 4\Update RID.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Get and Upload Vendors\Partition 4.Paths[Derived Column Output]"
                  endId="Package\Get and Upload Vendors\Partition 4\Multicast.Inputs[Multicast Input 1]"
                  name="Derived Column Output"
                  startId="Package\Get and Upload Vendors\Partition 4\Replace Rid_contact and prop_ref.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Get and Upload Vendors\Partition 4.Paths[Derived Column Output1]"
                  endId="Package\Get and Upload Vendors\Partition 4\Replace Rid_contact and prop_ref.Inputs[Derived Column Input]"
                  name="Derived Column Output"
                  startId="Package\Get and Upload Vendors\Partition 4\Replace Token 1 1.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Get and Upload Vendors\Partition 4.Paths[Derived Column Output2]"
                  endId="Package\Get and Upload Vendors\Partition 4\Create Contact.Inputs[WebApiDestinationInput]"
                  name="Derived Column Output"
                  startId="Package\Get and Upload Vendors\Partition 4\Replace Token.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Get and Upload Vendors\Partition 4.Paths[Derived Column Output3]"
                  endId="Package\Get and Upload Vendors\Partition 4\Multicast 1.Inputs[Multicast Input 1]"
                  name="Derived Column Output"
                  startId="Package\Get and Upload Vendors\Partition 4\Map Results 1.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Get and Upload Vendors\Partition 4.Paths[Do nothing]"
                  endId="Package\Get and Upload Vendors\Partition 4\Trash Destination 1 1 1 1.Inputs[TrashDestinationInput]"
                  name="Do nothing"
                  startId="Package\Get and Upload Vendors\Partition 4\Conditional Split.Outputs[Do nothing]" />
                <path
                  refId="Package\Get and Upload Vendors\Partition 4.Paths[JsonParserTransformOutput]"
                  endId="Package\Get and Upload Vendors\Partition 4\Check Error 1.Inputs[Conditional Split Input]"
                  name="JsonParserTransformOutput"
                  startId="Package\Get and Upload Vendors\Partition 4\Get Results.Outputs[JsonParserTransformOutput]" />
                <path
                  refId="Package\Get and Upload Vendors\Partition 4.Paths[Lookup Match Output]"
                  endId="Package\Get and Upload Vendors\Partition 4\Replace Token 1 1.Inputs[Derived Column Input]"
                  name="Lookup Match Output"
                  startId="Package\Get and Upload Vendors\Partition 4\Lookup.Outputs[Lookup Match Output]" />
                <path
                  refId="Package\Get and Upload Vendors\Partition 4.Paths[Multicast Output 1]"
                  endId="Package\Get and Upload Vendors\Partition 4\Push Custom Fields.Inputs[WebApiDestinationInput]"
                  name="Multicast Output 1"
                  startId="Package\Get and Upload Vendors\Partition 4\Multicast.Outputs[Multicast Output 1]" />
                <path
                  refId="Package\Get and Upload Vendors\Partition 4.Paths[Multicast Output 11]"
                  endId="Package\Get and Upload Vendors\Partition 4\Update RID.Inputs[OLE DB Command Input]"
                  name="Multicast Output 1"
                  startId="Package\Get and Upload Vendors\Partition 4\Multicast 1.Outputs[Multicast Output 1]" />
                <path
                  refId="Package\Get and Upload Vendors\Partition 4.Paths[Multicast Output 2]"
                  endId="Package\Get and Upload Vendors\Partition 4\Push ID Check Data 1.Inputs[WebApiDestinationInput]"
                  name="Multicast Output 2"
                  startId="Package\Get and Upload Vendors\Partition 4\Multicast.Outputs[Multicast Output 2]" />
                <path
                  refId="Package\Get and Upload Vendors\Partition 4.Paths[Multicast Output 31]"
                  endId="Package\Get and Upload Vendors\Partition 4\Conditional Split.Inputs[Conditional Split Input]"
                  name="Multicast Output 3"
                  startId="Package\Get and Upload Vendors\Partition 4\Multicast.Outputs[Multicast Output 3]" />
                <path
                  refId="Package\Get and Upload Vendors\Partition 4.Paths[Multicast Output 3]"
                  endId="Package\Get and Upload Vendors\Partition 4\Lookup.Inputs[Lookup Input]"
                  name="Multicast Output 3"
                  startId="Package\Get and Upload Vendors\Partition 4\Multicast 1.Outputs[Multicast Output 3]" />
                <path
                  refId="Package\Get and Upload Vendors\Partition 4.Paths[Need To Flag AML]"
                  endId="Package\Get and Upload Vendors\Partition 4\AML.Inputs[WebApiDestinationInput]"
                  name="Need To Flag AML"
                  startId="Package\Get and Upload Vendors\Partition 4\Conditional Split.Outputs[Need To Flag AML]" />
                <path
                  refId="Package\Get and Upload Vendors\Partition 4.Paths[No Error]"
                  endId="Package\Get and Upload Vendors\Partition 4\Map Results 1.Inputs[Derived Column Input]"
                  name="No Error"
                  startId="Package\Get and Upload Vendors\Partition 4\Check Error 1.Outputs[No Error]" />
                <path
                  refId="Package\Get and Upload Vendors\Partition 4.Paths[OLE DB Command Output]"
                  endId="Package\Get and Upload Vendors\Partition 4\Row Count Success.Inputs[Row Count Input 1]"
                  name="OLE DB Command Output"
                  startId="Package\Get and Upload Vendors\Partition 4\Update RID.Outputs[OLE DB Command Output]" />
                <path
                  refId="Package\Get and Upload Vendors\Partition 4.Paths[OLE DB Source Output]"
                  endId="Package\Get and Upload Vendors\Partition 4\Main Record Count.Inputs[Row Count Input 1]"
                  name="OLE DB Source Output"
                  startId="Package\Get and Upload Vendors\Partition 4\Get Vendors List.Outputs[OLE DB Source Output]" />
                <path
                  refId="Package\Get and Upload Vendors\Partition 4.Paths[Response Output]"
                  endId="Package\Get and Upload Vendors\Partition 4\Trash Destination 1 1 4 1.Inputs[TrashDestinationInput]"
                  name="Response Output"
                  startId="Package\Get and Upload Vendors\Partition 4\Push ID Check Data 1.Outputs[Response Output]" />
                <path
                  refId="Package\Get and Upload Vendors\Partition 4.Paths[Response Output1]"
                  endId="Package\Get and Upload Vendors\Partition 4\Trash Destination 1 1 1.Inputs[TrashDestinationInput]"
                  name="Response Output"
                  startId="Package\Get and Upload Vendors\Partition 4\AML.Outputs[Response Output]" />
                <path
                  refId="Package\Get and Upload Vendors\Partition 4.Paths[Response Output2]"
                  endId="Package\Get and Upload Vendors\Partition 4\Trash Destination 1 1.Inputs[TrashDestinationInput]"
                  name="Response Output"
                  startId="Package\Get and Upload Vendors\Partition 4\Push Custom Fields.Outputs[Response Output]" />
                <path
                  refId="Package\Get and Upload Vendors\Partition 4.Paths[Response Output3]"
                  endId="Package\Get and Upload Vendors\Partition 4\Get Results.Inputs[JsonParserTransformInput]"
                  name="Response Output"
                  startId="Package\Get and Upload Vendors\Partition 4\Create Contact.Outputs[Response Output]" />
                <path
                  refId="Package\Get and Upload Vendors\Partition 4.Paths[Row Count Output 1]"
                  endId="Package\Get and Upload Vendors\Partition 4\Replace Token.Inputs[Derived Column Input]"
                  name="Row Count Output 1"
                  startId="Package\Get and Upload Vendors\Partition 4\Main Record Count.Outputs[Row Count Output 1]" />
                <path
                  refId="Package\Get and Upload Vendors\Partition 4.Paths[Row Count Output 11]"
                  endId="Package\Get and Upload Vendors\Partition 4\Trash Destination 1.Inputs[TrashDestinationInput]"
                  name="Row Count Output 1"
                  startId="Package\Get and Upload Vendors\Partition 4\Row Count Success.Outputs[Row Count Output 1]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Get Auth Key"
      DTS:CreationName="ZappySys.RestApiTask"
      DTS:Description="ZS REST API Task"
      DTS:DTSID="{EACACEB5-C6A1-41E5-96FF-F598A460A2C3}"
      DTS:ExecutableType="ZappySys.RestApiTask"
      DTS:FailPackageOnFailure="True"
      DTS:LocaleID="-1"
      DTS:ObjectName="Get Auth Key"
      DTS:TaskContact="REST API Task; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <RestApiTask
          RequestAccessMode="UrlFromVariable"
          RequestUrlVariable="User::PackageRosieURL"
          EnableStatusCheck="False"
          StatucCheckMaxWaitSeconds="0"
          StatucCheckIterationWaitSeconds="0"
          StatusCheckForFailedValue="False"
          StatusSuccessValue=""
          StatusFailedValue=""
          IsMultiPartUpload="False"
          PreventAutoRedirect="False"
          RequestTimeoutMs="0"
          SecurityProtocol="Default"
          EnableCompressionSupport="True"
          AllowUnsecureSuite="False"
          IgnoreCertificateErrors="False"
          RequestUrl="https://api.rexsoftware.com/rex.php "
          RequestUrlConnection=""
          RequestMethod="POST"
          RequestContentType="Raw"
          OverrideConnectionUrl="False"
          RequestHeaders="&lt;request&gt;&lt;header&gt;&lt;name&gt;Accept&lt;/name&gt;&lt;value&gt;*/*&lt;/value&gt;&lt;/header&gt;&lt;header&gt;&lt;name&gt;Cache-Control&lt;/name&gt;&lt;value&gt;no-cache&lt;/value&gt;&lt;/header&gt;&lt;/request&gt;"
          RequestData="{&#xA;&quot;method&quot;:&quot;Authentication::login&quot;,&#xA;&quot;args&quot;:{&#xA;&quot;email&quot;:&quot;{{User::PackageUsername}}&quot;,&#xA;&quot;password&quot;:&quot;{{User::PackagePassword}}&quot;,&#xA;&quot;account_id&quot;:&quot;{{$Package::RexAccountID}}&quot;,&#xA;&quot;application&quot;:&quot;rex&quot;&#xA;}&#xA;}"
          SaveResponse="True"
          SaveResponseStatusCode="True"
          ResponseAccessMode="Variable"
          SaveAsBinary="False"
          ResponseDataFilePath=""
          ResponseHeaderMappings="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-16&quot;?&gt;&lt;ArrayOfKeyValueMapping xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot;&gt;&lt;KeyValueMapping&gt;&lt;Key&gt;Transfer-Encoding&lt;/Key&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;/KeyValueMapping&gt;&lt;KeyValueMapping&gt;&lt;Key&gt;Connection&lt;/Key&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;/KeyValueMapping&gt;&lt;KeyValueMapping&gt;&lt;Key&gt;Access-Control-Allow-Origin&lt;/Key&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;/KeyValueMapping&gt;&lt;KeyValueMapping&gt;&lt;Key&gt;Access-Control-Allow-Headers&lt;/Key&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;/KeyValueMapping&gt;&lt;KeyValueMapping&gt;&lt;Key&gt;Access-Control-Allow-Methods&lt;/Key&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;/KeyValueMapping&gt;&lt;KeyValueMapping&gt;&lt;Key&gt;Access-Control-Max-Age&lt;/Key&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;/KeyValueMapping&gt;&lt;KeyValueMapping&gt;&lt;Key&gt;Vary&lt;/Key&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;/KeyValueMapping&gt;&lt;KeyValueMapping&gt;&lt;Key&gt;Content-Encoding&lt;/Key&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;/KeyValueMapping&gt;&lt;KeyValueMapping&gt;&lt;Key&gt;Content-Type&lt;/Key&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;/KeyValueMapping&gt;&lt;KeyValueMapping&gt;&lt;Key&gt;Date&lt;/Key&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;/KeyValueMapping&gt;&lt;KeyValueMapping&gt;&lt;Key&gt;Server&lt;/Key&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;/KeyValueMapping&gt;&lt;/ArrayOfKeyValueMapping&gt;"
          ResponseCookieMappings="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-16&quot;?&gt;&lt;ArrayOfKeyValueMapping xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; /&gt;"
          CookieContainerVariable=""
          ConvertXmlToJson="False"
          ResponseDataVariable="User::APIToken"
          ResponseStatusCodeVariable="User::ResponseAuthCode"
          ResponseContentType="Json"
          ResponseContentFilter="$.result"
          ResponseCharset=""
          ValidateResponse="False"
          ValidationRules="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-16&quot;?&gt;&lt;ResponseValidationSetting xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot;&gt;&lt;MatchAny&gt;false&lt;/MatchAny&gt;&lt;Rules&gt;&lt;ResponseValidationRule xsi:type=&quot;StatusCodeValidationRule&quot;&gt;&lt;Enabled&gt;false&lt;/Enabled&gt;&lt;Operator&gt;Eq&lt;/Operator&gt;&lt;StatusCode&gt;200&lt;/StatusCode&gt;&lt;/ResponseValidationRule&gt;&lt;ResponseValidationRule xsi:type=&quot;ContentValidationRule&quot;&gt;&lt;Enabled&gt;false&lt;/Enabled&gt;&lt;Operator&gt;Eq&lt;/Operator&gt;&lt;Value /&gt;&lt;/ResponseValidationRule&gt;&lt;ResponseValidationRule xsi:type=&quot;HeaderValidationRule&quot;&gt;&lt;Enabled&gt;false&lt;/Enabled&gt;&lt;Operator&gt;Eq&lt;/Operator&gt;&lt;KeyName /&gt;&lt;Value /&gt;&lt;DataType&gt;String&lt;/DataType&gt;&lt;/ResponseValidationRule&gt;&lt;/Rules&gt;&lt;/ResponseValidationSetting&gt;"
          ConsumeResponseOnError="False"
          ContineOnAnyError="False"
          ContineOnErrorForMessage="False"
          ContineOnErrorForStatusCode="False"
          ErrorStatusCodeToMatch="404"
          MatchForEqual="True"
          ErrorSubstringToMatch=""
          ContineOn404Error="False"
          SaveErrorFlagToVariable="False"
          ErrorFlagVariableName=""
          LogLevel="Normal"
          PrefixTimestamp="False" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Get Last Run Dates"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{3BA58249-281E-4C86-A616-5FA9B10B8717}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Get Last Run Dates"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{1ACC4D99-A047-44CB-AAAD-088F42F69A23}"
          SQLTask:SqlStatementSource="IF NOT EXISTS (&#xA;    SELECT NULL FROM dbo.PackageLastRun WHERE PackageName = 'ContactVendorPush' AND AccountId = ?&#xA;)&#xA;BEGIN&#xA;    INSERT INTO dbo.PackageLastRun&#xA;    VALUES ('ContactVendorPush', ?, '2010-01-01', GETDATE())&#xA;END&#xA;&#xA;SELECT GETDATE() AS NextRunTime,&#xA; DATEDIFF(SECOND, '19700101', LastRunTime) AS LastRunTime&#xA;FROM dbo.PackageLastRun&#xA;WHERE PackageName = 'ContactVendorPush' AND AccountId = ?"
          SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ResultBinding
            SQLTask:ResultName="NextRunTime"
            SQLTask:DtsVariableName="User::PackageStartForNextRun" />
          <SQLTask:ResultBinding
            SQLTask:ResultName="LastRunTime"
            SQLTask:DtsVariableName="User::ProcessingStart" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="@AccountID"
            SQLTask:DtsVariableName="$Package::RexAccountID"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="3"
            SQLTask:ParameterSize="-1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="@AccountID"
            SQLTask:DtsVariableName="$Package::RexAccountID"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="3"
            SQLTask:ParameterSize="-1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="@AccountID"
            SQLTask:DtsVariableName="$Package::RexAccountID"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="3"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Insert success log into database"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{69EE0CC0-3E38-4163-9645-94FF990972B3}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Insert success log into database"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{1ACC4D99-A047-44CB-AAAD-088F42F69A23}"
          SQLTask:SqlStatementSource="INSERT INTO SSISSuccessLog&#xA;(PackageName, StartTime, Ignored, Upserted, Failed, AccountID,endtime)&#xA;VALUES&#xA;(?, ?, 0, ?, ?, ?,getdate())" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="@PackageName"
            SQLTask:DtsVariableName="System::PackageName"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="129"
            SQLTask:ParameterSize="-1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="@StartTime"
            SQLTask:DtsVariableName="System::StartTime"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="7"
            SQLTask:ParameterSize="-1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="@Upserted"
            SQLTask:DtsVariableName="User::RecCountSuccess"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="3"
            SQLTask:ParameterSize="-1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="@Failed"
            SQLTask:DtsVariableName="User::RecCountFailed"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="3"
            SQLTask:ParameterSize="-1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="@AccountID"
            SQLTask:DtsVariableName="$Package::RexAccountID"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="3"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Prepare Data"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{b6b65b69-e67f-4ab7-8d6e-0997b99266b0}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Prepare Data"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{78432CA1-1FEA-4ED4-9C0F-D552A4A9DE0E}"
          SQLTask:SqlStatementSource="exec [ROSIE_uspGetVendorContacts] ?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="@office_id"
            SQLTask:DtsVariableName="$Package::PackageOfficeID"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="129"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Set SSIS Variables From XML"
      DTS:CreationName="ZappySys.XmlParserTask"
      DTS:Description="ZS Xml Parser Task"
      DTS:DTSID="{AC087073-D7D3-4C32-B731-3AF02CDBEB18}"
      DTS:ExecutableType="ZappySys.XmlParserTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Set SSIS Variables From XML"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <XmlParserTask
          SourceAccessMode="Connection"
          SourceVariable=""
          SourceConnection="{3333B180-AD35-4F8E-BEBB-710B2190619D}"
          SourceDirectValue="&lt;!-- &#xA;Using XML Parser Task you can extract values from XML document using XPath Expression &#xA;See example in below grid. Read description for each mapping.&#xA;See more examples: https://msdn.microsoft.com/en-us/library/ms256086(v=vs.110).aspx&#xA;--&gt;&#xA;&lt;catalog&gt;&#xA;   &lt;book id=&quot;bk101&quot;&gt;&#xA;      &lt;author&gt;Gambardella, Matthew&lt;/author&gt;&#xA;      &lt;title&gt;XML Developer's Guide&lt;/title&gt;&#xA;      &lt;genre&gt;Computer&lt;/genre&gt;&#xA;      &lt;price&gt;44.95&lt;/price&gt;&#xA;      &lt;publish_date&gt;2000-10-01&lt;/publish_date&gt;&#xA;      &lt;description&gt;An in-depth look at creating applications &#xA;      with XML.&lt;/description&gt;&#xA;   &lt;/book&gt;&#xA;   &lt;book id=&quot;bk102&quot;&gt;&#xA;      &lt;author&gt;Ralls, Kim&lt;/author&gt;&#xA;      &lt;title&gt;Midnight Rain&lt;/title&gt;&#xA;      &lt;genre&gt;Fantasy&lt;/genre&gt;&#xA;      &lt;price&gt;5.95&lt;/price&gt;&#xA;      &lt;publish_date&gt;2000-12-16&lt;/publish_date&gt;&#xA;      &lt;description&gt;A former architect battles corporate zombies, &#xA;      an evil sorceress, and her own childhood to become queen &#xA;      of the world.&lt;/description&gt;&#xA;   &lt;/book&gt;&#xA;   &lt;book id=&quot;bk103&quot;&gt;&#xA;      &lt;author&gt;Corets, Eva&lt;/author&gt;&#xA;      &lt;title&gt;Maeve Ascendant&lt;/title&gt;&#xA;      &lt;genre&gt;Fantasy&lt;/genre&gt;&#xA;      &lt;price&gt;5.95&lt;/price&gt;&#xA;      &lt;publish_date&gt;2000-11-17&lt;/publish_date&gt;&#xA;      &lt;description&gt;After the collapse of a nanotechnology &#xA;      society in England, the young survivors lay the &#xA;      foundation for a new society.&lt;/description&gt;&#xA;   &lt;/book&gt;&#xA;   &lt;book id=&quot;bk104&quot;&gt;&#xA;      &lt;author&gt;Corets, Eva&lt;/author&gt;&#xA;      &lt;title&gt;Oberon's Legacy&lt;/title&gt;&#xA;      &lt;genre&gt;Fantasy&lt;/genre&gt;&#xA;      &lt;price&gt;5.95&lt;/price&gt;&#xA;      &lt;publish_date&gt;2001-03-10&lt;/publish_date&gt;&#xA;      &lt;description&gt;In post-apocalypse England, the mysterious &#xA;      agent known only as Oberon helps to create a new life &#xA;      for the inhabitants of London. Sequel to Maeve &#xA;      Ascendant.&lt;/description&gt;&#xA;   &lt;/book&gt;&#xA;&lt;/catalog&gt;"
          TargetSettings="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-16&quot;?&gt;&lt;XmlParserSetting xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot;&gt;&lt;Mappings&gt;&lt;XmlParserMapping&gt;&lt;Path&gt;/SSISVariables/RexAPIWebURL&lt;/Path&gt;&lt;Target&gt;User::PackageRosieURL&lt;/Target&gt;&lt;Required&gt;true&lt;/Required&gt;&lt;Description /&gt;&lt;/XmlParserMapping&gt;&lt;XmlParserMapping&gt;&lt;Path&gt; /SSISVariables/PackageUser&lt;/Path&gt;&lt;Target&gt;User::PackageUsername&lt;/Target&gt;&lt;Required&gt;true&lt;/Required&gt;&lt;Description /&gt;&lt;/XmlParserMapping&gt;&lt;XmlParserMapping&gt;&lt;Path&gt;/SSISVariables/PackageErrorEmail&lt;/Path&gt;&lt;Target&gt;User::PackageErrorEmail&lt;/Target&gt;&lt;Required&gt;true&lt;/Required&gt;&lt;Description /&gt;&lt;/XmlParserMapping&gt;&lt;XmlParserMapping&gt;&lt;Path&gt;/SSISVariables/PackagePassword&lt;/Path&gt;&lt;Target&gt;User::PackagePassword&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;Description /&gt;&lt;/XmlParserMapping&gt;&lt;/Mappings&gt;&lt;Path /&gt;&lt;/XmlParserSetting&gt;"
          LogLevel="Normal"
          PrefixTimestamp="False" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Update Last Run Dates"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{092857C3-B15C-441C-886E-A4558ECB4D9C}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Update Last Run Dates"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{1ACC4D99-A047-44CB-AAAD-088F42F69A23}"
          SQLTask:SqlStatementSource="UPDATE dbo.PackageLastRun&#xA;SET LastRunTime = ?&#xA;WHERE PackageName = 'ContactVendorPush'&#xA; AND AccountId = ?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="@LastRunDate"
            SQLTask:DtsVariableName="User::PackageStartForNextRun"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="7"
            SQLTask:ParameterSize="-1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="@AccountID"
            SQLTask:DtsVariableName="$Package::RexAccountID"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="3"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{D2E9C25F-A649-4009-A9CD-945AEDE1E659}"
      DTS:From="Package\Get Auth Key"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Email Auth Failure"
      DTS:Value="1" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{CCEF6D29-3E72-412A-A7DC-DDD6E1301D85}"
      DTS:From="Package\Get Auth Key"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Get Last Run Dates" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{24DBC347-C312-4EF2-A209-5CFA7B867101}"
      DTS:From="Package\Set SSIS Variables From XML"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\Get Auth Key" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 3]"
      DTS:CreationName=""
      DTS:DTSID="{EEA3B884-4136-4A4F-B305-C5FCE0D2019D}"
      DTS:From="Package\Expression Task"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 3"
      DTS:To="Package\Update Last Run Dates" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 4]"
      DTS:CreationName=""
      DTS:DTSID="{8877A32D-37F7-4F5A-A5A5-FFDCBFD0505C}"
      DTS:From="Package\Get Last Run Dates"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 4"
      DTS:To="Package\Fix Customers" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 4 1]"
      DTS:CreationName=""
      DTS:DTSID="{44C703CE-4414-4E6A-BDF1-494EDB49BDB6}"
      DTS:From="Package\Update Last Run Dates"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 4 1"
      DTS:To="Package\Insert success log into database" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 5]"
      DTS:CreationName=""
      DTS:DTSID="{FAF00B1F-530D-4888-8622-37677C7E9AE7}"
      DTS:From="Package\Fix Customers"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 5"
      DTS:To="Package\Prepare Data" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 6]"
      DTS:CreationName=""
      DTS:DTSID="{030B750D-E1E7-4D79-B295-3530689A1F91}"
      DTS:From="Package\Prepare Data"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 6"
      DTS:To="Package\Get and Upload Vendors" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 7]"
      DTS:CreationName=""
      DTS:DTSID="{34129055-4F11-427F-A75D-A5F80387026F}"
      DTS:From="Package\Get and Upload Vendors"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 7"
      DTS:To="Package\Clear Staging Table" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 8]"
      DTS:CreationName=""
      DTS:DTSID="{05983882-E62E-4B81-B9C8-B312B19807D2}"
      DTS:From="Package\Clear Staging Table"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 8"
      DTS:To="Package\Expression Task" />
  </DTS:PrecedenceConstraints>
  <DTS:EventHandlers>
    <DTS:EventHandler
      DTS:refId="Package.EventHandlers[OnError]"
      DTS:CreationName="OnError"
      DTS:DTSID="{E2430E57-77F2-40D9-BA68-B8EB9BDE7F59}"
      DTS:EventID="100663302"
      DTS:EventName="OnError"
      DTS:LocaleID="-1">
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="The propagate property of the event"
          DTS:DTSID="{98A54177-89B4-4D4B-9AC1-395F462C5898}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="System"
          DTS:ObjectName="Propagate">
          <DTS:VariableValue
            DTS:DataType="11">-1</DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnError]\Email error"
          DTS:CreationName="ZappySys.HtmlEmailTask"
          DTS:Description="Email Auth Failure"
          DTS:DTSID="{748D1883-5A3C-4A74-9E28-B99B7437FA44}"
          DTS:ExecutableType="ZappySys.HtmlEmailTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Email error"
          DTS:TaskContact="HTML Email Task; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support">
          <DTS:Variables />
          <DTS:ObjectData>
            <HtmlEmailTask
              SmtpConnection="SMTP"
              IsHtmlEmail="True"
              DefaultStyle="&#xA;&lt;style type=&quot;text/css&quot;&gt;&#xA;body,div,p,span,td,th,table {&#xA; font-family: Helvetica, Arial, sans-serif;&#xA; font-size: 10pt; &#xA;}&#xA;h1,h2,h3,h4,h5{&#xA;font-family: Helvetica, Arial, sans-serif;&#xA;}&#xA;&#xA;table { &#xA; border-collapse: &#xA; collapse; border-spacing: 0; &#xA;}&#xA;&#xA;tr.odd    {background-color: #cccccc}&#xA;tr.even   {background-color: #fafafa}&#xA;td, th { border: 1px solid #bbb;padding: 5 5 5 5} &#xA;th { background: #F3F3F3;  font-weight: bold;}&#xA;&lt;/style&gt;&#xA;&#xA;"
              Subject="Error occured in {{System::PackageName}}"
              From="alerts@spicerhaart.co.uk"
              To="{{User::PackageErrorEmail}}"
              Cc=""
              ReplyTo=""
              Bcc=""
              Attachments=""
              EmailPriority="High"
              MessageSourceType="Direct"
              MessageDirectValue="&lt;p&gt;Error occured and could not be logged in database&lt;p /&gt;&#xA;&lt;br&gt;&#xA;&lt;p&gt;Error code: {{System::ErrorCode}}&lt;p /&gt;&#xA;&lt;br&gt;&#xA;&lt;p&gt;Error message: {{System::ErrorDescription}}&lt;p /&gt;"
              MessageFileConnection=""
              MessageVariable=""
              LogLevel="Normal"
              PrefixTimestamp="False" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnError]\Insert error log into database"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{EDEB466B-F39E-4BD2-9A3B-AFB54EAA73F5}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Insert error log into database"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{1ACC4D99-A047-44CB-AAAD-088F42F69A23}"
              SQLTask:SqlStatementSource="INSERT INTO SSISErrorLog&#xA;(PackageName, StartTime, ErrorCode, ErrorDescription,AccountID)&#xA;VALUES&#xA;(?, ?, ?, ?, ?)" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@PackageName"
                SQLTask:DtsVariableName="System::PackageName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@StartTime"
                SQLTask:DtsVariableName="System::StartTime"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="7"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@ErrorCode"
                SQLTask:DtsVariableName="System::ErrorCode"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@ErrorDescription"
                SQLTask:DtsVariableName="System::ErrorDescription"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@AccountID"
                SQLTask:DtsVariableName="$Package::RexAccountID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package.EventHandlers[OnError].PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{5FEF5627-BC88-4F79-9202-70617C440893}"
          DTS:From="Package.EventHandlers[OnError]\Insert error log into database"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package.EventHandlers[OnError]\Email error"
          DTS:Value="1" />
      </DTS:PrecedenceConstraints>
    </DTS:EventHandler>
    <DTS:EventHandler
      DTS:refId="Package.EventHandlers[OnTaskFailed]"
      DTS:CreationName="OnTaskFailed"
      DTS:DTSID="{42A535FE-EA12-4747-B9D9-DC1D7668CB66}"
      DTS:EventID="5242996"
      DTS:EventName="OnTaskFailed"
      DTS:LocaleID="-1">
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="The propagate property of the event"
          DTS:DTSID="{E0F46685-5ED8-4E35-8D92-D39EEE869212}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="System"
          DTS:ObjectName="Propagate">
          <DTS:VariableValue
            DTS:DataType="11">-1</DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnTaskFailed]\Email error"
          DTS:CreationName="ZappySys.HtmlEmailTask"
          DTS:Description="Email Auth Failure"
          DTS:DTSID="{D4132181-927B-45A2-A61E-0F55D99F7E48}"
          DTS:ExecutableType="ZappySys.HtmlEmailTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Email error"
          DTS:TaskContact="HTML Email Task; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support">
          <DTS:Variables />
          <DTS:ObjectData>
            <HtmlEmailTask
              SmtpConnection="SMTP"
              IsHtmlEmail="True"
              DefaultStyle="&#xA;&lt;style type=&quot;text/css&quot;&gt;&#xA;body,div,p,span,td,th,table {&#xA; font-family: Helvetica, Arial, sans-serif;&#xA; font-size: 10pt; &#xA;}&#xA;h1,h2,h3,h4,h5{&#xA;font-family: Helvetica, Arial, sans-serif;&#xA;}&#xA;&#xA;table { &#xA; border-collapse: &#xA; collapse; border-spacing: 0; &#xA;}&#xA;&#xA;tr.odd    {background-color: #cccccc}&#xA;tr.even   {background-color: #fafafa}&#xA;td, th { border: 1px solid #bbb;padding: 5 5 5 5} &#xA;th { background: #F3F3F3;  font-weight: bold;}&#xA;&lt;/style&gt;&#xA;&#xA;"
              Subject="Error occured in {{System::PackageName}}"
              From="alerts@spicerhaart.co.uk"
              To="{{User::PackageErrorEmail}}"
              Cc=""
              ReplyTo=""
              Bcc=""
              Attachments=""
              EmailPriority="High"
              MessageSourceType="Direct"
              MessageDirectValue="&lt;p&gt;Error occured and could not be logged in database&lt;p /&gt;&#xA;&lt;br&gt;&#xA;&lt;p&gt;Error code: 0&lt;p /&gt;&#xA;&lt;br&gt;&#xA;&lt;p&gt;Error message: {{System::FailedConfigurations}}&lt;p /&gt;"
              MessageFileConnection=""
              MessageVariable=""
              LogLevel="Normal"
              PrefixTimestamp="False" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnTaskFailed]\Insert error log into database"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{FE3277E2-0ADA-4E3B-9B2C-F1C559A43A03}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Insert error log into database"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{1ACC4D99-A047-44CB-AAAD-088F42F69A23}"
              SQLTask:SqlStatementSource="INSERT INTO SSISErrorLog&#xA;(PackageName, StartTime, ErrorCode, ErrorDescription,AccountID)&#xA;VALUES&#xA;(?, ?, 0, ?, ?)" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@PackageName"
                SQLTask:DtsVariableName="System::PackageName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@StartTime"
                SQLTask:DtsVariableName="System::StartTime"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="7"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@ErrorDescription"
                SQLTask:DtsVariableName="System::FailedConfigurations"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@AccountID"
                SQLTask:DtsVariableName="$Package::RexAccountID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package.EventHandlers[OnTaskFailed].PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{B1B459D8-8DAF-4E37-80E1-DE2F5B7BDDCA}"
          DTS:From="Package.EventHandlers[OnTaskFailed]\Insert error log into database"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package.EventHandlers[OnTaskFailed]\Email error"
          DTS:Value="1" />
      </DTS:PrecedenceConstraints>
    </DTS:EventHandler>
  </DTS:EventHandlers>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="171,42"
          Id="Package\Clear Staging Table"
          TopLeft="271,721.5" />
        <NodeLayout
          Size="164,42"
          Id="Package\Email Auth Failure"
          TopLeft="46.5,209.5" />
        <NodeLayout
          Size="155,42"
          Id="Package\Expression Task"
          TopLeft="279,823.5" />
        <NodeLayout
          Size="145,42"
          Id="Package\Fix Customers"
          TopLeft="284,311.5" />
        <NodeLayout
          Size="127,42"
          Id="Package\Get and Upload Vendors\Partition 1"
          TopLeft="5.5,5.5" />
        <NodeLayout
          Size="127,42"
          Id="Package\Get and Upload Vendors\Partition 2"
          TopLeft="193.5,5.49999999999989" />
        <NodeLayout
          Size="127,42"
          Id="Package\Get and Upload Vendors\Partition 3"
          TopLeft="381.5,5.49999999999989" />
        <NodeLayout
          Size="127,42"
          Id="Package\Get and Upload Vendors\Partition 4"
          TopLeft="569.5,5.49999999999989" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="702,103"
          Size="702,146"
          Id="Package\Get and Upload Vendors"
          TopLeft="5.50000000000006,515.5" />
        <NodeLayout
          Size="141,42"
          Id="Package\Get Auth Key"
          TopLeft="286,107.5" />
        <NodeLayout
          Size="170,42"
          Id="Package\Get Last Run Dates"
          TopLeft="271.5,209.5" />
        <NodeLayout
          Size="230,42"
          Id="Package\Insert success log into database"
          TopLeft="241.5,1027.5" />
        <NodeLayout
          Size="141,42"
          Id="Package\Prepare Data"
          TopLeft="286,413.5" />
        <NodeLayout
          Size="216,42"
          Id="Package\Set SSIS Variables From XML"
          TopLeft="248.5,5.5" />
        <NodeLayout
          Size="187,42"
          Id="Package\Update Last Run Dates"
          TopLeft="263,925.5" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="334.333333333333,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-205.833333333333,60"
              Start="0,0"
              End="-205.833333333333,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.4039270687237" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.4039270687237"
                    Point2="0,24.4039270687237"
                    Point3="-4,24.4039270687237" />
                  <mssgle:LineSegment
                    End="-201.833333333333,24.4039270687237" />
                  <mssgle:CubicBezierSegment
                    Point1="-201.833333333333,24.4039270687237"
                    Point2="-205.833333333333,24.4039270687237"
                    Point3="-205.833333333333,28.4039270687237" />
                  <mssgle:LineSegment
                    End="-205.833333333333,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-118.158014322917,29.4039270687237,30.4826953125,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="378.666666666667,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-22.1666666666666,60"
              Start="0,0"
              End="-22.1666666666666,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.4039270687237" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.4039270687237"
                    Point2="0,24.4039270687237"
                    Point3="-4,24.4039270687237" />
                  <mssgle:LineSegment
                    End="-18.1666666666666,24.4039270687237" />
                  <mssgle:CubicBezierSegment
                    Point1="-18.1666666666666,24.4039270687237"
                    Point2="-22.1666666666666,24.4039270687237"
                    Point3="-22.1666666666666,28.4039270687237" />
                  <mssgle:LineSegment
                    End="-22.1666666666666,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="356.5,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 3]"
          TopLeft="356.5,865.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 4]"
          TopLeft="356.5,251.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 4 1]"
          TopLeft="356.5,967.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 5]"
          TopLeft="356.5,353.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 6]"
          TopLeft="356.5,455.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 7]"
          TopLeft="356.5,661.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 8]"
          TopLeft="356.5,763.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <DtsEventHandler
    design-time-name="Package.EventHandlers[OnError]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="131,42"
          Id="Package.EventHandlers[OnError]\Email error"
          TopLeft="NaN,NaN" />
        <NodeLayout
          Size="217,42"
          Id="Package.EventHandlers[OnError]\Insert error log into database"
          TopLeft="NaN,NaN" />
        <EdgeLayout
          Id="Package.EventHandlers[OnError].PrecedenceConstraints[Constraint]"
          TopLeft="NaN,NaN">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="{assembly:Null}"
              Start="0,0"
              End="0,0">
              <mssgle:Curve.Segments>
                <assembly:Null />
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,30.4826953125,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <DtsEventHandler
    design-time-name="Package.EventHandlers[OnTaskFailed]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="NaN,NaN"
          Id="Package.EventHandlers[OnTaskFailed]\Email error"
          TopLeft="NaN,NaN" />
        <NodeLayout
          Size="NaN,NaN"
          Id="Package.EventHandlers[OnTaskFailed]\Insert error log into database"
          TopLeft="NaN,NaN" />
        <EdgeLayout
          Id="Package.EventHandlers[OnTaskFailed].PrecedenceConstraints[Constraint]"
          TopLeft="NaN,NaN">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="{assembly:Null}"
              Start="0,0"
              End="0,0">
              <mssgle:Curve.Segments>
                <assembly:Null />
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <TaskHost
    design-time-name="Package\Get and Upload Vendors\Partition 1">
    <LayoutInfo>
      <GraphLayout
        Capacity="64" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="156,42"
          Id="Package\Get and Upload Vendors\Partition 1\Get Vendors List"
          TopLeft="755,5.5" />
        <NodeLayout
          Size="149,42"
          Id="Package\Get and Upload Vendors\Partition 1\Create Contact"
          TopLeft="758.5,311.5" />
        <NodeLayout
          Size="189,42"
          Id="Package\Get and Upload Vendors\Partition 1\Trash Destination 1 1 1"
          TopLeft="5.50000000000011,1433.5" />
        <NodeLayout
          Size="182,42"
          Id="Package\Get and Upload Vendors\Partition 1\Push ID Check Data 1"
          TopLeft="477,1229.5" />
        <NodeLayout
          Size="120,42"
          Id="Package\Get and Upload Vendors\Partition 1\Multicast"
          TopLeft="508,1127.5" />
        <NodeLayout
          Size="134,42"
          Id="Package\Get and Upload Vendors\Partition 1\Update RID"
          TopLeft="766,821.5" />
        <NodeLayout
          Size="171,42"
          Id="Package\Get and Upload Vendors\Partition 1\Row Count Success"
          TopLeft="747.5,923.5" />
        <NodeLayout
          Size="198,42"
          Id="Package\Get and Upload Vendors\Partition 1\Trash Destination 1 1 4 1"
          TopLeft="469,1331.5" />
        <NodeLayout
          Size="148,42"
          Id="Package\Get and Upload Vendors\Partition 1\Replace Token"
          TopLeft="759,209.5" />
        <NodeLayout
          Size="198,42"
          Id="Package\Get and Upload Vendors\Partition 1\Trash Destination 1 1 1 1"
          TopLeft="210,1331.5" />
        <NodeLayout
          Size="132,42"
          Id="Package\Get and Upload Vendors\Partition 1\Get Results"
          TopLeft="767,413.5" />
        <NodeLayout
          Size="155,42"
          Id="Package\Get and Upload Vendors\Partition 1\Conditional Split"
          TopLeft="231.5,1229.5" />
        <NodeLayout
          Size="180,42"
          Id="Package\Get and Upload Vendors\Partition 1\Trash Destination 1 1"
          TopLeft="728,1331.5" />
        <NodeLayout
          Size="166,42"
          Id="Package\Get and Upload Vendors\Partition 1\Replace Token 1 1"
          TopLeft="521,923.5" />
        <NodeLayout
          Size="145,42"
          Id="Package\Get and Upload Vendors\Partition 1\Map Results 1"
          TopLeft="760.5,617.5" />
        <NodeLayout
          Size="171,42"
          Id="Package\Get and Upload Vendors\Partition 1\Trash Destination 1"
          TopLeft="747.5,1025.5" />
        <NodeLayout
          Size="238,42"
          Id="Package\Get and Upload Vendors\Partition 1\Replace Rid_contact and prop_ref"
          TopLeft="449,1025.5" />
        <NodeLayout
          Size="168,42"
          Id="Package\Get and Upload Vendors\Partition 1\Main Record Count"
          TopLeft="749,107.5" />
        <NodeLayout
          Size="170,42"
          Id="Package\Get and Upload Vendors\Partition 1\Push Custom Fields"
          TopLeft="720,1229.5" />
        <NodeLayout
          Size="113,42"
          Id="Package\Get and Upload Vendors\Partition 1\Lookup"
          TopLeft="592.5,821.5" />
        <NodeLayout
          Size="143,42"
          Id="Package\Get and Upload Vendors\Partition 1\Check Error 1"
          TopLeft="761.5,515.5" />
        <NodeLayout
          Size="99,42"
          Id="Package\Get and Upload Vendors\Partition 1\AML"
          TopLeft="50.5000000000001,1331.5" />
        <NodeLayout
          Size="130,42"
          Id="Package\Get and Upload Vendors\Partition 1\Multicast 1"
          TopLeft="768,719.5" />
        <EdgeLayout
          Id="Package\Get and Upload Vendors\Partition 1.Paths[Lookup Match Output]"
          TopLeft="649,863.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-45,60"
              Start="0,0"
              End="-45,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26" />
                  <mssgle:CubicBezierSegment
                    Point1="0,26"
                    Point2="0,30"
                    Point3="-4,30" />
                  <mssgle:LineSegment
                    End="-41,30" />
                  <mssgle:CubicBezierSegment
                    Point1="-41,30"
                    Point2="-45,30"
                    Point3="-45,34" />
                  <mssgle:LineSegment
                    End="-45,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-70.69138671875,35,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get and Upload Vendors\Partition 1.Paths[JsonParserTransformOutput]"
          TopLeft="833,455.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get and Upload Vendors\Partition 1.Paths[Do nothing]"
          TopLeft="333.5,1271.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-24.5,60"
              Start="0,0"
              End="-24.5,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.367816091954" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.367816091954"
                    Point2="0,24.367816091954"
                    Point3="-4,24.367816091954" />
                  <mssgle:LineSegment
                    End="-20.5,24.367816091954" />
                  <mssgle:CubicBezierSegment
                    Point1="-20.5,24.367816091954"
                    Point2="-24.5,24.367816091954"
                    Point3="-24.5,28.367816091954" />
                  <mssgle:LineSegment
                    End="-24.5,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-36.88298828125,29.367816091954,49.2659765625,11.6630859375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get and Upload Vendors\Partition 1.Paths[Derived Column Output3]"
          TopLeft="833,659.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get and Upload Vendors\Partition 1.Paths[Derived Column Output2]"
          TopLeft="833,251.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get and Upload Vendors\Partition 1.Paths[Derived Column Output1]"
          TopLeft="604,965.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-36,60"
              Start="0,0"
              End="-36,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26" />
                  <mssgle:CubicBezierSegment
                    Point1="0,26"
                    Point2="0,30"
                    Point3="-4,30" />
                  <mssgle:LineSegment
                    End="-32,30" />
                  <mssgle:CubicBezierSegment
                    Point1="-32,30"
                    Point2="-36,30"
                    Point3="-36,34" />
                  <mssgle:LineSegment
                    End="-36,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get and Upload Vendors\Partition 1.Paths[Derived Column Output]"
          TopLeft="568,1067.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get and Upload Vendors\Partition 1.Paths[Row Count Output 11]"
          TopLeft="833,965.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get and Upload Vendors\Partition 1.Paths[Row Count Output 1]"
          TopLeft="833,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get and Upload Vendors\Partition 1.Paths[Response Output3]"
          TopLeft="833,353.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get and Upload Vendors\Partition 1.Paths[Response Output2]"
          TopLeft="805,1271.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="13,60"
              Start="0,0"
              End="13,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26" />
                  <mssgle:CubicBezierSegment
                    Point1="0,26"
                    Point2="0,30"
                    Point3="4,30" />
                  <mssgle:LineSegment
                    End="9,30" />
                  <mssgle:CubicBezierSegment
                    Point1="9,30"
                    Point2="13,30"
                    Point3="13,34" />
                  <mssgle:LineSegment
                    End="13,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get and Upload Vendors\Partition 1.Paths[Response Output1]"
          TopLeft="100,1373.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get and Upload Vendors\Partition 1.Paths[Response Output]"
          TopLeft="568,1271.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get and Upload Vendors\Partition 1.Paths[OLE DB Source Output]"
          TopLeft="833,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get and Upload Vendors\Partition 1.Paths[OLE DB Command Output]"
          TopLeft="833,863.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get and Upload Vendors\Partition 1.Paths[No Error]"
          TopLeft="833,557.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-19.14369140625,21.5390625,38.2873828125,9.421875"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get and Upload Vendors\Partition 1.Paths[Need To Flag AML]"
          TopLeft="284.5,1271.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-184.5,60"
              Start="0,0"
              End="-184.5,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.367816091954" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.367816091954"
                    Point2="0,24.367816091954"
                    Point3="-4,24.367816091954" />
                  <mssgle:LineSegment
                    End="-180.5,24.367816091954" />
                  <mssgle:CubicBezierSegment
                    Point1="-180.5,24.367816091954"
                    Point2="-184.5,24.367816091954"
                    Point3="-184.5,28.367816091954" />
                  <mssgle:LineSegment
                    End="-184.5,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-133.04193359375,29.367816091954,81.5838671875,11.6630859375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get and Upload Vendors\Partition 1.Paths[Multicast Output 31]"
          TopLeft="540,1169.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-231,60"
              Start="0,0"
              End="-231,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.8695652173913" />
                  <mssgle:CubicBezierSegment
                    Point1="0,16.8695652173913"
                    Point2="0,20.8695652173913"
                    Point3="-4,20.8695652173913" />
                  <mssgle:LineSegment
                    End="-227,20.8695652173913" />
                  <mssgle:CubicBezierSegment
                    Point1="-227,20.8695652173913"
                    Point2="-231,20.8695652173913"
                    Point3="-231,24.8695652173913" />
                  <mssgle:LineSegment
                    End="-231,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get and Upload Vendors\Partition 1.Paths[Multicast Output 3]"
          TopLeft="812.666666666667,761.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-163.666666666667,60"
              Start="0,0"
              End="-163.666666666667,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.4376899696049" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.4376899696049"
                    Point2="0,24.4376899696049"
                    Point3="-4,24.4376899696049" />
                  <mssgle:LineSegment
                    End="-159.666666666667,24.4376899696049" />
                  <mssgle:CubicBezierSegment
                    Point1="-159.666666666667,24.4376899696049"
                    Point2="-163.666666666667,24.4376899696049"
                    Point3="-163.666666666667,28.4376899696049" />
                  <mssgle:LineSegment
                    End="-163.666666666667,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get and Upload Vendors\Partition 1.Paths[Multicast Output 2]"
          TopLeft="568,1169.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get and Upload Vendors\Partition 1.Paths[Multicast Output 11]"
          TopLeft="853.333333333333,761.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-20.3333333333334,60"
              Start="0,0"
              End="-20.3333333333334,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.4376899696049" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.4376899696049"
                    Point2="0,24.4376899696049"
                    Point3="-4,24.4376899696049" />
                  <mssgle:LineSegment
                    End="-16.3333333333334,24.4376899696049" />
                  <mssgle:CubicBezierSegment
                    Point1="-16.3333333333334,24.4376899696049"
                    Point2="-20.3333333333334,24.4376899696049"
                    Point3="-20.3333333333334,28.4376899696049" />
                  <mssgle:LineSegment
                    End="-20.3333333333334,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get and Upload Vendors\Partition 1.Paths[Multicast Output 1]"
          TopLeft="596,1169.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="209,60"
              Start="0,0"
              End="209,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.8695652173913" />
                  <mssgle:CubicBezierSegment
                    Point1="0,16.8695652173913"
                    Point2="0,20.8695652173913"
                    Point3="4,20.8695652173913" />
                  <mssgle:LineSegment
                    End="205,20.8695652173913" />
                  <mssgle:CubicBezierSegment
                    Point1="205,20.8695652173913"
                    Point2="209,20.8695652173913"
                    Point3="209,24.8695652173913" />
                  <mssgle:LineSegment
                    End="209,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Get and Upload Vendors\Partition 1\Lookup">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:boolean">false</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Get and Upload Vendors\Partition 2">
    <LayoutInfo>
      <GraphLayout
        Capacity="64" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="156,42"
          Id="Package\Get and Upload Vendors\Partition 2\Get Vendors List"
          TopLeft="755,5.5" />
        <NodeLayout
          Size="149,42"
          Id="Package\Get and Upload Vendors\Partition 2\Create Contact"
          TopLeft="758.5,311.5" />
        <NodeLayout
          Size="189,42"
          Id="Package\Get and Upload Vendors\Partition 2\Trash Destination 1 1 1"
          TopLeft="5.50000000000011,1433.5" />
        <NodeLayout
          Size="182,42"
          Id="Package\Get and Upload Vendors\Partition 2\Push ID Check Data 1"
          TopLeft="477,1229.5" />
        <NodeLayout
          Size="120,42"
          Id="Package\Get and Upload Vendors\Partition 2\Multicast"
          TopLeft="508,1127.5" />
        <NodeLayout
          Size="134,42"
          Id="Package\Get and Upload Vendors\Partition 2\Update RID"
          TopLeft="766,821.5" />
        <NodeLayout
          Size="171,42"
          Id="Package\Get and Upload Vendors\Partition 2\Row Count Success"
          TopLeft="747.5,923.5" />
        <NodeLayout
          Size="198,42"
          Id="Package\Get and Upload Vendors\Partition 2\Trash Destination 1 1 4 1"
          TopLeft="469,1331.5" />
        <NodeLayout
          Size="148,42"
          Id="Package\Get and Upload Vendors\Partition 2\Replace Token"
          TopLeft="759,209.5" />
        <NodeLayout
          Size="198,42"
          Id="Package\Get and Upload Vendors\Partition 2\Trash Destination 1 1 1 1"
          TopLeft="210,1331.5" />
        <NodeLayout
          Size="132,42"
          Id="Package\Get and Upload Vendors\Partition 2\Get Results"
          TopLeft="767,413.5" />
        <NodeLayout
          Size="155,42"
          Id="Package\Get and Upload Vendors\Partition 2\Conditional Split"
          TopLeft="231.5,1229.5" />
        <NodeLayout
          Size="180,42"
          Id="Package\Get and Upload Vendors\Partition 2\Trash Destination 1 1"
          TopLeft="728,1331.5" />
        <NodeLayout
          Size="166,42"
          Id="Package\Get and Upload Vendors\Partition 2\Replace Token 1 1"
          TopLeft="521,923.5" />
        <NodeLayout
          Size="145,42"
          Id="Package\Get and Upload Vendors\Partition 2\Map Results 1"
          TopLeft="760.5,617.5" />
        <NodeLayout
          Size="171,42"
          Id="Package\Get and Upload Vendors\Partition 2\Trash Destination 1"
          TopLeft="747.5,1025.5" />
        <NodeLayout
          Size="238,42"
          Id="Package\Get and Upload Vendors\Partition 2\Replace Rid_contact and prop_ref"
          TopLeft="449,1025.5" />
        <NodeLayout
          Size="168,42"
          Id="Package\Get and Upload Vendors\Partition 2\Main Record Count"
          TopLeft="749,107.5" />
        <NodeLayout
          Size="170,42"
          Id="Package\Get and Upload Vendors\Partition 2\Push Custom Fields"
          TopLeft="720,1229.5" />
        <NodeLayout
          Size="113,42"
          Id="Package\Get and Upload Vendors\Partition 2\Lookup"
          TopLeft="592.5,821.5" />
        <NodeLayout
          Size="143,42"
          Id="Package\Get and Upload Vendors\Partition 2\Check Error 1"
          TopLeft="761.5,515.5" />
        <NodeLayout
          Size="99,42"
          Id="Package\Get and Upload Vendors\Partition 2\AML"
          TopLeft="50.5000000000001,1331.5" />
        <NodeLayout
          Size="130,42"
          Id="Package\Get and Upload Vendors\Partition 2\Multicast 1"
          TopLeft="768,719.5" />
        <EdgeLayout
          Id="Package\Get and Upload Vendors\Partition 2.Paths[Lookup Match Output]"
          TopLeft="649,863.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-45,60"
              Start="0,0"
              End="-45,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26" />
                  <mssgle:CubicBezierSegment
                    Point1="0,26"
                    Point2="0,30"
                    Point3="-4,30" />
                  <mssgle:LineSegment
                    End="-41,30" />
                  <mssgle:CubicBezierSegment
                    Point1="-41,30"
                    Point2="-45,30"
                    Point3="-45,34" />
                  <mssgle:LineSegment
                    End="-45,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-70.69138671875,35,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get and Upload Vendors\Partition 2.Paths[JsonParserTransformOutput]"
          TopLeft="833,455.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get and Upload Vendors\Partition 2.Paths[Do nothing]"
          TopLeft="333.5,1271.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-24.5,60"
              Start="0,0"
              End="-24.5,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.367816091954" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.367816091954"
                    Point2="0,24.367816091954"
                    Point3="-4,24.367816091954" />
                  <mssgle:LineSegment
                    End="-20.5,24.367816091954" />
                  <mssgle:CubicBezierSegment
                    Point1="-20.5,24.367816091954"
                    Point2="-24.5,24.367816091954"
                    Point3="-24.5,28.367816091954" />
                  <mssgle:LineSegment
                    End="-24.5,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-36.88298828125,29.367816091954,49.2659765625,11.6630859375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get and Upload Vendors\Partition 2.Paths[Derived Column Output3]"
          TopLeft="833,659.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get and Upload Vendors\Partition 2.Paths[Derived Column Output2]"
          TopLeft="833,251.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get and Upload Vendors\Partition 2.Paths[Derived Column Output1]"
          TopLeft="604,965.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-36,60"
              Start="0,0"
              End="-36,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26" />
                  <mssgle:CubicBezierSegment
                    Point1="0,26"
                    Point2="0,30"
                    Point3="-4,30" />
                  <mssgle:LineSegment
                    End="-32,30" />
                  <mssgle:CubicBezierSegment
                    Point1="-32,30"
                    Point2="-36,30"
                    Point3="-36,34" />
                  <mssgle:LineSegment
                    End="-36,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get and Upload Vendors\Partition 2.Paths[Derived Column Output]"
          TopLeft="568,1067.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get and Upload Vendors\Partition 2.Paths[Row Count Output 11]"
          TopLeft="833,965.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get and Upload Vendors\Partition 2.Paths[Row Count Output 1]"
          TopLeft="833,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get and Upload Vendors\Partition 2.Paths[Response Output3]"
          TopLeft="833,353.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get and Upload Vendors\Partition 2.Paths[Response Output2]"
          TopLeft="805,1271.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="13,60"
              Start="0,0"
              End="13,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26" />
                  <mssgle:CubicBezierSegment
                    Point1="0,26"
                    Point2="0,30"
                    Point3="4,30" />
                  <mssgle:LineSegment
                    End="9,30" />
                  <mssgle:CubicBezierSegment
                    Point1="9,30"
                    Point2="13,30"
                    Point3="13,34" />
                  <mssgle:LineSegment
                    End="13,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get and Upload Vendors\Partition 2.Paths[Response Output1]"
          TopLeft="100,1373.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get and Upload Vendors\Partition 2.Paths[Response Output]"
          TopLeft="568,1271.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get and Upload Vendors\Partition 2.Paths[OLE DB Source Output]"
          TopLeft="833,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get and Upload Vendors\Partition 2.Paths[OLE DB Command Output]"
          TopLeft="833,863.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get and Upload Vendors\Partition 2.Paths[No Error]"
          TopLeft="833,557.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-19.14369140625,21.5390625,38.2873828125,9.421875"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get and Upload Vendors\Partition 2.Paths[Need To Flag AML]"
          TopLeft="284.5,1271.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-184.5,60"
              Start="0,0"
              End="-184.5,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.367816091954" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.367816091954"
                    Point2="0,24.367816091954"
                    Point3="-4,24.367816091954" />
                  <mssgle:LineSegment
                    End="-180.5,24.367816091954" />
                  <mssgle:CubicBezierSegment
                    Point1="-180.5,24.367816091954"
                    Point2="-184.5,24.367816091954"
                    Point3="-184.5,28.367816091954" />
                  <mssgle:LineSegment
                    End="-184.5,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-133.04193359375,29.367816091954,81.5838671875,11.6630859375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get and Upload Vendors\Partition 2.Paths[Multicast Output 31]"
          TopLeft="540,1169.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-231,60"
              Start="0,0"
              End="-231,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.8695652173913" />
                  <mssgle:CubicBezierSegment
                    Point1="0,16.8695652173913"
                    Point2="0,20.8695652173913"
                    Point3="-4,20.8695652173913" />
                  <mssgle:LineSegment
                    End="-227,20.8695652173913" />
                  <mssgle:CubicBezierSegment
                    Point1="-227,20.8695652173913"
                    Point2="-231,20.8695652173913"
                    Point3="-231,24.8695652173913" />
                  <mssgle:LineSegment
                    End="-231,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get and Upload Vendors\Partition 2.Paths[Multicast Output 3]"
          TopLeft="812.666666666667,761.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-163.666666666667,60"
              Start="0,0"
              End="-163.666666666667,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.4376899696049" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.4376899696049"
                    Point2="0,24.4376899696049"
                    Point3="-4,24.4376899696049" />
                  <mssgle:LineSegment
                    End="-159.666666666667,24.4376899696049" />
                  <mssgle:CubicBezierSegment
                    Point1="-159.666666666667,24.4376899696049"
                    Point2="-163.666666666667,24.4376899696049"
                    Point3="-163.666666666667,28.4376899696049" />
                  <mssgle:LineSegment
                    End="-163.666666666667,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get and Upload Vendors\Partition 2.Paths[Multicast Output 2]"
          TopLeft="568,1169.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get and Upload Vendors\Partition 2.Paths[Multicast Output 11]"
          TopLeft="853.333333333333,761.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-20.3333333333334,60"
              Start="0,0"
              End="-20.3333333333334,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.4376899696049" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.4376899696049"
                    Point2="0,24.4376899696049"
                    Point3="-4,24.4376899696049" />
                  <mssgle:LineSegment
                    End="-16.3333333333334,24.4376899696049" />
                  <mssgle:CubicBezierSegment
                    Point1="-16.3333333333334,24.4376899696049"
                    Point2="-20.3333333333334,24.4376899696049"
                    Point3="-20.3333333333334,28.4376899696049" />
                  <mssgle:LineSegment
                    End="-20.3333333333334,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get and Upload Vendors\Partition 2.Paths[Multicast Output 1]"
          TopLeft="596,1169.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="209,60"
              Start="0,0"
              End="209,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.8695652173913" />
                  <mssgle:CubicBezierSegment
                    Point1="0,16.8695652173913"
                    Point2="0,20.8695652173913"
                    Point3="4,20.8695652173913" />
                  <mssgle:LineSegment
                    End="205,20.8695652173913" />
                  <mssgle:CubicBezierSegment
                    Point1="205,20.8695652173913"
                    Point2="209,20.8695652173913"
                    Point3="209,24.8695652173913" />
                  <mssgle:LineSegment
                    End="209,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Get and Upload Vendors\Partition 2\Lookup">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:boolean">false</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Get and Upload Vendors\Partition 3">
    <LayoutInfo>
      <GraphLayout
        Capacity="64" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="156,42"
          Id="Package\Get and Upload Vendors\Partition 3\Get Vendors List"
          TopLeft="755,5.5" />
        <NodeLayout
          Size="149,42"
          Id="Package\Get and Upload Vendors\Partition 3\Create Contact"
          TopLeft="758.5,311.5" />
        <NodeLayout
          Size="189,42"
          Id="Package\Get and Upload Vendors\Partition 3\Trash Destination 1 1 1"
          TopLeft="5.50000000000011,1433.5" />
        <NodeLayout
          Size="182,42"
          Id="Package\Get and Upload Vendors\Partition 3\Push ID Check Data 1"
          TopLeft="477,1229.5" />
        <NodeLayout
          Size="120,42"
          Id="Package\Get and Upload Vendors\Partition 3\Multicast"
          TopLeft="508,1127.5" />
        <NodeLayout
          Size="134,42"
          Id="Package\Get and Upload Vendors\Partition 3\Update RID"
          TopLeft="766,821.5" />
        <NodeLayout
          Size="171,42"
          Id="Package\Get and Upload Vendors\Partition 3\Row Count Success"
          TopLeft="747.5,923.5" />
        <NodeLayout
          Size="198,42"
          Id="Package\Get and Upload Vendors\Partition 3\Trash Destination 1 1 4 1"
          TopLeft="469,1331.5" />
        <NodeLayout
          Size="148,42"
          Id="Package\Get and Upload Vendors\Partition 3\Replace Token"
          TopLeft="759,209.5" />
        <NodeLayout
          Size="198,42"
          Id="Package\Get and Upload Vendors\Partition 3\Trash Destination 1 1 1 1"
          TopLeft="210,1331.5" />
        <NodeLayout
          Size="132,42"
          Id="Package\Get and Upload Vendors\Partition 3\Get Results"
          TopLeft="767,413.5" />
        <NodeLayout
          Size="155,42"
          Id="Package\Get and Upload Vendors\Partition 3\Conditional Split"
          TopLeft="231.5,1229.5" />
        <NodeLayout
          Size="180,42"
          Id="Package\Get and Upload Vendors\Partition 3\Trash Destination 1 1"
          TopLeft="728,1331.5" />
        <NodeLayout
          Size="166,42"
          Id="Package\Get and Upload Vendors\Partition 3\Replace Token 1 1"
          TopLeft="521,923.5" />
        <NodeLayout
          Size="145,42"
          Id="Package\Get and Upload Vendors\Partition 3\Map Results 1"
          TopLeft="760.5,617.5" />
        <NodeLayout
          Size="171,42"
          Id="Package\Get and Upload Vendors\Partition 3\Trash Destination 1"
          TopLeft="747.5,1025.5" />
        <NodeLayout
          Size="238,42"
          Id="Package\Get and Upload Vendors\Partition 3\Replace Rid_contact and prop_ref"
          TopLeft="449,1025.5" />
        <NodeLayout
          Size="168,42"
          Id="Package\Get and Upload Vendors\Partition 3\Main Record Count"
          TopLeft="749,107.5" />
        <NodeLayout
          Size="170,42"
          Id="Package\Get and Upload Vendors\Partition 3\Push Custom Fields"
          TopLeft="720,1229.5" />
        <NodeLayout
          Size="113,42"
          Id="Package\Get and Upload Vendors\Partition 3\Lookup"
          TopLeft="592.5,821.5" />
        <NodeLayout
          Size="143,42"
          Id="Package\Get and Upload Vendors\Partition 3\Check Error 1"
          TopLeft="761.5,515.5" />
        <NodeLayout
          Size="99,42"
          Id="Package\Get and Upload Vendors\Partition 3\AML"
          TopLeft="50.5000000000001,1331.5" />
        <NodeLayout
          Size="130,42"
          Id="Package\Get and Upload Vendors\Partition 3\Multicast 1"
          TopLeft="768,719.5" />
        <EdgeLayout
          Id="Package\Get and Upload Vendors\Partition 3.Paths[Lookup Match Output]"
          TopLeft="649,863.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-45,60"
              Start="0,0"
              End="-45,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26" />
                  <mssgle:CubicBezierSegment
                    Point1="0,26"
                    Point2="0,30"
                    Point3="-4,30" />
                  <mssgle:LineSegment
                    End="-41,30" />
                  <mssgle:CubicBezierSegment
                    Point1="-41,30"
                    Point2="-45,30"
                    Point3="-45,34" />
                  <mssgle:LineSegment
                    End="-45,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-70.69138671875,35,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get and Upload Vendors\Partition 3.Paths[JsonParserTransformOutput]"
          TopLeft="833,455.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get and Upload Vendors\Partition 3.Paths[Do nothing]"
          TopLeft="333.5,1271.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-24.5,60"
              Start="0,0"
              End="-24.5,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.367816091954" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.367816091954"
                    Point2="0,24.367816091954"
                    Point3="-4,24.367816091954" />
                  <mssgle:LineSegment
                    End="-20.5,24.367816091954" />
                  <mssgle:CubicBezierSegment
                    Point1="-20.5,24.367816091954"
                    Point2="-24.5,24.367816091954"
                    Point3="-24.5,28.367816091954" />
                  <mssgle:LineSegment
                    End="-24.5,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-36.88298828125,29.367816091954,49.2659765625,11.6630859375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get and Upload Vendors\Partition 3.Paths[Derived Column Output3]"
          TopLeft="833,659.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get and Upload Vendors\Partition 3.Paths[Derived Column Output2]"
          TopLeft="833,251.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get and Upload Vendors\Partition 3.Paths[Derived Column Output1]"
          TopLeft="604,965.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-36,60"
              Start="0,0"
              End="-36,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26" />
                  <mssgle:CubicBezierSegment
                    Point1="0,26"
                    Point2="0,30"
                    Point3="-4,30" />
                  <mssgle:LineSegment
                    End="-32,30" />
                  <mssgle:CubicBezierSegment
                    Point1="-32,30"
                    Point2="-36,30"
                    Point3="-36,34" />
                  <mssgle:LineSegment
                    End="-36,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get and Upload Vendors\Partition 3.Paths[Derived Column Output]"
          TopLeft="568,1067.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get and Upload Vendors\Partition 3.Paths[Row Count Output 11]"
          TopLeft="833,965.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get and Upload Vendors\Partition 3.Paths[Row Count Output 1]"
          TopLeft="833,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get and Upload Vendors\Partition 3.Paths[Response Output3]"
          TopLeft="833,353.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get and Upload Vendors\Partition 3.Paths[Response Output2]"
          TopLeft="805,1271.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="13,60"
              Start="0,0"
              End="13,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26" />
                  <mssgle:CubicBezierSegment
                    Point1="0,26"
                    Point2="0,30"
                    Point3="4,30" />
                  <mssgle:LineSegment
                    End="9,30" />
                  <mssgle:CubicBezierSegment
                    Point1="9,30"
                    Point2="13,30"
                    Point3="13,34" />
                  <mssgle:LineSegment
                    End="13,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get and Upload Vendors\Partition 3.Paths[Response Output1]"
          TopLeft="100,1373.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get and Upload Vendors\Partition 3.Paths[Response Output]"
          TopLeft="568,1271.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get and Upload Vendors\Partition 3.Paths[OLE DB Source Output]"
          TopLeft="833,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get and Upload Vendors\Partition 3.Paths[OLE DB Command Output]"
          TopLeft="833,863.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get and Upload Vendors\Partition 3.Paths[No Error]"
          TopLeft="833,557.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-19.14369140625,21.5390625,38.2873828125,9.421875"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get and Upload Vendors\Partition 3.Paths[Need To Flag AML]"
          TopLeft="284.5,1271.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-184.5,60"
              Start="0,0"
              End="-184.5,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.367816091954" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.367816091954"
                    Point2="0,24.367816091954"
                    Point3="-4,24.367816091954" />
                  <mssgle:LineSegment
                    End="-180.5,24.367816091954" />
                  <mssgle:CubicBezierSegment
                    Point1="-180.5,24.367816091954"
                    Point2="-184.5,24.367816091954"
                    Point3="-184.5,28.367816091954" />
                  <mssgle:LineSegment
                    End="-184.5,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-133.04193359375,29.367816091954,81.5838671875,11.6630859375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get and Upload Vendors\Partition 3.Paths[Multicast Output 31]"
          TopLeft="540,1169.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-231,60"
              Start="0,0"
              End="-231,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.8695652173913" />
                  <mssgle:CubicBezierSegment
                    Point1="0,16.8695652173913"
                    Point2="0,20.8695652173913"
                    Point3="-4,20.8695652173913" />
                  <mssgle:LineSegment
                    End="-227,20.8695652173913" />
                  <mssgle:CubicBezierSegment
                    Point1="-227,20.8695652173913"
                    Point2="-231,20.8695652173913"
                    Point3="-231,24.8695652173913" />
                  <mssgle:LineSegment
                    End="-231,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get and Upload Vendors\Partition 3.Paths[Multicast Output 3]"
          TopLeft="812.666666666667,761.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-163.666666666667,60"
              Start="0,0"
              End="-163.666666666667,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.4376899696049" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.4376899696049"
                    Point2="0,24.4376899696049"
                    Point3="-4,24.4376899696049" />
                  <mssgle:LineSegment
                    End="-159.666666666667,24.4376899696049" />
                  <mssgle:CubicBezierSegment
                    Point1="-159.666666666667,24.4376899696049"
                    Point2="-163.666666666667,24.4376899696049"
                    Point3="-163.666666666667,28.4376899696049" />
                  <mssgle:LineSegment
                    End="-163.666666666667,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get and Upload Vendors\Partition 3.Paths[Multicast Output 2]"
          TopLeft="568,1169.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get and Upload Vendors\Partition 3.Paths[Multicast Output 11]"
          TopLeft="853.333333333333,761.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-20.3333333333334,60"
              Start="0,0"
              End="-20.3333333333334,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.4376899696049" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.4376899696049"
                    Point2="0,24.4376899696049"
                    Point3="-4,24.4376899696049" />
                  <mssgle:LineSegment
                    End="-16.3333333333334,24.4376899696049" />
                  <mssgle:CubicBezierSegment
                    Point1="-16.3333333333334,24.4376899696049"
                    Point2="-20.3333333333334,24.4376899696049"
                    Point3="-20.3333333333334,28.4376899696049" />
                  <mssgle:LineSegment
                    End="-20.3333333333334,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get and Upload Vendors\Partition 3.Paths[Multicast Output 1]"
          TopLeft="596,1169.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="209,60"
              Start="0,0"
              End="209,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.8695652173913" />
                  <mssgle:CubicBezierSegment
                    Point1="0,16.8695652173913"
                    Point2="0,20.8695652173913"
                    Point3="4,20.8695652173913" />
                  <mssgle:LineSegment
                    End="205,20.8695652173913" />
                  <mssgle:CubicBezierSegment
                    Point1="205,20.8695652173913"
                    Point2="209,20.8695652173913"
                    Point3="209,24.8695652173913" />
                  <mssgle:LineSegment
                    End="209,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Get and Upload Vendors\Partition 3\Lookup">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:boolean">false</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Get and Upload Vendors\Partition 4">
    <LayoutInfo>
      <GraphLayout
        Capacity="64" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="156,42"
          Id="Package\Get and Upload Vendors\Partition 4\Get Vendors List"
          TopLeft="755,5.5" />
        <NodeLayout
          Size="149,42"
          Id="Package\Get and Upload Vendors\Partition 4\Create Contact"
          TopLeft="758.5,311.5" />
        <NodeLayout
          Size="189,42"
          Id="Package\Get and Upload Vendors\Partition 4\Trash Destination 1 1 1"
          TopLeft="5.50000000000011,1433.5" />
        <NodeLayout
          Size="182,42"
          Id="Package\Get and Upload Vendors\Partition 4\Push ID Check Data 1"
          TopLeft="477,1229.5" />
        <NodeLayout
          Size="120,42"
          Id="Package\Get and Upload Vendors\Partition 4\Multicast"
          TopLeft="508,1127.5" />
        <NodeLayout
          Size="134,42"
          Id="Package\Get and Upload Vendors\Partition 4\Update RID"
          TopLeft="766,821.5" />
        <NodeLayout
          Size="171,42"
          Id="Package\Get and Upload Vendors\Partition 4\Row Count Success"
          TopLeft="747.5,923.5" />
        <NodeLayout
          Size="198,42"
          Id="Package\Get and Upload Vendors\Partition 4\Trash Destination 1 1 4 1"
          TopLeft="469,1331.5" />
        <NodeLayout
          Size="148,42"
          Id="Package\Get and Upload Vendors\Partition 4\Replace Token"
          TopLeft="759,209.5" />
        <NodeLayout
          Size="198,42"
          Id="Package\Get and Upload Vendors\Partition 4\Trash Destination 1 1 1 1"
          TopLeft="210,1331.5" />
        <NodeLayout
          Size="132,42"
          Id="Package\Get and Upload Vendors\Partition 4\Get Results"
          TopLeft="767,413.5" />
        <NodeLayout
          Size="155,42"
          Id="Package\Get and Upload Vendors\Partition 4\Conditional Split"
          TopLeft="231.5,1229.5" />
        <NodeLayout
          Size="180,42"
          Id="Package\Get and Upload Vendors\Partition 4\Trash Destination 1 1"
          TopLeft="728,1331.5" />
        <NodeLayout
          Size="166,42"
          Id="Package\Get and Upload Vendors\Partition 4\Replace Token 1 1"
          TopLeft="521,923.5" />
        <NodeLayout
          Size="145,42"
          Id="Package\Get and Upload Vendors\Partition 4\Map Results 1"
          TopLeft="760.5,617.5" />
        <NodeLayout
          Size="171,42"
          Id="Package\Get and Upload Vendors\Partition 4\Trash Destination 1"
          TopLeft="747.5,1025.5" />
        <NodeLayout
          Size="238,42"
          Id="Package\Get and Upload Vendors\Partition 4\Replace Rid_contact and prop_ref"
          TopLeft="449,1025.5" />
        <NodeLayout
          Size="168,42"
          Id="Package\Get and Upload Vendors\Partition 4\Main Record Count"
          TopLeft="749,107.5" />
        <NodeLayout
          Size="170,42"
          Id="Package\Get and Upload Vendors\Partition 4\Push Custom Fields"
          TopLeft="720,1229.5" />
        <NodeLayout
          Size="113,42"
          Id="Package\Get and Upload Vendors\Partition 4\Lookup"
          TopLeft="592.5,821.5" />
        <NodeLayout
          Size="143,42"
          Id="Package\Get and Upload Vendors\Partition 4\Check Error 1"
          TopLeft="761.5,515.5" />
        <NodeLayout
          Size="99,42"
          Id="Package\Get and Upload Vendors\Partition 4\AML"
          TopLeft="50.5000000000001,1331.5" />
        <NodeLayout
          Size="130,42"
          Id="Package\Get and Upload Vendors\Partition 4\Multicast 1"
          TopLeft="768,719.5" />
        <EdgeLayout
          Id="Package\Get and Upload Vendors\Partition 4.Paths[Lookup Match Output]"
          TopLeft="649,863.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-45,60"
              Start="0,0"
              End="-45,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26" />
                  <mssgle:CubicBezierSegment
                    Point1="0,26"
                    Point2="0,30"
                    Point3="-4,30" />
                  <mssgle:LineSegment
                    End="-41,30" />
                  <mssgle:CubicBezierSegment
                    Point1="-41,30"
                    Point2="-45,30"
                    Point3="-45,34" />
                  <mssgle:LineSegment
                    End="-45,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-70.69138671875,35,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get and Upload Vendors\Partition 4.Paths[JsonParserTransformOutput]"
          TopLeft="833,455.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get and Upload Vendors\Partition 4.Paths[Do nothing]"
          TopLeft="333.5,1271.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-24.5,60"
              Start="0,0"
              End="-24.5,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.367816091954" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.367816091954"
                    Point2="0,24.367816091954"
                    Point3="-4,24.367816091954" />
                  <mssgle:LineSegment
                    End="-20.5,24.367816091954" />
                  <mssgle:CubicBezierSegment
                    Point1="-20.5,24.367816091954"
                    Point2="-24.5,24.367816091954"
                    Point3="-24.5,28.367816091954" />
                  <mssgle:LineSegment
                    End="-24.5,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-36.88298828125,29.367816091954,49.2659765625,11.6630859375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get and Upload Vendors\Partition 4.Paths[Derived Column Output3]"
          TopLeft="833,659.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get and Upload Vendors\Partition 4.Paths[Derived Column Output2]"
          TopLeft="833,251.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get and Upload Vendors\Partition 4.Paths[Derived Column Output1]"
          TopLeft="604,965.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-36,60"
              Start="0,0"
              End="-36,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26" />
                  <mssgle:CubicBezierSegment
                    Point1="0,26"
                    Point2="0,30"
                    Point3="-4,30" />
                  <mssgle:LineSegment
                    End="-32,30" />
                  <mssgle:CubicBezierSegment
                    Point1="-32,30"
                    Point2="-36,30"
                    Point3="-36,34" />
                  <mssgle:LineSegment
                    End="-36,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get and Upload Vendors\Partition 4.Paths[Derived Column Output]"
          TopLeft="568,1067.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get and Upload Vendors\Partition 4.Paths[Row Count Output 11]"
          TopLeft="833,965.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get and Upload Vendors\Partition 4.Paths[Row Count Output 1]"
          TopLeft="833,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get and Upload Vendors\Partition 4.Paths[Response Output3]"
          TopLeft="833,353.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get and Upload Vendors\Partition 4.Paths[Response Output2]"
          TopLeft="805,1271.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="13,60"
              Start="0,0"
              End="13,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26" />
                  <mssgle:CubicBezierSegment
                    Point1="0,26"
                    Point2="0,30"
                    Point3="4,30" />
                  <mssgle:LineSegment
                    End="9,30" />
                  <mssgle:CubicBezierSegment
                    Point1="9,30"
                    Point2="13,30"
                    Point3="13,34" />
                  <mssgle:LineSegment
                    End="13,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get and Upload Vendors\Partition 4.Paths[Response Output1]"
          TopLeft="100,1373.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get and Upload Vendors\Partition 4.Paths[Response Output]"
          TopLeft="568,1271.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get and Upload Vendors\Partition 4.Paths[OLE DB Source Output]"
          TopLeft="833,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get and Upload Vendors\Partition 4.Paths[OLE DB Command Output]"
          TopLeft="833,863.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get and Upload Vendors\Partition 4.Paths[No Error]"
          TopLeft="833,557.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-19.14369140625,21.5390625,38.2873828125,9.421875"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get and Upload Vendors\Partition 4.Paths[Need To Flag AML]"
          TopLeft="284.5,1271.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-184.5,60"
              Start="0,0"
              End="-184.5,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.367816091954" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.367816091954"
                    Point2="0,24.367816091954"
                    Point3="-4,24.367816091954" />
                  <mssgle:LineSegment
                    End="-180.5,24.367816091954" />
                  <mssgle:CubicBezierSegment
                    Point1="-180.5,24.367816091954"
                    Point2="-184.5,24.367816091954"
                    Point3="-184.5,28.367816091954" />
                  <mssgle:LineSegment
                    End="-184.5,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-133.04193359375,29.367816091954,81.5838671875,11.6630859375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get and Upload Vendors\Partition 4.Paths[Multicast Output 31]"
          TopLeft="540,1169.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-231,60"
              Start="0,0"
              End="-231,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.8695652173913" />
                  <mssgle:CubicBezierSegment
                    Point1="0,16.8695652173913"
                    Point2="0,20.8695652173913"
                    Point3="-4,20.8695652173913" />
                  <mssgle:LineSegment
                    End="-227,20.8695652173913" />
                  <mssgle:CubicBezierSegment
                    Point1="-227,20.8695652173913"
                    Point2="-231,20.8695652173913"
                    Point3="-231,24.8695652173913" />
                  <mssgle:LineSegment
                    End="-231,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get and Upload Vendors\Partition 4.Paths[Multicast Output 3]"
          TopLeft="812.666666666667,761.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-163.666666666667,60"
              Start="0,0"
              End="-163.666666666667,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.4376899696049" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.4376899696049"
                    Point2="0,24.4376899696049"
                    Point3="-4,24.4376899696049" />
                  <mssgle:LineSegment
                    End="-159.666666666667,24.4376899696049" />
                  <mssgle:CubicBezierSegment
                    Point1="-159.666666666667,24.4376899696049"
                    Point2="-163.666666666667,24.4376899696049"
                    Point3="-163.666666666667,28.4376899696049" />
                  <mssgle:LineSegment
                    End="-163.666666666667,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get and Upload Vendors\Partition 4.Paths[Multicast Output 2]"
          TopLeft="568,1169.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get and Upload Vendors\Partition 4.Paths[Multicast Output 11]"
          TopLeft="853.333333333333,761.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-20.3333333333334,60"
              Start="0,0"
              End="-20.3333333333334,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.4376899696049" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.4376899696049"
                    Point2="0,24.4376899696049"
                    Point3="-4,24.4376899696049" />
                  <mssgle:LineSegment
                    End="-16.3333333333334,24.4376899696049" />
                  <mssgle:CubicBezierSegment
                    Point1="-16.3333333333334,24.4376899696049"
                    Point2="-20.3333333333334,24.4376899696049"
                    Point3="-20.3333333333334,28.4376899696049" />
                  <mssgle:LineSegment
                    End="-20.3333333333334,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get and Upload Vendors\Partition 4.Paths[Multicast Output 1]"
          TopLeft="596,1169.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="209,60"
              Start="0,0"
              End="209,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.8695652173913" />
                  <mssgle:CubicBezierSegment
                    Point1="0,16.8695652173913"
                    Point2="0,20.8695652173913"
                    Point3="4,20.8695652173913" />
                  <mssgle:LineSegment
                    End="205,20.8695652173913" />
                  <mssgle:CubicBezierSegment
                    Point1="205,20.8695652173913"
                    Point2="209,20.8695652173913"
                    Point3="209,24.8695652173913" />
                  <mssgle:LineSegment
                    End="209,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Get and Upload Vendors\Partition 4\Lookup">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:boolean">false</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>