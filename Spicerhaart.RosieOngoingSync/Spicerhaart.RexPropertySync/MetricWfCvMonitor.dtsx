<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="2/27/2020 8:40:34 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="WX9000ITD17"
  DTS:CreatorName="SPICERHAART\1905887"
  DTS:DTSID="{FBE316DE-D38C-4FCE-A311-D15E12724CDC}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.1301.433"
  DTS:LocaleID="2057"
  DTS:ObjectName="MetricWfCvMonitor"
  DTS:PackageType="5"
  DTS:ProtectionLevel="1"
  DTS:VersionBuild="76"
  DTS:VersionGUID="{161B719C-8F11-4426-AB10-8F16355A0056}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[RexSync.xml]"
      DTS:CreationName="FILE"
      DTS:DTSID="{6ED0D244-645D-436E-A056-722C104EE359}"
      DTS:ObjectName="RexSync.xml">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="C:\SSISVariables\RexSync.xml" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{DF154DD4-0071-4ABE-A794-F38853CFBF99}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="API_Password">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{99FBB709-8BB7-4F79-8928-D727FC7D7F3F}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="API_Token">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{2AE3F19B-A857-4BD2-9A82-C8E02102B900}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="API_URL">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{804A8B53-07D9-451A-BAEC-66B3404AD1C8}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="API_Username">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{940026F0-AE79-48A6-AFE0-18F2E1DE532B}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="CV_Disabled">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{BCBC981F-EC08-4160-AFF5-A26622F3EC72}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="CV_Enabled">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{217E8920-D330-490A-B270-FF028FD2F53B}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="CV_Hidden">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{E2E04AFB-817B-4B72-9F70-524F639EA176}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="CV_Json">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{D279848A-3101-4189-A254-2E8E01101227}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="CV_Visible">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{72068B60-0830-4FFE-ACBC-1B6574463B9B}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ErrorEmail">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{264C5E2E-13F6-4470-ADB1-F3322DDE6F5D}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Metrics_Disabled">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{0BB930F8-5A43-4F75-8530-3D77268AA907}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Metrics_Enabled">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{282DA369-99C9-463F-AC38-AC0233209099}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Metrics_Hidden">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{381C5F35-3DCC-4A59-A392-FABF2B501533}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Metrics_Json">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B0CBF935-5B3E-4893-B717-A50C7B4CF020}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Metrics_Visible">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{00C3E682-E0E2-4465-B2A6-699FA5F9C3FF}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="Object_CustomValidation">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{E4CEB89B-9911-4814-B040-4F91AA0DA61B}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="Object_Metrics">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{CCD118AF-7D39-4139-99D9-0DCF5E57FFA6}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="Object_Offices">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{1D9035AC-4BA8-4411-99E2-4D6C7A14E6AB}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="OfficeID">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F19E12F3-A5D3-4116-B18B-C1CE999CC50E}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="RexAccountID">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{51D53DE2-A7F1-4259-B1B0-5CE8E9658F93}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Workflow_Disabled">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{AD2A4764-C2E6-4B4F-ACFE-C63409A619AE}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Workflow_Enabled">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B21C8F83-8F07-4AF5-A380-6FFDBFB5B920}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Workflow_Hidden">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A6606A74-8233-4750-BA34-3EE2EF701D87}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Workflow_Json">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{585C22B2-0A18-46F9-AF86-9212D09B199A}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Workflow_Visible">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Delete todays logs"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{4731EFDC-3154-4B49-AB2C-980AF02F1392}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Delete todays logs"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{308E9EC4-EE59-4D5B-9275-9EC80ADF1BC9}"
          SQLTask:SqlStatementSource="DELETE FROM AccountSettingsLog&#xA;WHERE date = CAST(GETDATE() AS DATE)" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Foreach migrated account"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:Description="Foreach Loop Container"
      DTS:DTSID="{8ED0A74A-FE76-467C-8EDE-49C4BCFD2881}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="-1"
      DTS:ObjectName="Foreach migrated account">
      <DTS:ForEachEnumerator
        DTS:CreationName="Microsoft.ForEachADOEnumerator"
        DTS:DTSID="{66A73463-2B3B-4E43-A6B2-40FA9E0BAB22}"
        DTS:ObjectName="{66A73463-2B3B-4E43-A6B2-40FA9E0BAB22}">
        <DTS:ObjectData>
          <FEEADO
            EnumType="EnumerateRowsInFirstTable"
            VarName="User::Object_Offices" />
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Foreach migrated account\Custom Validation"
          DTS:CreationName="STOCK:SEQUENCE"
          DTS:Description="Sequence Container"
          DTS:DTSID="{81F00B8B-DE29-4ED8-ADBA-BEE989E60B37}"
          DTS:ExecutableType="STOCK:SEQUENCE"
          DTS:LocaleID="-1"
          DTS:ObjectName="Custom Validation">
          <DTS:Variables />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Foreach migrated account\Custom Validation\Form json"
              DTS:CreationName="Microsoft.ExpressionTask"
              DTS:Description="Expression Task"
              DTS:DTSID="{85bf8e56-08c2-47af-9059-496567665c23}"
              DTS:ExecutableType="Microsoft.ExpressionTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Form json"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <ExpressionTask
                  Expression="@[User::CV_Json] = &quot;{&quot; + @[User::CV_Enabled] + &quot;, &quot; + @[User::CV_Disabled] + &quot;, &quot; + @[User::CV_Hidden] + &quot;, &quot; + @[User::CV_Visible] + &quot;}&quot;" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Foreach migrated account\Custom Validation\Insert to db"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{61b646a0-9cbc-495d-9840-acabc7a55d44}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Insert to db"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{308E9EC4-EE59-4D5B-9275-9EC80ADF1BC9}"
                  SQLTask:SqlStatementSource="INSERT INTO AccountSettingsLog&#xA;(account_id, date, type, settings_json)&#xA;VALUES (?, CAST(GETDATE() AS DATE), 'custom_validation', ?)" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="0"
                    SQLTask:DtsVariableName="User::RexAccountID"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="3"
                    SQLTask:ParameterSize="-1" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="1"
                    SQLTask:DtsVariableName="User::CV_Json"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="129"
                    SQLTask:ParameterSize="-1" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Foreach migrated account\Custom Validation\Search cutom validation"
              DTS:CreationName="Microsoft.Pipeline"
              DTS:Description="Data Flow Task"
              DTS:DTSID="{b685a9e3-875e-4271-98c6-d874736f2f53}"
              DTS:ExecutableType="Microsoft.Pipeline"
              DTS:LocaleID="-1"
              DTS:ObjectName="Search cutom validation"
              DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:ObjectData>
                <pipeline
                  version="1">
                  <components>
                    <component
                      refId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Create disabled list"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;10"
                      description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                      name="Create disabled list"
                      version="10">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Stores the source code of the component"
                          isArray="true"
                          name="SourceCode"
                          state="cdata">
                          <arrayElements
                            arrayElementCount="30">
                            <arrayElement
                              dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String CVDisabled
    {
        get
        {
            return (String)(ParentComponent.ReadWriteVariables["CV_Disabled"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
        set
        {
            ParentComponent.ReadWriteVariables["CV_Disabled"].Value = value;
        }
    }

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using System.Linq;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    private string cv_disabled { get; set; }
    private int stringLength { get; set; }

    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();

        cv_disabled = "\"disabled\": [";
        stringLength = cv_disabled.Length;
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();

        if (cv_disabled.Length > stringLength)
        {
            Variables.CVDisabled = string.Concat(cv_disabled.Reverse().Skip(2).Reverse()) + "]";
        }
        else
        {
            Variables.CVDisabled = cv_disabled + "]";
        }
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer row)
    {
        cv_disabled += "\"" + row.name + "\", ";
    }
}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String name
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
    }
    public bool name_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_97beb00a28774a3a9233d51bad1836a9.Properties.Settings.get_Default():SC_97beb00a28774a3a9233d51bad1836a9.Properties.Sett" +
    "ings")]

namespace SC_97beb00a28774a3a9233d51bad1836a9.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[SC_97beb00a28774a3a9233d51bad1836a9.csproj]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{283495d8-6724-4d38-9bf2-205fa506b55f}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_97beb00a28774a3a9233d51bad1836a9</RootNamespace>
    <AssemblyName>SC_97beb00a28774a3a9233d51bad1836a9</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_97beb00a28774a3a9233d51bad1836a9" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Project]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>SC_97beb00a28774a3a9233d51bad1836a9</msb:CodeName>
		<msb:DisplayName>SC_97beb00a28774a3a9233d51bad1836a9</msb:DisplayName>
		<msb:ProjectId>{802A812F-F96E-4B76-B343-515D1C7E0083}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_97beb00a28774a3a9233d51bad1836a9.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_97beb00a28774a3a9233d51bad1836a9")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_97beb00a28774a3a9233d51bad1836a9")]
[assembly: AssemblyCopyright("Copyright @  2020")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_97beb00a28774a3a9233d51bad1836a9.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_97beb00a28774a3a9233d51bad1836a9.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_97beb00a28774a3a9233d51bad1836a9.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_97beb00a28774a3a9233d51bad1836a9.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_97beb00a28774a3a9233d51bad1836a9.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                          </arrayElements>
                        </property>
                        <property
                          dataType="System.String"
                          description="Stores the binary representation of the component"
                          isArray="true"
                          name="BinaryCode"
                          state="cdata">
                          <arrayElements
                            arrayElementCount="2">
                            <arrayElement
                              dataType="System.String"><![CDATA[SC_97beb00a28774a3a9233d51bad1836a9.dll]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDADjfV14AAAAAAAAAAOAAIiALATAAABYAAAAIAAAAAAAALjUA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAANw0AABPAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAANBUAAAAgAAAAFgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAAYAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAQ
NQAAAAAAAEgAAAACAAUAiCIAAJwRAAABAAAAAAAAACQ0AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CewEAAAQqIgIDfQEAAAQqHgJ7AgAABCoiAgN9AgAABCqO
AigQAAAKAnIBAABwKAIAAAYCAigBAAAGbxEAAAooBAAABioAABMwAwBmAAAAAAAAAAIoEgAACgIo
AQAABm8RAAAKAigDAAAGMTECewQAAAQCKAEAAAYoAQAAKxgoAgAAKygBAAArKAMAACtyHQAAcCgW
AAAKbxUAAAYqAnsEAAAEAigBAAAGch0AAHAoFgAACm8VAAAGKooCAigBAAAGciEAAHADbwoAAAZy
JQAAcCgXAAAKKAIAAAYqHgIoDgAABioqAgMEBSgYAAAKKlICexkAAAoCexoAAAoWlG8bAAAKKiIC
FigcAAAKKh4CKB0AAAoqHgIoHgAACip+AigfAAAKAgJzEgAABn0DAAAEAgJzEwAABn0EAAAEKpIE
ci0AAHAabyAAAAosFQIFAgMoIQAACg4EcwkAAAZvEAAABipKKwcCA28RAAAGA28MAAAGLfEqBio6
AigiAAAKAgN9BQAABCo6AigiAAAKAgN9BgAABCqWAnsGAAAEbyMAAApyPQAAcG8kAAAKKCUAAApv
JgAACnQaAAABKnICewYAAARvIwAACnI9AABwbyQAAAoDbycAAAoqHgIoIgAACiqufgcAAAQtHnJV
AABw0AcAAAIoKAAACm8pAAAKcyoAAAqABwAABH4HAAAEKhp+CAAABCoeAoAIAAAEKhp+CQAABCoe
AigrAAAKKi5zGwAABoAJAAAEKgBCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAACA
BgAAI34AAOwGAADUBwAAI1N0cmluZ3MAAAAAwA4AAMgAAAAjVVMAiA8AABAAAAAjR1VJRAAAAJgP
AAAEAgAAI0Jsb2IAAAAAAAAAAgAAAVcVoAEJCQAAAPoBMwAWAAABAAAAJAAAAAgAAAAJAAAAHAAA
ABAAAAArAAAAFgAAAAUAAAAIAAAADAAAAAEAAAAGAAAAAQAAAAMAAAAAACcEAQAAAAAABgDnArAF
BgB7A7AFBgAzAp0FDwAkBgAABgBgArAEBgDKArAEBgCrArAEBgBiA7AEBgAHA7AEBgAgA7AEBgB3
ArAEBgCSAsADCgA7A2wBBgD7AbAFCgBHBWwBDgA4BWwBCgDfBGwBCgD+BmwBBgDBBmgEBgAWAp0F
BgBYBdAFBgDTBJsEEgDmAREEEgBHAhEEEgDGAYYEBgDdA2gEFgAqAR8FBgA6AIYABgDCBGgEGgAR
AGgFGgABAGgFSwB0BwAAGgAiAGgFBgCNAWgEBgA1AWgEBgDLB7AEAAAAAGwAAAAAAAEAAQABABAA
ewQAABAAAQABAAEAEAArBQAAPQADAAkAAQAQAOAGAABJAAMADgABABAArgYAAE0ABQASAAEAEABv
BgAATQAGABMAAAAQANcFMwZNAAcAFgAAARAAngYzBmUACQAaAAEA3wDQAAEA/ADTAAYArgbWAAYA
bwbaAAEA7gbeAAEA7gbeABEAbwTiABEAtgHmABEAGgHqAFAgAAAAAIEIvwDuAAEAWCAAAAAAgQjP
ABAAAQBhIAAAAACBCO8DGwACAGkgAAAAAIEIAAQBAAIAciAAAAAAxgCZAwYAAwCYIAAAAADGAKQD
BgADAAohAAAAAMYApAfyAAMALSEAAAAAhhiQBQYABAA1IQAAAACGGJAFXQAEAEAhAAAAAIYIYwHu
AAcAVSEAAAAAhghPBHkABwBeIQAAAACGALsHeQAHAGYhAAAAAIYAyAZ5AAcAbiEAAAAAhhiQBQYA
BwCOIQAAAADGAFMH+AAHALMhAAAAAMYBTAfyAAsAxiEAAAAAxgGkB/IADADIIQAAAACGGJAFAgEN
ANchAAAAAIYYkAUCAQ4A5iEAAAAAhgihAO4ADwAMIgAAAACGCLAAEAAPACkiAAAAAIMYkAUGABAA
MSIAAAAAkwhUBQgBEABdIgAAAACTCJ4BDQEQAGQiAAAAAJMIqgESARAAbCIAAAAAlgjUBhgBEQBz
IgAAAACGGJAFBgARAHsiAAAAAJEYlgUdAREAAAABALoDAAABALoDAAABAMMHAAABAE0FAAACAHkG
AAADAO0EAAABAHUAAAACAFkBAAADAE0FAAAEAO0EAAABAE0FAAABAL8HAAABAAQHAAABAAQHAAAB
ALoDAAABALoDCQCQBQEAEQCQBQYAGQCQBQoAKQCQBRAAMQCQBRAAOQCQBRAAQQCQBRAASQCQBRAA
UQCQBRAAWQCQBRAAYQCQBRAAaQCQBQYAcQCQBQYAoQCQBQYAwQCQBRUAkQCZAwYA0QDkAxsAkQCk
AwYA2QDeAR8A2QAaBTMA0QC6BkQA0QC6Bk8A0QC6BlUAeQCQBV0AeQBNBWcAeQB5BmsAgQDaA28A
eQBYBHQAeQC7B3kAeQDIBnkAkQCQBQYA0QCnBn0AkQCNBoQAmQCQBQYAkQBiBooA8QBfBI8AkQCP
B5UA+QBgB5sA+QCwA6IAEQFHAacAEQHHB7AAqQCQBbYAyQCQBQYAIABrAP0BIQBrAP0BLgALADwB
LgATAEUBLgAbAGQBLgAjAG0BLgArAJYBLgAzAJYBLgA7AJYBLgBDAG0BLgBLAJwBLgBTAJYBLgBb
ALMBQABrAP0BQQBrAP0BQwBjAP0BYABrAP0BgABrAP0ByQB7AGQB4wBzAP0B6QB7AGQBIQFrAP0B
AgABAAMAAwAGAAUABwAGAAgACAAAANMAIQEAAAQEJQEAAGcBIQEAAFMEKQEAALQAIQEAAFgFLQEA
AL4BMgEAANgGNwECAAEAAwABAAIAAwACAAMABQABAAQABQACAAoABwACAAsACQACABQACwABABUA
CwACABcADQACABgADwABABkADwACABoAEQAEgAAAAQAAAAAAAAAAAAAAAABIAAAABAAAAAAAAAAA
AAAAvgB9AAAAAAANAAAAAAAAAAAAAADHAA4HAAAAAA0AAAAAAAAAAAAAAMcAKwcAAAAABAAAAAAA
AAAAAAAAvgBoBAAAAAAEAAAAAAAAAAAAAAC+AJIBAAAAAA0AAAAAAAAAAAAAAMcA9wQAAAAAAAAA
AAEAAADhBQAAJwAvACkALwArAC8AAAAAAABJRFRTVmFyaWFibGUxMDAASURUU1ZhcmlhYmxlczEw
MABJRFRTRXZhbHVhdG9yQ29udGV4dDEwMABJRW51bWVyYWJsZWAxAFNDXzk3YmViMDBhMjg3NzRh
M2E5MjMzZDUxYmFkMTgzNmE5ADxNb2R1bGU+AElucHV0SUQAbXNjb3JsaWIAU3lzdGVtLkNvbGxl
Y3Rpb25zLkdlbmVyaWMAZ2V0X0NWRGlzYWJsZWQAc2V0X0NWRGlzYWJsZWQAZ2V0X2N2X2Rpc2Fi
bGVkAHNldF9jdl9kaXNhYmxlZAA8Y3ZfZGlzYWJsZWQ+a19fQmFja2luZ0ZpZWxkADxzdHJpbmdM
ZW5ndGg+a19fQmFja2luZ0ZpZWxkAGRlZmF1bHRJbnN0YW5jZQBFbnVtZXJhYmxlAFJ1bnRpbWVU
eXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAElucHV0TmFtZQBnZXRfbmFtZQBNaWNyb3NvZnQu
U3FsU2VydmVyLkR0cy5QaXBlbGluZQBUeXBlAFN5c3RlbS5Db3JlAGdldF9DdWx0dXJlAHNldF9D
dWx0dXJlAHJlc291cmNlQ3VsdHVyZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBSZXZlcnNlAEVk
aXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2VyTm9u
VXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRy
aWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBU
YXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFz
c2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0
ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJ
U1NjcmlwdENvbXBvbmVudEVudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmli
dXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAFByZUV4ZWN1dGUAUG9zdEV4ZWN1dGUA
c2V0X1ZhbHVlAHZhbHVlAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAR2V0U3RyaW5nAGdldF9M
ZW5ndGgAZ2V0X3N0cmluZ0xlbmd0aABzZXRfc3RyaW5nTGVuZ3RoAFN5c3RlbS5Db21wb25lbnRN
b2RlbABTQ185N2JlYjAwYTI4Nzc0YTNhOTIzM2Q1MWJhZDE4MzZhOS5kbGwAZ2V0X25hbWVfSXNO
dWxsAGdldF9JdGVtAFN5c3RlbQByZXNvdXJjZU1hbgBTY3JpcHRNYWluAFN5c3RlbS5Db25maWd1
cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAFN0cmluZ0NvbXBh
cmlzb24AQ3VsdHVyZUluZm8AT3V0cHV0TmFtZU1hcABPdXRwdXRNYXAATWljcm9zb2Z0LlNxbFNl
cnZlci5EVFNSdW50aW1lV3JhcABTa2lwAFN5c3RlbS5MaW5xAElucHV0MEJ1ZmZlcgBQaXBlbGlu
ZUJ1ZmZlcgBTY3JpcHRCdWZmZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgBNaWNyb3NvZnQuU3FsU2Vy
dmVyLkR0cy5SdW50aW1lLldyYXBwZXIALmN0b3IALmNjdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBT
eXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU0NfOTdiZWIw
MGEyODc3NGEzYTkyMzNkNTFiYWQxODM2YTkuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2Vz
AERlYnVnZ2luZ01vZGVzAFNDXzk3YmViMDBhMjg3NzRhM2E5MjMzZDUxYmFkMTgzNmE5LlByb3Bl
cnRpZXMAZ2V0X1JlYWRXcml0ZVZhcmlhYmxlcwBCdWZmZXJDb2x1bW5JbmRleGVzAEdldENvbHVt
bkluZGV4ZXMAU2V0dGluZ3MARXF1YWxzAENvbm5lY3Rpb25zAENvbmNhdABPYmplY3QARW5kT2ZS
b3dzZXQAZ2V0X0RlZmF1bHQAVXNlckNvbXBvbmVudABQYXJlbnRDb21wb25lbnQAU2NyaXB0Q29t
cG9uZW50AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuVHhTY3JpcHQATWljcm9zb2Z0LlNxbFNlcnZlci5Q
aXBlbGluZUhvc3QASW5wdXQwX1Byb2Nlc3NJbnB1dABHZXRWYWx1ZVdpdGhDb250ZXh0AFNjcmlw
dENvbXBvbmVudEV2YWxDb250ZXh0AGdldF9FdmFsdWF0b3JDb250ZXh0AElucHV0MF9Qcm9jZXNz
SW5wdXRSb3cATmV4dFJvdwByb3cAZ2V0X0Fzc2VtYmx5AAAbIgBkAGkAcwBhAGIAbABlAGQAIgA6
ACAAWwAAA10AAAMiAAAHIgAsACAAAA9JAG4AcAB1AHQAIAAwAAAXQwBWAF8ARABpAHMAYQBiAGwA
ZQBkAABxUwBDAF8AOQA3AGIAZQBiADAAMABhADIAOAA3ADcANABhADMAYQA5ADIAMwAzAGQANQAx
AGIAYQBkADEAOAAzADYAYQA5AC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMA
ZQBzAAAA6APyDKSCsUmz2UslN6n/EQAEIAEBCAMgAAEFIAEBEREEIAEBDgUgAQERXQMgAAgPEAEB
FRJxAR4AFRJxAR4AAwoBAxAQAQIVEnEBHgAVEnEBHgAIChABAQ4VEnEBHgAFAAIODg4HAAQODg4O
DgkgAwESQR0IEkUDBhJBAwYdCAQgAQ4IBCABAggDIAACBiACAg4RdQUgAR0ICAQgABJ5BSABEn0c
BQAAEoCBBiABHBKAhQQgAQEcCAABEoCJEYCNBSAAEoCRByACAQ4SgJEIt3pcVhk04IkIiYRdzYCA
zJECBg4CBggDBhIUAwYSGAMGEkkDBhJVAwYSWQMGEiADIAAOBSABARIMCSAEAQgOEkESRQUgAQES
SQQAABJVBAAAElkFAAEBElkEAAASIAMAAAEDKAAOAygACAMoAAIECAASVQQIABJZBAgAEiAIAQAI
AAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NDXzk3YmVi
MDBhMjg3NzRhM2E5MjMzZDUxYmFkMTgzNmE5AAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMjAA
AEkBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuNQEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUS
Lk5FVCBGcmFtZXdvcmsgNC41BAEAAAAAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNl
cy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0
cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVu
dGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAAAENQAAAAAAAAAAAAAeNQAAACAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAEDUAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRs
bAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABI
AAAAWEAAAOwDAAAAAAAAAAAAAOwDNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAA
AAC9BO/+AAABAAAAAQAAAAAAAAABAAAAAAA/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAA
AAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4A
AAAAAAAAsARMAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAAoAwAAAQAwADAAMAAw
ADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4A
eQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAA
AFMAQwBfADkANwBiAGUAYgAwADAAYQAyADgANwA3ADQAYQAzAGEAOQAyADMAMwBkADUAMQBiAGEA
ZAAxADgAMwA2AGEAOQAAADAACAABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgAw
AC4AMAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8AOQA3AGIAZQBiADAA
MABhADIAOAA3ADcANABhADMAYQA5ADIAMwAzAGQANQAxAGIAYQBkADEAOAAzADYAYQA5AC4AZABs
AGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgA
dAAgAEAAIAAgADIAMAAyADAAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAA
AAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAEMAXwA5ADcA
YgBlAGIAMAAwAGEAMgA4ADcANwA0AGEAMwBhADkAMgAzADMAZAA1ADEAYgBhAGQAMQA4ADMANgBh
ADkALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBDAF8AOQA3AGIA
ZQBiADAAMABhADIAOAA3ADcANABhADMAYQA5ADIAMwAzAGQANQAxAGIAYQBkADEAOAAzADYAYQA5
AAAANAAIAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAADgA
CAABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAAAwNQAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=]]></arrayElement>
                          </arrayElements>
                        </property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                          name="VSTAProjectName"
                          typeConverter="NOTBROWSABLE">SC_97beb00a28774a3a9233d51bad1836a9</property>
                        <property
                          dataType="System.String"
                          description="Specifies the programming language used by the script."
                          name="ScriptLanguage"
                          typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                        <property
                          dataType="System.String"
                          description="Specifies a comma-separated list of read-only variables."
                          name="ReadOnlyVariables"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                        <property
                          dataType="System.String"
                          description="Specifies a comma-separated list of read/write variables."
                          name="ReadWriteVariables"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg">User::CV_Disabled</property>
                        <property
                          dataType="System.String"
                          description="List of breakpoints present on the script."
                          isArray="true"
                          name="BreakpointCollection"
                          typeConverter="NOTBROWSABLE">
                          <arrayElements
                            arrayElementCount="0" />
                        </property>
                        <property
                          dataType="System.String"
                          description="Checksum to match component metedata against compiled codes."
                          name="MetadataChecksum"
                          typeConverter="NOTBROWSABLE">6d6e2de9949022308cbff35e6965c799</property>
                        <property
                          dataType="System.String"
                          description="Checksum to match component metedata against compiled codes."
                          name="MetadataShaChecksum"
                          typeConverter="NOTBROWSABLE">c2945d0102775c8dcfb012fde0f4d15400654c8b</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Create disabled list.Inputs[Input 0]"
                          hasSideEffects="true"
                          name="Input 0">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Create disabled list.Inputs[Input 0].Columns[name]"
                              cachedDataType="wstr"
                              cachedLength="1000"
                              cachedName="name"
                              lineageId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Search custom validation.Outputs[JsonSourceOutput].Columns[name]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Create disabled list.Outputs[Output 0]"
                          name="Output 0"
                          synchronousInputId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Create disabled list.Inputs[Input 0]">
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Create enabled list"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;10"
                      description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                      name="Create enabled list"
                      version="10">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Stores the source code of the component"
                          isArray="true"
                          name="SourceCode"
                          state="cdata">
                          <arrayElements
                            arrayElementCount="30">
                            <arrayElement
                              dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using System.Linq;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    private string cv_enabled { get; set; }
    private int stringLength { get; set; }
    
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();

        cv_enabled = "\"enabled\": [";
        stringLength = cv_enabled.Length;
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();

        if (cv_enabled.Length > stringLength)
        {
            Variables.CVEnabled = string.Concat(cv_enabled.Reverse().Skip(2).Reverse()) + "]";
        }
        else
        {
            Variables.CVEnabled = cv_enabled + "]";
        }
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer row)
    {
        cv_enabled += "\"" + row.name + "\", ";
    }

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[SC_1fc82914a5394a309cf99c688d47f60e.csproj]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{1cf87df0-892d-4ff0-9fd4-a09f846d10ca}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_1fc82914a5394a309cf99c688d47f60e</RootNamespace>
    <AssemblyName>SC_1fc82914a5394a309cf99c688d47f60e</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_1fc82914a5394a309cf99c688d47f60e" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String name
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
    }
    public bool name_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_1fc82914a5394a309cf99c688d47f60e.Properties.Settings.get_Default():SC_1fc82914a5394a309cf99c688d47f60e.Properties.Sett" +
    "ings")]

namespace SC_1fc82914a5394a309cf99c688d47f60e.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String CVEnabled
    {
        get
        {
            return (String)(ParentComponent.ReadWriteVariables["CV_Enabled"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
        set
        {
            ParentComponent.ReadWriteVariables["CV_Enabled"].Value = value;
        }
    }

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Project]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>SC_1fc82914a5394a309cf99c688d47f60e</msb:CodeName>
		<msb:DisplayName>SC_1fc82914a5394a309cf99c688d47f60e</msb:DisplayName>
		<msb:ProjectId>{BFB65BD2-37C7-417C-9B02-88B94FA012E6}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_1fc82914a5394a309cf99c688d47f60e.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_1fc82914a5394a309cf99c688d47f60e")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_1fc82914a5394a309cf99c688d47f60e")]
[assembly: AssemblyCopyright("Copyright @  2020")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_1fc82914a5394a309cf99c688d47f60e.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_1fc82914a5394a309cf99c688d47f60e.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_1fc82914a5394a309cf99c688d47f60e.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_1fc82914a5394a309cf99c688d47f60e.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_1fc82914a5394a309cf99c688d47f60e.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                          </arrayElements>
                        </property>
                        <property
                          dataType="System.String"
                          description="Stores the binary representation of the component"
                          isArray="true"
                          name="BinaryCode"
                          state="cdata">
                          <arrayElements
                            arrayElementCount="2">
                            <arrayElement
                              dataType="System.String"><![CDATA[SC_1fc82914a5394a309cf99c688d47f60e.dll]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDALzfV14AAAAAAAAAAOAAIiALATAAABYAAAAIAAAAAAAAJjUA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAANQ0AABPAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAALBUAAAAgAAAAFgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAAYAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAI
NQAAAAAAAEgAAAACAAUAiCIAAJQRAAABAAAAAAAAABw0AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CewEAAAQqIgIDfQEAAAQqHgJ7AgAABCoiAgN9AgAABCqO
AigQAAAKAnIBAABwKAIAAAYCAigBAAAGbxEAAAooBAAABioAABMwAwBmAAAAAAAAAAIoEgAACgIo
AQAABm8RAAAKAigDAAAGMTECewQAAAQCKAEAAAYoAQAAKxgoAgAAKygBAAArKAMAACtyGwAAcCgW
AAAKbxUAAAYqAnsEAAAEAigBAAAGchsAAHAoFgAACm8VAAAGKooCAigBAAAGch8AAHADbwoAAAZy
IwAAcCgXAAAKKAIAAAYqHgIoDgAABioqAgMEBSgYAAAKKlICexkAAAoCexoAAAoWlG8bAAAKKiIC
FigcAAAKKh4CKB0AAAoqHgIoHgAACip+AigfAAAKAgJzEgAABn0DAAAEAgJzEwAABn0EAAAEKpIE
cisAAHAabyAAAAosFQIFAgMoIQAACg4EcwkAAAZvEAAABipKKwcCA28RAAAGA28MAAAGLfEqBio6
AigiAAAKAgN9BQAABCo6AigiAAAKAgN9BgAABCqWAnsGAAAEbyMAAApyOwAAcG8kAAAKKCUAAApv
JgAACnQaAAABKnICewYAAARvIwAACnI7AABwbyQAAAoDbycAAAoqHgIoIgAACiqufgcAAAQtHnJR
AABw0AcAAAIoKAAACm8pAAAKcyoAAAqABwAABH4HAAAEKhp+CAAABCoeAoAIAAAEKhp+CQAABCoe
AigrAAAKKi5zGwAABoAJAAAEKgBCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAACA
BgAAI34AAOwGAADQBwAAI1N0cmluZ3MAAAAAvA4AAMQAAAAjVVMAgA8AABAAAAAjR1VJRAAAAJAP
AAAEAgAAI0Jsb2IAAAAAAAAAAgAAAVcVoAEJCQAAAPoBMwAWAAABAAAAJAAAAAgAAAAJAAAAHAAA
ABAAAAArAAAAFgAAAAUAAAAIAAAADAAAAAEAAAAGAAAAAQAAAAMAAAAAACIEAQAAAAAABgDiAqsF
BgB2A6sFBgAuApgFDwAfBgAABgBbAqsEBgDFAqsEBgCmAqsEBgBdA6sEBgACA6sEBgAbA6sEBgBy
AqsEBgCNArsDCgA2A2cBBgD2AasFCgBCBWcBDgAzBWcBCgDaBGcBCgD5BmcBBgC8BmMEBgARApgF
BgBTBcsFBgDOBJYEEgDhAQwEEgBCAgwEEgDBAYEEBgDYA2MEFgAlARoFBgA6AGIABgC9BGMEGgAR
AGMFGgABAGMFSwBvBwAAGgAiAGMFBgCIAWMEBgAwAWMEBgDGB6sEAAAAAEgAAAAAAAEAAQABABAA
dgQAABAAAQABAAEAEAAmBQAAPQADAAkAAQAQANsGAABJAAMADgABABAAqQYAAE0ABQASAAEAEABq
BgAATQAGABMAAAAQANIFLgZNAAcAFgAAARAAmQYuBmUACQAaAAEAtwDQAAEA0wDTAAYAqQbWAAYA
agbaAAEA6QbeAAEA6QbeABEAagTiABEAsQHmABEAFQHqAFAgAAAAAIEImQDuAAEAWCAAAAAAgQio
ABAAAQBhIAAAAACBCOoDGwACAGkgAAAAAIEI+wMBAAIAciAAAAAAxgCUAwYAAwCYIAAAAADGAJ8D
BgADAAohAAAAAMYAnwfyAAMALSEAAAAAhhiLBQYABAA1IQAAAACGGIsFXQAEAEAhAAAAAIYIXgHu
AAcAVSEAAAAAhghKBHkABwBeIQAAAACGALYHeQAHAGYhAAAAAIYAwwZ5AAcAbiEAAAAAhhiLBQYA
BwCOIQAAAADGAE4H+AAHALMhAAAAAMYBRwfyAAsAxiEAAAAAxgGfB/IADADIIQAAAACGGIsFAgEN
ANchAAAAAIYYiwUCAQ4A5iEAAAAAhgh9AO4ADwAMIgAAAACGCIsAEAAPACkiAAAAAIMYiwUGABAA
MSIAAAAAkwhPBQgBEABdIgAAAACTCJkBDQEQAGQiAAAAAJMIpQESARAAbCIAAAAAlgjPBhgBEQBz
IgAAAACGGIsFBgARAHsiAAAAAJEYkQUdAREAAAABALUDAAABALUDAAABAL4HAAABAEgFAAACAHQG
AAADAOgEAAABAFEAAAACAFQBAAADAEgFAAAEAOgEAAABAEgFAAABALoHAAABAP8GAAABAP8GAAAB
ALUDAAABALUDCQCLBQEAEQCLBQYAGQCLBQoAKQCLBRAAMQCLBRAAOQCLBRAAQQCLBRAASQCLBRAA
UQCLBRAAWQCLBRAAYQCLBRAAaQCLBQYAcQCLBQYAoQCLBQYAwQCLBRUAkQCUAwYA0QDfAxsAkQCf
AwYA2QDZAR8A2QAVBTMA0QC1BkQA0QC1Bk8A0QC1BlUAeQCLBV0AeQBIBWcAeQB0BmsAgQDVA28A
eQBTBHQAeQC2B3kAeQDDBnkAkQCLBQYA0QCiBn0AkQCIBoQAmQCLBQYAkQBdBooA8QBaBI8AkQCK
B5UA+QBbB5sA+QCrA6IAEQFCAacAEQHCB7AAqQCLBbYAyQCLBQYAIABrAP0BIQBrAP0BLgALADwB
LgATAEUBLgAbAGQBLgAjAG0BLgArAJYBLgAzAJYBLgA7AJYBLgBDAG0BLgBLAJwBLgBTAJYBLgBb
ALMBQABrAP0BQQBrAP0BQwBjAP0BYABrAP0BgABrAP0ByQB7AGQB4wBzAP0B6QB7AGQBIQFrAP0B
AgABAAMAAwAGAAUABwAGAAgACAAAAKwAIQEAAP8DJQEAAGIBIQEAAE4EKQEAAI8AIQEAAFMFLQEA
ALkBMgEAANMGNwECAAEAAwABAAIAAwACAAMABQABAAQABQACAAoABwACAAsACQACABQACwABABUA
CwACABcADQACABgADwABABkADwACABoAEQAEgAAAAQAAAAAAAAAAAAAAAADxAAAABAAAAAAAAAAA
AAAAvgBZAAAAAAANAAAAAAAAAAAAAADHAAkHAAAAAA0AAAAAAAAAAAAAAMcAJgcAAAAABAAAAAAA
AAAAAAAAvgBjBAAAAAAEAAAAAAAAAAAAAAC+AI0BAAAAAA0AAAAAAAAAAAAAAMcA8gQAAAAAAAAA
AAEAAADcBQAAJwAvACkALwArAC8AAAAAAABJRFRTVmFyaWFibGUxMDAASURUU1ZhcmlhYmxlczEw
MABJRFRTRXZhbHVhdG9yQ29udGV4dDEwMABJRW51bWVyYWJsZWAxADxNb2R1bGU+AElucHV0SUQA
bXNjb3JsaWIAU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMAZ2V0X0NWRW5hYmxlZABzZXRfQ1ZF
bmFibGVkAGdldF9jdl9lbmFibGVkAHNldF9jdl9lbmFibGVkADxjdl9lbmFibGVkPmtfX0JhY2tp
bmdGaWVsZAA8c3RyaW5nTGVuZ3RoPmtfX0JhY2tpbmdGaWVsZABTQ18xZmM4MjkxNGE1Mzk0YTMw
OWNmOTljNjg4ZDQ3ZjYwZQBkZWZhdWx0SW5zdGFuY2UARW51bWVyYWJsZQBSdW50aW1lVHlwZUhh
bmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBJbnB1dE5hbWUAZ2V0X25hbWUATWljcm9zb2Z0LlNxbFNl
cnZlci5EdHMuUGlwZWxpbmUAVHlwZQBTeXN0ZW0uQ29yZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVy
ZQByZXNvdXJjZUN1bHR1cmUAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UAUmV2ZXJzZQBFZGl0b3JC
cm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJD
b2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRl
AEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0
RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJs
eURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNz
ZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3Jp
cHRDb21wb25lbnRFbnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBS
dW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBQcmVFeGVjdXRlAFBvc3RFeGVjdXRlAHNldF9W
YWx1ZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAEdldFN0cmluZwBnZXRfTGVuZ3Ro
AGdldF9zdHJpbmdMZW5ndGgAc2V0X3N0cmluZ0xlbmd0aABTeXN0ZW0uQ29tcG9uZW50TW9kZWwA
U0NfMWZjODI5MTRhNTM5NGEzMDljZjk5YzY4OGQ0N2Y2MGUuZGxsAGdldF9uYW1lX0lzTnVsbABn
ZXRfSXRlbQBTeXN0ZW0AcmVzb3VyY2VNYW4AU2NyaXB0TWFpbgBTeXN0ZW0uQ29uZmlndXJhdGlv
bgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBTdHJpbmdDb21wYXJpc29u
AEN1bHR1cmVJbmZvAE91dHB1dE5hbWVNYXAAT3V0cHV0TWFwAE1pY3Jvc29mdC5TcWxTZXJ2ZXIu
RFRTUnVudGltZVdyYXAAU2tpcABTeXN0ZW0uTGlucQBJbnB1dDBCdWZmZXIAUGlwZWxpbmVCdWZm
ZXIAU2NyaXB0QnVmZmVyAGdldF9SZXNvdXJjZU1hbmFnZXIATWljcm9zb2Z0LlNxbFNlcnZlci5E
dHMuUnVudGltZS5XcmFwcGVyAC5jdG9yAC5jY3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVt
LlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNDXzFmYzgyOTE0YTUz
OTRhMzA5Y2Y5OWM2ODhkNDdmNjBlLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1
Z2dpbmdNb2RlcwBTQ18xZmM4MjkxNGE1Mzk0YTMwOWNmOTljNjg4ZDQ3ZjYwZS5Qcm9wZXJ0aWVz
AGdldF9SZWFkV3JpdGVWYXJpYWJsZXMAQnVmZmVyQ29sdW1uSW5kZXhlcwBHZXRDb2x1bW5JbmRl
eGVzAFNldHRpbmdzAEVxdWFscwBDb25uZWN0aW9ucwBDb25jYXQAT2JqZWN0AEVuZE9mUm93c2V0
AGdldF9EZWZhdWx0AFVzZXJDb21wb25lbnQAUGFyZW50Q29tcG9uZW50AFNjcmlwdENvbXBvbmVu
dABNaWNyb3NvZnQuU3FsU2VydmVyLlR4U2NyaXB0AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuUGlwZWxp
bmVIb3N0AElucHV0MF9Qcm9jZXNzSW5wdXQAR2V0VmFsdWVXaXRoQ29udGV4dABTY3JpcHRDb21w
b25lbnRFdmFsQ29udGV4dABnZXRfRXZhbHVhdG9yQ29udGV4dABJbnB1dDBfUHJvY2Vzc0lucHV0
Um93AE5leHRSb3cAcm93AGdldF9Bc3NlbWJseQAAABkiAGUAbgBhAGIAbABlAGQAIgA6ACAAWwAA
A10AAAMiAAAHIgAsACAAAA9JAG4AcAB1AHQAIAAwAAAVQwBWAF8ARQBuAGEAYgBsAGUAZAAAcVMA
QwBfADEAZgBjADgAMgA5ADEANABhADUAMwA5ADQAYQAzADAAOQBjAGYAOQA5AGMANgA4ADgAZAA0
ADcAZgA2ADAAZQAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAAH9c
SLKg6V9Ep/PR4G+e3wIABCABAQgDIAABBSABARERBCABAQ4FIAEBEV0DIAAIDxABARUScQEeABUS
cQEeAAMKAQMQEAECFRJxAR4AFRJxAR4ACAoQAQEOFRJxAR4ABQACDg4OBwAEDg4ODg4JIAMBEkEd
CBJFAwYSQQMGHQgEIAEOCAQgAQIIAyAAAgYgAgIOEXUFIAEdCAgEIAASeQUgARJ9HAUAABKAgQYg
ARwSgIUEIAEBHAgAARKAiRGAjQUgABKAkQcgAgEOEoCRCLd6XFYZNOCJCImEXc2AgMyRAgYOAgYI
AwYSFAMGEhgDBhJJAwYSVQMGElkDBhIgAyAADgUgAQESDAkgBAEIDhJBEkUFIAEBEkkEAAASVQQA
ABJZBQABARJZBAAAEiADAAABAygADgMoAAgDKAACBAgAElUECAASWQQIABIgCAEACAAAAAAAHgEA
AQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTQ18xZmM4MjkxNGE1Mzk0
YTMwOWNmOTljNjg4ZDQ3ZjYwZQAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDIwAABJAQAaLk5F
VEZyYW1ld29yayxWZXJzaW9uPXY0LjUBAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEi5ORVQgRnJh
bWV3b3JrIDQuNQQBAAAAAAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3Vy
Y2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVi
bGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNv
dXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAA/DQAAAAAAAAAAAAAFjUAAAAgAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAg1AAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8l
ACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABI
AAAAWEAAAOwDAAAAAAAAAAAAAOwDNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAA
AAC9BO/+AAABAAAAAQAAAAAAAAABAAAAAAA/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAA
AAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4A
AAAAAAAAsARMAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAAoAwAAAQAwADAAMAAw
ADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4A
eQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAA
AFMAQwBfADEAZgBjADgAMgA5ADEANABhADUAMwA5ADQAYQAzADAAOQBjAGYAOQA5AGMANgA4ADgA
ZAA0ADcAZgA2ADAAZQAAADAACAABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgAw
AC4AMAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8AMQBmAGMAOAAyADkA
MQA0AGEANQAzADkANABhADMAMAA5AGMAZgA5ADkAYwA2ADgAOABkADQANwBmADYAMABlAC4AZABs
AGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgA
dAAgAEAAIAAgADIAMAAyADAAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAA
AAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAEMAXwAxAGYA
YwA4ADIAOQAxADQAYQA1ADMAOQA0AGEAMwAwADkAYwBmADkAOQBjADYAOAA4AGQANAA3AGYANgAw
AGUALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBDAF8AMQBmAGMA
OAAyADkAMQA0AGEANQAzADkANABhADMAMAA5AGMAZgA5ADkAYwA2ADgAOABkADQANwBmADYAMABl
AAAANAAIAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAADgA
CAABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAAAoNQAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=]]></arrayElement>
                          </arrayElements>
                        </property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                          name="VSTAProjectName"
                          typeConverter="NOTBROWSABLE">SC_1fc82914a5394a309cf99c688d47f60e</property>
                        <property
                          dataType="System.String"
                          description="Specifies the programming language used by the script."
                          name="ScriptLanguage"
                          typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                        <property
                          dataType="System.String"
                          description="Specifies a comma-separated list of read-only variables."
                          name="ReadOnlyVariables"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                        <property
                          dataType="System.String"
                          description="Specifies a comma-separated list of read/write variables."
                          name="ReadWriteVariables"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg">User::CV_Enabled</property>
                        <property
                          dataType="System.String"
                          description="List of breakpoints present on the script."
                          isArray="true"
                          name="BreakpointCollection"
                          typeConverter="NOTBROWSABLE">
                          <arrayElements
                            arrayElementCount="0" />
                        </property>
                        <property
                          dataType="System.String"
                          description="Checksum to match component metedata against compiled codes."
                          name="MetadataChecksum"
                          typeConverter="NOTBROWSABLE">d45520dd68a41a1c7fa3010c15c10d5b</property>
                        <property
                          dataType="System.String"
                          description="Checksum to match component metedata against compiled codes."
                          name="MetadataShaChecksum"
                          typeConverter="NOTBROWSABLE">f14447afae55981b2b8790a2eb8efb27f48e1939</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Create enabled list.Inputs[Input 0]"
                          hasSideEffects="true"
                          name="Input 0">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Create enabled list.Inputs[Input 0].Columns[name]"
                              cachedDataType="wstr"
                              cachedLength="1000"
                              cachedName="name"
                              lineageId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Search custom validation.Outputs[JsonSourceOutput].Columns[name]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Create enabled list.Outputs[Output 0]"
                          name="Output 0"
                          synchronousInputId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Create enabled list.Inputs[Input 0]">
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Create hidden list"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;10"
                      description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                      name="Create hidden list"
                      version="10">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Stores the source code of the component"
                          isArray="true"
                          name="SourceCode"
                          state="cdata">
                          <arrayElements
                            arrayElementCount="30">
                            <arrayElement
                              dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using System.Linq;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    private string cv_hidden { get; set; }
    private int stringLength { get; set; }

    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();

        cv_hidden = "\"hidden\": [";
        stringLength = cv_hidden.Length;
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();

        if (cv_hidden.Length > stringLength)
        {
            Variables.CVHidden = string.Concat(cv_hidden.Reverse().Skip(2).Reverse()) + "]";
        }
        else
        {
            Variables.CVHidden = cv_hidden + "]";
        }
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer row)
    {
        cv_hidden += "\"" + row.name + "\", ";
    }
}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[SC_adb191c524334c97a20e8438912267ca.csproj]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{ef32fe7d-15a1-467a-b9e9-d31251e9dd23}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_adb191c524334c97a20e8438912267ca</RootNamespace>
    <AssemblyName>SC_adb191c524334c97a20e8438912267ca</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_adb191c524334c97a20e8438912267ca" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String name
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
    }
    public bool name_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_adb191c524334c97a20e8438912267ca.Properties.Settings.get_Default():SC_adb191c524334c97a20e8438912267ca.Properties.Sett" +
    "ings")]

namespace SC_adb191c524334c97a20e8438912267ca.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String CVHidden
    {
        get
        {
            return (String)(ParentComponent.ReadWriteVariables["CV_Hidden"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
        set
        {
            ParentComponent.ReadWriteVariables["CV_Hidden"].Value = value;
        }
    }

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Project]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>SC_adb191c524334c97a20e8438912267ca</msb:CodeName>
		<msb:DisplayName>SC_adb191c524334c97a20e8438912267ca</msb:DisplayName>
		<msb:ProjectId>{4D152763-4E88-41B7-B76F-C4796BCB8EEA}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_adb191c524334c97a20e8438912267ca.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_adb191c524334c97a20e8438912267ca")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_adb191c524334c97a20e8438912267ca")]
[assembly: AssemblyCopyright("Copyright @  2020")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_adb191c524334c97a20e8438912267ca.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_adb191c524334c97a20e8438912267ca.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_adb191c524334c97a20e8438912267ca.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_adb191c524334c97a20e8438912267ca.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_adb191c524334c97a20e8438912267ca.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                          </arrayElements>
                        </property>
                        <property
                          dataType="System.String"
                          description="Stores the binary representation of the component"
                          isArray="true"
                          name="BinaryCode"
                          state="cdata">
                          <arrayElements
                            arrayElementCount="2">
                            <arrayElement
                              dataType="System.String"><![CDATA[SC_adb191c524334c97a20e8438912267ca.dll]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAPbeV14AAAAAAAAAAOAAIiALATAAABYAAAAIAAAAAAAAHjUA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAMw0AABPAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAJBUAAAAgAAAAFgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAAYAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAA
NQAAAAAAAEgAAAACAAUAiCIAAIwRAAABAAAAAAAAABQ0AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CewEAAAQqIgIDfQEAAAQqHgJ7AgAABCoiAgN9AgAABCqO
AigQAAAKAnIBAABwKAIAAAYCAigBAAAGbxEAAAooBAAABioAABMwAwBmAAAAAAAAAAIoEgAACgIo
AQAABm8RAAAKAigDAAAGMTECewQAAAQCKAEAAAYoAQAAKxgoAgAAKygBAAArKAMAACtyGQAAcCgW
AAAKbxUAAAYqAnsEAAAEAigBAAAGchkAAHAoFgAACm8VAAAGKooCAigBAAAGch0AAHADbwoAAAZy
IQAAcCgXAAAKKAIAAAYqHgIoDgAABioqAgMEBSgYAAAKKlICexkAAAoCexoAAAoWlG8bAAAKKiIC
FigcAAAKKh4CKB0AAAoqHgIoHgAACip+AigfAAAKAgJzEgAABn0DAAAEAgJzEwAABn0EAAAEKpIE
cikAAHAabyAAAAosFQIFAgMoIQAACg4EcwkAAAZvEAAABipKKwcCA28RAAAGA28MAAAGLfEqBio6
AigiAAAKAgN9BQAABCo6AigiAAAKAgN9BgAABCqWAnsGAAAEbyMAAApyOQAAcG8kAAAKKCUAAApv
JgAACnQaAAABKnICewYAAARvIwAACnI5AABwbyQAAAoDbycAAAoqHgIoIgAACiqufgcAAAQtHnJN
AABw0AcAAAIoKAAACm8pAAAKcyoAAAqABwAABH4HAAAEKhp+CAAABCoeAoAIAAAEKhp+CQAABCoe
AigrAAAKKi5zGwAABoAJAAAEKgBCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAACA
BgAAI34AAOwGAADMBwAAI1N0cmluZ3MAAAAAuA4AAMAAAAAjVVMAeA8AABAAAAAjR1VJRAAAAIgP
AAAEAgAAI0Jsb2IAAAAAAAAAAgAAAVcVoAEJCQAAAPoBMwAWAAABAAAAJAAAAAgAAAAJAAAAHAAA
ABAAAAArAAAAFgAAAAUAAAAIAAAADAAAAAEAAAAGAAAAAQAAAAMAAAAAAOcDAQAAAAAABgCnAqYF
BgA7A6YFBgDzAZMFDwAaBgAABgAgAqYEBgCKAqYEBgBrAqYEBgAiA6YEBgDHAqYEBgDgAqYEBgA3
AqYEBgBSAoADCgD7AiwBBgC7AaYFCgA9BSwBDgAuBSwBCgDVBCwBCgD0BiwBBgC3BigEBgDWAZMF
BgBOBcYFBgDJBJEEEgCmAdEDEgAHAtEDEgCGAXwEBgCdAygEFgDqABUFBgA6AIYABgC4BCgEGgAR
AF4FGgABAF4FSwBqBwAAGgAiAF4FBgBNASgEBgD1ACgEBgDBB6YEAAAAAEgAAAAAAAEAAQABABAA
cQQAABAAAQABAAEAEAAhBQAAPQADAAkAAQAQANYGAABJAAMADgABABAApAYAAE0ABQASAAEAEABl
BgAATQAGABMAAAAQAM0FKQZNAAcAFgAAARAAlAYpBmUACQAaAAEAvwDQAAEAoQDTAAYApAbWAAYA
ZQbaAAEA5AbeAAEA5AbeABEALwTiABEAdgHmABEA2gDqAFAgAAAAAIEIVQTuAAEAWCAAAAAAgQhj
BBAAAQBhIAAAAACBCK8DGwACAGkgAAAAAIEIwAMBAAIAciAAAAAAxgBZAwYAAwCYIAAAAADGAGQD
BgADAAohAAAAAMYAmgfyAAMALSEAAAAAhhiGBQYABAA1IQAAAACGGIYFXQAEAEAhAAAAAIYIIwHu
AAcAVSEAAAAAhggPBHkABwBeIQAAAACGALEHeQAHAGYhAAAAAIYAvgZ5AAcAbiEAAAAAhhiGBQYA
BwCOIQAAAADGAEkH+AAHALMhAAAAAMYBQgfyAAsAxiEAAAAAxgGaB/IADADIIQAAAACGGIYFAgEN
ANchAAAAAIYYhgUCAQ4A5iEAAAAAhgg7BO4ADwAMIgAAAACGCEgEEAAPACkiAAAAAIMYhgUGABAA
MSIAAAAAkwhKBQgBEABdIgAAAACTCF4BDQEQAGQiAAAAAJMIagESARAAbCIAAAAAlgjKBhgBEQBz
IgAAAACGGIYFBgARAHsiAAAAAJEYjAUdAREAAAABAHoDAAABAHoDAAABALkHAAABAEMFAAACAG8G
AAADAOMEAAABAFEAAAACABkBAAADAEMFAAAEAOMEAAABAEMFAAABALUHAAABAPoGAAABAPoGAAAB
AHoDAAABAHoDCQCGBQEAEQCGBQYAGQCGBQoAKQCGBRAAMQCGBRAAOQCGBRAAQQCGBRAASQCGBRAA
UQCGBRAAWQCGBRAAYQCGBRAAaQCGBQYAcQCGBQYAoQCGBQYAwQCGBRUAkQBZAwYA0QCkAxsAkQBk
AwYA2QCeAR8A2QAQBTMA0QCwBkQA0QCwBk8A0QCwBlUAeQCGBV0AeQBDBWcAeQBvBmsAgQCaA28A
eQAYBHQAeQCxB3kAeQC+BnkAkQCGBQYA0QCdBn0AkQCDBoQAmQCGBQYAkQBYBooA8QAfBI8AkQCF
B5UA+QBWB5sA+QBwA6IAEQEHAacAEQG9B7AAqQCGBbYAyQCGBQYAIABrAP0BIQBrAP0BLgALADwB
LgATAEUBLgAbAGQBLgAjAG0BLgArAJYBLgAzAJYBLgA7AJYBLgBDAG0BLgBLAJwBLgBTAJYBLgBb
ALMBQABrAP0BQQBrAP0BQwBjAP0BYABrAP0BgABrAP0ByQB7AGQB4wBzAP0B6QB7AGQBIQFrAP0B
AgABAAMAAwAGAAUABwAGAAgACAAAAGcEIQEAAMQDJQEAACcBIQEAABMEKQEAAEwEIQEAAE4FLQEA
AH4BMgEAAM4GNwECAAEAAwABAAIAAwACAAMABQABAAQABQACAAoABwACAAsACQACABQACwABABUA
CwACABcADQACABgADwABABkADwACABoAEQAEgAAAAQAAAAAAAAAAAAAAAABZAAAABAAAAAAAAAAA
AAAAvgB9AAAAAAANAAAAAAAAAAAAAADHAAQHAAAAAA0AAAAAAAAAAAAAAMcAIQcAAAAABAAAAAAA
AAAAAAAAvgAoBAAAAAAEAAAAAAAAAAAAAAC+AFIBAAAAAA0AAAAAAAAAAAAAAMcA7QQAAAAAAAAA
AAEAAADXBQAAJwAvACkALwArAC8AAAAAAABJRFRTVmFyaWFibGUxMDAASURUU1ZhcmlhYmxlczEw
MABJRFRTRXZhbHVhdG9yQ29udGV4dDEwMABJRW51bWVyYWJsZWAxADxNb2R1bGU+AElucHV0SUQA
U0NfYWRiMTkxYzUyNDMzNGM5N2EyMGU4NDM4OTEyMjY3Y2EAbXNjb3JsaWIAU3lzdGVtLkNvbGxl
Y3Rpb25zLkdlbmVyaWMAPHN0cmluZ0xlbmd0aD5rX19CYWNraW5nRmllbGQAPGN2X2hpZGRlbj5r
X19CYWNraW5nRmllbGQAZGVmYXVsdEluc3RhbmNlAEVudW1lcmFibGUAUnVudGltZVR5cGVIYW5k
bGUAR2V0VHlwZUZyb21IYW5kbGUASW5wdXROYW1lAGdldF9uYW1lAE1pY3Jvc29mdC5TcWxTZXJ2
ZXIuRHRzLlBpcGVsaW5lAFR5cGUAU3lzdGVtLkNvcmUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUA
cmVzb3VyY2VDdWx0dXJlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAFJldmVyc2UARWRpdG9yQnJv
d3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29k
ZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBB
c3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZy
YW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlE
ZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2Vt
Ymx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0
Q29tcG9uZW50RW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVu
dGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAUHJlRXhlY3V0ZQBQb3N0RXhlY3V0ZQBzZXRfVmFs
dWUAdmFsdWUAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBHZXRTdHJpbmcAZ2V0X0xlbmd0aABn
ZXRfc3RyaW5nTGVuZ3RoAHNldF9zdHJpbmdMZW5ndGgAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFND
X2FkYjE5MWM1MjQzMzRjOTdhMjBlODQzODkxMjI2N2NhLmRsbABnZXRfbmFtZV9Jc051bGwAZ2V0
X0l0ZW0AU3lzdGVtAHJlc291cmNlTWFuAGdldF9DVkhpZGRlbgBzZXRfQ1ZIaWRkZW4AZ2V0X2N2
X2hpZGRlbgBzZXRfY3ZfaGlkZGVuAFNjcmlwdE1haW4AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lz
dGVtLkdsb2JhbGl6YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24AU3RyaW5nQ29tcGFyaXNvbgBDdWx0
dXJlSW5mbwBPdXRwdXROYW1lTWFwAE91dHB1dE1hcABNaWNyb3NvZnQuU3FsU2VydmVyLkRUU1J1
bnRpbWVXcmFwAFNraXAAU3lzdGVtLkxpbnEASW5wdXQwQnVmZmVyAFBpcGVsaW5lQnVmZmVyAFNj
cmlwdEJ1ZmZlcgBnZXRfUmVzb3VyY2VNYW5hZ2VyAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1
bnRpbWUuV3JhcHBlcgAuY3RvcgAuY2N0b3IAU3lzdGVtLkRpYWdub3N0aWNzAFN5c3RlbS5SdW50
aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBTQ19hZGIxOTFjNTI0MzM0Yzk3
YTIwZTg0Mzg5MTIyNjdjYS5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMARGVidWdnaW5n
TW9kZXMAU0NfYWRiMTkxYzUyNDMzNGM5N2EyMGU4NDM4OTEyMjY3Y2EuUHJvcGVydGllcwBnZXRf
UmVhZFdyaXRlVmFyaWFibGVzAEJ1ZmZlckNvbHVtbkluZGV4ZXMAR2V0Q29sdW1uSW5kZXhlcwBT
ZXR0aW5ncwBFcXVhbHMAQ29ubmVjdGlvbnMAQ29uY2F0AE9iamVjdABFbmRPZlJvd3NldABnZXRf
RGVmYXVsdABVc2VyQ29tcG9uZW50AFBhcmVudENvbXBvbmVudABTY3JpcHRDb21wb25lbnQATWlj
cm9zb2Z0LlNxbFNlcnZlci5UeFNjcmlwdABNaWNyb3NvZnQuU3FsU2VydmVyLlBpcGVsaW5lSG9z
dABJbnB1dDBfUHJvY2Vzc0lucHV0AEdldFZhbHVlV2l0aENvbnRleHQAU2NyaXB0Q29tcG9uZW50
RXZhbENvbnRleHQAZ2V0X0V2YWx1YXRvckNvbnRleHQASW5wdXQwX1Byb2Nlc3NJbnB1dFJvdwBO
ZXh0Um93AHJvdwBnZXRfQXNzZW1ibHkAAAAAFyIAaABpAGQAZABlAG4AIgA6ACAAWwAAA10AAAMi
AAAHIgAsACAAAA9JAG4AcAB1AHQAIAAwAAATQwBWAF8ASABpAGQAZABlAG4AAHFTAEMAXwBhAGQA
YgAxADkAMQBjADUAMgA0ADMAMwA0AGMAOQA3AGEAMgAwAGUAOAA0ADMAOAA5ADEAMgAyADYANwBj
AGEALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAACPOqpCAVfCTr0w
22OC72MAAAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARFdAyAACA8QAQEVEnEBHgAVEnEBHgADCgED
EBABAhUScQEeABUScQEeAAgKEAEBDhUScQEeAAUAAg4ODgcABA4ODg4OCSADARJBHQgSRQMGEkED
Bh0IBCABDggEIAECCAMgAAIGIAICDhF1BSABHQgIBCAAEnkFIAESfRwFAAASgIEGIAEcEoCFBCAB
ARwIAAESgIkRgI0FIAASgJEHIAIBDhKAkQi3elxWGTTgiQiJhF3NgIDMkQIGDgIGCAMGEhQDBhIY
AwYSSQMGElUDBhJZAwYSIAMgAA4FIAEBEgwJIAQBCA4SQRJFBSABARJJBAAAElUEAAASWQUAAQES
WQQAABIgAwAAAQMoAA4DKAAIAygAAgQIABJVBAgAElkECAASIAgBAAgAAAAAAB4BAAEAVAIWV3Jh
cE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU0NfYWRiMTkxYzUyNDMzNGM5N2EyMGU4
NDM4OTEyMjY3Y2EAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAyMAAASQEAGi5ORVRGcmFtZXdv
cmssVmVyc2lvbj12NC41AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0
LjUEAQAAAAAAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVy
LCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRv
a2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQC
AAAAAAAAAAAAAABQQURQQURQtAAAAPQ0AAAAAAAAAAAAAA41AAAAIAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAANQAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABI
AAAAWEAAAOwDAAAAAAAAAAAAAOwDNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAA
AAC9BO/+AAABAAAAAQAAAAAAAAABAAAAAAA/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAA
AAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4A
AAAAAAAAsARMAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAAoAwAAAQAwADAAMAAw
ADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4A
eQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAA
AFMAQwBfAGEAZABiADEAOQAxAGMANQAyADQAMwAzADQAYwA5ADcAYQAyADAAZQA4ADQAMwA4ADkA
MQAyADIANgA3AGMAYQAAADAACAABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgAw
AC4AMAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8AYQBkAGIAMQA5ADEA
YwA1ADIANAAzADMANABjADkANwBhADIAMABlADgANAAzADgAOQAxADIAMgA2ADcAYwBhAC4AZABs
AGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgA
dAAgAEAAIAAgADIAMAAyADAAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAA
AAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAEMAXwBhAGQA
YgAxADkAMQBjADUAMgA0ADMAMwA0AGMAOQA3AGEAMgAwAGUAOAA0ADMAOAA5ADEAMgAyADYANwBj
AGEALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBDAF8AYQBkAGIA
MQA5ADEAYwA1ADIANAAzADMANABjADkANwBhADIAMABlADgANAAzADgAOQAxADIAMgA2ADcAYwBh
AAAANAAIAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAADgA
CAABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAAAgNQAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=]]></arrayElement>
                          </arrayElements>
                        </property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                          name="VSTAProjectName"
                          typeConverter="NOTBROWSABLE">SC_adb191c524334c97a20e8438912267ca</property>
                        <property
                          dataType="System.String"
                          description="Specifies the programming language used by the script."
                          name="ScriptLanguage"
                          typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                        <property
                          dataType="System.String"
                          description="Specifies a comma-separated list of read-only variables."
                          name="ReadOnlyVariables"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                        <property
                          dataType="System.String"
                          description="Specifies a comma-separated list of read/write variables."
                          name="ReadWriteVariables"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg">User::CV_Hidden</property>
                        <property
                          dataType="System.String"
                          description="List of breakpoints present on the script."
                          isArray="true"
                          name="BreakpointCollection"
                          typeConverter="NOTBROWSABLE">
                          <arrayElements
                            arrayElementCount="0" />
                        </property>
                        <property
                          dataType="System.String"
                          description="Checksum to match component metedata against compiled codes."
                          name="MetadataChecksum"
                          typeConverter="NOTBROWSABLE">9571ab25312e84c6ea0a1ef5cab4b46e</property>
                        <property
                          dataType="System.String"
                          description="Checksum to match component metedata against compiled codes."
                          name="MetadataShaChecksum"
                          typeConverter="NOTBROWSABLE">a4c0b0404e942533ef203e0d0a7b81bebcd96c66</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Create hidden list.Inputs[Input 0]"
                          hasSideEffects="true"
                          name="Input 0">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Create hidden list.Inputs[Input 0].Columns[name]"
                              cachedDataType="wstr"
                              cachedLength="1000"
                              cachedName="name"
                              lineageId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Search custom validation.Outputs[JsonSourceOutput].Columns[name]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Create hidden list.Outputs[Output 0]"
                          name="Output 0"
                          synchronousInputId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Create hidden list.Inputs[Input 0]">
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Create visible list"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;10"
                      description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                      name="Create visible list"
                      version="10">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Stores the source code of the component"
                          isArray="true"
                          name="SourceCode"
                          state="cdata">
                          <arrayElements
                            arrayElementCount="30">
                            <arrayElement
                              dataType="System.String"><![CDATA[SC_0ee4a97d4c75480f9e5a9c2b826341fe.csproj]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{245ed21b-a7f2-4110-bfc8-a04ec7292e92}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_0ee4a97d4c75480f9e5a9c2b826341fe</RootNamespace>
    <AssemblyName>SC_0ee4a97d4c75480f9e5a9c2b826341fe</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_0ee4a97d4c75480f9e5a9c2b826341fe" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using System.Linq;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    private string cv_visible { get; set; }
    private int stringLength { get; set; }

    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();

        cv_visible = "\"visible\": [";
        stringLength = cv_visible.Length;
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();

        if (cv_visible.Length > stringLength)
        {
            Variables.CVVisible = string.Concat(cv_visible.Reverse().Skip(2).Reverse()) + "]";
        }
        else
        {
            Variables.CVVisible = cv_visible + "]";
        }
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer row)
    {
        cv_visible += "\"" + row.name + "\", ";
    }
}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String name
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
    }
    public bool name_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_0ee4a97d4c75480f9e5a9c2b826341fe.Properties.Settings.get_Default():SC_0ee4a97d4c75480f9e5a9c2b826341fe.Properties.Sett" +
    "ings")]

namespace SC_0ee4a97d4c75480f9e5a9c2b826341fe.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String CVVisible
    {
        get
        {
            return (String)(ParentComponent.ReadWriteVariables["CV_Visible"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
        set
        {
            ParentComponent.ReadWriteVariables["CV_Visible"].Value = value;
        }
    }

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Project]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>SC_0ee4a97d4c75480f9e5a9c2b826341fe</msb:CodeName>
		<msb:DisplayName>SC_0ee4a97d4c75480f9e5a9c2b826341fe</msb:DisplayName>
		<msb:ProjectId>{412F6492-8168-481A-804C-B22AEBF7BE0A}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_0ee4a97d4c75480f9e5a9c2b826341fe.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_0ee4a97d4c75480f9e5a9c2b826341fe")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_0ee4a97d4c75480f9e5a9c2b826341fe")]
[assembly: AssemblyCopyright("Copyright @  2020")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_0ee4a97d4c75480f9e5a9c2b826341fe.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_0ee4a97d4c75480f9e5a9c2b826341fe.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_0ee4a97d4c75480f9e5a9c2b826341fe.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_0ee4a97d4c75480f9e5a9c2b826341fe.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_0ee4a97d4c75480f9e5a9c2b826341fe.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                          </arrayElements>
                        </property>
                        <property
                          dataType="System.String"
                          description="Stores the binary representation of the component"
                          isArray="true"
                          name="BinaryCode"
                          state="cdata">
                          <arrayElements
                            arrayElementCount="2">
                            <arrayElement
                              dataType="System.String"><![CDATA[SC_0ee4a97d4c75480f9e5a9c2b826341fe.dll]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAHLeV14AAAAAAAAAAOAAIiALATAAABYAAAAIAAAAAAAAJjUA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAANQ0AABPAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAALBUAAAAgAAAAFgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAAYAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAI
NQAAAAAAAEgAAAACAAUAiCIAAJQRAAABAAAAAAAAABw0AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CewEAAAQqIgIDfQEAAAQqHgJ7AgAABCoiAgN9AgAABCqO
AigQAAAKAnIBAABwKAIAAAYCAigBAAAGbxEAAAooBAAABioAABMwAwBmAAAAAAAAAAIoEgAACgIo
AQAABm8RAAAKAigDAAAGMTECewQAAAQCKAEAAAYoAQAAKxgoAgAAKygBAAArKAMAACtyGwAAcCgW
AAAKbxUAAAYqAnsEAAAEAigBAAAGchsAAHAoFgAACm8VAAAGKooCAigBAAAGch8AAHADbwoAAAZy
IwAAcCgXAAAKKAIAAAYqHgIoDgAABioqAgMEBSgYAAAKKlICexkAAAoCexoAAAoWlG8bAAAKKiIC
FigcAAAKKh4CKB0AAAoqHgIoHgAACip+AigfAAAKAgJzEgAABn0DAAAEAgJzEwAABn0EAAAEKpIE
cisAAHAabyAAAAosFQIFAgMoIQAACg4EcwkAAAZvEAAABipKKwcCA28RAAAGA28MAAAGLfEqBio6
AigiAAAKAgN9BQAABCo6AigiAAAKAgN9BgAABCqWAnsGAAAEbyMAAApyOwAAcG8kAAAKKCUAAApv
JgAACnQaAAABKnICewYAAARvIwAACnI7AABwbyQAAAoDbycAAAoqHgIoIgAACiqufgcAAAQtHnJR
AABw0AcAAAIoKAAACm8pAAAKcyoAAAqABwAABH4HAAAEKhp+CAAABCoeAoAIAAAEKhp+CQAABCoe
AigrAAAKKi5zGwAABoAJAAAEKgBCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAACA
BgAAI34AAOwGAADQBwAAI1N0cmluZ3MAAAAAvA4AAMQAAAAjVVMAgA8AABAAAAAjR1VJRAAAAJAP
AAAEAgAAI0Jsb2IAAAAAAAAAAgAAAVcVoAEJCQAAAPoBMwAWAAABAAAAJAAAAAgAAAAJAAAAHAAA
ABAAAAArAAAAFgAAAAUAAAAIAAAADAAAAAEAAAAGAAAAAQAAAAMAAAAAACIEAQAAAAAABgDiAqsF
BgB2A6sFBgAuApgFDwAfBgAABgBbAqsEBgDFAqsEBgCmAqsEBgBdA6sEBgACA6sEBgAbA6sEBgBy
AqsEBgCNArsDCgA2A2cBBgD2AasFCgBCBWcBDgAzBWcBCgDaBGcBCgD5BmcBBgC8BmMEBgARApgF
BgBTBcsFBgDOBJYEEgDhAQwEEgBCAgwEEgDBAYEEBgDYA2MEFgDrABoFBgA6AGIABgC9BGMEGgAR
AGMFGgABAGMFSwBvBwAAGgAiAGMFBgCIAWMEBgAwAWMEBgDGB6sEAAAAAEgAAAAAAAEAAQABABAA
dgQAABAAAQABAAEAEAAmBQAAPQADAAkAAQAQANsGAABJAAMADgABABAAqQYAAE0ABQASAAEAEABq
BgAATQAGABMAAAAQANIFLgZNAAcAFgAAARAAmQYuBmUACQAaAAEAfQDQAAEAmQDTAAYAqQbWAAYA
agbaAAEA6QbeAAEA6QbeABEAagTiABEAsQHmABEAtwDqAFAgAAAAAIEIEgHuAAEAWCAAAAAAgQgh
ARAAAQBhIAAAAACBCOoDGwACAGkgAAAAAIEI+wMBAAIAciAAAAAAxgCUAwYAAwCYIAAAAADGAJ8D
BgADAAohAAAAAMYAnwfyAAMALSEAAAAAhhiLBQYABAA1IQAAAACGGIsFXQAEAEAhAAAAAIYIXgHu
AAcAVSEAAAAAhghKBHkABwBeIQAAAACGALYHeQAHAGYhAAAAAIYAwwZ5AAcAbiEAAAAAhhiLBQYA
BwCOIQAAAADGAE4H+AAHALMhAAAAAMYBRwfyAAsAxiEAAAAAxgGfB/IADADIIQAAAACGGIsFAgEN
ANchAAAAAIYYiwUCAQ4A5iEAAAAAhgj2AO4ADwAMIgAAAACGCAQBEAAPACkiAAAAAIMYiwUGABAA
MSIAAAAAkwhPBQgBEABdIgAAAACTCJkBDQEQAGQiAAAAAJMIpQESARAAbCIAAAAAlgjPBhgBEQBz
IgAAAACGGIsFBgARAHsiAAAAAJEYkQUdAREAAAABALUDAAABALUDAAABAL4HAAABAEgFAAACAHQG
AAADAOgEAAABAFEAAAACAFQBAAADAEgFAAAEAOgEAAABAEgFAAABALoHAAABAP8GAAABAP8GAAAB
ALUDAAABALUDCQCLBQEAEQCLBQYAGQCLBQoAKQCLBRAAMQCLBRAAOQCLBRAAQQCLBRAASQCLBRAA
UQCLBRAAWQCLBRAAYQCLBRAAaQCLBQYAcQCLBQYAoQCLBQYAwQCLBRUAkQCUAwYA0QDfAxsAkQCf
AwYA2QDZAR8A2QAVBTMA0QC1BkQA0QC1Bk8A0QC1BlUAeQCLBV0AeQBIBWcAeQB0BmsAgQDVA28A
eQBTBHQAeQC2B3kAeQDDBnkAkQCLBQYA0QCiBn0AkQCIBoQAmQCLBQYAkQBdBooA8QBaBI8AkQCK
B5UA+QBbB5sA+QCrA6IAEQFCAacAEQHCB7AAqQCLBbYAyQCLBQYAIABrAP0BIQBrAP0BLgALADwB
LgATAEUBLgAbAGQBLgAjAG0BLgArAJYBLgAzAJYBLgA7AJYBLgBDAG0BLgBLAJwBLgBTAJYBLgBb
ALMBQABrAP0BQQBrAP0BQwBjAP0BYABrAP0BgABrAP0ByQB7AGQB4wBzAP0B6QB7AGQBIQFrAP0B
AgABAAMAAwAGAAUABwAGAAgACAAAACUBIQEAAP8DJQEAAGIBIQEAAE4EKQEAAAgBIQEAAFMFLQEA
ALkBMgEAANMGNwECAAEAAwABAAIAAwACAAMABQABAAQABQACAAoABwACAAsACQACABQACwABABUA
CwACABcADQACABgADwABABkADwACABoAEQAEgAAAAQAAAAAAAAAAAAAAAADHAAAABAAAAAAAAAAA
AAAAvgBZAAAAAAANAAAAAAAAAAAAAADHAAkHAAAAAA0AAAAAAAAAAAAAAMcAJgcAAAAABAAAAAAA
AAAAAAAAvgBjBAAAAAAEAAAAAAAAAAAAAAC+AI0BAAAAAA0AAAAAAAAAAAAAAMcA8gQAAAAAAAAA
AAEAAADcBQAAJwAvACkALwArAC8AAAAAAABJRFRTVmFyaWFibGUxMDAASURUU1ZhcmlhYmxlczEw
MABJRFRTRXZhbHVhdG9yQ29udGV4dDEwMABJRW51bWVyYWJsZWAxADxNb2R1bGU+AElucHV0SUQA
bXNjb3JsaWIAU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMAPGN2X3Zpc2libGU+a19fQmFja2lu
Z0ZpZWxkADxzdHJpbmdMZW5ndGg+a19fQmFja2luZ0ZpZWxkAGRlZmF1bHRJbnN0YW5jZQBTQ18w
ZWU0YTk3ZDRjNzU0ODBmOWU1YTljMmI4MjYzNDFmZQBFbnVtZXJhYmxlAGdldF9DVlZpc2libGUA
c2V0X0NWVmlzaWJsZQBnZXRfY3ZfdmlzaWJsZQBzZXRfY3ZfdmlzaWJsZQBSdW50aW1lVHlwZUhh
bmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBJbnB1dE5hbWUAZ2V0X25hbWUATWljcm9zb2Z0LlNxbFNl
cnZlci5EdHMuUGlwZWxpbmUAVHlwZQBTeXN0ZW0uQ29yZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVy
ZQByZXNvdXJjZUN1bHR1cmUAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UAUmV2ZXJzZQBFZGl0b3JC
cm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJD
b2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRl
AEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0
RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJs
eURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNz
ZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3Jp
cHRDb21wb25lbnRFbnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBS
dW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBQcmVFeGVjdXRlAFBvc3RFeGVjdXRlAHNldF9W
YWx1ZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAEdldFN0cmluZwBnZXRfTGVuZ3Ro
AGdldF9zdHJpbmdMZW5ndGgAc2V0X3N0cmluZ0xlbmd0aABTeXN0ZW0uQ29tcG9uZW50TW9kZWwA
U0NfMGVlNGE5N2Q0Yzc1NDgwZjllNWE5YzJiODI2MzQxZmUuZGxsAGdldF9uYW1lX0lzTnVsbABn
ZXRfSXRlbQBTeXN0ZW0AcmVzb3VyY2VNYW4AU2NyaXB0TWFpbgBTeXN0ZW0uQ29uZmlndXJhdGlv
bgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBTdHJpbmdDb21wYXJpc29u
AEN1bHR1cmVJbmZvAE91dHB1dE5hbWVNYXAAT3V0cHV0TWFwAE1pY3Jvc29mdC5TcWxTZXJ2ZXIu
RFRTUnVudGltZVdyYXAAU2tpcABTeXN0ZW0uTGlucQBJbnB1dDBCdWZmZXIAUGlwZWxpbmVCdWZm
ZXIAU2NyaXB0QnVmZmVyAGdldF9SZXNvdXJjZU1hbmFnZXIATWljcm9zb2Z0LlNxbFNlcnZlci5E
dHMuUnVudGltZS5XcmFwcGVyAC5jdG9yAC5jY3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVt
LlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNDXzBlZTRhOTdkNGM3
NTQ4MGY5ZTVhOWMyYjgyNjM0MWZlLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1
Z2dpbmdNb2RlcwBTQ18wZWU0YTk3ZDRjNzU0ODBmOWU1YTljMmI4MjYzNDFmZS5Qcm9wZXJ0aWVz
AGdldF9SZWFkV3JpdGVWYXJpYWJsZXMAQnVmZmVyQ29sdW1uSW5kZXhlcwBHZXRDb2x1bW5JbmRl
eGVzAFNldHRpbmdzAEVxdWFscwBDb25uZWN0aW9ucwBDb25jYXQAT2JqZWN0AEVuZE9mUm93c2V0
AGdldF9EZWZhdWx0AFVzZXJDb21wb25lbnQAUGFyZW50Q29tcG9uZW50AFNjcmlwdENvbXBvbmVu
dABNaWNyb3NvZnQuU3FsU2VydmVyLlR4U2NyaXB0AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuUGlwZWxp
bmVIb3N0AElucHV0MF9Qcm9jZXNzSW5wdXQAR2V0VmFsdWVXaXRoQ29udGV4dABTY3JpcHRDb21w
b25lbnRFdmFsQ29udGV4dABnZXRfRXZhbHVhdG9yQ29udGV4dABJbnB1dDBfUHJvY2Vzc0lucHV0
Um93AE5leHRSb3cAcm93AGdldF9Bc3NlbWJseQAAABkiAHYAaQBzAGkAYgBsAGUAIgA6ACAAWwAA
A10AAAMiAAAHIgAsACAAAA9JAG4AcAB1AHQAIAAwAAAVQwBWAF8AVgBpAHMAaQBiAGwAZQAAcVMA
QwBfADAAZQBlADQAYQA5ADcAZAA0AGMANwA1ADQAOAAwAGYAOQBlADUAYQA5AGMAMgBiADgAMgA2
ADMANAAxAGYAZQAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAANxo
UgibMxJJtgqoOkiC9kIABCABAQgDIAABBSABARERBCABAQ4FIAEBEV0DIAAIDxABARUScQEeABUS
cQEeAAMKAQMQEAECFRJxAR4AFRJxAR4ACAoQAQEOFRJxAR4ABQACDg4OBwAEDg4ODg4JIAMBEkEd
CBJFAwYSQQMGHQgEIAEOCAQgAQIIAyAAAgYgAgIOEXUFIAEdCAgEIAASeQUgARJ9HAUAABKAgQYg
ARwSgIUEIAEBHAgAARKAiRGAjQUgABKAkQcgAgEOEoCRCLd6XFYZNOCJCImEXc2AgMyRAgYOAgYI
AwYSFAMGEhgDBhJJAwYSVQMGElkDBhIgAyAADgUgAQESDAkgBAEIDhJBEkUFIAEBEkkEAAASVQQA
ABJZBQABARJZBAAAEiADAAABAygADgMoAAgDKAACBAgAElUECAASWQQIABIgCAEACAAAAAAAHgEA
AQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTQ18wZWU0YTk3ZDRjNzU0
ODBmOWU1YTljMmI4MjYzNDFmZQAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDIwAABJAQAaLk5F
VEZyYW1ld29yayxWZXJzaW9uPXY0LjUBAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEi5ORVQgRnJh
bWV3b3JrIDQuNQQBAAAAAAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3Vy
Y2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVi
bGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNv
dXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAA/DQAAAAAAAAAAAAAFjUAAAAgAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAg1AAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8l
ACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABI
AAAAWEAAAOwDAAAAAAAAAAAAAOwDNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAA
AAC9BO/+AAABAAAAAQAAAAAAAAABAAAAAAA/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAA
AAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4A
AAAAAAAAsARMAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAAoAwAAAQAwADAAMAAw
ADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4A
eQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAA
AFMAQwBfADAAZQBlADQAYQA5ADcAZAA0AGMANwA1ADQAOAAwAGYAOQBlADUAYQA5AGMAMgBiADgA
MgA2ADMANAAxAGYAZQAAADAACAABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgAw
AC4AMAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8AMABlAGUANABhADkA
NwBkADQAYwA3ADUANAA4ADAAZgA5AGUANQBhADkAYwAyAGIAOAAyADYAMwA0ADEAZgBlAC4AZABs
AGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgA
dAAgAEAAIAAgADIAMAAyADAAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAA
AAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAEMAXwAwAGUA
ZQA0AGEAOQA3AGQANABjADcANQA0ADgAMABmADkAZQA1AGEAOQBjADIAYgA4ADIANgAzADQAMQBm
AGUALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBDAF8AMABlAGUA
NABhADkANwBkADQAYwA3ADUANAA4ADAAZgA5AGUANQBhADkAYwAyAGIAOAAyADYAMwA0ADEAZgBl
AAAANAAIAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAADgA
CAABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAAAoNQAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=]]></arrayElement>
                          </arrayElements>
                        </property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                          name="VSTAProjectName"
                          typeConverter="NOTBROWSABLE">SC_0ee4a97d4c75480f9e5a9c2b826341fe</property>
                        <property
                          dataType="System.String"
                          description="Specifies the programming language used by the script."
                          name="ScriptLanguage"
                          typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                        <property
                          dataType="System.String"
                          description="Specifies a comma-separated list of read-only variables."
                          name="ReadOnlyVariables"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                        <property
                          dataType="System.String"
                          description="Specifies a comma-separated list of read/write variables."
                          name="ReadWriteVariables"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg">User::CV_Visible</property>
                        <property
                          dataType="System.String"
                          description="List of breakpoints present on the script."
                          isArray="true"
                          name="BreakpointCollection"
                          typeConverter="NOTBROWSABLE">
                          <arrayElements
                            arrayElementCount="0" />
                        </property>
                        <property
                          dataType="System.String"
                          description="Checksum to match component metedata against compiled codes."
                          name="MetadataChecksum"
                          typeConverter="NOTBROWSABLE">01058caadae6f0fd0f253201fa2b5f38</property>
                        <property
                          dataType="System.String"
                          description="Checksum to match component metedata against compiled codes."
                          name="MetadataShaChecksum"
                          typeConverter="NOTBROWSABLE">cc8c347c659e936c4c5288aa5a94c5f4e5758d78</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Create visible list.Inputs[Input 0]"
                          hasSideEffects="true"
                          name="Input 0">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Create visible list.Inputs[Input 0].Columns[name]"
                              cachedDataType="wstr"
                              cachedLength="1000"
                              cachedName="name"
                              lineageId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Search custom validation.Outputs[JsonSourceOutput].Columns[name]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Create visible list.Outputs[Output 0]"
                          name="Output 0"
                          synchronousInputId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Create visible list.Inputs[Input 0]">
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Disabled split"
                      componentClassID="Microsoft.ConditionalSplit"
                      contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
                      name="Disabled split"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Disabled split.Inputs[Conditional Split Input]"
                          description="Input to the Conditional Split Transformation"
                          name="Conditional Split Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Disabled split.Inputs[Conditional Split Input].Columns[is_hidden]"
                              cachedDataType="bool"
                              cachedName="is_hidden"
                              lineageId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Search custom validation.Outputs[JsonSourceOutput].Columns[is_hidden]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Disabled split.Outputs[hidden]"
                          description="Output 1 of the Conditional Split Transformation"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          exclusionGroup="1"
                          name="hidden"
                          synchronousInputId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Disabled split.Inputs[Conditional Split Input]"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                              name="Expression">[REPLACENULL](#{Package\Foreach migrated account\Custom Validation\Search cutom validation\Search custom validation.Outputs[JsonSourceOutput].Columns[is_hidden]}, FALSE )</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the friendly version of the expression. This expression version uses column names."
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACENULL(is_hidden, FALSE )</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                              name="EvaluationOrder">0</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Disabled split.Outputs[visible]"
                          description="Output 2 of the Conditional Split Transformation"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          exclusionGroup="1"
                          name="visible"
                          synchronousInputId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Disabled split.Inputs[Conditional Split Input]"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                              name="Expression">![REPLACENULL](#{Package\Foreach migrated account\Custom Validation\Search cutom validation\Search custom validation.Outputs[JsonSourceOutput].Columns[is_hidden]}, FALSE )</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the friendly version of the expression. This expression version uses column names."
                              expressionType="Notify"
                              name="FriendlyExpression">!REPLACENULL(is_hidden, FALSE )</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                              name="EvaluationOrder">1</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Disabled split.Outputs[Conditional Split Default Output]"
                          description="Default Output of the Conditional Split Transformation"
                          exclusionGroup="1"
                          name="Conditional Split Default Output"
                          synchronousInputId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Disabled split.Inputs[Conditional Split Input]">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              name="IsDefaultOut">true</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Disabled split.Outputs[Conditional Split Error Output]"
                          description="Error Output of the Conditional Split Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Conditional Split Error Output"
                          synchronousInputId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Disabled split.Inputs[Conditional Split Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Disabled split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Disabled split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Disabled split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Disabled split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Enabled split"
                      componentClassID="Microsoft.ConditionalSplit"
                      contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
                      name="Enabled split"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Enabled split.Inputs[Conditional Split Input]"
                          description="Input to the Conditional Split Transformation"
                          name="Conditional Split Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Enabled split.Inputs[Conditional Split Input].Columns[is_enabled]"
                              cachedDataType="bool"
                              cachedName="is_enabled"
                              lineageId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Search custom validation.Outputs[JsonSourceOutput].Columns[is_enabled]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Enabled split.Outputs[enabled]"
                          description="Output 1 of the Conditional Split Transformation"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          exclusionGroup="1"
                          name="enabled"
                          synchronousInputId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Enabled split.Inputs[Conditional Split Input]"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                              name="Expression">[REPLACENULL](#{Package\Foreach migrated account\Custom Validation\Search cutom validation\Search custom validation.Outputs[JsonSourceOutput].Columns[is_enabled]}, FALSE )</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the friendly version of the expression. This expression version uses column names."
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACENULL(is_enabled, FALSE )</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                              name="EvaluationOrder">0</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Enabled split.Outputs[disabled]"
                          description="Output 2 of the Conditional Split Transformation"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          exclusionGroup="1"
                          name="disabled"
                          synchronousInputId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Enabled split.Inputs[Conditional Split Input]"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                              name="Expression">![REPLACENULL](#{Package\Foreach migrated account\Custom Validation\Search cutom validation\Search custom validation.Outputs[JsonSourceOutput].Columns[is_enabled]}, FALSE )</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the friendly version of the expression. This expression version uses column names."
                              expressionType="Notify"
                              name="FriendlyExpression">!REPLACENULL(is_enabled, FALSE )</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                              name="EvaluationOrder">1</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Enabled split.Outputs[Conditional Split Default Output]"
                          description="Default Output of the Conditional Split Transformation"
                          exclusionGroup="1"
                          name="Conditional Split Default Output"
                          synchronousInputId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Enabled split.Inputs[Conditional Split Input]">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              name="IsDefaultOut">true</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Enabled split.Outputs[Conditional Split Error Output]"
                          description="Error Output of the Conditional Split Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Conditional Split Error Output"
                          synchronousInputId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Enabled split.Inputs[Conditional Split Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Enabled split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Enabled split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Enabled split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Enabled split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Multicast"
                      componentClassID="Microsoft.Multicast"
                      contactInfo="Multicast;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Distributes every input row to every row in one or more outputs. For example, branch your data flow to make a copy of data so that some values can be masked before sharing with external partners."
                      name="Multicast">
                      <inputs>
                        <input
                          refId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Multicast.Inputs[Multicast Input 1]"
                          name="Multicast Input 1">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Multicast.Outputs[Multicast Output 1]"
                          deleteOutputOnPathDetached="true"
                          name="Multicast Output 1"
                          synchronousInputId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Multicast.Inputs[Multicast Input 1]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Multicast.Outputs[Multicast Output 2]"
                          deleteOutputOnPathDetached="true"
                          name="Multicast Output 2"
                          synchronousInputId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Multicast.Inputs[Multicast Input 1]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Multicast.Outputs[Multicast Output 3]"
                          dangling="true"
                          deleteOutputOnPathDetached="true"
                          name="Multicast Output 3"
                          synchronousInputId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Multicast.Inputs[Multicast Input 1]">
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Remove invalid chars from name"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;10"
                      description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                      name="Remove invalid chars from name"
                      version="10">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Stores the source code of the component"
                          isArray="true"
                          name="SourceCode"
                          state="cdata">
                          <arrayElements
                            arrayElementCount="30">
                            <arrayElement
                              dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using System.Text.RegularExpressions;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion
        
    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer row)
    {
        row.name =
            Regex.Replace(
                row.name,
                @"[^\w\.@-]", " ",
                RegexOptions.None,
                TimeSpan.FromSeconds(1.5))
            .Replace(" ", "<>")
            .Replace("><", "")
            .Replace("<>", " ");
    }
}]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String name
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
        set
        {
            this[0] = value;
        }
    }
    public bool name_IsNull
    {
        get
        {
            return IsNull(0);
        }
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_20225c66925f471ba9346b7268fb229f.Properties.Settings.get_Default():SC_20225c66925f471ba9346b7268fb229f.Properties.Sett" +
    "ings")]

namespace SC_20225c66925f471ba9346b7268fb229f.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[SC_20225c66925f471ba9346b7268fb229f.csproj]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{22674310-b80e-4853-9533-c310d3bc598b}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_20225c66925f471ba9346b7268fb229f</RootNamespace>
    <AssemblyName>SC_20225c66925f471ba9346b7268fb229f</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_20225c66925f471ba9346b7268fb229f" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Project]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>SC_20225c66925f471ba9346b7268fb229f</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>SC_20225c66925f471ba9346b7268fb229f</msb:DisplayName>
		<msb:ProjectId>{9D38BE79-D8A3-404A-86FE-9C2AB5B80233}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_20225c66925f471ba9346b7268fb229f.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_20225c66925f471ba9346b7268fb229f")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_20225c66925f471ba9346b7268fb229f")]
[assembly: AssemblyCopyright("Copyright @  2020")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_20225c66925f471ba9346b7268fb229f.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_20225c66925f471ba9346b7268fb229f.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_20225c66925f471ba9346b7268fb229f.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_20225c66925f471ba9346b7268fb229f.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_20225c66925f471ba9346b7268fb229f.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                          </arrayElements>
                        </property>
                        <property
                          dataType="System.String"
                          description="Stores the binary representation of the component"
                          isArray="true"
                          name="BinaryCode"
                          state="cdata">
                          <arrayElements
                            arrayElementCount="2">
                            <arrayElement
                              dataType="System.String"><![CDATA[SC_20225c66925f471ba9346b7268fb229f.dll]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAIPqV14AAAAAAAAAAOAAIiALATAAABQAAAAIAAAAAAAALjIA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAANwxAABPAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAANBIAAAAgAAAAFAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAAWAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAQ
MgAAAAAAAEgAAAACAAUA7CEAADgPAAABAAAAAAAAACQxAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABMwBgBYAAAAAAAAAAMDbwQAAAZyAQAAcHIVAABwFiMAAAAA
AAD4PygQAAAKKBEAAApyFQAAcHIZAABwbxIAAApyHwAAcHIlAABwbxIAAApyGQAAcHIVAABwbxIA
AApvBQAABioeAigKAAAGKioCAwQFKBMAAAoqUgJ7FAAACgJ7FQAAChaUbxYAAAoqJgIWAygXAAAK
KiICFigYAAAKKloDLAgCFigZAAAKKnInAABwcxoAAAp6HgIoGwAACioeAigcAAAKKn4CKB0AAAoC
AnMOAAAGfQEAAAQCAnMPAAAGfQIAAAQqkgRyxAAAcBpvHgAACiwVAgUCAygfAAAKDgRzAwAABm8M
AAAGKkorBwIDbw0AAAYDbwgAAAYt8SoGKjoCKCAAAAoCA30DAAAEKjoCKCAAAAoCA30EAAAEKh4C
KCAAAAoqrn4FAAAELR5y1AAAcNAHAAACKCEAAApvIgAACnMjAAAKgAUAAAR+BQAABCoafgYAAAQq
HgKABgAABCoafgcAAAQqHgIoJAAACioucxUAAAaABwAABCpCU0pCAQABAAAAAAAMAAAAdjQuMC4z
MDMxOQAAAAAFAGwAAABUBQAAI34AAMAFAABkBgAAI1N0cmluZ3MAAAAAJAwAAEgBAAAjVVMAbA0A
ABAAAAAjR1VJRAAAAHwNAAC8AQAAI0Jsb2IAAAAAAAAAAgAAAVcVoAEJAQAAAPoBMwAWAAABAAAA
IgAAAAgAAAAHAAAAFgAAAA8AAAAkAAAAEAAAAAMAAAAFAAAACAAAAAEAAAAEAAAAAQAAAAAA8AIB
AAAAAAAGANoBZAQGAG4CZAQGACYBRQQPANgEAAAGAFMBmgMGAL0BmgMGAJ4BmgMGAFUCmgMGAPoB
mgMGABMCmgMGAGoBmgMGAIUBtgIKAC4CcwAKABcEcwAOAAgEcwAKAOMDcwAKAMoFcwAGAI0FSQMG
AAkBRQQGACgEhAQGANcDhQMSANkA2gISADoB2gISAMEAcAMGAO4AZAQGAFwDSQMSAE8GVQUSAIAF
VQUGANMCSQMGAKwDSQMGAMYDSQMGAJQASQMGADMASQMGAFkGmgMAAAAAAQAAAAAAAQABAAEAEABl
AwAAEAABAAEAAQAQAPsDAAA5AAEAAwABABAArAUAAEUAAQAKAAEAEAB0BQAASQADAA4AAQAQABYF
AABJAAQADwAAABAAiwTnBEkABQAQAAABEABFBecEYQAHABQABgB0BY4ABgAWBZIAAQC6BZYAAQC6
BZYAEQBQA5oAEQCxAJ4AEQAjAKIAUCAAAAAAxgAsBqYAAQC0IAAAAACGGDgEBgACALwgAAAAAIYY
OAQyAAIAxyAAAAAAhghhAKwABQDcIAAAAACGCGoAEAAFAOYgAAAAAIYIGANUAAYA7yAAAAAAhggo
A7AABgAGIQAAAACGAEMGVAAHAA4hAAAAAIYAlAVUAAcAFiEAAAAAhhg4BAYABwA2IQAAAADGAB8G
tQAHAFshAAAAAMYBGAamAAsAbiEAAAAAxgEsBqYADABwIQAAAACGGDgEvwANAH8hAAAAAIYYOAS/
AA4AjiEAAAAAgxg4BAYADwCWIQAAAACTCCQExQAPAMIhAAAAAJMImQDKAA8AySEAAAAAkwilAM8A
DwDRIQAAAACWCKAF1QAQANghAAAAAIYYOAQGABAA4CEAAAAAkRg+BNoAEAAAAAEASwYAAAEAHQQA
AAIAIAUAAAMA8QMAAAEAjAIAAAEAjAIAAAEACgAAAAIAVwAAAAMAHQQAAAQA8QMAAAEAHQQAAAEA
RwYAAAEA0AUAAAEA0AUAAAEAjAIJADgEAQARADgEBgAZADgECgApADgEEAAxADgEEAA5ADgEEABB
ADgEEABJADgEEABRADgEEABZADgEEABhADgEEABpADgEBgCZADgEBgC5ADgEFQDJADgEBgDRAFgE
GwDZABsAIQDpABsALABxADgEMgBxAB0EPABxACAFQAB5ANACRABxAEADSQBxADEDTwBxADgDAQDx
ADgEEABxAEMGVABxAJQFVACJADgEBgDpAE4FWACJADQFXwCRADgEBgABAUUAZQABAVUGbgChADgE
dADBADgEBgAuAAsA9QAuABMA/gAuABsAHQEuACMAJgEuACsATwEuADMATwEuADsATwEuAEMAJgEu
AEsAVQEuAFMATwEuAFsAbAFDAGMAtgFpAHMAHQGJAHMAHQHhAHsAtgHjAGsAtgEDAAEABwADAAgA
BQAAAG4A3gAAACwD4gAAACgE5gAAALkA6wAAAKQF8AACAAQAAwABAAUAAwACAAYABQABAAcABQAC
ABEABwACABIACQABABMACQACABQACwAEgAAAAQAAAAAAAAAAAAAAAACSAgAABAAAAAAAAAAAAAAA
fAASAAAAAAANAAAAAAAAAAAAAACFANoFAAAAAA0AAAAAAAAAAAAAAIUA9wUAAAAABAAAAAAAAAAA
AAAAfABJAwAAAAAAAAAAAQAAAJUEAAAAAAA8TW9kdWxlPgBJbnB1dElEAG1zY29ybGliAFJlcGxh
Y2UAZGVmYXVsdEluc3RhbmNlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAElu
cHV0TmFtZQBnZXRfbmFtZQBzZXRfbmFtZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5QaXBlbGlu
ZQBUeXBlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBBcHBsaWNhdGlv
blNldHRpbmdzQmFzZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJp
YnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRp
dG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFk
ZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJh
dGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVs
YXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJp
Z2h0QXR0cmlidXRlAFNTSVNTY3JpcHRDb21wb25lbnRFbnRyeVBvaW50QXR0cmlidXRlAEFzc2Vt
Ymx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQB2YWx1ZQBT
Q18yMDIyNWM2NjkyNWY0NzFiYTkzNDZiNzI2OGZiMjI5ZgBTeXN0ZW0uUnVudGltZS5WZXJzaW9u
aW5nAEdldFN0cmluZwBTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU0NfMjAyMjVjNjY5MjVmNDcxYmE5
MzQ2YjcyNjhmYjIyOWYuZGxsAGdldF9uYW1lX0lzTnVsbABzZXRfbmFtZV9Jc051bGwAU2V0TnVs
bABzZXRfSXRlbQBTeXN0ZW0AcmVzb3VyY2VNYW4AVGltZVNwYW4AU2NyaXB0TWFpbgBTeXN0ZW0u
Q29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBJbnZh
bGlkT3BlcmF0aW9uRXhjZXB0aW9uAFN0cmluZ0NvbXBhcmlzb24AQ3VsdHVyZUluZm8AT3V0cHV0
TmFtZU1hcABPdXRwdXRNYXAASW5wdXQwQnVmZmVyAFBpcGVsaW5lQnVmZmVyAFNjcmlwdEJ1ZmZl
cgBnZXRfUmVzb3VyY2VNYW5hZ2VyAC5jdG9yAC5jY3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MARnJv
bVNlY29uZHMAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2Vz
AFNDXzIwMjI1YzY2OTI1ZjQ3MWJhOTM0NmI3MjY4ZmIyMjlmLlByb3BlcnRpZXMuUmVzb3VyY2Vz
LnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBTQ18yMDIyNWM2NjkyNWY0NzFiYTkzNDZiNzI2OGZi
MjI5Zi5Qcm9wZXJ0aWVzAFZhcmlhYmxlcwBCdWZmZXJDb2x1bW5JbmRleGVzAEdldENvbHVtbklu
ZGV4ZXMAU2V0dGluZ3MARXF1YWxzAFN5c3RlbS5UZXh0LlJlZ3VsYXJFeHByZXNzaW9ucwBDb25u
ZWN0aW9ucwBSZWdleE9wdGlvbnMAT2JqZWN0AEVuZE9mUm93c2V0AGdldF9EZWZhdWx0AFVzZXJD
b21wb25lbnQAUGFyZW50Q29tcG9uZW50AFNjcmlwdENvbXBvbmVudABNaWNyb3NvZnQuU3FsU2Vy
dmVyLlR4U2NyaXB0AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuUGlwZWxpbmVIb3N0AElucHV0MF9Qcm9j
ZXNzSW5wdXQASW5wdXQwX1Byb2Nlc3NJbnB1dFJvdwBOZXh0Um93AHJvdwBSZWdleABnZXRfQXNz
ZW1ibHkAAAAAE1sAXgBcAHcAXAAuAEAALQBdAAEDIAAABTwAPgAABT4APAAAAQCAm0kAcwBOAHUA
bABsACAAcAByAG8AcABlAHIAdAB5ACAAYwBhAG4AbgBvAHQAIABiAGUAIABzAGUAdAAgAHQAbwAg
AEYAYQBsAHMAZQAuACAAQQBzAHMAaQBnAG4AIABhACAAdgBhAGwAdQBlACAAdABvACAAdABoAGUA
IABjAG8AbAB1AG0AbgAgAGkAbgBzAHQAZQBhAGQALgAAD0kAbgBwAHUAdAAgADAAAHFTAEMAXwAy
ADAAMgAyADUAYwA2ADYAOQAyADUAZgA0ADcAMQBiAGEAOQAzADQANgBiADcAMgA2ADgAZgBiADIA
MgA5AGYALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAAAA/ApmIr9Y
RkGZb2+pRH3nMQAEIAEBCAMgAAEFIAEBEREEIAEBDgUgAQERWQUAARFpDQoABQ4ODg4RcRFpBSAC
Dg4OCSADARI9HQgSQQMGEj0DBh0IBCABDggFIAIBCBwEIAECCAMgAAIGIAICDhF9BSABHQgICAAB
EoCBEYCFBSAAEoCJByACAQ4SgIkIt3pcVhk04IkIiYRdzYCAzJEDBhIUAwYSGAMGEkUDBhJRAwYS
VQMGEiAFIAEBEgwDIAAOBCABAQIJIAQBCA4SPRJBBSABARJFBAAAElEEAAASVQUAAQESVQQAABIg
AwAAAQMoAA4DKAACBAgAElEECAASVQQIABIgCAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0
aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTQ18yMDIyNWM2NjkyNWY0NzFiYTkzNDZiNzI2OGZiMjI5
ZgAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDIwAABJAQAaLk5FVEZyYW1ld29yayxWZXJzaW9u
PXY0LjUBAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEi5ORVQgRnJhbWV3b3JrIDQuNQQBAAAAALQA
AADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIs
IFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1
NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAA
UEFEUEFEULQAAAAEMgAAAAAAAAAAAAAeMgAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEDIAAAAA
AAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAA
SAAAAFhAAADsAwAAAAAAAAAAAADsAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAA
AAAAvQTv/gAAAQAAAAEAAAAAAAAAAQAAAAAAPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQA
AAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBu
AAAAAAAAALAETAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAKAMAAAEAMAAwADAA
MAAwADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBu
AHkATgBhAG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAA
AABTAEMAXwAyADAAMgAyADUAYwA2ADYAOQAyADUAZgA0ADcAMQBiAGEAOQAzADQANgBiADcAMgA2
ADgAZgBiADIAMgA5AGYAAAAwAAgAAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4A
MAAuADAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAQwBfADIAMAAyADIANQBj
ADYANgA5ADIANQBmADQANwAxAGIAYQA5ADMANAA2AGIANwAyADYAOABmAGIAMgAyADkAZgAuAGQA
bABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBo
AHQAIABAACAAIAAyADAAMgAwAAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMA
AAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBDAF8AMgAw
ADIAMgA1AGMANgA2ADkAMgA1AGYANAA3ADEAYgBhADkAMwA0ADYAYgA3ADIANgA4AGYAYgAyADIA
OQBmAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAQwBfADIAMAAy
ADIANQBjADYANgA5ADIANQBmADQANwAxAGIAYQA5ADMANAA2AGIANwAyADYAOABmAGIAMgAyADkA
ZgAAADQACAABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAA4
AAgAAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAMDIAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                          </arrayElements>
                        </property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                          name="VSTAProjectName"
                          typeConverter="NOTBROWSABLE">SC_20225c66925f471ba9346b7268fb229f</property>
                        <property
                          dataType="System.String"
                          description="Specifies the programming language used by the script."
                          name="ScriptLanguage"
                          typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                        <property
                          dataType="System.String"
                          description="Specifies a comma-separated list of read-only variables."
                          name="ReadOnlyVariables"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                        <property
                          dataType="System.String"
                          description="Specifies a comma-separated list of read/write variables."
                          name="ReadWriteVariables"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                        <property
                          dataType="System.String"
                          description="List of breakpoints present on the script."
                          isArray="true"
                          name="BreakpointCollection"
                          typeConverter="NOTBROWSABLE">
                          <arrayElements
                            arrayElementCount="0" />
                        </property>
                        <property
                          dataType="System.String"
                          description="Checksum to match component metedata against compiled codes."
                          name="MetadataChecksum"
                          typeConverter="NOTBROWSABLE">fc937e1c3fdea24eb3609856798777c9</property>
                        <property
                          dataType="System.String"
                          description="Checksum to match component metedata against compiled codes."
                          name="MetadataShaChecksum"
                          typeConverter="NOTBROWSABLE">58f0a941a9872f1327029dab05e846c741de3671</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Remove invalid chars from name.Inputs[Input 0]"
                          hasSideEffects="true"
                          name="Input 0">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Remove invalid chars from name.Inputs[Input 0].Columns[name]"
                              cachedDataType="wstr"
                              cachedLength="1000"
                              cachedName="name"
                              lineageId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Search custom validation.Outputs[JsonSourceOutput].Columns[name]"
                              usageType="readWrite" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Remove invalid chars from name.Outputs[Output 0]"
                          name="Output 0"
                          synchronousInputId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Remove invalid chars from name.Inputs[Input 0]">
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Search custom validation"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="JSON Source (REST API or File); ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="The JSON source is used to read data from JSON files, RESTful Web Service or direct JSON String."
                      name="Search custom validation"
                      usesDispositions="true"
                      version="29">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode, ZappySys.PowerPack130, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for any numeric data types"
                          expressionType="Notify"
                          name="TreatBlankNumberAsNull">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for bool data types"
                          expressionType="Notify"
                          name="TreatBlankBoolAsNull">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for any date/time data types"
                          expressionType="Notify"
                          name="TreatBlankDateAsNull">true</property>
                        <property
                          dataType="System.Int32"
                          description="Defines how to read the JSON file or direct string"
                          expressionType="Notify"
                          name="AccessMode"
                          typeConverter="ZappySys.Common.Ssis.FileValueAccessMode, ZappySys.Common, Version=1.0.2018.11210, Culture=neutral, PublicKeyToken=1903265a93eae502">3</property>
                        <property
                          dataType="System.String"
                          description="Defines how to read the JSON file or direct string"
                          expressionType="Notify"
                          name="DirectValue"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.String"
                          description="Variable name which holds JSON string"
                          expressionType="Notify"
                          name="ValueVariable"
                          typeConverter="ZappySys.PowerPack.Converters.VariableEditor,ZappySys.PowerPack130.UI,Version=1.0.0.0,Culture=neutral,PublicKeyToken=1903265a93eae502"></property>
                        <property
                          dataType="System.String"
                          description="Variable name which holds data file path or url"
                          expressionType="Notify"
                          name="PathVariable"
                          typeConverter="ZappySys.PowerPack.Converters.VariableEditor,ZappySys.PowerPack130.UI,Version=1.0.0.0,Culture=neutral,PublicKeyToken=1903265a93eae502">User::API_URL</property>
                        <property
                          dataType="System.String"
                          description="JSON file file path (e.g. c:\data\myfile.json) or pattern to process multiple files (e.g. c:\data\*.json)"
                          expressionType="Notify"
                          name="DirectPath"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">https://beta-api.uk.rexsoftware.com/rex.php</property>
                        <property
                          dataType="System.Boolean"
                          description="Include files from sub folders too."
                          expressionType="Notify"
                          name="Recursive">false</property>
                        <property
                          dataType="System.String"
                          description="Set this if you want to set custom Http headers. You may use variable anywhere in the header value using syntax {{User::YourVarName}}. Syntax of Header key value pair is : &amp;lt;request&amp;gt;&amp;lt;header&amp;gt;&amp;lt;name&amp;gt;x-myheader-1&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;AAA&amp;lt;/value&amp;gt;&amp;lt;/header&amp;gt; &amp;lt;header&amp;gt;&amp;lt;name&amp;gt;x-myheader-2&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;BBB&amp;lt;/value&amp;gt;&amp;lt;/header&amp;gt;&amp;lt;/request&amp;gt;"
                          expressionType="Notify"
                          name="HttpHeaders">&lt;request&gt;&lt;header&gt;&lt;name&gt;Accept&lt;/name&gt;&lt;value&gt;*/*&lt;/value&gt;&lt;/header&gt;&lt;header&gt;&lt;name&gt;Cache-Control&lt;/name&gt;&lt;value&gt;no-cache&lt;/value&gt;&lt;/header&gt;&lt;/request&gt;</property>
                        <property
                          dataType="System.String"
                          description="User defined data you wish to send along with your HTTP Request (e.g. Upload file data, Form POST data). Usually you have to set content-type of your data but if you select RequestMethod=POST then system will automatically set content-type=application/x-www-form-urlencoded."
                          expressionType="Notify"
                          name="HttpRequestData">{
	"method":"AdminUserValidationRules::search",
	"args":
	{
		"extra_options": {},
		"order_by": {},
		"limit": 100
    },
	"strip_response_prefix": true,
	"token": "{{User::API_Token}}"
}</property>
                        <property
                          dataType="System.String"
                          description="Http Web Request Method (e.g. POST, GET, PUT, LIST, DELETE...). Refer your API documentation if you are not sure which method you have to use."
                          expressionType="Notify"
                          name="HttpRequestMethod">POST</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies content type for data you wish to POST. If you select Default option then system default content type will be used (i.e. application/x-www-form-urlencoded). If you specify Content-Type header along with this option then header value takes precedence."
                          expressionType="Notify"
                          name="HttpRequestContentType"
                          typeConverter="ZappySys.Common.Web.HttpRequestContentType, ZappySys.Common, Version=1.0.2018.11210, Culture=neutral, PublicKeyToken=1903265a93eae502">2</property>
                        <property
                          dataType="System.Int32"
                          description="Data format coming from HTTP Response. This is useful for example when you have OData service and you want to automatically consume all pages of data using odata.netUrl. Setting JsonFormat=Odata will automatically do it for you. This setting is only applicable if JSON is coming from HTTP WebRequest."
                          expressionType="Notify"
                          name="JsonFormat"
                          typeConverter="ZappySys.Json.JsonFormat, ZappySys.Json, Version=1.0.2018.11210, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                        <property
                          dataType="System.Boolean"
                          description="Enable custom proxy settings (If this is not set then system default proxy will be used. To disable proxy totally uncheck this option and check DoNotUseDefaultProxy option if available)"
                          expressionType="Notify"
                          name="UseProxy">false</property>
                        <property
                          dataType="System.String"
                          description="Web URL of Proxy server (including port  if necessary). [e.g. http://myproxyserver:8080/]"
                          expressionType="Notify"
                          name="ProxyUrl"></property>
                        <property
                          dataType="System.Boolean"
                          description="Enable passing userid and password to proxy server"
                          expressionType="Notify"
                          name="UseProxyCreds">false</property>
                        <property
                          dataType="System.String"
                          description="Proxy username"
                          expressionType="Notify"
                          name="ProxyUserName"></property>
                        <property
                          dataType="System.String"
                          description="Proxy password"
                          expressionType="Notify"
                          name="ProxyPassword"></property>
                        <property
                          dataType="System.String"
                          description="If Service response support pagination using some sort of next url attribute then specify which attribute name in JSON Response string which holds next url. If no attribute found or its null then component will stop fetching next resultset. Example: $.pagingInfo.nextUrl"
                          expressionType="Notify"
                          name="NextUrlAttribute"></property>
                        <property
                          dataType="System.String"
                          description="If Service response support pagination using some sort of prev/next url attribute then specify which previous link attribute name from JSON Response string which holds previous url."
                          expressionType="Notify"
                          name="PrevUrlAttribute"></property>
                        <property
                          dataType="System.String"
                          description="Specifies value for NextUrlAttribute or StopIndicatorAttribute which indicates last page to stop pagination. If you have specified StopIndicatorAttribute then you can use Regular expression rather than static value to indicate last page. To use regular expression value of this property must start with regex= prefix. Example : regex=FALSE|N  (assuming you set StopIndicatorAttribute to something like $.hasMore)"
                          expressionType="Notify"
                          name="NextUrlStopIndicator"></property>
                        <property
                          dataType="System.String"
                          description="Attribute name or expression for attribute which can be used as stop indicator (e.g. hasmore --or-- $.pagination.hasmore). If this value is blank then NextUrlAttribute is used"
                          expressionType="Notify"
                          name="StopIndicatorAttribute"></property>
                        <property
                          dataType="System.String"
                          description="If you want to include certain text (or parameters) at the end of Next url then specify this attribute (e.g. &amp;format=json). Another common usecase of this property is to supply pagination token to next Page URL. You can also use &lt;%nextlink%&gt; or  &lt;%nextlink_encoded%&gt; placeholder (e.g. &amp;cursor=&lt;%nextlink_encoded%&gt; )"
                          expressionType="Notify"
                          name="NextUrlSuffix"></property>
                        <property
                          dataType="System.Int32"
                          description="This property indicates total number of milliseconds you want to wait before sending next request. This option allows you to adjust how many API calls can be made within certain timeframe. If your API Service has no limit then set this option to zero"
                          expressionType="Notify"
                          name="NextUrlWait">0</property>
                        <property
                          dataType="System.Boolean"
                          description="If this option is true then component will continue without exception on 404 error (Url not found). This allows you to consume data gracefully."
                          expressionType="Notify"
                          name="ContinueOnUrlNotFoundError">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Continue when any type of exception occurs during http request"
                          expressionType="Notify"
                          name="ContineOnAnyError">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Continue on error when specified substring found in response"
                          expressionType="Notify"
                          name="ContineOnErrorForMessage">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Continue on error when specified status code returned from web server"
                          expressionType="Notify"
                          name="ContineOnErrorForStatusCode">false</property>
                        <property
                          dataType="System.Boolean"
                          description="When error occurs no data is returned. Use this option to get content eventhough error occurs. When this option is checked you can't use [continue on error when specific string found in response] option"
                          expressionType="Notify"
                          name="ConsumeResponseOnError">false</property>
                        <property
                          dataType="System.Int32"
                          description="Status code to match when error occurs and ContineOnErrorForStatusCode option is true. If Response status code matches to this code then task continues to run"
                          expressionType="Notify"
                          name="ErrorStatusCodeToMatch">404</property>
                        <property
                          dataType="System.String"
                          description="Error substring to match when error occurs and ContineOnErrorForMessage option is true. If Response status code matches to this code then task continues to run"
                          expressionType="Notify"
                          name="ErrorSubstringToMatch"></property>
                        <property
                          dataType="System.String"
                          description="Cookie Container can be used to maintain state between multiple web requests. Example: You can login to site like wordpress and then extract any private page content by simply passing authentication cookies using this variable."
                          expressionType="Notify"
                          name="CookieContainerVariable"></property>
                        <property
                          dataType="System.Int32"
                          description="Http request Timeout in seconds. Set this to 0 if you want to use system default value (i.e. 100 seconds)"
                          expressionType="Notify"
                          name="RequestTimeout">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies which security protocol is supported for HTTPS communication. Using this option you can enable legacy protocol or enforce to use latest version of security protocol (Note: TLS 1.2 is only supported in SSIS 2014 or Higher)."
                          expressionType="Notify"
                          name="SecurityProtocol"
                          typeConverter="ZappySys.PowerPack.Common.HttpsSecurityProtocolType, ZappySys.PowerPack130, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                        <property
                          dataType="System.Boolean"
                          description="Enable support for gzip or deflate compression. When you check this option compressed response automatically de-compressed saving bandwidth. This option is only valid if web server supports compressed response stream. Check your API documentation for more information."
                          expressionType="Notify"
                          name="EnableCompressionSupport">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Ignore SSL certificate related errors. Example: if you getting SSL/TLS errors because of certificate expired or certificate is not from trusted authority or certificate is self-signed. By checking this option you will not get SSL/TLS error."
                          expressionType="Notify"
                          name="IgnoreCertificateErrors">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Allow unsecure ciphers/suites and curves for SSLS/TLS communication. Use this option to communicate with web servers which needs legacy / unsecured ciphers support. This option is only trigged when you change default SSL/TLS Version on advanced settings tab."
                          expressionType="Notify"
                          name="AllowUnsecureSuite">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Use connection to pass credentials for authentication (e.g. Use UserID/Password or Use OAuth Protocol for token based approach)"
                          expressionType="Notify"
                          name="UseConnection">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specified how you want to loop through multiple pages returned by REST API."
                          expressionType="Notify"
                          name="PagingMode"
                          typeConverter="ZappySys.Common.RestApiPagingMode, ZappySys.Common, Version=1.0.2018.11210, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                        <property
                          dataType="System.Boolean"
                          description="If you wish to pass extracted pagination token or current page number in the body of next request then set this option to true. You can use [$pagetoken$] and [$pagetoken$] placeholders anywhere in the Body where you wish to insert extracted Page token. You must set encoded token you can use &lt;%nextlink_encoded%&gt; inside SuffixForNextUrl Property. If you dont use SuffixForNextUrl then raw nextLink or Token will be inserted inside the body. If you dont specify [$pagetoken$] placeholder in the body then NextPage Token will be appended at the end. NextPage Token is extracted by filter expression specified using property NextUrlSuffix"
                          expressionType="Notify"
                          name="EnablePageTokenForBody">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this to true if you wish to specify different URL, Header, Body or Filter for first page and next page (i.e. Paginated response). Some APIs like Amazon MWS, NetSuite, Zuora) you may need to set this to true."
                          expressionType="Notify"
                          name="HasDifferentNextPageInfo">false</property>
                        <property
                          dataType="System.String"
                          description="When HasDifferentNextPageInfo=true you can set this property to indicate first page and next page. You can specify different URL, Header, Body or Filter for first page and next page (i.e. Paginated response). Use [$tag$] as placeholder anywhere in the URL, Header, Body or Filter and at runtime system will replace it with correct value (first page or next page value). Syntax to specify placeholder for first page vs next page is like a connectionstring url=FirstPageValue|NextPageValue;header=FirstPageValue|NextPageValue;body=FirstPageValue|NextPageValue;filter=FirstPageValue|NextPageValue; You can use one or more key/value pairs to make things dynamic (e.g. url, header, body or filter)  .For example if you have pagination in your API and First URL is http://abc.com/api/items/get and to get more records you have to call http://abc.com/api/items/getNext then you can use [$tag$] as placeholder in the URL http://abc.com/api/items/[$tag$] and specify this property with first page tag and next page tag as url=get|getNext  (Tags are separated using vertical bar). "
                          expressionType="Notify"
                          name="PagePlaceholders"></property>
                        <property
                          dataType="System.String"
                          description="Use this property to set request body fragment for first page. HasDifferentNextPageInfo must be set to true to use this property."
                          expressionType="Notify"
                          name="FirstPageBodyPart"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.String"
                          description="Use this property to set request body fragment for any request after first request. HasDifferentNextPageInfo must be set to true to use this property."
                          expressionType="Notify"
                          name="NextPageBodyPart"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.String"
                          description="Expression to extract Maximum pages to loop through. Some APIs don't stop pagination and keep returning last page data when you try to read data after last page. Specify expression (e.g. $.page_count ) to read total pages to loop through using this property."
                          expressionType="Notify"
                          name="PagingMaxPagesExpr"></property>
                        <property
                          dataType="System.String"
                          description="e.g. Type page_num if URL looks like this =&gt; http://abc.com/?page_num=1&amp;sort=true  (page number via query string)&#xA;--or-- Type &lt;%page%&gt; if page number is inside URL path like this =&gt; http://abc.com/1/?sort=true  (e.g. replace page number in url with placeholder http://abc.com/&lt;%page%&gt;/?sort=true)&#xA;Page number will be incremented by one for next URL until last page is reached or [Max Page Number] is reached"
                          expressionType="Notify"
                          name="PageNumberAttributeNameInUrl"></property>
                        <property
                          dataType="System.Int32"
                          description="Maximum page number until which auto increment is allowed. Type zero for no limit. Next URL contains next page number (increment by one) until last page is detected or [Max Page Number] limit is reached."
                          expressionType="Notify"
                          name="MaxPageNumber">0</property>
                        <property
                          dataType="System.String"
                          description="Variable name which will hold starting page number. This is ignored if you useing parameter name from query string to indicate page number."
                          expressionType="Notify"
                          name="StartPageNumberVariable"></property>
                        <property
                          dataType="System.Int32"
                          description="Page counter increment. By default next page is incremented by one if this value is zero. You can also enter negative number if you want to decrease page counter."
                          expressionType="Notify"
                          name="PageNumberIncrement">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specified how you want detect last page."
                          expressionType="Notify"
                          name="PagingEndStrategy"
                          typeConverter="ZappySys.Common.UrlPagingEndDetectionStrategy, ZappySys.Common, Version=1.0.2018.11210, Culture=neutral, PublicKeyToken=1903265a93eae502">3</property>
                        <property
                          dataType="System.Boolean"
                          description="Condition result to compare to detect last page. Set this property to True if you want detect last page if condition is true else set this to False."
                          expressionType="Notify"
                          name="LastPageWhenConditionEqualsTo">true</property>
                        <property
                          dataType="System.Int32"
                          description="Minimum bytes expected from response."
                          expressionType="Notify"
                          name="ResponseMinBytes">0</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum bytes from response."
                          expressionType="Notify"
                          name="ResponseMaxBytes">3</property>
                        <property
                          dataType="System.String"
                          description="Expected error message sub string from response."
                          expressionType="Notify"
                          name="ResponseErrorString">not found</property>
                        <property
                          dataType="System.Int32"
                          description="Expected status code from response when page number you trying to access not found."
                          expressionType="Notify"
                          name="ResponseStatusCode">404</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum JSON records to fetch. Set this value to 0 for all records"
                          expressionType="Notify"
                          name="MaxRows">0</property>
                        <property
                          dataType="System.String"
                          description="Enter expression here to filter data.(Example:  $.Users[*].UserName ) This will fetch User names from users records"
                          expressionType="Notify"
                          name="Filter"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">$.result.rows</property>
                        <property
                          dataType="System.Boolean"
                          description="Use this option to include parent properties (Non array) in the output along with Filtered Rows"
                          expressionType="Notify"
                          name="IncludeParentColumns">true</property>
                        <property
                          dataType="System.Boolean"
                          description="By default child and parent information is not included in the output if children not found for specified expression. For example if you want to extract all orders from all customers nodes then you can type $.Customers[*].Orders[*]. This will fetch all orders from all customers. By default customers records without orders wont be included in the output. If you want to include those customers where orders not found then check this option (Output null information for order attributes). This behavior is similar to LEFT OUTER JOIN in SQL (Left side is parent, right side is child). This option is ***resource intensive*** so only check if you really care about this behavior."
                          expressionType="Notify"
                          name="IncludeParentColumnsWhenChildMissing">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to true if you want to output parent columns which are array. By default any parent column which is an array is not included in output. See also FilterForParentColumnsWithArrayType property if you set this property"
                          expressionType="Notify"
                          name="IncludeParentColumnsWithArrayType">false</property>
                        <property
                          dataType="System.String"
                          description="Filter expression to extract value form parent"
                          expressionType="Notify"
                          name="FilterForParentColumnsWithArrayType"></property>
                        <property
                          dataType="System.String"
                          description="Prefix for parent column name. This option is only valid if you have set IncludeParentColumns=True"
                          expressionType="Notify"
                          name="ParentColumnPrefix">P_</property>
                        <property
                          dataType="System.Boolean"
                          description="Throw error if property name specified in filter expression is missing. By default it will ignore any missing property errors."
                          expressionType="Notify"
                          name="ThrowErrorIfPropertyMissing">false</property>
                        <property
                          dataType="System.Int32"
                          description="This property how many nested levels should be scanned to fetch various properties. 0=Scan all child levels."
                          expressionType="Notify"
                          name="MaxLevelsToScan">0</property>
                        <property
                          dataType="System.String"
                          description="List comma separated property names from JSON document which you want to exclude from output. Specify parent property name to exclude all child nodes."
                          expressionType="Notify"
                          name="ExcludedProperties"></property>
                        <property
                          dataType="System.String"
                          description="Property level separator used in generated property name (separator for outer properties - Above selected filter node). Use this if default separator is producing duplicate property name which is conflicting with existing name."
                          expressionType="Notify"
                          name="LevelSeparator">_</property>
                        <property
                          dataType="System.Boolean"
                          description="Enables deep array flattening for selected filtered hierarchy. When you turn on this property it will flatten each property of each array item and expose as column (e.g. If you have Filter set as $.customers[*] and for each customer you have an array of Addresses then you may see output columns like Addresses.1.City, Addresses.1.State, Addresses.2.City, Addresses.2.State .... Addresses.N.City, Addresses.N.State). You can control how many array items you want to flatten by setting MaxArrayItemsToFlatten property."
                          expressionType="Notify"
                          name="EnableArrayFlattening">false</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum number of array items to flatten. inner array flattening. Adjust this property to control how many columns being generated. This option is ignored if you set EnableArrayFlattening=false"
                          expressionType="Notify"
                          name="MaxArrayItemsToFlatten">10</property>
                        <property
                          dataType="System.Int32"
                          description="Compression format for source file (e.g. gzip, zip)"
                          expressionType="Notify"
                          name="FileCompressionType"
                          typeConverter="ZappySys.Common.FileCompressionType, ZappySys.Common, Version=1.0.2018.11210, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                        <property
                          dataType="System.Int32"
                          description="Array Transformation you want to apply. Useful for case when you have 2-Dimensional arrays with rows/columns in separate arrays."
                          expressionType="Notify"
                          name="ArrayTransformationType"
                          typeConverter="ZappySys.Json.ArrayTransformType, ZappySys.Json, Version=1.0.2018.11210, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                        <property
                          dataType="System.String"
                          description="Filter expression to use to extract column names for array transformation."
                          expressionType="Notify"
                          name="ArrayTransColumnNameFilter"></property>
                        <property
                          dataType="System.String"
                          description="Filter expression for row values (Not applicable for simple array transformation)."
                          expressionType="Notify"
                          name="ArrayTransRowValueFilter"></property>
                        <property
                          dataType="System.Boolean"
                          description="When you have 2D array but don't have column list specified in a separate array then use this option (e.g. { arr: [[10,11],[21,22]] } )."
                          expressionType="Notify"
                          name="ArrayTransEnableCustomColumns">false</property>
                        <property
                          dataType="System.String"
                          description="When you have 2D array but don't have column list specified in a separate array then use specify column names here. Use comma separated list (e.g col1,col2,col3 ). Column name Order must match value order."
                          expressionType="Notify"
                          name="ArrayTransCustomColumns"></property>
                        <property
                          dataType="System.String"
                          description="Specifies how custom date formatted strings are parsed when reading JSON."
                          expressionType="Notify"
                          name="DateFormatString"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies how date formatted strings, e.g. Date(1198908717056) and 2012-03-21T05:40Z, are parsed when reading JSON."
                          expressionType="Notify"
                          name="DateParseHandling"
                          typeConverter="ZappySys.Common.DateParseHandling, ZappySys.Common, Version=1.0.2018.11210, Culture=neutral, PublicKeyToken=1903265a93eae502">1</property>
                        <property
                          dataType="System.Boolean"
                          description="Output as raw JSON document rather than parsing individual fields. This option is helpful if you have documents stored in a file and you want to pass them downstream as raw JSON string rather than parsing into columns."
                          expressionType="Notify"
                          name="OutputRawDocument">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indent JSON output so its easy to read."
                          expressionType="Notify"
                          name="IndentOutput">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to true if you want to output FilePath. This option is ignored when you consume DirectValue or data from Url rather than local files. Output column name will be __FilePath"
                          expressionType="Notify"
                          name="OutputFilePath">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to true if you want to output FileName. This option is ignored when you consume DirectValue or data from Url rather than local files. Output column name will be __FileName"
                          expressionType="Notify"
                          name="OutputFileName">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to true if you want to move processed file to archive folder."
                          expressionType="Notify"
                          name="EnableArchiveFile">false</property>
                        <property
                          dataType="System.String"
                          description="Folder path where you want to move processed file."
                          expressionType="Notify"
                          name="ArchiveFolderPath"></property>
                        <property
                          dataType="System.Boolean"
                          description="Folder path where you want to move processed file."
                          expressionType="Notify"
                          name="OverwriteFileInArchiveFolder">false</property>
                        <property
                          dataType="System.String"
                          description="File naming convention for archived file. By default it will same name as original source file processed. But you can control naming format using {%name%} and {%ext%} placeholders. e.g. {%name%}_processed{%ext%} or {%name%}{%ext%}.{{System::ContainerStartTime,yyyyMMdd_HHmmss_fff}}"
                          expressionType="Notify"
                          name="ArchiveFileNamingConvention"></property>
                        <property
                          dataType="System.Boolean"
                          description="When this property is true then Column is converted to Row. Pivoted names will appear under  Pivot_Name column and values will appear under Pivot_Value field."
                          expressionType="Notify"
                          name="EnablePivot">false</property>
                        <property
                          dataType="System.Int32"
                          description="Metadata scan mode controls how data type and length is determined. By default few records scanned to determine datatype/length. Changing ScanMode affects length/datatype accuracy."
                          expressionType="Notify"
                          name="MetaDataScanMode"
                          typeConverter="ZappySys.Common.Data.MetaDataScanMode, ZappySys.Common, Version=1.0.2018.11210, Culture=neutral, PublicKeyToken=1903265a93eae502">4</property>
                        <property
                          dataType="System.Int32"
                          description="Length for all string column. This option is only valid for MetaDataScanMode=Custom"
                          expressionType="Notify"
                          name="MetaDataCustomLength">1000</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.JsonSource</property>
                      </properties>
                      <outputs>
                        <output
                          refId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Search custom validation.Outputs[JsonSourceOutput]"
                          errorOrTruncationOperation="Error"
                          errorRowDisposition="FailComponent"
                          name="JsonSourceOutput"
                          truncationRowDisposition="FailComponent">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Search custom validation.Outputs[JsonSourceOutput].Columns[_id]"
                              dataType="i4"
                              externalMetadataColumnId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Search custom validation.Outputs[JsonSourceOutput].ExternalColumns[_id]"
                              lineageId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Search custom validation.Outputs[JsonSourceOutput].Columns[_id]"
                              name="_id">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  description="This flag indicates column is locked so it doesn't refresh datatype automatically or column is manually added by user rather than auto detect"
                                  expressionType="Notify"
                                  name="ManuallyAdded">true</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Search custom validation.Outputs[JsonSourceOutput].Columns[name]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Search custom validation.Outputs[JsonSourceOutput].ExternalColumns[name]"
                              length="1000"
                              lineageId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Search custom validation.Outputs[JsonSourceOutput].Columns[name]"
                              name="name">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  description="This flag indicates column is locked so it doesn't refresh datatype automatically or column is manually added by user rather than auto detect"
                                  expressionType="Notify"
                                  name="ManuallyAdded">true</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Search custom validation.Outputs[JsonSourceOutput].Columns[is_enabled]"
                              dataType="bool"
                              externalMetadataColumnId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Search custom validation.Outputs[JsonSourceOutput].ExternalColumns[is_enabled]"
                              lineageId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Search custom validation.Outputs[JsonSourceOutput].Columns[is_enabled]"
                              name="is_enabled">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  description="This flag indicates column is locked so it doesn't refresh datatype automatically or column is manually added by user rather than auto detect"
                                  expressionType="Notify"
                                  name="ManuallyAdded">true</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Search custom validation.Outputs[JsonSourceOutput].Columns[is_hidden]"
                              dataType="bool"
                              externalMetadataColumnId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Search custom validation.Outputs[JsonSourceOutput].ExternalColumns[is_hidden]"
                              lineageId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Search custom validation.Outputs[JsonSourceOutput].Columns[is_hidden]"
                              name="is_hidden">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  description="This flag indicates column is locked so it doesn't refresh datatype automatically or column is manually added by user rather than auto detect"
                                  expressionType="Notify"
                                  name="ManuallyAdded">true</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Search custom validation.Outputs[JsonSourceOutput].ExternalColumns[P_result_total]"
                              dataType="i8"
                              name="P_result_total" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Search custom validation.Outputs[JsonSourceOutput].ExternalColumns[P_result_viewstate_id]"
                              dataType="wstr"
                              length="1020"
                              name="P_result_viewstate_id" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Search custom validation.Outputs[JsonSourceOutput].ExternalColumns[P_error]"
                              dataType="wstr"
                              length="1020"
                              name="P_error" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Search custom validation.Outputs[JsonSourceOutput].ExternalColumns[account_id]"
                              dataType="i8"
                              name="account_id" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Search custom validation.Outputs[JsonSourceOutput].ExternalColumns[system_record_state]"
                              dataType="wstr"
                              length="24"
                              name="system_record_state" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Search custom validation.Outputs[JsonSourceOutput].ExternalColumns[system_ctime]"
                              dataType="i8"
                              name="system_ctime" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Search custom validation.Outputs[JsonSourceOutput].ExternalColumns[system_modtime]"
                              dataType="i8"
                              name="system_modtime" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Search custom validation.Outputs[JsonSourceOutput].ExternalColumns[name]"
                              dataType="wstr"
                              length="284"
                              name="name">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  description="This flag indicates column is locked so it doesn't refresh datatype automatically or column is manually added by user rather than auto detect"
                                  expressionType="Notify"
                                  name="ManuallyAdded">true</property>
                              </properties>
                            </externalMetadataColumn>
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Search custom validation.Outputs[JsonSourceOutput].ExternalColumns[error_message]"
                              dataType="wstr"
                              length="592"
                              name="error_message" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Search custom validation.Outputs[JsonSourceOutput].ExternalColumns[is_warning]"
                              dataType="wstr"
                              length="80"
                              name="is_warning" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Search custom validation.Outputs[JsonSourceOutput].ExternalColumns[is_enabled]"
                              dataType="i8"
                              name="is_enabled">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  description="This flag indicates column is locked so it doesn't refresh datatype automatically or column is manually added by user rather than auto detect"
                                  expressionType="Notify"
                                  name="ManuallyAdded">true</property>
                              </properties>
                            </externalMetadataColumn>
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Search custom validation.Outputs[JsonSourceOutput].ExternalColumns[related_services]"
                              dataType="wstr"
                              length="1020"
                              name="related_services" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Search custom validation.Outputs[JsonSourceOutput].ExternalColumns[etag]"
                              dataType="wstr"
                              length="52"
                              name="etag" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Search custom validation.Outputs[JsonSourceOutput].ExternalColumns[system_owner_user.id]"
                              dataType="wstr"
                              length="20"
                              name="system_owner_user.id" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Search custom validation.Outputs[JsonSourceOutput].ExternalColumns[system_owner_user._name]"
                              dataType="wstr"
                              length="100"
                              name="system_owner_user._name" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Search custom validation.Outputs[JsonSourceOutput].ExternalColumns[system_owner_user._first_name]"
                              dataType="wstr"
                              length="48"
                              name="system_owner_user._first_name" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Search custom validation.Outputs[JsonSourceOutput].ExternalColumns[system_owner_user._last_name]"
                              dataType="wstr"
                              length="48"
                              name="system_owner_user._last_name" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Search custom validation.Outputs[JsonSourceOutput].ExternalColumns[system_owner_user._email_address]"
                              dataType="wstr"
                              length="112"
                              name="system_owner_user._email_address" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Search custom validation.Outputs[JsonSourceOutput].ExternalColumns[system_modified_user.id]"
                              dataType="wstr"
                              length="20"
                              name="system_modified_user.id" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Search custom validation.Outputs[JsonSourceOutput].ExternalColumns[system_modified_user._name]"
                              dataType="wstr"
                              length="100"
                              name="system_modified_user._name" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Search custom validation.Outputs[JsonSourceOutput].ExternalColumns[system_modified_user._first_name]"
                              dataType="wstr"
                              length="48"
                              name="system_modified_user._first_name" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Search custom validation.Outputs[JsonSourceOutput].ExternalColumns[system_modified_user._last_name]"
                              dataType="wstr"
                              length="48"
                              name="system_modified_user._last_name" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Search custom validation.Outputs[JsonSourceOutput].ExternalColumns[system_modified_user._email_address]"
                              dataType="wstr"
                              length="112"
                              name="system_modified_user._email_address" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Search custom validation.Outputs[JsonSourceOutput].ExternalColumns[system_created_user.id]"
                              dataType="wstr"
                              length="20"
                              name="system_created_user.id" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Search custom validation.Outputs[JsonSourceOutput].ExternalColumns[system_created_user._name]"
                              dataType="wstr"
                              length="100"
                              name="system_created_user._name" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Search custom validation.Outputs[JsonSourceOutput].ExternalColumns[system_created_user._first_name]"
                              dataType="wstr"
                              length="48"
                              name="system_created_user._first_name" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Search custom validation.Outputs[JsonSourceOutput].ExternalColumns[system_created_user._last_name]"
                              dataType="wstr"
                              length="48"
                              name="system_created_user._last_name" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Search custom validation.Outputs[JsonSourceOutput].ExternalColumns[system_created_user._email_address]"
                              dataType="wstr"
                              length="112"
                              name="system_created_user._email_address" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Search custom validation.Outputs[JsonSourceOutput].ExternalColumns[library.id]"
                              dataType="wstr"
                              length="4"
                              name="library.id" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Search custom validation.Outputs[JsonSourceOutput].ExternalColumns[service.id]"
                              dataType="wstr"
                              length="80"
                              name="service.id" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Search custom validation.Outputs[JsonSourceOutput].ExternalColumns[service.text]"
                              dataType="wstr"
                              length="88"
                              name="service.text" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Search custom validation.Outputs[JsonSourceOutput].ExternalColumns[trigger.id]"
                              dataType="wstr"
                              length="64"
                              name="trigger.id" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Search custom validation.Outputs[JsonSourceOutput].ExternalColumns[trigger.text]"
                              dataType="wstr"
                              length="64"
                              name="trigger.text" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Search custom validation.Outputs[JsonSourceOutput].ExternalColumns[suggested_workflow]"
                              dataType="wstr"
                              length="1020"
                              name="suggested_workflow" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Search custom validation.Outputs[JsonSourceOutput].ExternalColumns[is_hidden]"
                              dataType="wstr"
                              length="1020"
                              name="is_hidden">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  description="This flag indicates column is locked so it doesn't refresh datatype automatically or column is manually added by user rather than auto detect"
                                  expressionType="Notify"
                                  name="ManuallyAdded">true</property>
                              </properties>
                            </externalMetadataColumn>
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Search custom validation.Outputs[JsonSourceOutput].ExternalColumns[definition.code]"
                              dataType="wstr"
                              length="3744"
                              name="definition.code" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Search custom validation.Outputs[JsonSourceOutput].ExternalColumns[_id]"
                              dataType="i4"
                              name="_id">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  description="This flag indicates column is locked so it doesn't refresh datatype automatically or column is manually added by user rather than auto detect"
                                  expressionType="Notify"
                                  name="ManuallyAdded">true</property>
                              </properties>
                            </externalMetadataColumn>
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Search custom validation.Outputs[JsonSourceOutput].ExternalColumns[__FileName]"
                              dataType="wstr"
                              length="600"
                              name="__FileName" />
                          </externalMetadataColumns>
                        </output>
                        <output
                          refId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Search custom validation.Outputs[JsonSource Error Output]"
                          isErrorOut="true"
                          name="JsonSource Error Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Search custom validation.Outputs[JsonSource Error Output].Columns[_id]"
                              dataType="i4"
                              lineageId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Search custom validation.Outputs[JsonSource Error Output].Columns[_id]"
                              name="_id" />
                            <outputColumn
                              refId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Search custom validation.Outputs[JsonSource Error Output].Columns[name]"
                              dataType="wstr"
                              length="1000"
                              lineageId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Search custom validation.Outputs[JsonSource Error Output].Columns[name]"
                              name="name" />
                            <outputColumn
                              refId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Search custom validation.Outputs[JsonSource Error Output].Columns[is_enabled]"
                              dataType="bool"
                              lineageId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Search custom validation.Outputs[JsonSource Error Output].Columns[is_enabled]"
                              name="is_enabled" />
                            <outputColumn
                              refId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Search custom validation.Outputs[JsonSource Error Output].Columns[is_hidden]"
                              dataType="bool"
                              lineageId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Search custom validation.Outputs[JsonSource Error Output].Columns[is_hidden]"
                              name="is_hidden" />
                            <outputColumn
                              refId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Search custom validation.Outputs[JsonSource Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Search custom validation.Outputs[JsonSource Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Search custom validation.Outputs[JsonSource Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Search custom validation.Outputs[JsonSource Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                            <outputColumn
                              refId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Search custom validation.Outputs[JsonSource Error Output].Columns[ErrorColumnName]"
                              codePage="1252"
                              dataType="str"
                              length="128"
                              lineageId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Search custom validation.Outputs[JsonSource Error Output].Columns[ErrorColumnName]"
                              name="ErrorColumnName" />
                            <outputColumn
                              refId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Search custom validation.Outputs[JsonSource Error Output].Columns[ErrorMessage]"
                              dataType="wstr"
                              length="1024"
                              lineageId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Search custom validation.Outputs[JsonSource Error Output].Columns[ErrorMessage]"
                              name="ErrorMessage" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                  </components>
                  <paths>
                    <path
                      refId="Package\Foreach migrated account\Custom Validation\Search cutom validation.Paths[disabled]"
                      endId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Create disabled list.Inputs[Input 0]"
                      name="disabled"
                      startId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Enabled split.Outputs[disabled]" />
                    <path
                      refId="Package\Foreach migrated account\Custom Validation\Search cutom validation.Paths[enabled]"
                      endId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Create enabled list.Inputs[Input 0]"
                      name="enabled"
                      startId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Enabled split.Outputs[enabled]" />
                    <path
                      refId="Package\Foreach migrated account\Custom Validation\Search cutom validation.Paths[hidden]"
                      endId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Create hidden list.Inputs[Input 0]"
                      name="hidden"
                      startId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Disabled split.Outputs[hidden]" />
                    <path
                      refId="Package\Foreach migrated account\Custom Validation\Search cutom validation.Paths[JsonSourceOutput]"
                      endId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Remove invalid chars from name.Inputs[Input 0]"
                      name="JsonSourceOutput"
                      startId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Search custom validation.Outputs[JsonSourceOutput]" />
                    <path
                      refId="Package\Foreach migrated account\Custom Validation\Search cutom validation.Paths[Multicast Output 1]"
                      endId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Enabled split.Inputs[Conditional Split Input]"
                      name="Multicast Output 1"
                      startId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Multicast.Outputs[Multicast Output 1]" />
                    <path
                      refId="Package\Foreach migrated account\Custom Validation\Search cutom validation.Paths[Multicast Output 2]"
                      endId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Disabled split.Inputs[Conditional Split Input]"
                      name="Multicast Output 2"
                      startId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Multicast.Outputs[Multicast Output 2]" />
                    <path
                      refId="Package\Foreach migrated account\Custom Validation\Search cutom validation.Paths[Output 0]"
                      endId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Multicast.Inputs[Multicast Input 1]"
                      name="Output 0"
                      startId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Remove invalid chars from name.Outputs[Output 0]" />
                    <path
                      refId="Package\Foreach migrated account\Custom Validation\Search cutom validation.Paths[visible]"
                      endId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Create visible list.Inputs[Input 0]"
                      name="visible"
                      startId="Package\Foreach migrated account\Custom Validation\Search cutom validation\Disabled split.Outputs[visible]" />
                  </paths>
                </pipeline>
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Foreach migrated account\Custom Validation.PrecedenceConstraints[Constraint]"
              DTS:CreationName=""
              DTS:DTSID="{90CEBCB2-9A92-4DC0-8D3B-F424FE9FDAD1}"
              DTS:From="Package\Foreach migrated account\Custom Validation\Search cutom validation"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint"
              DTS:To="Package\Foreach migrated account\Custom Validation\Form json" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Foreach migrated account\Custom Validation.PrecedenceConstraints[Constraint 1]"
              DTS:CreationName=""
              DTS:DTSID="{806B145B-C73F-4C06-859E-BC197E768AF2}"
              DTS:From="Package\Foreach migrated account\Custom Validation\Form json"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 1"
              DTS:To="Package\Foreach migrated account\Custom Validation\Insert to db" />
          </DTS:PrecedenceConstraints>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach migrated account\Get auth key"
          DTS:CreationName="ZappySys.RestApiTask"
          DTS:Description="ZS REST API Task"
          DTS:DTSID="{2a6ce1e2-a5b7-46ff-98ce-521615b11ff9}"
          DTS:ExecutableType="ZappySys.RestApiTask"
          DTS:FailPackageOnFailure="True"
          DTS:LocaleID="-1"
          DTS:ObjectName="Get auth key"
          DTS:TaskContact="REST API Task; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <RestApiTask
              RequestAccessMode="UrlFromVariable"
              RequestUrlVariable="User::API_URL"
              EnableStatusCheck="False"
              StatucCheckMaxWaitSeconds="0"
              StatucCheckIterationWaitSeconds="0"
              StatusCheckForFailedValue="False"
              StatusSuccessValue=""
              StatusFailedValue=""
              IsMultiPartUpload="False"
              PreventAutoRedirect="False"
              RequestTimeoutMs="0"
              SecurityProtocol="Default"
              EnableCompressionSupport="True"
              AllowUnsecureSuite="False"
              IgnoreCertificateErrors="False"
              RequestUrl="www.spicerhaart.co.uk"
              RequestUrlConnection=""
              RequestMethod="POST"
              RequestContentType="ApplicationJson"
              OverrideConnectionUrl="False"
              RequestHeaders="&lt;request&gt;&lt;header&gt;&lt;name&gt;Accept&lt;/name&gt;&lt;value&gt;*/*&lt;/value&gt;&lt;/header&gt;&lt;header&gt;&lt;name&gt;Cache-Control&lt;/name&gt;&lt;value&gt;no-cache&lt;/value&gt;&lt;/header&gt;&lt;/request&gt;"
              RequestData="{&#xA; &quot;method&quot;:&quot;Authentication::login&quot;,&#xA; &quot;args&quot;:&#xA; {&#xA;  &quot;email&quot;:&quot;{{User::API_Username}}&quot;,&#xA;  &quot;password&quot;:&quot;{{User::API_Password}}&quot;,&#xA;  &quot;application&quot;:&quot;rex&quot;,&#xA;  &quot;account_id&quot;:{{User::RexAccountID}}&#xA; }&#xA;}"
              SaveResponse="True"
              SaveResponseStatusCode="False"
              ResponseAccessMode="Variable"
              SaveAsBinary="False"
              ResponseDataFilePath=""
              ResponseHeaderMappings="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-16&quot;?&gt;&lt;ArrayOfKeyValueMapping xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot;&gt;&lt;KeyValueMapping&gt;&lt;Key&gt;Transfer-Encoding&lt;/Key&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;/KeyValueMapping&gt;&lt;KeyValueMapping&gt;&lt;Key&gt;Connection&lt;/Key&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;/KeyValueMapping&gt;&lt;KeyValueMapping&gt;&lt;Key&gt;Access-Control-Allow-Origin&lt;/Key&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;/KeyValueMapping&gt;&lt;KeyValueMapping&gt;&lt;Key&gt;Access-Control-Allow-Headers&lt;/Key&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;/KeyValueMapping&gt;&lt;KeyValueMapping&gt;&lt;Key&gt;Access-Control-Allow-Methods&lt;/Key&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;/KeyValueMapping&gt;&lt;KeyValueMapping&gt;&lt;Key&gt;Access-Control-Max-Age&lt;/Key&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;/KeyValueMapping&gt;&lt;KeyValueMapping&gt;&lt;Key&gt;Vary&lt;/Key&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;/KeyValueMapping&gt;&lt;KeyValueMapping&gt;&lt;Key&gt;Content-Encoding&lt;/Key&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;/KeyValueMapping&gt;&lt;KeyValueMapping&gt;&lt;Key&gt;Content-Type&lt;/Key&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;/KeyValueMapping&gt;&lt;KeyValueMapping&gt;&lt;Key&gt;Date&lt;/Key&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;/KeyValueMapping&gt;&lt;KeyValueMapping&gt;&lt;Key&gt;Server&lt;/Key&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;/KeyValueMapping&gt;&lt;/ArrayOfKeyValueMapping&gt;"
              ResponseCookieMappings="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-16&quot;?&gt;&lt;ArrayOfKeyValueMapping xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; /&gt;"
              CookieContainerVariable=""
              ConvertXmlToJson="False"
              ResponseDataVariable="User::API_Token"
              ResponseStatusCodeVariable=""
              ResponseContentType="Json"
              ResponseContentFilter="$.result"
              ResponseCharset=""
              ValidateResponse="False"
              ValidationRules="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-16&quot;?&gt;&lt;ResponseValidationSetting xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot;&gt;&lt;MatchAny&gt;false&lt;/MatchAny&gt;&lt;Rules&gt;&lt;ResponseValidationRule xsi:type=&quot;StatusCodeValidationRule&quot;&gt;&lt;Enabled&gt;false&lt;/Enabled&gt;&lt;Operator&gt;Eq&lt;/Operator&gt;&lt;StatusCode&gt;200&lt;/StatusCode&gt;&lt;/ResponseValidationRule&gt;&lt;ResponseValidationRule xsi:type=&quot;ContentValidationRule&quot;&gt;&lt;Enabled&gt;false&lt;/Enabled&gt;&lt;Operator&gt;Eq&lt;/Operator&gt;&lt;Value /&gt;&lt;/ResponseValidationRule&gt;&lt;ResponseValidationRule xsi:type=&quot;HeaderValidationRule&quot;&gt;&lt;Enabled&gt;false&lt;/Enabled&gt;&lt;Operator&gt;Eq&lt;/Operator&gt;&lt;KeyName /&gt;&lt;Value /&gt;&lt;DataType&gt;String&lt;/DataType&gt;&lt;/ResponseValidationRule&gt;&lt;/Rules&gt;&lt;/ResponseValidationSetting&gt;"
              ConsumeResponseOnError="False"
              ContineOnAnyError="False"
              ContineOnErrorForMessage="False"
              ContineOnErrorForStatusCode="False"
              ErrorStatusCodeToMatch="404"
              MatchForEqual="True"
              ErrorSubstringToMatch=""
              ContineOn404Error="False"
              SaveErrorFlagToVariable="False"
              ErrorFlagVariableName=""
              LogLevel="Normal"
              PrefixTimestamp="False" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach migrated account\Metrics"
          DTS:CreationName="STOCK:SEQUENCE"
          DTS:Description="Sequence Container"
          DTS:DTSID="{34D03A28-8163-46C5-B2A1-5CF57FCB89F8}"
          DTS:ExecutableType="STOCK:SEQUENCE"
          DTS:LocaleID="-1"
          DTS:ObjectName="Metrics">
          <DTS:Variables />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Foreach migrated account\Metrics\Form json"
              DTS:CreationName="Microsoft.ExpressionTask"
              DTS:Description="Expression Task"
              DTS:DTSID="{e75de707-59c0-478b-aa9b-14ef68afe654}"
              DTS:ExecutableType="Microsoft.ExpressionTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Form json"
              DTS:ThreadHint="1">
              <DTS:Variables />
              <DTS:ObjectData>
                <ExpressionTask
                  Expression="@[User::Metrics_Json] = &quot;{&quot; + @[User::Metrics_Enabled] + &quot;, &quot; + @[User::Metrics_Disabled] + &quot;, &quot; + @[User::Metrics_Hidden] + &quot;, &quot; + @[User::Metrics_Visible] + &quot;}&quot;" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Foreach migrated account\Metrics\Insert to db"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{2e55f368-23e7-4b22-be59-196d90bb24a9}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Insert to db"
              DTS:ThreadHint="1">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{308E9EC4-EE59-4D5B-9275-9EC80ADF1BC9}"
                  SQLTask:SqlStatementSource="INSERT INTO AccountSettingsLog&#xA;(account_id, date, type, settings_json)&#xA;VALUES (?, CAST(GETDATE() AS DATE), 'metric', ?)" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="0"
                    SQLTask:DtsVariableName="User::RexAccountID"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="3"
                    SQLTask:ParameterSize="-1" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="1"
                    SQLTask:DtsVariableName="User::Metrics_Json"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="129"
                    SQLTask:ParameterSize="-1" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Foreach migrated account\Metrics\Search metrics"
              DTS:CreationName="Microsoft.Pipeline"
              DTS:Description="Data Flow Task"
              DTS:DTSID="{c02e5abb-2574-45f5-9500-c3118d724af2}"
              DTS:ExecutableType="Microsoft.Pipeline"
              DTS:LocaleID="-1"
              DTS:ObjectName="Search metrics"
              DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:ObjectData>
                <pipeline
                  version="1">
                  <components>
                    <component
                      refId="Package\Foreach migrated account\Metrics\Search metrics\Create disabled list"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;10"
                      description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                      name="Create disabled list"
                      version="10">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Stores the source code of the component"
                          isArray="true"
                          name="SourceCode"
                          state="cdata">
                          <arrayElements
                            arrayElementCount="30">
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using System.Linq;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    private string metrics_disabled { get; set; }
    private int stringLength { get; set; }

    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();

        metrics_disabled = "\"disabled\": [";
        stringLength = metrics_disabled.Length;
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();

        if (metrics_disabled.Length > stringLength)
        {
            Variables.MetricsDisabled = string.Concat(metrics_disabled.Reverse().Skip(2).Reverse()) + "]";
        }
        else
        {
            Variables.MetricsDisabled = metrics_disabled + "]";
        }
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer row)
    {
        metrics_disabled += "\"" + row.name + "\", ";
    }
}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String name
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
    }
    public bool name_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_e2cb5bc32fd44af0b54d58a496b5b191.Properties.Settings.get_Default():SC_e2cb5bc32fd44af0b54d58a496b5b191.Properties.Sett" +
    "ings")]

namespace SC_e2cb5bc32fd44af0b54d58a496b5b191.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String MetricsDisabled
    {
        get
        {
            return (String)(ParentComponent.ReadWriteVariables["Metrics_Disabled"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
        set
        {
            ParentComponent.ReadWriteVariables["Metrics_Disabled"].Value = value;
        }
    }

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Project]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>SC_e2cb5bc32fd44af0b54d58a496b5b191</msb:CodeName>
		<msb:DisplayName>SC_e2cb5bc32fd44af0b54d58a496b5b191</msb:DisplayName>
		<msb:ProjectId>{E37D0C76-EEB5-4C33-9D44-CD3D42D70091}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_e2cb5bc32fd44af0b54d58a496b5b191.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_e2cb5bc32fd44af0b54d58a496b5b191")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_e2cb5bc32fd44af0b54d58a496b5b191")]
[assembly: AssemblyCopyright("Copyright @  2020")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[SC_e2cb5bc32fd44af0b54d58a496b5b191.csproj]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{5ee01a44-06b1-411c-a382-228371abb874}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_e2cb5bc32fd44af0b54d58a496b5b191</RootNamespace>
    <AssemblyName>SC_e2cb5bc32fd44af0b54d58a496b5b191</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_e2cb5bc32fd44af0b54d58a496b5b191" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_e2cb5bc32fd44af0b54d58a496b5b191.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_e2cb5bc32fd44af0b54d58a496b5b191.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_e2cb5bc32fd44af0b54d58a496b5b191.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_e2cb5bc32fd44af0b54d58a496b5b191.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_e2cb5bc32fd44af0b54d58a496b5b191.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                          </arrayElements>
                        </property>
                        <property
                          dataType="System.String"
                          description="Stores the binary representation of the component"
                          isArray="true"
                          name="BinaryCode"
                          state="cdata">
                          <arrayElements
                            arrayElementCount="2">
                            <arrayElement
                              dataType="System.String"><![CDATA[SC_e2cb5bc32fd44af0b54d58a496b5b191.dll]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDALHVV14AAAAAAAAAAOAAIiALATAAABYAAAAIAAAAAAAAVjUA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAAQ1AABPAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAXBUAAAAgAAAAFgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAAYAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAA4
NQAAAAAAAEgAAAACAAUAiCIAAMQRAAABAAAAAAAAAEw0AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CewEAAAQqIgIDfQEAAAQqHgJ7AgAABCoiAgN9AgAABCqO
AigQAAAKAnIBAABwKAIAAAYCAigBAAAGbxEAAAooBAAABioAABMwAwBmAAAAAAAAAAIoEgAACgIo
AQAABm8RAAAKAigDAAAGMTECewQAAAQCKAEAAAYoAQAAKxgoAgAAKygBAAArKAMAACtyHQAAcCgW
AAAKbxUAAAYqAnsEAAAEAigBAAAGch0AAHAoFgAACm8VAAAGKooCAigBAAAGciEAAHADbwoAAAZy
JQAAcCgXAAAKKAIAAAYqHgIoDgAABioqAgMEBSgYAAAKKlICexkAAAoCexoAAAoWlG8bAAAKKiIC
FigcAAAKKh4CKB0AAAoqHgIoHgAACip+AigfAAAKAgJzEgAABn0DAAAEAgJzEwAABn0EAAAEKpIE
ci0AAHAabyAAAAosFQIFAgMoIQAACg4EcwkAAAZvEAAABipKKwcCA28RAAAGA28MAAAGLfEqBio6
AigiAAAKAgN9BQAABCo6AigiAAAKAgN9BgAABCqWAnsGAAAEbyMAAApyPQAAcG8kAAAKKCUAAApv
JgAACnQaAAABKnICewYAAARvIwAACnI9AABwbyQAAAoDbycAAAoqHgIoIgAACiqufgcAAAQtHnJf
AABw0AcAAAIoKAAACm8pAAAKcyoAAAqABwAABH4HAAAEKhp+CAAABCoeAoAIAAAEKhp+CQAABCoe
AigrAAAKKi5zGwAABoAJAAAEKgBCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAACA
BgAAI34AAOwGAADwBwAAI1N0cmluZ3MAAAAA3A4AANQAAAAjVVMAsA8AABAAAAAjR1VJRAAAAMAP
AAAEAgAAI0Jsb2IAAAAAAAAAAgAAAVcVoAEJCQAAAPoBMwAWAAABAAAAJAAAAAgAAAAJAAAAHAAA
ABAAAAArAAAAFgAAAAUAAAAIAAAADAAAAAEAAAAGAAAAAQAAAAMAAAAAAEAEAQAAAAAABgAAA8kF
BgCUA8kFBgBMArYFDwA9BgAABgB5AskEBgDjAskEBgDEAskEBgB7A8kEBgAgA8kEBgA5A8kEBgCQ
AskEBgCrAtkDCgBUA4UBBgAUAskFCgBgBYUBDgBRBYUBCgD4BIUBCgAXB4UBBgDaBoEEBgAvArYF
BgBxBekFBgDsBLQEEgD/ASoEEgBgAioEEgDfAZ8EBgD2A4EEFgBDATgFBgBeAIYABgDbBIEEGgAR
AIEFGgABAIEFSwCNBwAAGgAiAIEFBgCmAYEEBgBOAYEEBgDkB8kEAAAAAGwAAAAAAAEAAQABABAA
lAQAABAAAQABAAEAEABEBQAAPQADAAkAAQAQAPkGAABJAAMADgABABAAxwYAAE0ABQASAAEAEACI
BgAATQAGABMAAAAQAPAFTAZNAAcAFgAAARAAtwZMBmUACQAaAAEA8wDQAAEAFQHTAAYAxwbWAAYA
iAbaAAEABwfeAAEABwfeABEAiATiABEAzwHmABEAMwHqAFAgAAAAAIEIyQDuAAEAWCAAAAAAgQje
ABAAAQBhIAAAAACBCAgEGwACAGkgAAAAAIEIGQQBAAIAciAAAAAAxgCyAwYAAwCYIAAAAADGAL0D
BgADAAohAAAAAMYAvQfyAAMALSEAAAAAhhipBQYABAA1IQAAAACGGKkFXQAEAEAhAAAAAIYIfAHu
AAcAVSEAAAAAhghoBHkABwBeIQAAAACGANQHeQAHAGYhAAAAAIYA4QZ5AAcAbiEAAAAAhhipBQYA
BwCOIQAAAADGAGwH+AAHALMhAAAAAMYBZQfyAAsAxiEAAAAAxgG9B/IADADIIQAAAACGGKkFAgEN
ANchAAAAAIYYqQUCAQ4A5iEAAAAAhgihAO4ADwAMIgAAAACGCLUAEAAPACkiAAAAAIMYqQUGABAA
MSIAAAAAkwhtBQgBEABdIgAAAACTCLcBDQEQAGQiAAAAAJMIwwESARAAbCIAAAAAlgjtBhgBEQBz
IgAAAACGGKkFBgARAHsiAAAAAJEYrwUdAREAAAABANMDAAABANMDAAABANwHAAABAGYFAAACAJIG
AAADAAYFAAABAHUAAAACAHIBAAADAGYFAAAEAAYFAAABAGYFAAABANgHAAABAB0HAAABAB0HAAAB
ANMDAAABANMDCQCpBQEAEQCpBQYAGQCpBQoAKQCpBRAAMQCpBRAAOQCpBRAAQQCpBRAASQCpBRAA
UQCpBRAAWQCpBRAAYQCpBRAAaQCpBQYAcQCpBQYAoQCpBQYAwQCpBRUAkQCyAwYA0QD9AxsAkQC9
AwYA2QD3AR8A2QAzBTMA0QDTBkQA0QDTBk8A0QDTBlUAeQCpBV0AeQBmBWcAeQCSBmsAgQDzA28A
eQBxBHQAeQDUB3kAeQDhBnkAkQCpBQYA0QDABn0AkQCmBoQAmQCpBQYAkQB7BooA8QB4BI8AkQCo
B5UA+QB5B5sA+QDJA6IAEQFgAacAEQHgB7AAqQCpBbYAyQCpBQYAIABrAP0BIQBrAP0BLgALADwB
LgATAEUBLgAbAGQBLgAjAG0BLgArAJYBLgAzAJYBLgA7AJYBLgBDAG0BLgBLAJwBLgBTAJYBLgBb
ALMBQABrAP0BQQBrAP0BQwBjAP0BYABrAP0BgABrAP0ByQB7AGQB4wBzAP0B6QB7AGQBIQFrAP0B
AgABAAMAAwAGAAUABwAGAAgACAAAAOIAIQEAAB0EJQEAAIABIQEAAGwEKQEAALkAIQEAAHEFLQEA
ANcBMgEAAPEGNwECAAEAAwABAAIAAwACAAMABQABAAQABQACAAoABwACAAsACQACABQACwABABUA
CwACABcADQACABgADwABABkADwACABoAEQAEgAAAAQAAAAAAAAAAAAAAAAA6AAAABAAAAAAAAAAA
AAAAvgB9AAAAAAANAAAAAAAAAAAAAADHACcHAAAAAA0AAAAAAAAAAAAAAMcARAcAAAAABAAAAAAA
AAAAAAAAvgCBBAAAAAAEAAAAAAAAAAAAAAC+AKsBAAAAAA0AAAAAAAAAAAAAAMcAEAUAAAAAAAAA
AAEAAAD6BQAAJwAvACkALwArAC8AAAAAAABJRFRTVmFyaWFibGUxMDAASURUU1ZhcmlhYmxlczEw
MABJRFRTRXZhbHVhdG9yQ29udGV4dDEwMABTQ19lMmNiNWJjMzJmZDQ0YWYwYjU0ZDU4YTQ5NmI1
YjE5MQBJRW51bWVyYWJsZWAxADxNb2R1bGU+AElucHV0SUQAbXNjb3JsaWIAU3lzdGVtLkNvbGxl
Y3Rpb25zLkdlbmVyaWMAZ2V0X01ldHJpY3NEaXNhYmxlZABzZXRfTWV0cmljc0Rpc2FibGVkAGdl
dF9tZXRyaWNzX2Rpc2FibGVkAHNldF9tZXRyaWNzX2Rpc2FibGVkADxtZXRyaWNzX2Rpc2FibGVk
PmtfX0JhY2tpbmdGaWVsZAA8c3RyaW5nTGVuZ3RoPmtfX0JhY2tpbmdGaWVsZABkZWZhdWx0SW5z
dGFuY2UARW51bWVyYWJsZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBJbnB1
dE5hbWUAZ2V0X25hbWUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUAVHlwZQBTeXN0
ZW0uQ29yZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUAQXBwbGljYXRp
b25TZXR0aW5nc0Jhc2UAUmV2ZXJzZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVy
YXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRy
aWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNz
ZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5
Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBp
bGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2Vt
Ymx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRDb21wb25lbnRFbnRyeVBvaW50QXR0cmli
dXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0
ZQBQcmVFeGVjdXRlAFBvc3RFeGVjdXRlAHNldF9WYWx1ZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5W
ZXJzaW9uaW5nAEdldFN0cmluZwBnZXRfTGVuZ3RoAGdldF9zdHJpbmdMZW5ndGgAc2V0X3N0cmlu
Z0xlbmd0aABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU0NfZTJjYjViYzMyZmQ0NGFmMGI1NGQ1OGE0
OTZiNWIxOTEuZGxsAGdldF9uYW1lX0lzTnVsbABnZXRfSXRlbQBTeXN0ZW0AcmVzb3VyY2VNYW4A
U2NyaXB0TWFpbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0
ZW0uUmVmbGVjdGlvbgBTdHJpbmdDb21wYXJpc29uAEN1bHR1cmVJbmZvAE91dHB1dE5hbWVNYXAA
T3V0cHV0TWFwAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRFRTUnVudGltZVdyYXAAU2tpcABTeXN0ZW0u
TGlucQBJbnB1dDBCdWZmZXIAUGlwZWxpbmVCdWZmZXIAU2NyaXB0QnVmZmVyAGdldF9SZXNvdXJj
ZU1hbmFnZXIATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZS5XcmFwcGVyAC5jdG9yAC5j
Y3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBT
eXN0ZW0uUmVzb3VyY2VzAFNDX2UyY2I1YmMzMmZkNDRhZjBiNTRkNThhNDk2YjViMTkxLlByb3Bl
cnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBTQ19lMmNiNWJjMzJmZDQ0
YWYwYjU0ZDU4YTQ5NmI1YjE5MS5Qcm9wZXJ0aWVzAGdldF9SZWFkV3JpdGVWYXJpYWJsZXMAQnVm
ZmVyQ29sdW1uSW5kZXhlcwBHZXRDb2x1bW5JbmRleGVzAFNldHRpbmdzAEVxdWFscwBDb25uZWN0
aW9ucwBDb25jYXQAT2JqZWN0AEVuZE9mUm93c2V0AGdldF9EZWZhdWx0AFVzZXJDb21wb25lbnQA
UGFyZW50Q29tcG9uZW50AFNjcmlwdENvbXBvbmVudABNaWNyb3NvZnQuU3FsU2VydmVyLlR4U2Ny
aXB0AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuUGlwZWxpbmVIb3N0AElucHV0MF9Qcm9jZXNzSW5wdXQA
R2V0VmFsdWVXaXRoQ29udGV4dABTY3JpcHRDb21wb25lbnRFdmFsQ29udGV4dABnZXRfRXZhbHVh
dG9yQ29udGV4dABJbnB1dDBfUHJvY2Vzc0lucHV0Um93AE5leHRSb3cAcm93AGdldF9Bc3NlbWJs
eQAAAAAAGyIAZABpAHMAYQBiAGwAZQBkACIAOgAgAFsAAANdAAADIgAAByIALAAgAAAPSQBuAHAA
dQB0ACAAMAAAIU0AZQB0AHIAaQBjAHMAXwBEAGkAcwBhAGIAbABlAGQAAHFTAEMAXwBlADIAYwBi
ADUAYgBjADMAMgBmAGQANAA0AGEAZgAwAGIANQA0AGQANQA4AGEANAA5ADYAYgA1AGIAMQA5ADEA
LgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAAAAABUaoEzV2uBAlms7
BaRBuLkABCABAQgDIAABBSABARERBCABAQ4FIAEBEV0DIAAIDxABARUScQEeABUScQEeAAMKAQMQ
EAECFRJxAR4AFRJxAR4ACAoQAQEOFRJxAR4ABQACDg4OBwAEDg4ODg4JIAMBEkEdCBJFAwYSQQMG
HQgEIAEOCAQgAQIIAyAAAgYgAgIOEXUFIAEdCAgEIAASeQUgARJ9HAUAABKAgQYgARwSgIUEIAEB
HAgAARKAiRGAjQUgABKAkQcgAgEOEoCRCLd6XFYZNOCJCImEXc2AgMyRAgYOAgYIAwYSFAMGEhgD
BhJJAwYSVQMGElkDBhIgAyAADgUgAQESDAkgBAEIDhJBEkUFIAEBEkkEAAASVQQAABJZBQABARJZ
BAAAEiADAAABAygADgMoAAgDKAACBAgAElUECAASWQQIABIgCAEACAAAAAAAHgEAAQBUAhZXcmFw
Tm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTQ19lMmNiNWJjMzJmZDQ0YWYwYjU0ZDU4
YTQ5NmI1YjE5MQAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDIwAABJAQAaLk5FVEZyYW1ld29y
ayxWZXJzaW9uPXY0LjUBAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEi5ORVQgRnJhbWV3b3JrIDQu
NQQBAAAAAAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIs
IG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9r
ZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIA
AAAAAAAAAAAAAFBBRFBBRFC0AAAALDUAAAAAAAAAAAAARjUAAAAgAAAAAAAAAAAAAAAAAAAAAAAA
AAAAADg1AAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABI
AAAAWEAAAOwDAAAAAAAAAAAAAOwDNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAA
AAC9BO/+AAABAAAAAQAAAAAAAAABAAAAAAA/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAA
AAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4A
AAAAAAAAsARMAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAAoAwAAAQAwADAAMAAw
ADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4A
eQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAA
AFMAQwBfAGUAMgBjAGIANQBiAGMAMwAyAGYAZAA0ADQAYQBmADAAYgA1ADQAZAA1ADgAYQA0ADkA
NgBiADUAYgAxADkAMQAAADAACAABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgAw
AC4AMAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8AZQAyAGMAYgA1AGIA
YwAzADIAZgBkADQANABhAGYAMABiADUANABkADUAOABhADQAOQA2AGIANQBiADEAOQAxAC4AZABs
AGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgA
dAAgAEAAIAAgADIAMAAyADAAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAA
AAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAEMAXwBlADIA
YwBiADUAYgBjADMAMgBmAGQANAA0AGEAZgAwAGIANQA0AGQANQA4AGEANAA5ADYAYgA1AGIAMQA5
ADEALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBDAF8AZQAyAGMA
YgA1AGIAYwAzADIAZgBkADQANABhAGYAMABiADUANABkADUAOABhADQAOQA2AGIANQBiADEAOQAx
AAAANAAIAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAADgA
CAABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAABYNQAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=]]></arrayElement>
                          </arrayElements>
                        </property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                          name="VSTAProjectName"
                          typeConverter="NOTBROWSABLE">SC_e2cb5bc32fd44af0b54d58a496b5b191</property>
                        <property
                          dataType="System.String"
                          description="Specifies the programming language used by the script."
                          name="ScriptLanguage"
                          typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                        <property
                          dataType="System.String"
                          description="Specifies a comma-separated list of read-only variables."
                          name="ReadOnlyVariables"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                        <property
                          dataType="System.String"
                          description="Specifies a comma-separated list of read/write variables."
                          name="ReadWriteVariables"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg">User::Metrics_Disabled</property>
                        <property
                          dataType="System.String"
                          description="List of breakpoints present on the script."
                          isArray="true"
                          name="BreakpointCollection"
                          typeConverter="NOTBROWSABLE">
                          <arrayElements
                            arrayElementCount="0" />
                        </property>
                        <property
                          dataType="System.String"
                          description="Checksum to match component metedata against compiled codes."
                          name="MetadataChecksum"
                          typeConverter="NOTBROWSABLE">e971a0a76e85cfe88562954c9765d743</property>
                        <property
                          dataType="System.String"
                          description="Checksum to match component metedata against compiled codes."
                          name="MetadataShaChecksum"
                          typeConverter="NOTBROWSABLE">84505ccd245e5d45d334dfa956d0de41f75b37ac</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Foreach migrated account\Metrics\Search metrics\Create disabled list.Inputs[Input 0]"
                          hasSideEffects="true"
                          name="Input 0">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Foreach migrated account\Metrics\Search metrics\Create disabled list.Inputs[Input 0].Columns[name]"
                              cachedDataType="wstr"
                              cachedLength="1000"
                              cachedName="name"
                              lineageId="Package\Foreach migrated account\Metrics\Search metrics\Search metrics.Outputs[JsonSourceOutput].Columns[name]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Foreach migrated account\Metrics\Search metrics\Create disabled list.Outputs[Output 0]"
                          name="Output 0"
                          synchronousInputId="Package\Foreach migrated account\Metrics\Search metrics\Create disabled list.Inputs[Input 0]">
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Foreach migrated account\Metrics\Search metrics\Create enabled list"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;10"
                      description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                      name="Create enabled list"
                      version="10">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Stores the source code of the component"
                          isArray="true"
                          name="SourceCode"
                          state="cdata">
                          <arrayElements
                            arrayElementCount="30">
                            <arrayElement
                              dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String MetricsEnabled
    {
        get
        {
            return (String)(ParentComponent.ReadWriteVariables["Metrics_Enabled"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
        set
        {
            ParentComponent.ReadWriteVariables["Metrics_Enabled"].Value = value;
        }
    }

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using System.Linq;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    private string metrics_enabled { get; set; }
    private int stringLength { get; set; }

    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();

        metrics_enabled = "\"enabled\": [";
        stringLength = metrics_enabled.Length;
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();

        if (metrics_enabled.Length > stringLength)
        {
            Variables.MetricsEnabled = string.Concat(metrics_enabled.Reverse().Skip(2).Reverse()) + "]";
        }
        else
        {
            Variables.MetricsEnabled = metrics_enabled + "]";
        }
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer row)
    {
        metrics_enabled += "\"" + row.name + "\", ";
    }
}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String name
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
    }
    public bool name_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[SC_8c3435225fdf4d31825732a59d5777d5.csproj]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{6a6dadd6-faf0-41c8-af1d-3ea2180d2d93}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_8c3435225fdf4d31825732a59d5777d5</RootNamespace>
    <AssemblyName>SC_8c3435225fdf4d31825732a59d5777d5</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_8c3435225fdf4d31825732a59d5777d5" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_8c3435225fdf4d31825732a59d5777d5.Properties.Settings.get_Default():SC_8c3435225fdf4d31825732a59d5777d5.Properties.Sett" +
    "ings")]

namespace SC_8c3435225fdf4d31825732a59d5777d5.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Project]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>SC_8c3435225fdf4d31825732a59d5777d5</msb:CodeName>
		<msb:DisplayName>SC_8c3435225fdf4d31825732a59d5777d5</msb:DisplayName>
		<msb:ProjectId>{23B3CB60-BF8A-4E27-97CF-3DB709C6AB38}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_8c3435225fdf4d31825732a59d5777d5.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_8c3435225fdf4d31825732a59d5777d5")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_8c3435225fdf4d31825732a59d5777d5")]
[assembly: AssemblyCopyright("Copyright @  2020")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_8c3435225fdf4d31825732a59d5777d5.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_8c3435225fdf4d31825732a59d5777d5.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_8c3435225fdf4d31825732a59d5777d5.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_8c3435225fdf4d31825732a59d5777d5.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_8c3435225fdf4d31825732a59d5777d5.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                          </arrayElements>
                        </property>
                        <property
                          dataType="System.String"
                          description="Stores the binary representation of the component"
                          isArray="true"
                          name="BinaryCode"
                          state="cdata">
                          <arrayElements
                            arrayElementCount="2">
                            <arrayElement
                              dataType="System.String"><![CDATA[SC_8c3435225fdf4d31825732a59d5777d5.dll]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAGDVV14AAAAAAAAAAOAAIiALATAAABYAAAAIAAAAAAAASjUA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAPg0AABPAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAUBUAAAAgAAAAFgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAAYAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAs
NQAAAAAAAEgAAAACAAUAiCIAALgRAAABAAAAAAAAAEA0AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CewEAAAQqIgIDfQEAAAQqHgJ7AgAABCoiAgN9AgAABCqO
AigQAAAKAnIBAABwKAIAAAYCAigBAAAGbxEAAAooBAAABioAABMwAwBmAAAAAAAAAAIoEgAACgIo
AQAABm8RAAAKAigDAAAGMTECewQAAAQCKAEAAAYoAQAAKxgoAgAAKygBAAArKAMAACtyGwAAcCgW
AAAKbxUAAAYqAnsEAAAEAigBAAAGchsAAHAoFgAACm8VAAAGKooCAigBAAAGch8AAHADbwoAAAZy
IwAAcCgXAAAKKAIAAAYqHgIoDgAABioqAgMEBSgYAAAKKlICexkAAAoCexoAAAoWlG8bAAAKKiIC
FigcAAAKKh4CKB0AAAoqHgIoHgAACip+AigfAAAKAgJzEgAABn0DAAAEAgJzEwAABn0EAAAEKpIE
cisAAHAabyAAAAosFQIFAgMoIQAACg4EcwkAAAZvEAAABipKKwcCA28RAAAGA28MAAAGLfEqBio6
AigiAAAKAgN9BQAABCo6AigiAAAKAgN9BgAABCqWAnsGAAAEbyMAAApyOwAAcG8kAAAKKCUAAApv
JgAACnQaAAABKnICewYAAARvIwAACnI7AABwbyQAAAoDbycAAAoqHgIoIgAACiqufgcAAAQtHnJb
AABw0AcAAAIoKAAACm8pAAAKcyoAAAqABwAABH4HAAAEKhp+CAAABCoeAoAIAAAEKhp+CQAABCoe
AigrAAAKKi5zGwAABoAJAAAEKgBCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAACA
BgAAI34AAOwGAADoBwAAI1N0cmluZ3MAAAAA1A4AANAAAAAjVVMApA8AABAAAAAjR1VJRAAAALQP
AAAEAgAAI0Jsb2IAAAAAAAAAAgAAAVcVoAEJCQAAAPoBMwAWAAABAAAAJAAAAAgAAAAJAAAAHAAA
ABAAAAArAAAAFgAAAAUAAAAIAAAADAAAAAEAAAAGAAAAAQAAAAMAAAAAADsEAQAAAAAABgD7AsQF
BgCPA8QFBgBHArEFDwA4BgAABgB0AsQEBgDeAsQEBgC/AsQEBgB2A8QEBgAbA8QEBgA0A8QEBgCL
AsQEBgCmAtQDCgBPA4ABBgAPAsQFCgBbBYABDgBMBYABCgDzBIABCgASB4ABBgDVBnwEBgAqArEF
BgBsBeQFBgDnBK8EEgD6ASUEEgBbAiUEEgDaAZoEBgDxA3wEFgA+ATMFBgA6AIYABgDWBHwEGgAR
AHwFGgABAHwFSwCIBwAAGgAiAHwFBgChAXwEBgBJAXwEBgDfB8QEAAAAAGwAAAAAAAEAAQABABAA
jwQAABAAAQABAAEAEAA/BQAAPQADAAkAAQAQAPQGAABJAAMADgABABAAwgYAAE0ABQASAAEAEACD
BgAATQAGABMAAAAQAOsFRwZNAAcAFgAAARAAsgZHBmUACQAaAAEA7wDQAAEAEAHTAAYAwgbWAAYA
gwbaAAEAAgfeAAEAAgfeABEAgwTiABEAygHmABEALgHqAFAgAAAAAIEIxwDuAAEAWCAAAAAAgQjb
ABAAAQBhIAAAAACBCAMEGwACAGkgAAAAAIEIFAQBAAIAciAAAAAAxgCtAwYAAwCYIAAAAADGALgD
BgADAAohAAAAAMYAuAfyAAMALSEAAAAAhhikBQYABAA1IQAAAACGGKQFXQAEAEAhAAAAAIYIdwHu
AAcAVSEAAAAAhghjBHkABwBeIQAAAACGAM8HeQAHAGYhAAAAAIYA3AZ5AAcAbiEAAAAAhhikBQYA
BwCOIQAAAADGAGcH+AAHALMhAAAAAMYBYAfyAAsAxiEAAAAAxgG4B/IADADIIQAAAACGGKQFAgEN
ANchAAAAAIYYpAUCAQ4A5iEAAAAAhgihAO4ADwAMIgAAAACGCLQAEAAPACkiAAAAAIMYpAUGABAA
MSIAAAAAkwhoBQgBEABdIgAAAACTCLIBDQEQAGQiAAAAAJMIvgESARAAbCIAAAAAlgjoBhgBEQBz
IgAAAACGGKQFBgARAHsiAAAAAJEYqgUdAREAAAABAM4DAAABAM4DAAABANcHAAABAGEFAAACAI0G
AAADAAEFAAABAHUAAAACAG0BAAADAGEFAAAEAAEFAAABAGEFAAABANMHAAABABgHAAABABgHAAAB
AM4DAAABAM4DCQCkBQEAEQCkBQYAGQCkBQoAKQCkBRAAMQCkBRAAOQCkBRAAQQCkBRAASQCkBRAA
UQCkBRAAWQCkBRAAYQCkBRAAaQCkBQYAcQCkBQYAoQCkBQYAwQCkBRUAkQCtAwYA0QD4AxsAkQC4
AwYA2QDyAR8A2QAuBTMA0QDOBkQA0QDOBk8A0QDOBlUAeQCkBV0AeQBhBWcAeQCNBmsAgQDuA28A
eQBsBHQAeQDPB3kAeQDcBnkAkQCkBQYA0QC7Bn0AkQChBoQAmQCkBQYAkQB2BooA8QBzBI8AkQCj
B5UA+QB0B5sA+QDEA6IAEQFbAacAEQHbB7AAqQCkBbYAyQCkBQYAIABrAP0BIQBrAP0BLgALADwB
LgATAEUBLgAbAGQBLgAjAG0BLgArAJYBLgAzAJYBLgA7AJYBLgBDAG0BLgBLAJwBLgBTAJYBLgBb
ALMBQABrAP0BQQBrAP0BQwBjAP0BYABrAP0BgABrAP0ByQB7AGQB4wBzAP0B6QB7AGQBIQFrAP0B
AgABAAMAAwAGAAUABwAGAAgACAAAAN8AIQEAABgEJQEAAHsBIQEAAGcEKQEAALgAIQEAAGwFLQEA
ANIBMgEAAOwGNwECAAEAAwABAAIAAwACAAMABQABAAQABQACAAoABwACAAsACQACABQACwABABUA
CwACABcADQACABgADwABABkADwACABoAEQAEgAAAAQAAAAAAAAAAAAAAAABIAAAABAAAAAAAAAAA
AAAAvgB9AAAAAAANAAAAAAAAAAAAAADHACIHAAAAAA0AAAAAAAAAAAAAAMcAPwcAAAAABAAAAAAA
AAAAAAAAvgB8BAAAAAAEAAAAAAAAAAAAAAC+AKYBAAAAAA0AAAAAAAAAAAAAAMcACwUAAAAAAAAA
AAEAAAD1BQAAJwAvACkALwArAC8AAAAAAABJRFRTVmFyaWFibGUxMDAASURUU1ZhcmlhYmxlczEw
MABJRFRTRXZhbHVhdG9yQ29udGV4dDEwMABJRW51bWVyYWJsZWAxAFNDXzhjMzQzNTIyNWZkZjRk
MzE4MjU3MzJhNTlkNTc3N2Q1ADxNb2R1bGU+AElucHV0SUQAbXNjb3JsaWIAU3lzdGVtLkNvbGxl
Y3Rpb25zLkdlbmVyaWMAZ2V0X01ldHJpY3NFbmFibGVkAHNldF9NZXRyaWNzRW5hYmxlZABnZXRf
bWV0cmljc19lbmFibGVkAHNldF9tZXRyaWNzX2VuYWJsZWQAPG1ldHJpY3NfZW5hYmxlZD5rX19C
YWNraW5nRmllbGQAPHN0cmluZ0xlbmd0aD5rX19CYWNraW5nRmllbGQAZGVmYXVsdEluc3RhbmNl
AEVudW1lcmFibGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUASW5wdXROYW1l
AGdldF9uYW1lAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lAFR5cGUAU3lzdGVtLkNv
cmUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJlAEFwcGxpY2F0aW9uU2V0
dGluZ3NCYXNlAFJldmVyc2UARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRB
dHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRl
AEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5
VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZp
Z3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlv
blJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNv
cHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0Q29tcG9uZW50RW50cnlQb2ludEF0dHJpYnV0ZQBB
c3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAUHJl
RXhlY3V0ZQBQb3N0RXhlY3V0ZQBzZXRfVmFsdWUAdmFsdWUAU3lzdGVtLlJ1bnRpbWUuVmVyc2lv
bmluZwBHZXRTdHJpbmcAZ2V0X0xlbmd0aABnZXRfc3RyaW5nTGVuZ3RoAHNldF9zdHJpbmdMZW5n
dGgAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFNDXzhjMzQzNTIyNWZkZjRkMzE4MjU3MzJhNTlkNTc3
N2Q1LmRsbABnZXRfbmFtZV9Jc051bGwAZ2V0X0l0ZW0AU3lzdGVtAHJlc291cmNlTWFuAFNjcmlw
dE1haW4AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lzdGVtLlJl
ZmxlY3Rpb24AU3RyaW5nQ29tcGFyaXNvbgBDdWx0dXJlSW5mbwBPdXRwdXROYW1lTWFwAE91dHB1
dE1hcABNaWNyb3NvZnQuU3FsU2VydmVyLkRUU1J1bnRpbWVXcmFwAFNraXAAU3lzdGVtLkxpbnEA
SW5wdXQwQnVmZmVyAFBpcGVsaW5lQnVmZmVyAFNjcmlwdEJ1ZmZlcgBnZXRfUmVzb3VyY2VNYW5h
Z2VyAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUuV3JhcHBlcgAuY3RvcgAuY2N0b3IA
U3lzdGVtLkRpYWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVt
LlJlc291cmNlcwBTQ184YzM0MzUyMjVmZGY0ZDMxODI1NzMyYTU5ZDU3NzdkNS5Qcm9wZXJ0aWVz
LlJlc291cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAU0NfOGMzNDM1MjI1ZmRmNGQzMTgy
NTczMmE1OWQ1Nzc3ZDUuUHJvcGVydGllcwBnZXRfUmVhZFdyaXRlVmFyaWFibGVzAEJ1ZmZlckNv
bHVtbkluZGV4ZXMAR2V0Q29sdW1uSW5kZXhlcwBTZXR0aW5ncwBFcXVhbHMAQ29ubmVjdGlvbnMA
Q29uY2F0AE9iamVjdABFbmRPZlJvd3NldABnZXRfRGVmYXVsdABVc2VyQ29tcG9uZW50AFBhcmVu
dENvbXBvbmVudABTY3JpcHRDb21wb25lbnQATWljcm9zb2Z0LlNxbFNlcnZlci5UeFNjcmlwdABN
aWNyb3NvZnQuU3FsU2VydmVyLlBpcGVsaW5lSG9zdABJbnB1dDBfUHJvY2Vzc0lucHV0AEdldFZh
bHVlV2l0aENvbnRleHQAU2NyaXB0Q29tcG9uZW50RXZhbENvbnRleHQAZ2V0X0V2YWx1YXRvckNv
bnRleHQASW5wdXQwX1Byb2Nlc3NJbnB1dFJvdwBOZXh0Um93AHJvdwBnZXRfQXNzZW1ibHkAABki
AGUAbgBhAGIAbABlAGQAIgA6ACAAWwAAA10AAAMiAAAHIgAsACAAAA9JAG4AcAB1AHQAIAAwAAAf
TQBlAHQAcgBpAGMAcwBfAEUAbgBhAGIAbABlAGQAAHFTAEMAXwA4AGMAMwA0ADMANQAyADIANQBm
AGQAZgA0AGQAMwAxADgAMgA1ADcAMwAyAGEANQA5AGQANQA3ADcANwBkADUALgBQAHIAbwBwAGUA
cgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAAAAALdeXeRwQhFIhw6tmRjobiUABCABAQgD
IAABBSABARERBCABAQ4FIAEBEV0DIAAIDxABARUScQEeABUScQEeAAMKAQMQEAECFRJxAR4AFRJx
AR4ACAoQAQEOFRJxAR4ABQACDg4OBwAEDg4ODg4JIAMBEkEdCBJFAwYSQQMGHQgEIAEOCAQgAQII
AyAAAgYgAgIOEXUFIAEdCAgEIAASeQUgARJ9HAUAABKAgQYgARwSgIUEIAEBHAgAARKAiRGAjQUg
ABKAkQcgAgEOEoCRCLd6XFYZNOCJCImEXc2AgMyRAgYOAgYIAwYSFAMGEhgDBhJJAwYSVQMGElkD
BhIgAyAADgUgAQESDAkgBAEIDhJBEkUFIAEBEkkEAAASVQQAABJZBQABARJZBAAAEiADAAABAygA
DgMoAAgDKAACBAgAElUECAASWQQIABIgCAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9u
VGhyb3dzAQgBAAIAAAAAACgBACNTQ184YzM0MzUyMjVmZGY0ZDMxODI1NzMyYTU5ZDU3NzdkNQAA
BQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDIwAABJAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0
LjUBAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEi5ORVQgRnJhbWV3b3JrIDQuNQQBAAAAAAC0AAAA
zsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBW
ZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYx
OTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBB
RFBBRFC0AAAAIDUAAAAAAAAAAAAAOjUAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAACw1AAAAAAAA
AAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABI
AAAAWEAAAOwDAAAAAAAAAAAAAOwDNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAA
AAC9BO/+AAABAAAAAQAAAAAAAAABAAAAAAA/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAA
AAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4A
AAAAAAAAsARMAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAAoAwAAAQAwADAAMAAw
ADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4A
eQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAA
AFMAQwBfADgAYwAzADQAMwA1ADIAMgA1AGYAZABmADQAZAAzADEAOAAyADUANwAzADIAYQA1ADkA
ZAA1ADcANwA3AGQANQAAADAACAABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgAw
AC4AMAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8AOABjADMANAAzADUA
MgAyADUAZgBkAGYANABkADMAMQA4ADIANQA3ADMAMgBhADUAOQBkADUANwA3ADcAZAA1AC4AZABs
AGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgA
dAAgAEAAIAAgADIAMAAyADAAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAA
AAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAEMAXwA4AGMA
MwA0ADMANQAyADIANQBmAGQAZgA0AGQAMwAxADgAMgA1ADcAMwAyAGEANQA5AGQANQA3ADcANwBk
ADUALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBDAF8AOABjADMA
NAAzADUAMgAyADUAZgBkAGYANABkADMAMQA4ADIANQA3ADMAMgBhADUAOQBkADUANwA3ADcAZAA1
AAAANAAIAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAADgA
CAABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAABMNQAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=]]></arrayElement>
                          </arrayElements>
                        </property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                          name="VSTAProjectName"
                          typeConverter="NOTBROWSABLE">SC_8c3435225fdf4d31825732a59d5777d5</property>
                        <property
                          dataType="System.String"
                          description="Specifies the programming language used by the script."
                          name="ScriptLanguage"
                          typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                        <property
                          dataType="System.String"
                          description="Specifies a comma-separated list of read-only variables."
                          name="ReadOnlyVariables"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                        <property
                          dataType="System.String"
                          description="Specifies a comma-separated list of read/write variables."
                          name="ReadWriteVariables"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg">User::Metrics_Enabled</property>
                        <property
                          dataType="System.String"
                          description="List of breakpoints present on the script."
                          isArray="true"
                          name="BreakpointCollection"
                          typeConverter="NOTBROWSABLE">
                          <arrayElements
                            arrayElementCount="0" />
                        </property>
                        <property
                          dataType="System.String"
                          description="Checksum to match component metedata against compiled codes."
                          name="MetadataChecksum"
                          typeConverter="NOTBROWSABLE">cdcbb8d280db5c9ce91b56bfd960e883</property>
                        <property
                          dataType="System.String"
                          description="Checksum to match component metedata against compiled codes."
                          name="MetadataShaChecksum"
                          typeConverter="NOTBROWSABLE">1e568fada9fc9278dfa00cd9af1338096d9a896b</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Foreach migrated account\Metrics\Search metrics\Create enabled list.Inputs[Input 0]"
                          hasSideEffects="true"
                          name="Input 0">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Foreach migrated account\Metrics\Search metrics\Create enabled list.Inputs[Input 0].Columns[name]"
                              cachedDataType="wstr"
                              cachedLength="1000"
                              cachedName="name"
                              lineageId="Package\Foreach migrated account\Metrics\Search metrics\Search metrics.Outputs[JsonSourceOutput].Columns[name]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Foreach migrated account\Metrics\Search metrics\Create enabled list.Outputs[Output 0]"
                          name="Output 0"
                          synchronousInputId="Package\Foreach migrated account\Metrics\Search metrics\Create enabled list.Inputs[Input 0]">
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Foreach migrated account\Metrics\Search metrics\Create hidden list"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;10"
                      description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                      name="Create hidden list"
                      version="10">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Stores the source code of the component"
                          isArray="true"
                          name="SourceCode"
                          state="cdata">
                          <arrayElements
                            arrayElementCount="30">
                            <arrayElement
                              dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String MetricsHidden
    {
        get
        {
            return (String)(ParentComponent.ReadWriteVariables["Metrics_Hidden"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
        set
        {
            ParentComponent.ReadWriteVariables["Metrics_Hidden"].Value = value;
        }
    }

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using System.Linq;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    private string metrics_hidden { get; set; }
    private int stringLength { get; set; }

    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();

        metrics_hidden = "\"hidden\": [";
        stringLength = metrics_hidden.Length;
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();

        if (metrics_hidden.Length > stringLength)
        {
            Variables.MetricsHidden = string.Concat(metrics_hidden.Reverse().Skip(2).Reverse()) + "]";
        }
        else
        {
            Variables.MetricsHidden = metrics_hidden + "]";
        }
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer row)
    {
        metrics_hidden += "\"" + row.name + "\", ";
    }
}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String name
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
    }
    public bool name_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_62be7482fd7e48f19fa307e37f64454c.Properties.Settings.get_Default():SC_62be7482fd7e48f19fa307e37f64454c.Properties.Sett" +
    "ings")]

namespace SC_62be7482fd7e48f19fa307e37f64454c.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Project]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>SC_62be7482fd7e48f19fa307e37f64454c</msb:CodeName>
		<msb:DisplayName>SC_62be7482fd7e48f19fa307e37f64454c</msb:DisplayName>
		<msb:ProjectId>{6644C87D-52A8-423A-B84A-51D5ACA421B7}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_62be7482fd7e48f19fa307e37f64454c.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_62be7482fd7e48f19fa307e37f64454c")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_62be7482fd7e48f19fa307e37f64454c")]
[assembly: AssemblyCopyright("Copyright @  2020")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[SC_62be7482fd7e48f19fa307e37f64454c.csproj]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{0a9aba79-a269-4504-a043-09c87c162a63}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_62be7482fd7e48f19fa307e37f64454c</RootNamespace>
    <AssemblyName>SC_62be7482fd7e48f19fa307e37f64454c</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_62be7482fd7e48f19fa307e37f64454c" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_62be7482fd7e48f19fa307e37f64454c.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_62be7482fd7e48f19fa307e37f64454c.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_62be7482fd7e48f19fa307e37f64454c.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_62be7482fd7e48f19fa307e37f64454c.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_62be7482fd7e48f19fa307e37f64454c.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                          </arrayElements>
                        </property>
                        <property
                          dataType="System.String"
                          description="Stores the binary representation of the component"
                          isArray="true"
                          name="BinaryCode"
                          state="cdata">
                          <arrayElements
                            arrayElementCount="2">
                            <arrayElement
                              dataType="System.String"><![CDATA[SC_62be7482fd7e48f19fa307e37f64454c.dll]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAPnVV14AAAAAAAAAAOAAIiALATAAABYAAAAIAAAAAAAAQjUA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAPA0AABPAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAASBUAAAAgAAAAFgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAAYAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAk
NQAAAAAAAEgAAAACAAUAiCIAALARAAABAAAAAAAAADg0AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CewEAAAQqIgIDfQEAAAQqHgJ7AgAABCoiAgN9AgAABCqO
AigQAAAKAnIBAABwKAIAAAYCAigBAAAGbxEAAAooBAAABioAABMwAwBmAAAAAAAAAAIoEgAACgIo
AQAABm8RAAAKAigDAAAGMTECewQAAAQCKAEAAAYoAQAAKxgoAgAAKygBAAArKAMAACtyGQAAcCgW
AAAKbxUAAAYqAnsEAAAEAigBAAAGchkAAHAoFgAACm8VAAAGKooCAigBAAAGch0AAHADbwoAAAZy
IQAAcCgXAAAKKAIAAAYqHgIoDgAABioqAgMEBSgYAAAKKlICexkAAAoCexoAAAoWlG8bAAAKKiIC
FigcAAAKKh4CKB0AAAoqHgIoHgAACip+AigfAAAKAgJzEgAABn0DAAAEAgJzEwAABn0EAAAEKpIE
cikAAHAabyAAAAosFQIFAgMoIQAACg4EcwkAAAZvEAAABipKKwcCA28RAAAGA28MAAAGLfEqBio6
AigiAAAKAgN9BQAABCo6AigiAAAKAgN9BgAABCqWAnsGAAAEbyMAAApyOQAAcG8kAAAKKCUAAApv
JgAACnQaAAABKnICewYAAARvIwAACnI5AABwbyQAAAoDbycAAAoqHgIoIgAACiqufgcAAAQtHnJX
AABw0AcAAAIoKAAACm8pAAAKcyoAAAqABwAABH4HAAAEKhp+CAAABCoeAoAIAAAEKhp+CQAABCoe
AigrAAAKKi5zGwAABoAJAAAEKgBCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAACA
BgAAI34AAOwGAADkBwAAI1N0cmluZ3MAAAAA0A4AAMwAAAAjVVMAnA8AABAAAAAjR1VJRAAAAKwP
AAAEAgAAI0Jsb2IAAAAAAAAAAgAAAVcVoAEJCQAAAPoBMwAWAAABAAAAJAAAAAgAAAAJAAAAHAAA
ABAAAAArAAAAFgAAAAUAAAAIAAAADAAAAAEAAAAGAAAAAQAAAAMAAAAAAOwDAQAAAAAABgCsAr8F
BgBAA78FBgD4AawFDwAzBgAABgAlAr8EBgCPAr8EBgBwAr8EBgAnA78EBgDMAr8EBgDlAr8EBgA8
Ar8EBgBXAoUDCgAAAzEBBgDAAb8FCgBWBTEBDgBHBTEBCgDuBDEBCgANBzEBBgDQBi0EBgDbAawF
BgBnBd8FBgDiBKoEEgCrAdYDEgAMAtYDEgCLAZUEBgCiAy0EFgDvAC4FBgA6AIYABgDRBC0EGgAR
AHcFGgABAHcFSwCDBwAAGgAiAHcFBgBSAS0EBgD6AC0EBgDaB78EAAAAAEgAAAAAAAEAAQABABAA
igQAABAAAQABAAEAEAA6BQAAPQADAAkAAQAQAO8GAABJAAMADgABABAAvQYAAE0ABQASAAEAEAB+
BgAATQAGABMAAAAQAOYFQgZNAAcAFgAAARAArQZCBmUACQAaAAEAvwDQAAEAoQDTAAYAvQbWAAYA
fgbaAAEA/QbeAAEA/QbeABEANATiABEAewHmABEA3wDqAFAgAAAAAIEIZATuAAEAWCAAAAAAgQh3
BBAAAQBhIAAAAACBCLQDGwACAGkgAAAAAIEIxQMBAAIAciAAAAAAxgBeAwYAAwCYIAAAAADGAGkD
BgADAAohAAAAAMYAswfyAAMALSEAAAAAhhifBQYABAA1IQAAAACGGJ8FXQAEAEAhAAAAAIYIKAHu
AAcAVSEAAAAAhggUBHkABwBeIQAAAACGAMoHeQAHAGYhAAAAAIYA1wZ5AAcAbiEAAAAAhhifBQYA
BwCOIQAAAADGAGIH+AAHALMhAAAAAMYBWwfyAAsAxiEAAAAAxgGzB/IADADIIQAAAACGGJ8FAgEN
ANchAAAAAIYYnwUCAQ4A5iEAAAAAhghABO4ADwAMIgAAAACGCFIEEAAPACkiAAAAAIMYnwUGABAA
MSIAAAAAkwhjBQgBEABdIgAAAACTCGMBDQEQAGQiAAAAAJMIbwESARAAbCIAAAAAlgjjBhgBEQBz
IgAAAACGGJ8FBgARAHsiAAAAAJEYpQUdAREAAAABAH8DAAABAH8DAAABANIHAAABAFwFAAACAIgG
AAADAPwEAAABAFEAAAACAB4BAAADAFwFAAAEAPwEAAABAFwFAAABAM4HAAABABMHAAABABMHAAAB
AH8DAAABAH8DCQCfBQEAEQCfBQYAGQCfBQoAKQCfBRAAMQCfBRAAOQCfBRAAQQCfBRAASQCfBRAA
UQCfBRAAWQCfBRAAYQCfBRAAaQCfBQYAcQCfBQYAoQCfBQYAwQCfBRUAkQBeAwYA0QCpAxsAkQBp
AwYA2QCjAR8A2QApBTMA0QDJBkQA0QDJBk8A0QDJBlUAeQCfBV0AeQBcBWcAeQCIBmsAgQCfA28A
eQAdBHQAeQDKB3kAeQDXBnkAkQCfBQYA0QC2Bn0AkQCcBoQAmQCfBQYAkQBxBooA8QAkBI8AkQCe
B5UA+QBvB5sA+QB1A6IAEQEMAacAEQHWB7AAqQCfBbYAyQCfBQYAIABrAP0BIQBrAP0BLgALADwB
LgATAEUBLgAbAGQBLgAjAG0BLgArAJYBLgAzAJYBLgA7AJYBLgBDAG0BLgBLAJwBLgBTAJYBLgBb
ALMBQABrAP0BQQBrAP0BQwBjAP0BYABrAP0BgABrAP0ByQB7AGQB4wBzAP0B6QB7AGQBIQFrAP0B
AgABAAMAAwAGAAUABwAGAAgACAAAAHsEIQEAAMkDJQEAACwBIQEAABgEKQEAAFYEIQEAAGcFLQEA
AIMBMgEAAOcGNwECAAEAAwABAAIAAwACAAMABQABAAQABQACAAoABwACAAsACQACABQACwABABUA
CwACABcADQACABgADwABABkADwACABoAEQAEgAAAAQAAAAAAAAAAAAAAAABiAAAABAAAAAAAAAAA
AAAAvgBZAAAAAAANAAAAAAAAAAAAAADHAB0HAAAAAA0AAAAAAAAAAAAAAMcAOgcAAAAABAAAAAAA
AAAAAAAAvgAtBAAAAAAEAAAAAAAAAAAAAAC+AFcBAAAAAA0AAAAAAAAAAAAAAMcABgUAAAAAAAAA
AAEAAADwBQAAJwAvACkALwArAC8AAAAAAABJRFRTVmFyaWFibGUxMDAASURUU1ZhcmlhYmxlczEw
MABJRFRTRXZhbHVhdG9yQ29udGV4dDEwMABJRW51bWVyYWJsZWAxADxNb2R1bGU+AElucHV0SUQA
bXNjb3JsaWIAU0NfNjJiZTc0ODJmZDdlNDhmMTlmYTMwN2UzN2Y2NDQ1NGMAU3lzdGVtLkNvbGxl
Y3Rpb25zLkdlbmVyaWMAPHN0cmluZ0xlbmd0aD5rX19CYWNraW5nRmllbGQAPG1ldHJpY3NfaGlk
ZGVuPmtfX0JhY2tpbmdGaWVsZABkZWZhdWx0SW5zdGFuY2UARW51bWVyYWJsZQBSdW50aW1lVHlw
ZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBJbnB1dE5hbWUAZ2V0X25hbWUATWljcm9zb2Z0LlNx
bFNlcnZlci5EdHMuUGlwZWxpbmUAVHlwZQBTeXN0ZW0uQ29yZQBnZXRfQ3VsdHVyZQBzZXRfQ3Vs
dHVyZQByZXNvdXJjZUN1bHR1cmUAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UAUmV2ZXJzZQBFZGl0
b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVz
ZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmli
dXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFy
Z2V0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3Nl
bWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUA
QXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNT
Y3JpcHRDb21wb25lbnRFbnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0
ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBQcmVFeGVjdXRlAFBvc3RFeGVjdXRlAHNl
dF9WYWx1ZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAEdldFN0cmluZwBnZXRfTGVu
Z3RoAGdldF9zdHJpbmdMZW5ndGgAc2V0X3N0cmluZ0xlbmd0aABTeXN0ZW0uQ29tcG9uZW50TW9k
ZWwAU0NfNjJiZTc0ODJmZDdlNDhmMTlmYTMwN2UzN2Y2NDQ1NGMuZGxsAGdldF9uYW1lX0lzTnVs
bABnZXRfSXRlbQBTeXN0ZW0AcmVzb3VyY2VNYW4AZ2V0X01ldHJpY3NIaWRkZW4Ac2V0X01ldHJp
Y3NIaWRkZW4AZ2V0X21ldHJpY3NfaGlkZGVuAHNldF9tZXRyaWNzX2hpZGRlbgBTY3JpcHRNYWlu
AFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5SZWZsZWN0
aW9uAFN0cmluZ0NvbXBhcmlzb24AQ3VsdHVyZUluZm8AT3V0cHV0TmFtZU1hcABPdXRwdXRNYXAA
TWljcm9zb2Z0LlNxbFNlcnZlci5EVFNSdW50aW1lV3JhcABTa2lwAFN5c3RlbS5MaW5xAElucHV0
MEJ1ZmZlcgBQaXBlbGluZUJ1ZmZlcgBTY3JpcHRCdWZmZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgBN
aWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lLldyYXBwZXIALmN0b3IALmNjdG9yAFN5c3Rl
bS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNv
dXJjZXMAU0NfNjJiZTc0ODJmZDdlNDhmMTlmYTMwN2UzN2Y2NDQ1NGMuUHJvcGVydGllcy5SZXNv
dXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAFNDXzYyYmU3NDgyZmQ3ZTQ4ZjE5ZmEzMDdl
MzdmNjQ0NTRjLlByb3BlcnRpZXMAZ2V0X1JlYWRXcml0ZVZhcmlhYmxlcwBCdWZmZXJDb2x1bW5J
bmRleGVzAEdldENvbHVtbkluZGV4ZXMAU2V0dGluZ3MARXF1YWxzAENvbm5lY3Rpb25zAENvbmNh
dABPYmplY3QARW5kT2ZSb3dzZXQAZ2V0X0RlZmF1bHQAVXNlckNvbXBvbmVudABQYXJlbnRDb21w
b25lbnQAU2NyaXB0Q29tcG9uZW50AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuVHhTY3JpcHQATWljcm9z
b2Z0LlNxbFNlcnZlci5QaXBlbGluZUhvc3QASW5wdXQwX1Byb2Nlc3NJbnB1dABHZXRWYWx1ZVdp
dGhDb250ZXh0AFNjcmlwdENvbXBvbmVudEV2YWxDb250ZXh0AGdldF9FdmFsdWF0b3JDb250ZXh0
AElucHV0MF9Qcm9jZXNzSW5wdXRSb3cATmV4dFJvdwByb3cAZ2V0X0Fzc2VtYmx5AAAAFyIAaABp
AGQAZABlAG4AIgA6ACAAWwAAA10AAAMiAAAHIgAsACAAAA9JAG4AcAB1AHQAIAAwAAAdTQBlAHQA
cgBpAGMAcwBfAEgAaQBkAGQAZQBuAABxUwBDAF8ANgAyAGIAZQA3ADQAOAAyAGYAZAA3AGUANAA4
AGYAMQA5AGYAYQAzADAANwBlADMANwBmADYANAA0ADUANABjAC4AUAByAG8AcABlAHIAdABpAGUA
cwAuAFIAZQBzAG8AdQByAGMAZQBzAAAAAADjZHfV7I4VS4kd6YdDKEZlAAQgAQEIAyAAAQUgAQER
EQQgAQEOBSABARFdAyAACA8QAQEVEnEBHgAVEnEBHgADCgEDEBABAhUScQEeABUScQEeAAgKEAEB
DhUScQEeAAUAAg4ODgcABA4ODg4OCSADARJBHQgSRQMGEkEDBh0IBCABDggEIAECCAMgAAIGIAIC
DhF1BSABHQgIBCAAEnkFIAESfRwFAAASgIEGIAEcEoCFBCABARwIAAESgIkRgI0FIAASgJEHIAIB
DhKAkQi3elxWGTTgiQiJhF3NgIDMkQIGDgIGCAMGEhQDBhIYAwYSSQMGElUDBhJZAwYSIAMgAA4F
IAEBEgwJIAQBCA4SQRJFBSABARJJBAAAElUEAAASWQUAAQESWQQAABIgAwAAAQMoAA4DKAAIAygA
AgQIABJVBAgAElkECAASIAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEI
AQACAAAAAAAoAQAjU0NfNjJiZTc0ODJmZDdlNDhmMTlmYTMwN2UzN2Y2NDQ1NGMAAAUBAAAAABYB
ABFDb3B5cmlnaHQgQCAgMjAyMAAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC41AQBUDhRG
cmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjUEAQAAAAAAtAAAAM7K774BAAAA
kQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00
LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkj
U3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAA
ABg1AAAAAAAAAAAAADI1AAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAkNQAAAAAAAAAAAAAAAF9D
b3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABI
AAAAWEAAAOwDAAAAAAAAAAAAAOwDNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAA
AAC9BO/+AAABAAAAAQAAAAAAAAABAAAAAAA/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAA
AAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4A
AAAAAAAAsARMAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAAoAwAAAQAwADAAMAAw
ADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4A
eQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAA
AFMAQwBfADYAMgBiAGUANwA0ADgAMgBmAGQANwBlADQAOABmADEAOQBmAGEAMwAwADcAZQAzADcA
ZgA2ADQANAA1ADQAYwAAADAACAABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgAw
AC4AMAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8ANgAyAGIAZQA3ADQA
OAAyAGYAZAA3AGUANAA4AGYAMQA5AGYAYQAzADAANwBlADMANwBmADYANAA0ADUANABjAC4AZABs
AGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgA
dAAgAEAAIAAgADIAMAAyADAAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAA
AAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAEMAXwA2ADIA
YgBlADcANAA4ADIAZgBkADcAZQA0ADgAZgAxADkAZgBhADMAMAA3AGUAMwA3AGYANgA0ADQANQA0
AGMALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBDAF8ANgAyAGIA
ZQA3ADQAOAAyAGYAZAA3AGUANAA4AGYAMQA5AGYAYQAzADAANwBlADMANwBmADYANAA0ADUANABj
AAAANAAIAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAADgA
CAABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAABENQAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=]]></arrayElement>
                          </arrayElements>
                        </property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                          name="VSTAProjectName"
                          typeConverter="NOTBROWSABLE">SC_62be7482fd7e48f19fa307e37f64454c</property>
                        <property
                          dataType="System.String"
                          description="Specifies the programming language used by the script."
                          name="ScriptLanguage"
                          typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                        <property
                          dataType="System.String"
                          description="Specifies a comma-separated list of read-only variables."
                          name="ReadOnlyVariables"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                        <property
                          dataType="System.String"
                          description="Specifies a comma-separated list of read/write variables."
                          name="ReadWriteVariables"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg">User::Metrics_Hidden</property>
                        <property
                          dataType="System.String"
                          description="List of breakpoints present on the script."
                          isArray="true"
                          name="BreakpointCollection"
                          typeConverter="NOTBROWSABLE">
                          <arrayElements
                            arrayElementCount="0" />
                        </property>
                        <property
                          dataType="System.String"
                          description="Checksum to match component metedata against compiled codes."
                          name="MetadataChecksum"
                          typeConverter="NOTBROWSABLE">c5253c8e4431497b09d6bfe7b45c2d96</property>
                        <property
                          dataType="System.String"
                          description="Checksum to match component metedata against compiled codes."
                          name="MetadataShaChecksum"
                          typeConverter="NOTBROWSABLE">11a3f39849408282bf1068d9ff5c12a6bbc7c68e</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Foreach migrated account\Metrics\Search metrics\Create hidden list.Inputs[Input 0]"
                          hasSideEffects="true"
                          name="Input 0">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Foreach migrated account\Metrics\Search metrics\Create hidden list.Inputs[Input 0].Columns[name]"
                              cachedDataType="wstr"
                              cachedLength="1000"
                              cachedName="name"
                              lineageId="Package\Foreach migrated account\Metrics\Search metrics\Search metrics.Outputs[JsonSourceOutput].Columns[name]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Foreach migrated account\Metrics\Search metrics\Create hidden list.Outputs[Output 0]"
                          name="Output 0"
                          synchronousInputId="Package\Foreach migrated account\Metrics\Search metrics\Create hidden list.Inputs[Input 0]">
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Foreach migrated account\Metrics\Search metrics\Create visible list"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;10"
                      description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                      name="Create visible list"
                      version="10">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Stores the source code of the component"
                          isArray="true"
                          name="SourceCode"
                          state="cdata">
                          <arrayElements
                            arrayElementCount="30">
                            <arrayElement
                              dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String MetricsVisible
    {
        get
        {
            return (String)(ParentComponent.ReadWriteVariables["Metrics_Visible"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
        set
        {
            ParentComponent.ReadWriteVariables["Metrics_Visible"].Value = value;
        }
    }

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using System.Linq;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    private string metrics_visible { get; set; }
    private int stringLength { get; set; }

    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();

        metrics_visible = "\"visible\": [";
        stringLength = metrics_visible.Length;
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();

        if (metrics_visible.Length > stringLength)
        {
            Variables.MetricsVisible = string.Concat(metrics_visible.Reverse().Skip(2).Reverse()) + "]";
        }
        else
        {
            Variables.MetricsVisible = metrics_visible + "]";
        }
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer row)
    {
        metrics_visible += "\"" + row.name + "\", ";
    }

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String name
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
    }
    public bool name_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[SC_29e53d3b3750489c9054fb474c6d870f.csproj]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{370a0ea1-5a9f-482a-b987-ce9f407505e2}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_29e53d3b3750489c9054fb474c6d870f</RootNamespace>
    <AssemblyName>SC_29e53d3b3750489c9054fb474c6d870f</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_29e53d3b3750489c9054fb474c6d870f" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_29e53d3b3750489c9054fb474c6d870f.Properties.Settings.get_Default():SC_29e53d3b3750489c9054fb474c6d870f.Properties.Sett" +
    "ings")]

namespace SC_29e53d3b3750489c9054fb474c6d870f.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Project]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>SC_29e53d3b3750489c9054fb474c6d870f</msb:CodeName>
		<msb:DisplayName>SC_29e53d3b3750489c9054fb474c6d870f</msb:DisplayName>
		<msb:ProjectId>{4C64A9CF-5A9C-468C-B7DC-51C613678364}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_29e53d3b3750489c9054fb474c6d870f.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_29e53d3b3750489c9054fb474c6d870f")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_29e53d3b3750489c9054fb474c6d870f")]
[assembly: AssemblyCopyright("Copyright @  2020")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_29e53d3b3750489c9054fb474c6d870f.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_29e53d3b3750489c9054fb474c6d870f.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_29e53d3b3750489c9054fb474c6d870f.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_29e53d3b3750489c9054fb474c6d870f.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_29e53d3b3750489c9054fb474c6d870f.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                          </arrayElements>
                        </property>
                        <property
                          dataType="System.String"
                          description="Stores the binary representation of the component"
                          isArray="true"
                          name="BinaryCode"
                          state="cdata">
                          <arrayElements
                            arrayElementCount="2">
                            <arrayElement
                              dataType="System.String"><![CDATA[SC_29e53d3b3750489c9054fb474c6d870f.dll]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAEPWV14AAAAAAAAAAOAAIiALATAAABYAAAAIAAAAAAAASjUA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAPg0AABPAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAUBUAAAAgAAAAFgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAAYAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAs
NQAAAAAAAEgAAAACAAUAiCIAALgRAAABAAAAAAAAAEA0AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CewEAAAQqIgIDfQEAAAQqHgJ7AgAABCoiAgN9AgAABCqO
AigQAAAKAnIBAABwKAIAAAYCAigBAAAGbxEAAAooBAAABioAABMwAwBmAAAAAAAAAAIoEgAACgIo
AQAABm8RAAAKAigDAAAGMTECewQAAAQCKAEAAAYoAQAAKxgoAgAAKygBAAArKAMAACtyGwAAcCgW
AAAKbxUAAAYqAnsEAAAEAigBAAAGchsAAHAoFgAACm8VAAAGKooCAigBAAAGch8AAHADbwoAAAZy
IwAAcCgXAAAKKAIAAAYqHgIoDgAABioqAgMEBSgYAAAKKlICexkAAAoCexoAAAoWlG8bAAAKKiIC
FigcAAAKKh4CKB0AAAoqHgIoHgAACip+AigfAAAKAgJzEgAABn0DAAAEAgJzEwAABn0EAAAEKpIE
cisAAHAabyAAAAosFQIFAgMoIQAACg4EcwkAAAZvEAAABipKKwcCA28RAAAGA28MAAAGLfEqBio6
AigiAAAKAgN9BQAABCo6AigiAAAKAgN9BgAABCqWAnsGAAAEbyMAAApyOwAAcG8kAAAKKCUAAApv
JgAACnQaAAABKnICewYAAARvIwAACnI7AABwbyQAAAoDbycAAAoqHgIoIgAACiqufgcAAAQtHnJb
AABw0AcAAAIoKAAACm8pAAAKcyoAAAqABwAABH4HAAAEKhp+CAAABCoeAoAIAAAEKhp+CQAABCoe
AigrAAAKKi5zGwAABoAJAAAEKgBCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAACA
BgAAI34AAOwGAADoBwAAI1N0cmluZ3MAAAAA1A4AANAAAAAjVVMApA8AABAAAAAjR1VJRAAAALQP
AAAEAgAAI0Jsb2IAAAAAAAAAAgAAAVcVoAEJCQAAAPoBMwAWAAABAAAAJAAAAAgAAAAJAAAAHAAA
ABAAAAArAAAAFgAAAAUAAAAIAAAADAAAAAEAAAAGAAAAAQAAAAMAAAAAADsEAQAAAAAABgDXAsQF
BgBrA8QFBgAjArEFDwA4BgAABgBQAsQEBgC6AsQEBgCbAsQEBgBSA8QEBgD3AsQEBgAQA8QEBgBn
AsQEBgCCAtQDCgArA1wBBgDrAcQFCgBbBVwBDgBMBVwBCgDzBFwBCgASB1wBBgDVBnwEBgAGArEF
BgBsBeQFBgDnBK8EEgDWASUEEgA3AiUEEgC2AZoEBgDxA3wEFgDMADMFBgA6AGIABgDWBHwEGgAR
AHwFGgABAHwFSwCIBwAAGgAiAHwFBgB9AXwEBgAlAXwEBgDfB8QEAAAAAEgAAAAAAAEAAQABABAA
jwQAABAAAQABAAEAEAA/BQAAPQADAAkAAQAQAPQGAABJAAMADgABABAAwgYAAE0ABQASAAEAEACD
BgAATQAGABMAAAAQAOsFRwZNAAcAFgAAARAAsgZHBmUACQAaAAEAfQDQAAEAngDTAAYAwgbWAAYA
gwbaAAEAAgfeAAEAAgfeABEAgwTiABEApgHmABEAvADqAFAgAAAAAIEI/QDuAAEAWCAAAAAAgQgR
ARAAAQBhIAAAAACBCAMEGwACAGkgAAAAAIEIFAQBAAIAciAAAAAAxgCJAwYAAwCYIAAAAADGAJQD
BgADAAohAAAAAMYAuAfyAAMALSEAAAAAhhikBQYABAA1IQAAAACGGKQFXQAEAEAhAAAAAIYIUwHu
AAcAVSEAAAAAhghjBHkABwBeIQAAAACGAM8HeQAHAGYhAAAAAIYA3AZ5AAcAbiEAAAAAhhikBQYA
BwCOIQAAAADGAGcH+AAHALMhAAAAAMYBYAfyAAsAxiEAAAAAxgG4B/IADADIIQAAAACGGKQFAgEN
ANchAAAAAIYYpAUCAQ4A5iEAAAAAhgjXAO4ADwAMIgAAAACGCOoAEAAPACkiAAAAAIMYpAUGABAA
MSIAAAAAkwhoBQgBEABdIgAAAACTCI4BDQEQAGQiAAAAAJMImgESARAAbCIAAAAAlgjoBhgBEQBz
IgAAAACGGKQFBgARAHsiAAAAAJEYqgUdAREAAAABAKoDAAABAKoDAAABANcHAAABAGEFAAACAI0G
AAADAAEFAAABAFEAAAACAEkBAAADAGEFAAAEAAEFAAABAGEFAAABANMHAAABABgHAAABABgHAAAB
AKoDAAABAKoDCQCkBQEAEQCkBQYAGQCkBQoAKQCkBRAAMQCkBRAAOQCkBRAAQQCkBRAASQCkBRAA
UQCkBRAAWQCkBRAAYQCkBRAAaQCkBQYAcQCkBQYAoQCkBQYAwQCkBRUAkQCJAwYA0QD4AxsAkQCU
AwYA2QDOAR8A2QAuBTMA0QDOBkQA0QDOBk8A0QDOBlUAeQCkBV0AeQBhBWcAeQCNBmsAgQDuA28A
eQBsBHQAeQDPB3kAeQDcBnkAkQCkBQYA0QC7Bn0AkQChBoQAmQCkBQYAkQB2BooA8QBzBI8AkQCj
B5UA+QB0B5sA+QCgA6IAEQE3AacAEQHbB7AAqQCkBbYAyQCkBQYAIABrAP0BIQBrAP0BLgALADwB
LgATAEUBLgAbAGQBLgAjAG0BLgArAJYBLgAzAJYBLgA7AJYBLgBDAG0BLgBLAJwBLgBTAJYBLgBb
ALMBQABrAP0BQQBrAP0BQwBjAP0BYABrAP0BgABrAP0ByQB7AGQB4wBzAP0B6QB7AGQBIQFrAP0B
AgABAAMAAwAGAAUABwAGAAgACAAAABUBIQEAABgEJQEAAFcBIQEAAGcEKQEAAO4AIQEAAGwFLQEA
AK4BMgEAAOwGNwECAAEAAwABAAIAAwACAAMABQABAAQABQACAAoABwACAAsACQACABQACwABABUA
CwACABcADQACABgADwABABkADwACABoAEQAEgAAAAQAAAAAAAAAAAAAAAACwAwAABAAAAAAAAAAA
AAAAvgBZAAAAAAANAAAAAAAAAAAAAADHACIHAAAAAA0AAAAAAAAAAAAAAMcAPwcAAAAABAAAAAAA
AAAAAAAAvgB8BAAAAAAEAAAAAAAAAAAAAAC+AIIBAAAAAA0AAAAAAAAAAAAAAMcACwUAAAAAAAAA
AAEAAAD1BQAAJwAvACkALwArAC8AAAAAAABJRFRTVmFyaWFibGUxMDAASURUU1ZhcmlhYmxlczEw
MABJRFRTRXZhbHVhdG9yQ29udGV4dDEwMABJRW51bWVyYWJsZWAxADxNb2R1bGU+AElucHV0SUQA
bXNjb3JsaWIAU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMAPG1ldHJpY3NfdmlzaWJsZT5rX19C
YWNraW5nRmllbGQAPHN0cmluZ0xlbmd0aD5rX19CYWNraW5nRmllbGQAZGVmYXVsdEluc3RhbmNl
AEVudW1lcmFibGUAZ2V0X01ldHJpY3NWaXNpYmxlAHNldF9NZXRyaWNzVmlzaWJsZQBnZXRfbWV0
cmljc192aXNpYmxlAHNldF9tZXRyaWNzX3Zpc2libGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlw
ZUZyb21IYW5kbGUASW5wdXROYW1lAGdldF9uYW1lAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBp
cGVsaW5lAFR5cGUAU3lzdGVtLkNvcmUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VD
dWx0dXJlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAFJldmVyc2UARWRpdG9yQnJvd3NhYmxlU3Rh
dGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0
ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRp
dGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0
dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlv
bkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVj
dEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0Q29tcG9uZW50
RW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBh
dGliaWxpdHlBdHRyaWJ1dGUAUHJlRXhlY3V0ZQBQb3N0RXhlY3V0ZQBzZXRfVmFsdWUAdmFsdWUA
U0NfMjllNTNkM2IzNzUwNDg5YzkwNTRmYjQ3NGM2ZDg3MGYAU3lzdGVtLlJ1bnRpbWUuVmVyc2lv
bmluZwBHZXRTdHJpbmcAZ2V0X0xlbmd0aABnZXRfc3RyaW5nTGVuZ3RoAHNldF9zdHJpbmdMZW5n
dGgAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFNDXzI5ZTUzZDNiMzc1MDQ4OWM5MDU0ZmI0NzRjNmQ4
NzBmLmRsbABnZXRfbmFtZV9Jc051bGwAZ2V0X0l0ZW0AU3lzdGVtAHJlc291cmNlTWFuAFNjcmlw
dE1haW4AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lzdGVtLlJl
ZmxlY3Rpb24AU3RyaW5nQ29tcGFyaXNvbgBDdWx0dXJlSW5mbwBPdXRwdXROYW1lTWFwAE91dHB1
dE1hcABNaWNyb3NvZnQuU3FsU2VydmVyLkRUU1J1bnRpbWVXcmFwAFNraXAAU3lzdGVtLkxpbnEA
SW5wdXQwQnVmZmVyAFBpcGVsaW5lQnVmZmVyAFNjcmlwdEJ1ZmZlcgBnZXRfUmVzb3VyY2VNYW5h
Z2VyAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUuV3JhcHBlcgAuY3RvcgAuY2N0b3IA
U3lzdGVtLkRpYWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVt
LlJlc291cmNlcwBTQ18yOWU1M2QzYjM3NTA0ODljOTA1NGZiNDc0YzZkODcwZi5Qcm9wZXJ0aWVz
LlJlc291cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAU0NfMjllNTNkM2IzNzUwNDg5Yzkw
NTRmYjQ3NGM2ZDg3MGYuUHJvcGVydGllcwBnZXRfUmVhZFdyaXRlVmFyaWFibGVzAEJ1ZmZlckNv
bHVtbkluZGV4ZXMAR2V0Q29sdW1uSW5kZXhlcwBTZXR0aW5ncwBFcXVhbHMAQ29ubmVjdGlvbnMA
Q29uY2F0AE9iamVjdABFbmRPZlJvd3NldABnZXRfRGVmYXVsdABVc2VyQ29tcG9uZW50AFBhcmVu
dENvbXBvbmVudABTY3JpcHRDb21wb25lbnQATWljcm9zb2Z0LlNxbFNlcnZlci5UeFNjcmlwdABN
aWNyb3NvZnQuU3FsU2VydmVyLlBpcGVsaW5lSG9zdABJbnB1dDBfUHJvY2Vzc0lucHV0AEdldFZh
bHVlV2l0aENvbnRleHQAU2NyaXB0Q29tcG9uZW50RXZhbENvbnRleHQAZ2V0X0V2YWx1YXRvckNv
bnRleHQASW5wdXQwX1Byb2Nlc3NJbnB1dFJvdwBOZXh0Um93AHJvdwBnZXRfQXNzZW1ibHkAABki
AHYAaQBzAGkAYgBsAGUAIgA6ACAAWwAAA10AAAMiAAAHIgAsACAAAA9JAG4AcAB1AHQAIAAwAAAf
TQBlAHQAcgBpAGMAcwBfAFYAaQBzAGkAYgBsAGUAAHFTAEMAXwAyADkAZQA1ADMAZAAzAGIAMwA3
ADUAMAA0ADgAOQBjADkAMAA1ADQAZgBiADQANwA0AGMANgBkADgANwAwAGYALgBQAHIAbwBwAGUA
cgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAAAAAGsw+tGxTgtPkuAMvjzEbioABCABAQgD
IAABBSABARERBCABAQ4FIAEBEV0DIAAIDxABARUScQEeABUScQEeAAMKAQMQEAECFRJxAR4AFRJx
AR4ACAoQAQEOFRJxAR4ABQACDg4OBwAEDg4ODg4JIAMBEkEdCBJFAwYSQQMGHQgEIAEOCAQgAQII
AyAAAgYgAgIOEXUFIAEdCAgEIAASeQUgARJ9HAUAABKAgQYgARwSgIUEIAEBHAgAARKAiRGAjQUg
ABKAkQcgAgEOEoCRCLd6XFYZNOCJCImEXc2AgMyRAgYOAgYIAwYSFAMGEhgDBhJJAwYSVQMGElkD
BhIgAyAADgUgAQESDAkgBAEIDhJBEkUFIAEBEkkEAAASVQQAABJZBQABARJZBAAAEiADAAABAygA
DgMoAAgDKAACBAgAElUECAASWQQIABIgCAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9u
VGhyb3dzAQgBAAIAAAAAACgBACNTQ18yOWU1M2QzYjM3NTA0ODljOTA1NGZiNDc0YzZkODcwZgAA
BQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDIwAABJAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0
LjUBAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEi5ORVQgRnJhbWV3b3JrIDQuNQQBAAAAAAC0AAAA
zsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBW
ZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYx
OTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBB
RFBBRFC0AAAAIDUAAAAAAAAAAAAAOjUAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAACw1AAAAAAAA
AAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABI
AAAAWEAAAOwDAAAAAAAAAAAAAOwDNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAA
AAC9BO/+AAABAAAAAQAAAAAAAAABAAAAAAA/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAA
AAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4A
AAAAAAAAsARMAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAAoAwAAAQAwADAAMAAw
ADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4A
eQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAA
AFMAQwBfADIAOQBlADUAMwBkADMAYgAzADcANQAwADQAOAA5AGMAOQAwADUANABmAGIANAA3ADQA
YwA2AGQAOAA3ADAAZgAAADAACAABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgAw
AC4AMAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8AMgA5AGUANQAzAGQA
MwBiADMANwA1ADAANAA4ADkAYwA5ADAANQA0AGYAYgA0ADcANABjADYAZAA4ADcAMABmAC4AZABs
AGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgA
dAAgAEAAIAAgADIAMAAyADAAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAA
AAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAEMAXwAyADkA
ZQA1ADMAZAAzAGIAMwA3ADUAMAA0ADgAOQBjADkAMAA1ADQAZgBiADQANwA0AGMANgBkADgANwAw
AGYALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBDAF8AMgA5AGUA
NQAzAGQAMwBiADMANwA1ADAANAA4ADkAYwA5ADAANQA0AGYAYgA0ADcANABjADYAZAA4ADcAMABm
AAAANAAIAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAADgA
CAABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAABMNQAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=]]></arrayElement>
                          </arrayElements>
                        </property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                          name="VSTAProjectName"
                          typeConverter="NOTBROWSABLE">SC_29e53d3b3750489c9054fb474c6d870f</property>
                        <property
                          dataType="System.String"
                          description="Specifies the programming language used by the script."
                          name="ScriptLanguage"
                          typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                        <property
                          dataType="System.String"
                          description="Specifies a comma-separated list of read-only variables."
                          name="ReadOnlyVariables"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                        <property
                          dataType="System.String"
                          description="Specifies a comma-separated list of read/write variables."
                          name="ReadWriteVariables"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg">User::Metrics_Visible</property>
                        <property
                          dataType="System.String"
                          description="List of breakpoints present on the script."
                          isArray="true"
                          name="BreakpointCollection"
                          typeConverter="NOTBROWSABLE">
                          <arrayElements
                            arrayElementCount="0" />
                        </property>
                        <property
                          dataType="System.String"
                          description="Checksum to match component metedata against compiled codes."
                          name="MetadataChecksum"
                          typeConverter="NOTBROWSABLE">6d710036ca5854a42faad50aa87201c5</property>
                        <property
                          dataType="System.String"
                          description="Checksum to match component metedata against compiled codes."
                          name="MetadataShaChecksum"
                          typeConverter="NOTBROWSABLE">464cc20e572ed4734240ef5ceb78c728cf709372</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Foreach migrated account\Metrics\Search metrics\Create visible list.Inputs[Input 0]"
                          hasSideEffects="true"
                          name="Input 0">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Foreach migrated account\Metrics\Search metrics\Create visible list.Inputs[Input 0].Columns[name]"
                              cachedDataType="wstr"
                              cachedLength="1000"
                              cachedName="name"
                              lineageId="Package\Foreach migrated account\Metrics\Search metrics\Search metrics.Outputs[JsonSourceOutput].Columns[name]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Foreach migrated account\Metrics\Search metrics\Create visible list.Outputs[Output 0]"
                          name="Output 0"
                          synchronousInputId="Package\Foreach migrated account\Metrics\Search metrics\Create visible list.Inputs[Input 0]">
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Foreach migrated account\Metrics\Search metrics\Enabled split"
                      componentClassID="Microsoft.ConditionalSplit"
                      contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
                      name="Enabled split"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\Foreach migrated account\Metrics\Search metrics\Enabled split.Inputs[Conditional Split Input]"
                          description="Input to the Conditional Split Transformation"
                          name="Conditional Split Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Foreach migrated account\Metrics\Search metrics\Enabled split.Inputs[Conditional Split Input].Columns[is_enabled]"
                              cachedDataType="bool"
                              cachedName="is_enabled"
                              lineageId="Package\Foreach migrated account\Metrics\Search metrics\Search metrics.Outputs[JsonSourceOutput].Columns[is_enabled]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Foreach migrated account\Metrics\Search metrics\Enabled split.Outputs[enabled]"
                          description="Output 1 of the Conditional Split Transformation"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          exclusionGroup="1"
                          name="enabled"
                          synchronousInputId="Package\Foreach migrated account\Metrics\Search metrics\Enabled split.Inputs[Conditional Split Input]"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                              name="Expression">[REPLACENULL](#{Package\Foreach migrated account\Metrics\Search metrics\Search metrics.Outputs[JsonSourceOutput].Columns[is_enabled]}, FALSE )</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the friendly version of the expression. This expression version uses column names."
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACENULL(is_enabled, FALSE )</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                              name="EvaluationOrder">0</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Foreach migrated account\Metrics\Search metrics\Enabled split.Outputs[disabled]"
                          description="Output 2 of the Conditional Split Transformation"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          exclusionGroup="1"
                          name="disabled"
                          synchronousInputId="Package\Foreach migrated account\Metrics\Search metrics\Enabled split.Inputs[Conditional Split Input]"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                              name="Expression">![REPLACENULL](#{Package\Foreach migrated account\Metrics\Search metrics\Search metrics.Outputs[JsonSourceOutput].Columns[is_enabled]}, FALSE )</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the friendly version of the expression. This expression version uses column names."
                              expressionType="Notify"
                              name="FriendlyExpression">!REPLACENULL(is_enabled, FALSE )</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                              name="EvaluationOrder">1</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Foreach migrated account\Metrics\Search metrics\Enabled split.Outputs[Conditional Split Default Output]"
                          description="Default Output of the Conditional Split Transformation"
                          exclusionGroup="1"
                          name="Conditional Split Default Output"
                          synchronousInputId="Package\Foreach migrated account\Metrics\Search metrics\Enabled split.Inputs[Conditional Split Input]">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              name="IsDefaultOut">true</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Foreach migrated account\Metrics\Search metrics\Enabled split.Outputs[Conditional Split Error Output]"
                          description="Error Output of the Conditional Split Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Conditional Split Error Output"
                          synchronousInputId="Package\Foreach migrated account\Metrics\Search metrics\Enabled split.Inputs[Conditional Split Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Foreach migrated account\Metrics\Search metrics\Enabled split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Foreach migrated account\Metrics\Search metrics\Enabled split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Foreach migrated account\Metrics\Search metrics\Enabled split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Foreach migrated account\Metrics\Search metrics\Enabled split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Foreach migrated account\Metrics\Search metrics\Hidden split"
                      componentClassID="Microsoft.ConditionalSplit"
                      contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
                      name="Hidden split"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\Foreach migrated account\Metrics\Search metrics\Hidden split.Inputs[Conditional Split Input]"
                          description="Input to the Conditional Split Transformation"
                          name="Conditional Split Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Foreach migrated account\Metrics\Search metrics\Hidden split.Inputs[Conditional Split Input].Columns[is_hidden]"
                              cachedDataType="bool"
                              cachedName="is_hidden"
                              lineageId="Package\Foreach migrated account\Metrics\Search metrics\Search metrics.Outputs[JsonSourceOutput].Columns[is_hidden]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Foreach migrated account\Metrics\Search metrics\Hidden split.Outputs[hidden]"
                          description="Output 1 of the Conditional Split Transformation"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          exclusionGroup="1"
                          name="hidden"
                          synchronousInputId="Package\Foreach migrated account\Metrics\Search metrics\Hidden split.Inputs[Conditional Split Input]"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                              name="Expression">[REPLACENULL](#{Package\Foreach migrated account\Metrics\Search metrics\Search metrics.Outputs[JsonSourceOutput].Columns[is_hidden]}, FALSE )</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the friendly version of the expression. This expression version uses column names."
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACENULL(is_hidden, FALSE )</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                              name="EvaluationOrder">0</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Foreach migrated account\Metrics\Search metrics\Hidden split.Outputs[visible]"
                          description="Output 2 of the Conditional Split Transformation"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          exclusionGroup="1"
                          name="visible"
                          synchronousInputId="Package\Foreach migrated account\Metrics\Search metrics\Hidden split.Inputs[Conditional Split Input]"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                              name="Expression">![REPLACENULL](#{Package\Foreach migrated account\Metrics\Search metrics\Search metrics.Outputs[JsonSourceOutput].Columns[is_hidden]}, FALSE )</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the friendly version of the expression. This expression version uses column names."
                              expressionType="Notify"
                              name="FriendlyExpression">!REPLACENULL(is_hidden, FALSE )</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                              name="EvaluationOrder">1</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Foreach migrated account\Metrics\Search metrics\Hidden split.Outputs[Conditional Split Default Output]"
                          description="Default Output of the Conditional Split Transformation"
                          exclusionGroup="1"
                          name="Conditional Split Default Output"
                          synchronousInputId="Package\Foreach migrated account\Metrics\Search metrics\Hidden split.Inputs[Conditional Split Input]">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              name="IsDefaultOut">true</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Foreach migrated account\Metrics\Search metrics\Hidden split.Outputs[Conditional Split Error Output]"
                          description="Error Output of the Conditional Split Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Conditional Split Error Output"
                          synchronousInputId="Package\Foreach migrated account\Metrics\Search metrics\Hidden split.Inputs[Conditional Split Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Foreach migrated account\Metrics\Search metrics\Hidden split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Foreach migrated account\Metrics\Search metrics\Hidden split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Foreach migrated account\Metrics\Search metrics\Hidden split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Foreach migrated account\Metrics\Search metrics\Hidden split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Foreach migrated account\Metrics\Search metrics\Multicast"
                      componentClassID="Microsoft.Multicast"
                      contactInfo="Multicast;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Distributes every input row to every row in one or more outputs. For example, branch your data flow to make a copy of data so that some values can be masked before sharing with external partners."
                      name="Multicast">
                      <inputs>
                        <input
                          refId="Package\Foreach migrated account\Metrics\Search metrics\Multicast.Inputs[Multicast Input 1]"
                          name="Multicast Input 1">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Foreach migrated account\Metrics\Search metrics\Multicast.Outputs[Multicast Output 1]"
                          deleteOutputOnPathDetached="true"
                          name="Multicast Output 1"
                          synchronousInputId="Package\Foreach migrated account\Metrics\Search metrics\Multicast.Inputs[Multicast Input 1]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Foreach migrated account\Metrics\Search metrics\Multicast.Outputs[Multicast Output 2]"
                          deleteOutputOnPathDetached="true"
                          name="Multicast Output 2"
                          synchronousInputId="Package\Foreach migrated account\Metrics\Search metrics\Multicast.Inputs[Multicast Input 1]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Foreach migrated account\Metrics\Search metrics\Multicast.Outputs[Multicast Output 3]"
                          dangling="true"
                          deleteOutputOnPathDetached="true"
                          name="Multicast Output 3"
                          synchronousInputId="Package\Foreach migrated account\Metrics\Search metrics\Multicast.Inputs[Multicast Input 1]">
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Foreach migrated account\Metrics\Search metrics\Remove invalid chars from name"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;10"
                      description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                      name="Remove invalid chars from name"
                      version="10">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Stores the source code of the component"
                          isArray="true"
                          name="SourceCode"
                          state="cdata">
                          <arrayElements
                            arrayElementCount="30">
                            <arrayElement
                              dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using System.Text.RegularExpressions;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer row)
    {
        row.name =
            Regex.Replace(
                    row.name,
                    @"[^\w\.@-]", " ",
                    RegexOptions.None,
                    TimeSpan.FromSeconds(1.5))
                .Replace(" ", "<>")
                .Replace("><", "")
                .Replace("<>", " ");
    }

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String name
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
        set
        {
            this[0] = value;
        }
    }
    public bool name_IsNull
    {
        get
        {
            return IsNull(0);
        }
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_f4b564899bb743ff93d58337542fccd5.Properties.Settings.get_Default():SC_f4b564899bb743ff93d58337542fccd5.Properties.Sett" +
    "ings")]

namespace SC_f4b564899bb743ff93d58337542fccd5.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[SC_f4b564899bb743ff93d58337542fccd5.csproj]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{bb425b4e-7679-4cb4-85e6-f61f0e6a61df}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_f4b564899bb743ff93d58337542fccd5</RootNamespace>
    <AssemblyName>SC_f4b564899bb743ff93d58337542fccd5</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_f4b564899bb743ff93d58337542fccd5" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Project]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>SC_f4b564899bb743ff93d58337542fccd5</msb:CodeName>
		<msb:DisplayName>SC_f4b564899bb743ff93d58337542fccd5</msb:DisplayName>
		<msb:ProjectId>{FD715FA7-DC4A-4AE8-A229-1FB79B7AD6B5}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_f4b564899bb743ff93d58337542fccd5.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_f4b564899bb743ff93d58337542fccd5")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_f4b564899bb743ff93d58337542fccd5")]
[assembly: AssemblyCopyright("Copyright @  2020")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_f4b564899bb743ff93d58337542fccd5.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_f4b564899bb743ff93d58337542fccd5.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_f4b564899bb743ff93d58337542fccd5.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_f4b564899bb743ff93d58337542fccd5.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_f4b564899bb743ff93d58337542fccd5.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                          </arrayElements>
                        </property>
                        <property
                          dataType="System.String"
                          description="Stores the binary representation of the component"
                          isArray="true"
                          name="BinaryCode"
                          state="cdata">
                          <arrayElements
                            arrayElementCount="2">
                            <arrayElement
                              dataType="System.String"><![CDATA[SC_f4b564899bb743ff93d58337542fccd5.dll]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAMbqV14AAAAAAAAAAOAAIiALATAAABQAAAAIAAAAAAAALjIA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAANwxAABPAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAANBIAAAAgAAAAFAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAAWAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAQ
MgAAAAAAAEgAAAACAAUA7CEAADgPAAABAAAAAAAAACQxAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABMwBgBYAAAAAAAAAAMDbwQAAAZyAQAAcHIVAABwFiMAAAAA
AAD4PygQAAAKKBEAAApyFQAAcHIZAABwbxIAAApyHwAAcHIlAABwbxIAAApyGQAAcHIVAABwbxIA
AApvBQAABioeAigKAAAGKioCAwQFKBMAAAoqUgJ7FAAACgJ7FQAAChaUbxYAAAoqJgIWAygXAAAK
KiICFigYAAAKKloDLAgCFigZAAAKKnInAABwcxoAAAp6HgIoGwAACioeAigcAAAKKn4CKB0AAAoC
AnMOAAAGfQEAAAQCAnMPAAAGfQIAAAQqkgRyxAAAcBpvHgAACiwVAgUCAygfAAAKDgRzAwAABm8M
AAAGKkorBwIDbw0AAAYDbwgAAAYt8SoGKjoCKCAAAAoCA30DAAAEKjoCKCAAAAoCA30EAAAEKh4C
KCAAAAoqrn4FAAAELR5y1AAAcNAHAAACKCEAAApvIgAACnMjAAAKgAUAAAR+BQAABCoafgYAAAQq
HgKABgAABCoafgcAAAQqHgIoJAAACioucxUAAAaABwAABCpCU0pCAQABAAAAAAAMAAAAdjQuMC4z
MDMxOQAAAAAFAGwAAABUBQAAI34AAMAFAABkBgAAI1N0cmluZ3MAAAAAJAwAAEgBAAAjVVMAbA0A
ABAAAAAjR1VJRAAAAHwNAAC8AQAAI0Jsb2IAAAAAAAAAAgAAAVcVoAEJAQAAAPoBMwAWAAABAAAA
IgAAAAgAAAAHAAAAFgAAAA8AAAAkAAAAEAAAAAMAAAAFAAAACAAAAAEAAAAEAAAAAQAAAAAA8AIB
AAAAAAAGAP4BZAQGAJICZAQGAEoBRQQPANgEAAAGAHcBmgMGAOEBmgMGAMIBmgMGAHkCmgMGAB4C
mgMGADcCmgMGAI4BmgMGAKkBtgIKAFIClwAKABcElwAOAAgElwAKAOMDlwAKAMoFlwAGAI0FSQMG
AC0BRQQGACgEhAQGANcDhQMSAP0A2gISAF4B2gISAOUAcAMGABIBZAQGAFwDSQMSAE8GVQUSAIAF
VQUGANMCSQMGAKwDSQMGAMYDSQMGALgASQMGAFcASQMGAFkGmgMAAAAAJQAAAAAAAQABAAEAEABl
AwAAEAABAAEAAQAQAPsDAAA5AAEAAwABABAArAUAAEUAAQAKAAEAEAB0BQAASQADAA4AAQAQABYF
AABJAAQADwAAABAAiwTnBEkABQAQAAABEABFBecEYQAHABQABgB0BY4ABgAWBZIAAQC6BZYAAQC6
BZYAEQBQA5oAEQDVAJ4AEQBHAKIAUCAAAAAAxgAsBqYAAQC0IAAAAACGGDgEBgACALwgAAAAAIYY
OAQyAAIAxyAAAAAAhgiFAKwABQDcIAAAAACGCI4AEAAFAOYgAAAAAIYIGANUAAYA7yAAAAAAhggo
A7AABgAGIQAAAACGAEMGVAAHAA4hAAAAAIYAlAVUAAcAFiEAAAAAhhg4BAYABwA2IQAAAADGAB8G
tQAHAFshAAAAAMYBGAamAAsAbiEAAAAAxgEsBqYADABwIQAAAACGGDgEvwANAH8hAAAAAIYYOAS/
AA4AjiEAAAAAgxg4BAYADwCWIQAAAACTCCQExQAPAMIhAAAAAJMIvQDKAA8AySEAAAAAkwjJAM8A
DwDRIQAAAACWCKAF1QAQANghAAAAAIYYOAQGABAA4CEAAAAAkRg+BNoAEAAAAAEASwYAAAEAHQQA
AAIAIAUAAAMA8QMAAAEAsAIAAAEAsAIAAAEALgAAAAIAewAAAAMAHQQAAAQA8QMAAAEAHQQAAAEA
RwYAAAEA0AUAAAEA0AUAAAEAsAIJADgEAQARADgEBgAZADgECgApADgEEAAxADgEEAA5ADgEEABB
ADgEEABJADgEEABRADgEEABZADgEEABhADgEEABpADgEBgCZADgEBgC5ADgEFQDJADgEBgDRAFgE
GwDZAD8AIQDpAD8ALABxADgEMgBxAB0EPABxACAFQAB5ANACRABxAEADSQBxADEDTwBxADgDAQDx
ADgEEABxAEMGVABxAJQFVACJADgEBgDpAE4FWACJADQFXwCRADgEBgABAWkAZQABAVUGbgChADgE
dADBADgEBgAuAAsA9QAuABMA/gAuABsAHQEuACMAJgEuACsATwEuADMATwEuADsATwEuAEMAJgEu
AEsAVQEuAFMATwEuAFsAbAFDAGMAtgFpAHMAHQGJAHMAHQHhAHsAtgHjAGsAtgEDAAEABwADAAgA
BQAAAJIA3gAAACwD4gAAACgE5gAAAN0A6wAAAKQF8AACAAQAAwABAAUAAwACAAYABQABAAcABQAC
ABEABwACABIACQABABMACQACABQACwAEgAAAAQAAAAAAAAAAAAAAAAABAAAABAAAAAAAAAAAAAAA
fAA2AAAAAAANAAAAAAAAAAAAAACFANoFAAAAAA0AAAAAAAAAAAAAAIUA9wUAAAAABAAAAAAAAAAA
AAAAfABJAwAAAAAAAAAAAQAAAJUEAAAAAABTQ19mNGI1NjQ4OTliYjc0M2ZmOTNkNTgzMzc1NDJm
Y2NkNQA8TW9kdWxlPgBJbnB1dElEAG1zY29ybGliAFJlcGxhY2UAZGVmYXVsdEluc3RhbmNlAFJ1
bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAElucHV0TmFtZQBnZXRfbmFtZQBzZXRf
bmFtZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5QaXBlbGluZQBUeXBlAGdldF9DdWx0dXJlAHNl
dF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBFZGl0b3JC
cm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJD
b2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRl
AEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0
RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJs
eURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNz
ZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3Jp
cHRDb21wb25lbnRFbnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBS
dW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9u
aW5nAEdldFN0cmluZwBTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU0NfZjRiNTY0ODk5YmI3NDNmZjkz
ZDU4MzM3NTQyZmNjZDUuZGxsAGdldF9uYW1lX0lzTnVsbABzZXRfbmFtZV9Jc051bGwAU2V0TnVs
bABzZXRfSXRlbQBTeXN0ZW0AcmVzb3VyY2VNYW4AVGltZVNwYW4AU2NyaXB0TWFpbgBTeXN0ZW0u
Q29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBJbnZh
bGlkT3BlcmF0aW9uRXhjZXB0aW9uAFN0cmluZ0NvbXBhcmlzb24AQ3VsdHVyZUluZm8AT3V0cHV0
TmFtZU1hcABPdXRwdXRNYXAASW5wdXQwQnVmZmVyAFBpcGVsaW5lQnVmZmVyAFNjcmlwdEJ1ZmZl
cgBnZXRfUmVzb3VyY2VNYW5hZ2VyAC5jdG9yAC5jY3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MARnJv
bVNlY29uZHMAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2Vz
AFNDX2Y0YjU2NDg5OWJiNzQzZmY5M2Q1ODMzNzU0MmZjY2Q1LlByb3BlcnRpZXMuUmVzb3VyY2Vz
LnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBTQ19mNGI1NjQ4OTliYjc0M2ZmOTNkNTgzMzc1NDJm
Y2NkNS5Qcm9wZXJ0aWVzAFZhcmlhYmxlcwBCdWZmZXJDb2x1bW5JbmRleGVzAEdldENvbHVtbklu
ZGV4ZXMAU2V0dGluZ3MARXF1YWxzAFN5c3RlbS5UZXh0LlJlZ3VsYXJFeHByZXNzaW9ucwBDb25u
ZWN0aW9ucwBSZWdleE9wdGlvbnMAT2JqZWN0AEVuZE9mUm93c2V0AGdldF9EZWZhdWx0AFVzZXJD
b21wb25lbnQAUGFyZW50Q29tcG9uZW50AFNjcmlwdENvbXBvbmVudABNaWNyb3NvZnQuU3FsU2Vy
dmVyLlR4U2NyaXB0AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuUGlwZWxpbmVIb3N0AElucHV0MF9Qcm9j
ZXNzSW5wdXQASW5wdXQwX1Byb2Nlc3NJbnB1dFJvdwBOZXh0Um93AHJvdwBSZWdleABnZXRfQXNz
ZW1ibHkAAAAAE1sAXgBcAHcAXAAuAEAALQBdAAEDIAAABTwAPgAABT4APAAAAQCAm0kAcwBOAHUA
bABsACAAcAByAG8AcABlAHIAdAB5ACAAYwBhAG4AbgBvAHQAIABiAGUAIABzAGUAdAAgAHQAbwAg
AEYAYQBsAHMAZQAuACAAQQBzAHMAaQBnAG4AIABhACAAdgBhAGwAdQBlACAAdABvACAAdABoAGUA
IABjAG8AbAB1AG0AbgAgAGkAbgBzAHQAZQBhAGQALgAAD0kAbgBwAHUAdAAgADAAAHFTAEMAXwBm
ADQAYgA1ADYANAA4ADkAOQBiAGIANwA0ADMAZgBmADkAMwBkADUAOAAzADMANwA1ADQAMgBmAGMA
YwBkADUALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAAAATHS3Yj0k
C0mrf1rqkns+6AAEIAEBCAMgAAEFIAEBEREEIAEBDgUgAQERWQUAARFpDQoABQ4ODg4RcRFpBSAC
Dg4OCSADARI9HQgSQQMGEj0DBh0IBCABDggFIAIBCBwEIAECCAMgAAIGIAICDhF9BSABHQgICAAB
EoCBEYCFBSAAEoCJByACAQ4SgIkIt3pcVhk04IkIiYRdzYCAzJEDBhIUAwYSGAMGEkUDBhJRAwYS
VQMGEiAFIAEBEgwDIAAOBCABAQIJIAQBCA4SPRJBBSABARJFBAAAElEEAAASVQUAAQESVQQAABIg
AwAAAQMoAA4DKAACBAgAElEECAASVQQIABIgCAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0
aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTQ19mNGI1NjQ4OTliYjc0M2ZmOTNkNTgzMzc1NDJmY2Nk
NQAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDIwAABJAQAaLk5FVEZyYW1ld29yayxWZXJzaW9u
PXY0LjUBAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEi5ORVQgRnJhbWV3b3JrIDQuNQQBAAAAALQA
AADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIs
IFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1
NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAA
UEFEUEFEULQAAAAEMgAAAAAAAAAAAAAeMgAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEDIAAAAA
AAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAA
SAAAAFhAAADsAwAAAAAAAAAAAADsAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAA
AAAAvQTv/gAAAQAAAAEAAAAAAAAAAQAAAAAAPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQA
AAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBu
AAAAAAAAALAETAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAKAMAAAEAMAAwADAA
MAAwADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBu
AHkATgBhAG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAA
AABTAEMAXwBmADQAYgA1ADYANAA4ADkAOQBiAGIANwA0ADMAZgBmADkAMwBkADUAOAAzADMANwA1
ADQAMgBmAGMAYwBkADUAAAAwAAgAAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4A
MAAuADAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAQwBfAGYANABiADUANgA0
ADgAOQA5AGIAYgA3ADQAMwBmAGYAOQAzAGQANQA4ADMAMwA3ADUANAAyAGYAYwBjAGQANQAuAGQA
bABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBo
AHQAIABAACAAIAAyADAAMgAwAAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMA
AAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBDAF8AZgA0
AGIANQA2ADQAOAA5ADkAYgBiADcANAAzAGYAZgA5ADMAZAA1ADgAMwAzADcANQA0ADIAZgBjAGMA
ZAA1AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAQwBfAGYANABi
ADUANgA0ADgAOQA5AGIAYgA3ADQAMwBmAGYAOQAzAGQANQA4ADMAMwA3ADUANAAyAGYAYwBjAGQA
NQAAADQACAABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAA4
AAgAAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAMDIAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                          </arrayElements>
                        </property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                          name="VSTAProjectName"
                          typeConverter="NOTBROWSABLE">SC_f4b564899bb743ff93d58337542fccd5</property>
                        <property
                          dataType="System.String"
                          description="Specifies the programming language used by the script."
                          name="ScriptLanguage"
                          typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                        <property
                          dataType="System.String"
                          description="Specifies a comma-separated list of read-only variables."
                          name="ReadOnlyVariables"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                        <property
                          dataType="System.String"
                          description="Specifies a comma-separated list of read/write variables."
                          name="ReadWriteVariables"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                        <property
                          dataType="System.String"
                          description="List of breakpoints present on the script."
                          isArray="true"
                          name="BreakpointCollection"
                          typeConverter="NOTBROWSABLE">
                          <arrayElements
                            arrayElementCount="0" />
                        </property>
                        <property
                          dataType="System.String"
                          description="Checksum to match component metedata against compiled codes."
                          name="MetadataChecksum"
                          typeConverter="NOTBROWSABLE">fc937e1c3fdea24eb3609856798777c9</property>
                        <property
                          dataType="System.String"
                          description="Checksum to match component metedata against compiled codes."
                          name="MetadataShaChecksum"
                          typeConverter="NOTBROWSABLE">58f0a941a9872f1327029dab05e846c741de3671</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Foreach migrated account\Metrics\Search metrics\Remove invalid chars from name.Inputs[Input 0]"
                          hasSideEffects="true"
                          name="Input 0">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Foreach migrated account\Metrics\Search metrics\Remove invalid chars from name.Inputs[Input 0].Columns[name]"
                              cachedDataType="wstr"
                              cachedLength="1000"
                              cachedName="name"
                              lineageId="Package\Foreach migrated account\Metrics\Search metrics\Search metrics.Outputs[JsonSourceOutput].Columns[name]"
                              usageType="readWrite" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Foreach migrated account\Metrics\Search metrics\Remove invalid chars from name.Outputs[Output 0]"
                          name="Output 0"
                          synchronousInputId="Package\Foreach migrated account\Metrics\Search metrics\Remove invalid chars from name.Inputs[Input 0]">
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Foreach migrated account\Metrics\Search metrics\Search metrics"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="JSON Source (REST API or File); ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="The JSON source is used to read data from JSON files, RESTful Web Service or direct JSON String."
                      name="Search metrics"
                      usesDispositions="true"
                      version="29">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode, ZappySys.PowerPack130, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for any numeric data types"
                          expressionType="Notify"
                          name="TreatBlankNumberAsNull">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for bool data types"
                          expressionType="Notify"
                          name="TreatBlankBoolAsNull">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for any date/time data types"
                          expressionType="Notify"
                          name="TreatBlankDateAsNull">true</property>
                        <property
                          dataType="System.Int32"
                          description="Defines how to read the JSON file or direct string"
                          expressionType="Notify"
                          name="AccessMode"
                          typeConverter="ZappySys.Common.Ssis.FileValueAccessMode, ZappySys.Common, Version=1.0.2018.11210, Culture=neutral, PublicKeyToken=1903265a93eae502">3</property>
                        <property
                          dataType="System.String"
                          description="Defines how to read the JSON file or direct string"
                          expressionType="Notify"
                          name="DirectValue"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.String"
                          description="Variable name which holds JSON string"
                          expressionType="Notify"
                          name="ValueVariable"
                          typeConverter="ZappySys.PowerPack.Converters.VariableEditor,ZappySys.PowerPack130.UI,Version=1.0.0.0,Culture=neutral,PublicKeyToken=1903265a93eae502"></property>
                        <property
                          dataType="System.String"
                          description="Variable name which holds data file path or url"
                          expressionType="Notify"
                          name="PathVariable"
                          typeConverter="ZappySys.PowerPack.Converters.VariableEditor,ZappySys.PowerPack130.UI,Version=1.0.0.0,Culture=neutral,PublicKeyToken=1903265a93eae502">User::API_URL</property>
                        <property
                          dataType="System.String"
                          description="JSON file file path (e.g. c:\data\myfile.json) or pattern to process multiple files (e.g. c:\data\*.json)"
                          expressionType="Notify"
                          name="DirectPath"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">https://beta-api.uk.rexsoftware.com/rex.php</property>
                        <property
                          dataType="System.Boolean"
                          description="Include files from sub folders too."
                          expressionType="Notify"
                          name="Recursive">false</property>
                        <property
                          dataType="System.String"
                          description="Set this if you want to set custom Http headers. You may use variable anywhere in the header value using syntax {{User::YourVarName}}. Syntax of Header key value pair is : &amp;lt;request&amp;gt;&amp;lt;header&amp;gt;&amp;lt;name&amp;gt;x-myheader-1&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;AAA&amp;lt;/value&amp;gt;&amp;lt;/header&amp;gt; &amp;lt;header&amp;gt;&amp;lt;name&amp;gt;x-myheader-2&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;BBB&amp;lt;/value&amp;gt;&amp;lt;/header&amp;gt;&amp;lt;/request&amp;gt;"
                          expressionType="Notify"
                          name="HttpHeaders">&lt;request&gt;&lt;header&gt;&lt;name&gt;Accept&lt;/name&gt;&lt;value&gt;*/*&lt;/value&gt;&lt;/header&gt;&lt;header&gt;&lt;name&gt;Cache-Control&lt;/name&gt;&lt;value&gt;no-cache&lt;/value&gt;&lt;/header&gt;&lt;/request&gt;</property>
                        <property
                          dataType="System.String"
                          description="User defined data you wish to send along with your HTTP Request (e.g. Upload file data, Form POST data). Usually you have to set content-type of your data but if you select RequestMethod=POST then system will automatically set content-type=application/x-www-form-urlencoded."
                          expressionType="Notify"
                          name="HttpRequestData">{
	"method":"AdminMetricWriteRules::search",
	"args":
	{
		"extra_options": {},
		"order_by": {},
		"limit": 100
    },
	"strip_response_prefix": true,
	"token": "{{User::API_Token}}"
}</property>
                        <property
                          dataType="System.String"
                          description="Http Web Request Method (e.g. POST, GET, PUT, LIST, DELETE...). Refer your API documentation if you are not sure which method you have to use."
                          expressionType="Notify"
                          name="HttpRequestMethod">POST</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies content type for data you wish to POST. If you select Default option then system default content type will be used (i.e. application/x-www-form-urlencoded). If you specify Content-Type header along with this option then header value takes precedence."
                          expressionType="Notify"
                          name="HttpRequestContentType"
                          typeConverter="ZappySys.Common.Web.HttpRequestContentType, ZappySys.Common, Version=1.0.2018.11210, Culture=neutral, PublicKeyToken=1903265a93eae502">2</property>
                        <property
                          dataType="System.Int32"
                          description="Data format coming from HTTP Response. This is useful for example when you have OData service and you want to automatically consume all pages of data using odata.netUrl. Setting JsonFormat=Odata will automatically do it for you. This setting is only applicable if JSON is coming from HTTP WebRequest."
                          expressionType="Notify"
                          name="JsonFormat"
                          typeConverter="ZappySys.Json.JsonFormat, ZappySys.Json, Version=1.0.2018.11210, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                        <property
                          dataType="System.Boolean"
                          description="Enable custom proxy settings (If this is not set then system default proxy will be used. To disable proxy totally uncheck this option and check DoNotUseDefaultProxy option if available)"
                          expressionType="Notify"
                          name="UseProxy">false</property>
                        <property
                          dataType="System.String"
                          description="Web URL of Proxy server (including port  if necessary). [e.g. http://myproxyserver:8080/]"
                          expressionType="Notify"
                          name="ProxyUrl"></property>
                        <property
                          dataType="System.Boolean"
                          description="Enable passing userid and password to proxy server"
                          expressionType="Notify"
                          name="UseProxyCreds">false</property>
                        <property
                          dataType="System.String"
                          description="Proxy username"
                          expressionType="Notify"
                          name="ProxyUserName"></property>
                        <property
                          dataType="System.String"
                          description="Proxy password"
                          expressionType="Notify"
                          name="ProxyPassword"></property>
                        <property
                          dataType="System.String"
                          description="If Service response support pagination using some sort of next url attribute then specify which attribute name in JSON Response string which holds next url. If no attribute found or its null then component will stop fetching next resultset. Example: $.pagingInfo.nextUrl"
                          expressionType="Notify"
                          name="NextUrlAttribute"></property>
                        <property
                          dataType="System.String"
                          description="If Service response support pagination using some sort of prev/next url attribute then specify which previous link attribute name from JSON Response string which holds previous url."
                          expressionType="Notify"
                          name="PrevUrlAttribute"></property>
                        <property
                          dataType="System.String"
                          description="Specifies value for NextUrlAttribute or StopIndicatorAttribute which indicates last page to stop pagination. If you have specified StopIndicatorAttribute then you can use Regular expression rather than static value to indicate last page. To use regular expression value of this property must start with regex= prefix. Example : regex=FALSE|N  (assuming you set StopIndicatorAttribute to something like $.hasMore)"
                          expressionType="Notify"
                          name="NextUrlStopIndicator"></property>
                        <property
                          dataType="System.String"
                          description="Attribute name or expression for attribute which can be used as stop indicator (e.g. hasmore --or-- $.pagination.hasmore). If this value is blank then NextUrlAttribute is used"
                          expressionType="Notify"
                          name="StopIndicatorAttribute"></property>
                        <property
                          dataType="System.String"
                          description="If you want to include certain text (or parameters) at the end of Next url then specify this attribute (e.g. &amp;format=json). Another common usecase of this property is to supply pagination token to next Page URL. You can also use &lt;%nextlink%&gt; or  &lt;%nextlink_encoded%&gt; placeholder (e.g. &amp;cursor=&lt;%nextlink_encoded%&gt; )"
                          expressionType="Notify"
                          name="NextUrlSuffix"></property>
                        <property
                          dataType="System.Int32"
                          description="This property indicates total number of milliseconds you want to wait before sending next request. This option allows you to adjust how many API calls can be made within certain timeframe. If your API Service has no limit then set this option to zero"
                          expressionType="Notify"
                          name="NextUrlWait">0</property>
                        <property
                          dataType="System.Boolean"
                          description="If this option is true then component will continue without exception on 404 error (Url not found). This allows you to consume data gracefully."
                          expressionType="Notify"
                          name="ContinueOnUrlNotFoundError">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Continue when any type of exception occurs during http request"
                          expressionType="Notify"
                          name="ContineOnAnyError">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Continue on error when specified substring found in response"
                          expressionType="Notify"
                          name="ContineOnErrorForMessage">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Continue on error when specified status code returned from web server"
                          expressionType="Notify"
                          name="ContineOnErrorForStatusCode">false</property>
                        <property
                          dataType="System.Boolean"
                          description="When error occurs no data is returned. Use this option to get content eventhough error occurs. When this option is checked you can't use [continue on error when specific string found in response] option"
                          expressionType="Notify"
                          name="ConsumeResponseOnError">false</property>
                        <property
                          dataType="System.Int32"
                          description="Status code to match when error occurs and ContineOnErrorForStatusCode option is true. If Response status code matches to this code then task continues to run"
                          expressionType="Notify"
                          name="ErrorStatusCodeToMatch">404</property>
                        <property
                          dataType="System.String"
                          description="Error substring to match when error occurs and ContineOnErrorForMessage option is true. If Response status code matches to this code then task continues to run"
                          expressionType="Notify"
                          name="ErrorSubstringToMatch"></property>
                        <property
                          dataType="System.String"
                          description="Cookie Container can be used to maintain state between multiple web requests. Example: You can login to site like wordpress and then extract any private page content by simply passing authentication cookies using this variable."
                          expressionType="Notify"
                          name="CookieContainerVariable"></property>
                        <property
                          dataType="System.Int32"
                          description="Http request Timeout in seconds. Set this to 0 if you want to use system default value (i.e. 100 seconds)"
                          expressionType="Notify"
                          name="RequestTimeout">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies which security protocol is supported for HTTPS communication. Using this option you can enable legacy protocol or enforce to use latest version of security protocol (Note: TLS 1.2 is only supported in SSIS 2014 or Higher)."
                          expressionType="Notify"
                          name="SecurityProtocol"
                          typeConverter="ZappySys.PowerPack.Common.HttpsSecurityProtocolType, ZappySys.PowerPack130, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                        <property
                          dataType="System.Boolean"
                          description="Enable support for gzip or deflate compression. When you check this option compressed response automatically de-compressed saving bandwidth. This option is only valid if web server supports compressed response stream. Check your API documentation for more information."
                          expressionType="Notify"
                          name="EnableCompressionSupport">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Ignore SSL certificate related errors. Example: if you getting SSL/TLS errors because of certificate expired or certificate is not from trusted authority or certificate is self-signed. By checking this option you will not get SSL/TLS error."
                          expressionType="Notify"
                          name="IgnoreCertificateErrors">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Allow unsecure ciphers/suites and curves for SSLS/TLS communication. Use this option to communicate with web servers which needs legacy / unsecured ciphers support. This option is only trigged when you change default SSL/TLS Version on advanced settings tab."
                          expressionType="Notify"
                          name="AllowUnsecureSuite">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Use connection to pass credentials for authentication (e.g. Use UserID/Password or Use OAuth Protocol for token based approach)"
                          expressionType="Notify"
                          name="UseConnection">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specified how you want to loop through multiple pages returned by REST API."
                          expressionType="Notify"
                          name="PagingMode"
                          typeConverter="ZappySys.Common.RestApiPagingMode, ZappySys.Common, Version=1.0.2018.11210, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                        <property
                          dataType="System.Boolean"
                          description="If you wish to pass extracted pagination token or current page number in the body of next request then set this option to true. You can use [$pagetoken$] and [$pagetoken$] placeholders anywhere in the Body where you wish to insert extracted Page token. You must set encoded token you can use &lt;%nextlink_encoded%&gt; inside SuffixForNextUrl Property. If you dont use SuffixForNextUrl then raw nextLink or Token will be inserted inside the body. If you dont specify [$pagetoken$] placeholder in the body then NextPage Token will be appended at the end. NextPage Token is extracted by filter expression specified using property NextUrlSuffix"
                          expressionType="Notify"
                          name="EnablePageTokenForBody">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this to true if you wish to specify different URL, Header, Body or Filter for first page and next page (i.e. Paginated response). Some APIs like Amazon MWS, NetSuite, Zuora) you may need to set this to true."
                          expressionType="Notify"
                          name="HasDifferentNextPageInfo">false</property>
                        <property
                          dataType="System.String"
                          description="When HasDifferentNextPageInfo=true you can set this property to indicate first page and next page. You can specify different URL, Header, Body or Filter for first page and next page (i.e. Paginated response). Use [$tag$] as placeholder anywhere in the URL, Header, Body or Filter and at runtime system will replace it with correct value (first page or next page value). Syntax to specify placeholder for first page vs next page is like a connectionstring url=FirstPageValue|NextPageValue;header=FirstPageValue|NextPageValue;body=FirstPageValue|NextPageValue;filter=FirstPageValue|NextPageValue; You can use one or more key/value pairs to make things dynamic (e.g. url, header, body or filter)  .For example if you have pagination in your API and First URL is http://abc.com/api/items/get and to get more records you have to call http://abc.com/api/items/getNext then you can use [$tag$] as placeholder in the URL http://abc.com/api/items/[$tag$] and specify this property with first page tag and next page tag as url=get|getNext  (Tags are separated using vertical bar). "
                          expressionType="Notify"
                          name="PagePlaceholders"></property>
                        <property
                          dataType="System.String"
                          description="Use this property to set request body fragment for first page. HasDifferentNextPageInfo must be set to true to use this property."
                          expressionType="Notify"
                          name="FirstPageBodyPart"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.String"
                          description="Use this property to set request body fragment for any request after first request. HasDifferentNextPageInfo must be set to true to use this property."
                          expressionType="Notify"
                          name="NextPageBodyPart"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.String"
                          description="Expression to extract Maximum pages to loop through. Some APIs don't stop pagination and keep returning last page data when you try to read data after last page. Specify expression (e.g. $.page_count ) to read total pages to loop through using this property."
                          expressionType="Notify"
                          name="PagingMaxPagesExpr"></property>
                        <property
                          dataType="System.String"
                          description="e.g. Type page_num if URL looks like this =&gt; http://abc.com/?page_num=1&amp;sort=true  (page number via query string)&#xA;--or-- Type &lt;%page%&gt; if page number is inside URL path like this =&gt; http://abc.com/1/?sort=true  (e.g. replace page number in url with placeholder http://abc.com/&lt;%page%&gt;/?sort=true)&#xA;Page number will be incremented by one for next URL until last page is reached or [Max Page Number] is reached"
                          expressionType="Notify"
                          name="PageNumberAttributeNameInUrl"></property>
                        <property
                          dataType="System.Int32"
                          description="Maximum page number until which auto increment is allowed. Type zero for no limit. Next URL contains next page number (increment by one) until last page is detected or [Max Page Number] limit is reached."
                          expressionType="Notify"
                          name="MaxPageNumber">0</property>
                        <property
                          dataType="System.String"
                          description="Variable name which will hold starting page number. This is ignored if you useing parameter name from query string to indicate page number."
                          expressionType="Notify"
                          name="StartPageNumberVariable"></property>
                        <property
                          dataType="System.Int32"
                          description="Page counter increment. By default next page is incremented by one if this value is zero. You can also enter negative number if you want to decrease page counter."
                          expressionType="Notify"
                          name="PageNumberIncrement">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specified how you want detect last page."
                          expressionType="Notify"
                          name="PagingEndStrategy"
                          typeConverter="ZappySys.Common.UrlPagingEndDetectionStrategy, ZappySys.Common, Version=1.0.2018.11210, Culture=neutral, PublicKeyToken=1903265a93eae502">3</property>
                        <property
                          dataType="System.Boolean"
                          description="Condition result to compare to detect last page. Set this property to True if you want detect last page if condition is true else set this to False."
                          expressionType="Notify"
                          name="LastPageWhenConditionEqualsTo">true</property>
                        <property
                          dataType="System.Int32"
                          description="Minimum bytes expected from response."
                          expressionType="Notify"
                          name="ResponseMinBytes">0</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum bytes from response."
                          expressionType="Notify"
                          name="ResponseMaxBytes">3</property>
                        <property
                          dataType="System.String"
                          description="Expected error message sub string from response."
                          expressionType="Notify"
                          name="ResponseErrorString">not found</property>
                        <property
                          dataType="System.Int32"
                          description="Expected status code from response when page number you trying to access not found."
                          expressionType="Notify"
                          name="ResponseStatusCode">404</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum JSON records to fetch. Set this value to 0 for all records"
                          expressionType="Notify"
                          name="MaxRows">0</property>
                        <property
                          dataType="System.String"
                          description="Enter expression here to filter data.(Example:  $.Users[*].UserName ) This will fetch User names from users records"
                          expressionType="Notify"
                          name="Filter"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">$.result.rows</property>
                        <property
                          dataType="System.Boolean"
                          description="Use this option to include parent properties (Non array) in the output along with Filtered Rows"
                          expressionType="Notify"
                          name="IncludeParentColumns">true</property>
                        <property
                          dataType="System.Boolean"
                          description="By default child and parent information is not included in the output if children not found for specified expression. For example if you want to extract all orders from all customers nodes then you can type $.Customers[*].Orders[*]. This will fetch all orders from all customers. By default customers records without orders wont be included in the output. If you want to include those customers where orders not found then check this option (Output null information for order attributes). This behavior is similar to LEFT OUTER JOIN in SQL (Left side is parent, right side is child). This option is ***resource intensive*** so only check if you really care about this behavior."
                          expressionType="Notify"
                          name="IncludeParentColumnsWhenChildMissing">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to true if you want to output parent columns which are array. By default any parent column which is an array is not included in output. See also FilterForParentColumnsWithArrayType property if you set this property"
                          expressionType="Notify"
                          name="IncludeParentColumnsWithArrayType">false</property>
                        <property
                          dataType="System.String"
                          description="Filter expression to extract value form parent"
                          expressionType="Notify"
                          name="FilterForParentColumnsWithArrayType"></property>
                        <property
                          dataType="System.String"
                          description="Prefix for parent column name. This option is only valid if you have set IncludeParentColumns=True"
                          expressionType="Notify"
                          name="ParentColumnPrefix">P_</property>
                        <property
                          dataType="System.Boolean"
                          description="Throw error if property name specified in filter expression is missing. By default it will ignore any missing property errors."
                          expressionType="Notify"
                          name="ThrowErrorIfPropertyMissing">false</property>
                        <property
                          dataType="System.Int32"
                          description="This property how many nested levels should be scanned to fetch various properties. 0=Scan all child levels."
                          expressionType="Notify"
                          name="MaxLevelsToScan">0</property>
                        <property
                          dataType="System.String"
                          description="List comma separated property names from JSON document which you want to exclude from output. Specify parent property name to exclude all child nodes."
                          expressionType="Notify"
                          name="ExcludedProperties"></property>
                        <property
                          dataType="System.String"
                          description="Property level separator used in generated property name (separator for outer properties - Above selected filter node). Use this if default separator is producing duplicate property name which is conflicting with existing name."
                          expressionType="Notify"
                          name="LevelSeparator">_</property>
                        <property
                          dataType="System.Boolean"
                          description="Enables deep array flattening for selected filtered hierarchy. When you turn on this property it will flatten each property of each array item and expose as column (e.g. If you have Filter set as $.customers[*] and for each customer you have an array of Addresses then you may see output columns like Addresses.1.City, Addresses.1.State, Addresses.2.City, Addresses.2.State .... Addresses.N.City, Addresses.N.State). You can control how many array items you want to flatten by setting MaxArrayItemsToFlatten property."
                          expressionType="Notify"
                          name="EnableArrayFlattening">false</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum number of array items to flatten. inner array flattening. Adjust this property to control how many columns being generated. This option is ignored if you set EnableArrayFlattening=false"
                          expressionType="Notify"
                          name="MaxArrayItemsToFlatten">10</property>
                        <property
                          dataType="System.Int32"
                          description="Compression format for source file (e.g. gzip, zip)"
                          expressionType="Notify"
                          name="FileCompressionType"
                          typeConverter="ZappySys.Common.FileCompressionType, ZappySys.Common, Version=1.0.2018.11210, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                        <property
                          dataType="System.Int32"
                          description="Array Transformation you want to apply. Useful for case when you have 2-Dimensional arrays with rows/columns in separate arrays."
                          expressionType="Notify"
                          name="ArrayTransformationType"
                          typeConverter="ZappySys.Json.ArrayTransformType, ZappySys.Json, Version=1.0.2018.11210, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                        <property
                          dataType="System.String"
                          description="Filter expression to use to extract column names for array transformation."
                          expressionType="Notify"
                          name="ArrayTransColumnNameFilter"></property>
                        <property
                          dataType="System.String"
                          description="Filter expression for row values (Not applicable for simple array transformation)."
                          expressionType="Notify"
                          name="ArrayTransRowValueFilter"></property>
                        <property
                          dataType="System.Boolean"
                          description="When you have 2D array but don't have column list specified in a separate array then use this option (e.g. { arr: [[10,11],[21,22]] } )."
                          expressionType="Notify"
                          name="ArrayTransEnableCustomColumns">false</property>
                        <property
                          dataType="System.String"
                          description="When you have 2D array but don't have column list specified in a separate array then use specify column names here. Use comma separated list (e.g col1,col2,col3 ). Column name Order must match value order."
                          expressionType="Notify"
                          name="ArrayTransCustomColumns"></property>
                        <property
                          dataType="System.String"
                          description="Specifies how custom date formatted strings are parsed when reading JSON."
                          expressionType="Notify"
                          name="DateFormatString"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies how date formatted strings, e.g. Date(1198908717056) and 2012-03-21T05:40Z, are parsed when reading JSON."
                          expressionType="Notify"
                          name="DateParseHandling"
                          typeConverter="ZappySys.Common.DateParseHandling, ZappySys.Common, Version=1.0.2018.11210, Culture=neutral, PublicKeyToken=1903265a93eae502">1</property>
                        <property
                          dataType="System.Boolean"
                          description="Output as raw JSON document rather than parsing individual fields. This option is helpful if you have documents stored in a file and you want to pass them downstream as raw JSON string rather than parsing into columns."
                          expressionType="Notify"
                          name="OutputRawDocument">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indent JSON output so its easy to read."
                          expressionType="Notify"
                          name="IndentOutput">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to true if you want to output FilePath. This option is ignored when you consume DirectValue or data from Url rather than local files. Output column name will be __FilePath"
                          expressionType="Notify"
                          name="OutputFilePath">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to true if you want to output FileName. This option is ignored when you consume DirectValue or data from Url rather than local files. Output column name will be __FileName"
                          expressionType="Notify"
                          name="OutputFileName">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to true if you want to move processed file to archive folder."
                          expressionType="Notify"
                          name="EnableArchiveFile">false</property>
                        <property
                          dataType="System.String"
                          description="Folder path where you want to move processed file."
                          expressionType="Notify"
                          name="ArchiveFolderPath"></property>
                        <property
                          dataType="System.Boolean"
                          description="Folder path where you want to move processed file."
                          expressionType="Notify"
                          name="OverwriteFileInArchiveFolder">false</property>
                        <property
                          dataType="System.String"
                          description="File naming convention for archived file. By default it will same name as original source file processed. But you can control naming format using {%name%} and {%ext%} placeholders. e.g. {%name%}_processed{%ext%} or {%name%}{%ext%}.{{System::ContainerStartTime,yyyyMMdd_HHmmss_fff}}"
                          expressionType="Notify"
                          name="ArchiveFileNamingConvention"></property>
                        <property
                          dataType="System.Boolean"
                          description="When this property is true then Column is converted to Row. Pivoted names will appear under  Pivot_Name column and values will appear under Pivot_Value field."
                          expressionType="Notify"
                          name="EnablePivot">false</property>
                        <property
                          dataType="System.Int32"
                          description="Metadata scan mode controls how data type and length is determined. By default few records scanned to determine datatype/length. Changing ScanMode affects length/datatype accuracy."
                          expressionType="Notify"
                          name="MetaDataScanMode"
                          typeConverter="ZappySys.Common.Data.MetaDataScanMode, ZappySys.Common, Version=1.0.2018.11210, Culture=neutral, PublicKeyToken=1903265a93eae502">4</property>
                        <property
                          dataType="System.Int32"
                          description="Length for all string column. This option is only valid for MetaDataScanMode=Custom"
                          expressionType="Notify"
                          name="MetaDataCustomLength">1000</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.JsonSource</property>
                      </properties>
                      <outputs>
                        <output
                          refId="Package\Foreach migrated account\Metrics\Search metrics\Search metrics.Outputs[JsonSourceOutput]"
                          errorOrTruncationOperation="Error"
                          errorRowDisposition="FailComponent"
                          name="JsonSourceOutput"
                          truncationRowDisposition="FailComponent">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Foreach migrated account\Metrics\Search metrics\Search metrics.Outputs[JsonSourceOutput].Columns[_id]"
                              dataType="i4"
                              externalMetadataColumnId="Package\Foreach migrated account\Metrics\Search metrics\Search metrics.Outputs[JsonSourceOutput].ExternalColumns[_id]"
                              lineageId="Package\Foreach migrated account\Metrics\Search metrics\Search metrics.Outputs[JsonSourceOutput].Columns[_id]"
                              name="_id">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  description="This flag indicates column is locked so it doesn't refresh datatype automatically or column is manually added by user rather than auto detect"
                                  expressionType="Notify"
                                  name="ManuallyAdded">true</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach migrated account\Metrics\Search metrics\Search metrics.Outputs[JsonSourceOutput].Columns[is_enabled]"
                              dataType="bool"
                              externalMetadataColumnId="Package\Foreach migrated account\Metrics\Search metrics\Search metrics.Outputs[JsonSourceOutput].ExternalColumns[is_enabled]"
                              lineageId="Package\Foreach migrated account\Metrics\Search metrics\Search metrics.Outputs[JsonSourceOutput].Columns[is_enabled]"
                              name="is_enabled">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  description="This flag indicates column is locked so it doesn't refresh datatype automatically or column is manually added by user rather than auto detect"
                                  expressionType="Notify"
                                  name="ManuallyAdded">true</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach migrated account\Metrics\Search metrics\Search metrics.Outputs[JsonSourceOutput].Columns[is_hidden]"
                              dataType="bool"
                              externalMetadataColumnId="Package\Foreach migrated account\Metrics\Search metrics\Search metrics.Outputs[JsonSourceOutput].ExternalColumns[is_hidden]"
                              lineageId="Package\Foreach migrated account\Metrics\Search metrics\Search metrics.Outputs[JsonSourceOutput].Columns[is_hidden]"
                              name="is_hidden">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  description="This flag indicates column is locked so it doesn't refresh datatype automatically or column is manually added by user rather than auto detect"
                                  expressionType="Notify"
                                  name="ManuallyAdded">true</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach migrated account\Metrics\Search metrics\Search metrics.Outputs[JsonSourceOutput].Columns[name]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Foreach migrated account\Metrics\Search metrics\Search metrics.Outputs[JsonSourceOutput].ExternalColumns[name]"
                              length="1000"
                              lineageId="Package\Foreach migrated account\Metrics\Search metrics\Search metrics.Outputs[JsonSourceOutput].Columns[name]"
                              name="name">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  description="This flag indicates column is locked so it doesn't refresh datatype automatically or column is manually added by user rather than auto detect"
                                  expressionType="Notify"
                                  name="ManuallyAdded">true</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Metrics\Search metrics\Search metrics.Outputs[JsonSourceOutput].ExternalColumns[P_result_total]"
                              dataType="i8"
                              name="P_result_total" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Metrics\Search metrics\Search metrics.Outputs[JsonSourceOutput].ExternalColumns[P_result_viewstate_id]"
                              dataType="wstr"
                              length="1020"
                              name="P_result_viewstate_id" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Metrics\Search metrics\Search metrics.Outputs[JsonSourceOutput].ExternalColumns[P_error]"
                              dataType="wstr"
                              length="1020"
                              name="P_error" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Metrics\Search metrics\Search metrics.Outputs[JsonSourceOutput].ExternalColumns[account_id]"
                              dataType="i8"
                              name="account_id" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Metrics\Search metrics\Search metrics.Outputs[JsonSourceOutput].ExternalColumns[system_record_state]"
                              dataType="wstr"
                              length="24"
                              name="system_record_state" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Metrics\Search metrics\Search metrics.Outputs[JsonSourceOutput].ExternalColumns[system_ctime]"
                              dataType="i8"
                              name="system_ctime" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Metrics\Search metrics\Search metrics.Outputs[JsonSourceOutput].ExternalColumns[system_modtime]"
                              dataType="i8"
                              name="system_modtime" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Metrics\Search metrics\Search metrics.Outputs[JsonSourceOutput].ExternalColumns[description]"
                              dataType="wstr"
                              length="264"
                              name="description" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Metrics\Search metrics\Search metrics.Outputs[JsonSourceOutput].ExternalColumns[condition.code]"
                              dataType="nText"
                              name="condition.code" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Metrics\Search metrics\Search metrics.Outputs[JsonSourceOutput].ExternalColumns[is_enabled]"
                              dataType="i8"
                              name="is_enabled" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Metrics\Search metrics\Search metrics.Outputs[JsonSourceOutput].ExternalColumns[is_attribution_selection_required]"
                              dataType="wstr"
                              length="80"
                              name="is_attribution_selection_required" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Metrics\Search metrics\Search metrics.Outputs[JsonSourceOutput].ExternalColumns[extra_data.code]"
                              dataType="nText"
                              name="extra_data.code" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Metrics\Search metrics\Search metrics.Outputs[JsonSourceOutput].ExternalColumns[etag]"
                              dataType="wstr"
                              length="52"
                              name="etag" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Metrics\Search metrics\Search metrics.Outputs[JsonSourceOutput].ExternalColumns[system_modified_user.id]"
                              dataType="wstr"
                              length="20"
                              name="system_modified_user.id" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Metrics\Search metrics\Search metrics.Outputs[JsonSourceOutput].ExternalColumns[system_modified_user._name]"
                              dataType="wstr"
                              length="100"
                              name="system_modified_user._name" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Metrics\Search metrics\Search metrics.Outputs[JsonSourceOutput].ExternalColumns[system_modified_user._first_name]"
                              dataType="wstr"
                              length="48"
                              name="system_modified_user._first_name" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Metrics\Search metrics\Search metrics.Outputs[JsonSourceOutput].ExternalColumns[system_modified_user._last_name]"
                              dataType="wstr"
                              length="48"
                              name="system_modified_user._last_name" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Metrics\Search metrics\Search metrics.Outputs[JsonSourceOutput].ExternalColumns[system_modified_user._email_address]"
                              dataType="wstr"
                              length="124"
                              name="system_modified_user._email_address" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Metrics\Search metrics\Search metrics.Outputs[JsonSourceOutput].ExternalColumns[system_created_user.id]"
                              dataType="wstr"
                              length="20"
                              name="system_created_user.id" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Metrics\Search metrics\Search metrics.Outputs[JsonSourceOutput].ExternalColumns[system_created_user._name]"
                              dataType="wstr"
                              length="100"
                              name="system_created_user._name" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Metrics\Search metrics\Search metrics.Outputs[JsonSourceOutput].ExternalColumns[system_created_user._first_name]"
                              dataType="wstr"
                              length="48"
                              name="system_created_user._first_name" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Metrics\Search metrics\Search metrics.Outputs[JsonSourceOutput].ExternalColumns[system_created_user._last_name]"
                              dataType="wstr"
                              length="48"
                              name="system_created_user._last_name" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Metrics\Search metrics\Search metrics.Outputs[JsonSourceOutput].ExternalColumns[system_created_user._email_address]"
                              dataType="wstr"
                              length="120"
                              name="system_created_user._email_address" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Metrics\Search metrics\Search metrics.Outputs[JsonSourceOutput].ExternalColumns[library.id]"
                              dataType="wstr"
                              length="4"
                              name="library.id" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Metrics\Search metrics\Search metrics.Outputs[JsonSourceOutput].ExternalColumns[service.id]"
                              dataType="wstr"
                              length="76"
                              name="service.id" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Metrics\Search metrics\Search metrics.Outputs[JsonSourceOutput].ExternalColumns[service.text]"
                              dataType="wstr"
                              length="80"
                              name="service.text" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Metrics\Search metrics\Search metrics.Outputs[JsonSourceOutput].ExternalColumns[service_trigger.id]"
                              dataType="wstr"
                              length="64"
                              name="service_trigger.id" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Metrics\Search metrics\Search metrics.Outputs[JsonSourceOutput].ExternalColumns[service_trigger.text]"
                              dataType="wstr"
                              length="64"
                              name="service_trigger.text" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Metrics\Search metrics\Search metrics.Outputs[JsonSourceOutput].ExternalColumns[is_hidden]"
                              dataType="wstr"
                              length="1020"
                              name="is_hidden" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Metrics\Search metrics\Search metrics.Outputs[JsonSourceOutput].ExternalColumns[_id]"
                              dataType="i4"
                              name="_id">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  description="This flag indicates column is locked so it doesn't refresh datatype automatically or column is manually added by user rather than auto detect"
                                  expressionType="Notify"
                                  name="ManuallyAdded">true</property>
                              </properties>
                            </externalMetadataColumn>
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Metrics\Search metrics\Search metrics.Outputs[JsonSourceOutput].ExternalColumns[__FileName]"
                              dataType="wstr"
                              length="600"
                              name="__FileName" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Metrics\Search metrics\Search metrics.Outputs[JsonSourceOutput].ExternalColumns[name]"
                              dataType="i4"
                              name="name" />
                          </externalMetadataColumns>
                        </output>
                        <output
                          refId="Package\Foreach migrated account\Metrics\Search metrics\Search metrics.Outputs[JsonSource Error Output]"
                          isErrorOut="true"
                          name="JsonSource Error Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Foreach migrated account\Metrics\Search metrics\Search metrics.Outputs[JsonSource Error Output].Columns[_id]"
                              dataType="i4"
                              lineageId="Package\Foreach migrated account\Metrics\Search metrics\Search metrics.Outputs[JsonSource Error Output].Columns[_id]"
                              name="_id" />
                            <outputColumn
                              refId="Package\Foreach migrated account\Metrics\Search metrics\Search metrics.Outputs[JsonSource Error Output].Columns[is_enabled]"
                              dataType="bool"
                              lineageId="Package\Foreach migrated account\Metrics\Search metrics\Search metrics.Outputs[JsonSource Error Output].Columns[is_enabled]"
                              name="is_enabled" />
                            <outputColumn
                              refId="Package\Foreach migrated account\Metrics\Search metrics\Search metrics.Outputs[JsonSource Error Output].Columns[is_hidden]"
                              dataType="bool"
                              lineageId="Package\Foreach migrated account\Metrics\Search metrics\Search metrics.Outputs[JsonSource Error Output].Columns[is_hidden]"
                              name="is_hidden" />
                            <outputColumn
                              refId="Package\Foreach migrated account\Metrics\Search metrics\Search metrics.Outputs[JsonSource Error Output].Columns[name]"
                              dataType="wstr"
                              length="1000"
                              lineageId="Package\Foreach migrated account\Metrics\Search metrics\Search metrics.Outputs[JsonSource Error Output].Columns[name]"
                              name="name" />
                            <outputColumn
                              refId="Package\Foreach migrated account\Metrics\Search metrics\Search metrics.Outputs[JsonSource Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Foreach migrated account\Metrics\Search metrics\Search metrics.Outputs[JsonSource Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Foreach migrated account\Metrics\Search metrics\Search metrics.Outputs[JsonSource Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Foreach migrated account\Metrics\Search metrics\Search metrics.Outputs[JsonSource Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                            <outputColumn
                              refId="Package\Foreach migrated account\Metrics\Search metrics\Search metrics.Outputs[JsonSource Error Output].Columns[ErrorColumnName]"
                              codePage="1252"
                              dataType="str"
                              length="128"
                              lineageId="Package\Foreach migrated account\Metrics\Search metrics\Search metrics.Outputs[JsonSource Error Output].Columns[ErrorColumnName]"
                              name="ErrorColumnName" />
                            <outputColumn
                              refId="Package\Foreach migrated account\Metrics\Search metrics\Search metrics.Outputs[JsonSource Error Output].Columns[ErrorMessage]"
                              dataType="wstr"
                              length="1024"
                              lineageId="Package\Foreach migrated account\Metrics\Search metrics\Search metrics.Outputs[JsonSource Error Output].Columns[ErrorMessage]"
                              name="ErrorMessage" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                  </components>
                  <paths>
                    <path
                      refId="Package\Foreach migrated account\Metrics\Search metrics.Paths[disabled]"
                      endId="Package\Foreach migrated account\Metrics\Search metrics\Create disabled list.Inputs[Input 0]"
                      name="disabled"
                      startId="Package\Foreach migrated account\Metrics\Search metrics\Enabled split.Outputs[disabled]" />
                    <path
                      refId="Package\Foreach migrated account\Metrics\Search metrics.Paths[enabled]"
                      endId="Package\Foreach migrated account\Metrics\Search metrics\Create enabled list.Inputs[Input 0]"
                      name="enabled"
                      startId="Package\Foreach migrated account\Metrics\Search metrics\Enabled split.Outputs[enabled]" />
                    <path
                      refId="Package\Foreach migrated account\Metrics\Search metrics.Paths[hidden]"
                      endId="Package\Foreach migrated account\Metrics\Search metrics\Create hidden list.Inputs[Input 0]"
                      name="hidden"
                      startId="Package\Foreach migrated account\Metrics\Search metrics\Hidden split.Outputs[hidden]" />
                    <path
                      refId="Package\Foreach migrated account\Metrics\Search metrics.Paths[JsonSourceOutput]"
                      endId="Package\Foreach migrated account\Metrics\Search metrics\Remove invalid chars from name.Inputs[Input 0]"
                      name="JsonSourceOutput"
                      startId="Package\Foreach migrated account\Metrics\Search metrics\Search metrics.Outputs[JsonSourceOutput]" />
                    <path
                      refId="Package\Foreach migrated account\Metrics\Search metrics.Paths[Multicast Output 1]"
                      endId="Package\Foreach migrated account\Metrics\Search metrics\Enabled split.Inputs[Conditional Split Input]"
                      name="Multicast Output 1"
                      startId="Package\Foreach migrated account\Metrics\Search metrics\Multicast.Outputs[Multicast Output 1]" />
                    <path
                      refId="Package\Foreach migrated account\Metrics\Search metrics.Paths[Multicast Output 2]"
                      endId="Package\Foreach migrated account\Metrics\Search metrics\Hidden split.Inputs[Conditional Split Input]"
                      name="Multicast Output 2"
                      startId="Package\Foreach migrated account\Metrics\Search metrics\Multicast.Outputs[Multicast Output 2]" />
                    <path
                      refId="Package\Foreach migrated account\Metrics\Search metrics.Paths[Output 0]"
                      endId="Package\Foreach migrated account\Metrics\Search metrics\Multicast.Inputs[Multicast Input 1]"
                      name="Output 0"
                      startId="Package\Foreach migrated account\Metrics\Search metrics\Remove invalid chars from name.Outputs[Output 0]" />
                    <path
                      refId="Package\Foreach migrated account\Metrics\Search metrics.Paths[visible]"
                      endId="Package\Foreach migrated account\Metrics\Search metrics\Create visible list.Inputs[Input 0]"
                      name="visible"
                      startId="Package\Foreach migrated account\Metrics\Search metrics\Hidden split.Outputs[visible]" />
                  </paths>
                </pipeline>
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Foreach migrated account\Metrics.PrecedenceConstraints[Constraint]"
              DTS:CreationName=""
              DTS:DTSID="{AB407B96-3800-4117-9FFD-98DD3E9CC3F4}"
              DTS:From="Package\Foreach migrated account\Metrics\Search metrics"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint"
              DTS:To="Package\Foreach migrated account\Metrics\Form json" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Foreach migrated account\Metrics.PrecedenceConstraints[Constraint 1]"
              DTS:CreationName=""
              DTS:DTSID="{B30DF311-FDA4-4F37-B148-AA000249B3DE}"
              DTS:From="Package\Foreach migrated account\Metrics\Form json"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 1"
              DTS:To="Package\Foreach migrated account\Metrics\Insert to db" />
          </DTS:PrecedenceConstraints>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach migrated account\Workflows"
          DTS:CreationName="STOCK:SEQUENCE"
          DTS:Description="Sequence Container"
          DTS:DTSID="{4A3B4906-9C9C-40F9-A27F-2076353826FE}"
          DTS:ExecutableType="STOCK:SEQUENCE"
          DTS:LocaleID="-1"
          DTS:ObjectName="Workflows">
          <DTS:Variables />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Foreach migrated account\Workflows\Form json"
              DTS:CreationName="Microsoft.ExpressionTask"
              DTS:Description="Expression Task"
              DTS:DTSID="{F937FB1E-9D02-42FD-A356-F19E123D6C30}"
              DTS:ExecutableType="Microsoft.ExpressionTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Form json"
              DTS:ThreadHint="2">
              <DTS:Variables />
              <DTS:ObjectData>
                <ExpressionTask
                  Expression="@[User::Workflow_Json] = &quot;{&quot; + @[User::Workflow_Enabled] + &quot;, &quot; + @[User::Workflow_Disabled] + &quot;, &quot; + @[User::Workflow_Hidden] + &quot;, &quot; + @[User::Workflow_Visible] + &quot;}&quot;" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Foreach migrated account\Workflows\Insert to db"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{4477016D-7289-4C05-9E9D-649631026976}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Insert to db"
              DTS:ThreadHint="2">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{308E9EC4-EE59-4D5B-9275-9EC80ADF1BC9}"
                  SQLTask:SqlStatementSource="INSERT INTO AccountSettingsLog&#xA;(account_id, date, type, settings_json)&#xA;VALUES (?, CAST(GETDATE() AS DATE), 'workflow', ?)" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="0"
                    SQLTask:DtsVariableName="User::RexAccountID"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="3"
                    SQLTask:ParameterSize="-1" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="1"
                    SQLTask:DtsVariableName="User::Workflow_Json"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="129"
                    SQLTask:ParameterSize="-1" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Foreach migrated account\Workflows\Search workflows"
              DTS:CreationName="Microsoft.Pipeline"
              DTS:Description="Data Flow Task"
              DTS:DTSID="{3f718862-e3f3-47bb-b5a0-f06a76b9d6e2}"
              DTS:ExecutableType="Microsoft.Pipeline"
              DTS:LocaleID="-1"
              DTS:ObjectName="Search workflows"
              DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:ObjectData>
                <pipeline
                  version="1">
                  <components>
                    <component
                      refId="Package\Foreach migrated account\Workflows\Search workflows\Create disabled list"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;10"
                      description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                      name="Create disabled list"
                      version="10">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Stores the source code of the component"
                          isArray="true"
                          name="SourceCode"
                          state="cdata">
                          <arrayElements
                            arrayElementCount="30">
                            <arrayElement
                              dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String WorkflowDisabled
    {
        get
        {
            return (String)(ParentComponent.ReadWriteVariables["Workflow_Disabled"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
        set
        {
            ParentComponent.ReadWriteVariables["Workflow_Disabled"].Value = value;
        }
    }

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using System.Linq;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    private string workflow_disabled { get; set; }
    private int stringLength { get; set; }

    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();

        workflow_disabled = "\"disabled\": [";
        stringLength = workflow_disabled.Length;
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();

        if (workflow_disabled.Length > stringLength)
        {
            Variables.WorkflowDisabled = string.Concat(workflow_disabled.Reverse().Skip(2).Reverse()) + "]";
        }
        else
        {
            Variables.WorkflowDisabled = workflow_disabled + "]";
        }
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer row)
    {
        workflow_disabled += "\"" + row.name + "\", ";
    }
}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String name
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
    }
    public bool name_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_129af6afd7624f06bd90f74a6a44c4cf.Properties.Settings.get_Default():SC_129af6afd7624f06bd90f74a6a44c4cf.Properties.Sett" +
    "ings")]

namespace SC_129af6afd7624f06bd90f74a6a44c4cf.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[SC_129af6afd7624f06bd90f74a6a44c4cf.csproj]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{a97efc58-d2ae-43b3-8644-a4fb47c52bb8}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_129af6afd7624f06bd90f74a6a44c4cf</RootNamespace>
    <AssemblyName>SC_129af6afd7624f06bd90f74a6a44c4cf</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_129af6afd7624f06bd90f74a6a44c4cf" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Project]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>SC_129af6afd7624f06bd90f74a6a44c4cf</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>SC_129af6afd7624f06bd90f74a6a44c4cf</msb:DisplayName>
		<msb:ProjectId>{B6DA67B9-AE27-43B1-A18D-8B4A39903372}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_129af6afd7624f06bd90f74a6a44c4cf.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_129af6afd7624f06bd90f74a6a44c4cf")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_129af6afd7624f06bd90f74a6a44c4cf")]
[assembly: AssemblyCopyright("Copyright @  2020")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_129af6afd7624f06bd90f74a6a44c4cf.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_129af6afd7624f06bd90f74a6a44c4cf.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_129af6afd7624f06bd90f74a6a44c4cf.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_129af6afd7624f06bd90f74a6a44c4cf.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_129af6afd7624f06bd90f74a6a44c4cf.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                          </arrayElements>
                        </property>
                        <property
                          dataType="System.String"
                          description="Stores the binary representation of the component"
                          isArray="true"
                          name="BinaryCode"
                          state="cdata">
                          <arrayElements
                            arrayElementCount="2">
                            <arrayElement
                              dataType="System.String"><![CDATA[SC_129af6afd7624f06bd90f74a6a44c4cf.dll]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAGDQV14AAAAAAAAAAOAAIiALATAAABYAAAAIAAAAAAAAWjUA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAAg1AABPAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAYBUAAAAgAAAAFgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAAYAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAA8
NQAAAAAAAEgAAAACAAUAiCIAAMgRAAABAAAAAAAAAFA0AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CewEAAAQqIgIDfQEAAAQqHgJ7AgAABCoiAgN9AgAABCqO
AigQAAAKAnIBAABwKAIAAAYCAigBAAAGbxEAAAooBAAABioAABMwAwBmAAAAAAAAAAIoEgAACgIo
AQAABm8RAAAKAigDAAAGMTECewQAAAQCKAEAAAYoAQAAKxgoAgAAKygBAAArKAMAACtyHQAAcCgW
AAAKbxUAAAYqAnsEAAAEAigBAAAGch0AAHAoFgAACm8VAAAGKooCAigBAAAGciEAAHADbwoAAAZy
JQAAcCgXAAAKKAIAAAYqHgIoDgAABioqAgMEBSgYAAAKKlICexkAAAoCexoAAAoWlG8bAAAKKiIC
FigcAAAKKh4CKB0AAAoqHgIoHgAACip+AigfAAAKAgJzEgAABn0DAAAEAgJzEwAABn0EAAAEKpIE
ci0AAHAabyAAAAosFQIFAgMoIQAACg4EcwkAAAZvEAAABipKKwcCA28RAAAGA28MAAAGLfEqBio6
AigiAAAKAgN9BQAABCo6AigiAAAKAgN9BgAABCqWAnsGAAAEbyMAAApyPQAAcG8kAAAKKCUAAApv
JgAACnQaAAABKnICewYAAARvIwAACnI9AABwbyQAAAoDbycAAAoqHgIoIgAACiqufgcAAAQtHnJh
AABw0AcAAAIoKAAACm8pAAAKcyoAAAqABwAABH4HAAAEKhp+CAAABCoeAoAIAAAEKhp+CQAABCoe
AigrAAAKKi5zGwAABoAJAAAEKgBCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAACA
BgAAI34AAOwGAAD0BwAAI1N0cmluZ3MAAAAA4A4AANQAAAAjVVMAtA8AABAAAAAjR1VJRAAAAMQP
AAAEAgAAI0Jsb2IAAAAAAAAAAgAAAVcVoAEJCQAAAPoBMwAWAAABAAAAJAAAAAgAAAAJAAAAHAAA
ABAAAAArAAAAFgAAAAUAAAAIAAAADAAAAAEAAAAGAAAAAQAAAAMAAAAAAEUEAQAAAAAABgDhAs4F
BgB1A84FBgAtArsFDwBCBgAABgBaAs4EBgDEAs4EBgClAs4EBgBcA84EBgABA84EBgAaA84EBgBx
As4EBgCMAt4DCgA1A2YBBgD1Ac4FCgBlBWYBDgBWBWYBCgD9BGYBCgAcB2YBBgDfBoYEBgAQArsF
BgB2Be4FBgDxBLkEEgDgAS8EEgBBAi8EEgDAAaQEBgD7A4YEFgAkAT0FBgA6AGIABgDgBIYEGgAR
AIYFGgABAIYFSwCSBwAAGgAiAIYFBgCHAYYEBgAvAYYEBgDpB84EAAAAAEgAAAAAAAEAAQABABAA
mQQAABAAAQABAAEAEABJBQAAPQADAAkAAQAQAP4GAABJAAMADgABABAAzAYAAE0ABQASAAEAEACN
BgAATQAGABMAAAAQAPUFUQZNAAcAFgAAARAAvAZRBmUACQAaAAEA0wDQAAEA9gDTAAYAzAbWAAYA
jQbaAAEADAfeAAEADAfeABEAjQTiABEAsAHmABEAFAHqAFAgAAAAAIEIpwDuAAEAWCAAAAAAgQi9
ABAAAQBhIAAAAACBCA0EGwACAGkgAAAAAIEIHgQBAAIAciAAAAAAxgCTAwYAAwCYIAAAAADGAJ4D
BgADAAohAAAAAMYAwgfyAAMALSEAAAAAhhiuBQYABAA1IQAAAACGGK4FXQAEAEAhAAAAAIYIXQHu
AAcAVSEAAAAAhghtBHkABwBeIQAAAACGANkHeQAHAGYhAAAAAIYA5gZ5AAcAbiEAAAAAhhiuBQYA
BwCOIQAAAADGAHEH+AAHALMhAAAAAMYBagfyAAsAxiEAAAAAxgHCB/IADADIIQAAAACGGK4FAgEN
ANchAAAAAIYYrgUCAQ4A5iEAAAAAhgh9AO4ADwAMIgAAAACGCJIAEAAPACkiAAAAAIMYrgUGABAA
MSIAAAAAkwhyBQgBEABdIgAAAACTCJgBDQEQAGQiAAAAAJMIpAESARAAbCIAAAAAlgjyBhgBEQBz
IgAAAACGGK4FBgARAHsiAAAAAJEYtAUdAREAAAABALQDAAABALQDAAABAOEHAAABAGsFAAACAJcG
AAADAAsFAAABAFEAAAACAFMBAAADAGsFAAAEAAsFAAABAGsFAAABAN0HAAABACIHAAABACIHAAAB
ALQDAAABALQDCQCuBQEAEQCuBQYAGQCuBQoAKQCuBRAAMQCuBRAAOQCuBRAAQQCuBRAASQCuBRAA
UQCuBRAAWQCuBRAAYQCuBRAAaQCuBQYAcQCuBQYAoQCuBQYAwQCuBRUAkQCTAwYA0QACBBsAkQCe
AwYA2QDYAR8A2QA4BTMA0QDYBkQA0QDYBk8A0QDYBlUAeQCuBV0AeQBrBWcAeQCXBmsAgQD4A28A
eQB2BHQAeQDZB3kAeQDmBnkAkQCuBQYA0QDFBn0AkQCrBoQAmQCuBQYAkQCABooA8QB9BI8AkQCt
B5UA+QB+B5sA+QCqA6IAEQFBAacAEQHlB7AAqQCuBbYAyQCuBQYAIABrAP0BIQBrAP0BLgALADwB
LgATAEUBLgAbAGQBLgAjAG0BLgArAJYBLgAzAJYBLgA7AJYBLgBDAG0BLgBLAJwBLgBTAJYBLgBb
ALMBQABrAP0BQQBrAP0BQwBjAP0BYABrAP0BgABrAP0ByQB7AGQB4wBzAP0B6QB7AGQBIQFrAP0B
AgABAAMAAwAGAAUABwAGAAgACAAAAMEAIQEAACIEJQEAAGEBIQEAAHEEKQEAAJYAIQEAAHYFLQEA
ALgBMgEAAPYGNwECAAEAAwABAAIAAwACAAMABQABAAQABQACAAoABwACAAsACQACABQACwABABUA
CwACABcADQACABgADwABABkADwACABoAEQAEgAAAAQAAAAAAAAAAAAAAAAC6AwAABAAAAAAAAAAA
AAAAvgBZAAAAAAANAAAAAAAAAAAAAADHACwHAAAAAA0AAAAAAAAAAAAAAMcASQcAAAAABAAAAAAA
AAAAAAAAvgCGBAAAAAAEAAAAAAAAAAAAAAC+AIwBAAAAAA0AAAAAAAAAAAAAAMcAFQUAAAAAAAAA
AAEAAAD/BQAAJwAvACkALwArAC8AAAAAAABJRFRTVmFyaWFibGUxMDAASURUU1ZhcmlhYmxlczEw
MABJRFRTRXZhbHVhdG9yQ29udGV4dDEwMABJRW51bWVyYWJsZWAxADxNb2R1bGU+AElucHV0SUQA
bXNjb3JsaWIAU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMAZ2V0X1dvcmtmbG93RGlzYWJsZWQA
c2V0X1dvcmtmbG93RGlzYWJsZWQAZ2V0X3dvcmtmbG93X2Rpc2FibGVkAHNldF93b3JrZmxvd19k
aXNhYmxlZAA8d29ya2Zsb3dfZGlzYWJsZWQ+a19fQmFja2luZ0ZpZWxkADxzdHJpbmdMZW5ndGg+
a19fQmFja2luZ0ZpZWxkAGRlZmF1bHRJbnN0YW5jZQBFbnVtZXJhYmxlAFJ1bnRpbWVUeXBlSGFu
ZGxlAEdldFR5cGVGcm9tSGFuZGxlAElucHV0TmFtZQBnZXRfbmFtZQBNaWNyb3NvZnQuU3FsU2Vy
dmVyLkR0cy5QaXBlbGluZQBUeXBlAFN5c3RlbS5Db3JlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJl
AHJlc291cmNlQ3VsdHVyZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBSZXZlcnNlAEVkaXRvckJy
b3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNv
ZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUA
QXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRG
cmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5
RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3Nl
bWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1Njcmlw
dENvbXBvbmVudEVudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1
bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAFByZUV4ZWN1dGUAUG9zdEV4ZWN1dGUAc2V0X1Zh
bHVlAHZhbHVlAFNDXzEyOWFmNmFmZDc2MjRmMDZiZDkwZjc0YTZhNDRjNGNmAFN5c3RlbS5SdW50
aW1lLlZlcnNpb25pbmcAR2V0U3RyaW5nAGdldF9MZW5ndGgAZ2V0X3N0cmluZ0xlbmd0aABzZXRf
c3RyaW5nTGVuZ3RoAFN5c3RlbS5Db21wb25lbnRNb2RlbABTQ18xMjlhZjZhZmQ3NjI0ZjA2YmQ5
MGY3NGE2YTQ0YzRjZi5kbGwAZ2V0X25hbWVfSXNOdWxsAGdldF9JdGVtAFN5c3RlbQByZXNvdXJj
ZU1hbgBTY3JpcHRNYWluAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9u
AFN5c3RlbS5SZWZsZWN0aW9uAFN0cmluZ0NvbXBhcmlzb24AQ3VsdHVyZUluZm8AT3V0cHV0TmFt
ZU1hcABPdXRwdXRNYXAATWljcm9zb2Z0LlNxbFNlcnZlci5EVFNSdW50aW1lV3JhcABTa2lwAFN5
c3RlbS5MaW5xAElucHV0MEJ1ZmZlcgBQaXBlbGluZUJ1ZmZlcgBTY3JpcHRCdWZmZXIAZ2V0X1Jl
c291cmNlTWFuYWdlcgBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lLldyYXBwZXIALmN0
b3IALmNjdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZp
Y2VzAFN5c3RlbS5SZXNvdXJjZXMAU0NfMTI5YWY2YWZkNzYyNGYwNmJkOTBmNzRhNmE0NGM0Y2Yu
UHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAFNDXzEyOWFmNmFm
ZDc2MjRmMDZiZDkwZjc0YTZhNDRjNGNmLlByb3BlcnRpZXMAZ2V0X1JlYWRXcml0ZVZhcmlhYmxl
cwBCdWZmZXJDb2x1bW5JbmRleGVzAEdldENvbHVtbkluZGV4ZXMAU2V0dGluZ3MARXF1YWxzAENv
bm5lY3Rpb25zAENvbmNhdABPYmplY3QARW5kT2ZSb3dzZXQAZ2V0X0RlZmF1bHQAVXNlckNvbXBv
bmVudABQYXJlbnRDb21wb25lbnQAU2NyaXB0Q29tcG9uZW50AE1pY3Jvc29mdC5TcWxTZXJ2ZXIu
VHhTY3JpcHQATWljcm9zb2Z0LlNxbFNlcnZlci5QaXBlbGluZUhvc3QASW5wdXQwX1Byb2Nlc3NJ
bnB1dABHZXRWYWx1ZVdpdGhDb250ZXh0AFNjcmlwdENvbXBvbmVudEV2YWxDb250ZXh0AGdldF9F
dmFsdWF0b3JDb250ZXh0AElucHV0MF9Qcm9jZXNzSW5wdXRSb3cATmV4dFJvdwByb3cAZ2V0X0Fz
c2VtYmx5AAAAABsiAGQAaQBzAGEAYgBsAGUAZAAiADoAIABbAAADXQAAAyIAAAciACwAIAAAD0kA
bgBwAHUAdAAgADAAACNXAG8AcgBrAGYAbABvAHcAXwBEAGkAcwBhAGIAbABlAGQAAHFTAEMAXwAx
ADIAOQBhAGYANgBhAGYAZAA3ADYAMgA0AGYAMAA2AGIAZAA5ADAAZgA3ADQAYQA2AGEANAA0AGMA
NABjAGYALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAABdXKvDI9gf
QogcL21wT8AXAAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARFdAyAACA8QAQEVEnEBHgAVEnEBHgAD
CgEDEBABAhUScQEeABUScQEeAAgKEAEBDhUScQEeAAUAAg4ODgcABA4ODg4OCSADARJBHQgSRQMG
EkEDBh0IBCABDggEIAECCAMgAAIGIAICDhF1BSABHQgIBCAAEnkFIAESfRwFAAASgIEGIAEcEoCF
BCABARwIAAESgIkRgI0FIAASgJEHIAIBDhKAkQi3elxWGTTgiQiJhF3NgIDMkQIGDgIGCAMGEhQD
BhIYAwYSSQMGElUDBhJZAwYSIAMgAA4FIAEBEgwJIAQBCA4SQRJFBSABARJJBAAAElUEAAASWQUA
AQESWQQAABIgAwAAAQMoAA4DKAAIAygAAgQIABJVBAgAElkECAASIAgBAAgAAAAAAB4BAAEAVAIW
V3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU0NfMTI5YWY2YWZkNzYyNGYwNmJk
OTBmNzRhNmE0NGM0Y2YAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAyMAAASQEAGi5ORVRGcmFt
ZXdvcmssVmVyc2lvbj12NC41AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29y
ayA0LjUEAQAAAAAAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVh
ZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tl
eVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VT
ZXQCAAAAAAAAAAAAAABQQURQQURQtAAAADA1AAAAAAAAAAAAAEo1AAAAIAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAA8NQAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABI
AAAAWEAAAOwDAAAAAAAAAAAAAOwDNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAA
AAC9BO/+AAABAAAAAQAAAAAAAAABAAAAAAA/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAA
AAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4A
AAAAAAAAsARMAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAAoAwAAAQAwADAAMAAw
ADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4A
eQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAA
AFMAQwBfADEAMgA5AGEAZgA2AGEAZgBkADcANgAyADQAZgAwADYAYgBkADkAMABmADcANABhADYA
YQA0ADQAYwA0AGMAZgAAADAACAABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgAw
AC4AMAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8AMQAyADkAYQBmADYA
YQBmAGQANwA2ADIANABmADAANgBiAGQAOQAwAGYANwA0AGEANgBhADQANABjADQAYwBmAC4AZABs
AGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgA
dAAgAEAAIAAgADIAMAAyADAAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAA
AAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAEMAXwAxADIA
OQBhAGYANgBhAGYAZAA3ADYAMgA0AGYAMAA2AGIAZAA5ADAAZgA3ADQAYQA2AGEANAA0AGMANABj
AGYALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBDAF8AMQAyADkA
YQBmADYAYQBmAGQANwA2ADIANABmADAANgBiAGQAOQAwAGYANwA0AGEANgBhADQANABjADQAYwBm
AAAANAAIAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAADgA
CAABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAABcNQAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=]]></arrayElement>
                          </arrayElements>
                        </property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                          name="VSTAProjectName"
                          typeConverter="NOTBROWSABLE">SC_129af6afd7624f06bd90f74a6a44c4cf</property>
                        <property
                          dataType="System.String"
                          description="Specifies the programming language used by the script."
                          name="ScriptLanguage"
                          typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                        <property
                          dataType="System.String"
                          description="Specifies a comma-separated list of read-only variables."
                          name="ReadOnlyVariables"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                        <property
                          dataType="System.String"
                          description="Specifies a comma-separated list of read/write variables."
                          name="ReadWriteVariables"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg">User::Workflow_Disabled</property>
                        <property
                          dataType="System.String"
                          description="List of breakpoints present on the script."
                          isArray="true"
                          name="BreakpointCollection"
                          typeConverter="NOTBROWSABLE">
                          <arrayElements
                            arrayElementCount="0" />
                        </property>
                        <property
                          dataType="System.String"
                          description="Checksum to match component metedata against compiled codes."
                          name="MetadataChecksum"
                          typeConverter="NOTBROWSABLE">d62db01565abcc827900a458cfa1627a</property>
                        <property
                          dataType="System.String"
                          description="Checksum to match component metedata against compiled codes."
                          name="MetadataShaChecksum"
                          typeConverter="NOTBROWSABLE">609b8d80cd92f4958665ccc133ff17dab0955468</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Foreach migrated account\Workflows\Search workflows\Create disabled list.Inputs[Input 0]"
                          hasSideEffects="true"
                          name="Input 0">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Foreach migrated account\Workflows\Search workflows\Create disabled list.Inputs[Input 0].Columns[name]"
                              cachedDataType="wstr"
                              cachedLength="1000"
                              cachedName="name"
                              lineageId="Package\Foreach migrated account\Workflows\Search workflows\Search workflows.Outputs[JsonSourceOutput].Columns[name]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Foreach migrated account\Workflows\Search workflows\Create disabled list.Outputs[Output 0]"
                          name="Output 0"
                          synchronousInputId="Package\Foreach migrated account\Workflows\Search workflows\Create disabled list.Inputs[Input 0]">
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Foreach migrated account\Workflows\Search workflows\Create enabled list"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;10"
                      description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                      name="Create enabled list"
                      version="10">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Stores the source code of the component"
                          isArray="true"
                          name="SourceCode"
                          state="cdata">
                          <arrayElements
                            arrayElementCount="30">
                            <arrayElement
                              dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String WorkflowEnabled
    {
        get
        {
            return (String)(ParentComponent.ReadWriteVariables["Workflow_Enabled"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
        set
        {
            ParentComponent.ReadWriteVariables["Workflow_Enabled"].Value = value;
        }
    }

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[ #region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using System.Linq;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    private string workflow_enabled { get; set; }
    private int stringLength { get; set; }
     
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();

        workflow_enabled = "\"enabled\": [";
        stringLength = workflow_enabled.Length;
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();

        if (workflow_enabled.Length > stringLength)
        {
            Variables.WorkflowEnabled = string.Concat(workflow_enabled.Reverse().Skip(2).Reverse()) + "]";
        }
        else
        {
            Variables.WorkflowEnabled = workflow_enabled + "]";
        }
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer row)
    {
        workflow_enabled += "\"" + row.name + "\", ";
    }
}]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String name
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
    }
    public bool name_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_69f1e3baec5249569eb4f2a90b6f557f.Properties.Settings.get_Default():SC_69f1e3baec5249569eb4f2a90b6f557f.Properties.Sett" +
    "ings")]

namespace SC_69f1e3baec5249569eb4f2a90b6f557f.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[SC_69f1e3baec5249569eb4f2a90b6f557f.csproj]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{a9269ce2-e241-4d74-ba6d-d4115a6fd654}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_69f1e3baec5249569eb4f2a90b6f557f</RootNamespace>
    <AssemblyName>SC_69f1e3baec5249569eb4f2a90b6f557f</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_69f1e3baec5249569eb4f2a90b6f557f" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Project]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>SC_69f1e3baec5249569eb4f2a90b6f557f</msb:CodeName>
		<msb:DisplayName>SC_69f1e3baec5249569eb4f2a90b6f557f</msb:DisplayName>
		<msb:ProjectId>{951AE5A3-FF51-44A7-B676-0DE07F2CEAFF}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_69f1e3baec5249569eb4f2a90b6f557f.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_69f1e3baec5249569eb4f2a90b6f557f")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_69f1e3baec5249569eb4f2a90b6f557f")]
[assembly: AssemblyCopyright("Copyright @  2020")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_69f1e3baec5249569eb4f2a90b6f557f.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_69f1e3baec5249569eb4f2a90b6f557f.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_69f1e3baec5249569eb4f2a90b6f557f.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_69f1e3baec5249569eb4f2a90b6f557f.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_69f1e3baec5249569eb4f2a90b6f557f.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                          </arrayElements>
                        </property>
                        <property
                          dataType="System.String"
                          description="Stores the binary representation of the component"
                          isArray="true"
                          name="BinaryCode"
                          state="cdata">
                          <arrayElements
                            arrayElementCount="2">
                            <arrayElement
                              dataType="System.String"><![CDATA[SC_69f1e3baec5249569eb4f2a90b6f557f.dll]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAB7QV14AAAAAAAAAAOAAIiALATAAABYAAAAIAAAAAAAAUjUA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAAA1AABPAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAWBUAAAAgAAAAFgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAAYAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAA0
NQAAAAAAAEgAAAACAAUAiCIAAMARAAABAAAAAAAAAEg0AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CewEAAAQqIgIDfQEAAAQqHgJ7AgAABCoiAgN9AgAABCqO
AigQAAAKAnIBAABwKAIAAAYCAigBAAAGbxEAAAooBAAABioAABMwAwBmAAAAAAAAAAIoEgAACgIo
AQAABm8RAAAKAigDAAAGMTECewQAAAQCKAEAAAYoAQAAKxgoAgAAKygBAAArKAMAACtyGwAAcCgW
AAAKbxUAAAYqAnsEAAAEAigBAAAGchsAAHAoFgAACm8VAAAGKooCAigBAAAGch8AAHADbwoAAAZy
IwAAcCgXAAAKKAIAAAYqHgIoDgAABioqAgMEBSgYAAAKKlICexkAAAoCexoAAAoWlG8bAAAKKiIC
FigcAAAKKh4CKB0AAAoqHgIoHgAACip+AigfAAAKAgJzEgAABn0DAAAEAgJzEwAABn0EAAAEKpIE
cisAAHAabyAAAAosFQIFAgMoIQAACg4EcwkAAAZvEAAABipKKwcCA28RAAAGA28MAAAGLfEqBio6
AigiAAAKAgN9BQAABCo6AigiAAAKAgN9BgAABCqWAnsGAAAEbyMAAApyOwAAcG8kAAAKKCUAAApv
JgAACnQaAAABKnICewYAAARvIwAACnI7AABwbyQAAAoDbycAAAoqHgIoIgAACiqufgcAAAQtHnJd
AABw0AcAAAIoKAAACm8pAAAKcyoAAAqABwAABH4HAAAEKhp+CAAABCoeAoAIAAAEKhp+CQAABCoe
AigrAAAKKi5zGwAABoAJAAAEKgBCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAACA
BgAAI34AAOwGAADwBwAAI1N0cmluZ3MAAAAA3A4AANAAAAAjVVMArA8AABAAAAAjR1VJRAAAALwP
AAAEAgAAI0Jsb2IAAAAAAAAAAgAAAVcVoAEJCQAAAPoBMwAWAAABAAAAJAAAAAgAAAAJAAAAHAAA
ABAAAAArAAAAFgAAAAUAAAAIAAAADAAAAAEAAAAGAAAAAQAAAAMAAAAAAEAEAQAAAAAABgDcAskF
BgBwA8kFBgAoArYFDwA9BgAABgBVAskEBgC/AskEBgCgAskEBgBXA8kEBgD8AskEBgAVA8kEBgBs
AskEBgCHAtkDCgAwA2EBBgDwAckFCgBgBWEBDgBRBWEBCgD4BGEBCgAXB2EBBgDaBoEEBgALArYF
BgBxBekFBgDsBLQEEgDbASoEEgA8AioEEgC7AZ8EBgD2A4EEFgAfATgFBgA6AGIABgDbBIEEGgAR
AIEFGgABAIEFSwCNBwAAGgAiAIEFBgCCAYEEBgAqAYEEBgDkB8kEAAAAAEgAAAAAAAEAAQABABAA
lAQAABAAAQABAAEAEABEBQAAPQADAAkAAQAQAPkGAABJAAMADgABABAAxwYAAE0ABQASAAEAEACI
BgAATQAGABMAAAAQAPAFTAZNAAcAFgAAARAAtwZMBmUACQAaAAEAzwDQAAEA8QDTAAYAxwbWAAYA
iAbaAAEABwfeAAEABwfeABEAiATiABEAqwHmABEADwHqAFAgAAAAAIEIpQDuAAEAWCAAAAAAgQi6
ABAAAQBhIAAAAACBCAgEGwACAGkgAAAAAIEIGQQBAAIAciAAAAAAxgCOAwYAAwCYIAAAAADGAJkD
BgADAAohAAAAAMYAvQfyAAMALSEAAAAAhhipBQYABAA1IQAAAACGGKkFXQAEAEAhAAAAAIYIWAHu
AAcAVSEAAAAAhghoBHkABwBeIQAAAACGANQHeQAHAGYhAAAAAIYA4QZ5AAcAbiEAAAAAhhipBQYA
BwCOIQAAAADGAGwH+AAHALMhAAAAAMYBZQfyAAsAxiEAAAAAxgG9B/IADADIIQAAAACGGKkFAgEN
ANchAAAAAIYYqQUCAQ4A5iEAAAAAhgh9AO4ADwAMIgAAAACGCJEAEAAPACkiAAAAAIMYqQUGABAA
MSIAAAAAkwhtBQgBEABdIgAAAACTCJMBDQEQAGQiAAAAAJMInwESARAAbCIAAAAAlgjtBhgBEQBz
IgAAAACGGKkFBgARAHsiAAAAAJEYrwUdAREAAAABAK8DAAABAK8DAAABANwHAAABAGYFAAACAJIG
AAADAAYFAAABAFEAAAACAE4BAAADAGYFAAAEAAYFAAABAGYFAAABANgHAAABAB0HAAABAB0HAAAB
AK8DAAABAK8DCQCpBQEAEQCpBQYAGQCpBQoAKQCpBRAAMQCpBRAAOQCpBRAAQQCpBRAASQCpBRAA
UQCpBRAAWQCpBRAAYQCpBRAAaQCpBQYAcQCpBQYAoQCpBQYAwQCpBRUAkQCOAwYA0QD9AxsAkQCZ
AwYA2QDTAR8A2QAzBTMA0QDTBkQA0QDTBk8A0QDTBlUAeQCpBV0AeQBmBWcAeQCSBmsAgQDzA28A
eQBxBHQAeQDUB3kAeQDhBnkAkQCpBQYA0QDABn0AkQCmBoQAmQCpBQYAkQB7BooA8QB4BI8AkQCo
B5UA+QB5B5sA+QClA6IAEQE8AacAEQHgB7AAqQCpBbYAyQCpBQYAIABrAP0BIQBrAP0BLgALADwB
LgATAEUBLgAbAGQBLgAjAG0BLgArAJYBLgAzAJYBLgA7AJYBLgBDAG0BLgBLAJwBLgBTAJYBLgBb
ALMBQABrAP0BQQBrAP0BQwBjAP0BYABrAP0BgABrAP0ByQB7AGQB4wBzAP0B6QB7AGQBIQFrAP0B
AgABAAMAAwAGAAUABwAGAAgACAAAAL4AIQEAAB0EJQEAAFwBIQEAAGwEKQEAAJUAIQEAAHEFLQEA
ALMBMgEAAPEGNwECAAEAAwABAAIAAwACAAMABQABAAQABQACAAoABwACAAsACQACABQACwABABUA
CwACABcADQACABgADwABABkADwACABoAEQAEgAAAAQAAAAAAAAAAAAAAAAC1AwAABAAAAAAAAAAA
AAAAvgBZAAAAAAANAAAAAAAAAAAAAADHACcHAAAAAA0AAAAAAAAAAAAAAMcARAcAAAAABAAAAAAA
AAAAAAAAvgCBBAAAAAAEAAAAAAAAAAAAAAC+AIcBAAAAAA0AAAAAAAAAAAAAAMcAEAUAAAAAAAAA
AAEAAAD6BQAAJwAvACkALwArAC8AAAAAAABJRFRTVmFyaWFibGUxMDAASURUU1ZhcmlhYmxlczEw
MABJRFRTRXZhbHVhdG9yQ29udGV4dDEwMABJRW51bWVyYWJsZWAxADxNb2R1bGU+AElucHV0SUQA
bXNjb3JsaWIAU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMAZ2V0X1dvcmtmbG93RW5hYmxlZABz
ZXRfV29ya2Zsb3dFbmFibGVkAGdldF93b3JrZmxvd19lbmFibGVkAHNldF93b3JrZmxvd19lbmFi
bGVkADx3b3JrZmxvd19lbmFibGVkPmtfX0JhY2tpbmdGaWVsZAA8c3RyaW5nTGVuZ3RoPmtfX0Jh
Y2tpbmdGaWVsZABkZWZhdWx0SW5zdGFuY2UARW51bWVyYWJsZQBSdW50aW1lVHlwZUhhbmRsZQBH
ZXRUeXBlRnJvbUhhbmRsZQBJbnB1dE5hbWUAZ2V0X25hbWUATWljcm9zb2Z0LlNxbFNlcnZlci5E
dHMuUGlwZWxpbmUAVHlwZQBTeXN0ZW0uQ29yZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNv
dXJjZUN1bHR1cmUAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UAUmV2ZXJzZQBFZGl0b3JCcm93c2Fi
bGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0
cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2Vt
Ymx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3
b3JrQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2Ny
aXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQ
cm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRDb21w
b25lbnRFbnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1l
Q29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBQcmVFeGVjdXRlAFBvc3RFeGVjdXRlAHNldF9WYWx1ZQB2
YWx1ZQBTQ182OWYxZTNiYWVjNTI0OTU2OWViNGYyYTkwYjZmNTU3ZgBTeXN0ZW0uUnVudGltZS5W
ZXJzaW9uaW5nAEdldFN0cmluZwBnZXRfTGVuZ3RoAGdldF9zdHJpbmdMZW5ndGgAc2V0X3N0cmlu
Z0xlbmd0aABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU0NfNjlmMWUzYmFlYzUyNDk1NjllYjRmMmE5
MGI2ZjU1N2YuZGxsAGdldF9uYW1lX0lzTnVsbABnZXRfSXRlbQBTeXN0ZW0AcmVzb3VyY2VNYW4A
U2NyaXB0TWFpbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0
ZW0uUmVmbGVjdGlvbgBTdHJpbmdDb21wYXJpc29uAEN1bHR1cmVJbmZvAE91dHB1dE5hbWVNYXAA
T3V0cHV0TWFwAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRFRTUnVudGltZVdyYXAAU2tpcABTeXN0ZW0u
TGlucQBJbnB1dDBCdWZmZXIAUGlwZWxpbmVCdWZmZXIAU2NyaXB0QnVmZmVyAGdldF9SZXNvdXJj
ZU1hbmFnZXIATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZS5XcmFwcGVyAC5jdG9yAC5j
Y3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBT
eXN0ZW0uUmVzb3VyY2VzAFNDXzY5ZjFlM2JhZWM1MjQ5NTY5ZWI0ZjJhOTBiNmY1NTdmLlByb3Bl
cnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBTQ182OWYxZTNiYWVjNTI0
OTU2OWViNGYyYTkwYjZmNTU3Zi5Qcm9wZXJ0aWVzAGdldF9SZWFkV3JpdGVWYXJpYWJsZXMAQnVm
ZmVyQ29sdW1uSW5kZXhlcwBHZXRDb2x1bW5JbmRleGVzAFNldHRpbmdzAEVxdWFscwBDb25uZWN0
aW9ucwBDb25jYXQAT2JqZWN0AEVuZE9mUm93c2V0AGdldF9EZWZhdWx0AFVzZXJDb21wb25lbnQA
UGFyZW50Q29tcG9uZW50AFNjcmlwdENvbXBvbmVudABNaWNyb3NvZnQuU3FsU2VydmVyLlR4U2Ny
aXB0AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuUGlwZWxpbmVIb3N0AElucHV0MF9Qcm9jZXNzSW5wdXQA
R2V0VmFsdWVXaXRoQ29udGV4dABTY3JpcHRDb21wb25lbnRFdmFsQ29udGV4dABnZXRfRXZhbHVh
dG9yQ29udGV4dABJbnB1dDBfUHJvY2Vzc0lucHV0Um93AE5leHRSb3cAcm93AGdldF9Bc3NlbWJs
eQAAAAAAGSIAZQBuAGEAYgBsAGUAZAAiADoAIABbAAADXQAAAyIAAAciACwAIAAAD0kAbgBwAHUA
dAAgADAAACFXAG8AcgBrAGYAbABvAHcAXwBFAG4AYQBiAGwAZQBkAABxUwBDAF8ANgA5AGYAMQBl
ADMAYgBhAGUAYwA1ADIANAA5ADUANgA5AGUAYgA0AGYAMgBhADkAMABiADYAZgA1ADUANwBmAC4A
UAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAAVpu81w0rvE6Jh71UTbnK
cQAEIAEBCAMgAAEFIAEBEREEIAEBDgUgAQERXQMgAAgPEAEBFRJxAR4AFRJxAR4AAwoBAxAQAQIV
EnEBHgAVEnEBHgAIChABAQ4VEnEBHgAFAAIODg4HAAQODg4ODgkgAwESQR0IEkUDBhJBAwYdCAQg
AQ4IBCABAggDIAACBiACAg4RdQUgAR0ICAQgABJ5BSABEn0cBQAAEoCBBiABHBKAhQQgAQEcCAAB
EoCJEYCNBSAAEoCRByACAQ4SgJEIt3pcVhk04IkIiYRdzYCAzJECBg4CBggDBhIUAwYSGAMGEkkD
BhJVAwYSWQMGEiADIAAOBSABARIMCSAEAQgOEkESRQUgAQESSQQAABJVBAAAElkFAAEBElkEAAAS
IAMAAAEDKAAOAygACAMoAAIECAASVQQIABJZBAgAEiAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25F
eGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NDXzY5ZjFlM2JhZWM1MjQ5NTY5ZWI0ZjJhOTBi
NmY1NTdmAAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMjAAAEkBABouTkVURnJhbWV3b3JrLFZl
cnNpb249djQuNQEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC41BAEA
AAAAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNj
b3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1i
NzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAA
AAAAAAAAUEFEUEFEULQAAAAoNQAAAAAAAAAAAABCNQAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
NDUAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABI
AAAAWEAAAOwDAAAAAAAAAAAAAOwDNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAA
AAC9BO/+AAABAAAAAQAAAAAAAAABAAAAAAA/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAA
AAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4A
AAAAAAAAsARMAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAAoAwAAAQAwADAAMAAw
ADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4A
eQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAA
AFMAQwBfADYAOQBmADEAZQAzAGIAYQBlAGMANQAyADQAOQA1ADYAOQBlAGIANABmADIAYQA5ADAA
YgA2AGYANQA1ADcAZgAAADAACAABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgAw
AC4AMAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8ANgA5AGYAMQBlADMA
YgBhAGUAYwA1ADIANAA5ADUANgA5AGUAYgA0AGYAMgBhADkAMABiADYAZgA1ADUANwBmAC4AZABs
AGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgA
dAAgAEAAIAAgADIAMAAyADAAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAA
AAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAEMAXwA2ADkA
ZgAxAGUAMwBiAGEAZQBjADUAMgA0ADkANQA2ADkAZQBiADQAZgAyAGEAOQAwAGIANgBmADUANQA3
AGYALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBDAF8ANgA5AGYA
MQBlADMAYgBhAGUAYwA1ADIANAA5ADUANgA5AGUAYgA0AGYAMgBhADkAMABiADYAZgA1ADUANwBm
AAAANAAIAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAADgA
CAABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAABUNQAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=]]></arrayElement>
                          </arrayElements>
                        </property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                          name="VSTAProjectName"
                          typeConverter="NOTBROWSABLE">SC_69f1e3baec5249569eb4f2a90b6f557f</property>
                        <property
                          dataType="System.String"
                          description="Specifies the programming language used by the script."
                          name="ScriptLanguage"
                          typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                        <property
                          dataType="System.String"
                          description="Specifies a comma-separated list of read-only variables."
                          name="ReadOnlyVariables"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                        <property
                          dataType="System.String"
                          description="Specifies a comma-separated list of read/write variables."
                          name="ReadWriteVariables"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg">User::Workflow_Enabled</property>
                        <property
                          dataType="System.String"
                          description="List of breakpoints present on the script."
                          isArray="true"
                          name="BreakpointCollection"
                          typeConverter="NOTBROWSABLE">
                          <arrayElements
                            arrayElementCount="0" />
                        </property>
                        <property
                          dataType="System.String"
                          description="Checksum to match component metedata against compiled codes."
                          name="MetadataChecksum"
                          typeConverter="NOTBROWSABLE">6277b01cc98566e413eeb28b07999f11</property>
                        <property
                          dataType="System.String"
                          description="Checksum to match component metedata against compiled codes."
                          name="MetadataShaChecksum"
                          typeConverter="NOTBROWSABLE">ee7c5fcd9de41657df29ef4405b6a76eb599a8b7</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Foreach migrated account\Workflows\Search workflows\Create enabled list.Inputs[Input 0]"
                          hasSideEffects="true"
                          name="Input 0">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Foreach migrated account\Workflows\Search workflows\Create enabled list.Inputs[Input 0].Columns[name]"
                              cachedDataType="wstr"
                              cachedLength="1000"
                              cachedName="name"
                              lineageId="Package\Foreach migrated account\Workflows\Search workflows\Search workflows.Outputs[JsonSourceOutput].Columns[name]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Foreach migrated account\Workflows\Search workflows\Create enabled list.Outputs[Output 0]"
                          name="Output 0"
                          synchronousInputId="Package\Foreach migrated account\Workflows\Search workflows\Create enabled list.Inputs[Input 0]">
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Foreach migrated account\Workflows\Search workflows\Create hidden list"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;10"
                      description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                      name="Create hidden list"
                      version="10">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Stores the source code of the component"
                          isArray="true"
                          name="SourceCode"
                          state="cdata">
                          <arrayElements
                            arrayElementCount="30">
                            <arrayElement
                              dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String WorkflowHidden
    {
        get
        {
            return (String)(ParentComponent.ReadWriteVariables["Workflow_Hidden"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
        set
        {
            ParentComponent.ReadWriteVariables["Workflow_Hidden"].Value = value;
        }
    }

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using System.Linq;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    private string workflow_hidden { get; set; }
    private int stringLength { get; set; }

    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();

        workflow_hidden = "\"hidden\": [";
        stringLength = workflow_hidden.Length;
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();

        if (workflow_hidden.Length > stringLength)
        {
            Variables.WorkflowHidden = string.Concat(workflow_hidden.Reverse().Skip(2).Reverse()) + "]";
        }
        else
        {
            Variables.WorkflowHidden = workflow_hidden + "]";
        }
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer row)
    {
        workflow_hidden += "\"" + row.name + "\", ";
    }

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[SC_a100ff801a9f44d197b8e3d829642350.csproj]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{2c502614-5f30-4e73-9d50-be1d42a400e7}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_a100ff801a9f44d197b8e3d829642350</RootNamespace>
    <AssemblyName>SC_a100ff801a9f44d197b8e3d829642350</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_a100ff801a9f44d197b8e3d829642350" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_a100ff801a9f44d197b8e3d829642350.Properties.Settings.get_Default():SC_a100ff801a9f44d197b8e3d829642350.Properties.Sett" +
    "ings")]

namespace SC_a100ff801a9f44d197b8e3d829642350.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String name
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
    }
    public bool name_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Project]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>SC_a100ff801a9f44d197b8e3d829642350</msb:CodeName>
		<msb:DisplayName>SC_a100ff801a9f44d197b8e3d829642350</msb:DisplayName>
		<msb:ProjectId>{B2AE8B1D-85BA-4D12-8586-2AA9B74768A1}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_a100ff801a9f44d197b8e3d829642350.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_a100ff801a9f44d197b8e3d829642350")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_a100ff801a9f44d197b8e3d829642350")]
[assembly: AssemblyCopyright("Copyright @  2020")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_a100ff801a9f44d197b8e3d829642350.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_a100ff801a9f44d197b8e3d829642350.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_a100ff801a9f44d197b8e3d829642350.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_a100ff801a9f44d197b8e3d829642350.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_a100ff801a9f44d197b8e3d829642350.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                          </arrayElements>
                        </property>
                        <property
                          dataType="System.String"
                          description="Stores the binary representation of the component"
                          isArray="true"
                          name="BinaryCode"
                          state="cdata">
                          <arrayElements
                            arrayElementCount="2">
                            <arrayElement
                              dataType="System.String"><![CDATA[SC_a100ff801a9f44d197b8e3d829642350.dll]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAKzQV14AAAAAAAAAAOAAIiALATAAABYAAAAIAAAAAAAARjUA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAPQ0AABPAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAATBUAAAAgAAAAFgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAAYAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAo
NQAAAAAAAEgAAAACAAUAiCIAALQRAAABAAAAAAAAADw0AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CewEAAAQqIgIDfQEAAAQqHgJ7AgAABCoiAgN9AgAABCqO
AigQAAAKAnIBAABwKAIAAAYCAigBAAAGbxEAAAooBAAABioAABMwAwBmAAAAAAAAAAIoEgAACgIo
AQAABm8RAAAKAigDAAAGMTECewQAAAQCKAEAAAYoAQAAKxgoAgAAKygBAAArKAMAACtyGQAAcCgW
AAAKbxUAAAYqAnsEAAAEAigBAAAGchkAAHAoFgAACm8VAAAGKooCAigBAAAGch0AAHADbwoAAAZy
IQAAcCgXAAAKKAIAAAYqHgIoDgAABioqAgMEBSgYAAAKKlICexkAAAoCexoAAAoWlG8bAAAKKiIC
FigcAAAKKh4CKB0AAAoqHgIoHgAACip+AigfAAAKAgJzEgAABn0DAAAEAgJzEwAABn0EAAAEKpIE
cikAAHAabyAAAAosFQIFAgMoIQAACg4EcwkAAAZvEAAABipKKwcCA28RAAAGA28MAAAGLfEqBio6
AigiAAAKAgN9BQAABCo6AigiAAAKAgN9BgAABCqWAnsGAAAEbyMAAApyOQAAcG8kAAAKKCUAAApv
JgAACnQaAAABKnICewYAAARvIwAACnI5AABwbyQAAAoDbycAAAoqHgIoIgAACiqufgcAAAQtHnJZ
AABw0AcAAAIoKAAACm8pAAAKcyoAAAqABwAABH4HAAAEKhp+CAAABCoeAoAIAAAEKhp+CQAABCoe
AigrAAAKKi5zGwAABoAJAAAEKgBCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAACA
BgAAI34AAOwGAADoBwAAI1N0cmluZ3MAAAAA1A4AAMwAAAAjVVMAoA8AABAAAAAjR1VJRAAAALAP
AAAEAgAAI0Jsb2IAAAAAAAAAAgAAAVcVoAEJCQAAAPoBMwAWAAABAAAAJAAAAAgAAAAJAAAAHAAA
ABAAAAArAAAAFgAAAAUAAAAIAAAADAAAAAEAAAAGAAAAAQAAAAMAAAAAAO0DAQAAAAAABgCtAsQF
BgBBA8QFBgD5AbEFDwA4BgAABgAmAsQEBgCQAsQEBgBxAsQEBgAoA8QEBgDNAsQEBgDmAsQEBgA9
AsQEBgBYAoYDCgABAzIBBgDBAcQFCgBbBTIBDgBMBTIBCgDzBDIBCgASBzIBBgDVBi4EBgDcAbEF
BgBsBeQFBgDnBK8EEgCsAdcDEgANAtcDEgCMAZoEBgCjAy4EFgDwADMFBgBeAIYABgDWBC4EGgAR
AHwFGgABAHwFSwCIBwAAGgAiAHwFBgBTAS4EBgD7AC4EBgDfB8QEAAAAAGwAAAAAAAEAAQABABAA
jwQAABAAAQABAAEAEAA/BQAAPQADAAkAAQAQAPQGAABJAAMADgABABAAwgYAAE0ABQASAAEAEACD
BgAATQAGABMAAAAQAOsFRwZNAAcAFgAAARAAsgZHBmUACQAaAAEAvwDQAAEAoQDTAAYAwgbWAAYA
gwbaAAEAAgfeAAEAAgfeABEANQTiABEAfAHmABEA4ADqAFAgAAAAAIEIZwTuAAEAWCAAAAAAgQh7
BBAAAQBhIAAAAACBCLUDGwACAGkgAAAAAIEIxgMBAAIAciAAAAAAxgBfAwYAAwCYIAAAAADGAGoD
BgADAAohAAAAAMYAuAfyAAMALSEAAAAAhhikBQYABAA1IQAAAACGGKQFXQAEAEAhAAAAAIYIKQHu
AAcAVSEAAAAAhggVBHkABwBeIQAAAACGAM8HeQAHAGYhAAAAAIYA3AZ5AAcAbiEAAAAAhhikBQYA
BwCOIQAAAADGAGcH+AAHALMhAAAAAMYBYAfyAAsAxiEAAAAAxgG4B/IADADIIQAAAACGGKQFAgEN
ANchAAAAAIYYpAUCAQ4A5iEAAAAAhghBBO4ADwAMIgAAAACGCFQEEAAPACkiAAAAAIMYpAUGABAA
MSIAAAAAkwhoBQgBEABdIgAAAACTCGQBDQEQAGQiAAAAAJMIcAESARAAbCIAAAAAlgjoBhgBEQBz
IgAAAACGGKQFBgARAHsiAAAAAJEYqgUdAREAAAABAIADAAABAIADAAABANcHAAABAGEFAAACAI0G
AAADAAEFAAABAHUAAAACAB8BAAADAGEFAAAEAAEFAAABAGEFAAABANMHAAABABgHAAABABgHAAAB
AIADAAABAIADCQCkBQEAEQCkBQYAGQCkBQoAKQCkBRAAMQCkBRAAOQCkBRAAQQCkBRAASQCkBRAA
UQCkBRAAWQCkBRAAYQCkBRAAaQCkBQYAcQCkBQYAoQCkBQYAwQCkBRUAkQBfAwYA0QCqAxsAkQBq
AwYA2QCkAR8A2QAuBTMA0QDOBkQA0QDOBk8A0QDOBlUAeQCkBV0AeQBhBWcAeQCNBmsAgQCgA28A
eQAeBHQAeQDPB3kAeQDcBnkAkQCkBQYA0QC7Bn0AkQChBoQAmQCkBQYAkQB2BooA8QAlBI8AkQCj
B5UA+QB0B5sA+QB2A6IAEQENAacAEQHbB7AAqQCkBbYAyQCkBQYAIABrAP0BIQBrAP0BLgALADwB
LgATAEUBLgAbAGQBLgAjAG0BLgArAJYBLgAzAJYBLgA7AJYBLgBDAG0BLgBLAJwBLgBTAJYBLgBb
ALMBQABrAP0BQQBrAP0BQwBjAP0BYABrAP0BgABrAP0ByQB7AGQB4wBzAP0B6QB7AGQBIQFrAP0B
AgABAAMAAwAGAAUABwAGAAgACAAAAH8EIQEAAMoDJQEAAC0BIQEAABkEKQEAAFgEIQEAAGwFLQEA
AIQBMgEAAOwGNwECAAEAAwABAAIAAwACAAMABQABAAQABQACAAoABwACAAsACQACABQACwABABUA
CwACABcADQACABgADwABABkADwACABoAEQAEgAAAAQAAAAAAAAAAAAAAAAA6AAAABAAAAAAAAAAA
AAAAvgB9AAAAAAANAAAAAAAAAAAAAADHACIHAAAAAA0AAAAAAAAAAAAAAMcAPwcAAAAABAAAAAAA
AAAAAAAAvgAuBAAAAAAEAAAAAAAAAAAAAAC+AFgBAAAAAA0AAAAAAAAAAAAAAMcACwUAAAAAAAAA
AAEAAAD1BQAAJwAvACkALwArAC8AAAAAAABJRFRTVmFyaWFibGUxMDAASURUU1ZhcmlhYmxlczEw
MABJRFRTRXZhbHVhdG9yQ29udGV4dDEwMABTQ19hMTAwZmY4MDFhOWY0NGQxOTdiOGUzZDgyOTY0
MjM1MABJRW51bWVyYWJsZWAxADxNb2R1bGU+AElucHV0SUQAbXNjb3JsaWIAU3lzdGVtLkNvbGxl
Y3Rpb25zLkdlbmVyaWMAPHN0cmluZ0xlbmd0aD5rX19CYWNraW5nRmllbGQAPHdvcmtmbG93X2hp
ZGRlbj5rX19CYWNraW5nRmllbGQAZGVmYXVsdEluc3RhbmNlAEVudW1lcmFibGUAUnVudGltZVR5
cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUASW5wdXROYW1lAGdldF9uYW1lAE1pY3Jvc29mdC5T
cWxTZXJ2ZXIuRHRzLlBpcGVsaW5lAFR5cGUAU3lzdGVtLkNvcmUAZ2V0X0N1bHR1cmUAc2V0X0N1
bHR1cmUAcmVzb3VyY2VDdWx0dXJlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAFJldmVyc2UARWRp
dG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25V
c2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJp
YnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRh
cmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNz
ZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRl
AEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lT
U2NyaXB0Q29tcG9uZW50RW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1
dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAUHJlRXhlY3V0ZQBQb3N0RXhlY3V0ZQBz
ZXRfVmFsdWUAdmFsdWUAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBHZXRTdHJpbmcAZ2V0X0xl
bmd0aABnZXRfc3RyaW5nTGVuZ3RoAHNldF9zdHJpbmdMZW5ndGgAU3lzdGVtLkNvbXBvbmVudE1v
ZGVsAFNDX2ExMDBmZjgwMWE5ZjQ0ZDE5N2I4ZTNkODI5NjQyMzUwLmRsbABnZXRfbmFtZV9Jc051
bGwAZ2V0X0l0ZW0AU3lzdGVtAHJlc291cmNlTWFuAGdldF9Xb3JrZmxvd0hpZGRlbgBzZXRfV29y
a2Zsb3dIaWRkZW4AZ2V0X3dvcmtmbG93X2hpZGRlbgBzZXRfd29ya2Zsb3dfaGlkZGVuAFNjcmlw
dE1haW4AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lzdGVtLlJl
ZmxlY3Rpb24AU3RyaW5nQ29tcGFyaXNvbgBDdWx0dXJlSW5mbwBPdXRwdXROYW1lTWFwAE91dHB1
dE1hcABNaWNyb3NvZnQuU3FsU2VydmVyLkRUU1J1bnRpbWVXcmFwAFNraXAAU3lzdGVtLkxpbnEA
SW5wdXQwQnVmZmVyAFBpcGVsaW5lQnVmZmVyAFNjcmlwdEJ1ZmZlcgBnZXRfUmVzb3VyY2VNYW5h
Z2VyAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUuV3JhcHBlcgAuY3RvcgAuY2N0b3IA
U3lzdGVtLkRpYWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVt
LlJlc291cmNlcwBTQ19hMTAwZmY4MDFhOWY0NGQxOTdiOGUzZDgyOTY0MjM1MC5Qcm9wZXJ0aWVz
LlJlc291cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAU0NfYTEwMGZmODAxYTlmNDRkMTk3
YjhlM2Q4Mjk2NDIzNTAuUHJvcGVydGllcwBnZXRfUmVhZFdyaXRlVmFyaWFibGVzAEJ1ZmZlckNv
bHVtbkluZGV4ZXMAR2V0Q29sdW1uSW5kZXhlcwBTZXR0aW5ncwBFcXVhbHMAQ29ubmVjdGlvbnMA
Q29uY2F0AE9iamVjdABFbmRPZlJvd3NldABnZXRfRGVmYXVsdABVc2VyQ29tcG9uZW50AFBhcmVu
dENvbXBvbmVudABTY3JpcHRDb21wb25lbnQATWljcm9zb2Z0LlNxbFNlcnZlci5UeFNjcmlwdABN
aWNyb3NvZnQuU3FsU2VydmVyLlBpcGVsaW5lSG9zdABJbnB1dDBfUHJvY2Vzc0lucHV0AEdldFZh
bHVlV2l0aENvbnRleHQAU2NyaXB0Q29tcG9uZW50RXZhbENvbnRleHQAZ2V0X0V2YWx1YXRvckNv
bnRleHQASW5wdXQwX1Byb2Nlc3NJbnB1dFJvdwBOZXh0Um93AHJvdwBnZXRfQXNzZW1ibHkAABci
AGgAaQBkAGQAZQBuACIAOgAgAFsAAANdAAADIgAAByIALAAgAAAPSQBuAHAAdQB0ACAAMAAAH1cA
bwByAGsAZgBsAG8AdwBfAEgAaQBkAGQAZQBuAABxUwBDAF8AYQAxADAAMABmAGYAOAAwADEAYQA5
AGYANAA0AGQAMQA5ADcAYgA4AGUAMwBkADgAMgA5ADYANAAyADMANQAwAC4AUAByAG8AcABlAHIA
dABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAAOaDLD8zyi0qvp6Z1nAvzygAEIAEBCAMgAAEF
IAEBEREEIAEBDgUgAQERXQMgAAgPEAEBFRJxAR4AFRJxAR4AAwoBAxAQAQIVEnEBHgAVEnEBHgAI
ChABAQ4VEnEBHgAFAAIODg4HAAQODg4ODgkgAwESQR0IEkUDBhJBAwYdCAQgAQ4IBCABAggDIAAC
BiACAg4RdQUgAR0ICAQgABJ5BSABEn0cBQAAEoCBBiABHBKAhQQgAQEcCAABEoCJEYCNBSAAEoCR
ByACAQ4SgJEIt3pcVhk04IkIiYRdzYCAzJECBg4CBggDBhIUAwYSGAMGEkkDBhJVAwYSWQMGEiAD
IAAOBSABARIMCSAEAQgOEkESRQUgAQESSQQAABJVBAAAElkFAAEBElkEAAASIAMAAAEDKAAOAygA
CAMoAAIECAASVQQIABJZBAgAEiAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJv
d3MBCAEAAgAAAAAAKAEAI1NDX2ExMDBmZjgwMWE5ZjQ0ZDE5N2I4ZTNkODI5NjQyMzUwAAAFAQAA
AAAWAQARQ29weXJpZ2h0IEAgIDIwMjAAAEkBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuNQEA
VA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC41BAEAAAAAALQAAADOyu++
AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNp
b249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRl
MDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFE
ULQAAAAcNQAAAAAAAAAAAAA2NQAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKDUAAAAAAAAAAAAA
AABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABI
AAAAWEAAAOwDAAAAAAAAAAAAAOwDNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAA
AAC9BO/+AAABAAAAAQAAAAAAAAABAAAAAAA/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAA
AAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4A
AAAAAAAAsARMAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAAoAwAAAQAwADAAMAAw
ADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4A
eQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAA
AFMAQwBfAGEAMQAwADAAZgBmADgAMAAxAGEAOQBmADQANABkADEAOQA3AGIAOABlADMAZAA4ADIA
OQA2ADQAMgAzADUAMAAAADAACAABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgAw
AC4AMAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8AYQAxADAAMABmAGYA
OAAwADEAYQA5AGYANAA0AGQAMQA5ADcAYgA4AGUAMwBkADgAMgA5ADYANAAyADMANQAwAC4AZABs
AGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgA
dAAgAEAAIAAgADIAMAAyADAAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAA
AAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAEMAXwBhADEA
MAAwAGYAZgA4ADAAMQBhADkAZgA0ADQAZAAxADkANwBiADgAZQAzAGQAOAAyADkANgA0ADIAMwA1
ADAALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBDAF8AYQAxADAA
MABmAGYAOAAwADEAYQA5AGYANAA0AGQAMQA5ADcAYgA4AGUAMwBkADgAMgA5ADYANAAyADMANQAw
AAAANAAIAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAADgA
CAABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAABINQAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=]]></arrayElement>
                          </arrayElements>
                        </property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                          name="VSTAProjectName"
                          typeConverter="NOTBROWSABLE">SC_a100ff801a9f44d197b8e3d829642350</property>
                        <property
                          dataType="System.String"
                          description="Specifies the programming language used by the script."
                          name="ScriptLanguage"
                          typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                        <property
                          dataType="System.String"
                          description="Specifies a comma-separated list of read-only variables."
                          name="ReadOnlyVariables"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                        <property
                          dataType="System.String"
                          description="Specifies a comma-separated list of read/write variables."
                          name="ReadWriteVariables"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg">User::Workflow_Hidden</property>
                        <property
                          dataType="System.String"
                          description="List of breakpoints present on the script."
                          isArray="true"
                          name="BreakpointCollection"
                          typeConverter="NOTBROWSABLE">
                          <arrayElements
                            arrayElementCount="0" />
                        </property>
                        <property
                          dataType="System.String"
                          description="Checksum to match component metedata against compiled codes."
                          name="MetadataChecksum"
                          typeConverter="NOTBROWSABLE">453616240d55cfc266a424e2c33e9b6b</property>
                        <property
                          dataType="System.String"
                          description="Checksum to match component metedata against compiled codes."
                          name="MetadataShaChecksum"
                          typeConverter="NOTBROWSABLE">439d5f3244473f055ba139eff938ce36e6f67360</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Foreach migrated account\Workflows\Search workflows\Create hidden list.Inputs[Input 0]"
                          hasSideEffects="true"
                          name="Input 0">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Foreach migrated account\Workflows\Search workflows\Create hidden list.Inputs[Input 0].Columns[name]"
                              cachedDataType="wstr"
                              cachedLength="1000"
                              cachedName="name"
                              lineageId="Package\Foreach migrated account\Workflows\Search workflows\Search workflows.Outputs[JsonSourceOutput].Columns[name]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Foreach migrated account\Workflows\Search workflows\Create hidden list.Outputs[Output 0]"
                          name="Output 0"
                          synchronousInputId="Package\Foreach migrated account\Workflows\Search workflows\Create hidden list.Inputs[Input 0]">
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Foreach migrated account\Workflows\Search workflows\Create visible list"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;10"
                      description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                      name="Create visible list"
                      version="10">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Stores the source code of the component"
                          isArray="true"
                          name="SourceCode"
                          state="cdata">
                          <arrayElements
                            arrayElementCount="30">
                            <arrayElement
                              dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using System.Linq;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    private string workflow_visible { get; set; }
    private int stringLength { get; set; }

    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();

        workflow_visible = "\"visible\": [";
        stringLength = workflow_visible.Length;
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();

        if (workflow_visible.Length > stringLength)
        {
            Variables.WorkflowVisible = string.Concat(workflow_visible.Reverse().Skip(2).Reverse()) + "]";
        }
        else
        {
            Variables.WorkflowVisible = workflow_visible + "]";
        }
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer row)
    {
        workflow_visible += "\"" + row.name + "\", ";
    }

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[SC_2a07ecdbfe194f49b2e499333ffd65c0.csproj]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{02a9c04a-3790-43d0-8d87-e4f17cb7a281}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_2a07ecdbfe194f49b2e499333ffd65c0</RootNamespace>
    <AssemblyName>SC_2a07ecdbfe194f49b2e499333ffd65c0</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_2a07ecdbfe194f49b2e499333ffd65c0" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String name
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
    }
    public bool name_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_2a07ecdbfe194f49b2e499333ffd65c0.Properties.Settings.get_Default():SC_2a07ecdbfe194f49b2e499333ffd65c0.Properties.Sett" +
    "ings")]

namespace SC_2a07ecdbfe194f49b2e499333ffd65c0.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String WorkflowVisible
    {
        get
        {
            return (String)(ParentComponent.ReadWriteVariables["Workflow_Visible"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
        set
        {
            ParentComponent.ReadWriteVariables["Workflow_Visible"].Value = value;
        }
    }

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Project]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>SC_2a07ecdbfe194f49b2e499333ffd65c0</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>SC_2a07ecdbfe194f49b2e499333ffd65c0</msb:DisplayName>
		<msb:ProjectId>{A9EC5E98-ACA5-4FF2-8FBB-BA200D9CF832}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_2a07ecdbfe194f49b2e499333ffd65c0.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_2a07ecdbfe194f49b2e499333ffd65c0")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_2a07ecdbfe194f49b2e499333ffd65c0")]
[assembly: AssemblyCopyright("Copyright @  2020")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_2a07ecdbfe194f49b2e499333ffd65c0.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_2a07ecdbfe194f49b2e499333ffd65c0.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_2a07ecdbfe194f49b2e499333ffd65c0.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_2a07ecdbfe194f49b2e499333ffd65c0.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_2a07ecdbfe194f49b2e499333ffd65c0.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                          </arrayElements>
                        </property>
                        <property
                          dataType="System.String"
                          description="Stores the binary representation of the component"
                          isArray="true"
                          name="BinaryCode"
                          state="cdata">
                          <arrayElements
                            arrayElementCount="2">
                            <arrayElement
                              dataType="System.String"><![CDATA[SC_2a07ecdbfe194f49b2e499333ffd65c0.dll]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAATRV14AAAAAAAAAAOAAIiALATAAABYAAAAIAAAAAAAAUjUA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAAA1AABPAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAWBUAAAAgAAAAFgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAAYAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAA0
NQAAAAAAAEgAAAACAAUAiCIAAMARAAABAAAAAAAAAEg0AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CewEAAAQqIgIDfQEAAAQqHgJ7AgAABCoiAgN9AgAABCqO
AigQAAAKAnIBAABwKAIAAAYCAigBAAAGbxEAAAooBAAABioAABMwAwBmAAAAAAAAAAIoEgAACgIo
AQAABm8RAAAKAigDAAAGMTECewQAAAQCKAEAAAYoAQAAKxgoAgAAKygBAAArKAMAACtyGwAAcCgW
AAAKbxUAAAYqAnsEAAAEAigBAAAGchsAAHAoFgAACm8VAAAGKooCAigBAAAGch8AAHADbwoAAAZy
IwAAcCgXAAAKKAIAAAYqHgIoDgAABioqAgMEBSgYAAAKKlICexkAAAoCexoAAAoWlG8bAAAKKiIC
FigcAAAKKh4CKB0AAAoqHgIoHgAACip+AigfAAAKAgJzEgAABn0DAAAEAgJzEwAABn0EAAAEKpIE
cisAAHAabyAAAAosFQIFAgMoIQAACg4EcwkAAAZvEAAABipKKwcCA28RAAAGA28MAAAGLfEqBio6
AigiAAAKAgN9BQAABCo6AigiAAAKAgN9BgAABCqWAnsGAAAEbyMAAApyOwAAcG8kAAAKKCUAAApv
JgAACnQaAAABKnICewYAAARvIwAACnI7AABwbyQAAAoDbycAAAoqHgIoIgAACiqufgcAAAQtHnJd
AABw0AcAAAIoKAAACm8pAAAKcyoAAAqABwAABH4HAAAEKhp+CAAABCoeAoAIAAAEKhp+CQAABCoe
AigrAAAKKi5zGwAABoAJAAAEKgBCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAACA
BgAAI34AAOwGAADwBwAAI1N0cmluZ3MAAAAA3A4AANAAAAAjVVMArA8AABAAAAAjR1VJRAAAALwP
AAAEAgAAI0Jsb2IAAAAAAAAAAgAAAVcVoAEJCQAAAPoBMwAWAAABAAAAJAAAAAgAAAAJAAAAHAAA
ABAAAAArAAAAFgAAAAUAAAAIAAAADAAAAAEAAAAGAAAAAQAAAAMAAAAAAEAEAQAAAAAABgAAA8kF
BgCUA8kFBgBMArYFDwA9BgAABgB5AskEBgDjAskEBgDEAskEBgB7A8kEBgAgA8kEBgA5A8kEBgCQ
AskEBgCrAtkDCgBUA4UBBgAUAskFCgBgBYUBDgBRBYUBCgD4BIUBCgAXB4UBBgDaBoEEBgAvArYF
BgBxBekFBgDsBLQEEgD/ASoEEgBgAioEEgDfAZ8EBgD2A4EEFgDxADgFBgBeAIYABgDbBIEEGgAR
AIEFGgABAIEFSwCNBwAAGgAiAIEFBgCmAYEEBgBOAYEEBgDkB8kEAAAAAGwAAAAAAAEAAQABABAA
lAQAABAAAQABAAEAEABEBQAAPQADAAkAAQAQAPkGAABJAAMADgABABAAxwYAAE0ABQASAAEAEACI
BgAATQAGABMAAAAQAPAFTAZNAAcAFgAAARAAtwZMBmUACQAaAAEAoQDQAAEAwwDTAAYAxwbWAAYA
iAbaAAEABwfeAAEABwfeABEAiATiABEAzwHmABEA4QDqAFAgAAAAAIEIJAHuAAEAWCAAAAAAgQg5
ARAAAQBhIAAAAACBCAgEGwACAGkgAAAAAIEIGQQBAAIAciAAAAAAxgCyAwYAAwCYIAAAAADGAL0D
BgADAAohAAAAAMYAvQfyAAMALSEAAAAAhhipBQYABAA1IQAAAACGGKkFXQAEAEAhAAAAAIYIfAHu
AAcAVSEAAAAAhghoBHkABwBeIQAAAACGANQHeQAHAGYhAAAAAIYA4QZ5AAcAbiEAAAAAhhipBQYA
BwCOIQAAAADGAGwH+AAHALMhAAAAAMYBZQfyAAsAxiEAAAAAxgG9B/IADADIIQAAAACGGKkFAgEN
ANchAAAAAIYYqQUCAQ4A5iEAAAAAhgj8AO4ADwAMIgAAAACGCBABEAAPACkiAAAAAIMYqQUGABAA
MSIAAAAAkwhtBQgBEABdIgAAAACTCLcBDQEQAGQiAAAAAJMIwwESARAAbCIAAAAAlgjtBhgBEQBz
IgAAAACGGKkFBgARAHsiAAAAAJEYrwUdAREAAAABANMDAAABANMDAAABANwHAAABAGYFAAACAJIG
AAADAAYFAAABAHUAAAACAHIBAAADAGYFAAAEAAYFAAABAGYFAAABANgHAAABAB0HAAABAB0HAAAB
ANMDAAABANMDCQCpBQEAEQCpBQYAGQCpBQoAKQCpBRAAMQCpBRAAOQCpBRAAQQCpBRAASQCpBRAA
UQCpBRAAWQCpBRAAYQCpBRAAaQCpBQYAcQCpBQYAoQCpBQYAwQCpBRUAkQCyAwYA0QD9AxsAkQC9
AwYA2QD3AR8A2QAzBTMA0QDTBkQA0QDTBk8A0QDTBlUAeQCpBV0AeQBmBWcAeQCSBmsAgQDzA28A
eQBxBHQAeQDUB3kAeQDhBnkAkQCpBQYA0QDABn0AkQCmBoQAmQCpBQYAkQB7BooA8QB4BI8AkQCo
B5UA+QB5B5sA+QDJA6IAEQFgAacAEQHgB7AAqQCpBbYAyQCpBQYAIABrAP0BIQBrAP0BLgALADwB
LgATAEUBLgAbAGQBLgAjAG0BLgArAJYBLgAzAJYBLgA7AJYBLgBDAG0BLgBLAJwBLgBTAJYBLgBb
ALMBQABrAP0BQQBrAP0BQwBjAP0BYABrAP0BgABrAP0ByQB7AGQB4wBzAP0B6QB7AGQBIQFrAP0B
AgABAAMAAwAGAAUABwAGAAgACAAAAD0BIQEAAB0EJQEAAIABIQEAAGwEKQEAABQBIQEAAHEFLQEA
ANcBMgEAAPEGNwECAAEAAwABAAIAAwACAAMABQABAAQABQACAAoABwACAAsACQACABQACwABABUA
CwACABcADQACABgADwABABkADwACABoAEQAEgAAAAQAAAAAAAAAAAAAAAAA6AAAABAAAAAAAAAAA
AAAAvgB9AAAAAAANAAAAAAAAAAAAAADHACcHAAAAAA0AAAAAAAAAAAAAAMcARAcAAAAABAAAAAAA
AAAAAAAAvgCBBAAAAAAEAAAAAAAAAAAAAAC+AKsBAAAAAA0AAAAAAAAAAAAAAMcAEAUAAAAAAAAA
AAEAAAD6BQAAJwAvACkALwArAC8AAAAAAABJRFRTVmFyaWFibGUxMDAASURUU1ZhcmlhYmxlczEw
MABJRFRTRXZhbHVhdG9yQ29udGV4dDEwMABTQ18yYTA3ZWNkYmZlMTk0ZjQ5YjJlNDk5MzMzZmZk
NjVjMABJRW51bWVyYWJsZWAxADxNb2R1bGU+AElucHV0SUQAbXNjb3JsaWIAU3lzdGVtLkNvbGxl
Y3Rpb25zLkdlbmVyaWMAPHdvcmtmbG93X3Zpc2libGU+a19fQmFja2luZ0ZpZWxkADxzdHJpbmdM
ZW5ndGg+a19fQmFja2luZ0ZpZWxkAGRlZmF1bHRJbnN0YW5jZQBFbnVtZXJhYmxlAGdldF9Xb3Jr
Zmxvd1Zpc2libGUAc2V0X1dvcmtmbG93VmlzaWJsZQBnZXRfd29ya2Zsb3dfdmlzaWJsZQBzZXRf
d29ya2Zsb3dfdmlzaWJsZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBJbnB1
dE5hbWUAZ2V0X25hbWUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUAVHlwZQBTeXN0
ZW0uQ29yZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUAQXBwbGljYXRp
b25TZXR0aW5nc0Jhc2UAUmV2ZXJzZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVy
YXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRy
aWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNz
ZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5
Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBp
bGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2Vt
Ymx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRDb21wb25lbnRFbnRyeVBvaW50QXR0cmli
dXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0
ZQBQcmVFeGVjdXRlAFBvc3RFeGVjdXRlAHNldF9WYWx1ZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5W
ZXJzaW9uaW5nAEdldFN0cmluZwBnZXRfTGVuZ3RoAGdldF9zdHJpbmdMZW5ndGgAc2V0X3N0cmlu
Z0xlbmd0aABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU0NfMmEwN2VjZGJmZTE5NGY0OWIyZTQ5OTMz
M2ZmZDY1YzAuZGxsAGdldF9uYW1lX0lzTnVsbABnZXRfSXRlbQBTeXN0ZW0AcmVzb3VyY2VNYW4A
U2NyaXB0TWFpbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0
ZW0uUmVmbGVjdGlvbgBTdHJpbmdDb21wYXJpc29uAEN1bHR1cmVJbmZvAE91dHB1dE5hbWVNYXAA
T3V0cHV0TWFwAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRFRTUnVudGltZVdyYXAAU2tpcABTeXN0ZW0u
TGlucQBJbnB1dDBCdWZmZXIAUGlwZWxpbmVCdWZmZXIAU2NyaXB0QnVmZmVyAGdldF9SZXNvdXJj
ZU1hbmFnZXIATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZS5XcmFwcGVyAC5jdG9yAC5j
Y3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBT
eXN0ZW0uUmVzb3VyY2VzAFNDXzJhMDdlY2RiZmUxOTRmNDliMmU0OTkzMzNmZmQ2NWMwLlByb3Bl
cnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBTQ18yYTA3ZWNkYmZlMTk0
ZjQ5YjJlNDk5MzMzZmZkNjVjMC5Qcm9wZXJ0aWVzAGdldF9SZWFkV3JpdGVWYXJpYWJsZXMAQnVm
ZmVyQ29sdW1uSW5kZXhlcwBHZXRDb2x1bW5JbmRleGVzAFNldHRpbmdzAEVxdWFscwBDb25uZWN0
aW9ucwBDb25jYXQAT2JqZWN0AEVuZE9mUm93c2V0AGdldF9EZWZhdWx0AFVzZXJDb21wb25lbnQA
UGFyZW50Q29tcG9uZW50AFNjcmlwdENvbXBvbmVudABNaWNyb3NvZnQuU3FsU2VydmVyLlR4U2Ny
aXB0AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuUGlwZWxpbmVIb3N0AElucHV0MF9Qcm9jZXNzSW5wdXQA
R2V0VmFsdWVXaXRoQ29udGV4dABTY3JpcHRDb21wb25lbnRFdmFsQ29udGV4dABnZXRfRXZhbHVh
dG9yQ29udGV4dABJbnB1dDBfUHJvY2Vzc0lucHV0Um93AE5leHRSb3cAcm93AGdldF9Bc3NlbWJs
eQAAAAAAGSIAdgBpAHMAaQBiAGwAZQAiADoAIABbAAADXQAAAyIAAAciACwAIAAAD0kAbgBwAHUA
dAAgADAAACFXAG8AcgBrAGYAbABvAHcAXwBWAGkAcwBpAGIAbABlAABxUwBDAF8AMgBhADAANwBl
AGMAZABiAGYAZQAxADkANABmADQAOQBiADIAZQA0ADkAOQAzADMAMwBmAGYAZAA2ADUAYwAwAC4A
UAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAAlO27CTzzsUCOTQvyMH40
WgAEIAEBCAMgAAEFIAEBEREEIAEBDgUgAQERXQMgAAgPEAEBFRJxAR4AFRJxAR4AAwoBAxAQAQIV
EnEBHgAVEnEBHgAIChABAQ4VEnEBHgAFAAIODg4HAAQODg4ODgkgAwESQR0IEkUDBhJBAwYdCAQg
AQ4IBCABAggDIAACBiACAg4RdQUgAR0ICAQgABJ5BSABEn0cBQAAEoCBBiABHBKAhQQgAQEcCAAB
EoCJEYCNBSAAEoCRByACAQ4SgJEIt3pcVhk04IkIiYRdzYCAzJECBg4CBggDBhIUAwYSGAMGEkkD
BhJVAwYSWQMGEiADIAAOBSABARIMCSAEAQgOEkESRQUgAQESSQQAABJVBAAAElkFAAEBElkEAAAS
IAMAAAEDKAAOAygACAMoAAIECAASVQQIABJZBAgAEiAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25F
eGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NDXzJhMDdlY2RiZmUxOTRmNDliMmU0OTkzMzNm
ZmQ2NWMwAAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMjAAAEkBABouTkVURnJhbWV3b3JrLFZl
cnNpb249djQuNQEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC41BAEA
AAAAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNj
b3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1i
NzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAA
AAAAAAAAUEFEUEFEULQAAAAoNQAAAAAAAAAAAABCNQAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
NDUAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABI
AAAAWEAAAOwDAAAAAAAAAAAAAOwDNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAA
AAC9BO/+AAABAAAAAQAAAAAAAAABAAAAAAA/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAA
AAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4A
AAAAAAAAsARMAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAAoAwAAAQAwADAAMAAw
ADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4A
eQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAA
AFMAQwBfADIAYQAwADcAZQBjAGQAYgBmAGUAMQA5ADQAZgA0ADkAYgAyAGUANAA5ADkAMwAzADMA
ZgBmAGQANgA1AGMAMAAAADAACAABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgAw
AC4AMAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8AMgBhADAANwBlAGMA
ZABiAGYAZQAxADkANABmADQAOQBiADIAZQA0ADkAOQAzADMAMwBmAGYAZAA2ADUAYwAwAC4AZABs
AGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgA
dAAgAEAAIAAgADIAMAAyADAAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAA
AAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAEMAXwAyAGEA
MAA3AGUAYwBkAGIAZgBlADEAOQA0AGYANAA5AGIAMgBlADQAOQA5ADMAMwAzAGYAZgBkADYANQBj
ADAALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBDAF8AMgBhADAA
NwBlAGMAZABiAGYAZQAxADkANABmADQAOQBiADIAZQA0ADkAOQAzADMAMwBmAGYAZAA2ADUAYwAw
AAAANAAIAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAADgA
CAABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAABUNQAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=]]></arrayElement>
                          </arrayElements>
                        </property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                          name="VSTAProjectName"
                          typeConverter="NOTBROWSABLE">SC_2a07ecdbfe194f49b2e499333ffd65c0</property>
                        <property
                          dataType="System.String"
                          description="Specifies the programming language used by the script."
                          name="ScriptLanguage"
                          typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                        <property
                          dataType="System.String"
                          description="Specifies a comma-separated list of read-only variables."
                          name="ReadOnlyVariables"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                        <property
                          dataType="System.String"
                          description="Specifies a comma-separated list of read/write variables."
                          name="ReadWriteVariables"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg">User::Workflow_Visible</property>
                        <property
                          dataType="System.String"
                          description="List of breakpoints present on the script."
                          isArray="true"
                          name="BreakpointCollection"
                          typeConverter="NOTBROWSABLE">
                          <arrayElements
                            arrayElementCount="0" />
                        </property>
                        <property
                          dataType="System.String"
                          description="Checksum to match component metedata against compiled codes."
                          name="MetadataChecksum"
                          typeConverter="NOTBROWSABLE">2e6dc3773c4d19041e57ddf77b6e587b</property>
                        <property
                          dataType="System.String"
                          description="Checksum to match component metedata against compiled codes."
                          name="MetadataShaChecksum"
                          typeConverter="NOTBROWSABLE">0922475193fac9ff3c1bc56069e7a5431599c531</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Foreach migrated account\Workflows\Search workflows\Create visible list.Inputs[Input 0]"
                          hasSideEffects="true"
                          name="Input 0">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Foreach migrated account\Workflows\Search workflows\Create visible list.Inputs[Input 0].Columns[name]"
                              cachedDataType="wstr"
                              cachedLength="1000"
                              cachedName="name"
                              lineageId="Package\Foreach migrated account\Workflows\Search workflows\Search workflows.Outputs[JsonSourceOutput].Columns[name]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Foreach migrated account\Workflows\Search workflows\Create visible list.Outputs[Output 0]"
                          name="Output 0"
                          synchronousInputId="Package\Foreach migrated account\Workflows\Search workflows\Create visible list.Inputs[Input 0]">
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Foreach migrated account\Workflows\Search workflows\Enabled split"
                      componentClassID="Microsoft.ConditionalSplit"
                      contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
                      name="Enabled split"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\Foreach migrated account\Workflows\Search workflows\Enabled split.Inputs[Conditional Split Input]"
                          description="Input to the Conditional Split Transformation"
                          name="Conditional Split Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Foreach migrated account\Workflows\Search workflows\Enabled split.Inputs[Conditional Split Input].Columns[is_enabled]"
                              cachedDataType="bool"
                              cachedName="is_enabled"
                              lineageId="Package\Foreach migrated account\Workflows\Search workflows\Search workflows.Outputs[JsonSourceOutput].Columns[is_enabled]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Foreach migrated account\Workflows\Search workflows\Enabled split.Outputs[enabled]"
                          description="Output 3 of the Conditional Split Transformation"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          exclusionGroup="1"
                          name="enabled"
                          synchronousInputId="Package\Foreach migrated account\Workflows\Search workflows\Enabled split.Inputs[Conditional Split Input]"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                              name="Expression">[REPLACENULL](#{Package\Foreach migrated account\Workflows\Search workflows\Search workflows.Outputs[JsonSourceOutput].Columns[is_enabled]}, FALSE )</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the friendly version of the expression. This expression version uses column names."
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACENULL(is_enabled, FALSE )</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                              name="EvaluationOrder">0</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Foreach migrated account\Workflows\Search workflows\Enabled split.Outputs[disabled]"
                          description="Output 4 of the Conditional Split Transformation"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          exclusionGroup="1"
                          name="disabled"
                          synchronousInputId="Package\Foreach migrated account\Workflows\Search workflows\Enabled split.Inputs[Conditional Split Input]"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                              name="Expression">![REPLACENULL](#{Package\Foreach migrated account\Workflows\Search workflows\Search workflows.Outputs[JsonSourceOutput].Columns[is_enabled]}, FALSE )</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the friendly version of the expression. This expression version uses column names."
                              expressionType="Notify"
                              name="FriendlyExpression">!REPLACENULL(is_enabled, FALSE )</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                              name="EvaluationOrder">1</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Foreach migrated account\Workflows\Search workflows\Enabled split.Outputs[Conditional Split Default Output]"
                          description="Default Output of the Conditional Split Transformation"
                          exclusionGroup="1"
                          name="Conditional Split Default Output"
                          synchronousInputId="Package\Foreach migrated account\Workflows\Search workflows\Enabled split.Inputs[Conditional Split Input]">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              name="IsDefaultOut">true</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Foreach migrated account\Workflows\Search workflows\Enabled split.Outputs[Conditional Split Error Output]"
                          description="Error Output of the Conditional Split Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Conditional Split Error Output"
                          synchronousInputId="Package\Foreach migrated account\Workflows\Search workflows\Enabled split.Inputs[Conditional Split Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Foreach migrated account\Workflows\Search workflows\Enabled split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Foreach migrated account\Workflows\Search workflows\Enabled split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Foreach migrated account\Workflows\Search workflows\Enabled split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Foreach migrated account\Workflows\Search workflows\Enabled split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Foreach migrated account\Workflows\Search workflows\Hidden split"
                      componentClassID="Microsoft.ConditionalSplit"
                      contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
                      name="Hidden split"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\Foreach migrated account\Workflows\Search workflows\Hidden split.Inputs[Conditional Split Input]"
                          description="Input to the Conditional Split Transformation"
                          name="Conditional Split Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Foreach migrated account\Workflows\Search workflows\Hidden split.Inputs[Conditional Split Input].Columns[is_hidden]"
                              cachedDataType="bool"
                              cachedName="is_hidden"
                              lineageId="Package\Foreach migrated account\Workflows\Search workflows\Search workflows.Outputs[JsonSourceOutput].Columns[is_hidden]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Foreach migrated account\Workflows\Search workflows\Hidden split.Outputs[hidden]"
                          description="Output 3 of the Conditional Split Transformation"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          exclusionGroup="1"
                          name="hidden"
                          synchronousInputId="Package\Foreach migrated account\Workflows\Search workflows\Hidden split.Inputs[Conditional Split Input]"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                              name="Expression">[REPLACENULL](#{Package\Foreach migrated account\Workflows\Search workflows\Search workflows.Outputs[JsonSourceOutput].Columns[is_hidden]}, FALSE )</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the friendly version of the expression. This expression version uses column names."
                              expressionType="Notify"
                              name="FriendlyExpression">REPLACENULL(is_hidden, FALSE )</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                              name="EvaluationOrder">0</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Foreach migrated account\Workflows\Search workflows\Hidden split.Outputs[visible]"
                          description="Output 4 of the Conditional Split Transformation"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          exclusionGroup="1"
                          name="visible"
                          synchronousInputId="Package\Foreach migrated account\Workflows\Search workflows\Hidden split.Inputs[Conditional Split Input]"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                              name="Expression">![REPLACENULL](#{Package\Foreach migrated account\Workflows\Search workflows\Search workflows.Outputs[JsonSourceOutput].Columns[is_hidden]}, FALSE )</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the friendly version of the expression. This expression version uses column names."
                              expressionType="Notify"
                              name="FriendlyExpression">!REPLACENULL(is_hidden, FALSE )</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                              name="EvaluationOrder">1</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Foreach migrated account\Workflows\Search workflows\Hidden split.Outputs[Conditional Split Default Output]"
                          description="Default Output of the Conditional Split Transformation"
                          exclusionGroup="1"
                          name="Conditional Split Default Output"
                          synchronousInputId="Package\Foreach migrated account\Workflows\Search workflows\Hidden split.Inputs[Conditional Split Input]">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              name="IsDefaultOut">true</property>
                          </properties>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Foreach migrated account\Workflows\Search workflows\Hidden split.Outputs[Conditional Split Error Output]"
                          description="Error Output of the Conditional Split Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Conditional Split Error Output"
                          synchronousInputId="Package\Foreach migrated account\Workflows\Search workflows\Hidden split.Inputs[Conditional Split Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Foreach migrated account\Workflows\Search workflows\Hidden split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Foreach migrated account\Workflows\Search workflows\Hidden split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Foreach migrated account\Workflows\Search workflows\Hidden split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Foreach migrated account\Workflows\Search workflows\Hidden split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Foreach migrated account\Workflows\Search workflows\Multicast"
                      componentClassID="Microsoft.Multicast"
                      contactInfo="Multicast;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Distributes every input row to every row in one or more outputs. For example, branch your data flow to make a copy of data so that some values can be masked before sharing with external partners."
                      name="Multicast">
                      <inputs>
                        <input
                          refId="Package\Foreach migrated account\Workflows\Search workflows\Multicast.Inputs[Multicast Input 1]"
                          name="Multicast Input 1">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Foreach migrated account\Workflows\Search workflows\Multicast.Outputs[Multicast Output 1]"
                          deleteOutputOnPathDetached="true"
                          name="Multicast Output 1"
                          synchronousInputId="Package\Foreach migrated account\Workflows\Search workflows\Multicast.Inputs[Multicast Input 1]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Foreach migrated account\Workflows\Search workflows\Multicast.Outputs[Multicast Output 2]"
                          deleteOutputOnPathDetached="true"
                          name="Multicast Output 2"
                          synchronousInputId="Package\Foreach migrated account\Workflows\Search workflows\Multicast.Inputs[Multicast Input 1]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Foreach migrated account\Workflows\Search workflows\Multicast.Outputs[Multicast Output 3]"
                          dangling="true"
                          deleteOutputOnPathDetached="true"
                          name="Multicast Output 3"
                          synchronousInputId="Package\Foreach migrated account\Workflows\Search workflows\Multicast.Inputs[Multicast Input 1]">
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Foreach migrated account\Workflows\Search workflows\Remove invalid chars from name"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;10"
                      description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                      name="Remove invalid chars from name"
                      version="10">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Stores the source code of the component"
                          isArray="true"
                          name="SourceCode"
                          state="cdata">
                          <arrayElements
                            arrayElementCount="30">
                            <arrayElement
                              dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using System.Text.RegularExpressions;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer row)
    {
        row.name =
            Regex.Replace(
                    row.name,
                    @"[^\w\.@-]", " ",
                    RegexOptions.None,
                    TimeSpan.FromSeconds(1.5))
                .Replace(" ", "<>")
                .Replace("><", "")
                .Replace("<>", " ");
    }

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String name
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
        set
        {
            this[0] = value;
        }
    }
    public bool name_IsNull
    {
        get
        {
            return IsNull(0);
        }
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_2663abde329f40ceb30bcf3f32a69215.Properties.Settings.get_Default():SC_2663abde329f40ceb30bcf3f32a69215.Properties.Sett" +
    "ings")]

namespace SC_2663abde329f40ceb30bcf3f32a69215.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[SC_2663abde329f40ceb30bcf3f32a69215.csproj]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{18d4ce30-1089-42cd-b445-33fc9fe94057}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_2663abde329f40ceb30bcf3f32a69215</RootNamespace>
    <AssemblyName>SC_2663abde329f40ceb30bcf3f32a69215</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_2663abde329f40ceb30bcf3f32a69215" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Project]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>SC_2663abde329f40ceb30bcf3f32a69215</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>SC_2663abde329f40ceb30bcf3f32a69215</msb:DisplayName>
		<msb:ProjectId>{49723C21-D8BC-41D8-B499-101A43F8BD0D}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_2663abde329f40ceb30bcf3f32a69215.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_2663abde329f40ceb30bcf3f32a69215")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_2663abde329f40ceb30bcf3f32a69215")]
[assembly: AssemblyCopyright("Copyright @  2020")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_2663abde329f40ceb30bcf3f32a69215.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_2663abde329f40ceb30bcf3f32a69215.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_2663abde329f40ceb30bcf3f32a69215.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_2663abde329f40ceb30bcf3f32a69215.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_2663abde329f40ceb30bcf3f32a69215.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                          </arrayElements>
                        </property>
                        <property
                          dataType="System.String"
                          description="Stores the binary representation of the component"
                          isArray="true"
                          name="BinaryCode"
                          state="cdata">
                          <arrayElements
                            arrayElementCount="2">
                            <arrayElement
                              dataType="System.String"><![CDATA[SC_2663abde329f40ceb30bcf3f32a69215.dll]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAC7rV14AAAAAAAAAAOAAIiALATAAABQAAAAIAAAAAAAALjIA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAANwxAABPAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAANBIAAAAgAAAAFAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAAWAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAQ
MgAAAAAAAEgAAAACAAUA7CEAADgPAAABAAAAAAAAACQxAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABMwBgBYAAAAAAAAAAMDbwQAAAZyAQAAcHIVAABwFiMAAAAA
AAD4PygQAAAKKBEAAApyFQAAcHIZAABwbxIAAApyHwAAcHIlAABwbxIAAApyGQAAcHIVAABwbxIA
AApvBQAABioeAigKAAAGKioCAwQFKBMAAAoqUgJ7FAAACgJ7FQAAChaUbxYAAAoqJgIWAygXAAAK
KiICFigYAAAKKloDLAgCFigZAAAKKnInAABwcxoAAAp6HgIoGwAACioeAigcAAAKKn4CKB0AAAoC
AnMOAAAGfQEAAAQCAnMPAAAGfQIAAAQqkgRyxAAAcBpvHgAACiwVAgUCAygfAAAKDgRzAwAABm8M
AAAGKkorBwIDbw0AAAYDbwgAAAYt8SoGKjoCKCAAAAoCA30DAAAEKjoCKCAAAAoCA30EAAAEKh4C
KCAAAAoqrn4FAAAELR5y1AAAcNAHAAACKCEAAApvIgAACnMjAAAKgAUAAAR+BQAABCoafgYAAAQq
HgKABgAABCoafgcAAAQqHgIoJAAACioucxUAAAaABwAABCpCU0pCAQABAAAAAAAMAAAAdjQuMC4z
MDMxOQAAAAAFAGwAAABUBQAAI34AAMAFAABkBgAAI1N0cmluZ3MAAAAAJAwAAEgBAAAjVVMAbA0A
ABAAAAAjR1VJRAAAAHwNAAC8AQAAI0Jsb2IAAAAAAAAAAgAAAVcVoAEJAQAAAPoBMwAWAAABAAAA
IgAAAAgAAAAHAAAAFgAAAA8AAAAkAAAAEAAAAAMAAAAFAAAACAAAAAEAAAAEAAAAAQAAAAAA8AIB
AAAAAAAGAP4BZAQGAJICZAQGAEoBRQQPANgEAAAGAHcBmgMGAOEBmgMGAMIBmgMGAHkCmgMGAB4C
mgMGADcCmgMGAI4BmgMGAKkBtgIKAFIClwAKABcElwAOAAgElwAKAOMDlwAKAMoFlwAGAI0FSQMG
AC0BRQQGACgEhAQGANcDhQMSAP0A2gISAF4B2gISAOUAcAMGABIBZAQGAFwDSQMSAE8GVQUSAIAF
VQUGANMCSQMGAKwDSQMGAMYDSQMGALgASQMGAFcASQMGAFkGmgMAAAAAJQAAAAAAAQABAAEAEABl
AwAAEAABAAEAAQAQAPsDAAA5AAEAAwABABAArAUAAEUAAQAKAAEAEAB0BQAASQADAA4AAQAQABYF
AABJAAQADwAAABAAiwTnBEkABQAQAAABEABFBecEYQAHABQABgB0BY4ABgAWBZIAAQC6BZYAAQC6
BZYAEQBQA5oAEQDVAJ4AEQBHAKIAUCAAAAAAxgAsBqYAAQC0IAAAAACGGDgEBgACALwgAAAAAIYY
OAQyAAIAxyAAAAAAhgiFAKwABQDcIAAAAACGCI4AEAAFAOYgAAAAAIYIGANUAAYA7yAAAAAAhggo
A7AABgAGIQAAAACGAEMGVAAHAA4hAAAAAIYAlAVUAAcAFiEAAAAAhhg4BAYABwA2IQAAAADGAB8G
tQAHAFshAAAAAMYBGAamAAsAbiEAAAAAxgEsBqYADABwIQAAAACGGDgEvwANAH8hAAAAAIYYOAS/
AA4AjiEAAAAAgxg4BAYADwCWIQAAAACTCCQExQAPAMIhAAAAAJMIvQDKAA8AySEAAAAAkwjJAM8A
DwDRIQAAAACWCKAF1QAQANghAAAAAIYYOAQGABAA4CEAAAAAkRg+BNoAEAAAAAEASwYAAAEAHQQA
AAIAIAUAAAMA8QMAAAEAsAIAAAEAsAIAAAEALgAAAAIAewAAAAMAHQQAAAQA8QMAAAEAHQQAAAEA
RwYAAAEA0AUAAAEA0AUAAAEAsAIJADgEAQARADgEBgAZADgECgApADgEEAAxADgEEAA5ADgEEABB
ADgEEABJADgEEABRADgEEABZADgEEABhADgEEABpADgEBgCZADgEBgC5ADgEFQDJADgEBgDRAFgE
GwDZAD8AIQDpAD8ALABxADgEMgBxAB0EPABxACAFQAB5ANACRABxAEADSQBxADEDTwBxADgDAQDx
ADgEEABxAEMGVABxAJQFVACJADgEBgDpAE4FWACJADQFXwCRADgEBgABAWkAZQABAVUGbgChADgE
dADBADgEBgAuAAsA9QAuABMA/gAuABsAHQEuACMAJgEuACsATwEuADMATwEuADsATwEuAEMAJgEu
AEsAVQEuAFMATwEuAFsAbAFDAGMAtgFpAHMAHQGJAHMAHQHhAHsAtgHjAGsAtgEDAAEABwADAAgA
BQAAAJIA3gAAACwD4gAAACgE5gAAAN0A6wAAAKQF8AACAAQAAwABAAUAAwACAAYABQABAAcABQAC
ABEABwACABIACQABABMACQACABQACwAEgAAAAQAAAAAAAAAAAAAAAAABAAAABAAAAAAAAAAAAAAA
fAA2AAAAAAANAAAAAAAAAAAAAACFANoFAAAAAA0AAAAAAAAAAAAAAIUA9wUAAAAABAAAAAAAAAAA
AAAAfABJAwAAAAAAAAAAAQAAAJUEAAAAAABTQ18yNjYzYWJkZTMyOWY0MGNlYjMwYmNmM2YzMmE2
OTIxNQA8TW9kdWxlPgBJbnB1dElEAG1zY29ybGliAFJlcGxhY2UAZGVmYXVsdEluc3RhbmNlAFJ1
bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAElucHV0TmFtZQBnZXRfbmFtZQBzZXRf
bmFtZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5QaXBlbGluZQBUeXBlAGdldF9DdWx0dXJlAHNl
dF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBFZGl0b3JC
cm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJD
b2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRl
AEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0
RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJs
eURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNz
ZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3Jp
cHRDb21wb25lbnRFbnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBS
dW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9u
aW5nAEdldFN0cmluZwBTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU0NfMjY2M2FiZGUzMjlmNDBjZWIz
MGJjZjNmMzJhNjkyMTUuZGxsAGdldF9uYW1lX0lzTnVsbABzZXRfbmFtZV9Jc051bGwAU2V0TnVs
bABzZXRfSXRlbQBTeXN0ZW0AcmVzb3VyY2VNYW4AVGltZVNwYW4AU2NyaXB0TWFpbgBTeXN0ZW0u
Q29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBJbnZh
bGlkT3BlcmF0aW9uRXhjZXB0aW9uAFN0cmluZ0NvbXBhcmlzb24AQ3VsdHVyZUluZm8AT3V0cHV0
TmFtZU1hcABPdXRwdXRNYXAASW5wdXQwQnVmZmVyAFBpcGVsaW5lQnVmZmVyAFNjcmlwdEJ1ZmZl
cgBnZXRfUmVzb3VyY2VNYW5hZ2VyAC5jdG9yAC5jY3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MARnJv
bVNlY29uZHMAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2Vz
AFNDXzI2NjNhYmRlMzI5ZjQwY2ViMzBiY2YzZjMyYTY5MjE1LlByb3BlcnRpZXMuUmVzb3VyY2Vz
LnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBTQ18yNjYzYWJkZTMyOWY0MGNlYjMwYmNmM2YzMmE2
OTIxNS5Qcm9wZXJ0aWVzAFZhcmlhYmxlcwBCdWZmZXJDb2x1bW5JbmRleGVzAEdldENvbHVtbklu
ZGV4ZXMAU2V0dGluZ3MARXF1YWxzAFN5c3RlbS5UZXh0LlJlZ3VsYXJFeHByZXNzaW9ucwBDb25u
ZWN0aW9ucwBSZWdleE9wdGlvbnMAT2JqZWN0AEVuZE9mUm93c2V0AGdldF9EZWZhdWx0AFVzZXJD
b21wb25lbnQAUGFyZW50Q29tcG9uZW50AFNjcmlwdENvbXBvbmVudABNaWNyb3NvZnQuU3FsU2Vy
dmVyLlR4U2NyaXB0AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuUGlwZWxpbmVIb3N0AElucHV0MF9Qcm9j
ZXNzSW5wdXQASW5wdXQwX1Byb2Nlc3NJbnB1dFJvdwBOZXh0Um93AHJvdwBSZWdleABnZXRfQXNz
ZW1ibHkAAAAAE1sAXgBcAHcAXAAuAEAALQBdAAEDIAAABTwAPgAABT4APAAAAQCAm0kAcwBOAHUA
bABsACAAcAByAG8AcABlAHIAdAB5ACAAYwBhAG4AbgBvAHQAIABiAGUAIABzAGUAdAAgAHQAbwAg
AEYAYQBsAHMAZQAuACAAQQBzAHMAaQBnAG4AIABhACAAdgBhAGwAdQBlACAAdABvACAAdABoAGUA
IABjAG8AbAB1AG0AbgAgAGkAbgBzAHQAZQBhAGQALgAAD0kAbgBwAHUAdAAgADAAAHFTAEMAXwAy
ADYANgAzAGEAYgBkAGUAMwAyADkAZgA0ADAAYwBlAGIAMwAwAGIAYwBmADMAZgAzADIAYQA2ADkA
MgAxADUALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAAAAiEG3jyCr
sUinWd1EEyM9rAAEIAEBCAMgAAEFIAEBEREEIAEBDgUgAQERWQUAARFpDQoABQ4ODg4RcRFpBSAC
Dg4OCSADARI9HQgSQQMGEj0DBh0IBCABDggFIAIBCBwEIAECCAMgAAIGIAICDhF9BSABHQgICAAB
EoCBEYCFBSAAEoCJByACAQ4SgIkIt3pcVhk04IkIiYRdzYCAzJEDBhIUAwYSGAMGEkUDBhJRAwYS
VQMGEiAFIAEBEgwDIAAOBCABAQIJIAQBCA4SPRJBBSABARJFBAAAElEEAAASVQUAAQESVQQAABIg
AwAAAQMoAA4DKAACBAgAElEECAASVQQIABIgCAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0
aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTQ18yNjYzYWJkZTMyOWY0MGNlYjMwYmNmM2YzMmE2OTIx
NQAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDIwAABJAQAaLk5FVEZyYW1ld29yayxWZXJzaW9u
PXY0LjUBAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEi5ORVQgRnJhbWV3b3JrIDQuNQQBAAAAALQA
AADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIs
IFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1
NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAA
UEFEUEFEULQAAAAEMgAAAAAAAAAAAAAeMgAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEDIAAAAA
AAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAA
SAAAAFhAAADsAwAAAAAAAAAAAADsAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAA
AAAAvQTv/gAAAQAAAAEAAAAAAAAAAQAAAAAAPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQA
AAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBu
AAAAAAAAALAETAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAKAMAAAEAMAAwADAA
MAAwADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBu
AHkATgBhAG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAA
AABTAEMAXwAyADYANgAzAGEAYgBkAGUAMwAyADkAZgA0ADAAYwBlAGIAMwAwAGIAYwBmADMAZgAz
ADIAYQA2ADkAMgAxADUAAAAwAAgAAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4A
MAAuADAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAQwBfADIANgA2ADMAYQBi
AGQAZQAzADIAOQBmADQAMABjAGUAYgAzADAAYgBjAGYAMwBmADMAMgBhADYAOQAyADEANQAuAGQA
bABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBo
AHQAIABAACAAIAAyADAAMgAwAAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMA
AAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBDAF8AMgA2
ADYAMwBhAGIAZABlADMAMgA5AGYANAAwAGMAZQBiADMAMABiAGMAZgAzAGYAMwAyAGEANgA5ADIA
MQA1AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAQwBfADIANgA2
ADMAYQBiAGQAZQAzADIAOQBmADQAMABjAGUAYgAzADAAYgBjAGYAMwBmADMAMgBhADYAOQAyADEA
NQAAADQACAABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAA4
AAgAAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAMDIAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                          </arrayElements>
                        </property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                          name="VSTAProjectName"
                          typeConverter="NOTBROWSABLE">SC_2663abde329f40ceb30bcf3f32a69215</property>
                        <property
                          dataType="System.String"
                          description="Specifies the programming language used by the script."
                          name="ScriptLanguage"
                          typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                        <property
                          dataType="System.String"
                          description="Specifies a comma-separated list of read-only variables."
                          name="ReadOnlyVariables"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                        <property
                          dataType="System.String"
                          description="Specifies a comma-separated list of read/write variables."
                          name="ReadWriteVariables"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                        <property
                          dataType="System.String"
                          description="List of breakpoints present on the script."
                          isArray="true"
                          name="BreakpointCollection"
                          typeConverter="NOTBROWSABLE">
                          <arrayElements
                            arrayElementCount="0" />
                        </property>
                        <property
                          dataType="System.String"
                          description="Checksum to match component metedata against compiled codes."
                          name="MetadataChecksum"
                          typeConverter="NOTBROWSABLE">fc937e1c3fdea24eb3609856798777c9</property>
                        <property
                          dataType="System.String"
                          description="Checksum to match component metedata against compiled codes."
                          name="MetadataShaChecksum"
                          typeConverter="NOTBROWSABLE">58f0a941a9872f1327029dab05e846c741de3671</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Foreach migrated account\Workflows\Search workflows\Remove invalid chars from name.Inputs[Input 0]"
                          hasSideEffects="true"
                          name="Input 0">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Foreach migrated account\Workflows\Search workflows\Remove invalid chars from name.Inputs[Input 0].Columns[name]"
                              cachedDataType="wstr"
                              cachedLength="1000"
                              cachedName="name"
                              lineageId="Package\Foreach migrated account\Workflows\Search workflows\Search workflows.Outputs[JsonSourceOutput].Columns[name]"
                              usageType="readWrite" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Foreach migrated account\Workflows\Search workflows\Remove invalid chars from name.Outputs[Output 0]"
                          name="Output 0"
                          synchronousInputId="Package\Foreach migrated account\Workflows\Search workflows\Remove invalid chars from name.Inputs[Input 0]">
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Foreach migrated account\Workflows\Search workflows\Search workflows"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="JSON Source (REST API or File); ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
                      description="The JSON source is used to read data from JSON files, RESTful Web Service or direct JSON String."
                      name="Search workflows"
                      usesDispositions="true"
                      version="29">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                          expressionType="Notify"
                          name="LoggingMode"
                          typeConverter="ZappySys.PowerPack.Common.LoggingMode, ZappySys.PowerPack130, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                        <property
                          dataType="System.Boolean"
                          description="When you enable this property it will prefix timestamp before Log messages."
                          expressionType="Notify"
                          name="PrefixTimestamp">false</property>
                        <property
                          dataType="System.Null"
                          expressionType="Notify"
                          name="SelfRef"
                          typeConverter="NOTBROWSABLE" />
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for any numeric data types"
                          expressionType="Notify"
                          name="TreatBlankNumberAsNull">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for bool data types"
                          expressionType="Notify"
                          name="TreatBlankBoolAsNull">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Treat empty string as NULL for any date/time data types"
                          expressionType="Notify"
                          name="TreatBlankDateAsNull">true</property>
                        <property
                          dataType="System.Int32"
                          description="Defines how to read the JSON file or direct string"
                          expressionType="Notify"
                          name="AccessMode"
                          typeConverter="ZappySys.Common.Ssis.FileValueAccessMode, ZappySys.Common, Version=1.0.2018.11210, Culture=neutral, PublicKeyToken=1903265a93eae502">3</property>
                        <property
                          dataType="System.String"
                          description="Defines how to read the JSON file or direct string"
                          expressionType="Notify"
                          name="DirectValue"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.String"
                          description="Variable name which holds JSON string"
                          expressionType="Notify"
                          name="ValueVariable"
                          typeConverter="ZappySys.PowerPack.Converters.VariableEditor,ZappySys.PowerPack130.UI,Version=1.0.0.0,Culture=neutral,PublicKeyToken=1903265a93eae502"></property>
                        <property
                          dataType="System.String"
                          description="Variable name which holds data file path or url"
                          expressionType="Notify"
                          name="PathVariable"
                          typeConverter="ZappySys.PowerPack.Converters.VariableEditor,ZappySys.PowerPack130.UI,Version=1.0.0.0,Culture=neutral,PublicKeyToken=1903265a93eae502">User::API_URL</property>
                        <property
                          dataType="System.String"
                          description="JSON file file path (e.g. c:\data\myfile.json) or pattern to process multiple files (e.g. c:\data\*.json)"
                          expressionType="Notify"
                          name="DirectPath"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">https://beta-api.uk.rexsoftware.com/rex.php</property>
                        <property
                          dataType="System.Boolean"
                          description="Include files from sub folders too."
                          expressionType="Notify"
                          name="Recursive">false</property>
                        <property
                          dataType="System.String"
                          description="Set this if you want to set custom Http headers. You may use variable anywhere in the header value using syntax {{User::YourVarName}}. Syntax of Header key value pair is : &amp;lt;request&amp;gt;&amp;lt;header&amp;gt;&amp;lt;name&amp;gt;x-myheader-1&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;AAA&amp;lt;/value&amp;gt;&amp;lt;/header&amp;gt; &amp;lt;header&amp;gt;&amp;lt;name&amp;gt;x-myheader-2&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;BBB&amp;lt;/value&amp;gt;&amp;lt;/header&amp;gt;&amp;lt;/request&amp;gt;"
                          expressionType="Notify"
                          name="HttpHeaders">&lt;request&gt;&lt;header&gt;&lt;name&gt;Accept&lt;/name&gt;&lt;value&gt;*/*&lt;/value&gt;&lt;/header&gt;&lt;header&gt;&lt;name&gt;Cache-Control&lt;/name&gt;&lt;value&gt;no-cache&lt;/value&gt;&lt;/header&gt;&lt;/request&gt;</property>
                        <property
                          dataType="System.String"
                          description="User defined data you wish to send along with your HTTP Request (e.g. Upload file data, Form POST data). Usually you have to set content-type of your data but if you select RequestMethod=POST then system will automatically set content-type=application/x-www-form-urlencoded."
                          expressionType="Notify"
                          name="HttpRequestData">{
	"method":"AdminWorkflows::search",
	"args":
	{
		"extra_options": {},
		"order_by": {},
		"limit": 100
    },
	"strip_response_prefix": true,
	"token": "{{User::API_Token}}"
}</property>
                        <property
                          dataType="System.String"
                          description="Http Web Request Method (e.g. POST, GET, PUT, LIST, DELETE...). Refer your API documentation if you are not sure which method you have to use."
                          expressionType="Notify"
                          name="HttpRequestMethod">POST</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies content type for data you wish to POST. If you select Default option then system default content type will be used (i.e. application/x-www-form-urlencoded). If you specify Content-Type header along with this option then header value takes precedence."
                          expressionType="Notify"
                          name="HttpRequestContentType"
                          typeConverter="ZappySys.Common.Web.HttpRequestContentType, ZappySys.Common, Version=1.0.2018.11210, Culture=neutral, PublicKeyToken=1903265a93eae502">2</property>
                        <property
                          dataType="System.Int32"
                          description="Data format coming from HTTP Response. This is useful for example when you have OData service and you want to automatically consume all pages of data using odata.netUrl. Setting JsonFormat=Odata will automatically do it for you. This setting is only applicable if JSON is coming from HTTP WebRequest."
                          expressionType="Notify"
                          name="JsonFormat"
                          typeConverter="ZappySys.Json.JsonFormat, ZappySys.Json, Version=1.0.2018.11210, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                        <property
                          dataType="System.Boolean"
                          description="Enable custom proxy settings (If this is not set then system default proxy will be used. To disable proxy totally uncheck this option and check DoNotUseDefaultProxy option if available)"
                          expressionType="Notify"
                          name="UseProxy">false</property>
                        <property
                          dataType="System.String"
                          description="Web URL of Proxy server (including port  if necessary). [e.g. http://myproxyserver:8080/]"
                          expressionType="Notify"
                          name="ProxyUrl"></property>
                        <property
                          dataType="System.Boolean"
                          description="Enable passing userid and password to proxy server"
                          expressionType="Notify"
                          name="UseProxyCreds">false</property>
                        <property
                          dataType="System.String"
                          description="Proxy username"
                          expressionType="Notify"
                          name="ProxyUserName"></property>
                        <property
                          dataType="System.String"
                          description="Proxy password"
                          expressionType="Notify"
                          name="ProxyPassword"></property>
                        <property
                          dataType="System.String"
                          description="If Service response support pagination using some sort of next url attribute then specify which attribute name in JSON Response string which holds next url. If no attribute found or its null then component will stop fetching next resultset. Example: $.pagingInfo.nextUrl"
                          expressionType="Notify"
                          name="NextUrlAttribute"></property>
                        <property
                          dataType="System.String"
                          description="If Service response support pagination using some sort of prev/next url attribute then specify which previous link attribute name from JSON Response string which holds previous url."
                          expressionType="Notify"
                          name="PrevUrlAttribute"></property>
                        <property
                          dataType="System.String"
                          description="Specifies value for NextUrlAttribute or StopIndicatorAttribute which indicates last page to stop pagination. If you have specified StopIndicatorAttribute then you can use Regular expression rather than static value to indicate last page. To use regular expression value of this property must start with regex= prefix. Example : regex=FALSE|N  (assuming you set StopIndicatorAttribute to something like $.hasMore)"
                          expressionType="Notify"
                          name="NextUrlStopIndicator"></property>
                        <property
                          dataType="System.String"
                          description="Attribute name or expression for attribute which can be used as stop indicator (e.g. hasmore --or-- $.pagination.hasmore). If this value is blank then NextUrlAttribute is used"
                          expressionType="Notify"
                          name="StopIndicatorAttribute"></property>
                        <property
                          dataType="System.String"
                          description="If you want to include certain text (or parameters) at the end of Next url then specify this attribute (e.g. &amp;format=json). Another common usecase of this property is to supply pagination token to next Page URL. You can also use &lt;%nextlink%&gt; or  &lt;%nextlink_encoded%&gt; placeholder (e.g. &amp;cursor=&lt;%nextlink_encoded%&gt; )"
                          expressionType="Notify"
                          name="NextUrlSuffix"></property>
                        <property
                          dataType="System.Int32"
                          description="This property indicates total number of milliseconds you want to wait before sending next request. This option allows you to adjust how many API calls can be made within certain timeframe. If your API Service has no limit then set this option to zero"
                          expressionType="Notify"
                          name="NextUrlWait">0</property>
                        <property
                          dataType="System.Boolean"
                          description="If this option is true then component will continue without exception on 404 error (Url not found). This allows you to consume data gracefully."
                          expressionType="Notify"
                          name="ContinueOnUrlNotFoundError">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Continue when any type of exception occurs during http request"
                          expressionType="Notify"
                          name="ContineOnAnyError">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Continue on error when specified substring found in response"
                          expressionType="Notify"
                          name="ContineOnErrorForMessage">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Continue on error when specified status code returned from web server"
                          expressionType="Notify"
                          name="ContineOnErrorForStatusCode">false</property>
                        <property
                          dataType="System.Boolean"
                          description="When error occurs no data is returned. Use this option to get content eventhough error occurs. When this option is checked you can't use [continue on error when specific string found in response] option"
                          expressionType="Notify"
                          name="ConsumeResponseOnError">false</property>
                        <property
                          dataType="System.Int32"
                          description="Status code to match when error occurs and ContineOnErrorForStatusCode option is true. If Response status code matches to this code then task continues to run"
                          expressionType="Notify"
                          name="ErrorStatusCodeToMatch">404</property>
                        <property
                          dataType="System.String"
                          description="Error substring to match when error occurs and ContineOnErrorForMessage option is true. If Response status code matches to this code then task continues to run"
                          expressionType="Notify"
                          name="ErrorSubstringToMatch"></property>
                        <property
                          dataType="System.String"
                          description="Cookie Container can be used to maintain state between multiple web requests. Example: You can login to site like wordpress and then extract any private page content by simply passing authentication cookies using this variable."
                          expressionType="Notify"
                          name="CookieContainerVariable"></property>
                        <property
                          dataType="System.Int32"
                          description="Http request Timeout in seconds. Set this to 0 if you want to use system default value (i.e. 100 seconds)"
                          expressionType="Notify"
                          name="RequestTimeout">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies which security protocol is supported for HTTPS communication. Using this option you can enable legacy protocol or enforce to use latest version of security protocol (Note: TLS 1.2 is only supported in SSIS 2014 or Higher)."
                          expressionType="Notify"
                          name="SecurityProtocol"
                          typeConverter="ZappySys.PowerPack.Common.HttpsSecurityProtocolType, ZappySys.PowerPack130, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                        <property
                          dataType="System.Boolean"
                          description="Enable support for gzip or deflate compression. When you check this option compressed response automatically de-compressed saving bandwidth. This option is only valid if web server supports compressed response stream. Check your API documentation for more information."
                          expressionType="Notify"
                          name="EnableCompressionSupport">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Ignore SSL certificate related errors. Example: if you getting SSL/TLS errors because of certificate expired or certificate is not from trusted authority or certificate is self-signed. By checking this option you will not get SSL/TLS error."
                          expressionType="Notify"
                          name="IgnoreCertificateErrors">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Allow unsecure ciphers/suites and curves for SSLS/TLS communication. Use this option to communicate with web servers which needs legacy / unsecured ciphers support. This option is only trigged when you change default SSL/TLS Version on advanced settings tab."
                          expressionType="Notify"
                          name="AllowUnsecureSuite">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Use connection to pass credentials for authentication (e.g. Use UserID/Password or Use OAuth Protocol for token based approach)"
                          expressionType="Notify"
                          name="UseConnection">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specified how you want to loop through multiple pages returned by REST API."
                          expressionType="Notify"
                          name="PagingMode"
                          typeConverter="ZappySys.Common.RestApiPagingMode, ZappySys.Common, Version=1.0.2018.11210, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                        <property
                          dataType="System.Boolean"
                          description="If you wish to pass extracted pagination token or current page number in the body of next request then set this option to true. You can use [$pagetoken$] and [$pagetoken$] placeholders anywhere in the Body where you wish to insert extracted Page token. You must set encoded token you can use &lt;%nextlink_encoded%&gt; inside SuffixForNextUrl Property. If you dont use SuffixForNextUrl then raw nextLink or Token will be inserted inside the body. If you dont specify [$pagetoken$] placeholder in the body then NextPage Token will be appended at the end. NextPage Token is extracted by filter expression specified using property NextUrlSuffix"
                          expressionType="Notify"
                          name="EnablePageTokenForBody">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this to true if you wish to specify different URL, Header, Body or Filter for first page and next page (i.e. Paginated response). Some APIs like Amazon MWS, NetSuite, Zuora) you may need to set this to true."
                          expressionType="Notify"
                          name="HasDifferentNextPageInfo">false</property>
                        <property
                          dataType="System.String"
                          description="When HasDifferentNextPageInfo=true you can set this property to indicate first page and next page. You can specify different URL, Header, Body or Filter for first page and next page (i.e. Paginated response). Use [$tag$] as placeholder anywhere in the URL, Header, Body or Filter and at runtime system will replace it with correct value (first page or next page value). Syntax to specify placeholder for first page vs next page is like a connectionstring url=FirstPageValue|NextPageValue;header=FirstPageValue|NextPageValue;body=FirstPageValue|NextPageValue;filter=FirstPageValue|NextPageValue; You can use one or more key/value pairs to make things dynamic (e.g. url, header, body or filter)  .For example if you have pagination in your API and First URL is http://abc.com/api/items/get and to get more records you have to call http://abc.com/api/items/getNext then you can use [$tag$] as placeholder in the URL http://abc.com/api/items/[$tag$] and specify this property with first page tag and next page tag as url=get|getNext  (Tags are separated using vertical bar). "
                          expressionType="Notify"
                          name="PagePlaceholders"></property>
                        <property
                          dataType="System.String"
                          description="Use this property to set request body fragment for first page. HasDifferentNextPageInfo must be set to true to use this property."
                          expressionType="Notify"
                          name="FirstPageBodyPart"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.String"
                          description="Use this property to set request body fragment for any request after first request. HasDifferentNextPageInfo must be set to true to use this property."
                          expressionType="Notify"
                          name="NextPageBodyPart"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.String"
                          description="Expression to extract Maximum pages to loop through. Some APIs don't stop pagination and keep returning last page data when you try to read data after last page. Specify expression (e.g. $.page_count ) to read total pages to loop through using this property."
                          expressionType="Notify"
                          name="PagingMaxPagesExpr"></property>
                        <property
                          dataType="System.String"
                          description="e.g. Type page_num if URL looks like this =&gt; http://abc.com/?page_num=1&amp;sort=true  (page number via query string)&#xA;--or-- Type &lt;%page%&gt; if page number is inside URL path like this =&gt; http://abc.com/1/?sort=true  (e.g. replace page number in url with placeholder http://abc.com/&lt;%page%&gt;/?sort=true)&#xA;Page number will be incremented by one for next URL until last page is reached or [Max Page Number] is reached"
                          expressionType="Notify"
                          name="PageNumberAttributeNameInUrl"></property>
                        <property
                          dataType="System.Int32"
                          description="Maximum page number until which auto increment is allowed. Type zero for no limit. Next URL contains next page number (increment by one) until last page is detected or [Max Page Number] limit is reached."
                          expressionType="Notify"
                          name="MaxPageNumber">0</property>
                        <property
                          dataType="System.String"
                          description="Variable name which will hold starting page number. This is ignored if you useing parameter name from query string to indicate page number."
                          expressionType="Notify"
                          name="StartPageNumberVariable"></property>
                        <property
                          dataType="System.Int32"
                          description="Page counter increment. By default next page is incremented by one if this value is zero. You can also enter negative number if you want to decrease page counter."
                          expressionType="Notify"
                          name="PageNumberIncrement">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specified how you want detect last page."
                          expressionType="Notify"
                          name="PagingEndStrategy"
                          typeConverter="ZappySys.Common.UrlPagingEndDetectionStrategy, ZappySys.Common, Version=1.0.2018.11210, Culture=neutral, PublicKeyToken=1903265a93eae502">3</property>
                        <property
                          dataType="System.Boolean"
                          description="Condition result to compare to detect last page. Set this property to True if you want detect last page if condition is true else set this to False."
                          expressionType="Notify"
                          name="LastPageWhenConditionEqualsTo">true</property>
                        <property
                          dataType="System.Int32"
                          description="Minimum bytes expected from response."
                          expressionType="Notify"
                          name="ResponseMinBytes">0</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum bytes from response."
                          expressionType="Notify"
                          name="ResponseMaxBytes">3</property>
                        <property
                          dataType="System.String"
                          description="Expected error message sub string from response."
                          expressionType="Notify"
                          name="ResponseErrorString">not found</property>
                        <property
                          dataType="System.Int32"
                          description="Expected status code from response when page number you trying to access not found."
                          expressionType="Notify"
                          name="ResponseStatusCode">404</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum JSON records to fetch. Set this value to 0 for all records"
                          expressionType="Notify"
                          name="MaxRows">0</property>
                        <property
                          dataType="System.String"
                          description="Enter expression here to filter data.(Example:  $.Users[*].UserName ) This will fetch User names from users records"
                          expressionType="Notify"
                          name="Filter"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">$.result.rows</property>
                        <property
                          dataType="System.Boolean"
                          description="Use this option to include parent properties (Non array) in the output along with Filtered Rows"
                          expressionType="Notify"
                          name="IncludeParentColumns">true</property>
                        <property
                          dataType="System.Boolean"
                          description="By default child and parent information is not included in the output if children not found for specified expression. For example if you want to extract all orders from all customers nodes then you can type $.Customers[*].Orders[*]. This will fetch all orders from all customers. By default customers records without orders wont be included in the output. If you want to include those customers where orders not found then check this option (Output null information for order attributes). This behavior is similar to LEFT OUTER JOIN in SQL (Left side is parent, right side is child). This option is ***resource intensive*** so only check if you really care about this behavior."
                          expressionType="Notify"
                          name="IncludeParentColumnsWhenChildMissing">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to true if you want to output parent columns which are array. By default any parent column which is an array is not included in output. See also FilterForParentColumnsWithArrayType property if you set this property"
                          expressionType="Notify"
                          name="IncludeParentColumnsWithArrayType">false</property>
                        <property
                          dataType="System.String"
                          description="Filter expression to extract value form parent"
                          expressionType="Notify"
                          name="FilterForParentColumnsWithArrayType"></property>
                        <property
                          dataType="System.String"
                          description="Prefix for parent column name. This option is only valid if you have set IncludeParentColumns=True"
                          expressionType="Notify"
                          name="ParentColumnPrefix">P_</property>
                        <property
                          dataType="System.Boolean"
                          description="Throw error if property name specified in filter expression is missing. By default it will ignore any missing property errors."
                          expressionType="Notify"
                          name="ThrowErrorIfPropertyMissing">false</property>
                        <property
                          dataType="System.Int32"
                          description="This property how many nested levels should be scanned to fetch various properties. 0=Scan all child levels."
                          expressionType="Notify"
                          name="MaxLevelsToScan">0</property>
                        <property
                          dataType="System.String"
                          description="List comma separated property names from JSON document which you want to exclude from output. Specify parent property name to exclude all child nodes."
                          expressionType="Notify"
                          name="ExcludedProperties"></property>
                        <property
                          dataType="System.String"
                          description="Property level separator used in generated property name (separator for outer properties - Above selected filter node). Use this if default separator is producing duplicate property name which is conflicting with existing name."
                          expressionType="Notify"
                          name="LevelSeparator">_</property>
                        <property
                          dataType="System.Boolean"
                          description="Enables deep array flattening for selected filtered hierarchy. When you turn on this property it will flatten each property of each array item and expose as column (e.g. If you have Filter set as $.customers[*] and for each customer you have an array of Addresses then you may see output columns like Addresses.1.City, Addresses.1.State, Addresses.2.City, Addresses.2.State .... Addresses.N.City, Addresses.N.State). You can control how many array items you want to flatten by setting MaxArrayItemsToFlatten property."
                          expressionType="Notify"
                          name="EnableArrayFlattening">false</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum number of array items to flatten. inner array flattening. Adjust this property to control how many columns being generated. This option is ignored if you set EnableArrayFlattening=false"
                          expressionType="Notify"
                          name="MaxArrayItemsToFlatten">10</property>
                        <property
                          dataType="System.Int32"
                          description="Compression format for source file (e.g. gzip, zip)"
                          expressionType="Notify"
                          name="FileCompressionType"
                          typeConverter="ZappySys.Common.FileCompressionType, ZappySys.Common, Version=1.0.2018.11210, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                        <property
                          dataType="System.Int32"
                          description="Array Transformation you want to apply. Useful for case when you have 2-Dimensional arrays with rows/columns in separate arrays."
                          expressionType="Notify"
                          name="ArrayTransformationType"
                          typeConverter="ZappySys.Json.ArrayTransformType, ZappySys.Json, Version=1.0.2018.11210, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                        <property
                          dataType="System.String"
                          description="Filter expression to use to extract column names for array transformation."
                          expressionType="Notify"
                          name="ArrayTransColumnNameFilter"></property>
                        <property
                          dataType="System.String"
                          description="Filter expression for row values (Not applicable for simple array transformation)."
                          expressionType="Notify"
                          name="ArrayTransRowValueFilter"></property>
                        <property
                          dataType="System.Boolean"
                          description="When you have 2D array but don't have column list specified in a separate array then use this option (e.g. { arr: [[10,11],[21,22]] } )."
                          expressionType="Notify"
                          name="ArrayTransEnableCustomColumns">false</property>
                        <property
                          dataType="System.String"
                          description="When you have 2D array but don't have column list specified in a separate array then use specify column names here. Use comma separated list (e.g col1,col2,col3 ). Column name Order must match value order."
                          expressionType="Notify"
                          name="ArrayTransCustomColumns"></property>
                        <property
                          dataType="System.String"
                          description="Specifies how custom date formatted strings are parsed when reading JSON."
                          expressionType="Notify"
                          name="DateFormatString"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies how date formatted strings, e.g. Date(1198908717056) and 2012-03-21T05:40Z, are parsed when reading JSON."
                          expressionType="Notify"
                          name="DateParseHandling"
                          typeConverter="ZappySys.Common.DateParseHandling, ZappySys.Common, Version=1.0.2018.11210, Culture=neutral, PublicKeyToken=1903265a93eae502">1</property>
                        <property
                          dataType="System.Boolean"
                          description="Output as raw JSON document rather than parsing individual fields. This option is helpful if you have documents stored in a file and you want to pass them downstream as raw JSON string rather than parsing into columns."
                          expressionType="Notify"
                          name="OutputRawDocument">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indent JSON output so its easy to read."
                          expressionType="Notify"
                          name="IndentOutput">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to true if you want to output FilePath. This option is ignored when you consume DirectValue or data from Url rather than local files. Output column name will be __FilePath"
                          expressionType="Notify"
                          name="OutputFilePath">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to true if you want to output FileName. This option is ignored when you consume DirectValue or data from Url rather than local files. Output column name will be __FileName"
                          expressionType="Notify"
                          name="OutputFileName">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Set this option to true if you want to move processed file to archive folder."
                          expressionType="Notify"
                          name="EnableArchiveFile">false</property>
                        <property
                          dataType="System.String"
                          description="Folder path where you want to move processed file."
                          expressionType="Notify"
                          name="ArchiveFolderPath"></property>
                        <property
                          dataType="System.Boolean"
                          description="Folder path where you want to move processed file."
                          expressionType="Notify"
                          name="OverwriteFileInArchiveFolder">false</property>
                        <property
                          dataType="System.String"
                          description="File naming convention for archived file. By default it will same name as original source file processed. But you can control naming format using {%name%} and {%ext%} placeholders. e.g. {%name%}_processed{%ext%} or {%name%}{%ext%}.{{System::ContainerStartTime,yyyyMMdd_HHmmss_fff}}"
                          expressionType="Notify"
                          name="ArchiveFileNamingConvention"></property>
                        <property
                          dataType="System.Boolean"
                          description="When this property is true then Column is converted to Row. Pivoted names will appear under  Pivot_Name column and values will appear under Pivot_Value field."
                          expressionType="Notify"
                          name="EnablePivot">false</property>
                        <property
                          dataType="System.Int32"
                          description="Metadata scan mode controls how data type and length is determined. By default few records scanned to determine datatype/length. Changing ScanMode affects length/datatype accuracy."
                          expressionType="Notify"
                          name="MetaDataScanMode"
                          typeConverter="ZappySys.Common.Data.MetaDataScanMode, ZappySys.Common, Version=1.0.2018.11210, Culture=neutral, PublicKeyToken=1903265a93eae502">4</property>
                        <property
                          dataType="System.Int32"
                          description="Length for all string column. This option is only valid for MetaDataScanMode=Custom"
                          expressionType="Notify"
                          name="MetaDataCustomLength">1000</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">ZappySys.JsonSource</property>
                      </properties>
                      <outputs>
                        <output
                          refId="Package\Foreach migrated account\Workflows\Search workflows\Search workflows.Outputs[JsonSourceOutput]"
                          errorOrTruncationOperation="Error"
                          errorRowDisposition="FailComponent"
                          name="JsonSourceOutput"
                          truncationRowDisposition="FailComponent">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Foreach migrated account\Workflows\Search workflows\Search workflows.Outputs[JsonSourceOutput].Columns[is_hidden]"
                              dataType="bool"
                              externalMetadataColumnId="Package\Foreach migrated account\Workflows\Search workflows\Search workflows.Outputs[JsonSourceOutput].ExternalColumns[is_hidden]"
                              lineageId="Package\Foreach migrated account\Workflows\Search workflows\Search workflows.Outputs[JsonSourceOutput].Columns[is_hidden]"
                              name="is_hidden">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  description="This flag indicates column is locked so it doesn't refresh datatype automatically or column is manually added by user rather than auto detect"
                                  expressionType="Notify"
                                  name="ManuallyAdded">true</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach migrated account\Workflows\Search workflows\Search workflows.Outputs[JsonSourceOutput].Columns[is_enabled]"
                              dataType="bool"
                              externalMetadataColumnId="Package\Foreach migrated account\Workflows\Search workflows\Search workflows.Outputs[JsonSourceOutput].ExternalColumns[is_enabled]"
                              lineageId="Package\Foreach migrated account\Workflows\Search workflows\Search workflows.Outputs[JsonSourceOutput].Columns[is_enabled]"
                              name="is_enabled">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  description="This flag indicates column is locked so it doesn't refresh datatype automatically or column is manually added by user rather than auto detect"
                                  expressionType="Notify"
                                  name="ManuallyAdded">true</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach migrated account\Workflows\Search workflows\Search workflows.Outputs[JsonSourceOutput].Columns[id]"
                              dataType="i4"
                              externalMetadataColumnId="Package\Foreach migrated account\Workflows\Search workflows\Search workflows.Outputs[JsonSourceOutput].ExternalColumns[_id]"
                              lineageId="Package\Foreach migrated account\Workflows\Search workflows\Search workflows.Outputs[JsonSourceOutput].Columns[id]"
                              name="id">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  description="This flag indicates column is locked so it doesn't refresh datatype automatically or column is manually added by user rather than auto detect"
                                  expressionType="Notify"
                                  name="ManuallyAdded">true</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\Foreach migrated account\Workflows\Search workflows\Search workflows.Outputs[JsonSourceOutput].Columns[name]"
                              dataType="wstr"
                              externalMetadataColumnId="Package\Foreach migrated account\Workflows\Search workflows\Search workflows.Outputs[JsonSourceOutput].ExternalColumns[name]"
                              length="1000"
                              lineageId="Package\Foreach migrated account\Workflows\Search workflows\Search workflows.Outputs[JsonSourceOutput].Columns[name]"
                              name="name">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  description="This flag indicates column is locked so it doesn't refresh datatype automatically or column is manually added by user rather than auto detect"
                                  expressionType="Notify"
                                  name="ManuallyAdded">true</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Workflows\Search workflows\Search workflows.Outputs[JsonSourceOutput].ExternalColumns[P_result_total]"
                              dataType="i8"
                              name="P_result_total" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Workflows\Search workflows\Search workflows.Outputs[JsonSourceOutput].ExternalColumns[P_result_viewstate_id]"
                              dataType="wstr"
                              length="1020"
                              name="P_result_viewstate_id" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Workflows\Search workflows\Search workflows.Outputs[JsonSourceOutput].ExternalColumns[P_error]"
                              dataType="wstr"
                              length="1020"
                              name="P_error" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Workflows\Search workflows\Search workflows.Outputs[JsonSourceOutput].ExternalColumns[account_id]"
                              dataType="i8"
                              name="account_id" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Workflows\Search workflows\Search workflows.Outputs[JsonSourceOutput].ExternalColumns[system_record_state]"
                              dataType="wstr"
                              length="24"
                              name="system_record_state" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Workflows\Search workflows\Search workflows.Outputs[JsonSourceOutput].ExternalColumns[system_ctime]"
                              dataType="i8"
                              name="system_ctime" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Workflows\Search workflows\Search workflows.Outputs[JsonSourceOutput].ExternalColumns[system_modtime]"
                              dataType="i8"
                              name="system_modtime" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Workflows\Search workflows\Search workflows.Outputs[JsonSourceOutput].ExternalColumns[active_workflow_version_id]"
                              dataType="wstr"
                              length="12"
                              name="active_workflow_version_id" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Workflows\Search workflows\Search workflows.Outputs[JsonSourceOutput].ExternalColumns[is_enabled]"
                              dataType="bool"
                              name="is_enabled">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  description="This flag indicates column is locked so it doesn't refresh datatype automatically or column is manually added by user rather than auto detect"
                                  expressionType="Notify"
                                  name="ManuallyAdded">true</property>
                              </properties>
                            </externalMetadataColumn>
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Workflows\Search workflows\Search workflows.Outputs[JsonSourceOutput].ExternalColumns[post_to_stream_on_completion]"
                              dataType="wstr"
                              length="1020"
                              name="post_to_stream_on_completion" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Workflows\Search workflows\Search workflows.Outputs[JsonSourceOutput].ExternalColumns[cron_expression]"
                              dataType="wstr"
                              length="80"
                              name="cron_expression" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Workflows\Search workflows\Search workflows.Outputs[JsonSourceOutput].ExternalColumns[cron_next_run_at]"
                              dataType="wstr"
                              length="80"
                              name="cron_next_run_at" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Workflows\Search workflows\Search workflows.Outputs[JsonSourceOutput].ExternalColumns[name]"
                              dataType="wstr"
                              length="212"
                              name="name" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Workflows\Search workflows\Search workflows.Outputs[JsonSourceOutput].ExternalColumns[description]"
                              dataType="wstr"
                              length="564"
                              name="description" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Workflows\Search workflows\Search workflows.Outputs[JsonSourceOutput].ExternalColumns[opt_in_preflight.code]"
                              dataType="nText"
                              name="opt_in_preflight.code" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Workflows\Search workflows\Search workflows.Outputs[JsonSourceOutput].ExternalColumns[manual_preflight.code]"
                              dataType="wstr"
                              length="3600"
                              name="manual_preflight.code" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Workflows\Search workflows\Search workflows.Outputs[JsonSourceOutput].ExternalColumns[can_run_manually]"
                              dataType="i8"
                              name="can_run_manually" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Workflows\Search workflows\Search workflows.Outputs[JsonSourceOutput].ExternalColumns[related_services]"
                              dataType="wstr"
                              length="176"
                              name="related_services" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Workflows\Search workflows\Search workflows.Outputs[JsonSourceOutput].ExternalColumns[is_debug]"
                              dataType="wstr"
                              length="1020"
                              name="is_debug" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Workflows\Search workflows\Search workflows.Outputs[JsonSourceOutput].ExternalColumns[etag]"
                              dataType="wstr"
                              length="52"
                              name="etag" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Workflows\Search workflows\Search workflows.Outputs[JsonSourceOutput].ExternalColumns[system_owner_user.id]"
                              dataType="wstr"
                              length="20"
                              name="system_owner_user.id" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Workflows\Search workflows\Search workflows.Outputs[JsonSourceOutput].ExternalColumns[system_owner_user._name]"
                              dataType="wstr"
                              length="100"
                              name="system_owner_user._name" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Workflows\Search workflows\Search workflows.Outputs[JsonSourceOutput].ExternalColumns[system_owner_user._first_name]"
                              dataType="wstr"
                              length="48"
                              name="system_owner_user._first_name" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Workflows\Search workflows\Search workflows.Outputs[JsonSourceOutput].ExternalColumns[system_owner_user._last_name]"
                              dataType="wstr"
                              length="48"
                              name="system_owner_user._last_name" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Workflows\Search workflows\Search workflows.Outputs[JsonSourceOutput].ExternalColumns[system_owner_user._email_address]"
                              dataType="wstr"
                              length="148"
                              name="system_owner_user._email_address" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Workflows\Search workflows\Search workflows.Outputs[JsonSourceOutput].ExternalColumns[system_modified_user.id]"
                              dataType="wstr"
                              length="20"
                              name="system_modified_user.id" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Workflows\Search workflows\Search workflows.Outputs[JsonSourceOutput].ExternalColumns[system_modified_user._name]"
                              dataType="wstr"
                              length="100"
                              name="system_modified_user._name" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Workflows\Search workflows\Search workflows.Outputs[JsonSourceOutput].ExternalColumns[system_modified_user._first_name]"
                              dataType="wstr"
                              length="48"
                              name="system_modified_user._first_name" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Workflows\Search workflows\Search workflows.Outputs[JsonSourceOutput].ExternalColumns[system_modified_user._last_name]"
                              dataType="wstr"
                              length="48"
                              name="system_modified_user._last_name" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Workflows\Search workflows\Search workflows.Outputs[JsonSourceOutput].ExternalColumns[system_modified_user._email_address]"
                              dataType="wstr"
                              length="148"
                              name="system_modified_user._email_address" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Workflows\Search workflows\Search workflows.Outputs[JsonSourceOutput].ExternalColumns[system_created_user.id]"
                              dataType="wstr"
                              length="20"
                              name="system_created_user.id" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Workflows\Search workflows\Search workflows.Outputs[JsonSourceOutput].ExternalColumns[system_created_user._name]"
                              dataType="wstr"
                              length="100"
                              name="system_created_user._name" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Workflows\Search workflows\Search workflows.Outputs[JsonSourceOutput].ExternalColumns[system_created_user._first_name]"
                              dataType="wstr"
                              length="48"
                              name="system_created_user._first_name" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Workflows\Search workflows\Search workflows.Outputs[JsonSourceOutput].ExternalColumns[system_created_user._last_name]"
                              dataType="wstr"
                              length="48"
                              name="system_created_user._last_name" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Workflows\Search workflows\Search workflows.Outputs[JsonSourceOutput].ExternalColumns[system_created_user._email_address]"
                              dataType="wstr"
                              length="148"
                              name="system_created_user._email_address" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Workflows\Search workflows\Search workflows.Outputs[JsonSourceOutput].ExternalColumns[library.id]"
                              dataType="wstr"
                              length="4"
                              name="library.id" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Workflows\Search workflows\Search workflows.Outputs[JsonSourceOutput].ExternalColumns[run_type.id]"
                              dataType="wstr"
                              length="36"
                              name="run_type.id" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Workflows\Search workflows\Search workflows.Outputs[JsonSourceOutput].ExternalColumns[run_type.text]"
                              dataType="wstr"
                              length="36"
                              name="run_type.text" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Workflows\Search workflows\Search workflows.Outputs[JsonSourceOutput].ExternalColumns[service.id]"
                              dataType="wstr"
                              length="60"
                              name="service.id" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Workflows\Search workflows\Search workflows.Outputs[JsonSourceOutput].ExternalColumns[service.text]"
                              dataType="wstr"
                              length="60"
                              name="service.text" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Workflows\Search workflows\Search workflows.Outputs[JsonSourceOutput].ExternalColumns[service_trigger.id]"
                              dataType="wstr"
                              length="64"
                              name="service_trigger.id" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Workflows\Search workflows\Search workflows.Outputs[JsonSourceOutput].ExternalColumns[service_trigger.text]"
                              dataType="wstr"
                              length="64"
                              name="service_trigger.text" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Workflows\Search workflows\Search workflows.Outputs[JsonSourceOutput].ExternalColumns[fallback_executor_user]"
                              dataType="wstr"
                              length="1020"
                              name="fallback_executor_user" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Workflows\Search workflows\Search workflows.Outputs[JsonSourceOutput].ExternalColumns[is_hidden]"
                              dataType="bool"
                              name="is_hidden">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  description="This flag indicates column is locked so it doesn't refresh datatype automatically or column is manually added by user rather than auto detect"
                                  expressionType="Notify"
                                  name="ManuallyAdded">true</property>
                              </properties>
                            </externalMetadataColumn>
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Workflows\Search workflows\Search workflows.Outputs[JsonSourceOutput].ExternalColumns[run_with_escalated_privileges]"
                              dataType="wstr"
                              length="1020"
                              name="run_with_escalated_privileges" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Workflows\Search workflows\Search workflows.Outputs[JsonSourceOutput].ExternalColumns[skip_user_validation]"
                              dataType="i8"
                              name="skip_user_validation" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Workflows\Search workflows\Search workflows.Outputs[JsonSourceOutput].ExternalColumns[notify_owner_on_error]"
                              dataType="wstr"
                              length="1020"
                              name="notify_owner_on_error" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Workflows\Search workflows\Search workflows.Outputs[JsonSourceOutput].ExternalColumns[run_as_user_id]"
                              dataType="wstr"
                              length="20"
                              name="run_as_user_id" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Workflows\Search workflows\Search workflows.Outputs[JsonSourceOutput].ExternalColumns[definition.name]"
                              dataType="wstr"
                              length="172"
                              name="definition.name" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Workflows\Search workflows\Search workflows.Outputs[JsonSourceOutput].ExternalColumns[definition.description]"
                              dataType="wstr"
                              length="532"
                              name="definition.description" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Workflows\Search workflows\Search workflows.Outputs[JsonSourceOutput].ExternalColumns[definition.state.initial.user.id]"
                              dataType="wstr"
                              length="68"
                              name="definition.state.initial.user.id" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Workflows\Search workflows\Search workflows.Outputs[JsonSourceOutput].ExternalColumns[definition.state.initial.user.name]"
                              dataType="wstr"
                              length="96"
                              name="definition.state.initial.user.name" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Workflows\Search workflows\Search workflows.Outputs[JsonSourceOutput].ExternalColumns[definition.state.initial.user.email]"
                              dataType="wstr"
                              length="80"
                              name="definition.state.initial.user.email" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Workflows\Search workflows\Search workflows.Outputs[JsonSourceOutput].ExternalColumns[definition.state.initial.account.id]"
                              dataType="wstr"
                              length="80"
                              name="definition.state.initial.account.id" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Workflows\Search workflows\Search workflows.Outputs[JsonSourceOutput].ExternalColumns[definition.state.initial.listing.id]"
                              dataType="wstr"
                              length="116"
                              name="definition.state.initial.listing.id" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Workflows\Search workflows\Search workflows.Outputs[JsonSourceOutput].ExternalColumns[definition.state.initial.post.detail_sale_price_or_lease_pa]"
                              dataType="wstr"
                              length="192"
                              name="definition.state.initial.post.detail_sale_price_or_lease_pa" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Workflows\Search workflows\Search workflows.Outputs[JsonSourceOutput].ExternalColumns[definition.state.initial.post.purchtenant_legal_name]"
                              dataType="wstr"
                              length="320"
                              name="definition.state.initial.post.purchtenant_legal_name" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Workflows\Search workflows\Search workflows.Outputs[JsonSourceOutput].ExternalColumns[definition.state.initial.post.listing.property.system_search_key]"
                              dataType="wstr"
                              length="216"
                              name="definition.state.initial.post.listing.property.system_search_key" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Workflows\Search workflows\Search workflows.Outputs[JsonSourceOutput].ExternalColumns[definition.steps]"
                              dataType="nText"
                              name="definition.steps" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Workflows\Search workflows\Search workflows.Outputs[JsonSourceOutput].ExternalColumns[definition.first_step]"
                              dataType="wstr"
                              length="80"
                              name="definition.first_step" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Workflows\Search workflows\Search workflows.Outputs[JsonSourceOutput].ExternalColumns[definition.required_input.form.id]"
                              dataType="wstr"
                              length="144"
                              name="definition.required_input.form.id" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Workflows\Search workflows\Search workflows.Outputs[JsonSourceOutput].ExternalColumns[definition.required_input.form.definition.schema]"
                              dataType="wstr"
                              length="80"
                              name="definition.required_input.form.definition.schema" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Workflows\Search workflows\Search workflows.Outputs[JsonSourceOutput].ExternalColumns[definition.required_input.form.definition.name]"
                              dataType="wstr"
                              length="116"
                              name="definition.required_input.form.definition.name" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Workflows\Search workflows\Search workflows.Outputs[JsonSourceOutput].ExternalColumns[definition.required_input.form.definition.label]"
                              dataType="wstr"
                              length="184"
                              name="definition.required_input.form.definition.label" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Workflows\Search workflows\Search workflows.Outputs[JsonSourceOutput].ExternalColumns[definition.required_input.form.definition.description]"
                              dataType="wstr"
                              length="80"
                              name="definition.required_input.form.definition.description" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Workflows\Search workflows\Search workflows.Outputs[JsonSourceOutput].ExternalColumns[definition.required_input.form.definition.fields]"
                              dataType="wstr"
                              length="2844"
                              name="definition.required_input.form.definition.fields" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Workflows\Search workflows\Search workflows.Outputs[JsonSourceOutput].ExternalColumns[definition.required_input.form.definition.required_submission_context]"
                              dataType="wstr"
                              length="8"
                              name="definition.required_input.form.definition.required_submission_context" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Workflows\Search workflows\Search workflows.Outputs[JsonSourceOutput].ExternalColumns[_id]"
                              dataType="i4"
                              name="_id">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  description="This flag indicates column is locked so it doesn't refresh datatype automatically or column is manually added by user rather than auto detect"
                                  expressionType="Notify"
                                  name="ManuallyAdded">true</property>
                              </properties>
                            </externalMetadataColumn>
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Workflows\Search workflows\Search workflows.Outputs[JsonSourceOutput].ExternalColumns[definition.preflight.function.format]"
                              dataType="wstr"
                              length="24"
                              name="definition.preflight.function.format" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Workflows\Search workflows\Search workflows.Outputs[JsonSourceOutput].ExternalColumns[definition.preflight.function.code]"
                              dataType="wstr"
                              length="2896"
                              name="definition.preflight.function.code" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Workflows\Search workflows\Search workflows.Outputs[JsonSourceOutput].ExternalColumns[definition.preflight.function.data]"
                              dataType="wstr"
                              length="8"
                              name="definition.preflight.function.data" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Workflows\Search workflows\Search workflows.Outputs[JsonSourceOutput].ExternalColumns[definition.preflight.function.modules]"
                              dataType="wstr"
                              length="8"
                              name="definition.preflight.function.modules" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Workflows\Search workflows\Search workflows.Outputs[JsonSourceOutput].ExternalColumns[definition.preflight.function.requires_api_token]"
                              dataType="bool"
                              name="definition.preflight.function.requires_api_token" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Workflows\Search workflows\Search workflows.Outputs[JsonSourceOutput].ExternalColumns[definition.preflight.error_message]"
                              dataType="wstr"
                              length="92"
                              name="definition.preflight.error_message" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Workflows\Search workflows\Search workflows.Outputs[JsonSourceOutput].ExternalColumns[service]"
                              dataType="wstr"
                              length="1020"
                              name="service" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Workflows\Search workflows\Search workflows.Outputs[JsonSourceOutput].ExternalColumns[service_trigger]"
                              dataType="wstr"
                              length="1020"
                              name="service_trigger" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Workflows\Search workflows\Search workflows.Outputs[JsonSourceOutput].ExternalColumns[definition.state.initial.debug]"
                              dataType="bool"
                              name="definition.state.initial.debug" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Workflows\Search workflows\Search workflows.Outputs[JsonSourceOutput].ExternalColumns[definition.state.initial.days]"
                              dataType="wstr"
                              length="8"
                              name="definition.state.initial.days" />
                            <externalMetadataColumn
                              refId="Package\Foreach migrated account\Workflows\Search workflows\Search workflows.Outputs[JsonSourceOutput].ExternalColumns[__FileName]"
                              dataType="wstr"
                              length="600"
                              name="__FileName" />
                          </externalMetadataColumns>
                        </output>
                        <output
                          refId="Package\Foreach migrated account\Workflows\Search workflows\Search workflows.Outputs[JsonSource Error Output]"
                          isErrorOut="true"
                          name="JsonSource Error Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Foreach migrated account\Workflows\Search workflows\Search workflows.Outputs[JsonSource Error Output].Columns[is_hidden]"
                              dataType="bool"
                              lineageId="Package\Foreach migrated account\Workflows\Search workflows\Search workflows.Outputs[JsonSource Error Output].Columns[is_hidden]"
                              name="is_hidden" />
                            <outputColumn
                              refId="Package\Foreach migrated account\Workflows\Search workflows\Search workflows.Outputs[JsonSource Error Output].Columns[is_enabled]"
                              dataType="bool"
                              lineageId="Package\Foreach migrated account\Workflows\Search workflows\Search workflows.Outputs[JsonSource Error Output].Columns[is_enabled]"
                              name="is_enabled" />
                            <outputColumn
                              refId="Package\Foreach migrated account\Workflows\Search workflows\Search workflows.Outputs[JsonSource Error Output].Columns[id]"
                              dataType="i4"
                              lineageId="Package\Foreach migrated account\Workflows\Search workflows\Search workflows.Outputs[JsonSource Error Output].Columns[id]"
                              name="id" />
                            <outputColumn
                              refId="Package\Foreach migrated account\Workflows\Search workflows\Search workflows.Outputs[JsonSource Error Output].Columns[name]"
                              dataType="wstr"
                              length="1000"
                              lineageId="Package\Foreach migrated account\Workflows\Search workflows\Search workflows.Outputs[JsonSource Error Output].Columns[name]"
                              name="name" />
                            <outputColumn
                              refId="Package\Foreach migrated account\Workflows\Search workflows\Search workflows.Outputs[JsonSource Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Foreach migrated account\Workflows\Search workflows\Search workflows.Outputs[JsonSource Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Foreach migrated account\Workflows\Search workflows\Search workflows.Outputs[JsonSource Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Foreach migrated account\Workflows\Search workflows\Search workflows.Outputs[JsonSource Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                            <outputColumn
                              refId="Package\Foreach migrated account\Workflows\Search workflows\Search workflows.Outputs[JsonSource Error Output].Columns[ErrorColumnName]"
                              codePage="1252"
                              dataType="str"
                              length="128"
                              lineageId="Package\Foreach migrated account\Workflows\Search workflows\Search workflows.Outputs[JsonSource Error Output].Columns[ErrorColumnName]"
                              name="ErrorColumnName" />
                            <outputColumn
                              refId="Package\Foreach migrated account\Workflows\Search workflows\Search workflows.Outputs[JsonSource Error Output].Columns[ErrorMessage]"
                              dataType="wstr"
                              length="1024"
                              lineageId="Package\Foreach migrated account\Workflows\Search workflows\Search workflows.Outputs[JsonSource Error Output].Columns[ErrorMessage]"
                              name="ErrorMessage" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                  </components>
                  <paths>
                    <path
                      refId="Package\Foreach migrated account\Workflows\Search workflows.Paths[disabled]"
                      endId="Package\Foreach migrated account\Workflows\Search workflows\Create disabled list.Inputs[Input 0]"
                      name="disabled"
                      startId="Package\Foreach migrated account\Workflows\Search workflows\Enabled split.Outputs[disabled]" />
                    <path
                      refId="Package\Foreach migrated account\Workflows\Search workflows.Paths[enabled]"
                      endId="Package\Foreach migrated account\Workflows\Search workflows\Create enabled list.Inputs[Input 0]"
                      name="enabled"
                      startId="Package\Foreach migrated account\Workflows\Search workflows\Enabled split.Outputs[enabled]" />
                    <path
                      refId="Package\Foreach migrated account\Workflows\Search workflows.Paths[hidden]"
                      endId="Package\Foreach migrated account\Workflows\Search workflows\Create hidden list.Inputs[Input 0]"
                      name="hidden"
                      startId="Package\Foreach migrated account\Workflows\Search workflows\Hidden split.Outputs[hidden]" />
                    <path
                      refId="Package\Foreach migrated account\Workflows\Search workflows.Paths[JsonSourceOutput]"
                      endId="Package\Foreach migrated account\Workflows\Search workflows\Remove invalid chars from name.Inputs[Input 0]"
                      name="JsonSourceOutput"
                      startId="Package\Foreach migrated account\Workflows\Search workflows\Search workflows.Outputs[JsonSourceOutput]" />
                    <path
                      refId="Package\Foreach migrated account\Workflows\Search workflows.Paths[Multicast Output 1]"
                      endId="Package\Foreach migrated account\Workflows\Search workflows\Enabled split.Inputs[Conditional Split Input]"
                      name="Multicast Output 1"
                      startId="Package\Foreach migrated account\Workflows\Search workflows\Multicast.Outputs[Multicast Output 1]" />
                    <path
                      refId="Package\Foreach migrated account\Workflows\Search workflows.Paths[Multicast Output 2]"
                      endId="Package\Foreach migrated account\Workflows\Search workflows\Hidden split.Inputs[Conditional Split Input]"
                      name="Multicast Output 2"
                      startId="Package\Foreach migrated account\Workflows\Search workflows\Multicast.Outputs[Multicast Output 2]" />
                    <path
                      refId="Package\Foreach migrated account\Workflows\Search workflows.Paths[Output 0]"
                      endId="Package\Foreach migrated account\Workflows\Search workflows\Multicast.Inputs[Multicast Input 1]"
                      name="Output 0"
                      startId="Package\Foreach migrated account\Workflows\Search workflows\Remove invalid chars from name.Outputs[Output 0]" />
                    <path
                      refId="Package\Foreach migrated account\Workflows\Search workflows.Paths[visible]"
                      endId="Package\Foreach migrated account\Workflows\Search workflows\Create visible list.Inputs[Input 0]"
                      name="visible"
                      startId="Package\Foreach migrated account\Workflows\Search workflows\Hidden split.Outputs[visible]" />
                  </paths>
                </pipeline>
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Foreach migrated account\Workflows.PrecedenceConstraints[Constraint 3]"
              DTS:CreationName=""
              DTS:DTSID="{D05D4CDE-9793-4C83-824C-9239A40EB0F8}"
              DTS:From="Package\Foreach migrated account\Workflows\Search workflows"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 3"
              DTS:To="Package\Foreach migrated account\Workflows\Form json" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Foreach migrated account\Workflows.PrecedenceConstraints[Constraint 4]"
              DTS:CreationName=""
              DTS:DTSID="{548CD873-71A5-47B7-8D23-A819B687CB93}"
              DTS:From="Package\Foreach migrated account\Workflows\Form json"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 4"
              DTS:To="Package\Foreach migrated account\Workflows\Insert to db" />
          </DTS:PrecedenceConstraints>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach migrated account.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{7BB92D25-FAB6-405F-BAE3-526D5867E2AE}"
          DTS:From="Package\Foreach migrated account\Get auth key"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Foreach migrated account\Workflows" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach migrated account.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{F46A7869-A5F0-4891-83E5-26CC28925C16}"
          DTS:From="Package\Foreach migrated account\Get auth key"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Foreach migrated account\Metrics" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach migrated account.PrecedenceConstraints[Constraint 2]"
          DTS:CreationName=""
          DTS:DTSID="{CCE91BCC-117E-4DEA-9560-C4C9171A7424}"
          DTS:From="Package\Foreach migrated account\Get auth key"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 2"
          DTS:To="Package\Foreach migrated account\Custom Validation" />
      </DTS:PrecedenceConstraints>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{300AFB8D-65EB-4DD9-9298-8D4D699DD775}"
          DTS:ObjectName="{300AFB8D-65EB-4DD9-9298-8D4D699DD775}"
          DTS:ValueIndex="0"
          DTS:VariableName="User::OfficeID" />
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{2473DF61-A7AD-4386-A44D-281A66EE9749}"
          DTS:ObjectName="{2473DF61-A7AD-4386-A44D-281A66EE9749}"
          DTS:ValueIndex="1"
          DTS:VariableName="User::RexAccountID" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Get all accounts"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{EF358DDA-CAB0-44C7-BB99-3E00F27B6127}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Get all accounts"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{308E9EC4-EE59-4D5B-9275-9EC80ADF1BC9}"
          SQLTask:SqlStatementSource="SELECT DISTINCT cf.org_office_identity_office_id AS office_id, a.id AS r_account_id&#xA;FROM Account a&#xA;LEFT JOIN AccountCustomFields cf&#xA;&#x9;ON a.id = cf.account_id&#xA;WHERE cf.org_office_identity_office_id IS NOT NULL"
          SQLTask:ResultType="ResultSetType_Rowset" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ResultBinding
            SQLTask:ResultName="0"
            SQLTask:DtsVariableName="User::Object_Offices" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Set variables"
      DTS:CreationName="ZappySys.XmlParserTask"
      DTS:Description="ZS Xml Parser Task"
      DTS:DTSID="{27773cab-519c-48ef-bfca-38d95906e422}"
      DTS:ExecutableType="ZappySys.XmlParserTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Set variables"
      DTS:TaskContact="Xml Parser Task; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <XmlParserTask
          SourceAccessMode="Connection"
          SourceVariable=""
          SourceConnection="{6ED0D244-645D-436E-A056-722C104EE359}"
          SourceDirectValue="&lt;!-- &#xA;Using XML Parser Task you can extract values from XML document using XPath Expression &#xA;See example in below grid. Read description for each mapping.&#xA;See more examples: https://msdn.microsoft.com/en-us/library/ms256086(v=vs.110).aspx&#xA;--&gt;&#xA;&lt;catalog&gt;&#xA;   &lt;book id=&quot;bk101&quot;&gt;&#xA;      &lt;author&gt;Gambardella, Matthew&lt;/author&gt;&#xA;      &lt;title&gt;XML Developer's Guide&lt;/title&gt;&#xA;      &lt;genre&gt;Computer&lt;/genre&gt;&#xA;      &lt;price&gt;44.95&lt;/price&gt;&#xA;      &lt;publish_date&gt;2000-10-01&lt;/publish_date&gt;&#xA;      &lt;description&gt;An in-depth look at creating applications &#xA;      with XML.&lt;/description&gt;&#xA;   &lt;/book&gt;&#xA;   &lt;book id=&quot;bk102&quot;&gt;&#xA;      &lt;author&gt;Ralls, Kim&lt;/author&gt;&#xA;      &lt;title&gt;Midnight Rain&lt;/title&gt;&#xA;      &lt;genre&gt;Fantasy&lt;/genre&gt;&#xA;      &lt;price&gt;5.95&lt;/price&gt;&#xA;      &lt;publish_date&gt;2000-12-16&lt;/publish_date&gt;&#xA;      &lt;description&gt;A former architect battles corporate zombies, &#xA;      an evil sorceress, and her own childhood to become queen &#xA;      of the world.&lt;/description&gt;&#xA;   &lt;/book&gt;&#xA;   &lt;book id=&quot;bk103&quot;&gt;&#xA;      &lt;author&gt;Corets, Eva&lt;/author&gt;&#xA;      &lt;title&gt;Maeve Ascendant&lt;/title&gt;&#xA;      &lt;genre&gt;Fantasy&lt;/genre&gt;&#xA;      &lt;price&gt;5.95&lt;/price&gt;&#xA;      &lt;publish_date&gt;2000-11-17&lt;/publish_date&gt;&#xA;      &lt;description&gt;After the collapse of a nanotechnology &#xA;      society in England, the young survivors lay the &#xA;      foundation for a new society.&lt;/description&gt;&#xA;   &lt;/book&gt;&#xA;   &lt;book id=&quot;bk104&quot;&gt;&#xA;      &lt;author&gt;Corets, Eva&lt;/author&gt;&#xA;      &lt;title&gt;Oberon's Legacy&lt;/title&gt;&#xA;      &lt;genre&gt;Fantasy&lt;/genre&gt;&#xA;      &lt;price&gt;5.95&lt;/price&gt;&#xA;      &lt;publish_date&gt;2001-03-10&lt;/publish_date&gt;&#xA;      &lt;description&gt;In post-apocalypse England, the mysterious &#xA;      agent known only as Oberon helps to create a new life &#xA;      for the inhabitants of London. Sequel to Maeve &#xA;      Ascendant.&lt;/description&gt;&#xA;   &lt;/book&gt;&#xA;&lt;/catalog&gt;"
          TargetSettings="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-16&quot;?&gt;&lt;XmlParserSetting xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot;&gt;&lt;Mappings&gt;&lt;XmlParserMapping&gt;&lt;Path&gt;/SSISVariables/RexAPIWebURL&lt;/Path&gt;&lt;Target&gt;User::API_URL&lt;/Target&gt;&lt;Required&gt;true&lt;/Required&gt;&lt;Description /&gt;&lt;/XmlParserMapping&gt;&lt;XmlParserMapping&gt;&lt;Path&gt;/SSISVariables/PackageUser&lt;/Path&gt;&lt;Target&gt;User::API_Username&lt;/Target&gt;&lt;Required&gt;true&lt;/Required&gt;&lt;Description /&gt;&lt;/XmlParserMapping&gt;&lt;XmlParserMapping&gt;&lt;Path&gt;/SSISVariables/PackagePassword&lt;/Path&gt;&lt;Target&gt;User::API_Password&lt;/Target&gt;&lt;Required&gt;true&lt;/Required&gt;&lt;Description /&gt;&lt;/XmlParserMapping&gt;&lt;XmlParserMapping&gt;&lt;Path&gt;/SSISVariables/PackageErrorEmail&lt;/Path&gt;&lt;Target&gt;User::ErrorEmail&lt;/Target&gt;&lt;Required&gt;true&lt;/Required&gt;&lt;Description /&gt;&lt;/XmlParserMapping&gt;&lt;/Mappings&gt;&lt;Path /&gt;&lt;/XmlParserSetting&gt;"
          LogLevel="Normal"
          PrefixTimestamp="False" />
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{C26534B1-69B9-4DBD-A22B-9815FF19D572}"
      DTS:From="Package\Set variables"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Get all accounts" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{9A27EFAE-EE32-4DC1-BF8B-7E85CD807361}"
      DTS:From="Package\Get all accounts"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Delete todays logs" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{2E5B91C8-BD10-473F-B9A1-909CEAFC812D}"
      DTS:From="Package\Delete todays logs"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\Foreach migrated account" />
  </DTS:PrecedenceConstraints>
  <DTS:EventHandlers>
    <DTS:EventHandler
      DTS:refId="Package.EventHandlers[OnError]"
      DTS:CreationName="OnError"
      DTS:DTSID="{6111600D-26CD-4A40-87B6-F183768A932A}"
      DTS:EventID="0"
      DTS:EventName="OnError"
      DTS:LocaleID="-1">
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="The propagate property of the event"
          DTS:DTSID="{F3449B85-0D0D-45B0-B85A-0BAD722E76B4}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="System"
          DTS:ObjectName="Propagate">
          <DTS:VariableValue
            DTS:DataType="11">-1</DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnError]\Insert error log into database"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{6770bef9-096c-4f30-8e75-c528f193594e}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Insert error log into database"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{1ACC4D99-A047-44CB-AAAD-088F42F69A23}"
              SQLTask:SqlStatementSource="INSERT INTO SSISErrorLog&#xA;(PackageName, StartTime, ErrorCode, ErrorDescription, AccountID)&#xA;VALUES&#xA;(?, ?, ?, ?, NULL)" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@PackageName"
                SQLTask:DtsVariableName="System::PackageName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@StartTime"
                SQLTask:DtsVariableName="System::StartTime"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="7"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@ErrorCode"
                SQLTask:DtsVariableName="System::ErrorCode"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@ErrorDescription"
                SQLTask:DtsVariableName="System::ErrorDescription"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:EventHandler>
  </DTS:EventHandlers>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="166,42"
          Id="Package\Delete todays logs"
          TopLeft="255.5,209.5" />
        <NodeLayout
          Size="126,42"
          Id="Package\Foreach migrated account\Custom Validation\Form json"
          TopLeft="38.5,107.5" />
        <NodeLayout
          Size="135,42"
          Id="Package\Foreach migrated account\Custom Validation\Insert to db"
          TopLeft="34,209.5" />
        <NodeLayout
          Size="192,42"
          Id="Package\Foreach migrated account\Custom Validation\Search cutom validation"
          TopLeft="5.50000000000001,5.5" />
        <EdgeLayout
          Id="Package\Foreach migrated account\Custom Validation.PrecedenceConstraints[Constraint]"
          TopLeft="101.5,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach migrated account\Custom Validation.PrecedenceConstraints[Constraint 1]"
          TopLeft="101.5,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="203,306"
          Size="203,350"
          Id="Package\Foreach migrated account\Custom Validation"
          TopLeft="458,107.5" />
        <NodeLayout
          Size="139,42"
          Id="Package\Foreach migrated account\Get auth key"
          TopLeft="248,5.49999999999989" />
        <NodeLayout
          Size="126,42"
          Id="Package\Foreach migrated account\Metrics\Form json"
          TopLeft="16.5,107.5" />
        <NodeLayout
          Size="135,42"
          Id="Package\Foreach migrated account\Metrics\Insert to db"
          TopLeft="12,209.5" />
        <NodeLayout
          Size="148,42"
          Id="Package\Foreach migrated account\Metrics\Search metrics"
          TopLeft="5.50000000000001,5.5" />
        <EdgeLayout
          Id="Package\Foreach migrated account\Metrics.PrecedenceConstraints[Constraint]"
          TopLeft="79.5,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach migrated account\Metrics.PrecedenceConstraints[Constraint 1]"
          TopLeft="79.5,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="159,306"
          Size="159,350"
          Id="Package\Foreach migrated account\Metrics"
          TopLeft="238,107.5" />
        <NodeLayout
          Size="126,42"
          Id="Package\Foreach migrated account\Workflows\Form json"
          TopLeft="23,107.5" />
        <NodeLayout
          Size="135,42"
          Id="Package\Foreach migrated account\Workflows\Insert to db"
          TopLeft="18.5,209.5" />
        <NodeLayout
          Size="161,42"
          Id="Package\Foreach migrated account\Workflows\Search workflows"
          TopLeft="5.50000000000001,5.5" />
        <EdgeLayout
          Id="Package\Foreach migrated account\Workflows.PrecedenceConstraints[Constraint 3]"
          TopLeft="86,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach migrated account\Workflows.PrecedenceConstraints[Constraint 4]"
          TopLeft="86,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="172,306"
          Size="172,350"
          Id="Package\Foreach migrated account\Workflows"
          TopLeft="5.50000000000006,107.5" />
        <EdgeLayout
          Id="Package\Foreach migrated account.PrecedenceConstraints[Constraint]"
          TopLeft="284.75,47.4999999999999">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-193.25,60.0000000000001"
              Start="0,0"
              End="-193.25,52.5000000000001">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.7529411764706" />
                  <mssgle:CubicBezierSegment
                    Point1="0,16.7529411764706"
                    Point2="0,20.7529411764706"
                    Point3="-4,20.7529411764706" />
                  <mssgle:LineSegment
                    End="-189.25,20.7529411764706" />
                  <mssgle:CubicBezierSegment
                    Point1="-189.25,20.7529411764706"
                    Point2="-193.25,20.7529411764706"
                    Point3="-193.25,24.7529411764706" />
                  <mssgle:LineSegment
                    End="-193.25,52.5000000000001" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach migrated account.PrecedenceConstraints[Constraint 1]"
          TopLeft="317.5,47.4999999999999">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach migrated account.PrecedenceConstraints[Constraint 2]"
          TopLeft="350.25,47.4999999999999">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="209.25,60"
              Start="0,0"
              End="209.25,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.7529411764706" />
                  <mssgle:CubicBezierSegment
                    Point1="0,16.7529411764706"
                    Point2="0,20.7529411764706"
                    Point3="4,20.7529411764706" />
                  <mssgle:LineSegment
                    End="205.25,20.7529411764706" />
                  <mssgle:CubicBezierSegment
                    Point1="205.25,20.7529411764706"
                    Point2="209.25,20.7529411764706"
                    Point3="209.25,24.7529411764706" />
                  <mssgle:LineSegment
                    End="209.25,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="666,512"
          Size="666,556"
          Id="Package\Foreach migrated account"
          TopLeft="5.50000000000011,311.5" />
        <NodeLayout
          Size="154,42"
          Id="Package\Get all accounts"
          TopLeft="261.5,107.5" />
        <NodeLayout
          Size="139,42"
          Id="Package\Set variables"
          TopLeft="269,5.5" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="338.5,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="338.5,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="338.5,251.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <DtsEventHandler
    design-time-name="Package.EventHandlers[OnError]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="217,42"
          Id="Package.EventHandlers[OnError]\Insert error log into database"
          TopLeft="5.5,5.5" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <TaskHost
    design-time-name="Package\Foreach migrated account\Custom Validation\Search cutom validation">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="167,42"
          Id="Package\Foreach migrated account\Custom Validation\Search cutom validation\Create enabled list"
          TopLeft="5.5,413.5" />
        <NodeLayout
          Size="161,42"
          Id="Package\Foreach migrated account\Custom Validation\Search cutom validation\Create hidden list"
          TopLeft="461.5,413.5" />
        <NodeLayout
          Size="158,42"
          Id="Package\Foreach migrated account\Custom Validation\Search cutom validation\Create visible list"
          TopLeft="683,413.5" />
        <NodeLayout
          Size="197,42"
          Id="Package\Foreach migrated account\Custom Validation\Search cutom validation\Search custom validation"
          TopLeft="443.5,5.49999999999989" />
        <NodeLayout
          Size="141,42"
          Id="Package\Foreach migrated account\Custom Validation\Search cutom validation\Disabled split"
          TopLeft="471.5,311.5" />
        <NodeLayout
          Size="139,42"
          Id="Package\Foreach migrated account\Custom Validation\Search cutom validation\Enabled split"
          TopLeft="247.5,311.5" />
        <NodeLayout
          Size="120,42"
          Id="Package\Foreach migrated account\Custom Validation\Search cutom validation\Multicast"
          TopLeft="482,209.5" />
        <NodeLayout
          Size="168,42"
          Id="Package\Foreach migrated account\Custom Validation\Search cutom validation\Create disabled list"
          TopLeft="233,413.5" />
        <NodeLayout
          Size="233,42"
          Id="Package\Foreach migrated account\Custom Validation\Search cutom validation\Remove invalid chars from name"
          TopLeft="425.5,107.5" />
        <EdgeLayout
          Id="Package\Foreach migrated account\Custom Validation\Search cutom validation.Paths[visible]"
          TopLeft="564.166666666667,353.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="197.833333333333,60"
              Start="0,0"
              End="197.833333333333,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.4039270687237" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.4039270687237"
                    Point2="0,24.4039270687237"
                    Point3="4,24.4039270687237" />
                  <mssgle:LineSegment
                    End="193.833333333333,24.4039270687237" />
                  <mssgle:CubicBezierSegment
                    Point1="193.833333333333,24.4039270687237"
                    Point2="197.833333333333,24.4039270687237"
                    Point3="197.833333333333,28.4039270687237" />
                  <mssgle:LineSegment
                    End="197.833333333333,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="84.5113151041665,29.4039270687237,28.810703125,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach migrated account\Custom Validation\Search cutom validation.Paths[Output 0]"
          TopLeft="542,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach migrated account\Custom Validation\Search cutom validation.Paths[Multicast Output 2]"
          TopLeft="560.666666666667,251.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-18.6666666666666,60"
              Start="0,0"
              End="-18.6666666666666,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.4736842105263" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.4736842105263"
                    Point2="0,24.4736842105263"
                    Point3="-4,24.4736842105263" />
                  <mssgle:LineSegment
                    End="-14.6666666666666,24.4736842105263" />
                  <mssgle:CubicBezierSegment
                    Point1="-14.6666666666666,24.4736842105263"
                    Point2="-18.6666666666666,24.4736842105263"
                    Point3="-18.6666666666666,28.4736842105263" />
                  <mssgle:LineSegment
                    End="-18.6666666666666,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach migrated account\Custom Validation\Search cutom validation.Paths[Multicast Output 1]"
          TopLeft="523.333333333333,251.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-206.333333333333,60"
              Start="0,0"
              End="-206.333333333333,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.4736842105263" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.4736842105263"
                    Point2="0,24.4736842105263"
                    Point3="-4,24.4736842105263" />
                  <mssgle:LineSegment
                    End="-202.333333333333,24.4736842105263" />
                  <mssgle:CubicBezierSegment
                    Point1="-202.333333333333,24.4736842105263"
                    Point2="-206.333333333333,24.4736842105263"
                    Point3="-206.333333333333,28.4736842105263" />
                  <mssgle:LineSegment
                    End="-206.333333333333,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach migrated account\Custom Validation\Search cutom validation.Paths[JsonSourceOutput]"
          TopLeft="542,47.4999999999999">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach migrated account\Custom Validation\Search cutom validation.Paths[hidden]"
          TopLeft="519.833333333333,353.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="22.1666666666666,60"
              Start="0,0"
              End="22.1666666666666,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.4039270687237" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.4039270687237"
                    Point2="0,24.4039270687237"
                    Point3="4,24.4039270687237" />
                  <mssgle:LineSegment
                    End="18.1666666666666,24.4039270687237" />
                  <mssgle:CubicBezierSegment
                    Point1="18.1666666666666,24.4039270687237"
                    Point2="22.1666666666666,24.4039270687237"
                    Point3="22.1666666666666,28.4039270687237" />
                  <mssgle:LineSegment
                    End="22.1666666666666,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-4.1552213541667,29.4039270687237,30.477109375,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach migrated account\Custom Validation\Search cutom validation.Paths[enabled]"
          TopLeft="295.166666666667,353.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-206.166666666667,60.0000000000001"
              Start="0,0"
              End="-206.166666666667,52.5000000000001">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.4096728307255" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.4096728307255"
                    Point2="0,24.4096728307255"
                    Point3="-4,24.4096728307255" />
                  <mssgle:LineSegment
                    End="-202.166666666667,24.4096728307255" />
                  <mssgle:CubicBezierSegment
                    Point1="-202.166666666667,24.4096728307255"
                    Point2="-206.166666666667,24.4096728307255"
                    Point3="-206.166666666667,28.4096728307255" />
                  <mssgle:LineSegment
                    End="-206.166666666667,52.5000000000001" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-120.955930989583,29.4096728307255,35.7451953125,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach migrated account\Custom Validation\Search cutom validation.Paths[disabled]"
          TopLeft="338.833333333333,353.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-21.8333333333333,60"
              Start="0,0"
              End="-21.8333333333333,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.4096728307255" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.4096728307255"
                    Point2="0,24.4096728307255"
                    Point3="-4,24.4096728307255" />
                  <mssgle:LineSegment
                    End="-17.8333333333333,24.4096728307255" />
                  <mssgle:CubicBezierSegment
                    Point1="-17.8333333333333,24.4096728307255"
                    Point2="-21.8333333333333,24.4096728307255"
                    Point3="-21.8333333333333,28.4096728307255" />
                  <mssgle:LineSegment
                    End="-21.8333333333333,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-29.5092643229167,29.4096728307255,37.1851953125,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <TaskHost
    design-time-name="Package\Foreach migrated account\Metrics\Search metrics">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="167,42"
          Id="Package\Foreach migrated account\Metrics\Search metrics\Create enabled list"
          TopLeft="5.5,413.5" />
        <NodeLayout
          Size="161,42"
          Id="Package\Foreach migrated account\Metrics\Search metrics\Create hidden list"
          TopLeft="461.5,413.5" />
        <NodeLayout
          Size="158,42"
          Id="Package\Foreach migrated account\Metrics\Search metrics\Create visible list"
          TopLeft="683,413.5" />
        <NodeLayout
          Size="148,42"
          Id="Package\Foreach migrated account\Metrics\Search metrics\Search metrics"
          TopLeft="468,5.49999999999989" />
        <NodeLayout
          Size="139,42"
          Id="Package\Foreach migrated account\Metrics\Search metrics\Enabled split"
          TopLeft="247.5,311.5" />
        <NodeLayout
          Size="134,42"
          Id="Package\Foreach migrated account\Metrics\Search metrics\Hidden split"
          TopLeft="475,311.5" />
        <NodeLayout
          Size="120,42"
          Id="Package\Foreach migrated account\Metrics\Search metrics\Multicast"
          TopLeft="482,209.5" />
        <NodeLayout
          Size="168,42"
          Id="Package\Foreach migrated account\Metrics\Search metrics\Create disabled list"
          TopLeft="233,413.5" />
        <NodeLayout
          Size="233,42"
          Id="Package\Foreach migrated account\Metrics\Search metrics\Remove invalid chars from name"
          TopLeft="425.5,107.5" />
        <EdgeLayout
          Id="Package\Foreach migrated account\Metrics\Search metrics.Paths[enabled]"
          TopLeft="295.166666666667,353.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-206.166666666667,60.0000000000001"
              Start="0,0"
              End="-206.166666666667,52.5000000000001">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.4096728307255" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.4096728307255"
                    Point2="0,24.4096728307255"
                    Point3="-4,24.4096728307255" />
                  <mssgle:LineSegment
                    End="-202.166666666667,24.4096728307255" />
                  <mssgle:CubicBezierSegment
                    Point1="-202.166666666667,24.4096728307255"
                    Point2="-206.166666666667,24.4096728307255"
                    Point3="-206.166666666667,28.4096728307255" />
                  <mssgle:LineSegment
                    End="-206.166666666667,52.5000000000001" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-120.955930989583,29.4096728307255,35.7451953125,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach migrated account\Metrics\Search metrics.Paths[disabled]"
          TopLeft="338.833333333333,353.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-21.8333333333333,60"
              Start="0,0"
              End="-21.8333333333333,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.4096728307255" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.4096728307255"
                    Point2="0,24.4096728307255"
                    Point3="-4,24.4096728307255" />
                  <mssgle:LineSegment
                    End="-17.8333333333333,24.4096728307255" />
                  <mssgle:CubicBezierSegment
                    Point1="-17.8333333333333,24.4096728307255"
                    Point2="-21.8333333333333,24.4096728307255"
                    Point3="-21.8333333333333,28.4096728307255" />
                  <mssgle:LineSegment
                    End="-21.8333333333333,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-29.5092643229167,29.4096728307255,37.1851953125,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach migrated account\Metrics\Search metrics.Paths[visible]"
          TopLeft="563,353.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="199,60"
              Start="0,0"
              End="199,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.4247787610619" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.4247787610619"
                    Point2="0,24.4247787610619"
                    Point3="4,24.4247787610619" />
                  <mssgle:LineSegment
                    End="195,24.4247787610619" />
                  <mssgle:CubicBezierSegment
                    Point1="195,24.4247787610619"
                    Point2="199,24.4247787610619"
                    Point3="199,28.4247787610619" />
                  <mssgle:LineSegment
                    End="199,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="85.0946484375,29.4247787610619,28.810703125,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach migrated account\Metrics\Search metrics.Paths[Output 0]"
          TopLeft="542,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach migrated account\Metrics\Search metrics.Paths[Multicast Output 2]"
          TopLeft="560.666666666667,251.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-18.6666666666666,60"
              Start="0,0"
              End="-18.6666666666666,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.4736842105263" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.4736842105263"
                    Point2="0,24.4736842105263"
                    Point3="-4,24.4736842105263" />
                  <mssgle:LineSegment
                    End="-14.6666666666666,24.4736842105263" />
                  <mssgle:CubicBezierSegment
                    Point1="-14.6666666666666,24.4736842105263"
                    Point2="-18.6666666666666,24.4736842105263"
                    Point3="-18.6666666666666,28.4736842105263" />
                  <mssgle:LineSegment
                    End="-18.6666666666666,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach migrated account\Metrics\Search metrics.Paths[Multicast Output 1]"
          TopLeft="523.333333333333,251.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-206.333333333333,60"
              Start="0,0"
              End="-206.333333333333,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.4736842105263" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.4736842105263"
                    Point2="0,24.4736842105263"
                    Point3="-4,24.4736842105263" />
                  <mssgle:LineSegment
                    End="-202.333333333333,24.4736842105263" />
                  <mssgle:CubicBezierSegment
                    Point1="-202.333333333333,24.4736842105263"
                    Point2="-206.333333333333,24.4736842105263"
                    Point3="-206.333333333333,28.4736842105263" />
                  <mssgle:LineSegment
                    End="-206.333333333333,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach migrated account\Metrics\Search metrics.Paths[JsonSourceOutput]"
          TopLeft="542,47.4999999999999">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach migrated account\Metrics\Search metrics.Paths[hidden]"
          TopLeft="521,353.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="21,60"
              Start="0,0"
              End="21,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.4247787610619" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.4247787610619"
                    Point2="0,24.4247787610619"
                    Point3="4,24.4247787610619" />
                  <mssgle:LineSegment
                    End="17,24.4247787610619" />
                  <mssgle:CubicBezierSegment
                    Point1="17,24.4247787610619"
                    Point2="21,24.4247787610619"
                    Point3="21,28.4247787610619" />
                  <mssgle:LineSegment
                    End="21,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-4.7385546875,29.4247787610619,30.477109375,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <TaskHost
    design-time-name="Package\Foreach migrated account\Workflows\Search workflows">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="167,42"
          Id="Package\Foreach migrated account\Workflows\Search workflows\Create enabled list"
          TopLeft="5.5,413.5" />
        <NodeLayout
          Size="161,42"
          Id="Package\Foreach migrated account\Workflows\Search workflows\Create hidden list"
          TopLeft="461.5,413.5" />
        <NodeLayout
          Size="158,42"
          Id="Package\Foreach migrated account\Workflows\Search workflows\Create visible list"
          TopLeft="683,413.5" />
        <NodeLayout
          Size="161,42"
          Id="Package\Foreach migrated account\Workflows\Search workflows\Search workflows"
          TopLeft="461.5,5.49999999999989" />
        <NodeLayout
          Size="139,42"
          Id="Package\Foreach migrated account\Workflows\Search workflows\Enabled split"
          TopLeft="247.5,311.5" />
        <NodeLayout
          Size="134,42"
          Id="Package\Foreach migrated account\Workflows\Search workflows\Hidden split"
          TopLeft="475,311.5" />
        <NodeLayout
          Size="120,42"
          Id="Package\Foreach migrated account\Workflows\Search workflows\Multicast"
          TopLeft="482,209.5" />
        <NodeLayout
          Size="168,42"
          Id="Package\Foreach migrated account\Workflows\Search workflows\Create disabled list"
          TopLeft="233,413.5" />
        <NodeLayout
          Size="233,42"
          Id="Package\Foreach migrated account\Workflows\Search workflows\Remove invalid chars from name"
          TopLeft="425.5,107.5" />
        <EdgeLayout
          Id="Package\Foreach migrated account\Workflows\Search workflows.Paths[JsonSourceOutput]"
          TopLeft="542,47.4999999999999">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach migrated account\Workflows\Search workflows.Paths[hidden]"
          TopLeft="521,353.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="21,60"
              Start="0,0"
              End="21,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.4247787610619" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.4247787610619"
                    Point2="0,24.4247787610619"
                    Point3="4,24.4247787610619" />
                  <mssgle:LineSegment
                    End="17,24.4247787610619" />
                  <mssgle:CubicBezierSegment
                    Point1="17,24.4247787610619"
                    Point2="21,24.4247787610619"
                    Point3="21,28.4247787610619" />
                  <mssgle:LineSegment
                    End="21,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-4.7385546875,29.4247787610619,30.477109375,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach migrated account\Workflows\Search workflows.Paths[enabled]"
          TopLeft="295.166666666667,353.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-206.166666666667,60.0000000000001"
              Start="0,0"
              End="-206.166666666667,52.5000000000001">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.4096728307255" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.4096728307255"
                    Point2="0,24.4096728307255"
                    Point3="-4,24.4096728307255" />
                  <mssgle:LineSegment
                    End="-202.166666666667,24.4096728307255" />
                  <mssgle:CubicBezierSegment
                    Point1="-202.166666666667,24.4096728307255"
                    Point2="-206.166666666667,24.4096728307255"
                    Point3="-206.166666666667,28.4096728307255" />
                  <mssgle:LineSegment
                    End="-206.166666666667,52.5000000000001" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-120.955930989583,29.4096728307255,35.7451953125,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach migrated account\Workflows\Search workflows.Paths[disabled]"
          TopLeft="338.833333333333,353.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-21.8333333333333,60"
              Start="0,0"
              End="-21.8333333333333,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.4096728307255" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.4096728307255"
                    Point2="0,24.4096728307255"
                    Point3="-4,24.4096728307255" />
                  <mssgle:LineSegment
                    End="-17.8333333333333,24.4096728307255" />
                  <mssgle:CubicBezierSegment
                    Point1="-17.8333333333333,24.4096728307255"
                    Point2="-21.8333333333333,24.4096728307255"
                    Point3="-21.8333333333333,28.4096728307255" />
                  <mssgle:LineSegment
                    End="-21.8333333333333,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-29.5092643229167,29.4096728307255,37.1851953125,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach migrated account\Workflows\Search workflows.Paths[visible]"
          TopLeft="563,353.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="199,60"
              Start="0,0"
              End="199,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.4247787610619" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.4247787610619"
                    Point2="0,24.4247787610619"
                    Point3="4,24.4247787610619" />
                  <mssgle:LineSegment
                    End="195,24.4247787610619" />
                  <mssgle:CubicBezierSegment
                    Point1="195,24.4247787610619"
                    Point2="199,24.4247787610619"
                    Point3="199,28.4247787610619" />
                  <mssgle:LineSegment
                    End="199,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="85.0946484375,29.4247787610619,28.810703125,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach migrated account\Workflows\Search workflows.Paths[Output 0]"
          TopLeft="542,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach migrated account\Workflows\Search workflows.Paths[Multicast Output 2]"
          TopLeft="560.666666666667,251.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-18.6666666666666,60"
              Start="0,0"
              End="-18.6666666666666,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.4736842105263" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.4736842105263"
                    Point2="0,24.4736842105263"
                    Point3="-4,24.4736842105263" />
                  <mssgle:LineSegment
                    End="-14.6666666666666,24.4736842105263" />
                  <mssgle:CubicBezierSegment
                    Point1="-14.6666666666666,24.4736842105263"
                    Point2="-18.6666666666666,24.4736842105263"
                    Point3="-18.6666666666666,28.4736842105263" />
                  <mssgle:LineSegment
                    End="-18.6666666666666,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach migrated account\Workflows\Search workflows.Paths[Multicast Output 1]"
          TopLeft="523.333333333333,251.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-206.333333333333,60"
              Start="0,0"
              End="-206.333333333333,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.4736842105263" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.4736842105263"
                    Point2="0,24.4736842105263"
                    Point3="-4,24.4736842105263" />
                  <mssgle:LineSegment
                    End="-202.333333333333,24.4736842105263" />
                  <mssgle:CubicBezierSegment
                    Point1="-202.333333333333,24.4736842105263"
                    Point2="-206.333333333333,24.4736842105263"
                    Point3="-206.333333333333,28.4736842105263" />
                  <mssgle:LineSegment
                    End="-206.333333333333,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>