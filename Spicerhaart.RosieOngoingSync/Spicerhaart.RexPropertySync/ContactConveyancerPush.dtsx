<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="11/1/2018 10:35:34 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="WX9000ITD21"
  DTS:CreatorName="SPICERHAART\1920191"
  DTS:DTSID="{6DEB339B-E07E-4298-93DA-E20AD584D6E8}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.1301.433"
  DTS:LocaleID="2057"
  DTS:ObjectName="ContactConveyancerPush"
  DTS:PackageType="5"
  DTS:ProtectionLevel="1"
  DTS:VersionBuild="415"
  DTS:VersionGUID="{85C46674-0521-4031-84DA-2F9D01137080}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[HTTP 1]"
      DTS:CreationName="ZS-HTTP"
      DTS:DTSID="{F4804D43-B8C3-4D74-9C6B-EAAD9F63701D}"
      DTS:ObjectName="HTTP 1">
      <DTS:ObjectData>
        <ConnectionManager
          ConnectionString="Url=https://api.uk.rexsoftware.com/rex.php;CredentialType=Notset;UserName=;Timeout=100000;SoapWssPasswordType=Notset;JwtCustomClaims=;UseProxy=False;ProxyUrl=;UseProxyCreds=False;ProxyUserName=;DoNotUseDefaultProxy=False;UseClientCertificate=False;CertificatePath=;CertificateStorageType=CurrentUser;CertificateStoreName=My;CertificateThumbprint=;RetryMode=RetryAny;RetryCountMax=5;RetryWaitTimeMs=2000;RetryMultiplyWaitTime=False;RetryMessageList=;RetryStatusCodeList=;AuthScheme=Bearer;TokenAuthHeader=;TokenUrl=;TokenRequestData=;TokenRequestHeaders=;TokenRequestMethod=;TokenRequestContentType=Default;TokenResponseContentFilter=;TokenResponseValueExtractMode=Body;TokenResponseCookie=;TokenResponseHeader=;TokenResponseContentType=None;TokenExpirationTimeInSeconds=3600" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[RexSync.xml]"
      DTS:CreationName="FILE"
      DTS:DTSID="{58146761-83D9-44BC-8EB5-7C34954B4E51}"
      DTS:ObjectName="RexSync.xml">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="C:\SSISVariables\RexSync.xml" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[SMTP]"
      DTS:CreationName="ZS-SMTP"
      DTS:DTSID="{BF4E3F78-5F6B-4B7F-8E34-72B55394864A}"
      DTS:ObjectName="SMTP">
      <DTS:ObjectData>
        <ConnectionManager
          ConnectionString="SmtpServer=outlookcol;UserName=;Port=25;EnableSsl=False;Timeout=10000;EnableAnonymousAuth=False" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[SMTP Connection Manager]"
      DTS:CreationName="SMTP"
      DTS:DTSID="{8F10EEED-D034-469A-A614-D811EF1F2EAB}"
      DTS:ObjectName="SMTP Connection Manager">
      <DTS:ObjectData>
        <SmtpConnectionManager
          ConnectionString="SmtpServer=outlookcol;UseWindowsAuthentication=False;EnableSsl=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:PackageParameters>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="3"
      DTS:Description="True for dont disturb,False for contactable"
      DTS:DTSID="{682F6B1A-D97E-46F1-A798-3FFB42649FCA}"
      DTS:ObjectName="IsDND">
      <DTS:Property
        DTS:DataType="3"
        DTS:Name="ParameterValue">1</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:Description="THe Office the package is running against"
      DTS:DTSID="{93F14F1B-7852-43D9-A6FC-67EA9EC0B32D}"
      DTS:ObjectName="PackageOfficeID"
      DTS:Required="True">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">0307</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="3"
      DTS:DTSID="{2C3B0456-D9F9-4EFD-A6A6-4CE9B671D986}"
      DTS:ObjectName="RexAccountID"
      DTS:Required="True">
      <DTS:Property
        DTS:DataType="3"
        DTS:Name="ParameterValue">1734</DTS:Property>
    </DTS:PackageParameter>
  </DTS:PackageParameters>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{6BECB59B-815E-415E-BC3C-D295D984958B}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="CreateConveyancer">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{3C6AFD56-8B98-480A-ACC6-F18979F82A62}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="PackageErrorEmail">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{067CC289-6BA1-44F9-ADB3-568037CB0A04}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="PackagePassword">
      <DTS:VariableValue
        DTS:DataType="8">P4ssword</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{FEA68D95-C03F-4385-AE98-30D6EEBF8397}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="PackageRosieURL">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{BC0FACC9-C1FF-42AC-A307-A567E5211D5C}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="PackageStartForNextRun">
      <DTS:VariableValue
        DTS:DataType="7">11/22/2018 5:13:48 PM</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{24B36746-7683-4879-B02F-4ADC77C449A3}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="PackageUsername">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{60A20D40-737F-4FCA-84FA-21AA6C9AA653}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="ProcessingStart">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{847B09B3-70D1-4C46-A8B1-FDC2315AD59B}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ResponseAuth">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{DF9DC4DB-31C2-4D9C-BB23-0A88DE30F202}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ResponseAuthCode">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{5C2FD3A0-F5FE-4BA1-BA11-F40237927670}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ResponseConvey">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{DEE34254-2591-4E8A-8530-E55C565C512E}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ResponseConveyCode">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{18D6A41B-7480-4921-AB1B-803416ABAFF5}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ResponseCreate">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{9599B8A5-0175-4046-BD73-2463F9A79478}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ResponseCreateCode">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{101FE7D7-DE2F-4971-9B5D-5BD75862C100}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="VarConveyAddress">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{9DABD08C-0A79-4E38-BAF0-F07D0C10696D}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="VarConveyEmail">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{6432197D-8C9B-47B5-B0CC-DD498CA100BA}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="VarConveyEtag">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{3BFC3AE7-658D-4475-AEEF-927C99EF40F7}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="VarConveyID">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F99A7E1D-53CD-4FDC-86FD-F81F128A42C9}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="VarConveyName">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{807312D1-4464-4354-BCAF-180C4E0039EE}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="VarConveyPCode">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{72E76FBD-4787-4FBB-9F3D-BB35EADFB28D}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="VarConveyRID">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{C3F82BDD-90D7-4A8F-81F1-F43E89F322B1}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="VarConveyTelNo">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{2BD77725-3073-4E59-AA5F-0A621E67C3EC}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="varCurrentConveyancerID">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{98BE38B2-D57A-4106-B0C5-23897494C20E}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="VarMajorError">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{9867AAB4-0F6B-417A-80FC-EC1602924A5A}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="VarMinorError">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{BFBD48FE-03BE-486F-83DE-5FF7930CEE90}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varProductString">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{58F8B79F-51B7-452F-85B1-70B5FD8BC66C}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="VarRecordsetConveyancers">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{435E293D-D916-493C-8BD3-62BFD9D4E343}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="VarSuccess">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:LoggingOptions
    DTS:LoggingMode="1" />
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Email Auth Failure"
      DTS:CreationName="ZappySys.HtmlEmailTask"
      DTS:Description="Email Auth Failure"
      DTS:DTSID="{35519A63-BAC5-4497-9468-D7E4748257F1}"
      DTS:ExecutableType="ZappySys.HtmlEmailTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Email Auth Failure"
      DTS:TaskContact="HTML Email Task; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
      DTS:ThreadHint="1">
      <DTS:Variables />
      <DTS:ObjectData>
        <HtmlEmailTask
          SmtpConnection="SMTP"
          IsHtmlEmail="True"
          DefaultStyle="&#xA;&lt;style type=&quot;text/css&quot;&gt;&#xA;body,div,p,span,td,th,table {&#xA; font-family: Helvetica, Arial, sans-serif;&#xA; font-size: 10pt; &#xA;}&#xA;h1,h2,h3,h4,h5{&#xA;font-family: Helvetica, Arial, sans-serif;&#xA;}&#xA;&#xA;table { &#xA; border-collapse: &#xA; collapse; border-spacing: 0; &#xA;}&#xA;&#xA;tr.odd    {background-color: #cccccc}&#xA;tr.even   {background-color: #fafafa}&#xA;td, th { border: 1px solid #bbb;padding: 5 5 5 5} &#xA;th { background: #F3F3F3;  font-weight: bold;}&#xA;&lt;/style&gt;&#xA;&#xA;"
          Subject="Error occured in {{System::PackageName}}"
          From="alerts@spicerhaart.co.uk"
          To="{{User::PackageErrorEmail}}"
          Cc=""
          ReplyTo=""
          Bcc=""
          Attachments=""
          EmailPriority="High"
          MessageSourceType="Direct"
          MessageDirectValue="&lt;b&gt;Failed to get Authorization Key&lt;/b&gt;&lt;p /&gt;&#xA;&#xA;&lt;p&gt; Response Code =&gt;{{User::ResponseAuthCode}} &lt;p /&gt;&#xA;"
          MessageFileConnection=""
          MessageVariable=""
          LogLevel="Normal"
          PrefixTimestamp="False" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Email Success"
      DTS:CreationName="ZappySys.HtmlEmailTask"
      DTS:Description="ZS HTML Email Task"
      DTS:DTSID="{BE75E796-1337-44C8-A309-6DA328D5C34C}"
      DTS:ExecutableType="ZappySys.HtmlEmailTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Email Success"
      DTS:TaskContact="HTML Email Task; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <HtmlEmailTask
          SmtpConnection="SMTP"
          IsHtmlEmail="True"
          DefaultStyle="&#xA;&lt;style type=&quot;text/css&quot;&gt;&#xA;body,div,p,span,td,th,table {&#xA; font-family: Helvetica, Arial, sans-serif;&#xA; font-size: 10pt; &#xA;}&#xA;h1,h2,h3,h4,h5{&#xA;font-family: Helvetica, Arial, sans-serif;&#xA;}&#xA;&#xA;table { &#xA; border-collapse: &#xA; collapse; border-spacing: 0; &#xA;}&#xA;&#xA;tr.odd    {background-color: #cccccc}&#xA;tr.even   {background-color: #fafafa}&#xA;td, th { border: 1px solid #bbb;padding: 5 5 5 5} &#xA;th { background: #F3F3F3;  font-weight: bold;}&#xA;&lt;/style&gt;&#xA;&#xA;"
          Subject="Package {{System::PackageName}} Completed"
          From="alerts@spicerhaart.com"
          To="{{User::PackageErrorEmail}}"
          Cc=""
          ReplyTo=""
          Bcc=""
          Attachments=""
          EmailPriority="Normal"
          MessageSourceType="Direct"
          MessageDirectValue="Finished migration for {{$Package::RexAccountID}} &lt;BR /&gt;&#xA;"
          MessageFileConnection=""
          MessageVariable=""
          LogLevel="Normal"
          PrefixTimestamp="False" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Get and Upload Conveyancers"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{4BAA7B5E-55C8-4F15-A524-3D032B72AD86}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Get and Upload Conveyancers"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Get and Upload Conveyancers\Convert to INT"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Data Conversion"
              name="Convert to INT"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Get and Upload Conveyancers\Convert to INT.Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Get and Upload Conveyancers\Convert to INT.Inputs[Data Conversion Input].Columns[result.notes]"
                      cachedDataType="wstr"
                      cachedLength="1020"
                      cachedName="result.notes"
                      lineageId="Package\Get and Upload Conveyancers\Get Results.Outputs[JsonParserTransformOutput].Columns[result.notes]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Get and Upload Conveyancers\Convert to INT.Outputs[Data Conversion Output]"
                  exclusionGroup="1"
                  name="Data Conversion Output"
                  synchronousInputId="Package\Get and Upload Conveyancers\Convert to INT.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Get and Upload Conveyancers\Convert to INT.Outputs[Data Conversion Output].Columns[notes_int]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Get and Upload Conveyancers\Convert to INT.Outputs[Data Conversion Output].Columns[notes_int]"
                      name="notes_int"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Get and Upload Conveyancers\Get Results.Outputs[JsonParserTransformOutput].Columns[result.notes]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Get and Upload Conveyancers\Convert to INT.Outputs[Data Conversion Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Data Conversion Error Output"
                  synchronousInputId="Package\Get and Upload Conveyancers\Convert to INT.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Get and Upload Conveyancers\Convert to INT.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Get and Upload Conveyancers\Convert to INT.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Get and Upload Conveyancers\Convert to INT.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Get and Upload Conveyancers\Convert to INT.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Get and Upload Conveyancers\Custom Fields"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="JSON Generator Transform; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
              description="The JSON generator transform can be used to create JSON document from single or multiple inputs. You can create simple or nested JSON document."
              name="Custom Fields"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                  expressionType="Notify"
                  name="LoggingMode"
                  typeConverter="ZappySys.PowerPack.Common.LoggingMode, ZappySys.PowerPack130, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                <property
                  dataType="System.Boolean"
                  description="When you enable this property it will prefix timestamp before Log messages."
                  expressionType="Notify"
                  name="PrefixTimestamp">false</property>
                <property
                  dataType="System.Null"
                  expressionType="Notify"
                  name="SelfRef"
                  typeConverter="NOTBROWSABLE" />
                <property
                  dataType="System.Int32"
                  description="Determines JSON format and output mode (e.g. one JSON for all input rows or one JSON for each input row)"
                  expressionType="Notify"
                  name="OutputMode"
                  typeConverter="ZappySys.PowerPack.Transform.JsonGeneratorTransform.JsonOutputMode, ZappySys.PowerPack130, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1903265a93eae502">2</property>
                <property
                  dataType="System.String"
                  description="Defines shape of output JSON string"
                  expressionType="Notify"
                  name="LayoutInfo">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;settings ver="3"&gt;
  &lt;dataset id="dsres2123" main="True" inputid="344" readfrominput="True"&gt;&lt;/dataset&gt;
  &lt;map name="method" value="CustomFields::setFieldValues" datatype="String" /&gt;
  &lt;map name="args"&gt;
    &lt;map name="service_name" value="Contacts" datatype="String" /&gt;
    &lt;map src="rid" name="service_object_id" datatype="Number" /&gt;
    &lt;map name="value_map"&gt;
      &lt;map name="core.contact.More Details.Business Type" value="Conveyancer" datatype="String" /&gt;
    &lt;/map&gt;
  &lt;/map&gt;
  &lt;map name="strip_response_prefix" value="True" datatype="String" /&gt;
  &lt;map name="token" value="{{User::ResponseAuth}}" datatype="String" /&gt;
&lt;/settings&gt;</property>
                <property
                  dataType="System.Boolean"
                  description="Do not output attribute if value is NULL. By default null attribute is output as &quot;MyColname&quot; : null "
                  expressionType="Notify"
                  name="DoNotOutputNullAttribute">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indent JSON Text generated by this transform (Pretty Print)"
                  expressionType="Notify"
                  name="IndentOutput">false</property>
                <property
                  dataType="System.String"
                  description="Default output format for datetime columns"
                  expressionType="Notify"
                  name="DateTimeFormat">yyyy-MM-dd HH:mm:ss</property>
                <property
                  dataType="System.String"
                  description="Culture setting for this task. This option is useful to control output format for certain data types (e.g. number, decimal) based on regional settings. In USA dot is used for decimal indicator but in Germany it may be comma. Leave this blank if you want to use system default settings."
                  expressionType="Notify"
                  name="Culture"></property>
                <property
                  dataType="System.Boolean"
                  description="Document Header/Footer text come from upstream column rather than direct string"
                  expressionType="Notify"
                  name="UseColumnForHeaderFooter">false</property>
                <property
                  dataType="System.String"
                  description="Header text for document (Added before each document in the output)"
                  expressionType="Notify"
                  name="DocumentHeader"></property>
                <property
                  dataType="System.String"
                  description="Footer text for document (Added after each document in the output)"
                  expressionType="Notify"
                  name="DocumentFooter"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies how many rows to include in each batch (Array records for single dataset array mode). 0=Include all in one batch. This setting is only valid for Mode=[Single Dataset Array]"
                  expressionType="Notify"
                  name="ArrayBatchSize">0</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">ZappySys.JsonGeneratorTransform</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Get and Upload Conveyancers\Custom Fields.Inputs[JsonInput2]"
                  name="JsonInput2">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="Id for attached dataset with input. Use JSON Layout Editor to see attached dataset"
                      expressionType="Notify"
                      name="DatasetInputId">344</property>
                  </properties>
                  <inputColumns>
                    <inputColumn
                      refId="Package\Get and Upload Conveyancers\Custom Fields.Inputs[JsonInput2].Columns[result.notes]"
                      cachedDataType="wstr"
                      cachedLength="1020"
                      cachedName="result.notes"
                      lineageId="Package\Get and Upload Conveyancers\Get Results.Outputs[JsonParserTransformOutput].Columns[result.notes]" />
                    <inputColumn
                      refId="Package\Get and Upload Conveyancers\Custom Fields.Inputs[JsonInput2].Columns[result._id]"
                      cachedDataType="i8"
                      cachedName="result._id"
                      lineageId="Package\Get and Upload Conveyancers\Get Results.Outputs[JsonParserTransformOutput].Columns[result._id]" />
                    <inputColumn
                      refId="Package\Get and Upload Conveyancers\Custom Fields.Inputs[JsonInput2].Columns[result.etag]"
                      cachedDataType="wstr"
                      cachedLength="68"
                      cachedName="result.etag"
                      lineageId="Package\Get and Upload Conveyancers\Get Results.Outputs[JsonParserTransformOutput].Columns[result.etag]" />
                    <inputColumn
                      refId="Package\Get and Upload Conveyancers\Custom Fields.Inputs[JsonInput2].Columns[notes_int]"
                      cachedDataType="i4"
                      cachedName="notes_int"
                      lineageId="Package\Get and Upload Conveyancers\Convert to INT.Outputs[Data Conversion Output].Columns[notes_int]" />
                    <inputColumn
                      refId="Package\Get and Upload Conveyancers\Custom Fields.Inputs[JsonInput2].Columns[con_id]"
                      cachedDataType="i4"
                      cachedName="con_id"
                      lineageId="Package\Get and Upload Conveyancers\Set columns for OLE DB.Outputs[Derived Column Output].Columns[con_id]" />
                    <inputColumn
                      refId="Package\Get and Upload Conveyancers\Custom Fields.Inputs[JsonInput2].Columns[office_Id]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="4"
                      cachedName="office_Id"
                      lineageId="Package\Get and Upload Conveyancers\Set columns for OLE DB.Outputs[Derived Column Output].Columns[office_Id]" />
                    <inputColumn
                      refId="Package\Get and Upload Conveyancers\Custom Fields.Inputs[JsonInput2].Columns[etag]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="80"
                      cachedName="etag"
                      lineageId="Package\Get and Upload Conveyancers\Set columns for OLE DB.Outputs[Derived Column Output].Columns[etag]" />
                    <inputColumn
                      refId="Package\Get and Upload Conveyancers\Custom Fields.Inputs[JsonInput2].Columns[rid]"
                      cachedDataType="i8"
                      cachedName="rid"
                      lineageId="Package\Get and Upload Conveyancers\Set columns for OLE DB.Outputs[Derived Column Output].Columns[rid]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Get and Upload Conveyancers\Custom Fields.Inputs[JsonInput1]"
                  name="JsonInput1">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Get and Upload Conveyancers\Custom Fields.Outputs[JsonGeneratorTransformOutput]"
                  errorOrTruncationOperation="Error"
                  name="JsonGeneratorTransformOutput">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Get and Upload Conveyancers\Custom Fields.Outputs[JsonGeneratorTransformOutput].Columns[ZS_JSON_OUT]"
                      dataType="nText"
                      description="This output column contains generated JSON string from JSON generator Transform"
                      lineageId="Package\Get and Upload Conveyancers\Custom Fields.Outputs[JsonGeneratorTransformOutput].Columns[ZS_JSON_OUT]"
                      name="ZS_JSON_OUT" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Get and Upload Conveyancers\Get COnveyancer JSON"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="Get COnveyancer JSON"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset"></property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">exec ROSIE_uspGetContactConveyancers ?</property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">2</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping">"@office_id:Input",{93F14F1B-87AD-43D9-A6FC-67EA9EC0B32D};</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Get and Upload Conveyancers\Get COnveyancer JSON.Connections[OleDbConnection]"
                  connectionManagerID="{78432CA1-1FEA-4ED4-9C0F-D552A4A9DE0E}:external"
                  connectionManagerRefId="Project.ConnectionManagers[InternetDB]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Get and Upload Conveyancers\Get COnveyancer JSON.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Get and Upload Conveyancers\Get COnveyancer JSON.Outputs[OLE DB Source Output].Columns[ConveyancerCreateJSON]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Get and Upload Conveyancers\Get COnveyancer JSON.Outputs[OLE DB Source Output].ExternalColumns[ConveyancerCreateJSON]"
                      length="804"
                      lineageId="Package\Get and Upload Conveyancers\Get COnveyancer JSON.Outputs[OLE DB Source Output].Columns[ConveyancerCreateJSON]"
                      name="ConveyancerCreateJSON"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Get and Upload Conveyancers\Get COnveyancer JSON.Outputs[OLE DB Source Output].ExternalColumns[ConveyancerCreateJSON]"
                      codePage="1252"
                      dataType="str"
                      length="810"
                      name="ConveyancerCreateJSON" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Get and Upload Conveyancers\Get COnveyancer JSON.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Get and Upload Conveyancers\Get COnveyancer JSON.Outputs[OLE DB Source Error Output].Columns[ConveyancerCreateJSON]"
                      codePage="1252"
                      dataType="str"
                      length="810"
                      lineageId="Package\Get and Upload Conveyancers\Get COnveyancer JSON.Outputs[OLE DB Source Error Output].Columns[ConveyancerCreateJSON]"
                      name="ConveyancerCreateJSON" />
                    <outputColumn
                      refId="Package\Get and Upload Conveyancers\Get COnveyancer JSON.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Get and Upload Conveyancers\Get COnveyancer JSON.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Get and Upload Conveyancers\Get COnveyancer JSON.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Get and Upload Conveyancers\Get COnveyancer JSON.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Get and Upload Conveyancers\Get Results"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="JSON Parser Transform; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
              description="Parse incoming JSON String into columns. You can also parse and transform single JSON record into multiple rows by filtering data based on JSON Path (e.g. $.Customer.Orders[*])"
              name="Get Results"
              usesDispositions="true"
              version="2">
              <properties>
                <property
                  dataType="System.Int32"
                  description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                  expressionType="Notify"
                  name="LoggingMode"
                  typeConverter="ZappySys.PowerPack.Common.LoggingMode, ZappySys.PowerPack130, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                <property
                  dataType="System.Boolean"
                  description="When you enable this property it will prefix timestamp before Log messages."
                  expressionType="Notify"
                  name="PrefixTimestamp">false</property>
                <property
                  dataType="System.Null"
                  expressionType="Notify"
                  name="SelfRef"
                  typeConverter="NOTBROWSABLE" />
                <property
                  dataType="System.Boolean"
                  description="Treat empty string as NULL for any numeric data types"
                  expressionType="Notify"
                  name="TreatBlankNumberAsNull">true</property>
                <property
                  dataType="System.Boolean"
                  description="Treat empty string as NULL for bool data types"
                  expressionType="Notify"
                  name="TreatBlankBoolAsNull">true</property>
                <property
                  dataType="System.Boolean"
                  description="Treat empty string as NULL for any date/time data types"
                  expressionType="Notify"
                  name="TreatBlankDateAsNull">true</property>
                <property
                  dataType="System.String"
                  description="Sample JSON data used to parse output columns."
                  expressionType="Notify"
                  name="SampleData"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">{
    "result": {
        "system_record_state": "active",
        "system_ctime": 1551864889,
        "system_modtime": 1551864889,
        "system_search_key": "Jeff test",
        "address": "1",
        "address_postal": null,
        "marketing_postcode": "ss142rq",
        "marketing_enquiry_source": null,
        "marketing_gender": null,
        "marketing_birthday": null,
        "notes": null,
        "company_name": "Jeff test",
        "company_abn": null,
        "website_url": null,
        "is_dnd": null,
        "type": "company",
        "interest_level": null,
        "last_contacted_date": null,
        "name_legal": null,
        "name_salutation": null,
        "name_addressee": null,
        "last_contacted_at": null,
        "_id": 216403,
        "etag": "216403-1551864889",
        "system_owner_user": {
            "id": "19443",
            "_name": "Rosie API",
            "_first_name": "Rosie",
            "_last_name": "API",
            "_email_address": "rosie@spicerhaart.co.uk"
        },
        "system_modified_user": {
            "id": "19443",
            "_name": "Rosie API",
            "_first_name": "Rosie",
            "_last_name": "API",
            "_email_address": "rosie@spicerhaart.co.uk"
        },
        "system_created_user": {
            "id": "19443",
            "_name": "Rosie API",
            "_first_name": "Rosie",
            "_last_name": "API",
            "_email_address": "rosie@spicerhaart.co.uk"
        },
        "contact_image": null,
        "company_size": null,
        "marketing_enquiry_method": null,
        "_related": {
            "contact_emails": [
                {
                    "email_desc": "default",
                    "email_address": "MasterDave.Davidson@anemail.com",
                    "email_primary": true,
                    "email_secondary": null,
                    "is_invalid": null,
                    "_id": 147984
                }
            ],
            "contact_phones": [
                {
                    "phone_type": "default",
                    "phone_number": "09876543210",
                    "phone_primary": true,
                    "phone_primary_sms": null,
                    "is_invalid": null,
                    "system_e164_phone_number": "+449876543210",
                    "_id": 243549,
                    "wash": {
                        "present_on_lists": [],
                        "user_override": null,
                        "allow": true
                    }
                }
            ],
            "contact_tags": [],
            "contact_documents": [],
            "contact_mailing_lists": [],
            "contact_relationships": [],
            "contact_reln_property": [],
            "contact_reln_listing": []
        },
        "address_wash": {
            "present_on_lists": [],
            "user_override": null,
            "allow": true
        },
        "address_postal_wash": null,
        "smart_categories": false,
        "_security_user_rights": [
            "read",
            "update",
            "archive",
            "trash",
            "perms"
        ]
    },
    "error": null
}</property>
                <property
                  dataType="System.Boolean"
                  description="Include all upstream parent columns into output except the one you selected to parse. By default only parsed columns from Input document is included in the output. If you wish to include all other upstream columns in the output too then check this option."
                  expressionType="Notify"
                  name="OutputAllUpstreamColumns">false</property>
                <property
                  dataType="System.Int32"
                  description="Maximum JSON records to fetch. Set this value to 0 for all records"
                  expressionType="Notify"
                  name="MaxRows">0</property>
                <property
                  dataType="System.String"
                  description="Enter expression here to filter data.(Example:  $.Users[*].UserName ) This will fetch User names from users records"
                  expressionType="Notify"
                  name="Filter"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.Boolean"
                  description="Use this option to include parent properties (Non array) in the output along with Filtered Rows"
                  expressionType="Notify"
                  name="IncludeParentColumns">true</property>
                <property
                  dataType="System.Boolean"
                  description="By default child and parent information is not included in the output if children not found for specified expression. For example if you want to extract all orders from all customers nodes then you can type $.Customers[*].Orders[*]. This will fetch all orders from all customers. By default customers records without orders wont be included in the output. If you want to include those customers where orders not found then check this option (Output null information for order attributes). This behavior is similar to LEFT OUTER JOIN in SQL (Left side is parent, right side is child). This option is ***resource intensive*** so only check if you really care about this behavior."
                  expressionType="Notify"
                  name="IncludeParentColumnsWhenChildMissing">false</property>
                <property
                  dataType="System.Boolean"
                  description="Set this option to true if you want to output parent columns which are array. By default any parent column which is an array is not included in output. See also FilterForParentColumnsWithArrayType property if you set this property"
                  expressionType="Notify"
                  name="IncludeParentColumnsWithArrayType">false</property>
                <property
                  dataType="System.String"
                  description="Filter expression to extract value form parent"
                  expressionType="Notify"
                  name="FilterForParentColumnsWithArrayType"></property>
                <property
                  dataType="System.String"
                  description="Prefix for parent column name. This option is only valid if you have set IncludeParentColumns=True"
                  expressionType="Notify"
                  name="ParentColumnPrefix">P_</property>
                <property
                  dataType="System.Boolean"
                  description="Throw error if property name specified in filter expression is missing. By default it will ignore any missing property errors."
                  expressionType="Notify"
                  name="ThrowErrorIfPropertyMissing">false</property>
                <property
                  dataType="System.Int32"
                  description="This property how many nested levels should be scanned to fetch various properties. 0=Scan all child levels."
                  expressionType="Notify"
                  name="MaxLevelsToScan">0</property>
                <property
                  dataType="System.String"
                  description="List comma separated property names from JSON document which you want to exclude from output. Specify parent property name to exclude all child nodes."
                  expressionType="Notify"
                  name="ExcludedProperties"></property>
                <property
                  dataType="System.String"
                  description="Property level separator used in generated property name (separator for outer properties - Above selected filter node). Use this if default separator is producing duplicate property name which is conflicting with existing name."
                  expressionType="Notify"
                  name="LevelSeparator">_</property>
                <property
                  dataType="System.Boolean"
                  description="Enables deep array flattening for selected filtered hierarchy. When you turn on this property it will flatten each property of each array item and expose as column (e.g. If you have Filter set as $.customers[*] and for each customer you have an array of Addresses then you may see output columns like Addresses.1.City, Addresses.1.State, Addresses.2.City, Addresses.2.State .... Addresses.N.City, Addresses.N.State). You can control how many array items you want to flatten by setting MaxArrayItemsToFlatten property."
                  expressionType="Notify"
                  name="EnableArrayFlattening">false</property>
                <property
                  dataType="System.Int32"
                  description="Maximum number of array items to flatten. inner array flattening. Adjust this property to control how many columns being generated. This option is ignored if you set EnableArrayFlattening=false"
                  expressionType="Notify"
                  name="MaxArrayItemsToFlatten">10</property>
                <property
                  dataType="System.String"
                  description="Specifies how custom date formatted strings are parsed when reading JSON."
                  expressionType="Notify"
                  name="DateFormatString"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies how date formatted strings, e.g. Date(1198908717056) and 2012-03-21T05:40Z, are parsed when reading JSON."
                  expressionType="Notify"
                  name="DateParseHandling"
                  typeConverter="ZappySys.Common.DateParseHandling, ZappySys.Common, Version=1.0.2018.11017, Culture=neutral, PublicKeyToken=1903265a93eae502">1</property>
                <property
                  dataType="System.Boolean"
                  description="Output as raw JSON document rather than parsing individual fields. This option is helpful if you have documents stored in a file and you want to pass them downstream as raw JSON string rather than parsing into columns."
                  expressionType="Notify"
                  name="OutputRawDocument">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indent JSON output so its easy to read."
                  expressionType="Notify"
                  name="IndentOutput">false</property>
                <property
                  dataType="System.Boolean"
                  description="When this property is true then Column is converted to Row. Pivoted names will appear under  Pivot_Name column and values will appear under Pivot_Value field."
                  expressionType="Notify"
                  name="EnablePivot">false</property>
                <property
                  dataType="System.Int32"
                  description="Array Transformation you want to apply. Useful for case when you have 2-Dimensional arrays with rows/columns in separate arrays."
                  expressionType="Notify"
                  name="ArrayTransformationType"
                  typeConverter="ZappySys.Json.ArrayTransformType, ZappySys.Json, Version=1.0.2018.11017, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                <property
                  dataType="System.String"
                  description="Filter expression to use to extract column names for array transformation."
                  expressionType="Notify"
                  name="ArrayTransColumnNameFilter"></property>
                <property
                  dataType="System.String"
                  description="Filter expression for row values (Not applicable for simple array transformation)."
                  expressionType="Notify"
                  name="ArrayTransRowValueFilter"></property>
                <property
                  dataType="System.Boolean"
                  description="When you have 2D array but don't have column list specified in a separate array then use this option (e.g. { arr: [[10,11],[21,22]] } )."
                  expressionType="Notify"
                  name="ArrayTransEnableCustomColumns">false</property>
                <property
                  dataType="System.String"
                  description="When you have 2D array but don't have column list specified in a separate array then use specify column names here. Use comma separated list (e.g col1,col2,col3 ). Column name Order must match value order."
                  expressionType="Notify"
                  name="ArrayTransCustomColumns"></property>
                <property
                  dataType="System.Int32"
                  description="Metadata scan mode controls how data type and length is determined. By default few records scanned to determine datatype/length. Changing ScanMode affects length/datatype accuracy."
                  expressionType="Notify"
                  name="MetaDataScanMode"
                  typeConverter="ZappySys.Common.Data.MetaDataScanMode, ZappySys.Common, Version=1.0.2018.11017, Culture=neutral, PublicKeyToken=1903265a93eae502">4</property>
                <property
                  dataType="System.Int32"
                  description="Length for all string column. This option is only valid for MetaDataScanMode=Custom"
                  expressionType="Notify"
                  name="MetaDataCustomLength">1000</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">ZappySys.JsonParserTransform</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Get and Upload Conveyancers\Get Results.Inputs[JsonParserTransformInput]"
                  errorRowDisposition="FailComponent"
                  name="JsonParserTransformInput"
                  truncationRowDisposition="FailComponent">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Get and Upload Conveyancers\Get Results.Inputs[JsonParserTransformInput].Columns[ResponseText]"
                      cachedDataType="nText"
                      cachedName="ResponseText"
                      lineageId="Package\Get and Upload Conveyancers\Send to Rosie.Outputs[Response Output].Columns[ResponseText]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True" />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Get and Upload Conveyancers\Get Results.Outputs[JsonParserTransformOutput]"
                  errorOrTruncationOperation="Error"
                  errorRowDisposition="FailComponent"
                  name="JsonParserTransformOutput"
                  truncationRowDisposition="FailComponent">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Get and Upload Conveyancers\Get Results.Outputs[JsonParserTransformOutput].Columns[result.notes]"
                      dataType="wstr"
                      externalMetadataColumnId="Package\Get and Upload Conveyancers\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.notes]"
                      length="1020"
                      lineageId="Package\Get and Upload Conveyancers\Get Results.Outputs[JsonParserTransformOutput].Columns[result.notes]"
                      name="result.notes" />
                    <outputColumn
                      refId="Package\Get and Upload Conveyancers\Get Results.Outputs[JsonParserTransformOutput].Columns[result._id]"
                      dataType="i8"
                      externalMetadataColumnId="Package\Get and Upload Conveyancers\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result._id]"
                      lineageId="Package\Get and Upload Conveyancers\Get Results.Outputs[JsonParserTransformOutput].Columns[result._id]"
                      name="result._id" />
                    <outputColumn
                      refId="Package\Get and Upload Conveyancers\Get Results.Outputs[JsonParserTransformOutput].Columns[result.etag]"
                      dataType="wstr"
                      externalMetadataColumnId="Package\Get and Upload Conveyancers\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.etag]"
                      length="68"
                      lineageId="Package\Get and Upload Conveyancers\Get Results.Outputs[JsonParserTransformOutput].Columns[result.etag]"
                      name="result.etag" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Get and Upload Conveyancers\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.system_record_state]"
                      dataType="wstr"
                      length="24"
                      name="result.system_record_state" />
                    <externalMetadataColumn
                      refId="Package\Get and Upload Conveyancers\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.system_ctime]"
                      dataType="i8"
                      name="result.system_ctime" />
                    <externalMetadataColumn
                      refId="Package\Get and Upload Conveyancers\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.system_modtime]"
                      dataType="i8"
                      name="result.system_modtime" />
                    <externalMetadataColumn
                      refId="Package\Get and Upload Conveyancers\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.system_search_key]"
                      dataType="wstr"
                      length="36"
                      name="result.system_search_key" />
                    <externalMetadataColumn
                      refId="Package\Get and Upload Conveyancers\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.address]"
                      dataType="wstr"
                      length="4"
                      name="result.address" />
                    <externalMetadataColumn
                      refId="Package\Get and Upload Conveyancers\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.address_postal]"
                      dataType="wstr"
                      length="1020"
                      name="result.address_postal" />
                    <externalMetadataColumn
                      refId="Package\Get and Upload Conveyancers\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.marketing_postcode]"
                      dataType="wstr"
                      length="28"
                      name="result.marketing_postcode" />
                    <externalMetadataColumn
                      refId="Package\Get and Upload Conveyancers\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.marketing_enquiry_source]"
                      dataType="wstr"
                      length="1020"
                      name="result.marketing_enquiry_source" />
                    <externalMetadataColumn
                      refId="Package\Get and Upload Conveyancers\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.marketing_gender]"
                      dataType="wstr"
                      length="1020"
                      name="result.marketing_gender" />
                    <externalMetadataColumn
                      refId="Package\Get and Upload Conveyancers\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.marketing_birthday]"
                      dataType="wstr"
                      length="1020"
                      name="result.marketing_birthday" />
                    <externalMetadataColumn
                      refId="Package\Get and Upload Conveyancers\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.notes]"
                      dataType="wstr"
                      length="1020"
                      name="result.notes" />
                    <externalMetadataColumn
                      refId="Package\Get and Upload Conveyancers\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.company_name]"
                      dataType="wstr"
                      length="36"
                      name="result.company_name" />
                    <externalMetadataColumn
                      refId="Package\Get and Upload Conveyancers\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.company_abn]"
                      dataType="wstr"
                      length="1020"
                      name="result.company_abn" />
                    <externalMetadataColumn
                      refId="Package\Get and Upload Conveyancers\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.website_url]"
                      dataType="wstr"
                      length="1020"
                      name="result.website_url" />
                    <externalMetadataColumn
                      refId="Package\Get and Upload Conveyancers\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.is_dnd]"
                      dataType="wstr"
                      length="1020"
                      name="result.is_dnd" />
                    <externalMetadataColumn
                      refId="Package\Get and Upload Conveyancers\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.type]"
                      dataType="wstr"
                      length="28"
                      name="result.type" />
                    <externalMetadataColumn
                      refId="Package\Get and Upload Conveyancers\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.interest_level]"
                      dataType="wstr"
                      length="1020"
                      name="result.interest_level" />
                    <externalMetadataColumn
                      refId="Package\Get and Upload Conveyancers\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.last_contacted_date]"
                      dataType="wstr"
                      length="1020"
                      name="result.last_contacted_date" />
                    <externalMetadataColumn
                      refId="Package\Get and Upload Conveyancers\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.name_legal]"
                      dataType="wstr"
                      length="1020"
                      name="result.name_legal" />
                    <externalMetadataColumn
                      refId="Package\Get and Upload Conveyancers\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.name_salutation]"
                      dataType="wstr"
                      length="1020"
                      name="result.name_salutation" />
                    <externalMetadataColumn
                      refId="Package\Get and Upload Conveyancers\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.name_addressee]"
                      dataType="wstr"
                      length="1020"
                      name="result.name_addressee" />
                    <externalMetadataColumn
                      refId="Package\Get and Upload Conveyancers\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.last_contacted_at]"
                      dataType="wstr"
                      length="1020"
                      name="result.last_contacted_at" />
                    <externalMetadataColumn
                      refId="Package\Get and Upload Conveyancers\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result._id]"
                      dataType="i8"
                      name="result._id" />
                    <externalMetadataColumn
                      refId="Package\Get and Upload Conveyancers\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.etag]"
                      dataType="wstr"
                      length="68"
                      name="result.etag" />
                    <externalMetadataColumn
                      refId="Package\Get and Upload Conveyancers\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.system_owner_user.id]"
                      dataType="wstr"
                      length="20"
                      name="result.system_owner_user.id" />
                    <externalMetadataColumn
                      refId="Package\Get and Upload Conveyancers\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.system_owner_user._name]"
                      dataType="wstr"
                      length="36"
                      name="result.system_owner_user._name" />
                    <externalMetadataColumn
                      refId="Package\Get and Upload Conveyancers\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.system_owner_user._first_name]"
                      dataType="wstr"
                      length="20"
                      name="result.system_owner_user._first_name" />
                    <externalMetadataColumn
                      refId="Package\Get and Upload Conveyancers\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.system_owner_user._last_name]"
                      dataType="wstr"
                      length="12"
                      name="result.system_owner_user._last_name" />
                    <externalMetadataColumn
                      refId="Package\Get and Upload Conveyancers\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.system_owner_user._email_address]"
                      dataType="wstr"
                      length="92"
                      name="result.system_owner_user._email_address" />
                    <externalMetadataColumn
                      refId="Package\Get and Upload Conveyancers\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.system_modified_user.id]"
                      dataType="wstr"
                      length="20"
                      name="result.system_modified_user.id" />
                    <externalMetadataColumn
                      refId="Package\Get and Upload Conveyancers\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.system_modified_user._name]"
                      dataType="wstr"
                      length="36"
                      name="result.system_modified_user._name" />
                    <externalMetadataColumn
                      refId="Package\Get and Upload Conveyancers\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.system_modified_user._first_name]"
                      dataType="wstr"
                      length="20"
                      name="result.system_modified_user._first_name" />
                    <externalMetadataColumn
                      refId="Package\Get and Upload Conveyancers\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.system_modified_user._last_name]"
                      dataType="wstr"
                      length="12"
                      name="result.system_modified_user._last_name" />
                    <externalMetadataColumn
                      refId="Package\Get and Upload Conveyancers\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.system_modified_user._email_address]"
                      dataType="wstr"
                      length="92"
                      name="result.system_modified_user._email_address" />
                    <externalMetadataColumn
                      refId="Package\Get and Upload Conveyancers\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.system_created_user.id]"
                      dataType="wstr"
                      length="20"
                      name="result.system_created_user.id" />
                    <externalMetadataColumn
                      refId="Package\Get and Upload Conveyancers\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.system_created_user._name]"
                      dataType="wstr"
                      length="36"
                      name="result.system_created_user._name" />
                    <externalMetadataColumn
                      refId="Package\Get and Upload Conveyancers\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.system_created_user._first_name]"
                      dataType="wstr"
                      length="20"
                      name="result.system_created_user._first_name" />
                    <externalMetadataColumn
                      refId="Package\Get and Upload Conveyancers\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.system_created_user._last_name]"
                      dataType="wstr"
                      length="12"
                      name="result.system_created_user._last_name" />
                    <externalMetadataColumn
                      refId="Package\Get and Upload Conveyancers\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.system_created_user._email_address]"
                      dataType="wstr"
                      length="92"
                      name="result.system_created_user._email_address" />
                    <externalMetadataColumn
                      refId="Package\Get and Upload Conveyancers\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.contact_image]"
                      dataType="wstr"
                      length="1020"
                      name="result.contact_image" />
                    <externalMetadataColumn
                      refId="Package\Get and Upload Conveyancers\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.company_size]"
                      dataType="wstr"
                      length="1020"
                      name="result.company_size" />
                    <externalMetadataColumn
                      refId="Package\Get and Upload Conveyancers\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.marketing_enquiry_method]"
                      dataType="wstr"
                      length="1020"
                      name="result.marketing_enquiry_method" />
                    <externalMetadataColumn
                      refId="Package\Get and Upload Conveyancers\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result._related.contact_emails]"
                      dataType="wstr"
                      length="812"
                      name="result._related.contact_emails" />
                    <externalMetadataColumn
                      refId="Package\Get and Upload Conveyancers\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result._related.contact_phones]"
                      dataType="wstr"
                      length="1356"
                      name="result._related.contact_phones" />
                    <externalMetadataColumn
                      refId="Package\Get and Upload Conveyancers\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result._related.contact_tags]"
                      dataType="wstr"
                      length="8"
                      name="result._related.contact_tags" />
                    <externalMetadataColumn
                      refId="Package\Get and Upload Conveyancers\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result._related.contact_documents]"
                      dataType="wstr"
                      length="8"
                      name="result._related.contact_documents" />
                    <externalMetadataColumn
                      refId="Package\Get and Upload Conveyancers\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result._related.contact_mailing_lists]"
                      dataType="wstr"
                      length="8"
                      name="result._related.contact_mailing_lists" />
                    <externalMetadataColumn
                      refId="Package\Get and Upload Conveyancers\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result._related.contact_relationships]"
                      dataType="wstr"
                      length="8"
                      name="result._related.contact_relationships" />
                    <externalMetadataColumn
                      refId="Package\Get and Upload Conveyancers\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result._related.contact_reln_property]"
                      dataType="wstr"
                      length="8"
                      name="result._related.contact_reln_property" />
                    <externalMetadataColumn
                      refId="Package\Get and Upload Conveyancers\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result._related.contact_reln_listing]"
                      dataType="wstr"
                      length="8"
                      name="result._related.contact_reln_listing" />
                    <externalMetadataColumn
                      refId="Package\Get and Upload Conveyancers\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.address_wash.present_on_lists]"
                      dataType="wstr"
                      length="8"
                      name="result.address_wash.present_on_lists" />
                    <externalMetadataColumn
                      refId="Package\Get and Upload Conveyancers\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.address_wash.user_override]"
                      dataType="wstr"
                      length="1020"
                      name="result.address_wash.user_override" />
                    <externalMetadataColumn
                      refId="Package\Get and Upload Conveyancers\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.address_wash.allow]"
                      dataType="bool"
                      name="result.address_wash.allow" />
                    <externalMetadataColumn
                      refId="Package\Get and Upload Conveyancers\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.address_postal_wash]"
                      dataType="wstr"
                      length="1020"
                      name="result.address_postal_wash" />
                    <externalMetadataColumn
                      refId="Package\Get and Upload Conveyancers\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result.smart_categories]"
                      dataType="bool"
                      name="result.smart_categories" />
                    <externalMetadataColumn
                      refId="Package\Get and Upload Conveyancers\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[result._security_user_rights]"
                      dataType="wstr"
                      length="260"
                      name="result._security_user_rights" />
                    <externalMetadataColumn
                      refId="Package\Get and Upload Conveyancers\Get Results.Outputs[JsonParserTransformOutput].ExternalColumns[error]"
                      dataType="wstr"
                      length="1020"
                      name="error" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Get and Upload Conveyancers\Get Results.Outputs[JsonParserTransform Error Output]"
                  isErrorOut="true"
                  name="JsonParserTransform Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Get and Upload Conveyancers\Get Results.Outputs[JsonParserTransform Error Output].Columns[result.notes]"
                      dataType="wstr"
                      length="1020"
                      lineageId="Package\Get and Upload Conveyancers\Get Results.Outputs[JsonParserTransform Error Output].Columns[result.notes]"
                      name="result.notes" />
                    <outputColumn
                      refId="Package\Get and Upload Conveyancers\Get Results.Outputs[JsonParserTransform Error Output].Columns[result._id]"
                      dataType="i8"
                      lineageId="Package\Get and Upload Conveyancers\Get Results.Outputs[JsonParserTransform Error Output].Columns[result._id]"
                      name="result._id" />
                    <outputColumn
                      refId="Package\Get and Upload Conveyancers\Get Results.Outputs[JsonParserTransform Error Output].Columns[result.etag]"
                      dataType="wstr"
                      length="68"
                      lineageId="Package\Get and Upload Conveyancers\Get Results.Outputs[JsonParserTransform Error Output].Columns[result.etag]"
                      name="result.etag" />
                    <outputColumn
                      refId="Package\Get and Upload Conveyancers\Get Results.Outputs[JsonParserTransform Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Get and Upload Conveyancers\Get Results.Outputs[JsonParserTransform Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Get and Upload Conveyancers\Get Results.Outputs[JsonParserTransform Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Get and Upload Conveyancers\Get Results.Outputs[JsonParserTransform Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                    <outputColumn
                      refId="Package\Get and Upload Conveyancers\Get Results.Outputs[JsonParserTransform Error Output].Columns[ErrorColumnName]"
                      codePage="1252"
                      dataType="str"
                      length="128"
                      lineageId="Package\Get and Upload Conveyancers\Get Results.Outputs[JsonParserTransform Error Output].Columns[ErrorColumnName]"
                      name="ErrorColumnName" />
                    <outputColumn
                      refId="Package\Get and Upload Conveyancers\Get Results.Outputs[JsonParserTransform Error Output].Columns[ErrorMessage]"
                      dataType="wstr"
                      length="1024"
                      lineageId="Package\Get and Upload Conveyancers\Get Results.Outputs[JsonParserTransform Error Output].Columns[ErrorMessage]"
                      name="ErrorMessage" />
                    <outputColumn
                      refId="Package\Get and Upload Conveyancers\Get Results.Outputs[JsonParserTransform Error Output].Columns[ErrorRawData]"
                      dataType="nText"
                      lineageId="Package\Get and Upload Conveyancers\Get Results.Outputs[JsonParserTransform Error Output].Columns[ErrorRawData]"
                      name="ErrorRawData" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Get and Upload Conveyancers\Multicast"
              componentClassID="Microsoft.Multicast"
              contactInfo="Multicast;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Distributes every input row to every row in one or more outputs. For example, branch your data flow to make a copy of data so that some values can be masked before sharing with external partners."
              name="Multicast">
              <inputs>
                <input
                  refId="Package\Get and Upload Conveyancers\Multicast.Inputs[Multicast Input 1]"
                  name="Multicast Input 1">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Get and Upload Conveyancers\Multicast.Outputs[Multicast Output 1]"
                  deleteOutputOnPathDetached="true"
                  name="Multicast Output 1"
                  synchronousInputId="Package\Get and Upload Conveyancers\Multicast.Inputs[Multicast Input 1]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Get and Upload Conveyancers\Multicast.Outputs[Multicast Output 3]"
                  deleteOutputOnPathDetached="true"
                  name="Multicast Output 3"
                  synchronousInputId="Package\Get and Upload Conveyancers\Multicast.Inputs[Multicast Input 1]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Get and Upload Conveyancers\Multicast.Outputs[Multicast Output 2]"
                  dangling="true"
                  deleteOutputOnPathDetached="true"
                  name="Multicast Output 2"
                  synchronousInputId="Package\Get and Upload Conveyancers\Multicast.Inputs[Multicast Input 1]">
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Get and Upload Conveyancers\Replace DNC"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Replace DNC"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Get and Upload Conveyancers\Replace DNC.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Get and Upload Conveyancers\Replace DNC.Inputs[Derived Column Input].Columns[JSON]"
                      cachedDataType="wstr"
                      cachedLength="804"
                      cachedName="JSON"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Get and Upload Conveyancers\Replace TOKEN.Outputs[Derived Column Output].Columns[JSON]"
                      truncationRowDisposition="FailComponent"
                      usageType="readWrite">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[REPLACE](#{Package\Get and Upload Conveyancers\Replace TOKEN.Outputs[Derived Column Output].Columns[JSON]},"{{DNC}}",(DT_STR,10,1252)@[$Package::IsDND])</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">REPLACE(JSON,"{{DNC}}",(DT_STR,10,1252)@[$Package::IsDND])</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Get and Upload Conveyancers\Replace DNC.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Get and Upload Conveyancers\Replace DNC.Inputs[Derived Column Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Get and Upload Conveyancers\Replace DNC.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Get and Upload Conveyancers\Replace DNC.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Get and Upload Conveyancers\Replace DNC.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Get and Upload Conveyancers\Replace DNC.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Get and Upload Conveyancers\Replace DNC.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Get and Upload Conveyancers\Replace DNC.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Get and Upload Conveyancers\Replace TOKEN"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Replace TOKEN"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Get and Upload Conveyancers\Replace TOKEN.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Get and Upload Conveyancers\Replace TOKEN.Inputs[Derived Column Input].Columns[ConveyancerCreateJSON]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="804"
                      cachedName="ConveyancerCreateJSON"
                      lineageId="Package\Get and Upload Conveyancers\Get COnveyancer JSON.Outputs[OLE DB Source Output].Columns[ConveyancerCreateJSON]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Get and Upload Conveyancers\Replace TOKEN.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Get and Upload Conveyancers\Replace TOKEN.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Get and Upload Conveyancers\Replace TOKEN.Outputs[Derived Column Output].Columns[JSON]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="802"
                      lineageId="Package\Get and Upload Conveyancers\Replace TOKEN.Outputs[Derived Column Output].Columns[JSON]"
                      name="JSON"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[REPLACE](#{Package\Get and Upload Conveyancers\Get COnveyancer JSON.Outputs[OLE DB Source Output].Columns[ConveyancerCreateJSON]},"{{TOKEN}}",@[User::ResponseAuth])</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">REPLACE(ConveyancerCreateJSON,"{{TOKEN}}",@[User::ResponseAuth])</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Get and Upload Conveyancers\Replace TOKEN.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Get and Upload Conveyancers\Replace TOKEN.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Get and Upload Conveyancers\Replace TOKEN.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Get and Upload Conveyancers\Replace TOKEN.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Get and Upload Conveyancers\Replace TOKEN.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Get and Upload Conveyancers\Replace TOKEN.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Get and Upload Conveyancers\Send Custom to Rosie"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Web API Destination; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
              description="The Web API destination can be used to send data to Web API URL (e.g. Submit or POST data to REST API/SOAP or other HTTP/HTTPS endpoints)"
              name="Send Custom to Rosie"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                  expressionType="Notify"
                  name="LoggingMode"
                  typeConverter="ZappySys.PowerPack.Common.LoggingMode, ZappySys.PowerPack130, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                <property
                  dataType="System.Boolean"
                  description="When you enable this property it will prefix timestamp before Log messages."
                  expressionType="Notify"
                  name="PrefixTimestamp">false</property>
                <property
                  dataType="System.Null"
                  expressionType="Notify"
                  name="SelfRef"
                  typeConverter="NOTBROWSABLE" />
                <property
                  dataType="System.String"
                  description="API URL you want to access"
                  expressionType="Notify"
                  name="HttpRequestUrl"></property>
                <property
                  dataType="System.String"
                  description="Http Web Request Method (e.g. POST, GET, PUT, LIST, DELETE...). Refer your API documentation if you are not sure which method you have to use."
                  expressionType="Notify"
                  name="HttpRequestMethod">POST</property>
                <property
                  dataType="System.String"
                  description="Set this if you want to set custom Http headers. You may use variable anywhere in the header value using syntax {{User::YourVarName}}. Syntax of Header key value pair is : &amp;lt;request&amp;gt;&amp;lt;header&amp;gt;&amp;lt;name&amp;gt;x-myheader-1&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;AAA&amp;lt;/value&amp;gt;&amp;lt;/header&amp;gt; &amp;lt;header&amp;gt;&amp;lt;name&amp;gt;x-myheader-2&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;BBB&amp;lt;/value&amp;gt;&amp;lt;/header&amp;gt;&amp;lt;/request&amp;gt;"
                  expressionType="Notify"
                  name="HttpHeaders"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">&lt;request&gt;&lt;header&gt;&lt;name&gt;Accept&lt;/name&gt;&lt;value&gt;*/*&lt;/value&gt;&lt;/header&gt;&lt;header&gt;&lt;name&gt;Cache-Control&lt;/name&gt;&lt;value&gt;no-cache&lt;/value&gt;&lt;/header&gt;&lt;/request&gt;</property>
                <property
                  dataType="System.String"
                  description="User defined data you wish to send along with your HTTP Request (e.g. Upload file data, Form POST data). Usually you have to set content-type of your data but if you select RequestMethod=POST then system will automatically set content-type=application/x-www-form-urlencoded."
                  expressionType="Notify"
                  name="HttpRequestData"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies content type for data you wish to POST. If you select Default option then system default content type will be used (i.e. application/x-www-form-urlencoded). If you specify Content-Type header along with this option then header value takes precedence."
                  expressionType="Notify"
                  name="HttpRequestContentType"
                  typeConverter="ZappySys.Common.Web.HttpRequestContentType, ZappySys.Common, Version=1.0.2018.11017, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                <property
                  dataType="System.Boolean"
                  description="If this option is true then component will continue without exception on 404 error (Url not found). This allows you to consume data gracefully."
                  expressionType="Notify"
                  name="ContinueOnUrlNotFoundError">false</property>
                <property
                  dataType="System.Boolean"
                  description="Ignore SSL certificate related errors. Example: if you getting SSL/TLS errors because of certificate expired or certificate is not from trusted authority or certificate is self-signed. By checking this option you will not get SSL/TLS error."
                  expressionType="Notify"
                  name="IgnoreCertificateErrors">false</property>
                <property
                  dataType="System.Boolean"
                  description="Allow unsecure ciphers/suites and curves for SSLS/TLS communication. Use this option to communicate with web servers which needs legacy / unsecured ciphers support. This option is only trigged when you change default SSL/TLS Version on advanced settings tab."
                  expressionType="Notify"
                  name="AllowUnsecureSuite">false</property>
                <property
                  dataType="System.Boolean"
                  description="Enable support for gzip or deflate compression. When you check this option compressed response automatically de-compressed saving bandwidth. This option is only valid if web server supports compressed response stream. Check your API documentation for more information."
                  expressionType="Notify"
                  name="EnableCompressionSupport">true</property>
                <property
                  dataType="System.Int32"
                  description="Specifies which security protocol is supported for HTTPS communication. Using this option you can enable legacy protocol or enforce to use latest version of security protocol (Note: TLS 1.2 is only supported in SSIS 2014 or Higher)."
                  expressionType="Notify"
                  name="SecurityProtocol"
                  typeConverter="ZappySys.PowerPack.Common.HttpsSecurityProtocolType, ZappySys.PowerPack130, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                <property
                  dataType="System.Int32"
                  description="Wait time in milliseconds (Pause after each request). 0=No wait. Use this delay time if your API has limit on how many requests you can make in certain time frame."
                  expressionType="Notify"
                  name="WaitTime">0</property>
                <property
                  dataType="System.Boolean"
                  description="When you redirect error to error output by default you get additional information in ErrorMessage column. Check this option if you need exact Response Body (Useful if its in JSON/XML format which needs to be parsed for additional information for later step)."
                  expressionType="Notify"
                  name="OnErrorOutputResponseBody">false</property>
                <property
                  dataType="System.Boolean"
                  description="Enable multiple requests using parallel threads."
                  expressionType="Notify"
                  name="EnableParallelRequests">true</property>
                <property
                  dataType="System.Int32"
                  description="Maximum parallel threads to use for processing multiple web requests."
                  expressionType="Notify"
                  name="MaxParallelThreads">20</property>
                <property
                  dataType="System.Boolean"
                  description="By default one request is sent for each input row. If your API supports multiple records in a single call via HTTP Body then enable this setting. See also BodyBatchSize, BodyHeader, BodyFooter and BodyRowSeparator property."
                  expressionType="Notify"
                  name="EnableBodyBatch">false</property>
                <property
                  dataType="System.String"
                  description="When you have to wrap input content between opening and closing tags for each call then set this property to specify opening for body content. For Example if you want to build Body like this (send max 100 rows per call) ==&gt; { records : [ {...}, {...}, {...} ] } then you can set BatchSize=100, BodyHeader as &quot;{ records: [&quot; , BodyFooter as &quot;] }&quot; and BodyRowSeperator as comma {,}. This property is ignored if EnableBodyBatch=false."
                  expressionType="Notify"
                  name="BodyHeader"></property>
                <property
                  dataType="System.String"
                  description="When you have to wrap input content between opening and closing tags for each call then set this property to specify closing for body content. For Example if you want to build Body like this (send max 100 rows per call) ==&gt; { records : [ {...}, {...}, {...} ] } then you can set BatchSize=100, BodyHeader as &quot;{ records: [&quot; , BodyFooter as &quot;] }&quot; and BodyRowSeperator as comma {,}. This property is ignored if EnableBodyBatch=false."
                  expressionType="Notify"
                  name="BodyFooter"></property>
                <property
                  dataType="System.Int32"
                  description="If your API supports multiple records via HTTP Body then change this setting &gt; 1 to include multiple upstream records into single call. See also BodyHeader, BodyFooter and BodyRowSeparator property. This property is ignored if EnableBodyBatch=false."
                  expressionType="Notify"
                  name="BodyBatchSize">100</property>
                <property
                  dataType="System.String"
                  description="When you submit multiple rows in a batch you can separate multiple documents / records using custom separator (e.g. in JSON Array you can use comma {,} as record separator if POST document is in array format [ {...}, {...}, {...} ] ). For last row of batch blank separator is used."
                  expressionType="Notify"
                  name="BodyRowSeparator"></property>
                <property
                  dataType="System.Boolean"
                  description="Returns response data as binary data (e.g. Byte Array). Check this option is response is Zip file, Image file or any non text data which needs to be exported as raw data without any encoding."
                  expressionType="Notify"
                  name="TreatResponseAsBinary">false</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">ZappySys.WebApiDestination</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Get and Upload Conveyancers\Send Custom to Rosie.Connections[Connection]"
                  connectionManagerID="Package.ConnectionManagers[HTTP 1]"
                  connectionManagerRefId="Package.ConnectionManagers[HTTP 1]"
                  description="Connection manager for authentication (e.g. HTTP or OAuth Connection)"
                  name="Connection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Get and Upload Conveyancers\Send Custom to Rosie.Inputs[WebApiDestinationInput]"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="WebApiDestinationInput"
                  truncationRowDisposition="FailComponent">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Get and Upload Conveyancers\Send Custom to Rosie.Inputs[WebApiDestinationInput].Columns[ZS_JSON_OUT]"
                      cachedDataType="nText"
                      cachedName="ZS_JSON_OUT"
                      externalMetadataColumnId="Package\Get and Upload Conveyancers\Send Custom to Rosie.Inputs[WebApiDestinationInput].ExternalColumns[HttpRequestData]"
                      lineageId="Package\Get and Upload Conveyancers\Custom Fields.Outputs[JsonGeneratorTransformOutput].Columns[ZS_JSON_OUT]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Get and Upload Conveyancers\Send Custom to Rosie.Inputs[WebApiDestinationInput].ExternalColumns[HttpRequestUrl]"
                      dataType="wstr"
                      length="2000"
                      name="HttpRequestUrl" />
                    <externalMetadataColumn
                      refId="Package\Get and Upload Conveyancers\Send Custom to Rosie.Inputs[WebApiDestinationInput].ExternalColumns[HttpRequestData]"
                      dataType="nText"
                      name="HttpRequestData" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Get and Upload Conveyancers\Send Custom to Rosie.Outputs[WebApiDestination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="WebApiDestination Error Output"
                  synchronousInputId="Package\Get and Upload Conveyancers\Send Custom to Rosie.Inputs[WebApiDestinationInput]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Get and Upload Conveyancers\Send Custom to Rosie.Outputs[WebApiDestination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Get and Upload Conveyancers\Send Custom to Rosie.Outputs[WebApiDestination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Get and Upload Conveyancers\Send Custom to Rosie.Outputs[WebApiDestination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Get and Upload Conveyancers\Send Custom to Rosie.Outputs[WebApiDestination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                    <outputColumn
                      refId="Package\Get and Upload Conveyancers\Send Custom to Rosie.Outputs[WebApiDestination Error Output].Columns[ErrorColumnName]"
                      codePage="1252"
                      dataType="str"
                      length="128"
                      lineageId="Package\Get and Upload Conveyancers\Send Custom to Rosie.Outputs[WebApiDestination Error Output].Columns[ErrorColumnName]"
                      name="ErrorColumnName" />
                    <outputColumn
                      refId="Package\Get and Upload Conveyancers\Send Custom to Rosie.Outputs[WebApiDestination Error Output].Columns[ErrorMessage]"
                      dataType="nText"
                      lineageId="Package\Get and Upload Conveyancers\Send Custom to Rosie.Outputs[WebApiDestination Error Output].Columns[ErrorMessage]"
                      name="ErrorMessage" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Get and Upload Conveyancers\Send Custom to Rosie.Outputs[Response Output]"
                  exclusionGroup="1"
                  name="Response Output"
                  synchronousInputId="Package\Get and Upload Conveyancers\Send Custom to Rosie.Inputs[WebApiDestinationInput]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Get and Upload Conveyancers\Send Custom to Rosie.Outputs[Response Output].Columns[ResponseText]"
                      dataType="nText"
                      lineageId="Package\Get and Upload Conveyancers\Send Custom to Rosie.Outputs[Response Output].Columns[ResponseText]"
                      name="ResponseText" />
                    <outputColumn
                      refId="Package\Get and Upload Conveyancers\Send Custom to Rosie.Outputs[Response Output].Columns[StatusCode]"
                      dataType="i4"
                      lineageId="Package\Get and Upload Conveyancers\Send Custom to Rosie.Outputs[Response Output].Columns[StatusCode]"
                      name="StatusCode" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Get and Upload Conveyancers\Send to Rosie"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Web API Destination; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
              description="The Web API destination can be used to send data to Web API URL (e.g. Submit or POST data to REST API/SOAP or other HTTP/HTTPS endpoints)"
              name="Send to Rosie"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                  expressionType="Notify"
                  name="LoggingMode"
                  typeConverter="ZappySys.PowerPack.Common.LoggingMode, ZappySys.PowerPack130, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                <property
                  dataType="System.Boolean"
                  description="When you enable this property it will prefix timestamp before Log messages."
                  expressionType="Notify"
                  name="PrefixTimestamp">false</property>
                <property
                  dataType="System.Null"
                  expressionType="Notify"
                  name="SelfRef"
                  typeConverter="NOTBROWSABLE" />
                <property
                  dataType="System.String"
                  description="API URL you want to access"
                  expressionType="Notify"
                  name="HttpRequestUrl">{{User::PackageRosieURL}}</property>
                <property
                  dataType="System.String"
                  description="Http Web Request Method (e.g. POST, GET, PUT, LIST, DELETE...). Refer your API documentation if you are not sure which method you have to use."
                  expressionType="Notify"
                  name="HttpRequestMethod">POST</property>
                <property
                  dataType="System.String"
                  description="Set this if you want to set custom Http headers. You may use variable anywhere in the header value using syntax {{User::YourVarName}}. Syntax of Header key value pair is : &amp;lt;request&amp;gt;&amp;lt;header&amp;gt;&amp;lt;name&amp;gt;x-myheader-1&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;AAA&amp;lt;/value&amp;gt;&amp;lt;/header&amp;gt; &amp;lt;header&amp;gt;&amp;lt;name&amp;gt;x-myheader-2&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;BBB&amp;lt;/value&amp;gt;&amp;lt;/header&amp;gt;&amp;lt;/request&amp;gt;"
                  expressionType="Notify"
                  name="HttpHeaders"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">&lt;request&gt;&lt;header&gt;&lt;name&gt;Accept&lt;/name&gt;&lt;value&gt;*/*&lt;/value&gt;&lt;/header&gt;&lt;header&gt;&lt;name&gt;Cache-Control&lt;/name&gt;&lt;value&gt;no-cache&lt;/value&gt;&lt;/header&gt;&lt;/request&gt;</property>
                <property
                  dataType="System.String"
                  description="User defined data you wish to send along with your HTTP Request (e.g. Upload file data, Form POST data). Usually you have to set content-type of your data but if you select RequestMethod=POST then system will automatically set content-type=application/x-www-form-urlencoded."
                  expressionType="Notify"
                  name="HttpRequestData"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies content type for data you wish to POST. If you select Default option then system default content type will be used (i.e. application/x-www-form-urlencoded). If you specify Content-Type header along with this option then header value takes precedence."
                  expressionType="Notify"
                  name="HttpRequestContentType"
                  typeConverter="ZappySys.Common.Web.HttpRequestContentType, ZappySys.Common, Version=1.0.2018.11017, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                <property
                  dataType="System.Boolean"
                  description="If this option is true then component will continue without exception on 404 error (Url not found). This allows you to consume data gracefully."
                  expressionType="Notify"
                  name="ContinueOnUrlNotFoundError">false</property>
                <property
                  dataType="System.Boolean"
                  description="Ignore SSL certificate related errors. Example: if you getting SSL/TLS errors because of certificate expired or certificate is not from trusted authority or certificate is self-signed. By checking this option you will not get SSL/TLS error."
                  expressionType="Notify"
                  name="IgnoreCertificateErrors">false</property>
                <property
                  dataType="System.Boolean"
                  description="Allow unsecure ciphers/suites and curves for SSLS/TLS communication. Use this option to communicate with web servers which needs legacy / unsecured ciphers support. This option is only trigged when you change default SSL/TLS Version on advanced settings tab."
                  expressionType="Notify"
                  name="AllowUnsecureSuite">false</property>
                <property
                  dataType="System.Boolean"
                  description="Enable support for gzip or deflate compression. When you check this option compressed response automatically de-compressed saving bandwidth. This option is only valid if web server supports compressed response stream. Check your API documentation for more information."
                  expressionType="Notify"
                  name="EnableCompressionSupport">true</property>
                <property
                  dataType="System.Int32"
                  description="Specifies which security protocol is supported for HTTPS communication. Using this option you can enable legacy protocol or enforce to use latest version of security protocol (Note: TLS 1.2 is only supported in SSIS 2014 or Higher)."
                  expressionType="Notify"
                  name="SecurityProtocol"
                  typeConverter="ZappySys.PowerPack.Common.HttpsSecurityProtocolType, ZappySys.PowerPack130, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                <property
                  dataType="System.Int32"
                  description="Wait time in milliseconds (Pause after each request). 0=No wait. Use this delay time if your API has limit on how many requests you can make in certain time frame."
                  expressionType="Notify"
                  name="WaitTime">0</property>
                <property
                  dataType="System.Boolean"
                  description="When you redirect error to error output by default you get additional information in ErrorMessage column. Check this option if you need exact Response Body (Useful if its in JSON/XML format which needs to be parsed for additional information for later step)."
                  expressionType="Notify"
                  name="OnErrorOutputResponseBody">false</property>
                <property
                  dataType="System.Boolean"
                  description="Enable multiple requests using parallel threads."
                  expressionType="Notify"
                  name="EnableParallelRequests">true</property>
                <property
                  dataType="System.Int32"
                  description="Maximum parallel threads to use for processing multiple web requests."
                  expressionType="Notify"
                  name="MaxParallelThreads">20</property>
                <property
                  dataType="System.Boolean"
                  description="By default one request is sent for each input row. If your API supports multiple records in a single call via HTTP Body then enable this setting. See also BodyBatchSize, BodyHeader, BodyFooter and BodyRowSeparator property."
                  expressionType="Notify"
                  name="EnableBodyBatch">false</property>
                <property
                  dataType="System.String"
                  description="When you have to wrap input content between opening and closing tags for each call then set this property to specify opening for body content. For Example if you want to build Body like this (send max 100 rows per call) ==&gt; { records : [ {...}, {...}, {...} ] } then you can set BatchSize=100, BodyHeader as &quot;{ records: [&quot; , BodyFooter as &quot;] }&quot; and BodyRowSeperator as comma {,}. This property is ignored if EnableBodyBatch=false."
                  expressionType="Notify"
                  name="BodyHeader"></property>
                <property
                  dataType="System.String"
                  description="When you have to wrap input content between opening and closing tags for each call then set this property to specify closing for body content. For Example if you want to build Body like this (send max 100 rows per call) ==&gt; { records : [ {...}, {...}, {...} ] } then you can set BatchSize=100, BodyHeader as &quot;{ records: [&quot; , BodyFooter as &quot;] }&quot; and BodyRowSeperator as comma {,}. This property is ignored if EnableBodyBatch=false."
                  expressionType="Notify"
                  name="BodyFooter"></property>
                <property
                  dataType="System.Int32"
                  description="If your API supports multiple records via HTTP Body then change this setting &gt; 1 to include multiple upstream records into single call. See also BodyHeader, BodyFooter and BodyRowSeparator property. This property is ignored if EnableBodyBatch=false."
                  expressionType="Notify"
                  name="BodyBatchSize">100</property>
                <property
                  dataType="System.String"
                  description="When you submit multiple rows in a batch you can separate multiple documents / records using custom separator (e.g. in JSON Array you can use comma {,} as record separator if POST document is in array format [ {...}, {...}, {...} ] ). For last row of batch blank separator is used."
                  expressionType="Notify"
                  name="BodyRowSeparator"></property>
                <property
                  dataType="System.Boolean"
                  description="Returns response data as binary data (e.g. Byte Array). Check this option is response is Zip file, Image file or any non text data which needs to be exported as raw data without any encoding."
                  expressionType="Notify"
                  name="TreatResponseAsBinary">false</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">ZappySys.WebApiDestination</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Get and Upload Conveyancers\Send to Rosie.Connections[Connection]"
                  connectionManagerID="Package.ConnectionManagers[HTTP 1]"
                  connectionManagerRefId="Package.ConnectionManagers[HTTP 1]"
                  description="Connection manager for authentication (e.g. HTTP or OAuth Connection)"
                  name="Connection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Get and Upload Conveyancers\Send to Rosie.Inputs[WebApiDestinationInput]"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="WebApiDestinationInput"
                  truncationRowDisposition="FailComponent">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Get and Upload Conveyancers\Send to Rosie.Inputs[WebApiDestinationInput].Columns[JSON]"
                      cachedDataType="wstr"
                      cachedLength="802"
                      cachedName="JSON"
                      externalMetadataColumnId="Package\Get and Upload Conveyancers\Send to Rosie.Inputs[WebApiDestinationInput].ExternalColumns[HttpRequestData]"
                      lineageId="Package\Get and Upload Conveyancers\Replace TOKEN.Outputs[Derived Column Output].Columns[JSON]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Get and Upload Conveyancers\Send to Rosie.Inputs[WebApiDestinationInput].ExternalColumns[HttpRequestUrl]"
                      dataType="wstr"
                      length="2000"
                      name="HttpRequestUrl" />
                    <externalMetadataColumn
                      refId="Package\Get and Upload Conveyancers\Send to Rosie.Inputs[WebApiDestinationInput].ExternalColumns[HttpRequestData]"
                      dataType="nText"
                      name="HttpRequestData" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Get and Upload Conveyancers\Send to Rosie.Outputs[WebApiDestination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="WebApiDestination Error Output"
                  synchronousInputId="Package\Get and Upload Conveyancers\Send to Rosie.Inputs[WebApiDestinationInput]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Get and Upload Conveyancers\Send to Rosie.Outputs[WebApiDestination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Get and Upload Conveyancers\Send to Rosie.Outputs[WebApiDestination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Get and Upload Conveyancers\Send to Rosie.Outputs[WebApiDestination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Get and Upload Conveyancers\Send to Rosie.Outputs[WebApiDestination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                    <outputColumn
                      refId="Package\Get and Upload Conveyancers\Send to Rosie.Outputs[WebApiDestination Error Output].Columns[ErrorColumnName]"
                      codePage="1252"
                      dataType="str"
                      length="128"
                      lineageId="Package\Get and Upload Conveyancers\Send to Rosie.Outputs[WebApiDestination Error Output].Columns[ErrorColumnName]"
                      name="ErrorColumnName" />
                    <outputColumn
                      refId="Package\Get and Upload Conveyancers\Send to Rosie.Outputs[WebApiDestination Error Output].Columns[ErrorMessage]"
                      dataType="nText"
                      lineageId="Package\Get and Upload Conveyancers\Send to Rosie.Outputs[WebApiDestination Error Output].Columns[ErrorMessage]"
                      name="ErrorMessage" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Get and Upload Conveyancers\Send to Rosie.Outputs[Response Output]"
                  exclusionGroup="1"
                  name="Response Output"
                  synchronousInputId="Package\Get and Upload Conveyancers\Send to Rosie.Inputs[WebApiDestinationInput]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Get and Upload Conveyancers\Send to Rosie.Outputs[Response Output].Columns[ResponseText]"
                      dataType="nText"
                      lineageId="Package\Get and Upload Conveyancers\Send to Rosie.Outputs[Response Output].Columns[ResponseText]"
                      name="ResponseText" />
                    <outputColumn
                      refId="Package\Get and Upload Conveyancers\Send to Rosie.Outputs[Response Output].Columns[StatusCode]"
                      dataType="i4"
                      lineageId="Package\Get and Upload Conveyancers\Send to Rosie.Outputs[Response Output].Columns[StatusCode]"
                      name="StatusCode" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Get and Upload Conveyancers\Set columns for OLE DB"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Set columns for OLE DB"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Get and Upload Conveyancers\Set columns for OLE DB.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Get and Upload Conveyancers\Set columns for OLE DB.Inputs[Derived Column Input].Columns[result._id]"
                      cachedDataType="i8"
                      cachedName="result._id"
                      lineageId="Package\Get and Upload Conveyancers\Get Results.Outputs[JsonParserTransformOutput].Columns[result._id]" />
                    <inputColumn
                      refId="Package\Get and Upload Conveyancers\Set columns for OLE DB.Inputs[Derived Column Input].Columns[result.etag]"
                      cachedDataType="wstr"
                      cachedLength="68"
                      cachedName="result.etag"
                      lineageId="Package\Get and Upload Conveyancers\Get Results.Outputs[JsonParserTransformOutput].Columns[result.etag]" />
                    <inputColumn
                      refId="Package\Get and Upload Conveyancers\Set columns for OLE DB.Inputs[Derived Column Input].Columns[notes_int]"
                      cachedDataType="i4"
                      cachedName="notes_int"
                      lineageId="Package\Get and Upload Conveyancers\Convert to INT.Outputs[Data Conversion Output].Columns[notes_int]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Get and Upload Conveyancers\Set columns for OLE DB.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Get and Upload Conveyancers\Set columns for OLE DB.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Get and Upload Conveyancers\Set columns for OLE DB.Outputs[Derived Column Output].Columns[con_id]"
                      dataType="i4"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Get and Upload Conveyancers\Set columns for OLE DB.Outputs[Derived Column Output].Columns[con_id]"
                      name="con_id"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_I4)#{Package\Get and Upload Conveyancers\Convert to INT.Outputs[Data Conversion Output].Columns[notes_int]}</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_I4)notes_int</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get and Upload Conveyancers\Set columns for OLE DB.Outputs[Derived Column Output].Columns[office_Id]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="4"
                      lineageId="Package\Get and Upload Conveyancers\Set columns for OLE DB.Outputs[Derived Column Output].Columns[office_Id]"
                      name="office_Id"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_STR,4,1252)@[$Package::PackageOfficeID]</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_STR,4,1252)@[$Package::PackageOfficeID]</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get and Upload Conveyancers\Set columns for OLE DB.Outputs[Derived Column Output].Columns[etag]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="80"
                      lineageId="Package\Get and Upload Conveyancers\Set columns for OLE DB.Outputs[Derived Column Output].Columns[etag]"
                      name="etag"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_STR,80,1252)#{Package\Get and Upload Conveyancers\Get Results.Outputs[JsonParserTransformOutput].Columns[result.etag]}</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_STR,80,1252)[result.etag]</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get and Upload Conveyancers\Set columns for OLE DB.Outputs[Derived Column Output].Columns[rid]"
                      dataType="i8"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Get and Upload Conveyancers\Set columns for OLE DB.Outputs[Derived Column Output].Columns[rid]"
                      name="rid"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">#{Package\Get and Upload Conveyancers\Get Results.Outputs[JsonParserTransformOutput].Columns[result._id]}</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">[result._id]</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Get and Upload Conveyancers\Set columns for OLE DB.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Get and Upload Conveyancers\Set columns for OLE DB.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Get and Upload Conveyancers\Set columns for OLE DB.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Get and Upload Conveyancers\Set columns for OLE DB.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Get and Upload Conveyancers\Set columns for OLE DB.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Get and Upload Conveyancers\Set columns for OLE DB.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Get and Upload Conveyancers\Trash Destination"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Trash Destination; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
              description="The trash destination is used to create dummy destination which ends data path without any processing."
              name="Trash Destination"
              version="2">
              <properties>
                <property
                  dataType="System.Int32"
                  description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                  expressionType="Notify"
                  name="LoggingMode"
                  typeConverter="ZappySys.PowerPack.Common.LoggingMode, ZappySys.PowerPack130, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                <property
                  dataType="System.Boolean"
                  description="When you enable this property it will prefix timestamp before Log messages."
                  expressionType="Notify"
                  name="PrefixTimestamp">false</property>
                <property
                  dataType="System.Null"
                  expressionType="Notify"
                  name="SelfRef"
                  typeConverter="NOTBROWSABLE" />
                <property
                  dataType="System.String"
                  description="File path where you want to save data"
                  expressionType="Notify"
                  name="FilePath"></property>
                <property
                  dataType="System.Boolean"
                  description="Indicates if you want to save input data to comma separated text file"
                  expressionType="Notify"
                  name="SaveDataToFile">false</property>
                <property
                  dataType="System.Boolean"
                  description="Append data to file"
                  expressionType="Notify"
                  name="Append">false</property>
                <property
                  dataType="System.String"
                  description="RowSeparator"
                  expressionType="Notify"
                  name="RowSeparator">{NEWLINE}</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether you want to overwrite target file if exists"
                  expressionType="Notify"
                  name="OverwriteFileIfExists">true</property>
                <property
                  dataType="System.String"
                  description="ColumnSeparator"
                  expressionType="Notify"
                  name="ColumnSeparator">,</property>
                <property
                  dataType="System.Boolean"
                  description="SupportUnicode"
                  expressionType="Notify"
                  name="SupportUnicode">true</property>
                <property
                  dataType="System.Boolean"
                  description="ColumnNamesInFirstRow"
                  expressionType="Notify"
                  name="ColumnNamesInFirstRow">true</property>
                <property
                  dataType="System.Boolean"
                  description="QuoteDataIfNeeded"
                  expressionType="Notify"
                  name="QuoteDataIfNeeded">true</property>
                <property
                  dataType="System.String"
                  description="Date time format string for any column with DT_DBDATETIME, DT_DBDATETIME2 or DB_DATE format"
                  expressionType="Notify"
                  name="DateTimeFormat">yyyy-MM-dd HH:mm:ss</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">ZappySys.TrashDestination</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Get and Upload Conveyancers\Trash Destination.Inputs[TrashDestinationInput]"
                  hasSideEffects="true"
                  name="TrashDestinationInput">
                  <externalMetadataColumns />
                </input>
              </inputs>
            </component>
            <component
              refId="Package\Get and Upload Conveyancers\Trash Destination 1"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Trash Destination; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
              description="The trash destination is used to create dummy destination which ends data path without any processing."
              name="Trash Destination 1"
              version="2">
              <properties>
                <property
                  dataType="System.Int32"
                  description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                  expressionType="Notify"
                  name="LoggingMode"
                  typeConverter="ZappySys.PowerPack.Common.LoggingMode, ZappySys.PowerPack130, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                <property
                  dataType="System.Boolean"
                  description="When you enable this property it will prefix timestamp before Log messages."
                  expressionType="Notify"
                  name="PrefixTimestamp">false</property>
                <property
                  dataType="System.Null"
                  expressionType="Notify"
                  name="SelfRef"
                  typeConverter="NOTBROWSABLE" />
                <property
                  dataType="System.String"
                  description="File path where you want to save data"
                  expressionType="Notify"
                  name="FilePath"></property>
                <property
                  dataType="System.Boolean"
                  description="Indicates if you want to save input data to comma separated text file"
                  expressionType="Notify"
                  name="SaveDataToFile">false</property>
                <property
                  dataType="System.Boolean"
                  description="Append data to file"
                  expressionType="Notify"
                  name="Append">false</property>
                <property
                  dataType="System.String"
                  description="RowSeparator"
                  expressionType="Notify"
                  name="RowSeparator">{NEWLINE}</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether you want to overwrite target file if exists"
                  expressionType="Notify"
                  name="OverwriteFileIfExists">true</property>
                <property
                  dataType="System.String"
                  description="ColumnSeparator"
                  expressionType="Notify"
                  name="ColumnSeparator">,</property>
                <property
                  dataType="System.Boolean"
                  description="SupportUnicode"
                  expressionType="Notify"
                  name="SupportUnicode">true</property>
                <property
                  dataType="System.Boolean"
                  description="ColumnNamesInFirstRow"
                  expressionType="Notify"
                  name="ColumnNamesInFirstRow">true</property>
                <property
                  dataType="System.Boolean"
                  description="QuoteDataIfNeeded"
                  expressionType="Notify"
                  name="QuoteDataIfNeeded">true</property>
                <property
                  dataType="System.String"
                  description="Date time format string for any column with DT_DBDATETIME, DT_DBDATETIME2 or DB_DATE format"
                  expressionType="Notify"
                  name="DateTimeFormat">yyyy-MM-dd HH:mm:ss</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">ZappySys.TrashDestination</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Get and Upload Conveyancers\Trash Destination 1.Inputs[TrashDestinationInput]"
                  hasSideEffects="true"
                  name="TrashDestinationInput">
                  <externalMetadataColumns />
                </input>
              </inputs>
            </component>
            <component
              refId="Package\Get and Upload Conveyancers\Update RID"
              componentClassID="Microsoft.OLEDBCommand"
              contactInfo="OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
              description="Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time."
              name="Update RID"
              usesDispositions="true"
              version="2">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">exec Rosie_uspInsUpdLegalRid ?,?,?,?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Get and Upload Conveyancers\Update RID.Connections[OleDbConnection]"
                  connectionManagerID="{78432CA1-1FEA-4ED4-9C0F-D552A4A9DE0E}:external"
                  connectionManagerRefId="Project.ConnectionManagers[InternetDB]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Get and Upload Conveyancers\Update RID.Inputs[OLE DB Command Input]"
                  errorOrTruncationOperation="Command Execution"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Command Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Get and Upload Conveyancers\Update RID.Inputs[OLE DB Command Input].Columns[con_id]"
                      cachedDataType="i4"
                      cachedName="con_id"
                      externalMetadataColumnId="Package\Get and Upload Conveyancers\Update RID.Inputs[OLE DB Command Input].ExternalColumns[@legal_id]"
                      lineageId="Package\Get and Upload Conveyancers\Set columns for OLE DB.Outputs[Derived Column Output].Columns[con_id]" />
                    <inputColumn
                      refId="Package\Get and Upload Conveyancers\Update RID.Inputs[OLE DB Command Input].Columns[office_Id]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="4"
                      cachedName="office_Id"
                      externalMetadataColumnId="Package\Get and Upload Conveyancers\Update RID.Inputs[OLE DB Command Input].ExternalColumns[@office_id]"
                      lineageId="Package\Get and Upload Conveyancers\Set columns for OLE DB.Outputs[Derived Column Output].Columns[office_Id]" />
                    <inputColumn
                      refId="Package\Get and Upload Conveyancers\Update RID.Inputs[OLE DB Command Input].Columns[rid]"
                      cachedDataType="i8"
                      cachedName="rid"
                      externalMetadataColumnId="Package\Get and Upload Conveyancers\Update RID.Inputs[OLE DB Command Input].ExternalColumns[@rid_contact]"
                      lineageId="Package\Get and Upload Conveyancers\Set columns for OLE DB.Outputs[Derived Column Output].Columns[rid]" />
                    <inputColumn
                      refId="Package\Get and Upload Conveyancers\Update RID.Inputs[OLE DB Command Input].Columns[etag]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="80"
                      cachedName="etag"
                      externalMetadataColumnId="Package\Get and Upload Conveyancers\Update RID.Inputs[OLE DB Command Input].ExternalColumns[@etag_contact]"
                      lineageId="Package\Get and Upload Conveyancers\Set columns for OLE DB.Outputs[Derived Column Output].Columns[etag]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Get and Upload Conveyancers\Update RID.Inputs[OLE DB Command Input].ExternalColumns[@legal_id]"
                      dataType="i4"
                      name="@legal_id">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">81</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Get and Upload Conveyancers\Update RID.Inputs[OLE DB Command Input].ExternalColumns[@office_id]"
                      codePage="1252"
                      dataType="str"
                      length="4"
                      name="@office_id">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Get and Upload Conveyancers\Update RID.Inputs[OLE DB Command Input].ExternalColumns[@rid_contact]"
                      dataType="i4"
                      name="@rid_contact">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">81</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Get and Upload Conveyancers\Update RID.Inputs[OLE DB Command Input].ExternalColumns[@etag_contact]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="@etag_contact">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Get and Upload Conveyancers\Update RID.Outputs[OLE DB Command Output]"
                  exclusionGroup="1"
                  name="OLE DB Command Output"
                  synchronousInputId="Package\Get and Upload Conveyancers\Update RID.Inputs[OLE DB Command Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Get and Upload Conveyancers\Update RID.Outputs[OLE DB Command Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Command Error Output"
                  synchronousInputId="Package\Get and Upload Conveyancers\Update RID.Inputs[OLE DB Command Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Get and Upload Conveyancers\Update RID.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Get and Upload Conveyancers\Update RID.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Get and Upload Conveyancers\Update RID.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Get and Upload Conveyancers\Update RID.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Get and Upload Conveyancers.Paths[Data Conversion Output]"
              endId="Package\Get and Upload Conveyancers\Set columns for OLE DB.Inputs[Derived Column Input]"
              name="Data Conversion Output"
              startId="Package\Get and Upload Conveyancers\Convert to INT.Outputs[Data Conversion Output]" />
            <path
              refId="Package\Get and Upload Conveyancers.Paths[Derived Column Output]"
              endId="Package\Get and Upload Conveyancers\Multicast.Inputs[Multicast Input 1]"
              name="Derived Column Output"
              startId="Package\Get and Upload Conveyancers\Set columns for OLE DB.Outputs[Derived Column Output]" />
            <path
              refId="Package\Get and Upload Conveyancers.Paths[Derived Column Output1]"
              endId="Package\Get and Upload Conveyancers\Replace DNC.Inputs[Derived Column Input]"
              name="Derived Column Output"
              startId="Package\Get and Upload Conveyancers\Replace TOKEN.Outputs[Derived Column Output]" />
            <path
              refId="Package\Get and Upload Conveyancers.Paths[Derived Column Output2]"
              endId="Package\Get and Upload Conveyancers\Send to Rosie.Inputs[WebApiDestinationInput]"
              name="Derived Column Output"
              startId="Package\Get and Upload Conveyancers\Replace DNC.Outputs[Derived Column Output]" />
            <path
              refId="Package\Get and Upload Conveyancers.Paths[JsonGeneratorTransformOutput]"
              endId="Package\Get and Upload Conveyancers\Send Custom to Rosie.Inputs[WebApiDestinationInput]"
              name="JsonGeneratorTransformOutput"
              startId="Package\Get and Upload Conveyancers\Custom Fields.Outputs[JsonGeneratorTransformOutput]" />
            <path
              refId="Package\Get and Upload Conveyancers.Paths[JsonParserTransformOutput]"
              endId="Package\Get and Upload Conveyancers\Convert to INT.Inputs[Data Conversion Input]"
              name="JsonParserTransformOutput"
              startId="Package\Get and Upload Conveyancers\Get Results.Outputs[JsonParserTransformOutput]" />
            <path
              refId="Package\Get and Upload Conveyancers.Paths[Multicast Output 1]"
              endId="Package\Get and Upload Conveyancers\Custom Fields.Inputs[JsonInput2]"
              name="Multicast Output 1"
              startId="Package\Get and Upload Conveyancers\Multicast.Outputs[Multicast Output 1]" />
            <path
              refId="Package\Get and Upload Conveyancers.Paths[Multicast Output 3]"
              endId="Package\Get and Upload Conveyancers\Update RID.Inputs[OLE DB Command Input]"
              name="Multicast Output 3"
              startId="Package\Get and Upload Conveyancers\Multicast.Outputs[Multicast Output 3]" />
            <path
              refId="Package\Get and Upload Conveyancers.Paths[OLE DB Command Output]"
              endId="Package\Get and Upload Conveyancers\Trash Destination 1.Inputs[TrashDestinationInput]"
              name="OLE DB Command Output"
              startId="Package\Get and Upload Conveyancers\Update RID.Outputs[OLE DB Command Output]" />
            <path
              refId="Package\Get and Upload Conveyancers.Paths[OLE DB Source Output]"
              endId="Package\Get and Upload Conveyancers\Replace TOKEN.Inputs[Derived Column Input]"
              name="OLE DB Source Output"
              startId="Package\Get and Upload Conveyancers\Get COnveyancer JSON.Outputs[OLE DB Source Output]" />
            <path
              refId="Package\Get and Upload Conveyancers.Paths[Response Output]"
              endId="Package\Get and Upload Conveyancers\Get Results.Inputs[JsonParserTransformInput]"
              name="Response Output"
              startId="Package\Get and Upload Conveyancers\Send to Rosie.Outputs[Response Output]" />
            <path
              refId="Package\Get and Upload Conveyancers.Paths[Response Output1]"
              endId="Package\Get and Upload Conveyancers\Trash Destination.Inputs[TrashDestinationInput]"
              name="Response Output"
              startId="Package\Get and Upload Conveyancers\Send Custom to Rosie.Outputs[Response Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Get Auth Key"
      DTS:CreationName="ZappySys.RestApiTask"
      DTS:Description="ZS REST API Task"
      DTS:DTSID="{77635D09-1848-448D-9322-57889FAB4421}"
      DTS:ExecutableType="ZappySys.RestApiTask"
      DTS:FailPackageOnFailure="True"
      DTS:LocaleID="-1"
      DTS:ObjectName="Get Auth Key"
      DTS:TaskContact="REST API Task; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <RestApiTask
          RequestAccessMode="UrlFromVariable"
          RequestUrlVariable="User::PackageRosieURL"
          EnableStatusCheck="False"
          StatucCheckMaxWaitSeconds="0"
          StatucCheckIterationWaitSeconds="0"
          StatusCheckForFailedValue="False"
          StatusSuccessValue=""
          StatusFailedValue=""
          IsMultiPartUpload="False"
          PreventAutoRedirect="False"
          RequestTimeoutMs="0"
          SecurityProtocol="Default"
          EnableCompressionSupport="True"
          AllowUnsecureSuite="False"
          IgnoreCertificateErrors="False"
          RequestUrl="https://api.rexsoftware.com/rex.php "
          RequestUrlConnection=""
          RequestMethod="POST"
          RequestContentType="Raw"
          OverrideConnectionUrl="False"
          RequestHeaders="&lt;request&gt;&lt;header&gt;&lt;name&gt;Accept&lt;/name&gt;&lt;value&gt;*/*&lt;/value&gt;&lt;/header&gt;&lt;header&gt;&lt;name&gt;Cache-Control&lt;/name&gt;&lt;value&gt;no-cache&lt;/value&gt;&lt;/header&gt;&lt;/request&gt;"
          RequestData="{&#xA;&quot;method&quot;:&quot;Authentication::login&quot;,&#xA;&quot;args&quot;:{&#xA;&quot;email&quot;:&quot;{{User::PackageUsername}}&quot;,&#xA;&quot;password&quot;:&quot;{{User::PackagePassword}}&quot;,&#xA;&quot;account_id&quot;:&quot;{{$Package::RexAccountID}}&quot;,&#xA;&quot;application&quot;:&quot;rex&quot;&#xA;}&#xA;}"
          SaveResponse="True"
          SaveResponseStatusCode="True"
          ResponseAccessMode="Variable"
          SaveAsBinary="False"
          ResponseDataFilePath=""
          ResponseHeaderMappings="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-16&quot;?&gt;&lt;ArrayOfKeyValueMapping xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot;&gt;&lt;KeyValueMapping&gt;&lt;Key&gt;Transfer-Encoding&lt;/Key&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;/KeyValueMapping&gt;&lt;KeyValueMapping&gt;&lt;Key&gt;Connection&lt;/Key&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;/KeyValueMapping&gt;&lt;KeyValueMapping&gt;&lt;Key&gt;Access-Control-Allow-Origin&lt;/Key&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;/KeyValueMapping&gt;&lt;KeyValueMapping&gt;&lt;Key&gt;Access-Control-Allow-Headers&lt;/Key&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;/KeyValueMapping&gt;&lt;KeyValueMapping&gt;&lt;Key&gt;Access-Control-Allow-Methods&lt;/Key&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;/KeyValueMapping&gt;&lt;KeyValueMapping&gt;&lt;Key&gt;Access-Control-Max-Age&lt;/Key&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;/KeyValueMapping&gt;&lt;KeyValueMapping&gt;&lt;Key&gt;Vary&lt;/Key&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;/KeyValueMapping&gt;&lt;KeyValueMapping&gt;&lt;Key&gt;Content-Encoding&lt;/Key&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;/KeyValueMapping&gt;&lt;KeyValueMapping&gt;&lt;Key&gt;Content-Type&lt;/Key&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;/KeyValueMapping&gt;&lt;KeyValueMapping&gt;&lt;Key&gt;Date&lt;/Key&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;/KeyValueMapping&gt;&lt;KeyValueMapping&gt;&lt;Key&gt;Server&lt;/Key&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;/KeyValueMapping&gt;&lt;/ArrayOfKeyValueMapping&gt;"
          ResponseCookieMappings="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-16&quot;?&gt;&lt;ArrayOfKeyValueMapping xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; /&gt;"
          CookieContainerVariable=""
          ConvertXmlToJson="False"
          ResponseDataVariable="User::ResponseAuth"
          ResponseStatusCodeVariable="User::ResponseAuthCode"
          ResponseContentType="Json"
          ResponseContentFilter="$.result"
          ResponseCharset=""
          ValidateResponse="False"
          ValidationRules="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-16&quot;?&gt;&lt;ResponseValidationSetting xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot;&gt;&lt;MatchAny&gt;false&lt;/MatchAny&gt;&lt;Rules&gt;&lt;ResponseValidationRule xsi:type=&quot;StatusCodeValidationRule&quot;&gt;&lt;Enabled&gt;false&lt;/Enabled&gt;&lt;Operator&gt;Eq&lt;/Operator&gt;&lt;StatusCode&gt;200&lt;/StatusCode&gt;&lt;/ResponseValidationRule&gt;&lt;ResponseValidationRule xsi:type=&quot;ContentValidationRule&quot;&gt;&lt;Enabled&gt;false&lt;/Enabled&gt;&lt;Operator&gt;Eq&lt;/Operator&gt;&lt;Value /&gt;&lt;/ResponseValidationRule&gt;&lt;ResponseValidationRule xsi:type=&quot;HeaderValidationRule&quot;&gt;&lt;Enabled&gt;false&lt;/Enabled&gt;&lt;Operator&gt;Eq&lt;/Operator&gt;&lt;KeyName /&gt;&lt;Value /&gt;&lt;DataType&gt;String&lt;/DataType&gt;&lt;/ResponseValidationRule&gt;&lt;/Rules&gt;&lt;/ResponseValidationSetting&gt;"
          ConsumeResponseOnError="False"
          ContineOnAnyError="False"
          ContineOnErrorForMessage="False"
          ContineOnErrorForStatusCode="False"
          ErrorStatusCodeToMatch="404"
          MatchForEqual="True"
          ErrorSubstringToMatch=""
          ContineOn404Error="False"
          SaveErrorFlagToVariable="False"
          ErrorFlagVariableName=""
          LogLevel="Debugging"
          PrefixTimestamp="False" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Get Last Run Dates"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{19DEBD73-2919-4CFC-9DD4-779E2921E89D}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Get Last Run Dates"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{1ACC4D99-A047-44CB-AAAD-088F42F69A23}"
          SQLTask:SqlStatementSource="IF NOT EXISTS (&#xA;    SELECT NULL FROM dbo.PackageLastRun WHERE PackageName = 'ContactPush' AND AccountId = ?&#xA;)&#xA;BEGIN&#xA;    INSERT INTO dbo.PackageLastRun&#xA;    VALUES ('ContactPush', ?, '2010-01-01', GETDATE())&#xA;END&#xA;&#xA;SELECT GETDATE() AS NextRunTime,&#xA; DATEDIFF(SECOND, '19700101', LastRunTime) AS LastRunTime&#xA;FROM dbo.PackageLastRun&#xA;WHERE PackageName = 'ContactPush' AND AccountId = ?"
          SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ResultBinding
            SQLTask:ResultName="NextRunTime"
            SQLTask:DtsVariableName="User::PackageStartForNextRun" />
          <SQLTask:ResultBinding
            SQLTask:ResultName="LastRunTime"
            SQLTask:DtsVariableName="User::ProcessingStart" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="@AccountID"
            SQLTask:DtsVariableName="$Package::RexAccountID"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="3"
            SQLTask:ParameterSize="-1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="@AccountID"
            SQLTask:DtsVariableName="$Package::RexAccountID"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="3"
            SQLTask:ParameterSize="-1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="@AccountID"
            SQLTask:DtsVariableName="$Package::RexAccountID"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="3"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Insert success log into database"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{2E3DDF20-C371-4719-BCAB-1BFE1009F2C3}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Insert success log into database"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{1ACC4D99-A047-44CB-AAAD-088F42F69A23}"
          SQLTask:SqlStatementSource="INSERT INTO SSISSuccessLog&#xA;(PackageName, StartTime, Ignored, Upserted, Failed, AccountID, EndTime)&#xA;VALUES&#xA;(?, ?, 0, ?, ?, ?, getdate())" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="@PackageName"
            SQLTask:DtsVariableName="System::PackageName"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="129"
            SQLTask:ParameterSize="-1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="@StartTime"
            SQLTask:DtsVariableName="System::StartTime"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="7"
            SQLTask:ParameterSize="-1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="@Upserted"
            SQLTask:DtsVariableName="User::VarSuccess"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="3"
            SQLTask:ParameterSize="-1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="@Failed"
            SQLTask:DtsVariableName="User::VarMajorError"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="3"
            SQLTask:ParameterSize="-1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="@AccountID"
            SQLTask:DtsVariableName="$Package::RexAccountID"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="3"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Set SSIS Variables From XML"
      DTS:CreationName="ZappySys.XmlParserTask"
      DTS:Description="ZS Xml Parser Task"
      DTS:DTSID="{6D817579-D668-4304-ACA2-63F3A61E0079}"
      DTS:ExecutableType="ZappySys.XmlParserTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Set SSIS Variables From XML"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <XmlParserTask
          SourceAccessMode="Connection"
          SourceVariable=""
          SourceConnection="{58146761-83D9-44BC-8EB5-7C34954B4E51}"
          SourceDirectValue="&lt;!-- &#xA;Using XML Parser Task you can extract values from XML document using XPath Expression &#xA;See example in below grid. Read description for each mapping.&#xA;See more examples: https://msdn.microsoft.com/en-us/library/ms256086(v=vs.110).aspx&#xA;--&gt;&#xA;&lt;catalog&gt;&#xA;   &lt;book id=&quot;bk101&quot;&gt;&#xA;      &lt;author&gt;Gambardella, Matthew&lt;/author&gt;&#xA;      &lt;title&gt;XML Developer's Guide&lt;/title&gt;&#xA;      &lt;genre&gt;Computer&lt;/genre&gt;&#xA;      &lt;price&gt;44.95&lt;/price&gt;&#xA;      &lt;publish_date&gt;2000-10-01&lt;/publish_date&gt;&#xA;      &lt;description&gt;An in-depth look at creating applications &#xA;      with XML.&lt;/description&gt;&#xA;   &lt;/book&gt;&#xA;   &lt;book id=&quot;bk102&quot;&gt;&#xA;      &lt;author&gt;Ralls, Kim&lt;/author&gt;&#xA;      &lt;title&gt;Midnight Rain&lt;/title&gt;&#xA;      &lt;genre&gt;Fantasy&lt;/genre&gt;&#xA;      &lt;price&gt;5.95&lt;/price&gt;&#xA;      &lt;publish_date&gt;2000-12-16&lt;/publish_date&gt;&#xA;      &lt;description&gt;A former architect battles corporate zombies, &#xA;      an evil sorceress, and her own childhood to become queen &#xA;      of the world.&lt;/description&gt;&#xA;   &lt;/book&gt;&#xA;   &lt;book id=&quot;bk103&quot;&gt;&#xA;      &lt;author&gt;Corets, Eva&lt;/author&gt;&#xA;      &lt;title&gt;Maeve Ascendant&lt;/title&gt;&#xA;      &lt;genre&gt;Fantasy&lt;/genre&gt;&#xA;      &lt;price&gt;5.95&lt;/price&gt;&#xA;      &lt;publish_date&gt;2000-11-17&lt;/publish_date&gt;&#xA;      &lt;description&gt;After the collapse of a nanotechnology &#xA;      society in England, the young survivors lay the &#xA;      foundation for a new society.&lt;/description&gt;&#xA;   &lt;/book&gt;&#xA;   &lt;book id=&quot;bk104&quot;&gt;&#xA;      &lt;author&gt;Corets, Eva&lt;/author&gt;&#xA;      &lt;title&gt;Oberon's Legacy&lt;/title&gt;&#xA;      &lt;genre&gt;Fantasy&lt;/genre&gt;&#xA;      &lt;price&gt;5.95&lt;/price&gt;&#xA;      &lt;publish_date&gt;2001-03-10&lt;/publish_date&gt;&#xA;      &lt;description&gt;In post-apocalypse England, the mysterious &#xA;      agent known only as Oberon helps to create a new life &#xA;      for the inhabitants of London. Sequel to Maeve &#xA;      Ascendant.&lt;/description&gt;&#xA;   &lt;/book&gt;&#xA;&lt;/catalog&gt;"
          TargetSettings="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-16&quot;?&gt;&lt;XmlParserSetting xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot;&gt;&lt;Mappings&gt;&lt;XmlParserMapping&gt;&lt;Path&gt;/SSISVariables/RexAPIWebURL&lt;/Path&gt;&lt;Target&gt;User::PackageRosieURL&lt;/Target&gt;&lt;Required&gt;true&lt;/Required&gt;&lt;Description /&gt;&lt;/XmlParserMapping&gt;&lt;XmlParserMapping&gt;&lt;Path&gt; /SSISVariables/PackageUser&lt;/Path&gt;&lt;Target&gt;User::PackageUsername&lt;/Target&gt;&lt;Required&gt;true&lt;/Required&gt;&lt;Description /&gt;&lt;/XmlParserMapping&gt;&lt;XmlParserMapping&gt;&lt;Path&gt;/SSISVariables/PackageErrorEmail&lt;/Path&gt;&lt;Target&gt;User::PackageErrorEmail&lt;/Target&gt;&lt;Required&gt;true&lt;/Required&gt;&lt;Description /&gt;&lt;/XmlParserMapping&gt;&lt;XmlParserMapping&gt;&lt;Path&gt;/SSISVariables/PackagePassword&lt;/Path&gt;&lt;Target&gt;User::PackagePassword&lt;/Target&gt;&lt;Required&gt;true&lt;/Required&gt;&lt;Description /&gt;&lt;/XmlParserMapping&gt;&lt;/Mappings&gt;&lt;Path /&gt;&lt;/XmlParserSetting&gt;"
          LogLevel="Normal"
          PrefixTimestamp="False" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Update Last Run Dates"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{FB90361C-6B4A-4245-8F22-787F8745361B}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Update Last Run Dates"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{1ACC4D99-A047-44CB-AAAD-088F42F69A23}"
          SQLTask:SqlStatementSource="UPDATE dbo.PackageLastRun&#xA;SET LastRunTime = ?&#xA;WHERE PackageName = 'ContactPush'&#xA; AND AccountId = ?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="@LastRunDate"
            SQLTask:DtsVariableName="User::PackageStartForNextRun"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="7"
            SQLTask:ParameterSize="-1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="@AccountID"
            SQLTask:DtsVariableName="$Package::RexAccountID"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="3"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{19700F2C-4C0B-4BAE-939B-5F6788FDC9D8}"
      DTS:From="Package\Get Auth Key"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Email Auth Failure"
      DTS:Value="1" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{7F970717-EB33-4BA9-B0DE-DDABF2E62059}"
      DTS:From="Package\Get Auth Key"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Get Last Run Dates" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{4C4559EA-7B08-4C49-BB31-033594294AE8}"
      DTS:From="Package\Set SSIS Variables From XML"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\Get Auth Key" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 3]"
      DTS:CreationName=""
      DTS:DTSID="{7D6694EE-00E8-4AAD-A72D-262D5E73BD86}"
      DTS:From="Package\Get and Upload Conveyancers"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 3"
      DTS:To="Package\Update Last Run Dates" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 4 1]"
      DTS:CreationName=""
      DTS:DTSID="{44B3E003-0280-40C1-BB5F-2DFC3E6137D7}"
      DTS:From="Package\Update Last Run Dates"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 4 1"
      DTS:To="Package\Insert success log into database" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 6]"
      DTS:CreationName=""
      DTS:DTSID="{E2284298-1D3B-4823-8F40-4D635CF37CDF}"
      DTS:From="Package\Get Last Run Dates"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 6"
      DTS:To="Package\Get and Upload Conveyancers" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 8]"
      DTS:CreationName=""
      DTS:DTSID="{AB5109E9-6F6C-4B4D-8DFA-67DF47A2A1E6}"
      DTS:From="Package\Insert success log into database"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 8"
      DTS:To="Package\Email Success" />
  </DTS:PrecedenceConstraints>
  <DTS:EventHandlers>
    <DTS:EventHandler
      DTS:refId="Package.EventHandlers[OnError]"
      DTS:CreationName="OnError"
      DTS:DTSID="{1D2E8100-C7DB-443B-A5D9-101C4DA64325}"
      DTS:EventID="100663302"
      DTS:EventName="OnError"
      DTS:LocaleID="-1">
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="The propagate property of the event"
          DTS:DTSID="{F3CFF0E5-B842-488D-9B2F-053683A19A7D}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="System"
          DTS:ObjectName="Propagate">
          <DTS:VariableValue
            DTS:DataType="11">-1</DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnError]\Email error"
          DTS:CreationName="ZappySys.HtmlEmailTask"
          DTS:Description="Email Auth Failure"
          DTS:DTSID="{EC9F011C-E3BD-4AFC-B54B-163A79004B10}"
          DTS:ExecutableType="ZappySys.HtmlEmailTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Email error"
          DTS:TaskContact="HTML Email Task; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support">
          <DTS:Variables />
          <DTS:ObjectData>
            <HtmlEmailTask
              SmtpConnection="SMTP"
              IsHtmlEmail="True"
              DefaultStyle="&#xA;&lt;style type=&quot;text/css&quot;&gt;&#xA;body,div,p,span,td,th,table {&#xA; font-family: Helvetica, Arial, sans-serif;&#xA; font-size: 10pt; &#xA;}&#xA;h1,h2,h3,h4,h5{&#xA;font-family: Helvetica, Arial, sans-serif;&#xA;}&#xA;&#xA;table { &#xA; border-collapse: &#xA; collapse; border-spacing: 0; &#xA;}&#xA;&#xA;tr.odd    {background-color: #cccccc}&#xA;tr.even   {background-color: #fafafa}&#xA;td, th { border: 1px solid #bbb;padding: 5 5 5 5} &#xA;th { background: #F3F3F3;  font-weight: bold;}&#xA;&lt;/style&gt;&#xA;&#xA;"
              Subject="Error occured in {{System::PackageName}}"
              From="alerts@spicerhaart.co.uk"
              To="{{User::PackageErrorEmail}}"
              Cc=""
              ReplyTo=""
              Bcc=""
              Attachments=""
              EmailPriority="High"
              MessageSourceType="Direct"
              MessageDirectValue="&lt;p&gt;Error occured and could not be logged in database&lt;p /&gt;&#xA;&lt;br&gt;&#xA;&lt;p&gt;Error code: {{System::ErrorCode}}&lt;p /&gt;&#xA;&lt;br&gt;&#xA;&lt;p&gt;Error message: {{System::ErrorDescription}}&lt;p /&gt;"
              MessageFileConnection=""
              MessageVariable=""
              LogLevel="Normal"
              PrefixTimestamp="False" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnError]\Insert error log into database"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{907DC783-11E2-435F-8A29-142062119D68}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Insert error log into database"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{1ACC4D99-A047-44CB-AAAD-088F42F69A23}"
              SQLTask:SqlStatementSource="INSERT INTO SSISErrorLog&#xA;(PackageName, StartTime, ErrorCode, ErrorDescription,AccountID)&#xA;VALUES&#xA;(?, ?, ?, ?, ?)" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@PackageName"
                SQLTask:DtsVariableName="System::PackageName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@StartTime"
                SQLTask:DtsVariableName="System::StartTime"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="7"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@ErrorCode"
                SQLTask:DtsVariableName="System::ErrorCode"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@ErrorDescription"
                SQLTask:DtsVariableName="System::ErrorDescription"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@AccountID"
                SQLTask:DtsVariableName="$Package::RexAccountID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package.EventHandlers[OnError].PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{435DF1F0-009D-40AD-9974-E62B916581EC}"
          DTS:From="Package.EventHandlers[OnError]\Insert error log into database"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package.EventHandlers[OnError]\Email error"
          DTS:Value="1" />
      </DTS:PrecedenceConstraints>
    </DTS:EventHandler>
    <DTS:EventHandler
      DTS:refId="Package.EventHandlers[OnTaskFailed]"
      DTS:CreationName="OnTaskFailed"
      DTS:DTSID="{732C0BDF-90A5-41F1-AA87-137389C4B98D}"
      DTS:EventID="5242996"
      DTS:EventName="OnTaskFailed"
      DTS:LocaleID="-1">
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="The propagate property of the event"
          DTS:DTSID="{01673DEE-3BF7-4506-9C38-E1FCB5E3C5CC}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="System"
          DTS:ObjectName="Propagate">
          <DTS:VariableValue
            DTS:DataType="11">-1</DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnTaskFailed]\Email error"
          DTS:CreationName="ZappySys.HtmlEmailTask"
          DTS:Description="Email Auth Failure"
          DTS:DTSID="{681FC7C6-005E-4A90-98F3-5AA5702DF0D7}"
          DTS:ExecutableType="ZappySys.HtmlEmailTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Email error"
          DTS:TaskContact="HTML Email Task; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support">
          <DTS:Variables />
          <DTS:ObjectData>
            <HtmlEmailTask
              SmtpConnection="SMTP"
              IsHtmlEmail="True"
              DefaultStyle="&#xA;&lt;style type=&quot;text/css&quot;&gt;&#xA;body,div,p,span,td,th,table {&#xA; font-family: Helvetica, Arial, sans-serif;&#xA; font-size: 10pt; &#xA;}&#xA;h1,h2,h3,h4,h5{&#xA;font-family: Helvetica, Arial, sans-serif;&#xA;}&#xA;&#xA;table { &#xA; border-collapse: &#xA; collapse; border-spacing: 0; &#xA;}&#xA;&#xA;tr.odd    {background-color: #cccccc}&#xA;tr.even   {background-color: #fafafa}&#xA;td, th { border: 1px solid #bbb;padding: 5 5 5 5} &#xA;th { background: #F3F3F3;  font-weight: bold;}&#xA;&lt;/style&gt;&#xA;&#xA;"
              Subject="Error occured in {{System::PackageName}}"
              From="alerts@spicerhaart.co.uk"
              To="{{User::PackageErrorEmail}}"
              Cc=""
              ReplyTo=""
              Bcc=""
              Attachments=""
              EmailPriority="High"
              MessageSourceType="Direct"
              MessageDirectValue="&lt;p&gt;Error occured and could not be logged in database&lt;p /&gt;&#xA;&lt;br&gt;&#xA;&lt;p&gt;Error code: 0&lt;p /&gt;&#xA;&lt;br&gt;&#xA;&lt;p&gt;Error message: {{System::FailedConfigurations}}&lt;p /&gt;"
              MessageFileConnection=""
              MessageVariable=""
              LogLevel="Normal"
              PrefixTimestamp="False" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnTaskFailed]\Insert error log into database"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{8E5A9B0B-84E1-4E6A-AC25-7D96307E8326}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Insert error log into database"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{1ACC4D99-A047-44CB-AAAD-088F42F69A23}"
              SQLTask:SqlStatementSource="INSERT INTO SSISErrorLog&#xA;(PackageName, StartTime, ErrorCode, ErrorDescription,AccountID)&#xA;VALUES&#xA;(?, ?, 0, ?, ?)" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@PackageName"
                SQLTask:DtsVariableName="System::PackageName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@StartTime"
                SQLTask:DtsVariableName="System::StartTime"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="7"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@ErrorDescription"
                SQLTask:DtsVariableName="System::FailedConfigurations"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@AccountID"
                SQLTask:DtsVariableName="$Package::RexAccountID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package.EventHandlers[OnTaskFailed].PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{3753B281-4F95-483A-9C36-2C43E600A014}"
          DTS:From="Package.EventHandlers[OnTaskFailed]\Insert error log into database"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package.EventHandlers[OnTaskFailed]\Email error"
          DTS:Value="1" />
      </DTS:PrecedenceConstraints>
    </DTS:EventHandler>
  </DTS:EventHandlers>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="164,42"
          Id="Package\Email Auth Failure"
          TopLeft="5.50000000000006,209.5" />
        <NodeLayout
          Size="145,42"
          Id="Package\Email Success"
          TopLeft="243,617.5" />
        <NodeLayout
          Size="220,42"
          Id="Package\Get and Upload Conveyancers"
          TopLeft="200.5,311.5" />
        <NodeLayout
          Size="141,42"
          Id="Package\Get Auth Key"
          TopLeft="245,107.5" />
        <NodeLayout
          Size="170,42"
          Id="Package\Get Last Run Dates"
          TopLeft="230.5,209.5" />
        <NodeLayout
          Size="230,42"
          Id="Package\Insert success log into database"
          TopLeft="200.5,515.5" />
        <NodeLayout
          Size="216,42"
          Id="Package\Set SSIS Variables From XML"
          TopLeft="207.5,5.5" />
        <NodeLayout
          Size="187,42"
          Id="Package\Update Last Run Dates"
          TopLeft="222,413.5" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="293.333333333333,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-205.833333333333,60"
              Start="0,0"
              End="-205.833333333333,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.4039270687237" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.4039270687237"
                    Point2="0,24.4039270687237"
                    Point3="-4,24.4039270687237" />
                  <mssgle:LineSegment
                    End="-201.833333333333,24.4039270687237" />
                  <mssgle:CubicBezierSegment
                    Point1="-201.833333333333,24.4039270687237"
                    Point2="-205.833333333333,24.4039270687237"
                    Point3="-205.833333333333,28.4039270687237" />
                  <mssgle:LineSegment
                    End="-205.833333333333,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-118.158014322917,29.4039270687237,30.4826953125,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="337.666666666667,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-22.1666666666666,60"
              Start="0,0"
              End="-22.1666666666666,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.4039270687237" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.4039270687237"
                    Point2="0,24.4039270687237"
                    Point3="-4,24.4039270687237" />
                  <mssgle:LineSegment
                    End="-18.1666666666666,24.4039270687237" />
                  <mssgle:CubicBezierSegment
                    Point1="-18.1666666666666,24.4039270687237"
                    Point2="-22.1666666666666,24.4039270687237"
                    Point3="-22.1666666666666,28.4039270687237" />
                  <mssgle:LineSegment
                    End="-22.1666666666666,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="315.5,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 3]"
          TopLeft="313,353.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 4 1]"
          TopLeft="315.5,455.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 6]"
          TopLeft="313,251.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 8]"
          TopLeft="315.5,557.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <DtsEventHandler
    design-time-name="Package.EventHandlers[OnError]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="NaN,NaN"
          Id="Package.EventHandlers[OnError]\Email error"
          TopLeft="NaN,NaN" />
        <NodeLayout
          Size="NaN,NaN"
          Id="Package.EventHandlers[OnError]\Insert error log into database"
          TopLeft="NaN,NaN" />
        <EdgeLayout
          Id="Package.EventHandlers[OnError].PrecedenceConstraints[Constraint]"
          TopLeft="NaN,NaN">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="{x:Null}"
              Start="0,0"
              End="0,0">
              <mssgle:Curve.Segments>
                <x:Null />
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <DtsEventHandler
    design-time-name="Package.EventHandlers[OnTaskFailed]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="NaN,NaN"
          Id="Package.EventHandlers[OnTaskFailed]\Email error"
          TopLeft="NaN,NaN" />
        <NodeLayout
          Size="NaN,NaN"
          Id="Package.EventHandlers[OnTaskFailed]\Insert error log into database"
          TopLeft="NaN,NaN" />
        <EdgeLayout
          Id="Package.EventHandlers[OnTaskFailed].PrecedenceConstraints[Constraint]"
          TopLeft="NaN,NaN">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="{x:Null}"
              Start="0,0"
              End="0,0">
              <mssgle:Curve.Segments>
                <x:Null />
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <TaskHost
    design-time-name="Package\Get and Upload Conveyancers">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="152,42"
          Id="Package\Get and Upload Conveyancers\Replace TOKEN"
          TopLeft="252,107.5" />
        <NodeLayout
          Size="162,42"
          Id="Package\Get and Upload Conveyancers\Trash Destination"
          TopLeft="247,1025.5" />
        <NodeLayout
          Size="134,42"
          Id="Package\Get and Upload Conveyancers\Update RID"
          TopLeft="61.0000000000001,821.5" />
        <NodeLayout
          Size="140,42"
          Id="Package\Get and Upload Conveyancers\Replace DNC"
          TopLeft="258,209.5" />
        <NodeLayout
          Size="132,42"
          Id="Package\Get and Upload Conveyancers\Get Results"
          TopLeft="262,413.5" />
        <NodeLayout
          Size="192,42"
          Id="Package\Get and Upload Conveyancers\Set columns for OLE DB"
          TopLeft="232,617.5" />
        <NodeLayout
          Size="120,42"
          Id="Package\Get and Upload Conveyancers\Multicast"
          TopLeft="268,719.5" />
        <NodeLayout
          Size="144,42"
          Id="Package\Get and Upload Conveyancers\Custom Fields"
          TopLeft="256,821.5" />
        <NodeLayout
          Size="171,42"
          Id="Package\Get and Upload Conveyancers\Trash Destination 1"
          TopLeft="5.50000000000009,923.5" />
        <NodeLayout
          Size="144,42"
          Id="Package\Get and Upload Conveyancers\Send to Rosie"
          TopLeft="256,311.5" />
        <NodeLayout
          Size="182,42"
          Id="Package\Get and Upload Conveyancers\Send Custom to Rosie"
          TopLeft="237,923.5" />
        <NodeLayout
          Size="189,42"
          Id="Package\Get and Upload Conveyancers\Get COnveyancer JSON"
          TopLeft="233.5,5.5" />
        <NodeLayout
          Size="149,42"
          Id="Package\Get and Upload Conveyancers\Convert to INT"
          TopLeft="253.5,515.5" />
        <EdgeLayout
          Id="Package\Get and Upload Conveyancers.Paths[Response Output1]"
          TopLeft="328,965.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get and Upload Conveyancers.Paths[Response Output]"
          TopLeft="328,353.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get and Upload Conveyancers.Paths[OLE DB Source Output]"
          TopLeft="328,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get and Upload Conveyancers.Paths[OLE DB Command Output]"
          TopLeft="128,863.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-37,60"
              Start="0,0"
              End="-37,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26" />
                  <mssgle:CubicBezierSegment
                    Point1="0,26"
                    Point2="0,30"
                    Point3="-4,30" />
                  <mssgle:LineSegment
                    End="-33,30" />
                  <mssgle:CubicBezierSegment
                    Point1="-33,30"
                    Point2="-37,30"
                    Point3="-37,34" />
                  <mssgle:LineSegment
                    End="-37,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get and Upload Conveyancers.Paths[Multicast Output 3]"
          TopLeft="309.333333333333,761.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-181.333333333333,60"
              Start="0,0"
              End="-181.333333333333,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.4736842105263" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.4736842105263"
                    Point2="0,24.4736842105263"
                    Point3="-4,24.4736842105263" />
                  <mssgle:LineSegment
                    End="-177.333333333333,24.4736842105263" />
                  <mssgle:CubicBezierSegment
                    Point1="-177.333333333333,24.4736842105263"
                    Point2="-181.333333333333,24.4736842105263"
                    Point3="-181.333333333333,28.4736842105263" />
                  <mssgle:LineSegment
                    End="-181.333333333333,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get and Upload Conveyancers.Paths[Multicast Output 1]"
          TopLeft="346.666666666667,761.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-18.6666666666667,60"
              Start="0,0"
              End="-18.6666666666667,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.4736842105263" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.4736842105263"
                    Point2="0,24.4736842105263"
                    Point3="-4,24.4736842105263" />
                  <mssgle:LineSegment
                    End="-14.6666666666667,24.4736842105263" />
                  <mssgle:CubicBezierSegment
                    Point1="-14.6666666666667,24.4736842105263"
                    Point2="-18.6666666666667,24.4736842105263"
                    Point3="-18.6666666666667,28.4736842105263" />
                  <mssgle:LineSegment
                    End="-18.6666666666667,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get and Upload Conveyancers.Paths[JsonParserTransformOutput]"
          TopLeft="328,455.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get and Upload Conveyancers.Paths[JsonGeneratorTransformOutput]"
          TopLeft="328,863.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get and Upload Conveyancers.Paths[Derived Column Output2]"
          TopLeft="328,251.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get and Upload Conveyancers.Paths[Derived Column Output1]"
          TopLeft="328,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get and Upload Conveyancers.Paths[Derived Column Output]"
          TopLeft="328,659.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get and Upload Conveyancers.Paths[Data Conversion Output]"
          TopLeft="328,557.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Get and Upload Conveyancers\Get COnveyancer JSON">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>