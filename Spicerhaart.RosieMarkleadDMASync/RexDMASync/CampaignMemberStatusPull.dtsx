<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="11/9/2018 9:42:24 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="WX9000ITD17"
  DTS:CreatorName="SPICERHAART\1905887"
  DTS:DTSID="{44F4985E-A77F-4F93-A078-496519343C2F}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.2000.150"
  DTS:LocaleID="2057"
  DTS:ObjectName="CampaignMemberStatusPull"
  DTS:PackageType="5"
  DTS:ProtectionLevel="2"
  DTS:VersionBuild="372"
  DTS:VersionGUID="{729B463D-0674-4E72-A287-0E54513EEE9B}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[RexSync.xml]"
      DTS:CreationName="FILE"
      DTS:DTSID="{9498D122-D9CC-4DAC-8EC1-6CE457538D5F}"
      DTS:ObjectName="RexSync.xml">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="C:\SSISVariables\RexSync.xml" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[SMTP]"
      DTS:CreationName="ZS-SMTP"
      DTS:DTSID="{E448D209-F8AD-4A42-B7EA-7BC4A6A2F536}"
      DTS:ObjectName="SMTP">
      <DTS:ObjectData>
        <ConnectionManager
          ConnectionString="SmtpServer=outlookcol;UserName=;Port=25;EnableSsl=False;Timeout=10000;EnableAnonymousAuth=False"
          ConnectByProxy="False" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[SMTP Connection Manager]"
      DTS:CreationName="SMTP"
      DTS:DTSID="{EAACAD2B-FDA3-4660-9847-73BB3C4E594B}"
      DTS:ObjectName="SMTP Connection Manager">
      <DTS:ObjectData>
        <SmtpConnectionManager
          ConnectionString="SmtpServer=outlookcol;UseWindowsAuthentication=False;EnableSsl=False;"
          ConnectByProxy="False" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:PackageParameters>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="3"
      DTS:DTSID="{5A6DA4F6-C82F-43E5-9032-C798216C80F1}"
      DTS:ObjectName="AccountID"
      DTS:Required="True">
      <DTS:Property
        DTS:DataType="3"
        DTS:Name="ParameterValue">1758</DTS:Property>
    </DTS:PackageParameter>
  </DTS:PackageParameters>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{C9253D60-581D-44A1-9B2F-68AF07C234FD}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="AllocationList">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{3486C9BA-3D17-4F30-BAF6-80DE78E14470}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="APIErrorC">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{4E923BF1-7DCE-4033-831F-E451F765E78A}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="APIErrorML">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{957C754F-DE97-4A0A-A7E9-A592757196D8}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="APIErrorMLOnly">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{6197B113-26B9-48F8-AD77-A0B7792A488E}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="APIResponseErrorMsg">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{744BF8DB-4BB9-47CE-96B6-815741C64E89}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="CampaignID">
      <DTS:VariableValue
        DTS:DataType="8">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{1ED5A51E-CEE4-4665-82A9-901354043330}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="CampaignMemberEtag">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{40D83D31-4B10-4506-81EE-F958A5B3421B}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="CampaignMemberID">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{BC738B27-9712-47F6-AA0B-31407B425812}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="CampaignMemberStatusID">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{08E6C831-FE7D-40DE-ADFA-9B0921F132AD}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="CMResponse">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{52F69AE5-A81E-49EA-844F-EB4481355DDD}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="CMResponseCode">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{412AC77A-2114-428F-8DB2-29D16FD447EE}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="intCampaignID">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{88D4A519-B286-4142-8A0D-8635FBDE78F3}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="intLastActivityID">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{65AC5C30-380A-4D56-9896-072F782BFC8F}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="LastActivityID">
      <DTS:VariableValue
        DTS:DataType="8">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{63C645A3-B7A8-4ECA-AB93-527AA20184DF}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="LastActivityText">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{159B511B-77C2-4508-8DFE-BBF84777FC20}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="LastActivityUserID">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{7AF5E55A-0DC7-429C-B9AB-F5BD99F5B115}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="MarketLeadID">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{57C58C40-5270-441A-B6A5-53CA372BE4A0}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Market_Lead_Origins">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{AA06A5B1-9C48-43F5-B659-181915EF1D6C}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="MLCMID">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B1C24503-8335-4353-9B43-6EA973E6E011}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="OfficeID">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F2207ED0-EDBD-4BF0-8026-105F9BB4897F}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="PackageErrorEmail">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{D246C7D3-C46C-4E6D-A086-B66A89874F09}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="PackageFailedCount">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{7B0FE4DE-1892-463D-9E45-7CA766158BEC}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="PackageIgnoredCount">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{166E8B28-D52A-41D3-AE10-BB7786666EC9}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="PackageStartForNextRun">
      <DTS:VariableValue
        DTS:DataType="7">11/19/2018 1:38:06 PM</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{FBE6FA93-ABFF-43D8-BA27-B6B20D7AFC41}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="PackageUpsertCount">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{79C2CAD6-4F8E-46D1-ABAE-297FA3F32470}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="PackageUser">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{895ED07F-0109-4BB0-85C5-841A8F4369E0}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="PackageUserPassword">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A299EA20-203C-42C4-8BC3-074F83500B2C}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="ProcessingStart">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{ED256507-F554-4809-823C-A5936587AEA1}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ResponseAuth">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{EA37ADE1-8211-49ED-8F8F-5352F0930659}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ResponseAuthCode">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{80C43300-B3D7-4BDD-8E5A-58F9C7376C69}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="RexAPIWebURL">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{33ED6802-76E0-4D2F-A387-5EDE5C8CF3D2}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="RexToken">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{D245E8EA-812B-4EA6-BAA7-8A344991664A}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="UpsertObject">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{08BD0D8C-D192-4F77-A209-94A746B9FAE6}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="Upsert_DMA_ID">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{E5C2CD8A-A131-4BA4-A62A-21A5C1F1D972}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Upsert_etag_marketlead">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{15B706D9-E494-4D7C-AE81-7A65D37CA02D}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="Upsert_rid_contact">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{4E31AF88-B851-4387-81EA-27C4061A1765}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="Upsert_rid_marketlead">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Determine upsert list"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{9A01B595-DAA9-460D-A696-4CA7F4C92B06}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Determine upsert list"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Determine upsert list\AllocationList"
              componentClassID="Microsoft.RecordsetDestination"
              contactInfo="Recordset Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates and populates an in-memory ADO recordset that is available outside of the data flow. Scripts and other package elements can use the recordset. For example, use a recordset to store the names of files that will be loaded into the data warehouse."
              name="AllocationList">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the recordset."
                  name="VariableName">User::AllocationList</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Determine upsert list\AllocationList.Inputs[Recordset Destination Input]"
                  hasSideEffects="true"
                  name="Recordset Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Determine upsert list\AllocationList.Inputs[Recordset Destination Input].Columns[convert_id]"
                      cachedDataType="i4"
                      cachedName="convert_id"
                      lineageId="Package\Determine upsert list\Convert rid column to int.Outputs[Data Conversion Output].Columns[convert_id]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
            </component>
            <component
              refId="Package\Determine upsert list\Campaign Member etag collection"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="JSON Source (REST API or File); ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
              description="The JSON source is used to read data from JSON files, RESTful Web Service or direct JSON String."
              name="Campaign Member etag collection"
              usesDispositions="true"
              version="33">
              <properties>
                <property
                  dataType="System.Int32"
                  description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                  expressionType="Notify"
                  name="LoggingMode"
                  typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                <property
                  dataType="System.Boolean"
                  description="When you enable this property it will prefix timestamp before Log messages."
                  expressionType="Notify"
                  name="PrefixTimestamp">false</property>
                <property
                  dataType="System.Null"
                  expressionType="Notify"
                  name="SelfRef"
                  typeConverter="NOTBROWSABLE" />
                <property
                  dataType="System.Boolean"
                  description="Treat empty string as NULL for any numeric data types"
                  expressionType="Notify"
                  name="TreatBlankNumberAsNull">true</property>
                <property
                  dataType="System.Boolean"
                  description="Treat empty string as NULL for bool data types"
                  expressionType="Notify"
                  name="TreatBlankBoolAsNull">true</property>
                <property
                  dataType="System.Boolean"
                  description="Treat empty string as NULL for any date/time data types"
                  expressionType="Notify"
                  name="TreatBlankDateAsNull">true</property>
                <property
                  dataType="System.Int32"
                  description="Defines how to read the JSON file or direct string"
                  expressionType="Notify"
                  name="AccessMode"
                  typeConverter="ZappySys.Common.Ssis.FileValueAccessMode">3</property>
                <property
                  dataType="System.String"
                  description="Defines how to read the JSON file or direct string"
                  expressionType="Notify"
                  name="DirectValue"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.String"
                  description="Variable name which holds JSON string"
                  expressionType="Notify"
                  name="ValueVariable"
                  typeConverter="ZappySys.PowerPack.Converters.VariableEditor,ZappySys.PowerPack140.UI,Version=1.0.0.0,Culture=neutral,PublicKeyToken=1903265a93eae502"></property>
                <property
                  dataType="System.String"
                  description="Variable name which holds data file path or url"
                  expressionType="Notify"
                  name="PathVariable"
                  typeConverter="ZappySys.PowerPack.Converters.VariableEditor,ZappySys.PowerPack140.UI,Version=1.0.0.0,Culture=neutral,PublicKeyToken=1903265a93eae502">User::RexAPIWebURL</property>
                <property
                  dataType="System.String"
                  description="JSON file file path (e.g. c:\data\myfile.json) or pattern to process multiple files (e.g. c:\data\*.json)"
                  expressionType="Notify"
                  name="DirectPath"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">https://api-beta.rexsoftware.com/rex.php</property>
                <property
                  dataType="System.Boolean"
                  description="Include files from sub folders too."
                  expressionType="Notify"
                  name="Recursive">false</property>
                <property
                  dataType="System.String"
                  description="Set this if you want to set custom Http headers. You may use variable anywhere in the header value using syntax {{User::YourVarName}}. Syntax of Header key value pair is : &amp;lt;request&amp;gt;&amp;lt;header&amp;gt;&amp;lt;name&amp;gt;x-myheader-1&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;AAA&amp;lt;/value&amp;gt;&amp;lt;/header&amp;gt; &amp;lt;header&amp;gt;&amp;lt;name&amp;gt;x-myheader-2&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;BBB&amp;lt;/value&amp;gt;&amp;lt;/header&amp;gt;&amp;lt;/request&amp;gt;"
                  expressionType="Notify"
                  name="HttpHeaders">&lt;request&gt;&lt;header&gt;&lt;name&gt;Accept&lt;/name&gt;&lt;value&gt;*/*&lt;/value&gt;&lt;/header&gt;&lt;header&gt;&lt;name&gt;Cache-Control&lt;/name&gt;&lt;value&gt;no-cache&lt;/value&gt;&lt;/header&gt;&lt;header&gt;&lt;name&gt;X-App-Identifier&lt;/name&gt;&lt;value&gt;client:spicerhaart:{{System::PackageName}}:{{System::TaskName}}&lt;/value&gt;&lt;/header&gt;&lt;/request&gt;</property>
                <property
                  dataType="System.String"
                  description="User defined data you wish to send along with your HTTP Request (e.g. Upload file data, Form POST data). Usually you have to set content-type of your data but if you select RequestMethod=POST then system will automatically set content-type=application/x-www-form-urlencoded."
                  expressionType="Notify"
                  name="HttpRequestData">{
"method":"CampaignMembers::search",
"args":{
	"result_format": "etags",
	"limit": 10000,
    "criteria": [
        {"name": "system_modtime", "type": "&gt;=", "value": {{User::ProcessingStart}}}
    ]},
"strip_response_prefix": true,
"token": "{{User::RexToken}}"
}
</property>
                <property
                  dataType="System.String"
                  description="Http Web Request Method (e.g. POST, GET, PUT, LIST, DELETE...). Refer your API documentation if you are not sure which method you have to use."
                  expressionType="Notify"
                  name="HttpRequestMethod">POST</property>
                <property
                  dataType="System.Int32"
                  description="Specifies content type for data you wish to POST. If you select Default option then system default content type will be used (i.e. application/x-www-form-urlencoded). If you specify Content-Type header along with this option then header value takes precedence."
                  expressionType="Notify"
                  name="HttpRequestContentType"
                  typeConverter="ZappySys.Common.Web.HttpRequestContentType">0</property>
                <property
                  dataType="System.Int32"
                  description="Data format coming from HTTP Response. This is useful for example when you have OData service and you want to automatically consume all pages of data using odata.netUrl. Setting JsonFormat=Odata will automatically do it for you. This setting is only applicable if JSON is coming from HTTP WebRequest."
                  expressionType="Notify"
                  name="JsonFormat"
                  typeConverter="ZappySys.Json.JsonFormat">0</property>
                <property
                  dataType="System.Boolean"
                  description="Enable custom proxy settings (If this is not set then system default proxy will be used. To disable proxy totally uncheck this option and check DoNotUseDefaultProxy option if available)"
                  expressionType="Notify"
                  name="UseProxy">false</property>
                <property
                  dataType="System.String"
                  description="Web URL of Proxy server (including port  if necessary). [e.g. http://myproxyserver:8080/]"
                  expressionType="Notify"
                  name="ProxyUrl"></property>
                <property
                  dataType="System.Boolean"
                  description="Enable passing userid and password to proxy server"
                  expressionType="Notify"
                  name="UseProxyCreds">false</property>
                <property
                  dataType="System.String"
                  description="Proxy username"
                  expressionType="Notify"
                  name="ProxyUserName"></property>
                <property
                  dataType="System.String"
                  description="Proxy password"
                  expressionType="Notify"
                  name="ProxyPassword"></property>
                <property
                  dataType="System.String"
                  description="If Service response support pagination using some sort of next url attribute then specify which attribute name in JSON Response string which holds next url. If no attribute found or its null then component will stop fetching next resultset. Example: $.pagingInfo.nextUrl"
                  expressionType="Notify"
                  name="NextUrlAttribute"></property>
                <property
                  dataType="System.String"
                  description="If Service response support pagination using some sort of prev/next url attribute then specify which previous link attribute name from JSON Response string which holds previous url."
                  expressionType="Notify"
                  name="PrevUrlAttribute"></property>
                <property
                  dataType="System.String"
                  description="Specifies value for NextUrlAttribute or StopIndicatorAttribute which indicates last page to stop pagination. If you have specified StopIndicatorAttribute then you can use Regular expression rather than static value to indicate last page. To use regular expression value of this property must start with regex= prefix. Example : regex=FALSE|N  (assuming you set StopIndicatorAttribute to something like $.hasMore)"
                  expressionType="Notify"
                  name="NextUrlStopIndicator"></property>
                <property
                  dataType="System.String"
                  description="Attribute name or expression for attribute which can be used as stop indicator (e.g. hasmore --or-- $.pagination.hasmore). If this value is blank then NextUrlAttribute is used"
                  expressionType="Notify"
                  name="StopIndicatorAttribute"></property>
                <property
                  dataType="System.String"
                  description="If you want to include certain text (or parameters) at the end of Next url then specify this attribute (e.g. &amp;format=json). Another common usecase of this property is to supply pagination token to next Page URL. You can also use &lt;%nextlink%&gt; or  &lt;%nextlink_encoded%&gt; placeholder (e.g. &amp;cursor=&lt;%nextlink_encoded%&gt; )"
                  expressionType="Notify"
                  name="NextUrlSuffix"></property>
                <property
                  dataType="System.Int32"
                  description="This property indicates total number of milliseconds you want to wait before sending next request. This option allows you to adjust how many API calls can be made within certain timeframe. If your API Service has no limit then set this option to zero"
                  expressionType="Notify"
                  name="NextUrlWait">0</property>
                <property
                  dataType="System.Boolean"
                  description="If this option is true then component will continue without exception on 404 error (Url not found). This allows you to consume data gracefully."
                  expressionType="Notify"
                  name="ContinueOnUrlNotFoundError">false</property>
                <property
                  dataType="System.Boolean"
                  description="Continue when any type of exception occurs during http request"
                  expressionType="Notify"
                  name="ContineOnAnyError">false</property>
                <property
                  dataType="System.Boolean"
                  description="Continue on error when specified substring found in response"
                  expressionType="Notify"
                  name="ContineOnErrorForMessage">false</property>
                <property
                  dataType="System.Boolean"
                  description="Continue on error when specified status code returned from web server"
                  expressionType="Notify"
                  name="ContineOnErrorForStatusCode">false</property>
                <property
                  dataType="System.Boolean"
                  description="When error occurs no data is returned. Use this option to get content eventhough error occurs. When this option is checked you can't use [continue on error when specific string found in response] option"
                  expressionType="Notify"
                  name="ConsumeResponseOnError">false</property>
                <property
                  dataType="System.Int32"
                  description="Status code to match when error occurs and ContineOnErrorForStatusCode option is true. If Response status code matches to this code then task continues to run"
                  expressionType="Notify"
                  name="ErrorStatusCodeToMatch">404</property>
                <property
                  dataType="System.String"
                  description="Error substring to match when error occurs and ContineOnErrorForMessage option is true. If Response status code matches to this code then task continues to run"
                  expressionType="Notify"
                  name="ErrorSubstringToMatch"></property>
                <property
                  dataType="System.String"
                  description="Cookie Container can be used to maintain state between multiple web requests. Example: You can login to site like wordpress and then extract any private page content by simply passing authentication cookies using this variable."
                  expressionType="Notify"
                  name="CookieContainerVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Http request Timeout in seconds. Set this to 0 if you want to use system default value (i.e. 100 seconds)"
                  expressionType="Notify"
                  name="RequestTimeout">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies which security protocol is supported for HTTPS communication. Using this option you can enable legacy protocol or enforce to use latest version of security protocol (Note: TLS 1.2 is only supported in SSIS 2014 or Higher)."
                  expressionType="Notify"
                  name="SecurityProtocol"
                  typeConverter="ZappySys.PowerPack.Common.HttpsSecurityProtocolType">0</property>
                <property
                  dataType="System.Boolean"
                  description="Enable support for gzip or deflate compression. When you check this option compressed response automatically de-compressed saving bandwidth. This option is only valid if web server supports compressed response stream. Check your API documentation for more information."
                  expressionType="Notify"
                  name="EnableCompressionSupport">true</property>
                <property
                  dataType="System.Boolean"
                  description="Ignore SSL certificate related errors. Example: if you getting SSL/TLS errors because of certificate expired or certificate is not from trusted authority or certificate is self-signed. By checking this option you will not get SSL/TLS error."
                  expressionType="Notify"
                  name="IgnoreCertificateErrors">false</property>
                <property
                  dataType="System.Boolean"
                  description="Allow unsecure ciphers/suites and curves for SSLS/TLS communication. Use this option to communicate with web servers which needs legacy / unsecured ciphers support. This option is only trigged when you change default SSL/TLS Version on advanced settings tab."
                  expressionType="Notify"
                  name="AllowUnsecureSuite">false</property>
                <property
                  dataType="System.Boolean"
                  description="Use connection to pass credentials for authentication (e.g. Use UserID/Password or Use OAuth Protocol for token based approach)"
                  expressionType="Notify"
                  name="UseConnection">false</property>
                <property
                  dataType="System.Int32"
                  description="Specified how you want to loop through multiple pages returned by REST API."
                  expressionType="Notify"
                  name="PagingMode"
                  typeConverter="ZappySys.Common.RestApiPagingMode">0</property>
                <property
                  dataType="System.Boolean"
                  description="If you wish to pass extracted pagination token or current page number in the body of next request then set this option to true. You can use [$pagetoken$] and [$pagetoken$] placeholders anywhere in the Body where you wish to insert extracted Page token. You must set encoded token you can use &lt;%nextlink_encoded%&gt; inside SuffixForNextUrl Property. If you dont use SuffixForNextUrl then raw nextLink or Token will be inserted inside the body. If you dont specify [$pagetoken$] placeholder in the body then NextPage Token will be appended at the end. NextPage Token is extracted by filter expression specified using property NextUrlSuffix"
                  expressionType="Notify"
                  name="EnablePageTokenForBody">false</property>
                <property
                  dataType="System.Boolean"
                  description="Set this to true if you wish to specify different URL, Header, Body or Filter for first page and next page (i.e. Paginated response). Some APIs like Amazon MWS, NetSuite, Zuora) you may need to set this to true."
                  expressionType="Notify"
                  name="HasDifferentNextPageInfo">false</property>
                <property
                  dataType="System.String"
                  description="When HasDifferentNextPageInfo=true you can set this property to indicate first page and next page. You can specify different URL, Header, Body or Filter for first page and next page (i.e. Paginated response). Use [$tag$] as placeholder anywhere in the URL, Header, Body or Filter and at runtime system will replace it with correct value (first page or next page value). Syntax to specify placeholder for first page vs next page is like a connectionstring url=FirstPageValue|NextPageValue;header=FirstPageValue|NextPageValue;body=FirstPageValue|NextPageValue;filter=FirstPageValue|NextPageValue; You can use one or more key/value pairs to make things dynamic (e.g. url, header, body or filter)  .For example if you have pagination in your API and First URL is http://abc.com/api/items/get and to get more records you have to call http://abc.com/api/items/getNext then you can use [$tag$] as placeholder in the URL http://abc.com/api/items/[$tag$] and specify this property with first page tag and next page tag as url=get|getNext  (Tags are separated using vertical bar). "
                  expressionType="Notify"
                  name="PagePlaceholders"></property>
                <property
                  dataType="System.String"
                  description="Use this property to set request body fragment for first page. HasDifferentNextPageInfo must be set to true to use this property."
                  expressionType="Notify"
                  name="FirstPageBodyPart"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.String"
                  description="Use this property to set request body fragment for any request after first request. HasDifferentNextPageInfo must be set to true to use this property."
                  expressionType="Notify"
                  name="NextPageBodyPart"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.String"
                  description="Expression to extract Maximum pages to loop through. Some APIs don't stop pagination and keep returning last page data when you try to read data after last page. Specify expression (e.g. $.page_count ) to read total pages to loop through using this property."
                  expressionType="Notify"
                  name="PagingMaxPagesExpr"></property>
                <property
                  dataType="System.String"
                  description="e.g. Type page_num if URL looks like this =&gt; http://abc.com/?page_num=1&amp;sort=true  (page number via query string)&#xA;--or-- Type &lt;%page%&gt; if page number is inside URL path like this =&gt; http://abc.com/1/?sort=true  (e.g. replace page number in url with placeholder http://abc.com/&lt;%page%&gt;/?sort=true)&#xA;Page number will be incremented by one for next URL until last page is reached or [Max Page Number] is reached"
                  expressionType="Notify"
                  name="PageNumberAttributeNameInUrl"></property>
                <property
                  dataType="System.Int32"
                  description="Maximum page number until which auto increment is allowed. Type zero for no limit. Next URL contains next page number (increment by one) until last page is detected or [Max Page Number] limit is reached."
                  expressionType="Notify"
                  name="MaxPageNumber">0</property>
                <property
                  dataType="System.String"
                  description="Variable name which will hold starting page number. This is ignored if you useing parameter name from query string to indicate page number."
                  expressionType="Notify"
                  name="StartPageNumberVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Page counter increment. By default next page is incremented by one if this value is zero. You can also enter negative number if you want to decrease page counter."
                  expressionType="Notify"
                  name="PageNumberIncrement">1</property>
                <property
                  dataType="System.Int32"
                  description="Specified how you want detect last page."
                  expressionType="Notify"
                  name="PagingEndStrategy"
                  typeConverter="ZappySys.Common.UrlPagingEndDetectionStrategy">3</property>
                <property
                  dataType="System.Boolean"
                  description="Condition result to compare to detect last page. Set this property to True if you want detect last page if condition is true else set this to False."
                  expressionType="Notify"
                  name="LastPageWhenConditionEqualsTo">true</property>
                <property
                  dataType="System.Int32"
                  description="Minimum bytes expected from response."
                  expressionType="Notify"
                  name="ResponseMinBytes">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum bytes from response."
                  expressionType="Notify"
                  name="ResponseMaxBytes">3</property>
                <property
                  dataType="System.String"
                  description="Expected error message sub string from response."
                  expressionType="Notify"
                  name="ResponseErrorString">not found</property>
                <property
                  dataType="System.Int32"
                  description="Expected status code from response when page number you trying to access not found."
                  expressionType="Notify"
                  name="ResponseStatusCode">404</property>
                <property
                  dataType="System.Int32"
                  description="Maximum JSON records to fetch. Set this value to 0 for all records"
                  expressionType="Notify"
                  name="MaxRows">0</property>
                <property
                  dataType="System.String"
                  description="Enter expression here to filter data.(Example:  $.Users[*].UserName ) This will fetch User names from users records"
                  expressionType="Notify"
                  name="Filter"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">$.result</property>
                <property
                  dataType="System.Boolean"
                  description="Use this option to include parent properties (Non array) in the output along with Filtered Rows"
                  expressionType="Notify"
                  name="IncludeParentColumns">false</property>
                <property
                  dataType="System.Boolean"
                  description="By default child and parent information is not included in the output if children not found for specified expression. For example if you want to extract all orders from all customers nodes then you can type $.Customers[*].Orders[*]. This will fetch all orders from all customers. By default customers records without orders wont be included in the output. If you want to include those customers where orders not found then check this option (Output null information for order attributes). This behavior is similar to LEFT OUTER JOIN in SQL (Left side is parent, right side is child). This option is ***resource intensive*** so only check if you really care about this behavior."
                  expressionType="Notify"
                  name="IncludeParentColumnsWhenChildMissing">false</property>
                <property
                  dataType="System.Boolean"
                  description="Set this option to true if you want to output parent columns which are array. By default any parent column which is an array is not included in output. See also FilterForParentColumnsWithArrayType property if you set this property"
                  expressionType="Notify"
                  name="IncludeParentColumnsWithArrayType">false</property>
                <property
                  dataType="System.String"
                  description="Filter expression to extract value form parent"
                  expressionType="Notify"
                  name="FilterForParentColumnsWithArrayType"></property>
                <property
                  dataType="System.String"
                  description="Prefix for parent column name. This option is only valid if you have set IncludeParentColumns=True"
                  expressionType="Notify"
                  name="ParentColumnPrefix">P_</property>
                <property
                  dataType="System.Boolean"
                  description="Throw error if property name specified in filter expression is missing. By default it will ignore any missing property errors."
                  expressionType="Notify"
                  name="ThrowErrorIfPropertyMissing">false</property>
                <property
                  dataType="System.Int32"
                  description="This property how many nested levels should be scanned to fetch various properties. 0=Scan all child levels."
                  expressionType="Notify"
                  name="MaxLevelsToScan">0</property>
                <property
                  dataType="System.String"
                  description="List comma separated property names from JSON document which you want to exclude from output. Specify parent property name to exclude all child nodes."
                  expressionType="Notify"
                  name="ExcludedProperties"></property>
                <property
                  dataType="System.String"
                  description="Property level separator used in generated property name (separator for outer properties - Above selected filter node). Use this if default separator is producing duplicate property name which is conflicting with existing name."
                  expressionType="Notify"
                  name="LevelSeparator">_</property>
                <property
                  dataType="System.Boolean"
                  description="Enables deep array flattening for selected filtered hierarchy. When you turn on this property it will flatten each property of each array item and expose as column (e.g. If you have Filter set as $.customers[*] and for each customer you have an array of Addresses then you may see output columns like Addresses.1.City, Addresses.1.State, Addresses.2.City, Addresses.2.State .... Addresses.N.City, Addresses.N.State). You can control how many array items you want to flatten by setting MaxArrayItemsToFlatten property."
                  expressionType="Notify"
                  name="EnableArrayFlattening">false</property>
                <property
                  dataType="System.Int32"
                  description="Maximum number of array items to flatten. inner array flattening. Adjust this property to control how many columns being generated. This option is ignored if you set EnableArrayFlattening=false"
                  expressionType="Notify"
                  name="MaxArrayItemsToFlatten">10</property>
                <property
                  dataType="System.Int32"
                  description="Compression format for source file (e.g. gzip, zip)"
                  expressionType="Notify"
                  name="FileCompressionType"
                  typeConverter="ZappySys.Common.FileCompressionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Array Transformation you want to apply. Useful for case when you have 2-Dimensional arrays with rows/columns in separate arrays."
                  expressionType="Notify"
                  name="ArrayTransformationType"
                  typeConverter="ZappySys.Json.ArrayTransformType">0</property>
                <property
                  dataType="System.String"
                  description="Filter expression to use to extract column names for array transformation."
                  expressionType="Notify"
                  name="ArrayTransColumnNameFilter"></property>
                <property
                  dataType="System.String"
                  description="Filter expression for row values (Not applicable for simple array transformation)."
                  expressionType="Notify"
                  name="ArrayTransRowValueFilter"></property>
                <property
                  dataType="System.Boolean"
                  description="When you have 2D array but don't have column list specified in a separate array then use this option (e.g. { arr: [[10,11],[21,22]] } )."
                  expressionType="Notify"
                  name="ArrayTransEnableCustomColumns">false</property>
                <property
                  dataType="System.String"
                  description="When you have 2D array but don't have column list specified in a separate array then use specify column names here. Use comma separated list (e.g col1,col2,col3 ). Column name Order must match value order."
                  expressionType="Notify"
                  name="ArrayTransCustomColumns"></property>
                <property
                  dataType="System.String"
                  description="Specifies how custom date formatted strings are parsed when reading JSON."
                  expressionType="Notify"
                  name="DateFormatString"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies how date formatted strings, e.g. Date(1198908717056) and 2012-03-21T05:40Z, are parsed when reading JSON."
                  expressionType="Notify"
                  name="DateParseHandling"
                  typeConverter="ZappySys.Common.DateParseHandling">1</property>
                <property
                  dataType="System.Boolean"
                  description="Output as raw JSON document rather than parsing individual fields. This option is helpful if you have documents stored in a file and you want to pass them downstream as raw JSON string rather than parsing into columns."
                  expressionType="Notify"
                  name="OutputRawDocument">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indent JSON output so its easy to read."
                  expressionType="Notify"
                  name="IndentOutput">false</property>
                <property
                  dataType="System.Boolean"
                  description="Set this option to true if you want to output FilePath. This option is ignored when you consume DirectValue or data from Url rather than local files. Output column name will be __FilePath"
                  expressionType="Notify"
                  name="OutputFilePath">false</property>
                <property
                  dataType="System.Boolean"
                  description="Set this option to true if you want to output FileName. This option is ignored when you consume DirectValue or data from Url rather than local files. Output column name will be __FileName"
                  expressionType="Notify"
                  name="OutputFileName">true</property>
                <property
                  dataType="System.Boolean"
                  description="Set this option to true if you want to move processed file to archive folder."
                  expressionType="Notify"
                  name="EnableArchiveFile">false</property>
                <property
                  dataType="System.String"
                  description="Folder path where you want to move processed file."
                  expressionType="Notify"
                  name="ArchiveFolderPath"></property>
                <property
                  dataType="System.Boolean"
                  description="Folder path where you want to move processed file."
                  expressionType="Notify"
                  name="OverwriteFileInArchiveFolder">false</property>
                <property
                  dataType="System.String"
                  description="File naming convention for archived file. By default it will same name as original source file processed. But you can control naming format using {%name%} and {%ext%} placeholders. e.g. {%name%}_processed{%ext%} or {%name%}{%ext%}.{{System::ContainerStartTime,yyyyMMdd_HHmmss_fff}}"
                  expressionType="Notify"
                  name="ArchiveFileNamingConvention"></property>
                <property
                  dataType="System.Boolean"
                  description="When this property is true then Column is converted to Row. Pivoted names will appear under  Pivot_Name column and values will appear under Pivot_Value field."
                  expressionType="Notify"
                  name="EnablePivot">false</property>
                <property
                  dataType="System.Int32"
                  description="Metadata scan mode controls how data type and length is determined. By default few records scanned to determine datatype/length. Changing ScanMode affects length/datatype accuracy."
                  expressionType="Notify"
                  name="MetaDataScanMode"
                  typeConverter="ZappySys.Common.Data.MetaDataScanMode">4</property>
                <property
                  dataType="System.Int32"
                  description="Length for all string column. This option is only valid for MetaDataScanMode=Custom"
                  expressionType="Notify"
                  name="MetaDataCustomLength">1000</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">ZappySys.JsonSource</property>
                <property
                  dataType="System.Int32"
                  description="Encoding of source file"
                  expressionType="Notify"
                  name="Encoding"
                  typeConverter="ZappySys.Common.EncodingType">0</property>
                <property
                  dataType="System.String"
                  description="Character set for text (e.g. utf-8 )"
                  expressionType="Notify"
                  name="CharacterSet"></property>
                <property
                  dataType="System.Boolean"
                  description="By default process stops with error if specified local file is not found. Set this property to true if you wish to continue rather than throwing file not found error."
                  expressionType="Notify"
                  name="ContinueOnFileNotFoundError">false</property>
                <property
                  dataType="System.Boolean"
                  description="Check this option if you want to upload file(s) (i.e. POST RAW file data) or send data using Multi-Part encoding method (i.e. Content-Type: multipart/form-data). Multi-Part request allows you to mix key/value and upload files in same request. On the other hand raw upload allows only single file upload (without any key/value) &#xA;&#xA;==== Raw Upload (Content-Type: application/octet-stream) =====   &#xA;To upload single file in raw mode check this option and specify full file path starting with @ sign in the Body (e.g.  @c:\data\myfile.zip ) &#xA;&#xA;==== Form-Data / Multipart Upload (Content-Type: multipart/form-data) =====   &#xA;To treat your Request data as multi part fields you must specify key/value pairs separated by new lines into RequestData field (i.e. Body). Each key value pair is entered on new-line and key/value are separated using equal sign (=). Preceding and trailing spaces are ignored also blank lines are ignored. &#xA;If field value has some any special character(s) then use escape sequence (e.g. For NewLine: \r\n, For Tab: \t, For at (@): \@). When value of any field starts with at sign (@) its automatically treated as File you want to upload. By default file content type is determined based on extension however you can supply content type manually for any field using this way [ fieldname.Content-Type=some content type ]. In below example we have supplied Content-Type for file2 and SomeField1, all other fields are using default content-type.&#xA;See below Example of uploading multiple files along with additional fields.&#xA;&#xA;file1=@c:\data\Myfile1.txt&#xA;file2=@c:\data\Myfile2.json&#xA;file2.Content-Type=application/json&#xA;SomeField1=aaaaaaa&#xA;SomeField1.Content-Type=text/plain&#xA;SomeField2=12345&#xA;SomeFieldWithNewLineAndTab=This is line1\r\nThis is line2\r\nThis is \ttab \ttab \ttab&#xA;SomeFieldStartingWithAtSign=\@MyTwitterHandle&#xA;"
                  expressionType="Notify"
                  name="IsMultiPartUpload">false</property>
                <property
                  dataType="System.String"
                  description="Expression to extract Maximum records to loop through. Some APIs don't stop pagination and keep returning last page data when you try to read data after last page. Specify expression (e.g. $.total_rows ) to read total pages to loop through using this property. This setting is ignored if you set PagingMaxPagesExpr."
                  expressionType="Notify"
                  name="PagingMaxRowsExpr"></property>
                <property
                  dataType="System.String"
                  description="When you enable PagingMaxRowsExpr (end pagination based on MaxRowCount) then you need to count records coming in each response. This expression extract all rows found under specified expression (e.g. $.orders[*] if all records found under orders node)."
                  expressionType="Notify"
                  name="PagingMaxRowsDataPathExpr"></property>
                <property
                  dataType="System.Boolean"
                  description="When this option is checked, system allows to parse large number (Higher than Int64) in JSON document (i.e. { id: 76000009353950433247780 } ). If you do not turn on this option then it may throw error if large number is encountered. This option is SLOW because it has to perform additional checks in order to avoid Large number overflow error so do not turn on unless you getting Large number error."
                  expressionType="Notify"
                  name="EnableBigNumberHandling">false</property>
              </properties>
              <outputs>
                <output
                  refId="Package\Determine upsert list\Campaign Member etag collection.Outputs[JsonSourceOutput]"
                  errorOrTruncationOperation="Error"
                  errorRowDisposition="FailComponent"
                  name="JsonSourceOutput"
                  truncationRowDisposition="FailComponent">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Determine upsert list\Campaign Member etag collection.Outputs[JsonSourceOutput].Columns[rows]"
                      codePage="1252"
                      dataType="text"
                      externalMetadataColumnId="Package\Determine upsert list\Campaign Member etag collection.Outputs[JsonSourceOutput].ExternalColumns[rows]"
                      lineageId="Package\Determine upsert list\Campaign Member etag collection.Outputs[JsonSourceOutput].Columns[rows]"
                      name="rows">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="This flag indicates column is locked so it doesn't refresh datatype automatically or column is manually added by user rather than auto detect"
                          expressionType="Notify"
                          name="ManuallyAdded">true</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Determine upsert list\Campaign Member etag collection.Outputs[JsonSourceOutput].ExternalColumns[rows]"
                      dataType="text"
                      name="rows">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="This flag indicates column is locked so it doesn't refresh datatype automatically or column is manually added by user rather than auto detect"
                          expressionType="Notify"
                          name="ManuallyAdded">true</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Determine upsert list\Campaign Member etag collection.Outputs[JsonSourceOutput].ExternalColumns[total]"
                      dataType="i8"
                      name="total" />
                    <externalMetadataColumn
                      refId="Package\Determine upsert list\Campaign Member etag collection.Outputs[JsonSourceOutput].ExternalColumns[script.start]"
                      dataType="r8"
                      name="script.start" />
                    <externalMetadataColumn
                      refId="Package\Determine upsert list\Campaign Member etag collection.Outputs[JsonSourceOutput].ExternalColumns[script.end]"
                      dataType="r8"
                      name="script.end" />
                    <externalMetadataColumn
                      refId="Package\Determine upsert list\Campaign Member etag collection.Outputs[JsonSourceOutput].ExternalColumns[script.duration]"
                      dataType="r8"
                      name="script.duration" />
                    <externalMetadataColumn
                      refId="Package\Determine upsert list\Campaign Member etag collection.Outputs[JsonSourceOutput].ExternalColumns[sql_query_stats.summary.duration]"
                      dataType="r8"
                      name="sql_query_stats.summary.duration" />
                    <externalMetadataColumn
                      refId="Package\Determine upsert list\Campaign Member etag collection.Outputs[JsonSourceOutput].ExternalColumns[sql_query_stats.summary.duration_avg]"
                      dataType="r8"
                      name="sql_query_stats.summary.duration_avg" />
                    <externalMetadataColumn
                      refId="Package\Determine upsert list\Campaign Member etag collection.Outputs[JsonSourceOutput].ExternalColumns[sql_query_stats.summary.count]"
                      dataType="i8"
                      name="sql_query_stats.summary.count" />
                    <externalMetadataColumn
                      refId="Package\Determine upsert list\Campaign Member etag collection.Outputs[JsonSourceOutput].ExternalColumns[sql_stack.overall.duration]"
                      dataType="r8"
                      name="sql_stack.overall.duration" />
                    <externalMetadataColumn
                      refId="Package\Determine upsert list\Campaign Member etag collection.Outputs[JsonSourceOutput].ExternalColumns[sql_stack.overall.count]"
                      dataType="i8"
                      name="sql_stack.overall.count" />
                    <externalMetadataColumn
                      refId="Package\Determine upsert list\Campaign Member etag collection.Outputs[JsonSourceOutput].ExternalColumns[sql_stack.overall.top_five_queries]"
                      dataType="nText"
                      name="sql_stack.overall.top_five_queries" />
                    <externalMetadataColumn
                      refId="Package\Determine upsert list\Campaign Member etag collection.Outputs[JsonSourceOutput].ExternalColumns[sql_stack.individual]"
                      dataType="nText"
                      name="sql_stack.individual" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Determine upsert list\Campaign Member etag collection.Outputs[JsonSource Error Output]"
                  isErrorOut="true"
                  name="JsonSource Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Determine upsert list\Campaign Member etag collection.Outputs[JsonSource Error Output].Columns[rows]"
                      codePage="1252"
                      dataType="text"
                      lineageId="Package\Determine upsert list\Campaign Member etag collection.Outputs[JsonSource Error Output].Columns[rows]"
                      name="rows" />
                    <outputColumn
                      refId="Package\Determine upsert list\Campaign Member etag collection.Outputs[JsonSource Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Determine upsert list\Campaign Member etag collection.Outputs[JsonSource Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Determine upsert list\Campaign Member etag collection.Outputs[JsonSource Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Determine upsert list\Campaign Member etag collection.Outputs[JsonSource Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                    <outputColumn
                      refId="Package\Determine upsert list\Campaign Member etag collection.Outputs[JsonSource Error Output].Columns[ErrorColumnName]"
                      codePage="1252"
                      dataType="str"
                      length="128"
                      lineageId="Package\Determine upsert list\Campaign Member etag collection.Outputs[JsonSource Error Output].Columns[ErrorColumnName]"
                      name="ErrorColumnName" />
                    <outputColumn
                      refId="Package\Determine upsert list\Campaign Member etag collection.Outputs[JsonSource Error Output].Columns[ErrorMessage]"
                      dataType="wstr"
                      length="1024"
                      lineageId="Package\Determine upsert list\Campaign Member etag collection.Outputs[JsonSource Error Output].Columns[ErrorMessage]"
                      name="ErrorMessage" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Determine upsert list\Convert rid column to int"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Data Conversion"
              name="Convert rid column to int"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Determine upsert list\Convert rid column to int.Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Determine upsert list\Convert rid column to int.Inputs[Data Conversion Input].Columns[etag]"
                      cachedDataType="wstr"
                      cachedLength="2000"
                      cachedName="etag"
                      lineageId="Package\Determine upsert list\Parse Response Rows.Outputs[JsonParserTransformOutput].Columns[etag]" />
                    <inputColumn
                      refId="Package\Determine upsert list\Convert rid column to int.Inputs[Data Conversion Input].Columns[_id]"
                      cachedDataType="wstr"
                      cachedLength="2000"
                      cachedName="_id"
                      lineageId="Package\Determine upsert list\Parse Response Rows.Outputs[JsonParserTransformOutput].Columns[_id]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Determine upsert list\Convert rid column to int.Outputs[Data Conversion Output]"
                  exclusionGroup="1"
                  name="Data Conversion Output"
                  synchronousInputId="Package\Determine upsert list\Convert rid column to int.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Determine upsert list\Convert rid column to int.Outputs[Data Conversion Output].Columns[convertetag]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\Determine upsert list\Convert rid column to int.Outputs[Data Conversion Output].Columns[convertetag]"
                      name="convertetag"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Determine upsert list\Parse Response Rows.Outputs[JsonParserTransformOutput].Columns[etag]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Determine upsert list\Convert rid column to int.Outputs[Data Conversion Output].Columns[convert_id]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Determine upsert list\Convert rid column to int.Outputs[Data Conversion Output].Columns[convert_id]"
                      name="convert_id"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Determine upsert list\Parse Response Rows.Outputs[JsonParserTransformOutput].Columns[_id]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Determine upsert list\Convert rid column to int.Outputs[Data Conversion Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Data Conversion Error Output"
                  synchronousInputId="Package\Determine upsert list\Convert rid column to int.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Determine upsert list\Convert rid column to int.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Determine upsert list\Convert rid column to int.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Determine upsert list\Convert rid column to int.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Determine upsert list\Convert rid column to int.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Determine upsert list\etag compare"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="etag compare"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Determine upsert list\etag compare.Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Determine upsert list\etag compare.Inputs[Conditional Split Input].Columns[campaignMemberEtag]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="campaignMemberEtag"
                      lineageId="Package\Determine upsert list\Lookup  record.Outputs[Lookup Match Output].Columns[campaignMemberEtag]" />
                    <inputColumn
                      refId="Package\Determine upsert list\etag compare.Inputs[Conditional Split Input].Columns[convertetag]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="convertetag"
                      lineageId="Package\Determine upsert list\Convert rid column to int.Outputs[Data Conversion Output].Columns[convertetag]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Determine upsert list\etag compare.Outputs[Do Nothing]"
                  description="Output 1 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="Do Nothing"
                  synchronousInputId="Package\Determine upsert list\etag compare.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">[REPLACENULL](#{Package\Determine upsert list\Lookup  record.Outputs[Lookup Match Output].Columns[campaignMemberEtag]},"") == #{Package\Determine upsert list\Convert rid column to int.Outputs[Data Conversion Output].Columns[convertetag]}</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">REPLACENULL(campaignMemberEtag,"") == convertetag</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Determine upsert list\etag compare.Outputs[Update IDBS]"
                  description="Output 2 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="Update IDBS"
                  synchronousInputId="Package\Determine upsert list\etag compare.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">[REPLACENULL](#{Package\Determine upsert list\Lookup  record.Outputs[Lookup Match Output].Columns[campaignMemberEtag]},"") != #{Package\Determine upsert list\Convert rid column to int.Outputs[Data Conversion Output].Columns[convertetag]}</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">REPLACENULL(campaignMemberEtag,"") != convertetag</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">1</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Determine upsert list\etag compare.Outputs[Conditional Split Default Output]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="Conditional Split Default Output"
                  synchronousInputId="Package\Determine upsert list\etag compare.Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Determine upsert list\etag compare.Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\Determine upsert list\etag compare.Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Determine upsert list\etag compare.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Determine upsert list\etag compare.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Determine upsert list\etag compare.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Determine upsert list\etag compare.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Determine upsert list\Ignore list (Equality)"
              componentClassID="Microsoft.RowCount"
              contactInfo="Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status."
              name="Ignore list (Equality)">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the variable to hold the row count."
                  name="VariableName">User::PackageIgnoredCount</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Determine upsert list\Ignore list (Equality).Inputs[Row Count Input 1]"
                  hasSideEffects="true"
                  name="Row Count Input 1">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Determine upsert list\Ignore list (Equality).Outputs[Row Count Output 1]"
                  name="Row Count Output 1"
                  synchronousInputId="Package\Determine upsert list\Ignore list (Equality).Inputs[Row Count Input 1]">
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Determine upsert list\Lookup  record"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Lookup  record"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select campaignMemberID,campaignMemberEtag,ID as mlcmID from ROSIE_MarketLeadCampaignMemberMapping WITH (NOLOCK)</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from (select campaignMemberID,campaignMemberEtag,ID as mlcmID from ROSIE_MarketLeadCampaignMemberMapping WITH (NOLOCK)) [refTable]
where [refTable].[campaignMemberID] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">2</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="campaignMemberID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="campaignMemberEtag" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="mlcmID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\Determine upsert list\Convert rid column to int.Outputs[Data Conversion Output].Columns[convert_id]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Determine upsert list\Lookup  record.Connections[OleDbConnection]"
                  connectionManagerID="{8AB72F9C-FCB9-4836-BC93-FC14F4226C1D}:external"
                  connectionManagerRefId="Project.ConnectionManagers[InternetDB]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Determine upsert list\Lookup  record.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Determine upsert list\Lookup  record.Inputs[Lookup Input].Columns[convert_id]"
                      cachedDataType="i4"
                      cachedName="convert_id"
                      lineageId="Package\Determine upsert list\Convert rid column to int.Outputs[Data Conversion Output].Columns[convert_id]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">campaignMemberID</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Determine upsert list\Lookup  record.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\Determine upsert list\Lookup  record.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Determine upsert list\Lookup  record.Outputs[Lookup Match Output].Columns[campaignMemberEtag]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Copy Column"
                      length="50"
                      lineageId="Package\Determine upsert list\Lookup  record.Outputs[Lookup Match Output].Columns[campaignMemberEtag]"
                      name="campaignMemberEtag"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">campaignMemberEtag</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Determine upsert list\Lookup  record.Outputs[Lookup Match Output].Columns[campaignMemberID]"
                      dataType="i4"
                      errorOrTruncationOperation="Copy Column"
                      lineageId="Package\Determine upsert list\Lookup  record.Outputs[Lookup Match Output].Columns[campaignMemberID]"
                      name="campaignMemberID"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">campaignMemberID</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Determine upsert list\Lookup  record.Outputs[Lookup Match Output].Columns[mlcmID]"
                      dataType="i4"
                      errorOrTruncationOperation="Copy Column"
                      lineageId="Package\Determine upsert list\Lookup  record.Outputs[Lookup Match Output].Columns[mlcmID]"
                      name="mlcmID"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">mlcmID</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Determine upsert list\Lookup  record.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\Determine upsert list\Lookup  record.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Determine upsert list\Lookup  record.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\Determine upsert list\Lookup  record.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Determine upsert list\Lookup  record.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Determine upsert list\Lookup  record.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Determine upsert list\Lookup  record.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Determine upsert list\Lookup  record.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Determine upsert list\Matching etags"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Trash Destination; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
              description="The trash destination is used to create dummy destination which ends data path without any processing."
              name="Matching etags"
              version="2">
              <properties>
                <property
                  dataType="System.Int32"
                  description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                  expressionType="Notify"
                  name="LoggingMode"
                  typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                <property
                  dataType="System.Boolean"
                  description="When you enable this property it will prefix timestamp before Log messages."
                  expressionType="Notify"
                  name="PrefixTimestamp">false</property>
                <property
                  dataType="System.Null"
                  expressionType="Notify"
                  name="SelfRef"
                  typeConverter="NOTBROWSABLE" />
                <property
                  dataType="System.String"
                  description="File path where you want to save data"
                  expressionType="Notify"
                  name="FilePath"></property>
                <property
                  dataType="System.Boolean"
                  description="Indicates if you want to save input data to comma separated text file"
                  expressionType="Notify"
                  name="SaveDataToFile">false</property>
                <property
                  dataType="System.Boolean"
                  description="Append data to file"
                  expressionType="Notify"
                  name="Append">false</property>
                <property
                  dataType="System.String"
                  description="RowSeparator"
                  expressionType="Notify"
                  name="RowSeparator">{NEWLINE}</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether you want to overwrite target file if exists"
                  expressionType="Notify"
                  name="OverwriteFileIfExists">true</property>
                <property
                  dataType="System.String"
                  description="ColumnSeparator"
                  expressionType="Notify"
                  name="ColumnSeparator">,</property>
                <property
                  dataType="System.Boolean"
                  description="SupportUnicode"
                  expressionType="Notify"
                  name="SupportUnicode">true</property>
                <property
                  dataType="System.Boolean"
                  description="ColumnNamesInFirstRow"
                  expressionType="Notify"
                  name="ColumnNamesInFirstRow">true</property>
                <property
                  dataType="System.Boolean"
                  description="QuoteDataIfNeeded"
                  expressionType="Notify"
                  name="QuoteDataIfNeeded">true</property>
                <property
                  dataType="System.String"
                  description="Date time format string for any column with DT_DBDATETIME, DT_DBDATETIME2 or DB_DATE format"
                  expressionType="Notify"
                  name="DateTimeFormat">yyyy-MM-dd HH:mm:ss</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">ZappySys.TrashDestination</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Determine upsert list\Matching etags.Inputs[TrashDestinationInput]"
                  hasSideEffects="true"
                  name="TrashDestinationInput">
                  <externalMetadataColumns />
                </input>
              </inputs>
            </component>
            <component
              refId="Package\Determine upsert list\Parse Response Rows"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="JSON Parser Transform; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
              description="Parse incoming JSON String into columns. You can also parse and transform single JSON record into multiple rows by filtering data based on JSON Path (e.g. $.Customer.Orders[*])"
              name="Parse Response Rows"
              usesDispositions="true"
              version="2">
              <properties>
                <property
                  dataType="System.Int32"
                  description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                  expressionType="Notify"
                  name="LoggingMode"
                  typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                <property
                  dataType="System.Boolean"
                  description="When you enable this property it will prefix timestamp before Log messages."
                  expressionType="Notify"
                  name="PrefixTimestamp">false</property>
                <property
                  dataType="System.Null"
                  expressionType="Notify"
                  name="SelfRef"
                  typeConverter="NOTBROWSABLE" />
                <property
                  dataType="System.Boolean"
                  description="Treat empty string as NULL for any numeric data types"
                  expressionType="Notify"
                  name="TreatBlankNumberAsNull">true</property>
                <property
                  dataType="System.Boolean"
                  description="Treat empty string as NULL for bool data types"
                  expressionType="Notify"
                  name="TreatBlankBoolAsNull">true</property>
                <property
                  dataType="System.Boolean"
                  description="Treat empty string as NULL for any date/time data types"
                  expressionType="Notify"
                  name="TreatBlankDateAsNull">true</property>
                <property
                  dataType="System.String"
                  description="Sample JSON data used to parse output columns."
                  expressionType="Notify"
                  name="SampleData"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">[
    {
        "etag": "4-1541753574",
        "_id": "4"
    },
    {
        "etag": "7-1541764923",
        "_id": "7"
    },
    {
        "etag": "12-1540985427",
        "_id": "12"
    },
    {
        "etag": "13-1541692414",
        "_id": "13"
    },
    {
        "etag": "14-1541762495",
        "_id": "14"
    },
    {
        "etag": "15-1541607394",
        "_id": "15"
    },
    {
        "etag": "16-1541762407",
        "_id": "16"
    }
]</property>
                <property
                  dataType="System.Boolean"
                  description="Include all upstream parent columns into output except the one you selected to parse. By default only parsed columns from Input document is included in the output. If you wish to include all other upstream columns in the output too then check this option."
                  expressionType="Notify"
                  name="OutputAllUpstreamColumns">false</property>
                <property
                  dataType="System.Int32"
                  description="Maximum JSON records to fetch. Set this value to 0 for all records"
                  expressionType="Notify"
                  name="MaxRows">0</property>
                <property
                  dataType="System.String"
                  description="Enter expression here to filter data.(Example:  $.Users[*].UserName ) This will fetch User names from users records"
                  expressionType="Notify"
                  name="Filter"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.Boolean"
                  description="Use this option to include parent properties (Non array) in the output along with Filtered Rows"
                  expressionType="Notify"
                  name="IncludeParentColumns">true</property>
                <property
                  dataType="System.Boolean"
                  description="By default child and parent information is not included in the output if children not found for specified expression. For example if you want to extract all orders from all customers nodes then you can type $.Customers[*].Orders[*]. This will fetch all orders from all customers. By default customers records without orders wont be included in the output. If you want to include those customers where orders not found then check this option (Output null information for order attributes). This behavior is similar to LEFT OUTER JOIN in SQL (Left side is parent, right side is child). This option is ***resource intensive*** so only check if you really care about this behavior."
                  expressionType="Notify"
                  name="IncludeParentColumnsWhenChildMissing">false</property>
                <property
                  dataType="System.Boolean"
                  description="Set this option to true if you want to output parent columns which are array. By default any parent column which is an array is not included in output. See also FilterForParentColumnsWithArrayType property if you set this property"
                  expressionType="Notify"
                  name="IncludeParentColumnsWithArrayType">false</property>
                <property
                  dataType="System.String"
                  description="Filter expression to extract value form parent"
                  expressionType="Notify"
                  name="FilterForParentColumnsWithArrayType"></property>
                <property
                  dataType="System.String"
                  description="Prefix for parent column name. This option is only valid if you have set IncludeParentColumns=True"
                  expressionType="Notify"
                  name="ParentColumnPrefix">P_</property>
                <property
                  dataType="System.Boolean"
                  description="Throw error if property name specified in filter expression is missing. By default it will ignore any missing property errors."
                  expressionType="Notify"
                  name="ThrowErrorIfPropertyMissing">false</property>
                <property
                  dataType="System.Int32"
                  description="This property how many nested levels should be scanned to fetch various properties. 0=Scan all child levels."
                  expressionType="Notify"
                  name="MaxLevelsToScan">0</property>
                <property
                  dataType="System.String"
                  description="List comma separated property names from JSON document which you want to exclude from output. Specify parent property name to exclude all child nodes."
                  expressionType="Notify"
                  name="ExcludedProperties"></property>
                <property
                  dataType="System.String"
                  description="Property level separator used in generated property name (separator for outer properties - Above selected filter node). Use this if default separator is producing duplicate property name which is conflicting with existing name."
                  expressionType="Notify"
                  name="LevelSeparator">_</property>
                <property
                  dataType="System.Boolean"
                  description="Enables deep array flattening for selected filtered hierarchy. When you turn on this property it will flatten each property of each array item and expose as column (e.g. If you have Filter set as $.customers[*] and for each customer you have an array of Addresses then you may see output columns like Addresses.1.City, Addresses.1.State, Addresses.2.City, Addresses.2.State .... Addresses.N.City, Addresses.N.State). You can control how many array items you want to flatten by setting MaxArrayItemsToFlatten property."
                  expressionType="Notify"
                  name="EnableArrayFlattening">false</property>
                <property
                  dataType="System.Int32"
                  description="Maximum number of array items to flatten. inner array flattening. Adjust this property to control how many columns being generated. This option is ignored if you set EnableArrayFlattening=false"
                  expressionType="Notify"
                  name="MaxArrayItemsToFlatten">10</property>
                <property
                  dataType="System.String"
                  description="Specifies how custom date formatted strings are parsed when reading JSON."
                  expressionType="Notify"
                  name="DateFormatString"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies how date formatted strings, e.g. Date(1198908717056) and 2012-03-21T05:40Z, are parsed when reading JSON."
                  expressionType="Notify"
                  name="DateParseHandling"
                  typeConverter="ZappySys.Common.DateParseHandling">1</property>
                <property
                  dataType="System.Boolean"
                  description="Output as raw JSON document rather than parsing individual fields. This option is helpful if you have documents stored in a file and you want to pass them downstream as raw JSON string rather than parsing into columns."
                  expressionType="Notify"
                  name="OutputRawDocument">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indent JSON output so its easy to read."
                  expressionType="Notify"
                  name="IndentOutput">false</property>
                <property
                  dataType="System.Boolean"
                  description="When this property is true then Column is converted to Row. Pivoted names will appear under  Pivot_Name column and values will appear under Pivot_Value field."
                  expressionType="Notify"
                  name="EnablePivot">false</property>
                <property
                  dataType="System.Int32"
                  description="Array Transformation you want to apply. Useful for case when you have 2-Dimensional arrays with rows/columns in separate arrays."
                  expressionType="Notify"
                  name="ArrayTransformationType"
                  typeConverter="ZappySys.Json.ArrayTransformType">0</property>
                <property
                  dataType="System.String"
                  description="Filter expression to use to extract column names for array transformation."
                  expressionType="Notify"
                  name="ArrayTransColumnNameFilter"></property>
                <property
                  dataType="System.String"
                  description="Filter expression for row values (Not applicable for simple array transformation)."
                  expressionType="Notify"
                  name="ArrayTransRowValueFilter"></property>
                <property
                  dataType="System.Boolean"
                  description="When you have 2D array but don't have column list specified in a separate array then use this option (e.g. { arr: [[10,11],[21,22]] } )."
                  expressionType="Notify"
                  name="ArrayTransEnableCustomColumns">false</property>
                <property
                  dataType="System.String"
                  description="When you have 2D array but don't have column list specified in a separate array then use specify column names here. Use comma separated list (e.g col1,col2,col3 ). Column name Order must match value order."
                  expressionType="Notify"
                  name="ArrayTransCustomColumns"></property>
                <property
                  dataType="System.Int32"
                  description="Metadata scan mode controls how data type and length is determined. By default few records scanned to determine datatype/length. Changing ScanMode affects length/datatype accuracy."
                  expressionType="Notify"
                  name="MetaDataScanMode"
                  typeConverter="ZappySys.Common.Data.MetaDataScanMode">4</property>
                <property
                  dataType="System.Int32"
                  description="Length for all string column. This option is only valid for MetaDataScanMode=Custom"
                  expressionType="Notify"
                  name="MetaDataCustomLength">1000</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">ZappySys.JsonParserTransform</property>
                <property
                  dataType="System.Int32"
                  name="EmptyInputProcessingMode">0</property>
                <property
                  dataType="System.String"
                  name="TreatEmptyInputAs">{ }</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Determine upsert list\Parse Response Rows.Inputs[JsonParserTransformInput]"
                  errorRowDisposition="FailComponent"
                  name="JsonParserTransformInput"
                  truncationRowDisposition="FailComponent">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Determine upsert list\Parse Response Rows.Inputs[JsonParserTransformInput].Columns[rows]"
                      cachedCodepage="1252"
                      cachedDataType="text"
                      cachedName="rows"
                      lineageId="Package\Determine upsert list\Campaign Member etag collection.Outputs[JsonSourceOutput].Columns[rows]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True" />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Determine upsert list\Parse Response Rows.Outputs[JsonParserTransformOutput]"
                  errorOrTruncationOperation="Error"
                  errorRowDisposition="FailComponent"
                  name="JsonParserTransformOutput"
                  truncationRowDisposition="FailComponent">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Determine upsert list\Parse Response Rows.Outputs[JsonParserTransformOutput].Columns[etag]"
                      dataType="wstr"
                      externalMetadataColumnId="Package\Determine upsert list\Parse Response Rows.Outputs[JsonParserTransformOutput].ExternalColumns[etag]"
                      length="2000"
                      lineageId="Package\Determine upsert list\Parse Response Rows.Outputs[JsonParserTransformOutput].Columns[etag]"
                      name="etag">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="This flag indicates column is locked so it doesn't refresh datatype automatically or column is manually added by user rather than auto detect"
                          expressionType="Notify"
                          name="ManuallyAdded">true</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Determine upsert list\Parse Response Rows.Outputs[JsonParserTransformOutput].Columns[_id]"
                      dataType="wstr"
                      externalMetadataColumnId="Package\Determine upsert list\Parse Response Rows.Outputs[JsonParserTransformOutput].ExternalColumns[_id]"
                      length="2000"
                      lineageId="Package\Determine upsert list\Parse Response Rows.Outputs[JsonParserTransformOutput].Columns[_id]"
                      name="_id">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="This flag indicates column is locked so it doesn't refresh datatype automatically or column is manually added by user rather than auto detect"
                          expressionType="Notify"
                          name="ManuallyAdded">true</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Determine upsert list\Parse Response Rows.Outputs[JsonParserTransformOutput].ExternalColumns[etag]"
                      dataType="wstr"
                      length="2000"
                      name="etag">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="This flag indicates column is locked so it doesn't refresh datatype automatically or column is manually added by user rather than auto detect"
                          expressionType="Notify"
                          name="ManuallyAdded">true</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Determine upsert list\Parse Response Rows.Outputs[JsonParserTransformOutput].ExternalColumns[_id]"
                      dataType="wstr"
                      length="2000"
                      name="_id">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="This flag indicates column is locked so it doesn't refresh datatype automatically or column is manually added by user rather than auto detect"
                          expressionType="Notify"
                          name="ManuallyAdded">true</property>
                      </properties>
                    </externalMetadataColumn>
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Determine upsert list\Parse Response Rows.Outputs[JsonParserTransform Error Output]"
                  isErrorOut="true"
                  name="JsonParserTransform Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Determine upsert list\Parse Response Rows.Outputs[JsonParserTransform Error Output].Columns[etag]"
                      dataType="wstr"
                      length="2000"
                      lineageId="Package\Determine upsert list\Parse Response Rows.Outputs[JsonParserTransform Error Output].Columns[etag]"
                      name="etag" />
                    <outputColumn
                      refId="Package\Determine upsert list\Parse Response Rows.Outputs[JsonParserTransform Error Output].Columns[_id]"
                      dataType="wstr"
                      length="2000"
                      lineageId="Package\Determine upsert list\Parse Response Rows.Outputs[JsonParserTransform Error Output].Columns[_id]"
                      name="_id" />
                    <outputColumn
                      refId="Package\Determine upsert list\Parse Response Rows.Outputs[JsonParserTransform Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Determine upsert list\Parse Response Rows.Outputs[JsonParserTransform Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Determine upsert list\Parse Response Rows.Outputs[JsonParserTransform Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Determine upsert list\Parse Response Rows.Outputs[JsonParserTransform Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                    <outputColumn
                      refId="Package\Determine upsert list\Parse Response Rows.Outputs[JsonParserTransform Error Output].Columns[ErrorColumnName]"
                      codePage="1252"
                      dataType="str"
                      length="128"
                      lineageId="Package\Determine upsert list\Parse Response Rows.Outputs[JsonParserTransform Error Output].Columns[ErrorColumnName]"
                      name="ErrorColumnName" />
                    <outputColumn
                      refId="Package\Determine upsert list\Parse Response Rows.Outputs[JsonParserTransform Error Output].Columns[ErrorMessage]"
                      dataType="wstr"
                      length="1024"
                      lineageId="Package\Determine upsert list\Parse Response Rows.Outputs[JsonParserTransform Error Output].Columns[ErrorMessage]"
                      name="ErrorMessage" />
                    <outputColumn
                      refId="Package\Determine upsert list\Parse Response Rows.Outputs[JsonParserTransform Error Output].Columns[ErrorRawData]"
                      dataType="nText"
                      lineageId="Package\Determine upsert list\Parse Response Rows.Outputs[JsonParserTransform Error Output].Columns[ErrorRawData]"
                      name="ErrorRawData" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Determine upsert list\Persist object to variable"
              componentClassID="Microsoft.RecordsetDestination"
              contactInfo="Recordset Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates and populates an in-memory ADO recordset that is available outside of the data flow. Scripts and other package elements can use the recordset. For example, use a recordset to store the names of files that will be loaded into the data warehouse."
              name="Persist object to variable">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the recordset."
                  name="VariableName">User::UpsertObject</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Determine upsert list\Persist object to variable.Inputs[Recordset Destination Input]"
                  hasSideEffects="true"
                  name="Recordset Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Determine upsert list\Persist object to variable.Inputs[Recordset Destination Input].Columns[campaignMemberID]"
                      cachedDataType="i4"
                      cachedName="campaignMemberID"
                      lineageId="Package\Determine upsert list\Lookup  record.Outputs[Lookup Match Output].Columns[campaignMemberID]" />
                    <inputColumn
                      refId="Package\Determine upsert list\Persist object to variable.Inputs[Recordset Destination Input].Columns[mlcmID]"
                      cachedDataType="i4"
                      cachedName="mlcmID"
                      lineageId="Package\Determine upsert list\Lookup  record.Outputs[Lookup Match Output].Columns[mlcmID]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Determine upsert list.Paths[Data Conversion Output]"
              endId="Package\Determine upsert list\Lookup  record.Inputs[Lookup Input]"
              name="Data Conversion Output"
              startId="Package\Determine upsert list\Convert rid column to int.Outputs[Data Conversion Output]" />
            <path
              refId="Package\Determine upsert list.Paths[Do Nothing]"
              endId="Package\Determine upsert list\Ignore list (Equality).Inputs[Row Count Input 1]"
              name="Do Nothing"
              startId="Package\Determine upsert list\etag compare.Outputs[Do Nothing]" />
            <path
              refId="Package\Determine upsert list.Paths[JsonParserTransformOutput]"
              endId="Package\Determine upsert list\Convert rid column to int.Inputs[Data Conversion Input]"
              name="JsonParserTransformOutput"
              startId="Package\Determine upsert list\Parse Response Rows.Outputs[JsonParserTransformOutput]" />
            <path
              refId="Package\Determine upsert list.Paths[JsonSourceOutput]"
              endId="Package\Determine upsert list\Parse Response Rows.Inputs[JsonParserTransformInput]"
              name="JsonSourceOutput"
              startId="Package\Determine upsert list\Campaign Member etag collection.Outputs[JsonSourceOutput]" />
            <path
              refId="Package\Determine upsert list.Paths[Lookup Match Output]"
              endId="Package\Determine upsert list\etag compare.Inputs[Conditional Split Input]"
              name="Lookup Match Output"
              startId="Package\Determine upsert list\Lookup  record.Outputs[Lookup Match Output]" />
            <path
              refId="Package\Determine upsert list.Paths[Lookup No Match Output]"
              endId="Package\Determine upsert list\AllocationList.Inputs[Recordset Destination Input]"
              name="Lookup No Match Output"
              startId="Package\Determine upsert list\Lookup  record.Outputs[Lookup No Match Output]" />
            <path
              refId="Package\Determine upsert list.Paths[Row Count Output 1]"
              endId="Package\Determine upsert list\Matching etags.Inputs[TrashDestinationInput]"
              name="Row Count Output 1"
              startId="Package\Determine upsert list\Ignore list (Equality).Outputs[Row Count Output 1]" />
            <path
              refId="Package\Determine upsert list.Paths[Update IDBS]"
              endId="Package\Determine upsert list\Persist object to variable.Inputs[Recordset Destination Input]"
              name="Update IDBS"
              startId="Package\Determine upsert list\etag compare.Outputs[Update IDBS]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Email"
      DTS:CreationName="ZappySys.HtmlEmailTask"
      DTS:Description="ZS HTML Email Task"
      DTS:Disabled="True"
      DTS:DTSID="{708D0B42-48E0-4C09-A646-456F2CFD7B1C}"
      DTS:ExecutableType="ZappySys.HtmlEmailTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Email"
      DTS:TaskContact="HTML Email Task; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
      DTS:ThreadHint="1">
      <DTS:Variables />
      <DTS:ObjectData>
        <HtmlEmailTask
          SmtpConnection="SMTP"
          IsHtmlEmail="True"
          DefaultStyle="&#xA;&lt;style type=&quot;text/css&quot;&gt;&#xA;body,div,p,span,td,th,table {&#xA; font-family: Helvetica, Arial, sans-serif;&#xA; font-size: 10pt; &#xA;}&#xA;h1,h2,h3,h4,h5{&#xA;font-family: Helvetica, Arial, sans-serif;&#xA;}&#xA;&#xA;table { &#xA; border-collapse: &#xA; collapse; border-spacing: 0; &#xA;}&#xA;&#xA;tr.odd    {background-color: #cccccc}&#xA;tr.even   {background-color: #fafafa}&#xA;td, th { border: 1px solid #bbb;padding: 5 5 5 5} &#xA;th { background: #F3F3F3;  font-weight: bold;}&#xA;&lt;/style&gt;&#xA;&#xA;"
          Subject="Package {{System::PackageName}} Completed"
          From="alerts@spicerhaart.com"
          To="{{User::PackageErrorEmail}}"
          Cc=""
          ReplyTo=""
          Bcc=""
          Attachments=""
          EmailPriority="Low"
          MessageSourceType="Direct"
          MessageDirectValue="Package ran but could not insert success log into database&#xA;&#xA;Ignored:{{User::PackageIgnoredCount}} &lt;br/&gt;&#xA;Upserted:{{User::PackageUpsertCount}} &lt;br/&gt;&#xA;Failed:{{User::PackageFailedCount}}&lt;br/&gt;"
          MessageFileConnection=""
          MessageVariable=""
          LogLevel="Normal"
          PrefixTimestamp="False" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Foreach Loop Container"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:Description="Foreach Loop Container"
      DTS:DTSID="{37A9ACFA-A5D0-47CE-B00B-5A27D77F8C47}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="-1"
      DTS:ObjectName="Foreach Loop Container">
      <DTS:ForEachEnumerator
        DTS:CreationName="Microsoft.ForEachADOEnumerator"
        DTS:DTSID="{644786AE-E79B-47B5-A050-8F37633199BD}"
        DTS:ObjectName="{644786AE-E79B-47B5-A050-8F37633199BD}">
        <DTS:ObjectData>
          <FEEADO
            EnumType="EnumerateRowsInFirstTable"
            VarName="User::UpsertObject" />
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Insert error log into database"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{5a79629b-eaf2-4230-8edb-28c0bb8a5870}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Insert error log into database"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{0533A634-9E92-4D46-8F14-E1BCF2F6C3FE}"
              SQLTask:SqlStatementSource="INSERT INTO SSISErrorLog&#xA;(PackageName, StartTime, ErrorCode, ErrorDescription, AccountID)&#xA;VALUES&#xA;(?, ?, ?, ?, ?)" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@PackageName"
                SQLTask:DtsVariableName="System::PackageName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@StartTime"
                SQLTask:DtsVariableName="System::StartTime"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="7"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@ErrorCode"
                SQLTask:DtsVariableName="User::CMResponseCode"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@ErrorDescription"
                SQLTask:DtsVariableName="User::APIResponseErrorMsg"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@AccountID"
                SQLTask:DtsVariableName="$Package::AccountID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Parse and Check For Error"
          DTS:CreationName="ZappySys.JsonParserTask"
          DTS:Description="ZS JSON Parser Task"
          DTS:DTSID="{e59f335a-00f6-429d-ac9a-708ae3c20b15}"
          DTS:ExecutableType="ZappySys.JsonParserTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Parse and Check For Error"
          DTS:TaskContact="JSON Parser Task; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:LoggingMode="2" />
          <DTS:ObjectData>
            <JsonParserTask
              SourceAccessMode="Variable"
              SourceVariable="User::CMResponse"
              SourceConnection=""
              SourceDirectValue="{&#xA;    &quot;result&quot;: {&#xA;        &quot;system_ctime&quot;: 1591787954,&#xA;        &quot;system_modtime&quot;: 1591862215,&#xA;        &quot;etag&quot;: &quot;78541-1591862215&quot;,&#xA;        &quot;system_modified_user&quot;: {&#xA;            &quot;id&quot;: &quot;18452&quot;,&#xA;            &quot;_name&quot;: &quot;Saulius Samoska&quot;,&#xA;            &quot;_first_name&quot;: &quot;Saulius&quot;,&#xA;            &quot;_last_name&quot;: &quot;Samoska&quot;,&#xA;            &quot;_email_address&quot;: &quot;saulius.samoska@spicerhaart.co.uk&quot;&#xA;        },&#xA;        &quot;system_created_user&quot;: {&#xA;            &quot;id&quot;: &quot;19443&quot;,&#xA;            &quot;_name&quot;: &quot;Rosie API&quot;,&#xA;            &quot;_first_name&quot;: &quot;Rosie&quot;,&#xA;            &quot;_last_name&quot;: &quot;API&quot;,&#xA;            &quot;_email_address&quot;: &quot;rosie@spicerhaart.co.uk&quot;&#xA;        },&#xA;        &quot;service_record&quot;: {&#xA;            &quot;id&quot;: 57780,&#xA;            &quot;text&quot;: &quot;20 Alan Way, Colchester CO3 4LG&quot;,&#xA;            &quot;stub&quot;: {&#xA;                &quot;system_label&quot;: &quot;20 Alan Way, Colchester CO3 4LG&quot;,&#xA;                &quot;assignee&quot;: {&#xA;                    &quot;id&quot;: &quot;18348&quot;,&#xA;                    &quot;name&quot;: &quot;Tom Charlesworth&quot;,&#xA;                    &quot;first_name&quot;: &quot;Tom&quot;,&#xA;                    &quot;last_name&quot;: &quot;Charlesworth&quot;,&#xA;                    &quot;email_address&quot;: &quot;Tom.Charlesworth@haart.co.uk&quot;&#xA;                },&#xA;                &quot;lead_status&quot;: {&#xA;                    &quot;id&quot;: &quot;26742&quot;,&#xA;                    &quot;text&quot;: &quot;DO NOT CALL&quot;&#xA;                },&#xA;                &quot;id&quot;: 57780&#xA;            }&#xA;        },&#xA;        &quot;status&quot;: {&#xA;            &quot;id&quot;: 28895,&#xA;            &quot;text&quot;: &quot;Door Number Required&quot;&#xA;        },&#xA;        &quot;service_type&quot;: {&#xA;            &quot;id&quot;: &quot;MarketLeads&quot;,&#xA;            &quot;text&quot;: &quot;MarketLeads&quot;&#xA;        },&#xA;        &quot;last_activity&quot;: {&#xA;            &quot;_system_ctime&quot;: 1591864121,&#xA;            &quot;_parent_object_type&quot;: &quot;campaign_member&quot;,&#xA;            &quot;_parent_object_id&quot;: 78541,&#xA;            &quot;_etag&quot;: &quot;275988-1591864121&quot;,&#xA;            &quot;_system_created_user&quot;: {&#xA;                &quot;id&quot;: &quot;18452&quot;,&#xA;                &quot;_name&quot;: &quot;Saulius Samoska&quot;,&#xA;                &quot;_first_name&quot;: &quot;Saulius&quot;,&#xA;                &quot;_last_name&quot;: &quot;Samoska&quot;,&#xA;                &quot;_email_address&quot;: &quot;saulius.samoska@spicerhaart.co.uk&quot;&#xA;            },&#xA;            &quot;_type&quot;: {&#xA;                &quot;id&quot;: &quot;conversation&quot;,&#xA;                &quot;text&quot;: &quot;Phone - Conversation&quot;&#xA;            },&#xA;            &quot;id&quot;: 275988&#xA;        },&#xA;        &quot;campaign&quot;: {&#xA;            &quot;_name&quot;: &quot;Fiona Wilson (1906356) Knock Knock&quot;,&#xA;            &quot;_type&quot;: {&#xA;                &quot;id&quot;: &quot;door_knocking&quot;,&#xA;                &quot;text&quot;: &quot;Door Knocking&quot;&#xA;            },&#xA;            &quot;_status&quot;: {&#xA;                &quot;id&quot;: &quot;in_progress&quot;,&#xA;                &quot;text&quot;: &quot;In Progress&quot;&#xA;            },&#xA;            &quot;id&quot;: 1865&#xA;        },&#xA;        &quot;_id&quot;: 78541&#xA;    },&#xA;    &quot;error&quot;: null&#xA;}"
              TargetSettings="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-16&quot;?&gt;&lt;JsonParserSetting xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot;&gt;&lt;Mappings&gt;&lt;JsonParserMapping&gt;&lt;Path&gt;result.system_ctime&lt;/Path&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;Description /&gt;&lt;/JsonParserMapping&gt;&lt;JsonParserMapping&gt;&lt;Path&gt;result.system_modtime&lt;/Path&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;Description /&gt;&lt;/JsonParserMapping&gt;&lt;JsonParserMapping&gt;&lt;Path&gt;result.etag&lt;/Path&gt;&lt;Target&gt;User::CampaignMemberEtag&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;Description /&gt;&lt;/JsonParserMapping&gt;&lt;JsonParserMapping&gt;&lt;Path&gt;result.system_modified_user.id&lt;/Path&gt;&lt;Target&gt;User::LastActivityUserID&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;Description /&gt;&lt;/JsonParserMapping&gt;&lt;JsonParserMapping&gt;&lt;Path&gt;result.system_modified_user._name&lt;/Path&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;Description /&gt;&lt;/JsonParserMapping&gt;&lt;JsonParserMapping&gt;&lt;Path&gt;result.system_modified_user._first_name&lt;/Path&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;Description /&gt;&lt;/JsonParserMapping&gt;&lt;JsonParserMapping&gt;&lt;Path&gt;result.system_modified_user._last_name&lt;/Path&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;Description /&gt;&lt;/JsonParserMapping&gt;&lt;JsonParserMapping&gt;&lt;Path&gt;result.system_modified_user._email_address&lt;/Path&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;Description /&gt;&lt;/JsonParserMapping&gt;&lt;JsonParserMapping&gt;&lt;Path&gt;result.system_created_user.id&lt;/Path&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;Description /&gt;&lt;/JsonParserMapping&gt;&lt;JsonParserMapping&gt;&lt;Path&gt;result.system_created_user._name&lt;/Path&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;Description /&gt;&lt;/JsonParserMapping&gt;&lt;JsonParserMapping&gt;&lt;Path&gt;result.system_created_user._first_name&lt;/Path&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;Description /&gt;&lt;/JsonParserMapping&gt;&lt;JsonParserMapping&gt;&lt;Path&gt;result.system_created_user._last_name&lt;/Path&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;Description /&gt;&lt;/JsonParserMapping&gt;&lt;JsonParserMapping&gt;&lt;Path&gt;result.system_created_user._email_address&lt;/Path&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;Description /&gt;&lt;/JsonParserMapping&gt;&lt;JsonParserMapping&gt;&lt;Path&gt;result.service_record.id&lt;/Path&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;Description /&gt;&lt;/JsonParserMapping&gt;&lt;JsonParserMapping&gt;&lt;Path&gt;result.service_record.text&lt;/Path&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;Description /&gt;&lt;/JsonParserMapping&gt;&lt;JsonParserMapping&gt;&lt;Path&gt;result.service_record.stub.system_label&lt;/Path&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;Description /&gt;&lt;/JsonParserMapping&gt;&lt;JsonParserMapping&gt;&lt;Path&gt;result.service_record.stub.assignee.id&lt;/Path&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;Description /&gt;&lt;/JsonParserMapping&gt;&lt;JsonParserMapping&gt;&lt;Path&gt;result.service_record.stub.assignee.name&lt;/Path&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;Description /&gt;&lt;/JsonParserMapping&gt;&lt;JsonParserMapping&gt;&lt;Path&gt;result.service_record.stub.assignee.first_name&lt;/Path&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;Description /&gt;&lt;/JsonParserMapping&gt;&lt;JsonParserMapping&gt;&lt;Path&gt;result.service_record.stub.assignee.last_name&lt;/Path&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;Description /&gt;&lt;/JsonParserMapping&gt;&lt;JsonParserMapping&gt;&lt;Path&gt;result.service_record.stub.assignee.email_address&lt;/Path&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;Description /&gt;&lt;/JsonParserMapping&gt;&lt;JsonParserMapping&gt;&lt;Path&gt;result.service_record.stub.lead_status.id&lt;/Path&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;Description /&gt;&lt;/JsonParserMapping&gt;&lt;JsonParserMapping&gt;&lt;Path&gt;result.service_record.stub.lead_status.text&lt;/Path&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;Description /&gt;&lt;/JsonParserMapping&gt;&lt;JsonParserMapping&gt;&lt;Path&gt;result.service_record.stub.id&lt;/Path&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;Description /&gt;&lt;/JsonParserMapping&gt;&lt;JsonParserMapping&gt;&lt;Path&gt;result.status.id&lt;/Path&gt;&lt;Target&gt;User::CampaignMemberStatusID&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;Description /&gt;&lt;/JsonParserMapping&gt;&lt;JsonParserMapping&gt;&lt;Path&gt;result.status.text&lt;/Path&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;Description /&gt;&lt;/JsonParserMapping&gt;&lt;JsonParserMapping&gt;&lt;Path&gt;result.service_type.id&lt;/Path&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;Description /&gt;&lt;/JsonParserMapping&gt;&lt;JsonParserMapping&gt;&lt;Path&gt;result.service_type.text&lt;/Path&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;Description /&gt;&lt;/JsonParserMapping&gt;&lt;JsonParserMapping&gt;&lt;Path&gt;result.last_activity._system_ctime&lt;/Path&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;Description /&gt;&lt;/JsonParserMapping&gt;&lt;JsonParserMapping&gt;&lt;Path&gt;result.last_activity._parent_object_type&lt;/Path&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;Description /&gt;&lt;/JsonParserMapping&gt;&lt;JsonParserMapping&gt;&lt;Path&gt;result.last_activity._parent_object_id&lt;/Path&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;Description /&gt;&lt;/JsonParserMapping&gt;&lt;JsonParserMapping&gt;&lt;Path&gt;result.last_activity._etag&lt;/Path&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;Description /&gt;&lt;/JsonParserMapping&gt;&lt;JsonParserMapping&gt;&lt;Path&gt;result.last_activity._system_created_user.id&lt;/Path&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;Description /&gt;&lt;/JsonParserMapping&gt;&lt;JsonParserMapping&gt;&lt;Path&gt;result.last_activity._system_created_user._name&lt;/Path&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;Description /&gt;&lt;/JsonParserMapping&gt;&lt;JsonParserMapping&gt;&lt;Path&gt;result.last_activity._system_created_user._first_name&lt;/Path&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;Description /&gt;&lt;/JsonParserMapping&gt;&lt;JsonParserMapping&gt;&lt;Path&gt;result.last_activity._system_created_user._last_name&lt;/Path&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;Description /&gt;&lt;/JsonParserMapping&gt;&lt;JsonParserMapping&gt;&lt;Path&gt;result.last_activity._system_created_user._email_address&lt;/Path&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;Description /&gt;&lt;/JsonParserMapping&gt;&lt;JsonParserMapping&gt;&lt;Path&gt;result.last_activity._type.id&lt;/Path&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;Description /&gt;&lt;/JsonParserMapping&gt;&lt;JsonParserMapping&gt;&lt;Path&gt;result.last_activity._type.text&lt;/Path&gt;&lt;Target&gt;User::LastActivityText&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;Description /&gt;&lt;/JsonParserMapping&gt;&lt;JsonParserMapping&gt;&lt;Path&gt;result.last_activity.id&lt;/Path&gt;&lt;Target&gt;User::LastActivityID&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;Description /&gt;&lt;/JsonParserMapping&gt;&lt;JsonParserMapping&gt;&lt;Path&gt;result.campaign._name&lt;/Path&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;Description /&gt;&lt;/JsonParserMapping&gt;&lt;JsonParserMapping&gt;&lt;Path&gt;result.campaign._type.id&lt;/Path&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;Description /&gt;&lt;/JsonParserMapping&gt;&lt;JsonParserMapping&gt;&lt;Path&gt;result.campaign._type.text&lt;/Path&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;Description /&gt;&lt;/JsonParserMapping&gt;&lt;JsonParserMapping&gt;&lt;Path&gt;result.campaign._status.id&lt;/Path&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;Description /&gt;&lt;/JsonParserMapping&gt;&lt;JsonParserMapping&gt;&lt;Path&gt;result.campaign._status.text&lt;/Path&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;Description /&gt;&lt;/JsonParserMapping&gt;&lt;JsonParserMapping&gt;&lt;Path&gt;result.campaign.id&lt;/Path&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;Description /&gt;&lt;/JsonParserMapping&gt;&lt;JsonParserMapping&gt;&lt;Path&gt;result._id&lt;/Path&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;Description /&gt;&lt;/JsonParserMapping&gt;&lt;JsonParserMapping&gt;&lt;Path&gt;error.message&lt;/Path&gt;&lt;Target&gt;User::APIResponseErrorMsg&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;Description /&gt;&lt;/JsonParserMapping&gt;&lt;/Mappings&gt;&lt;Path /&gt;&lt;/JsonParserSetting&gt;"
              LogLevel="Normal"
              PrefixTimestamp="False" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Populate Campaign Member Status Activity"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{3732d7c6-ab45-4e8e-b371-225de4539c63}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Populate Campaign Member Status Activity"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="2">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{8AB72F9C-FCB9-4836-BC93-FC14F4226C1D}"
              SQLTask:SqlStatementSource="EXEC ROSIE_uspInsCampaignMemberStatusActivity ?,?,?,?,?,?,'PULL'" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@mlcmID"
                SQLTask:DtsVariableName="User::MLCMID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@campaignMemberStatusID"
                SQLTask:DtsVariableName="User::CampaignMemberStatusID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@LastActivityUserID"
                SQLTask:DtsVariableName="User::LastActivityUserID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@LastActivityID"
                SQLTask:DtsVariableName="User::LastActivityID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@LastActivityText"
                SQLTask:DtsVariableName="User::LastActivityText"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@campaignMemberEtag"
                SQLTask:DtsVariableName="User::CampaignMemberEtag"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Read Campaign Member 1"
          DTS:CreationName="ZappySys.RestApiTask"
          DTS:Description="Link Image"
          DTS:DTSID="{43449005-be4e-42ad-be13-7fc576d7508e}"
          DTS:ExecutableType="ZappySys.RestApiTask"
          DTS:FailPackageOnFailure="True"
          DTS:LocaleID="-1"
          DTS:ObjectName="Read Campaign Member 1"
          DTS:TaskContact="REST API Task; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:LoggingMode="2" />
          <DTS:ObjectData>
            <RestApiTask
              RequestAccessMode="UrlFromVariable"
              RequestUrlVariable="User::RexAPIWebURL"
              EnableStatusCheck="False"
              StatusCheckMaxWaitSeconds="0"
              StatusFieldFilterType="None"
              StatusFieldFilterExpr=""
              StatusCheckIterationWaitSeconds="0"
              StatusCheckForFailedValue="False"
              StatusSuccessValue=""
              StatusContinueValue=""
              StatusFailedValue=""
              IsMultiPartUpload="False"
              AddMultiPartPostamble="False"
              PreventAutoRedirect="False"
              RequestTimeoutMs="0"
              SecurityProtocol="Default"
              EnableCompressionSupport="True"
              AllowUnsecureSuite="False"
              IgnoreCertificateErrors="False"
              RequestUrl="{{User::RexAPIWebURL}}"
              RequestUrlConnection=""
              RequestMethod="POST"
              RequestContentType="Raw"
              OverrideConnectionUrl="False"
              RequestHeaders="&lt;request&gt;&lt;header&gt;&lt;name&gt;Accept&lt;/name&gt;&lt;value&gt;*/*&lt;/value&gt;&lt;/header&gt;&lt;header&gt;&lt;name&gt;Cache-Control&lt;/name&gt;&lt;value&gt;no-cache&lt;/value&gt;&lt;/header&gt;&lt;header&gt;&lt;name&gt;X-App-Identifier&lt;/name&gt;&lt;value&gt;client:spicerhaart:{{System::PackageName}}:{{System::TaskName}}&lt;/value&gt;&lt;/header&gt;&lt;/request&gt;"
              RequestData="{&#xA;&quot;method&quot;: &quot;CampaignMembers::read&quot;,&#xA;      &quot;args&quot;: {&#xA;        &quot;id&quot;: {{User::CampaignMemberID}}&#xA;&#xA;         &#xA;      },&#xA;      &#xA;&quot;strip_response_prefix&quot;: true,&#xA;&quot;token&quot;: &quot;{{User::RexToken}}&quot;&#xA;}"
              SaveResponse="True"
              SaveResponseStatusCode="True"
              ResponseAccessMode="Variable"
              SaveAsBinary="False"
              ResponseDataFilePath=""
              ResponseHeaderMappings="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-16&quot;?&gt;&lt;ArrayOfKeyValueMapping xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot;&gt;&lt;KeyValueMapping&gt;&lt;Key&gt;Access-Control-Allow-Headers&lt;/Key&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;/KeyValueMapping&gt;&lt;KeyValueMapping&gt;&lt;Key&gt;Access-Control-Allow-Methods&lt;/Key&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;/KeyValueMapping&gt;&lt;KeyValueMapping&gt;&lt;Key&gt;Access-Control-Allow-Origin&lt;/Key&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;/KeyValueMapping&gt;&lt;KeyValueMapping&gt;&lt;Key&gt;Access-Control-Max-Age&lt;/Key&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;/KeyValueMapping&gt;&lt;KeyValueMapping&gt;&lt;Key&gt;Content-Encoding&lt;/Key&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;/KeyValueMapping&gt;&lt;KeyValueMapping&gt;&lt;Key&gt;Vary&lt;/Key&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;/KeyValueMapping&gt;&lt;KeyValueMapping&gt;&lt;Key&gt;Connection&lt;/Key&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;/KeyValueMapping&gt;&lt;KeyValueMapping&gt;&lt;Key&gt;Content-Length&lt;/Key&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;/KeyValueMapping&gt;&lt;KeyValueMapping&gt;&lt;Key&gt;Content-Type&lt;/Key&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;/KeyValueMapping&gt;&lt;KeyValueMapping&gt;&lt;Key&gt;Date&lt;/Key&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;/KeyValueMapping&gt;&lt;KeyValueMapping&gt;&lt;Key&gt;Server&lt;/Key&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;/KeyValueMapping&gt;&lt;/ArrayOfKeyValueMapping&gt;"
              ResponseCookieMappings="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-16&quot;?&gt;&lt;ArrayOfKeyValueMapping xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; /&gt;"
              CookieContainerVariable=""
              ConvertXmlToJson="False"
              ResponseDataVariable="User::CMResponse"
              ResponseStatusCodeVariable="User::CMResponseCode"
              ResponseContentType="Json"
              ResponseContentFilter=""
              ResponseCharset=""
              ValidateResponse="False"
              ValidationRules="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-16&quot;?&gt;&lt;ResponseValidationSetting xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot;&gt;&lt;MatchAny&gt;false&lt;/MatchAny&gt;&lt;Rules&gt;&lt;ResponseValidationRule xsi:type=&quot;StatusCodeValidationRule&quot;&gt;&lt;Enabled&gt;false&lt;/Enabled&gt;&lt;Operator&gt;Eq&lt;/Operator&gt;&lt;StatusCode&gt;200&lt;/StatusCode&gt;&lt;/ResponseValidationRule&gt;&lt;ResponseValidationRule xsi:type=&quot;ContentValidationRule&quot;&gt;&lt;Enabled&gt;false&lt;/Enabled&gt;&lt;Operator&gt;Eq&lt;/Operator&gt;&lt;Value /&gt;&lt;/ResponseValidationRule&gt;&lt;ResponseValidationRule xsi:type=&quot;HeaderValidationRule&quot;&gt;&lt;Enabled&gt;false&lt;/Enabled&gt;&lt;Operator&gt;Eq&lt;/Operator&gt;&lt;KeyName /&gt;&lt;Value /&gt;&lt;DataType&gt;String&lt;/DataType&gt;&lt;/ResponseValidationRule&gt;&lt;/Rules&gt;&lt;/ResponseValidationSetting&gt;"
              ConsumeResponseOnError="False"
              ContineOnAnyError="False"
              ContineOnErrorForMessage="False"
              ContineOnErrorForStatusCode="False"
              ErrorStatusCodeToMatch="404"
              MatchForEqual="True"
              ErrorSubstringToMatch=""
              ContineOn404Error="False"
              SaveErrorFlagToVariable="False"
              ErrorFlagVariableName=""
              LogLevel="Normal"
              PrefixTimestamp="False" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{CE7A8B4C-B513-46A5-AAE7-2F97655A07F2}"
          DTS:From="Package\Foreach Loop Container\Read Campaign Member 1"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Foreach Loop Container\Parse and Check For Error" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 3]"
          DTS:CreationName=""
          DTS:DTSID="{353B02EC-180A-4A8F-8EC7-6B4A9D731940}"
          DTS:EvalOp="1"
          DTS:Expression="@[User::APIResponseErrorMsg]==&quot;&quot;"
          DTS:From="Package\Foreach Loop Container\Parse and Check For Error"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 3"
          DTS:To="Package\Foreach Loop Container\Populate Campaign Member Status Activity" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 7]"
          DTS:CreationName=""
          DTS:DTSID="{afcd8912-b507-44cc-a0c7-d68575563ffd}"
          DTS:EvalOp="1"
          DTS:Expression="@[User::APIResponseErrorMsg]!=&quot;&quot;"
          DTS:From="Package\Foreach Loop Container\Parse and Check For Error"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 7"
          DTS:To="Package\Foreach Loop Container\Insert error log into database" />
      </DTS:PrecedenceConstraints>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{5549422F-E43C-4304-83A5-39C040CA5FB8}"
          DTS:ObjectName="{5549422F-E43C-4304-83A5-39C040CA5FB8}"
          DTS:ValueIndex="0"
          DTS:VariableName="User::CampaignMemberID" />
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{B101FA38-90C8-495F-AE4C-96FCA67D7D74}"
          DTS:ObjectName="{B101FA38-90C8-495F-AE4C-96FCA67D7D74}"
          DTS:ValueIndex="1"
          DTS:VariableName="User::MLCMID" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Get auth key"
      DTS:CreationName="ZappySys.RestApiTask"
      DTS:Description="ZS REST API Task"
      DTS:DTSID="{2E313233-9D71-4845-8E5F-1F1F71012186}"
      DTS:ExecutableType="ZappySys.RestApiTask"
      DTS:FailPackageOnFailure="True"
      DTS:LocaleID="-1"
      DTS:ObjectName="Get auth key"
      DTS:TaskContact="REST API Task; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <RestApiTask
          RequestAccessMode="UrlFromVariable"
          RequestUrlVariable="User::RexAPIWebURL"
          EnableStatusCheck="False"
          StatusCheckMaxWaitSeconds="0"
          StatusFieldFilterType="None"
          StatusFieldFilterExpr=""
          StatusCheckIterationWaitSeconds="0"
          StatusCheckForFailedValue="False"
          StatusSuccessValue=""
          StatusContinueValue=""
          StatusFailedValue=""
          IsMultiPartUpload="False"
          AddMultiPartPostamble="False"
          PreventAutoRedirect="False"
          RequestTimeoutMs="0"
          SecurityProtocol="Default"
          EnableCompressionSupport="True"
          AllowUnsecureSuite="False"
          IgnoreCertificateErrors="False"
          RequestUrl="www.spicerhaart.co.uk"
          RequestUrlConnection=""
          RequestMethod="POST"
          RequestContentType="ApplicationJson"
          OverrideConnectionUrl="False"
          RequestHeaders="&lt;request&gt;&lt;header&gt;&lt;name&gt;Accept&lt;/name&gt;&lt;value&gt;*/*&lt;/value&gt;&lt;/header&gt;&lt;header&gt;&lt;name&gt;Cache-Control&lt;/name&gt;&lt;value&gt;no-cache&lt;/value&gt;&lt;/header&gt;&lt;/request&gt;"
          RequestData="{&#xA;&#x9;&quot;method&quot;:&quot;Authentication::login&quot;,&#xA;&#x9;&quot;args&quot;:&#xA;&#x9;{&#xA;&#x9;&#x9;&quot;email&quot;:&quot;{{User::PackageUser}}&quot;,&#xA;&#x9;&#x9;&quot;password&quot;:&quot;{{User::PackageUserPassword}}&quot;,&#xA;&#x9;&#x9;&quot;application&quot;:&quot;rex&quot;,&#xA;&#x9;&#x9;&quot;account_id&quot;:{{$Package::AccountID}}&#xA;&#x9;}&#xA;}"
          SaveResponse="True"
          SaveResponseStatusCode="True"
          ResponseAccessMode="Variable"
          SaveAsBinary="False"
          ResponseDataFilePath=""
          ResponseHeaderMappings="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-16&quot;?&gt;&lt;ArrayOfKeyValueMapping xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot;&gt;&lt;KeyValueMapping&gt;&lt;Key&gt;Transfer-Encoding&lt;/Key&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;/KeyValueMapping&gt;&lt;KeyValueMapping&gt;&lt;Key&gt;Connection&lt;/Key&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;/KeyValueMapping&gt;&lt;KeyValueMapping&gt;&lt;Key&gt;Access-Control-Allow-Origin&lt;/Key&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;/KeyValueMapping&gt;&lt;KeyValueMapping&gt;&lt;Key&gt;Access-Control-Allow-Headers&lt;/Key&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;/KeyValueMapping&gt;&lt;KeyValueMapping&gt;&lt;Key&gt;Access-Control-Allow-Methods&lt;/Key&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;/KeyValueMapping&gt;&lt;KeyValueMapping&gt;&lt;Key&gt;Access-Control-Max-Age&lt;/Key&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;/KeyValueMapping&gt;&lt;KeyValueMapping&gt;&lt;Key&gt;Vary&lt;/Key&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;/KeyValueMapping&gt;&lt;KeyValueMapping&gt;&lt;Key&gt;Content-Encoding&lt;/Key&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;/KeyValueMapping&gt;&lt;KeyValueMapping&gt;&lt;Key&gt;Content-Type&lt;/Key&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;/KeyValueMapping&gt;&lt;KeyValueMapping&gt;&lt;Key&gt;Date&lt;/Key&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;/KeyValueMapping&gt;&lt;KeyValueMapping&gt;&lt;Key&gt;Server&lt;/Key&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;/KeyValueMapping&gt;&lt;/ArrayOfKeyValueMapping&gt;"
          ResponseCookieMappings="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-16&quot;?&gt;&lt;ArrayOfKeyValueMapping xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; /&gt;"
          CookieContainerVariable=""
          ConvertXmlToJson="False"
          ResponseDataVariable="User::RexToken"
          ResponseStatusCodeVariable="User::ResponseAuthCode"
          ResponseContentType="Json"
          ResponseContentFilter="$.result"
          ResponseCharset=""
          ValidateResponse="False"
          ValidationRules="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-16&quot;?&gt;&lt;ResponseValidationSetting xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot;&gt;&lt;MatchAny&gt;false&lt;/MatchAny&gt;&lt;Rules&gt;&lt;ResponseValidationRule xsi:type=&quot;StatusCodeValidationRule&quot;&gt;&lt;Enabled&gt;false&lt;/Enabled&gt;&lt;Operator&gt;Eq&lt;/Operator&gt;&lt;StatusCode&gt;200&lt;/StatusCode&gt;&lt;/ResponseValidationRule&gt;&lt;ResponseValidationRule xsi:type=&quot;ContentValidationRule&quot;&gt;&lt;Enabled&gt;false&lt;/Enabled&gt;&lt;Operator&gt;Eq&lt;/Operator&gt;&lt;Value /&gt;&lt;/ResponseValidationRule&gt;&lt;ResponseValidationRule xsi:type=&quot;HeaderValidationRule&quot;&gt;&lt;Enabled&gt;false&lt;/Enabled&gt;&lt;Operator&gt;Eq&lt;/Operator&gt;&lt;KeyName /&gt;&lt;Value /&gt;&lt;DataType&gt;String&lt;/DataType&gt;&lt;/ResponseValidationRule&gt;&lt;/Rules&gt;&lt;/ResponseValidationSetting&gt;"
          ConsumeResponseOnError="False"
          ContineOnAnyError="False"
          ContineOnErrorForMessage="False"
          ContineOnErrorForStatusCode="False"
          ErrorStatusCodeToMatch="404"
          MatchForEqual="True"
          ErrorSubstringToMatch=""
          ContineOn404Error="False"
          SaveErrorFlagToVariable="False"
          ErrorFlagVariableName=""
          LogLevel="Normal"
          PrefixTimestamp="False" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Insert error log into database"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{04F8C93B-4B47-4B13-A7B9-1A545C0ED780}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Insert error log into database"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{0533A634-9E92-4D46-8F14-E1BCF2F6C3FE}"
          SQLTask:SqlStatementSource="INSERT INTO SSISErrorLog&#xA;(PackageName, StartTime, ErrorCode, ErrorDescription, AccountID)&#xA;VALUES&#xA;(?, ?, 0, 'Error retrieving access token: Response Auth: ' + CAST(? AS VARCHAR(500)) + 'Response Code: ' + CAST(? AS VARCHAR(500)), ?)" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="@PackageName"
            SQLTask:DtsVariableName="System::PackageName"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="129"
            SQLTask:ParameterSize="-1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="@StartTime"
            SQLTask:DtsVariableName="System::StartTime"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="7"
            SQLTask:ParameterSize="-1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="@ErrorDescription"
            SQLTask:DtsVariableName="User::ResponseAuth"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="129"
            SQLTask:ParameterSize="-1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="@ResponseAuthCode"
            SQLTask:DtsVariableName="User::ResponseAuthCode"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="3"
            SQLTask:ParameterSize="-1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="@AccountID"
            SQLTask:DtsVariableName="$Package::AccountID"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="3"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Insert success log into database"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{B2FBBB8C-BAAA-48D8-ADBA-D194924E4FA4}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Insert success log into database"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="1">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{0533A634-9E92-4D46-8F14-E1BCF2F6C3FE}"
          SQLTask:SqlStatementSource="IF ISNULL(?, 0) &lt;&gt; 0 OR ISNULL(?, 0) &lt;&gt; 0 OR ISNULL(?, 0) &lt;&gt; 0&#xA;BEGIN&#xA;    INSERT INTO SSISSuccessLog&#xA;    (PackageName, StartTime, Ignored, Upserted, Failed, AccountID, EndTime)&#xA;    VALUES&#xA;    (?, ?, ?, ?, ?, ?, GETDATE())&#xA;END" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="@Ignored"
            SQLTask:DtsVariableName="User::PackageIgnoredCount"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="3"
            SQLTask:ParameterSize="-1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="@Upserted"
            SQLTask:DtsVariableName="User::PackageUpsertCount"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="3"
            SQLTask:ParameterSize="-1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="@Failed"
            SQLTask:DtsVariableName="User::PackageFailedCount"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="3"
            SQLTask:ParameterSize="-1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="@PackageName"
            SQLTask:DtsVariableName="System::PackageName"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="129"
            SQLTask:ParameterSize="-1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="@StartTime"
            SQLTask:DtsVariableName="System::StartTime"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="7"
            SQLTask:ParameterSize="-1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="@Ignored"
            SQLTask:DtsVariableName="User::PackageIgnoredCount"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="3"
            SQLTask:ParameterSize="-1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="@Upserted"
            SQLTask:DtsVariableName="User::PackageUpsertCount"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="3"
            SQLTask:ParameterSize="-1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="@Failed"
            SQLTask:DtsVariableName="User::PackageFailedCount"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="3"
            SQLTask:ParameterSize="-1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="@AccountID"
            SQLTask:DtsVariableName="$Package::AccountID"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="3"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\No match found, need to allocate to campaign"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:Description="Foreach Loop Container"
      DTS:DTSID="{2a89aaa2-043d-424b-a1f3-b433fb36b58c}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="-1"
      DTS:ObjectName="No match found, need to allocate to campaign">
      <DTS:ForEachEnumerator
        DTS:CreationName="Microsoft.ForEachADOEnumerator"
        DTS:DTSID="{c87e9684-44ec-40ca-9f0b-60c7d1369196}"
        DTS:ObjectName="{644786AE-E79B-47B5-A050-8F37633199BD}">
        <DTS:ObjectData>
          <FEEADO
            EnumType="EnumerateRowsInFirstTable"
            VarName="User::AllocationList" />
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\No match found, need to allocate to campaign\Allocate Market Lead To Campaign"
          DTS:CreationName="Microsoft.ExecutePackageTask"
          DTS:Description="Execute Package Task"
          DTS:Disabled="True"
          DTS:DTSID="{415e1891-2cfb-4604-b93e-b105dafe4b91}"
          DTS:ExecutableType="Microsoft.ExecutePackageTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Allocate Market Lead To Campaign"
          DTS:TaskContact="Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <ExecutePackageTask>
              <UseProjectReference>True</UseProjectReference>
              <PackageName>AssignMarketLeadToCampaignPush.dtsx</PackageName>
              <ParameterAssignment>
                <ParameterName>RexAccountID</ParameterName>
                <BindedVariableOrParameterName>$Package::AccountID</BindedVariableOrParameterName>
              </ParameterAssignment>
              <ParameterAssignment>
                <ParameterName>CampaignID</ParameterName>
                <BindedVariableOrParameterName>User::intCampaignID</BindedVariableOrParameterName>
              </ParameterAssignment>
              <ParameterAssignment>
                <ParameterName>CampaignStatusID</ParameterName>
                <BindedVariableOrParameterName>User::CampaignMemberStatusID</BindedVariableOrParameterName>
              </ParameterAssignment>
              <ParameterAssignment>
                <ParameterName>MarketLeadID</ParameterName>
                <BindedVariableOrParameterName>User::MarketLeadID</BindedVariableOrParameterName>
              </ParameterAssignment>
              <ParameterAssignment>
                <ParameterName>RexToken</ParameterName>
                <BindedVariableOrParameterName>User::RexToken</BindedVariableOrParameterName>
              </ParameterAssignment>
            </ExecutePackageTask>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\No match found, need to allocate to campaign\Insert error log into database"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{dcfc69e0-5b26-43f3-a3cc-702a69f9f404}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Insert error log into database"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{0533A634-9E92-4D46-8F14-E1BCF2F6C3FE}"
              SQLTask:SqlStatementSource="INSERT INTO SSISErrorLog&#xA;(PackageName, StartTime, ErrorCode, ErrorDescription, AccountID)&#xA;VALUES&#xA;(?, ?, ?, ?, ?)" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@PackageName"
                SQLTask:DtsVariableName="System::PackageName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@StartTime"
                SQLTask:DtsVariableName="System::StartTime"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="7"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@ErrorCode"
                SQLTask:DtsVariableName="User::CMResponseCode"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@ErrorDescription"
                SQLTask:DtsVariableName="User::APIResponseErrorMsg"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@AccountID"
                SQLTask:DtsVariableName="$Package::AccountID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\No match found, need to allocate to campaign\Parse and Check For Error"
          DTS:CreationName="ZappySys.JsonParserTask"
          DTS:Description="ZS JSON Parser Task"
          DTS:DTSID="{039ed624-9ca0-4e96-929f-8c6ab11da718}"
          DTS:ExecutableType="ZappySys.JsonParserTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Parse and Check For Error"
          DTS:TaskContact="JSON Parser Task; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:LoggingMode="2" />
          <DTS:ObjectData>
            <JsonParserTask
              SourceAccessMode="Variable"
              SourceVariable="User::CMResponse"
              SourceConnection=""
              SourceDirectValue="{&#xA;    &quot;result&quot;: {&#xA;        &quot;system_ctime&quot;: 1591787954,&#xA;        &quot;system_modtime&quot;: 1591862215,&#xA;        &quot;etag&quot;: &quot;78541-1591862215&quot;,&#xA;        &quot;system_modified_user&quot;: {&#xA;            &quot;id&quot;: &quot;18452&quot;,&#xA;            &quot;_name&quot;: &quot;Saulius Samoska&quot;,&#xA;            &quot;_first_name&quot;: &quot;Saulius&quot;,&#xA;            &quot;_last_name&quot;: &quot;Samoska&quot;,&#xA;            &quot;_email_address&quot;: &quot;saulius.samoska@spicerhaart.co.uk&quot;&#xA;        },&#xA;        &quot;system_created_user&quot;: {&#xA;            &quot;id&quot;: &quot;19443&quot;,&#xA;            &quot;_name&quot;: &quot;Rosie API&quot;,&#xA;            &quot;_first_name&quot;: &quot;Rosie&quot;,&#xA;            &quot;_last_name&quot;: &quot;API&quot;,&#xA;            &quot;_email_address&quot;: &quot;rosie@spicerhaart.co.uk&quot;&#xA;        },&#xA;        &quot;service_record&quot;: {&#xA;            &quot;id&quot;: 57780,&#xA;            &quot;text&quot;: &quot;20 Alan Way, Colchester CO3 4LG&quot;,&#xA;            &quot;stub&quot;: {&#xA;                &quot;system_label&quot;: &quot;20 Alan Way, Colchester CO3 4LG&quot;,&#xA;                &quot;assignee&quot;: {&#xA;                    &quot;id&quot;: &quot;18348&quot;,&#xA;                    &quot;name&quot;: &quot;Tom Charlesworth&quot;,&#xA;                    &quot;first_name&quot;: &quot;Tom&quot;,&#xA;                    &quot;last_name&quot;: &quot;Charlesworth&quot;,&#xA;                    &quot;email_address&quot;: &quot;Tom.Charlesworth@haart.co.uk&quot;&#xA;                },&#xA;                &quot;lead_status&quot;: {&#xA;                    &quot;id&quot;: &quot;26742&quot;,&#xA;                    &quot;text&quot;: &quot;DO NOT CALL&quot;&#xA;                },&#xA;                &quot;id&quot;: 57780&#xA;            }&#xA;        },&#xA;        &quot;status&quot;: {&#xA;            &quot;id&quot;: 28895,&#xA;            &quot;text&quot;: &quot;Door Number Required&quot;&#xA;        },&#xA;        &quot;service_type&quot;: {&#xA;            &quot;id&quot;: &quot;MarketLeads&quot;,&#xA;            &quot;text&quot;: &quot;MarketLeads&quot;&#xA;        },&#xA;        &quot;last_activity&quot;: {&#xA;            &quot;_system_ctime&quot;: 1591864121,&#xA;            &quot;_parent_object_type&quot;: &quot;campaign_member&quot;,&#xA;            &quot;_parent_object_id&quot;: 78541,&#xA;            &quot;_etag&quot;: &quot;275988-1591864121&quot;,&#xA;            &quot;_system_created_user&quot;: {&#xA;                &quot;id&quot;: &quot;18452&quot;,&#xA;                &quot;_name&quot;: &quot;Saulius Samoska&quot;,&#xA;                &quot;_first_name&quot;: &quot;Saulius&quot;,&#xA;                &quot;_last_name&quot;: &quot;Samoska&quot;,&#xA;                &quot;_email_address&quot;: &quot;saulius.samoska@spicerhaart.co.uk&quot;&#xA;            },&#xA;            &quot;_type&quot;: {&#xA;                &quot;id&quot;: &quot;conversation&quot;,&#xA;                &quot;text&quot;: &quot;Phone - Conversation&quot;&#xA;            },&#xA;            &quot;id&quot;: 275988&#xA;        },&#xA;        &quot;campaign&quot;: {&#xA;            &quot;_name&quot;: &quot;Fiona Wilson (1906356) Knock Knock&quot;,&#xA;            &quot;_type&quot;: {&#xA;                &quot;id&quot;: &quot;door_knocking&quot;,&#xA;                &quot;text&quot;: &quot;Door Knocking&quot;&#xA;            },&#xA;            &quot;_status&quot;: {&#xA;                &quot;id&quot;: &quot;in_progress&quot;,&#xA;                &quot;text&quot;: &quot;In Progress&quot;&#xA;            },&#xA;            &quot;id&quot;: 1865&#xA;        },&#xA;        &quot;_id&quot;: 78541&#xA;    },&#xA;    &quot;error&quot;: null&#xA;}"
              TargetSettings="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-16&quot;?&gt;&lt;JsonParserSetting xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot;&gt;&lt;Mappings&gt;&lt;JsonParserMapping&gt;&lt;Path&gt;result.system_ctime&lt;/Path&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;Description /&gt;&lt;/JsonParserMapping&gt;&lt;JsonParserMapping&gt;&lt;Path&gt;result.system_modtime&lt;/Path&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;Description /&gt;&lt;/JsonParserMapping&gt;&lt;JsonParserMapping&gt;&lt;Path&gt;result.etag&lt;/Path&gt;&lt;Target&gt;User::CampaignMemberEtag&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;Description /&gt;&lt;/JsonParserMapping&gt;&lt;JsonParserMapping&gt;&lt;Path&gt;result.system_modified_user.id&lt;/Path&gt;&lt;Target&gt;User::LastActivityUserID&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;Description /&gt;&lt;/JsonParserMapping&gt;&lt;JsonParserMapping&gt;&lt;Path&gt;result.system_modified_user._name&lt;/Path&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;Description /&gt;&lt;/JsonParserMapping&gt;&lt;JsonParserMapping&gt;&lt;Path&gt;result.system_modified_user._first_name&lt;/Path&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;Description /&gt;&lt;/JsonParserMapping&gt;&lt;JsonParserMapping&gt;&lt;Path&gt;result.system_modified_user._last_name&lt;/Path&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;Description /&gt;&lt;/JsonParserMapping&gt;&lt;JsonParserMapping&gt;&lt;Path&gt;result.system_modified_user._email_address&lt;/Path&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;Description /&gt;&lt;/JsonParserMapping&gt;&lt;JsonParserMapping&gt;&lt;Path&gt;result.system_created_user.id&lt;/Path&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;Description /&gt;&lt;/JsonParserMapping&gt;&lt;JsonParserMapping&gt;&lt;Path&gt;result.system_created_user._name&lt;/Path&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;Description /&gt;&lt;/JsonParserMapping&gt;&lt;JsonParserMapping&gt;&lt;Path&gt;result.system_created_user._first_name&lt;/Path&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;Description /&gt;&lt;/JsonParserMapping&gt;&lt;JsonParserMapping&gt;&lt;Path&gt;result.system_created_user._last_name&lt;/Path&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;Description /&gt;&lt;/JsonParserMapping&gt;&lt;JsonParserMapping&gt;&lt;Path&gt;result.system_created_user._email_address&lt;/Path&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;Description /&gt;&lt;/JsonParserMapping&gt;&lt;JsonParserMapping&gt;&lt;Path&gt;result.service_record.id&lt;/Path&gt;&lt;Target&gt;User::MarketLeadID&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;Description /&gt;&lt;/JsonParserMapping&gt;&lt;JsonParserMapping&gt;&lt;Path&gt;result.service_record.text&lt;/Path&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;Description /&gt;&lt;/JsonParserMapping&gt;&lt;JsonParserMapping&gt;&lt;Path&gt;result.service_record.stub.system_label&lt;/Path&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;Description /&gt;&lt;/JsonParserMapping&gt;&lt;JsonParserMapping&gt;&lt;Path&gt;result.service_record.stub.assignee.id&lt;/Path&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;Description /&gt;&lt;/JsonParserMapping&gt;&lt;JsonParserMapping&gt;&lt;Path&gt;result.service_record.stub.assignee.name&lt;/Path&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;Description /&gt;&lt;/JsonParserMapping&gt;&lt;JsonParserMapping&gt;&lt;Path&gt;result.service_record.stub.assignee.first_name&lt;/Path&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;Description /&gt;&lt;/JsonParserMapping&gt;&lt;JsonParserMapping&gt;&lt;Path&gt;result.service_record.stub.assignee.last_name&lt;/Path&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;Description /&gt;&lt;/JsonParserMapping&gt;&lt;JsonParserMapping&gt;&lt;Path&gt;result.service_record.stub.assignee.email_address&lt;/Path&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;Description /&gt;&lt;/JsonParserMapping&gt;&lt;JsonParserMapping&gt;&lt;Path&gt;result.service_record.stub.lead_status.id&lt;/Path&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;Description /&gt;&lt;/JsonParserMapping&gt;&lt;JsonParserMapping&gt;&lt;Path&gt;result.service_record.stub.lead_status.text&lt;/Path&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;Description /&gt;&lt;/JsonParserMapping&gt;&lt;JsonParserMapping&gt;&lt;Path&gt;result.service_record.stub.id&lt;/Path&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;Description /&gt;&lt;/JsonParserMapping&gt;&lt;JsonParserMapping&gt;&lt;Path&gt;result.status.id&lt;/Path&gt;&lt;Target&gt;User::CampaignMemberStatusID&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;Description /&gt;&lt;/JsonParserMapping&gt;&lt;JsonParserMapping&gt;&lt;Path&gt;result.status.text&lt;/Path&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;Description /&gt;&lt;/JsonParserMapping&gt;&lt;JsonParserMapping&gt;&lt;Path&gt;result.service_type.id&lt;/Path&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;Description /&gt;&lt;/JsonParserMapping&gt;&lt;JsonParserMapping&gt;&lt;Path&gt;result.service_type.text&lt;/Path&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;Description /&gt;&lt;/JsonParserMapping&gt;&lt;JsonParserMapping&gt;&lt;Path&gt;result.last_activity._system_ctime&lt;/Path&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;Description /&gt;&lt;/JsonParserMapping&gt;&lt;JsonParserMapping&gt;&lt;Path&gt;result.last_activity._parent_object_type&lt;/Path&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;Description /&gt;&lt;/JsonParserMapping&gt;&lt;JsonParserMapping&gt;&lt;Path&gt;result.last_activity._parent_object_id&lt;/Path&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;Description /&gt;&lt;/JsonParserMapping&gt;&lt;JsonParserMapping&gt;&lt;Path&gt;result.last_activity._etag&lt;/Path&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;Description /&gt;&lt;/JsonParserMapping&gt;&lt;JsonParserMapping&gt;&lt;Path&gt;result.last_activity._system_created_user.id&lt;/Path&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;Description /&gt;&lt;/JsonParserMapping&gt;&lt;JsonParserMapping&gt;&lt;Path&gt;result.last_activity._system_created_user._name&lt;/Path&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;Description /&gt;&lt;/JsonParserMapping&gt;&lt;JsonParserMapping&gt;&lt;Path&gt;result.last_activity._system_created_user._first_name&lt;/Path&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;Description /&gt;&lt;/JsonParserMapping&gt;&lt;JsonParserMapping&gt;&lt;Path&gt;result.last_activity._system_created_user._last_name&lt;/Path&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;Description /&gt;&lt;/JsonParserMapping&gt;&lt;JsonParserMapping&gt;&lt;Path&gt;result.last_activity._system_created_user._email_address&lt;/Path&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;Description /&gt;&lt;/JsonParserMapping&gt;&lt;JsonParserMapping&gt;&lt;Path&gt;result.last_activity._type.id&lt;/Path&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;Description /&gt;&lt;/JsonParserMapping&gt;&lt;JsonParserMapping&gt;&lt;Path&gt;result.last_activity._type.text&lt;/Path&gt;&lt;Target&gt;User::LastActivityText&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;Description /&gt;&lt;/JsonParserMapping&gt;&lt;JsonParserMapping&gt;&lt;Path&gt;result.last_activity.id&lt;/Path&gt;&lt;Target&gt;User::LastActivityID&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;Description /&gt;&lt;/JsonParserMapping&gt;&lt;JsonParserMapping&gt;&lt;Path&gt;result.campaign._name&lt;/Path&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;Description /&gt;&lt;/JsonParserMapping&gt;&lt;JsonParserMapping&gt;&lt;Path&gt;result.campaign._type.id&lt;/Path&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;Description /&gt;&lt;/JsonParserMapping&gt;&lt;JsonParserMapping&gt;&lt;Path&gt;result.campaign._type.text&lt;/Path&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;Description /&gt;&lt;/JsonParserMapping&gt;&lt;JsonParserMapping&gt;&lt;Path&gt;result.campaign._status.id&lt;/Path&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;Description /&gt;&lt;/JsonParserMapping&gt;&lt;JsonParserMapping&gt;&lt;Path&gt;result.campaign._status.text&lt;/Path&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;Description /&gt;&lt;/JsonParserMapping&gt;&lt;JsonParserMapping&gt;&lt;Path&gt;result.campaign.id&lt;/Path&gt;&lt;Target&gt;User::CampaignID&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;Description /&gt;&lt;/JsonParserMapping&gt;&lt;JsonParserMapping&gt;&lt;Path&gt;result._id&lt;/Path&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;Description /&gt;&lt;/JsonParserMapping&gt;&lt;JsonParserMapping&gt;&lt;Path&gt;error.message&lt;/Path&gt;&lt;Target&gt;User::APIResponseErrorMsg&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;Description /&gt;&lt;/JsonParserMapping&gt;&lt;/Mappings&gt;&lt;Path /&gt;&lt;/JsonParserSetting&gt;"
              LogLevel="Normal"
              PrefixTimestamp="False" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\No match found, need to allocate to campaign\Populate Campaign Member rid and etag"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{217d07a0-d6e1-45b6-8170-aef24a83c4a8}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Populate Campaign Member rid and etag"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="2">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{8AB72F9C-FCB9-4836-BC93-FC14F4226C1D}"
              SQLTask:SqlStatementSource="EXEC [ROSIE_uspInsCampaignMemberMarketLead] ?,?,?,? ,?"
              SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ResultBinding
                SQLTask:ResultName="mlcmID"
                SQLTask:DtsVariableName="User::MLCMID" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@r_account_id"
                SQLTask:DtsVariableName="$Package::AccountID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@marketLeadID"
                SQLTask:DtsVariableName="User::MarketLeadID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@campaignMemberID"
                SQLTask:DtsVariableName="User::CampaignMemberID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@campaignMemberEtag"
                SQLTask:DtsVariableName="User::CampaignMemberEtag"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@campaignID"
                SQLTask:DtsVariableName="User::intCampaignID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\No match found, need to allocate to campaign\Populate Campaign Member Status Activity"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{62d017aa-8a28-4a49-8b56-2b504e1fcb1a}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Populate Campaign Member Status Activity"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="2">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{8AB72F9C-FCB9-4836-BC93-FC14F4226C1D}"
              SQLTask:SqlStatementSource="EXEC ROSIE_uspInsCampaignMemberStatusActivity ?,?, 'SYSTEM', null, null,null,'PULL'" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@mlcmID"
                SQLTask:DtsVariableName="User::MLCMID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@campaignMemberStatusID"
                SQLTask:DtsVariableName="User::CampaignMemberStatusID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\No match found, need to allocate to campaign\Read Campaign Member 2"
          DTS:CreationName="ZappySys.RestApiTask"
          DTS:Description="Link Image"
          DTS:DTSID="{62a77391-34e2-44cd-805d-69ed5963686d}"
          DTS:ExecutableType="ZappySys.RestApiTask"
          DTS:FailPackageOnFailure="True"
          DTS:LocaleID="-1"
          DTS:ObjectName="Read Campaign Member 2"
          DTS:TaskContact="REST API Task; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:LoggingMode="2" />
          <DTS:ObjectData>
            <RestApiTask
              RequestAccessMode="UrlFromVariable"
              RequestUrlVariable="User::RexAPIWebURL"
              EnableStatusCheck="False"
              StatusCheckMaxWaitSeconds="0"
              StatusFieldFilterType="None"
              StatusFieldFilterExpr=""
              StatusCheckIterationWaitSeconds="0"
              StatusCheckForFailedValue="False"
              StatusSuccessValue=""
              StatusContinueValue=""
              StatusFailedValue=""
              IsMultiPartUpload="False"
              AddMultiPartPostamble="False"
              PreventAutoRedirect="False"
              RequestTimeoutMs="0"
              SecurityProtocol="Default"
              EnableCompressionSupport="True"
              AllowUnsecureSuite="False"
              IgnoreCertificateErrors="False"
              RequestUrl="{{User::RexAPIWebURL}}"
              RequestUrlConnection=""
              RequestMethod="POST"
              RequestContentType="Raw"
              OverrideConnectionUrl="False"
              RequestHeaders="&lt;request&gt;&lt;header&gt;&lt;name&gt;Accept&lt;/name&gt;&lt;value&gt;*/*&lt;/value&gt;&lt;/header&gt;&lt;header&gt;&lt;name&gt;Cache-Control&lt;/name&gt;&lt;value&gt;no-cache&lt;/value&gt;&lt;/header&gt;&lt;header&gt;&lt;name&gt;X-App-Identifier&lt;/name&gt;&lt;value&gt;client:spicerhaart:{{System::PackageName}}:{{System::TaskName}}&lt;/value&gt;&lt;/header&gt;&lt;/request&gt;"
              RequestData="{&#xA;&quot;method&quot;: &quot;CampaignMembers::read&quot;,&#xA;      &quot;args&quot;: {&#xA;        &quot;id&quot;: {{User::CampaignMemberID}}&#xA;&#xA;         &#xA;      },&#xA;      &#xA;&quot;strip_response_prefix&quot;: true,&#xA;&quot;token&quot;: &quot;{{User::RexToken}}&quot;&#xA;}"
              SaveResponse="True"
              SaveResponseStatusCode="True"
              ResponseAccessMode="Variable"
              SaveAsBinary="False"
              ResponseDataFilePath=""
              ResponseHeaderMappings="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-16&quot;?&gt;&lt;ArrayOfKeyValueMapping xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot;&gt;&lt;KeyValueMapping&gt;&lt;Key&gt;Access-Control-Allow-Headers&lt;/Key&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;/KeyValueMapping&gt;&lt;KeyValueMapping&gt;&lt;Key&gt;Access-Control-Allow-Methods&lt;/Key&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;/KeyValueMapping&gt;&lt;KeyValueMapping&gt;&lt;Key&gt;Access-Control-Allow-Origin&lt;/Key&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;/KeyValueMapping&gt;&lt;KeyValueMapping&gt;&lt;Key&gt;Access-Control-Max-Age&lt;/Key&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;/KeyValueMapping&gt;&lt;KeyValueMapping&gt;&lt;Key&gt;Content-Encoding&lt;/Key&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;/KeyValueMapping&gt;&lt;KeyValueMapping&gt;&lt;Key&gt;Vary&lt;/Key&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;/KeyValueMapping&gt;&lt;KeyValueMapping&gt;&lt;Key&gt;Connection&lt;/Key&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;/KeyValueMapping&gt;&lt;KeyValueMapping&gt;&lt;Key&gt;Content-Length&lt;/Key&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;/KeyValueMapping&gt;&lt;KeyValueMapping&gt;&lt;Key&gt;Content-Type&lt;/Key&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;/KeyValueMapping&gt;&lt;KeyValueMapping&gt;&lt;Key&gt;Date&lt;/Key&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;/KeyValueMapping&gt;&lt;KeyValueMapping&gt;&lt;Key&gt;Server&lt;/Key&gt;&lt;Target&gt;&amp;lt;NOT-MAPPED&amp;gt;&lt;/Target&gt;&lt;Required&gt;false&lt;/Required&gt;&lt;/KeyValueMapping&gt;&lt;/ArrayOfKeyValueMapping&gt;"
              ResponseCookieMappings="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-16&quot;?&gt;&lt;ArrayOfKeyValueMapping xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; /&gt;"
              CookieContainerVariable=""
              ConvertXmlToJson="False"
              ResponseDataVariable="User::CMResponse"
              ResponseStatusCodeVariable="User::CMResponseCode"
              ResponseContentType="Json"
              ResponseContentFilter=""
              ResponseCharset=""
              ValidateResponse="False"
              ValidationRules="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-16&quot;?&gt;&lt;ResponseValidationSetting xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot;&gt;&lt;MatchAny&gt;false&lt;/MatchAny&gt;&lt;Rules&gt;&lt;ResponseValidationRule xsi:type=&quot;StatusCodeValidationRule&quot;&gt;&lt;Enabled&gt;false&lt;/Enabled&gt;&lt;Operator&gt;Eq&lt;/Operator&gt;&lt;StatusCode&gt;200&lt;/StatusCode&gt;&lt;/ResponseValidationRule&gt;&lt;ResponseValidationRule xsi:type=&quot;ContentValidationRule&quot;&gt;&lt;Enabled&gt;false&lt;/Enabled&gt;&lt;Operator&gt;Eq&lt;/Operator&gt;&lt;Value /&gt;&lt;/ResponseValidationRule&gt;&lt;ResponseValidationRule xsi:type=&quot;HeaderValidationRule&quot;&gt;&lt;Enabled&gt;false&lt;/Enabled&gt;&lt;Operator&gt;Eq&lt;/Operator&gt;&lt;KeyName /&gt;&lt;Value /&gt;&lt;DataType&gt;String&lt;/DataType&gt;&lt;/ResponseValidationRule&gt;&lt;/Rules&gt;&lt;/ResponseValidationSetting&gt;"
              ConsumeResponseOnError="False"
              ContineOnAnyError="False"
              ContineOnErrorForMessage="False"
              ContineOnErrorForStatusCode="False"
              ErrorStatusCodeToMatch="404"
              MatchForEqual="True"
              ErrorSubstringToMatch=""
              ContineOn404Error="False"
              SaveErrorFlagToVariable="False"
              ErrorFlagVariableName=""
              LogLevel="Normal"
              PrefixTimestamp="False" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\No match found, need to allocate to campaign\Set Campaign ID (Int)"
          DTS:CreationName="Microsoft.ExpressionTask"
          DTS:Description="Expression Task"
          DTS:DTSID="{9c5a1494-76f2-46d1-a8bd-2f13b0ba5818}"
          DTS:ExecutableType="Microsoft.ExpressionTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Set Campaign ID (Int)"
          DTS:ThreadHint="2">
          <DTS:Variables />
          <DTS:ObjectData>
            <ExpressionTask
              Expression="@[User::intCampaignID]  = (DT_I4) @[User::CampaignID]" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\No match found, need to allocate to campaign.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{c33774cb-860a-4c2e-b354-8a64f5622eca}"
          DTS:From="Package\No match found, need to allocate to campaign\Read Campaign Member 2"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\No match found, need to allocate to campaign\Parse and Check For Error" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\No match found, need to allocate to campaign.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{4245DEE5-4CE5-4564-B01A-5A73411436FB}"
          DTS:From="Package\No match found, need to allocate to campaign\Populate Campaign Member rid and etag"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\No match found, need to allocate to campaign\Populate Campaign Member Status Activity" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\No match found, need to allocate to campaign.PrecedenceConstraints[Constraint 2]"
          DTS:CreationName=""
          DTS:DTSID="{0B2E32E7-6DD0-4E89-9A38-66E33B9BABB5}"
          DTS:EvalOp="1"
          DTS:Expression="@[User::APIResponseErrorMsg]==&quot;&quot;&amp;&amp; @[User::CampaignID]!=&quot;&quot;"
          DTS:From="Package\No match found, need to allocate to campaign\Parse and Check For Error"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 2"
          DTS:To="Package\No match found, need to allocate to campaign\Set Campaign ID (Int)" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\No match found, need to allocate to campaign.PrecedenceConstraints[Constraint 3]"
          DTS:CreationName=""
          DTS:DTSID="{BA2E26C0-7186-4557-92F2-966248D49786}"
          DTS:From="Package\No match found, need to allocate to campaign\Set Campaign ID (Int)"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 3"
          DTS:To="Package\No match found, need to allocate to campaign\Populate Campaign Member rid and etag" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\No match found, need to allocate to campaign.PrecedenceConstraints[Constraint 7]"
          DTS:CreationName=""
          DTS:DTSID="{fb6782c4-bc80-4df8-8eec-f190dc576cbc}"
          DTS:EvalOp="1"
          DTS:Expression="@[User::APIResponseErrorMsg]!=&quot;&quot;"
          DTS:From="Package\No match found, need to allocate to campaign\Parse and Check For Error"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 7"
          DTS:To="Package\No match found, need to allocate to campaign\Insert error log into database" />
      </DTS:PrecedenceConstraints>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{4AC5D956-CCF7-473D-8983-88A16BC9A781}"
          DTS:ObjectName="{4AC5D956-CCF7-473D-8983-88A16BC9A781}"
          DTS:ValueIndex="0"
          DTS:VariableName="User::CampaignMemberID" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Set last run variables"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{6FE5F3B3-217F-4153-970D-00C50D2BF7BF}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Set last run variables"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{0533A634-9E92-4D46-8F14-E1BCF2F6C3FE}"
          SQLTask:SqlStatementSource="IF NOT EXISTS (&#xA;    SELECT NULL FROM dbo.PackageLastRun WHERE PackageName = 'CampaignMemberStatusPull' AND AccountId = ?&#xA;)&#xA;BEGIN&#xA;    INSERT INTO dbo.PackageLastRun&#xA;    VALUES ('CampaignMemberStatusPull', ?, '2010-01-01', GETDATE())&#xA;END&#xA;&#xA;SELECT GETDATE() AS NextRunTime,&#xA;&#x9;DATEDIFF(SECOND, '19700101', DATEADD(HOUR, -2, LastRunTime)) AS LastRunTime&#xA;FROM dbo.PackageLastRun&#xA;WHERE PackageName = 'CampaignMemberStatusPull' AND AccountId = ?"
          SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ResultBinding
            SQLTask:ResultName="NextRunTime"
            SQLTask:DtsVariableName="User::PackageStartForNextRun" />
          <SQLTask:ResultBinding
            SQLTask:ResultName="LastRunTime"
            SQLTask:DtsVariableName="User::ProcessingStart" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="@AccountID"
            SQLTask:DtsVariableName="$Package::AccountID"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="3"
            SQLTask:ParameterSize="-1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="@AccountID"
            SQLTask:DtsVariableName="$Package::AccountID"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="3"
            SQLTask:ParameterSize="-1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="@AccountID"
            SQLTask:DtsVariableName="$Package::AccountID"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="3"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Set next run date"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{790FE49B-940E-4DD3-A985-B0FC1DAFCDDE}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Set next run date"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="1">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{0533A634-9E92-4D46-8F14-E1BCF2F6C3FE}"
          SQLTask:SqlStatementSource="UPDATE dbo.PackageLastRun&#xA;SET LastRunTime = ?&#xA;WHERE PackageName = 'CampaignMemberStatusPull'&#xA;&#x9;AND AccountId = ?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="@LastRunDate"
            SQLTask:DtsVariableName="User::PackageStartForNextRun"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="7"
            SQLTask:ParameterSize="-1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="@AccountID"
            SQLTask:DtsVariableName="$Package::AccountID"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="3"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Set SSIS variables from XML"
      DTS:CreationName="ZappySys.XmlParserTask"
      DTS:Description="ZS Xml Parser Task"
      DTS:DTSID="{FEE0D4AE-C795-44CF-B2A9-388053EC5C3D}"
      DTS:ExecutableType="ZappySys.XmlParserTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Set SSIS variables from XML"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <XmlParserTask
          SourceAccessMode="Connection"
          SourceVariable=""
          SourceConnection="{9498D122-D9CC-4DAC-8EC1-6CE457538D5F}"
          SourceDirectValue="&lt;!-- &#xA;Using XML Parser Task you can extract values from XML document using XPath Expression &#xA;See example in below grid. Read description for each mapping.&#xA;See more examples: https://msdn.microsoft.com/en-us/library/ms256086(v=vs.110).aspx&#xA;--&gt;&#xA;&lt;catalog&gt;&#xA;   &lt;book id=&quot;bk101&quot;&gt;&#xA;      &lt;author&gt;Gambardella, Matthew&lt;/author&gt;&#xA;      &lt;title&gt;XML Developer's Guide&lt;/title&gt;&#xA;      &lt;genre&gt;Computer&lt;/genre&gt;&#xA;      &lt;price&gt;44.95&lt;/price&gt;&#xA;      &lt;publish_date&gt;2000-10-01&lt;/publish_date&gt;&#xA;      &lt;description&gt;An in-depth look at creating applications &#xA;      with XML.&lt;/description&gt;&#xA;   &lt;/book&gt;&#xA;   &lt;book id=&quot;bk102&quot;&gt;&#xA;      &lt;author&gt;Ralls, Kim&lt;/author&gt;&#xA;      &lt;title&gt;Midnight Rain&lt;/title&gt;&#xA;      &lt;genre&gt;Fantasy&lt;/genre&gt;&#xA;      &lt;price&gt;5.95&lt;/price&gt;&#xA;      &lt;publish_date&gt;2000-12-16&lt;/publish_date&gt;&#xA;      &lt;description&gt;A former architect battles corporate zombies, &#xA;      an evil sorceress, and her own childhood to become queen &#xA;      of the world.&lt;/description&gt;&#xA;   &lt;/book&gt;&#xA;   &lt;book id=&quot;bk103&quot;&gt;&#xA;      &lt;author&gt;Corets, Eva&lt;/author&gt;&#xA;      &lt;title&gt;Maeve Ascendant&lt;/title&gt;&#xA;      &lt;genre&gt;Fantasy&lt;/genre&gt;&#xA;      &lt;price&gt;5.95&lt;/price&gt;&#xA;      &lt;publish_date&gt;2000-11-17&lt;/publish_date&gt;&#xA;      &lt;description&gt;After the collapse of a nanotechnology &#xA;      society in England, the young survivors lay the &#xA;      foundation for a new society.&lt;/description&gt;&#xA;   &lt;/book&gt;&#xA;   &lt;book id=&quot;bk104&quot;&gt;&#xA;      &lt;author&gt;Corets, Eva&lt;/author&gt;&#xA;      &lt;title&gt;Oberon's Legacy&lt;/title&gt;&#xA;      &lt;genre&gt;Fantasy&lt;/genre&gt;&#xA;      &lt;price&gt;5.95&lt;/price&gt;&#xA;      &lt;publish_date&gt;2001-03-10&lt;/publish_date&gt;&#xA;      &lt;description&gt;In post-apocalypse England, the mysterious &#xA;      agent known only as Oberon helps to create a new life &#xA;      for the inhabitants of London. Sequel to Maeve &#xA;      Ascendant.&lt;/description&gt;&#xA;   &lt;/book&gt;&#xA;&lt;/catalog&gt;"
          TargetSettings="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-16&quot;?&gt;&lt;XmlParserSetting xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot;&gt;&lt;Mappings&gt;&lt;XmlParserMapping&gt;&lt;Path&gt;/SSISVariables/RexAPIWebURL&lt;/Path&gt;&lt;Target&gt;User::RexAPIWebURL&lt;/Target&gt;&lt;Required&gt;true&lt;/Required&gt;&lt;Description /&gt;&lt;/XmlParserMapping&gt;&lt;XmlParserMapping&gt;&lt;Path&gt; /SSISVariables/PackageUser&lt;/Path&gt;&lt;Target&gt;User::PackageUser&lt;/Target&gt;&lt;Required&gt;true&lt;/Required&gt;&lt;Description /&gt;&lt;/XmlParserMapping&gt;&lt;XmlParserMapping&gt;&lt;Path&gt;/SSISVariables/PackageErrorEmail&lt;/Path&gt;&lt;Target&gt;User::PackageErrorEmail&lt;/Target&gt;&lt;Required&gt;true&lt;/Required&gt;&lt;Description /&gt;&lt;/XmlParserMapping&gt;&lt;XmlParserMapping&gt;&lt;Path&gt; /SSISVariables/PackagePassword&lt;/Path&gt;&lt;Target&gt;User::PackageUserPassword&lt;/Target&gt;&lt;Required&gt;true&lt;/Required&gt;&lt;Description /&gt;&lt;/XmlParserMapping&gt;&lt;/Mappings&gt;&lt;Path /&gt;&lt;/XmlParserSetting&gt;"
          LogLevel="Normal"
          PrefixTimestamp="False" />
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{21222E67-3AEC-49C1-A820-BFED857F22EA}"
      DTS:From="Package\Get auth key"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Determine upsert list" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{1751CB84-799A-4742-BE2F-D63743167FDF}"
      DTS:From="Package\Set next run date"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Insert success log into database" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{EFD1324A-5E1E-42DE-8DB8-EF78AAFF27CB}"
      DTS:From="Package\Determine upsert list"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\Foreach Loop Container" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 3]"
      DTS:CreationName=""
      DTS:DTSID="{6337C8BB-9646-4649-B0E1-0AE150F1C479}"
      DTS:From="Package\No match found, need to allocate to campaign"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 3"
      DTS:To="Package\Set next run date" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 4]"
      DTS:CreationName=""
      DTS:DTSID="{854C3F2B-CE2C-4264-BCC3-4A236EEED91F}"
      DTS:From="Package\Set SSIS variables from XML"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 4"
      DTS:To="Package\Set last run variables" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 5]"
      DTS:CreationName=""
      DTS:DTSID="{928A57B1-FD71-49BD-9333-790827EA818D}"
      DTS:From="Package\Set last run variables"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 5"
      DTS:To="Package\Get auth key" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 6]"
      DTS:CreationName=""
      DTS:DTSID="{3FF3B185-1211-4BAA-8025-8EBD3D2DF44F}"
      DTS:From="Package\Insert success log into database"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 6"
      DTS:To="Package\Email"
      DTS:Value="1" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 7]"
      DTS:CreationName=""
      DTS:DTSID="{DEB13706-CA8F-4175-956E-23E885F80AB9}"
      DTS:EvalOp="4"
      DTS:Expression="@[User::RexToken]  == &quot;&quot;"
      DTS:From="Package\Get auth key"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 7"
      DTS:To="Package\Insert error log into database"
      DTS:Value="1" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 8]"
      DTS:CreationName=""
      DTS:DTSID="{A08E5DAB-049C-4C8E-8DE1-D171A6C8DA57}"
      DTS:From="Package\Foreach Loop Container"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 8"
      DTS:To="Package\No match found, need to allocate to campaign" />
  </DTS:PrecedenceConstraints>
  <DTS:EventHandlers>
    <DTS:EventHandler
      DTS:refId="Package.EventHandlers[OnError]"
      DTS:CreationName="OnError"
      DTS:DTSID="{C098D6AA-282F-4A87-A74A-7ED72B19A32F}"
      DTS:EventID="0"
      DTS:EventName="OnError"
      DTS:LocaleID="-1">
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="The propagate property of the event"
          DTS:DTSID="{157FF3D7-454A-4CEC-828B-498A5D51C620}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="System"
          DTS:ObjectName="Propagate">
          <DTS:VariableValue
            DTS:DataType="11">-1</DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnError]\Email error"
          DTS:CreationName="ZappySys.HtmlEmailTask"
          DTS:Description="Email Auth Failure"
          DTS:DTSID="{E2246856-B16B-484F-84A4-EF911028D3DE}"
          DTS:ExecutableType="ZappySys.HtmlEmailTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Email error"
          DTS:TaskContact="HTML Email Task; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support">
          <DTS:Variables />
          <DTS:ObjectData>
            <HtmlEmailTask
              SmtpConnection="SMTP"
              IsHtmlEmail="True"
              DefaultStyle="&#xA;&lt;style type=&quot;text/css&quot;&gt;&#xA;body,div,p,span,td,th,table {&#xA; font-family: Helvetica, Arial, sans-serif;&#xA; font-size: 10pt; &#xA;}&#xA;h1,h2,h3,h4,h5{&#xA;font-family: Helvetica, Arial, sans-serif;&#xA;}&#xA;&#xA;table { &#xA; border-collapse: &#xA; collapse; border-spacing: 0; &#xA;}&#xA;&#xA;tr.odd    {background-color: #cccccc}&#xA;tr.even   {background-color: #fafafa}&#xA;td, th { border: 1px solid #bbb;padding: 5 5 5 5} &#xA;th { background: #F3F3F3;  font-weight: bold;}&#xA;&lt;/style&gt;&#xA;&#xA;"
              Subject="Error occured in {{System::PackageName}}"
              From="alerts@spicerhaart.co.uk"
              To="{{User::PackageErrorEmail}}"
              Cc=""
              ReplyTo=""
              Bcc=""
              Attachments=""
              EmailPriority="High"
              MessageSourceType="Direct"
              MessageDirectValue="&lt;p&gt;Error occured and could not be logged in database&lt;p /&gt;&#xA;&lt;br&gt;&#xA;&lt;p&gt;Error code: {{System::ErrorCode}}&lt;p /&gt;&#xA;&lt;br&gt;&#xA;&lt;p&gt;Error message: {{System::ErrorDescription}}&lt;p /&gt;"
              MessageFileConnection=""
              MessageVariable=""
              LogLevel="Normal"
              PrefixTimestamp="False" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnError]\Insert error log into database"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{10E9927D-3EE8-4CE3-A556-4E40C963324C}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Insert error log into database"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{0533A634-9E92-4D46-8F14-E1BCF2F6C3FE}"
              SQLTask:SqlStatementSource="INSERT INTO SSISErrorLog&#xA;(PackageName, StartTime, ErrorCode, ErrorDescription, AccountID)&#xA;VALUES&#xA;(?, ?, ?, ?, ?)" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@PackageName"
                SQLTask:DtsVariableName="System::PackageName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@StartTime"
                SQLTask:DtsVariableName="System::StartTime"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="7"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@ErrorCode"
                SQLTask:DtsVariableName="System::ErrorCode"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@ErrorDescription"
                SQLTask:DtsVariableName="System::ErrorDescription"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@AccountID"
                SQLTask:DtsVariableName="$Package::AccountID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package.EventHandlers[OnError].PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{F215518B-B0D2-44DC-8906-A6D1A020AFA4}"
          DTS:From="Package.EventHandlers[OnError]\Insert error log into database"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package.EventHandlers[OnError]\Email error"
          DTS:Value="1" />
      </DTS:PrecedenceConstraints>
    </DTS:EventHandler>
  </DTS:EventHandlers>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="64" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="177,42"
          Id="Package\Determine upsert list"
          TopLeft="206,310.5" />
        <NodeLayout
          Size="107,42"
          Id="Package\Email"
          TopLeft="222,1078.5" />
        <NodeLayout
          Size="217,42"
          Id="Package\Foreach Loop Container\Insert error log into database"
          TopLeft="5.50000000000006,209.5" />
        <NodeLayout
          Size="210,42"
          Id="Package\Foreach Loop Container\Parse and Check For Error"
          TopLeft="350.5,107.5" />
        <NodeLayout
          Size="291,42"
          Id="Package\Foreach Loop Container\Populate Campaign Member Status Activity"
          TopLeft="231.5,299.5" />
        <NodeLayout
          Size="211,42"
          Id="Package\Foreach Loop Container\Read Campaign Member 1"
          TopLeft="328,5.5" />
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint]"
          TopLeft="433.5,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="22,60"
              Start="0,0"
              End="22,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26" />
                  <mssgle:CubicBezierSegment
                    Point1="0,26"
                    Point2="0,30"
                    Point3="4,30" />
                  <mssgle:LineSegment
                    End="18,30" />
                  <mssgle:CubicBezierSegment
                    Point1="18,30"
                    Point2="22,30"
                    Point3="22,34" />
                  <mssgle:LineSegment
                    End="22,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 3]"
          TopLeft="489.166666666667,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-112.166666666667,150"
              Start="0,0"
              End="-112.166666666667,142.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,56.6805293005671" />
                  <mssgle:CubicBezierSegment
                    Point1="0,56.6805293005671"
                    Point2="0,60.6805293005671"
                    Point3="-4,60.6805293005671" />
                  <mssgle:LineSegment
                    End="-108.166666666667,60.6805293005671" />
                  <mssgle:CubicBezierSegment
                    Point1="-108.166666666667,60.6805293005671"
                    Point2="-112.166666666667,60.6805293005671"
                    Point3="-112.166666666667,64.6805293005671" />
                  <mssgle:LineSegment
                    End="-112.166666666667,142.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-64.0833333333333,65.6805293005671,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 7]"
          TopLeft="421.833333333333,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-307.833333333333,60"
              Start="0,0"
              End="-307.833333333333,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.2722117202268" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.2722117202268"
                    Point2="0,24.2722117202268"
                    Point3="-4,24.2722117202268" />
                  <mssgle:LineSegment
                    End="-303.833333333333,24.2722117202268" />
                  <mssgle:CubicBezierSegment
                    Point1="-303.833333333333,24.2722117202268"
                    Point2="-307.833333333333,24.2722117202268"
                    Point3="-307.833333333333,28.2722117202268" />
                  <mssgle:LineSegment
                    End="-307.833333333333,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-161.916666666667,29.2722117202268,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="602,409"
          Size="602,452"
          Id="Package\Foreach Loop Container"
          TopLeft="5.50000000000011,413.5" />
        <NodeLayout
          Size="141,42"
          Id="Package\Get auth key"
          TopLeft="484,209.5" />
        <NodeLayout
          Size="217,42"
          Id="Package\Insert error log into database"
          TopLeft="445,311.5" />
        <NodeLayout
          Size="230,42"
          Id="Package\Insert success log into database"
          TopLeft="195.5,974.5" />
        <NodeLayout
          Size="251,42"
          Id="Package\No match found, need to allocate to campaign\Allocate Market Lead To Campaign"
          TopLeft="426.5,434.5" />
        <NodeLayout
          Size="217,42"
          Id="Package\No match found, need to allocate to campaign\Insert error log into database"
          TopLeft="5.50000000000006,209.5" />
        <NodeLayout
          Size="210,42"
          Id="Package\No match found, need to allocate to campaign\Parse and Check For Error"
          TopLeft="349.5,106.5" />
        <NodeLayout
          Size="280,42"
          Id="Package\No match found, need to allocate to campaign\Populate Campaign Member rid and etag"
          TopLeft="73,376" />
        <NodeLayout
          Size="291,42"
          Id="Package\No match found, need to allocate to campaign\Populate Campaign Member Status Activity"
          TopLeft="63,449" />
        <NodeLayout
          Size="211,42"
          Id="Package\No match found, need to allocate to campaign\Read Campaign Member 2"
          TopLeft="328,5.5" />
        <NodeLayout
          Size="185,42"
          Id="Package\No match found, need to allocate to campaign\Set Campaign ID (Int)"
          TopLeft="445,331" />
        <EdgeLayout
          Id="Package\No match found, need to allocate to campaign.PrecedenceConstraints[Constraint]"
          TopLeft="433.5,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="21,59"
              Start="0,0"
              End="21,51.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,25.5"
                    Point2="0,29.5"
                    Point3="4,29.5" />
                  <mssgle:LineSegment
                    End="17,29.5" />
                  <mssgle:CubicBezierSegment
                    Point1="17,29.5"
                    Point2="21,29.5"
                    Point3="21,33.5" />
                  <mssgle:LineSegment
                    End="21,51.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\No match found, need to allocate to campaign.PrecedenceConstraints[Constraint 1]"
          TopLeft="210.75,418">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,31"
              Start="0,0"
              End="0,23.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\No match found, need to allocate to campaign.PrecedenceConstraints[Constraint 2]"
          TopLeft="488.166666666667,148.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="49.3333333333334,182.5"
              Start="0,0"
              End="49.3333333333334,175">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,69.82797731569" />
                  <mssgle:CubicBezierSegment
                    Point1="0,69.82797731569"
                    Point2="0,73.82797731569"
                    Point3="4,73.82797731569" />
                  <mssgle:LineSegment
                    End="45.3333333333334,73.82797731569" />
                  <mssgle:CubicBezierSegment
                    Point1="45.3333333333334,73.82797731569"
                    Point2="49.3333333333334,73.82797731569"
                    Point3="49.3333333333334,77.82797731569" />
                  <mssgle:LineSegment
                    End="49.3333333333334,175" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="16.6666666666667,78.82797731569,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\No match found, need to allocate to campaign.PrecedenceConstraints[Constraint 3]"
          TopLeft="445,352">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-92,45"
              Start="0,0"
              End="-84.5,45">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-42,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-42,0"
                    Point2="-46,0"
                    Point3="-46,4" />
                  <mssgle:LineSegment
                    End="-46,41" />
                  <mssgle:CubicBezierSegment
                    Point1="-46,41"
                    Point2="-46,45"
                    Point3="-50,45" />
                  <mssgle:LineSegment
                    End="-84.5,45" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\No match found, need to allocate to campaign.PrecedenceConstraints[Constraint 7]"
          TopLeft="420.833333333333,148.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-306.833333333333,61"
              Start="0,0"
              End="-306.833333333333,53.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.6767485822306" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.6767485822306"
                    Point2="0,24.6767485822306"
                    Point3="-4,24.6767485822306" />
                  <mssgle:LineSegment
                    End="-302.833333333333,24.6767485822306" />
                  <mssgle:CubicBezierSegment
                    Point1="-302.833333333333,24.6767485822306"
                    Point2="-306.833333333333,24.6767485822306"
                    Point3="-306.833333333333,28.6767485822306" />
                  <mssgle:LineSegment
                    End="-306.833333333333,53.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-161.416666666667,29.6767485822306,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="721,547"
          Size="721,590"
          Id="Package\No match found, need to allocate to campaign"
          TopLeft="667.5,418.5" />
        <NodeLayout
          Size="178,42"
          Id="Package\Set last run variables"
          TopLeft="464.5,107.5" />
        <NodeLayout
          Size="161,42"
          Id="Package\Set next run date"
          TopLeft="357,907.5" />
        <NodeLayout
          Size="212,42"
          Id="Package\Set SSIS variables from XML"
          TopLeft="447.5,5.5" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="532.333333333333,251.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-237.833333333333,59"
              Start="0,0"
              End="-237.833333333333,51.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,19.9971949509117" />
                  <mssgle:CubicBezierSegment
                    Point1="0,19.9971949509117"
                    Point2="0,23.9971949509117"
                    Point3="-4,23.9971949509117" />
                  <mssgle:LineSegment
                    End="-233.833333333333,23.9971949509117" />
                  <mssgle:CubicBezierSegment
                    Point1="-233.833333333333,23.9971949509117"
                    Point2="-237.833333333333,23.9971949509117"
                    Point3="-237.833333333333,27.9971949509117" />
                  <mssgle:LineSegment
                    End="-237.833333333333,51.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="437.5,949.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-127,25"
              Start="0,0"
              End="-127,17.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,8.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,8.5"
                    Point2="0,12.5"
                    Point3="-4,12.5" />
                  <mssgle:LineSegment
                    End="-123,12.5" />
                  <mssgle:CubicBezierSegment
                    Point1="-123,12.5"
                    Point2="-127,12.5"
                    Point3="-127,16.5" />
                  <mssgle:LineSegment
                    End="-127,17.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="294.5,352.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="12.0000000000001,61"
              Start="0,0"
              End="12.0000000000001,53.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,26.5"
                    Point2="0,30.5"
                    Point3="4,30.5" />
                  <mssgle:LineSegment
                    End="8.00000000000011,30.5" />
                  <mssgle:CubicBezierSegment
                    Point1="8.00000000000011,30.5"
                    Point2="12.0000000000001,30.5"
                    Point3="12.0000000000001,34.5" />
                  <mssgle:LineSegment
                    End="12.0000000000001,53.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 3]"
          TopLeft="667.5,810.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-149.5,118"
              Start="0,0"
              End="-142,118">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-56.0425963488844,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-56.0425963488844,0"
                    Point2="-60.0425963488844,0"
                    Point3="-60.0425963488844,4" />
                  <mssgle:LineSegment
                    End="-60.0425963488844,114" />
                  <mssgle:CubicBezierSegment
                    Point1="-60.0425963488844,114"
                    Point2="-60.0425963488844,118"
                    Point3="-64.0425963488844,118" />
                  <mssgle:LineSegment
                    End="-142,118" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 4]"
          TopLeft="553.5,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 5]"
          TopLeft="554,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 6]"
          TopLeft="310.5,1016.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-35,62"
              Start="0,0"
              End="-35,54.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,27" />
                  <mssgle:CubicBezierSegment
                    Point1="0,27"
                    Point2="0,31"
                    Point3="-4,31" />
                  <mssgle:LineSegment
                    End="-31,31" />
                  <mssgle:CubicBezierSegment
                    Point1="-31,31"
                    Point2="-35,31"
                    Point3="-35,35" />
                  <mssgle:LineSegment
                    End="-35,54.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-32.74134765625,36,30.4826953125,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 7]"
          TopLeft="576.666666666667,251.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-23.1666666666666,60"
              Start="0,0"
              End="-23.1666666666666,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.4039270687237" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.4039270687237"
                    Point2="0,24.4039270687237"
                    Point3="-4,24.4039270687237" />
                  <mssgle:LineSegment
                    End="-19.1666666666666,24.4039270687237" />
                  <mssgle:CubicBezierSegment
                    Point1="-19.1666666666666,24.4039270687237"
                    Point2="-23.1666666666666,24.4039270687237"
                    Point3="-23.1666666666666,28.4039270687237" />
                  <mssgle:LineSegment
                    End="-23.1666666666666,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-35.6933333333333,29.4039270687237,48.22,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 8]"
          TopLeft="607.5,639.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="59.9999999999999,-23"
              Start="0,0"
              End="52.4999999999999,-23">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="31.9026369168356,0" />
                  <mssgle:CubicBezierSegment
                    Point1="31.9026369168356,0"
                    Point2="35.9026369168356,0"
                    Point3="35.9026369168356,-4" />
                  <mssgle:LineSegment
                    End="35.9026369168356,-19" />
                  <mssgle:CubicBezierSegment
                    Point1="35.9026369168356,-19"
                    Point2="35.9026369168356,-23"
                    Point3="39.9026369168356,-23" />
                  <mssgle:LineSegment
                    End="52.4999999999999,-23" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <DtsEventHandler
    design-time-name="Package.EventHandlers[OnError]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="NaN,NaN"
          Id="Package.EventHandlers[OnError]\Email error"
          TopLeft="NaN,NaN" />
        <NodeLayout
          Size="NaN,NaN"
          Id="Package.EventHandlers[OnError]\Insert error log into database"
          TopLeft="NaN,NaN" />
        <EdgeLayout
          Id="Package.EventHandlers[OnError].PrecedenceConstraints[Constraint]"
          TopLeft="NaN,NaN">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="{assembly:Null}"
              Start="0,0"
              End="0,0">
              <mssgle:Curve.Segments>
                <assembly:Null />
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <TaskHost
    design-time-name="Package\Determine upsert list">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="144,42"
          Id="Package\Determine upsert list\etag compare"
          TopLeft="262,413.5" />
        <NodeLayout
          Size="152,42"
          Id="Package\Determine upsert list\Lookup  record"
          TopLeft="498.5,310.5" />
        <NodeLayout
          Size="198,42"
          Id="Package\Determine upsert list\Convert rid column to int"
          TopLeft="466,208.5" />
        <NodeLayout
          Size="191,42"
          Id="Package\Determine upsert list\Parse Response Rows"
          TopLeft="483.5,107.5" />
        <NodeLayout
          Size="175,42"
          Id="Package\Determine upsert list\Ignore list (Equality)"
          TopLeft="5.5,515.5" />
        <NodeLayout
          Size="150,42"
          Id="Package\Determine upsert list\Matching etags"
          TopLeft="18,617.5" />
        <NodeLayout
          Size="246,42"
          Id="Package\Determine upsert list\Campaign Member etag collection"
          TopLeft="479,4.5" />
        <NodeLayout
          Size="144,42"
          Id="Package\Determine upsert list\AllocationList"
          TopLeft="668.5,501.5" />
        <NodeLayout
          Size="199,42"
          Id="Package\Determine upsert list\Persist object to variable"
          TopLeft="256.5,676.5" />
        <EdgeLayout
          Id="Package\Determine upsert list.Paths[JsonParserTransformOutput]"
          TopLeft="579,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-14,59"
              Start="0,0"
              End="-14,51.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,25.5"
                    Point2="0,29.5"
                    Point3="-4,29.5" />
                  <mssgle:LineSegment
                    End="-10,29.5" />
                  <mssgle:CubicBezierSegment
                    Point1="-10,29.5"
                    Point2="-14,29.5"
                    Point3="-14,33.5" />
                  <mssgle:LineSegment
                    End="-14,51.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Determine upsert list.Paths[Do Nothing]"
          TopLeft="311.333333333333,455.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-218.333333333333,60"
              Start="0,0"
              End="-218.333333333333,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.3956043956044" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.3956043956044"
                    Point2="0,24.3956043956044"
                    Point3="-4,24.3956043956044" />
                  <mssgle:LineSegment
                    End="-214.333333333333,24.3956043956044" />
                  <mssgle:CubicBezierSegment
                    Point1="-214.333333333333,24.3956043956044"
                    Point2="-218.333333333333,24.3956043956044"
                    Point3="-218.333333333333,28.3956043956044" />
                  <mssgle:LineSegment
                    End="-218.333333333333,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-134.344654947916,29.3956043956044,50.3559765625,11.6630859375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Determine upsert list.Paths[Data Conversion Output]"
          TopLeft="565,250.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="9.5,60"
              Start="0,0"
              End="9.5,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26" />
                  <mssgle:CubicBezierSegment
                    Point1="0,26"
                    Point2="0,30"
                    Point3="4,30" />
                  <mssgle:LineSegment
                    End="5.5,30" />
                  <mssgle:CubicBezierSegment
                    Point1="5.5,30"
                    Point2="9.5,30"
                    Point3="9.5,34" />
                  <mssgle:LineSegment
                    End="9.5,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Determine upsert list.Paths[Update IDBS]"
          TopLeft="356.333333333333,455.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,221"
              Start="0,0"
              End="0,213.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,213.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-37.6611328125,98.75,75.322265625,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Determine upsert list.Paths[Row Count Output 1]"
          TopLeft="93,557.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Determine upsert list.Paths[Lookup No Match Output]"
          TopLeft="598.5,352.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="142,149"
              Start="0,0"
              End="142,141.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,56.53125" />
                  <mssgle:CubicBezierSegment
                    Point1="0,56.53125"
                    Point2="0,60.53125"
                    Point3="4,60.53125" />
                  <mssgle:LineSegment
                    End="138,60.53125" />
                  <mssgle:CubicBezierSegment
                    Point1="138,60.53125"
                    Point2="142,60.53125"
                    Point3="142,64.53125" />
                  <mssgle:LineSegment
                    End="142,141.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="15.19361328125,65.53125,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Determine upsert list.Paths[Lookup Match Output]"
          TopLeft="550.5,352.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-216.5,61"
              Start="0,0"
              End="-216.5,53.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.78125" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.78125"
                    Point2="0,24.78125"
                    Point3="-4,24.78125" />
                  <mssgle:LineSegment
                    End="-212.5,24.78125" />
                  <mssgle:CubicBezierSegment
                    Point1="-212.5,24.78125"
                    Point2="-216.5,24.78125"
                    Point3="-216.5,28.78125" />
                  <mssgle:LineSegment
                    End="-216.5,53.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-156.44138671875,29.78125,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Determine upsert list.Paths[JsonSourceOutput]"
          TopLeft="602,46.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-23,61"
              Start="0,0"
              End="-23,53.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,26.5"
                    Point2="0,30.5"
                    Point3="-4,30.5" />
                  <mssgle:LineSegment
                    End="-19,30.5" />
                  <mssgle:CubicBezierSegment
                    Point1="-19,30.5"
                    Point2="-23,30.5"
                    Point3="-23,34.5" />
                  <mssgle:LineSegment
                    End="-23,53.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Determine upsert list\Lookup  record">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string"></Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>